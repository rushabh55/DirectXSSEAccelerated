; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\New Scratch\DXUT\Core\DXUT.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUmvdLhxizgxsUwcfgUxlivUyrmUwvhpglkPCABCUdrmDCUzhhvnyobwvyftUwcfgOlyq@A1B899394B97429
PUBLIC	_GUID_VendorMicrosoft
PUBLIC	_IID_ID3D10Predicate
PUBLIC	_GUID_VendorMicrosoftBuiltIn
PUBLIC	_CLSID_WICPngDecoder
PUBLIC	_CLSID_WICPngDecoder1
PUBLIC	_CLSID_WICPngDecoder2
PUBLIC	_CLSID_WICBmpDecoder
PUBLIC	_CLSID_WICIcoDecoder
PUBLIC	_CLSID_WICJpegDecoder
PUBLIC	_CLSID_WICGifDecoder
PUBLIC	_CLSID_WICTiffDecoder
PUBLIC	_CLSID_WICWmpDecoder
PUBLIC	_CLSID_WICDdsDecoder
PUBLIC	_CLSID_WICBmpEncoder
PUBLIC	_CLSID_WICPngEncoder
PUBLIC	_CLSID_WICJpegEncoder
PUBLIC	_CLSID_WICGifEncoder
PUBLIC	_CLSID_WICTiffEncoder
PUBLIC	_CLSID_WICWmpEncoder
PUBLIC	_CLSID_WICDdsEncoder
PUBLIC	_GUID_ContainerFormatBmp
PUBLIC	_IID_ID3D11LibraryReflection
PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_ContainerFormatIco
PUBLIC	_GUID_ContainerFormatJpeg
PUBLIC	_GUID_ContainerFormatTiff
PUBLIC	_GUID_ContainerFormatGif
PUBLIC	_GUID_ContainerFormatWmp
PUBLIC	_GUID_ContainerFormatDds
PUBLIC	_CLSID_WICImagingCategories
PUBLIC	_CATID_WICBitmapDecoders
PUBLIC	_CATID_WICBitmapEncoders
PUBLIC	_CATID_WICPixelFormats
PUBLIC	_CATID_WICFormatConverters
PUBLIC	_CATID_WICMetadataReader
PUBLIC	_CATID_WICMetadataWriter
PUBLIC	_CLSID_WICDefaultFormatConverter
PUBLIC	_IID_ID3D11SamplerState
PUBLIC	_CLSID_WICFormatConverterHighColor
PUBLIC	_CLSID_WICFormatConverterNChannel
PUBLIC	_CLSID_WICFormatConverterWMPhoto
PUBLIC	_CLSID_WICPlanarFormatConverter
PUBLIC	_IID_ID3D11FunctionReflection
PUBLIC	_IID_ID3D10EffectShaderResourceVariable
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	_IID_ID3D11VideoDecoder
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	_IID_ID3D10DepthStencilState
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	_GUID_WICPixelFormatDontCare
PUBLIC	_GUID_WICPixelFormat1bppIndexed
PUBLIC	_GUID_WICPixelFormat2bppIndexed
PUBLIC	_GUID_WICPixelFormat4bppIndexed
PUBLIC	_IID_ID3D10InfoQueue
PUBLIC	_GUID_WICPixelFormat8bppIndexed
PUBLIC	_GUID_WICPixelFormatBlackWhite
PUBLIC	_GUID_WICPixelFormat2bppGray
PUBLIC	_IID_ID3D11FunctionParameterReflection
PUBLIC	_GUID_WICPixelFormat4bppGray
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat24bppRGB
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppPBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_IID_ID3D11Module
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	_GUID_WICPixelFormat32bppPRGBA
PUBLIC	_GUID_WICPixelFormat48bppRGB
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat64bppBGRA
PUBLIC	_GUID_WICPixelFormat64bppPRGBA
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	_GUID_WICPixelFormat64bppPBGRA
PUBLIC	_IID_ID3D10Counter
PUBLIC	_GUID_WICPixelFormat16bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppBGR101010
PUBLIC	_GUID_WICPixelFormat48bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat48bppBGRFixedPoint
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	_GUID_WICPixelFormat96bppRGBFixedPoint
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	_IID_ID3D11Asynchronous
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	_GUID_WICPixelFormat128bppPRGBAFloat
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	_GUID_WICPixelFormat128bppRGBFloat
PUBLIC	_GUID_WICPixelFormat32bppCMYK
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	_GUID_WICPixelFormat64bppRGBAFixedPoint
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	_GUID_WICPixelFormat64bppBGRAFixedPoint
PUBLIC	_IID_ID3D11ModuleInstance
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	_IID_ID3D10Device
PUBLIC	_GUID_WICPixelFormat64bppRGBFixedPoint
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegate3
PUBLIC	_GUID_WICPixelFormat128bppRGBAFixedPoint
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMask3
PUBLIC	_GUID_WICPixelFormat128bppRGBFixedPoint
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskX
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskY
PUBLIC	_GUID_WICPixelFormat64bppRGBHalf
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskZ
PUBLIC	_GUID_WICPixelFormat48bppRGBHalf
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskW
PUBLIC	_GUID_WICPixelFormat32bppRGBE
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	_GUID_WICPixelFormat32bppGrayFixedPoint
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	_GUID_WICPixelFormat64bppCMYK
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	_GUID_WICPixelFormat24bpp3Channels
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	_GUID_WICPixelFormat32bpp4Channels
PUBLIC	_IID_ID3D10BlendState
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	_GUID_WICPixelFormat40bpp5Channels
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	_GUID_WICPixelFormat48bpp6Channels
PUBLIC	_GUID_WICPixelFormat56bpp7Channels
PUBLIC	_GUID_WICPixelFormat64bpp8Channels
PUBLIC	_GUID_WICPixelFormat48bpp3Channels
PUBLIC	_IID_ID3D10EffectRenderTargetViewVariable
PUBLIC	_GUID_WICPixelFormat64bpp4Channels
PUBLIC	_GUID_WICPixelFormat80bpp5Channels
PUBLIC	_GUID_WICPixelFormat96bpp6Channels
PUBLIC	_GUID_WICPixelFormat112bpp7Channels
PUBLIC	_GUID_WICPixelFormat128bpp8Channels
PUBLIC	_GUID_WICPixelFormat40bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat80bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat32bpp3ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat40bpp4ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat48bpp5ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat56bpp6ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat64bpp7ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat72bpp8ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat64bpp3ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat80bpp4ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat96bpp5ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat112bpp6ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat128bpp7ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat144bpp8ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat8bppY
PUBLIC	_GUID_WICPixelFormat8bppCb
PUBLIC	_GUID_WICPixelFormat8bppCr
PUBLIC	_GUID_WICPixelFormat16bppCbCr
PUBLIC	_IID_ID3D10RasterizerState
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	_IID_ID3D11ShaderResourceView
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	_IID_ID3D11Linker
PUBLIC	_IID_ID3D11VideoDevice
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	_GUID_DeviceType
PUBLIC	_IID_ID3D11Query
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	_IID_ID3D10Resource
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	_D3D11_CRYPTO_TYPE_AES128_CTR
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	_IID_ID3D11Predicate
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AliceBlue
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AntiqueWhite
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Aqua
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Aquamarine
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?Azure@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Azure
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?Beige@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Beige
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Bisque
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?Black@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Black
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::BlanchedAlmond
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?Blue@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Blue
PUBLIC	?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BlueViolet
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?Brown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Brown
PUBLIC	_IID_ID3D11LinkingNode
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BurlyWood
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::CadetBlue
PUBLIC	?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chartreuse
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chocolate
PUBLIC	?Coral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Coral
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::CornflowerBlue
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipY
PUBLIC	?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Cornsilk
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Crimson
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipW
PUBLIC	?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Cyan
PUBLIC	_IID_ID3D10EffectDepthStencilViewVariable
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkBlue
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkCyan
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkGoldenrod
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGray
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGreen
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkKhaki
PUBLIC	_IID_ID3D10ShaderReflection1
PUBLIC	?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkMagenta
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkOliveGreen
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	_IID_ID3D11FunctionLinkingGraph
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrange
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrchid
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkRed
PUBLIC	?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSalmon
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSeaGreen
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateBlue
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateGray
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkTurquoise
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkViolet
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepPink
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepSkyBlue
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DimGray
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DodgerBlue
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Firebrick
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::FloralWhite
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::ForestGreen
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Fuchsia
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Gainsboro
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GhostWhite
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?Gold@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gold
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Goldenrod
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?Gray@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gray
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?Green@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Green
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GreenYellow
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Honeydew
PUBLIC	?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::HotPink
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::IndianRed
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	_IID_ID3D10Buffer
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Indigo
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Ivory
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Khaki
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Lavender
PUBLIC	?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LavenderBlush
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	_IID_ID3D11Device
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LawnGreen
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LemonChiffon
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightBlue
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCoral
PUBLIC	?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCyan
PUBLIC	?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightGoldenrodYellow
PUBLIC	_IID_ID3D11VideoProcessorEnumerator
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGreen
PUBLIC	?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGray
PUBLIC	?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightPink
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSalmon
PUBLIC	?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSeaGreen
PUBLIC	?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSkyBlue
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSlateGray
PUBLIC	?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSteelBlue
PUBLIC	?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightYellow
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?Lime@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Lime
PUBLIC	?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LimeGreen
PUBLIC	?Linen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Linen
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Magenta
PUBLIC	?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Maroon
PUBLIC	?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumAquamarine
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumBlue
PUBLIC	?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumOrchid
PUBLIC	?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumPurple
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSeaGreen
PUBLIC	?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSlateBlue
PUBLIC	?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSpringGreen
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumTurquoise
PUBLIC	?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumVioletRed
PUBLIC	?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MidnightBlue
PUBLIC	?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MintCream
PUBLIC	?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MistyRose
PUBLIC	?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Moccasin
PUBLIC	?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::NavajoWhite
PUBLIC	?Navy@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Navy
PUBLIC	?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OldLace
PUBLIC	_IID_ID3D10EffectConstantBuffer
PUBLIC	?Olive@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Olive
PUBLIC	?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OliveDrab
PUBLIC	?Orange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orange
PUBLIC	_IID_ID3D11Counter
PUBLIC	?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OrangeRed
PUBLIC	?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orchid
PUBLIC	?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleGoldenrod
PUBLIC	?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PaleGreen
PUBLIC	?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleTurquoise
PUBLIC	?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleVioletRed
PUBLIC	?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PapayaWhip
PUBLIC	?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PeachPuff
PUBLIC	?Peru@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Peru
PUBLIC	?Pink@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Pink
PUBLIC	?Plum@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Plum
PUBLIC	?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PowderBlue
PUBLIC	?Purple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Purple
PUBLIC	?Red@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Red
PUBLIC	?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RosyBrown
PUBLIC	?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RoyalBlue
PUBLIC	?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SaddleBrown
PUBLIC	?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Salmon
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SandyBrown
PUBLIC	?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaGreen
PUBLIC	?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaShell
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Sienna
PUBLIC	?Silver@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Silver
PUBLIC	_IID_ID3D10Texture1D
PUBLIC	?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SkyBlue
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateBlue
PUBLIC	?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateGray
PUBLIC	?Snow@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Snow
PUBLIC	_IID_IDXGIObject
PUBLIC	_IID_ID3D11DeviceChild
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SpringGreen
PUBLIC	?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SteelBlue
PUBLIC	?Tan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Tan
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?Teal@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Teal
PUBLIC	?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Thistle
PUBLIC	?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Tomato
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Transparent
PUBLIC	_IID_ID3D11ClassInstance
PUBLIC	?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Turquoise
PUBLIC	?Violet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Violet
PUBLIC	?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Wheat
PUBLIC	?White@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::White
PUBLIC	?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::WhiteSmoke
PUBLIC	?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Yellow
PUBLIC	?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::YellowGreen
PUBLIC	_IID_ID3D10ShaderReflectionType
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	_DXGI_DEBUG_ALL
PUBLIC	_DXGI_DEBUG_DX
PUBLIC	_DXGI_DEBUG_DXGI
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	_DXGI_DEBUG_APP
PUBLIC	_IID_IDXGIDeviceSubObject
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	_IID_ID3D11ClassLinkage
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	_IID_ID3D10ShaderReflectionVariable
PUBLIC	_IID_IDXGIResource
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	_IID_ID3D11CommandList
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	_IID_ID3D10ShaderReflectionConstantBuffer
PUBLIC	_IID_IDXGIKeyedMutex
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	_IID_ID3D10EffectShaderVariable
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	_IID_ID3D11VideoProcessor
PUBLIC	_IID_IDXGISurface
PUBLIC	_IID_ID3D10ShaderReflection
PUBLIC	_IID_ID3D10Texture2D
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	_IID_IDXGIInfoQueue
PUBLIC	_IID_IDXGISurface1
PUBLIC	_IID_ID3D11RenderTargetView
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	_IID_ID3D11AuthenticatedChannel
PUBLIC	_IID_IDXGIAdapter
PUBLIC	_D3D11_AUTHENTICATED_QUERY_PROTECTION
PUBLIC	_D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE
PUBLIC	_D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE
PUBLIC	_D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION
PUBLIC	_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT
PUBLIC	_IID_ID3D11DepthStencilState
PUBLIC	_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS
PUBLIC	_D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT
PUBLIC	_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT
PUBLIC	_IID_ID3D11BlendState1
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	_IID_IDXGIOutput
PUBLIC	_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID
PUBLIC	_D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES
PUBLIC	_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT
PUBLIC	_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	_D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_PROTECTION
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE
PUBLIC	_IID_ID3D10EffectBlendVariable
PUBLIC	_IID_ID3D11Debug
PUBLIC	_IID_ID3D10Multithread
PUBLIC	_IID_ID3D10Texture3D
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	_IID_IDXGISwapChain
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	_IID_ID3D11SwitchToRef
PUBLIC	_IID_ID3D10View
PUBLIC	_IID_ID3D10Debug
PUBLIC	_IID_ID3D11RasterizerState1
PUBLIC	_IID_IDXGIDebug
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	_IID_IDXGIFactory
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	_IID_ID3DDeviceContextState
PUBLIC	_IID_IDXGIDebug1
PUBLIC	_IID_ID3D10EffectDepthStencilVariable
PUBLIC	_IID_ID3D10SwitchToRef
PUBLIC	_IID_ID3D10StateBlock
PUBLIC	_IID_ID3D11DeviceContext1
PUBLIC	_IID_ID3D11BlendState
PUBLIC	_IID_ID3D11DeviceContext
PUBLIC	?g_cs@@3U_RTL_CRITICAL_SECTION@@A		; g_cs
PUBLIC	_IID_ID3D11TracingDevice
PUBLIC	?g_bThreadSafe@@3_NA				; g_bThreadSafe
PUBLIC	_DXGI_DEBUG_D3D10
PUBLIC	_IID_IDXGIDevice
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	_IID_ID3D11RefTrackingOptions
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	_IID_ID3D11RefDefaultTrackingOptions
PUBLIC	_DXGI_DEBUG_D3D11
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	_IID_ID3D10EffectRasterizerVariable
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	_IID_ID3D11RasterizerState
PUBLIC	_IID_IDXGIFactory1
PUBLIC	_IID_ID3D10EffectType
PUBLIC	_IID_IDXGIAdapter1
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	_IID_IDXGIDevice1
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	_IID_ID3D10Blob
PUBLIC	_IID_ID3D11Resource
PUBLIC	_IID_ID3D10ShaderResourceView
PUBLIC	_IID_ID3D11Device1
PUBLIC	_IID_ID3D10EffectVariable
PUBLIC	?value@?$integral_constant@I$07@std@@2IB	; std::integral_constant<unsigned int,8>::value
PUBLIC	_IID_ID3D10EffectSamplerVariable
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	_IID_IDXGIDisplayControl
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	_IID_ID3DUserDefinedAnnotation
PUBLIC	__GUID_770aae78_f26f_4dba_a829_253c83d1b387
PUBLIC	_IID_ID3D11DepthStencilView
PUBLIC	_IID_ID3D11Buffer
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?value@?$integral_constant@I$03@std@@2IB	; std::integral_constant<unsigned int,4>::value
PUBLIC	_IID_ID3D10EffectScalarVariable
PUBLIC	__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	_IID_IDXGIOutputDuplication
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	_IID_ID3D10EffectPass
PUBLIC	_D3D11_KEY_EXCHANGE_RSAES_OAEP
PUBLIC	_IID_ID3D11CryptoSession
PUBLIC	_IID_ID3D11Texture1D
PUBLIC	_IID_ID3D10RenderTargetView
PUBLIC	_IID_ID3D11InfoQueue
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?value@?$integral_constant@I$01@std@@2IB	; std::integral_constant<unsigned int,2>::value
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	_IID_IDXGISurface2
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	_IID_ID3D10EffectTechnique
PUBLIC	_IID_IDXGIResource1
PUBLIC	?g_pDXUTState@@3PAVDXUTState@@A			; g_pDXUTState
PUBLIC	_IID_ID3D11VideoDecoderOutputView
PUBLIC	_SID_SCommandBarState
PUBLIC	__GUID_79cf2233_7536_4948_9d36_1e4692dc5760
PUBLIC	__GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	_IID_IDXGIDevice2
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	_IID_ID3D10EffectVectorVariable
PUBLIC	_IID_ID3D11Texture2D
PUBLIC	__GUID_77db970f_6276_48ba_ba28_070143b4392c
PUBLIC	_IID_ID3D10Effect
PUBLIC	__GUID_29038f61_3839_4626_91fd_086879011a05
PUBLIC	?value@?$integral_constant@I$00@std@@2IB	; std::integral_constant<unsigned int,1>::value
PUBLIC	_IID_ID3D11VideoProcessorInputView
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	_IID_ID3D10DepthStencilView
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?value@?$_Maximum@$S@std@@2IB			; std::_Maximum<>::value
PUBLIC	_IID_ID3D10VertexShader
PUBLIC	_IID_ID3D10GeometryShader
PUBLIC	_IID_ID3D10EffectPool
PUBLIC	_IID_ID3D10PixelShader
PUBLIC	_IID_ID3D11Texture3D
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	_IID_ID3D11UnorderedAccessView
PUBLIC	_IID_ID3D10InputLayout
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	_IID_IDXGISwapChain1
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	_IID_ID3D11VideoProcessorOutputView
PUBLIC	_IID_ID3D11VertexShader
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	__GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	_IID_ID3D11View
PUBLIC	_IID_ID3D11HullShader
PUBLIC	_IID_ID3D11VideoContext
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	__GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1
PUBLIC	_IID_ID3D11DomainShader
PUBLIC	_IID_ID3D10EffectMatrixVariable
PUBLIC	_IID_ID3D11GeometryShader
PUBLIC	_IID_IDXGIFactory2
PUBLIC	_IID_ID3D11ShaderReflectionType
PUBLIC	_IID_ID3D11PixelShader
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	_IID_ID3D11ComputeShader
PUBLIC	_IID_ID3D10SamplerState
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	_IID_ID3D11InputLayout
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	_IID_ID3D10BlendState1
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2_IDCT
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2_VLD
PUBLIC	_D3D11_DECODER_PROFILE_MPEG1_VLD
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2and1_VLD
PUBLIC	_IID_ID3D11ShaderReflectionVariable
PUBLIC	_D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_MOCOMP_FGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_IDCT_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_IDCT_FGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_FGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_WMV8_POSTPROC
PUBLIC	_D3D11_DECODER_PROFILE_WMV8_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_WMV9_POSTPROC
PUBLIC	_D3D11_DECODER_PROFILE_WMV9_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_WMV9_IDCT
PUBLIC	_D3D11_DECODER_PROFILE_VC1_POSTPROC
PUBLIC	_D3D11_DECODER_PROFILE_VC1_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_VC1_IDCT
PUBLIC	_D3D11_DECODER_PROFILE_VC1_VLD
PUBLIC	_IID_ID3D11ShaderReflectionConstantBuffer
PUBLIC	_D3D11_DECODER_PROFILE_VC1_D2010
PUBLIC	_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE
PUBLIC	_IID_ID3D10Asynchronous
PUBLIC	_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC
PUBLIC	_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC
PUBLIC	_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN
PUBLIC	_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	_IID_ID3D11ShaderReflection
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	_WKPDID_D3DDebugObjectName
PUBLIC	_IID_ID3D10ShaderResourceView1
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	_IID_ID3D10EffectStringVariable
PUBLIC	_IID_IDXGIAdapter2
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	_IID_ID3D10DeviceChild
PUBLIC	_IID_ID3D10Device1
PUBLIC	_IID_IDXGIOutput1
PUBLIC	_IID_ID3D10Query
PUBLIC	_CLSID_WICImagingFactory
PUBLIC	_CLSID_WICImagingFactory1
PUBLIC	_CLSID_WICImagingFactory2
;	COMDAT ___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUmvdLhxizgxsUwcfgUxlivUyrmUwvhpglkPCABCUdrmDCUzhhvnyobwvyftUwcfgOlyq@A1B899394B97429
_BSS	SEGMENT
___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUmvdLhxizgxsUwcfgUxlivUyrmUwvhpglkPCABCUdrmDCUzhhvnyobwvyftUwcfgOlyq@A1B899394B97429 DD 01H DUP (?)
_BSS	ENDS
_BSS	SEGMENT
?g_cs@@3U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?)	; g_cs
?g_pDXUTState@@3PAVDXUTState@@A DD 01H DUP (?)		; g_pDXUTState
_BSS	ENDS
;	COMDAT _CLSID_WICImagingFactory2
CONST	SEGMENT
_CLSID_WICImagingFactory2 DD 0317d06e8H
	DW	05f24H
	DW	0433dH
	DB	0bdH
	DB	0f7H
	DB	079H
	DB	0ceH
	DB	068H
	DB	0d8H
	DB	0abH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory1
CONST	SEGMENT
_CLSID_WICImagingFactory1 DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT _IID_ID3D10Query
CONST	SEGMENT
_IID_ID3D10Query DD 09b7e4c0eH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_IDXGIOutput1
CONST	SEGMENT
_IID_IDXGIOutput1 DD 0cddea8H
	DW	0939bH
	DW	04b83H
	DB	0a3H
	DB	040H
	DB	0a6H
	DB	085H
	DB	022H
	DB	066H
	DB	066H
	DB	0ccH
CONST	ENDS
;	COMDAT _IID_ID3D10Device1
CONST	SEGMENT
_IID_ID3D10Device1 DD 09b7e4c8fH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10DeviceChild
CONST	SEGMENT
_IID_ID3D10DeviceChild DD 09b7e4c00H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT _IID_IDXGIAdapter2
CONST	SEGMENT
_IID_IDXGIAdapter2 DD 0aa1ae0aH
	DW	0fa0eH
	DW	04b84H
	DB	086H
	DB	044H
	DB	0e0H
	DB	05fH
	DB	0f8H
	DB	0e5H
	DB	0acH
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectStringVariable
CONST	SEGMENT
_IID_ID3D10EffectStringVariable DD 071417501H
	DW	08df9H
	DW	04e0aH
	DB	0a7H
	DB	08aH
	DB	025H
	DB	05fH
	DB	097H
	DB	056H
	DB	0baH
	DB	0ffH
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderResourceView1
CONST	SEGMENT
_IID_ID3D10ShaderResourceView1 DD 09b7e4c87H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _WKPDID_D3DDebugObjectName
CONST	SEGMENT
_WKPDID_D3DDebugObjectName DD 0429b8c22H
	DW	09188H
	DW	04b0cH
	DB	087H
	DB	042H
	DB	0acH
	DB	0b0H
	DB	0bfH
	DB	085H
	DB	0c2H
	DB	00H
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflection
CONST	SEGMENT
_IID_ID3D11ShaderReflection DD 08d536ca1H
	DW	0ccaH
	DW	04956H
	DB	0a8H
	DB	037H
	DB	078H
	DB	069H
	DB	063H
	DB	075H
	DB	055H
	DB	084H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10
CONST	SEGMENT
_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10 DD 0107af0e0H
	DW	0ef1aH
	DW	04d19H
	DB	0abH
	DB	0a8H
	DB	067H
	DB	0a1H
	DB	063H
	DB	07H
	DB	03dH
	DB	013H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_HEVC_VLD_MAIN
CONST	SEGMENT
_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN DD 05b11d51bH
	DW	02f4cH
	DW	04452H
	DB	0bcH
	DB	0c3H
	DB	09H
	DB	0f2H
	DB	0a1H
	DB	016H
	DB	0cH
	DB	0c0H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC DD 0ab998b5bH
	DW	04258H
	DW	044a9H
	DB	09fH
	DB	0ebH
	DB	094H
	DB	0e5H
	DB	097H
	DB	0a6H
	DB	0baH
	DB	0aeH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC DD 0ed418a9fH
	DW	010dH
	DW	04edaH
	DB	09aH
	DB	0e3H
	DB	09aH
	DB	065H
	DB	035H
	DB	08dH
	DB	08dH
	DB	02eH
CONST	ENDS
;	COMDAT _IID_ID3D10Asynchronous
CONST	SEGMENT
_IID_ID3D10Asynchronous DD 09b7e4c0dH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE DD 0efd64d74H
	DW	0c9e8H
	DW	041d7H
	DB	0a5H
	DB	0e9H
	DB	0e9H
	DB	0b0H
	DB	0e3H
	DB	09fH
	DB	0a3H
	DB	019H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_D2010
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_D2010 DD 01b81bea4H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionConstantBuffer
CONST	SEGMENT
_IID_ID3D11ShaderReflectionConstantBuffer DD 0eb62d63dH
	DW	093ddH
	DW	04318H
	DB	08aH
	DB	0e8H
	DB	0c6H
	DB	0f8H
	DB	03aH
	DB	0d3H
	DB	071H
	DB	0b8H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_VLD DD 01b81bea3H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_IDCT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_IDCT DD 01b81bea2H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_MOCOMP DD 01b81bea1H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_POSTPROC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_POSTPROC DD 01b81bea0H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV9_IDCT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV9_IDCT DD 01b81be94H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV9_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV9_MOCOMP DD 01b81be91H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV9_POSTPROC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV9_POSTPROC DD 01b81be90H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV8_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV8_MOCOMP DD 01b81be81H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV8_POSTPROC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV8_POSTPROC DD 01b81be80H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT DD 0705b9d82H
	DW	076cfH
	DW	049d6H
	DB	0b7H
	DB	0e6H
	DB	0acH
	DB	088H
	DB	072H
	DB	0dbH
	DB	01H
	DB	03cH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT DD 0f9aaccbbH
	DW	0c2b6H
	DW	04cfcH
	DB	087H
	DB	079H
	DB	057H
	DB	07H
	DB	0b1H
	DB	076H
	DB	05H
	DB	052H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT DD 0d79be8daH
	DW	0cf1H
	DW	04c81H
	DB	0b8H
	DB	02aH
	DB	069H
	DB	0a4H
	DB	0e2H
	DB	036H
	DB	0f4H
	DB	03dH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT DD 0d5f04ff9H
	DW	03418H
	DW	045d8H
	DB	095H
	DB	061H
	DB	032H
	DB	0a7H
	DB	06aH
	DB	0aeH
	DB	02dH
	DB	0ddH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_FGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_FGT DD 01b81be69H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_NOFGT DD 01b81be68H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_IDCT_FGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_IDCT_FGT DD 01b81be67H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_IDCT_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_IDCT_NOFGT DD 01b81be66H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_MOCOMP_FGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_MOCOMP_FGT DD 01b81be65H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT DD 01b81be64H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionVariable
CONST	SEGMENT
_IID_ID3D11ShaderReflectionVariable DD 051f23923H
	DW	0f3e5H
	DW	04bd1H
	DB	091H
	DB	0cbH
	DB	060H
	DB	061H
	DB	077H
	DB	0d8H
	DB	0dbH
	DB	04cH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2and1_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2and1_VLD DD 086695f12H
	DW	0340eH
	DW	04f04H
	DB	09fH
	DB	0d3H
	DB	092H
	DB	053H
	DB	0ddH
	DB	032H
	DB	074H
	DB	060H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG1_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG1_VLD DD 06f3ec719H
	DW	03735H
	DW	042ccH
	DB	080H
	DB	063H
	DB	065H
	DB	0ccH
	DB	03cH
	DB	0b3H
	DB	066H
	DB	016H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2_VLD DD 0ee27417fH
	DW	05e28H
	DW	04e65H
	DB	0beH
	DB	0eaH
	DB	01dH
	DB	026H
	DB	0b5H
	DB	08H
	DB	0adH
	DB	0c9H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2_IDCT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2_IDCT DD 0bf22ad00H
	DW	03eaH
	DW	04690H
	DB	080H
	DB	077H
	DB	047H
	DB	033H
	DB	046H
	DB	020H
	DB	09bH
	DB	07eH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2_MOCOMP DD 0e6a9f44bH
	DW	061b0H
	DW	04563H
	DB	09eH
	DB	0a4H
	DB	063H
	DB	0d2H
	DB	0a3H
	DB	0c6H
	DB	0feH
	DB	066H
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT _IID_ID3D10BlendState1
CONST	SEGMENT
_IID_ID3D10BlendState1 DD 0edad8d99H
	DW	08a35H
	DW	04d6dH
	DB	085H
	DB	066H
	DB	02eH
	DB	0a2H
	DB	076H
	DB	0cdH
	DB	0e1H
	DB	061H
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D11InputLayout
CONST	SEGMENT
_IID_ID3D11InputLayout DD 0e4819ddcH
	DW	04cf0H
	DW	04025H
	DB	0bdH
	DB	026H
	DB	05dH
	DB	0e8H
	DB	02aH
	DB	03eH
	DB	07H
	DB	0b7H
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT _IID_ID3D10SamplerState
CONST	SEGMENT
_IID_ID3D10SamplerState DD 09b7e4c0cH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11ComputeShader
CONST	SEGMENT
_IID_ID3D11ComputeShader DD 04f5b196eH
	DW	0c2bdH
	DW	0495eH
	DB	0bdH
	DB	01H
	DB	01fH
	DB	0deH
	DB	0d3H
	DB	08eH
	DB	049H
	DB	069H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT _IID_ID3D11PixelShader
CONST	SEGMENT
_IID_ID3D11PixelShader DD 0ea82e40dH
	DW	051dcH
	DW	04f33H
	DB	093H
	DB	0d4H
	DB	0dbH
	DB	07cH
	DB	091H
	DB	025H
	DB	0aeH
	DB	08cH
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionType
CONST	SEGMENT
_IID_ID3D11ShaderReflectionType DD 06e6ffa6aH
	DW	09baeH
	DW	04613H
	DB	0a5H
	DB	01eH
	DB	091H
	DB	065H
	DB	02dH
	DB	050H
	DB	08cH
	DB	021H
CONST	ENDS
;	COMDAT _IID_IDXGIFactory2
CONST	SEGMENT
_IID_IDXGIFactory2 DD 050c83a1cH
	DW	0e072H
	DW	04c48H
	DB	087H
	DB	0b0H
	DB	036H
	DB	030H
	DB	0faH
	DB	036H
	DB	0a6H
	DB	0d0H
CONST	ENDS
;	COMDAT _IID_ID3D11GeometryShader
CONST	SEGMENT
_IID_ID3D11GeometryShader DD 038325b96H
	DW	0effbH
	DW	04022H
	DB	0baH
	DB	02H
	DB	02eH
	DB	079H
	DB	05bH
	DB	070H
	DB	027H
	DB	05cH
CONST	ENDS
;	COMDAT _IID_ID3D10EffectMatrixVariable
CONST	SEGMENT
_IID_ID3D10EffectMatrixVariable DD 050666c24H
	DW	0b82fH
	DW	04eedH
	DB	0a1H
	DB	072H
	DB	05bH
	DB	06eH
	DB	07eH
	DB	085H
	DB	022H
	DB	0e0H
CONST	ENDS
;	COMDAT _IID_ID3D11DomainShader
CONST	SEGMENT
_IID_ID3D11DomainShader DD 0f582c508H
	DW	0f36H
	DW	0490cH
	DB	099H
	DB	077H
	DB	031H
	DB	0eeH
	DB	0ceH
	DB	026H
	DB	08cH
	DB	0faH
CONST	ENDS
;	COMDAT __GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1
CONST	SEGMENT
__GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1 DD 0bb2c6faaH
	DW	0b5fbH
	DW	04082H
	DB	08eH
	DB	06bH
	DB	038H
	DB	08bH
	DB	08cH
	DB	0faH
	DB	090H
	DB	0e1H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D11VideoContext
CONST	SEGMENT
_IID_ID3D11VideoContext DD 061f21c45H
	DW	03c0eH
	DW	04a74H
	DB	09cH
	DB	0eaH
	DB	067H
	DB	010H
	DB	0dH
	DB	09aH
	DB	0d5H
	DB	0e4H
CONST	ENDS
;	COMDAT _IID_ID3D11HullShader
CONST	SEGMENT
_IID_ID3D11HullShader DD 08e5c6061H
	DW	0628aH
	DW	04c8eH
	DB	082H
	DB	064H
	DB	0bbH
	DB	0e4H
	DB	05cH
	DB	0b3H
	DB	0d5H
	DB	0ddH
CONST	ENDS
;	COMDAT _IID_ID3D11View
CONST	SEGMENT
_IID_ID3D11View DD 0839d1216H
	DW	0bb2eH
	DW	0412bH
	DB	0b7H
	DB	0f4H
	DB	0a9H
	DB	0dbH
	DB	0ebH
	DB	0e0H
	DB	08eH
	DB	0d1H
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT __GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686
CONST	SEGMENT
__GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686 DD 0a04bfb29H
	DW	08efH
	DW	043d6H
	DB	0a4H
	DB	09cH
	DB	0a9H
	DB	0bdH
	DB	0bdH
	DB	0cbH
	DB	0e6H
	DB	086H
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D11VertexShader
CONST	SEGMENT
_IID_ID3D11VertexShader DD 03b301d64H
	DW	0d678H
	DW	04289H
	DB	088H
	DB	097H
	DB	022H
	DB	0f8H
	DB	092H
	DB	08bH
	DB	072H
	DB	0f3H
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessorOutputView
CONST	SEGMENT
_IID_ID3D11VideoProcessorOutputView DD 0a048285eH
	DW	025a9H
	DW	04527H
	DB	0bdH
	DB	093H
	DB	0d6H
	DB	08bH
	DB	068H
	DB	0c4H
	DB	042H
	DB	054H
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT _IID_IDXGISwapChain1
CONST	SEGMENT
_IID_IDXGISwapChain1 DD 0790a45f7H
	DW	0d42H
	DW	04876H
	DB	098H
	DB	03aH
	DB	0aH
	DB	055H
	DB	0cfH
	DB	0e6H
	DB	0f4H
	DB	0aaH
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT _IID_ID3D10InputLayout
CONST	SEGMENT
_IID_ID3D10InputLayout DD 09b7e4c0bH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11UnorderedAccessView
CONST	SEGMENT
_IID_ID3D11UnorderedAccessView DD 028acf509H
	DW	07f5cH
	DW	048f6H
	DB	086H
	DB	011H
	DB	0f3H
	DB	016H
	DB	01H
	DB	0aH
	DB	063H
	DB	080H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT _IID_ID3D11Texture3D
CONST	SEGMENT
_IID_ID3D11Texture3D DD 037e866eH
	DW	0f56dH
	DW	04357H
	DB	0a8H
	DB	0afH
	DB	09dH
	DB	0abH
	DB	0beH
	DB	06eH
	DB	025H
	DB	0eH
CONST	ENDS
;	COMDAT _IID_ID3D10PixelShader
CONST	SEGMENT
_IID_ID3D10PixelShader DD 04968b601H
	DW	09d00H
	DW	04cdeH
	DB	083H
	DB	046H
	DB	08eH
	DB	07fH
	DB	067H
	DB	058H
	DB	019H
	DB	0b6H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectPool
CONST	SEGMENT
_IID_ID3D10EffectPool DD 09537ab04H
	DW	03250H
	DW	0412eH
	DB	082H
	DB	013H
	DB	0fcH
	DB	0d2H
	DB	0f8H
	DB	067H
	DB	079H
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D10GeometryShader
CONST	SEGMENT
_IID_ID3D10GeometryShader DD 06316be88H
	DW	054cdH
	DW	04040H
	DB	0abH
	DB	044H
	DB	020H
	DB	046H
	DB	01bH
	DB	0c8H
	DB	01fH
	DB	068H
CONST	ENDS
;	COMDAT _IID_ID3D10VertexShader
CONST	SEGMENT
_IID_ID3D10VertexShader DD 09b7e4c0aH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?value@?$_Maximum@$S@std@@2IB
CONST	SEGMENT
?value@?$_Maximum@$S@std@@2IB DD 00H			; std::_Maximum<>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT _IID_ID3D10DepthStencilView
CONST	SEGMENT
_IID_ID3D10DepthStencilView DD 09b7e4c09H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessorInputView
CONST	SEGMENT
_IID_ID3D11VideoProcessorInputView DD 011ec5a5fH
	DW	051dcH
	DW	04945H
	DB	0abH
	DB	034H
	DB	06eH
	DB	08cH
	DB	021H
	DB	030H
	DB	0eH
	DB	0a5H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$00@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$00@std@@2IB DD 01H		; std::integral_constant<unsigned int,1>::value
CONST	ENDS
;	COMDAT __GUID_29038f61_3839_4626_91fd_086879011a05
CONST	SEGMENT
__GUID_29038f61_3839_4626_91fd_086879011a05 DD 029038f61H
	DW	03839H
	DW	04626H
	DB	091H
	DB	0fdH
	DB	08H
	DB	068H
	DB	079H
	DB	01H
	DB	01aH
	DB	05H
CONST	ENDS
;	COMDAT _IID_ID3D10Effect
CONST	SEGMENT
_IID_ID3D10Effect DD 051b0ca8bH
	DW	0ec0bH
	DW	04519H
	DB	087H
	DB	0dH
	DB	08eH
	DB	0e1H
	DB	0cbH
	DB	050H
	DB	017H
	DB	0c7H
CONST	ENDS
;	COMDAT __GUID_77db970f_6276_48ba_ba28_070143b4392c
CONST	SEGMENT
__GUID_77db970f_6276_48ba_ba28_070143b4392c DD 077db970fH
	DW	06276H
	DW	048baH
	DB	0baH
	DB	028H
	DB	07H
	DB	01H
	DB	043H
	DB	0b4H
	DB	039H
	DB	02cH
CONST	ENDS
;	COMDAT _IID_ID3D11Texture2D
CONST	SEGMENT
_IID_ID3D11Texture2D DD 06f15aaf2H
	DW	0d208H
	DW	04e89H
	DB	09aH
	DB	0b4H
	DB	048H
	DB	095H
	DB	035H
	DB	0d3H
	DB	04fH
	DB	09cH
CONST	ENDS
;	COMDAT _IID_ID3D10EffectVectorVariable
CONST	SEGMENT
_IID_ID3D10EffectVectorVariable DD 062b98c44H
	DW	01f82H
	DW	04c67H
	DB	0bcH
	DB	0d0H
	DB	072H
	DB	0cfH
	DB	08fH
	DB	021H
	DB	07eH
	DB	081H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT _IID_IDXGIDevice2
CONST	SEGMENT
_IID_IDXGIDevice2 DD 05008617H
	DW	0fbfdH
	DW	04051H
	DB	0a7H
	DB	090H
	DB	014H
	DB	048H
	DB	084H
	DB	0b4H
	DB	0f6H
	DB	0a9H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT __GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6
CONST	SEGMENT
__GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6 DD 06543dbb6H
	DW	01b48H
	DW	042f5H
	DB	0abH
	DB	082H
	DB	0e9H
	DB	07eH
	DB	0c7H
	DB	043H
	DB	026H
	DB	0f6H
CONST	ENDS
;	COMDAT __GUID_79cf2233_7536_4948_9d36_1e4692dc5760
CONST	SEGMENT
__GUID_79cf2233_7536_4948_9d36_1e4692dc5760 DD 079cf2233H
	DW	07536H
	DW	04948H
	DB	09dH
	DB	036H
	DB	01eH
	DB	046H
	DB	092H
	DB	0dcH
	DB	057H
	DB	060H
CONST	ENDS
;	COMDAT _SID_SCommandBarState
CONST	SEGMENT
_SID_SCommandBarState DD 0b99eaa5cH
	DW	03850H
	DW	04400H
	DB	0bcH
	DB	033H
	DB	02cH
	DB	0e5H
	DB	034H
	DB	04H
	DB	08bH
	DB	0f8H
CONST	ENDS
;	COMDAT _IID_ID3D11VideoDecoderOutputView
CONST	SEGMENT
_IID_ID3D11VideoDecoderOutputView DD 0c2931aeaH
	DW	02a85H
	DW	04f20H
	DB	086H
	DB	0fH
	DB	0fbH
	DB	0a1H
	DB	0fdH
	DB	025H
	DB	06eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IDXGIResource1
CONST	SEGMENT
_IID_IDXGIResource1 DD 030961379H
	DW	04609H
	DW	04a41H
	DB	099H
	DB	08eH
	DB	054H
	DB	0feH
	DB	056H
	DB	07eH
	DB	0e0H
	DB	0c1H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectTechnique
CONST	SEGMENT
_IID_ID3D10EffectTechnique DD 0db122ce8H
	DW	0d1c9H
	DW	04292H
	DB	0b2H
	DB	037H
	DB	024H
	DB	0edH
	DB	03dH
	DB	0e8H
	DB	0b1H
	DB	075H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT _IID_IDXGISurface2
CONST	SEGMENT
_IID_IDXGISurface2 DD 0aba496ddH
	DW	0b617H
	DW	04cb8H
	DB	0a8H
	DB	066H
	DB	0bcH
	DB	044H
	DB	0d7H
	DB	0ebH
	DB	01fH
	DB	0a2H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$01@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$01@std@@2IB DD 02H		; std::integral_constant<unsigned int,2>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11InfoQueue
CONST	SEGMENT
_IID_ID3D11InfoQueue DD 06543dbb6H
	DW	01b48H
	DW	042f5H
	DB	0abH
	DB	082H
	DB	0e9H
	DB	07eH
	DB	0c7H
	DB	043H
	DB	026H
	DB	0f6H
CONST	ENDS
;	COMDAT _IID_ID3D10RenderTargetView
CONST	SEGMENT
_IID_ID3D10RenderTargetView DD 09b7e4c08H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11Texture1D
CONST	SEGMENT
_IID_ID3D11Texture1D DD 0f8fb5c27H
	DW	0c6b3H
	DW	04f75H
	DB	0a4H
	DB	0c8H
	DB	043H
	DB	09aH
	DB	0f2H
	DB	0efH
	DB	056H
	DB	04cH
CONST	ENDS
;	COMDAT _IID_ID3D11CryptoSession
CONST	SEGMENT
_IID_ID3D11CryptoSession DD 09b32f9adH
	DW	0bdccH
	DW	040a6H
	DB	0a3H
	DB	09dH
	DB	0d5H
	DB	0c8H
	DB	065H
	DB	084H
	DB	057H
	DB	020H
CONST	ENDS
;	COMDAT _D3D11_KEY_EXCHANGE_RSAES_OAEP
CONST	SEGMENT
_D3D11_KEY_EXCHANGE_RSAES_OAEP DD 0c1949895H
	DW	0d72aH
	DW	04a1dH
	DB	08eH
	DB	05dH
	DB	0edH
	DB	085H
	DB	07dH
	DB	017H
	DB	015H
	DB	020H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectPass
CONST	SEGMENT
_IID_ID3D10EffectPass DD 05cfbeb89H
	DW	01a06H
	DW	046e0H
	DB	0b2H
	DB	082H
	DB	0e3H
	DB	0f9H
	DB	0bfH
	DB	0a3H
	DB	06aH
	DB	054H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT _IID_IDXGIOutputDuplication
CONST	SEGMENT
_IID_IDXGIOutputDuplication DD 0191cfac3H
	DW	0a341H
	DW	0470dH
	DB	0b2H
	DB	06eH
	DB	0a8H
	DB	064H
	DB	0f4H
	DB	028H
	DB	031H
	DB	09cH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
CONST	SEGMENT
__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c DD 06f15aaf2H
	DW	0d208H
	DW	04e89H
	DB	09aH
	DB	0b4H
	DB	048H
	DB	095H
	DB	035H
	DB	0d3H
	DB	04fH
	DB	09cH
CONST	ENDS
;	COMDAT _IID_ID3D10EffectScalarVariable
CONST	SEGMENT
_IID_ID3D10EffectScalarVariable DD 0e48f7bH
	DW	0d2c8H
	DW	049e8H
	DB	0a8H
	DB	06cH
	DB	02H
	DB	02dH
	DB	0eeH
	DB	053H
	DB	043H
	DB	01fH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$03@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$03@std@@2IB DD 04H		; std::integral_constant<unsigned int,4>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11Buffer
CONST	SEGMENT
_IID_ID3D11Buffer DD 048570b85H
	DW	0d1eeH
	DW	04fcdH
	DB	0a2H
	DB	050H
	DB	0ebH
	DB	035H
	DB	07H
	DB	022H
	DB	0b0H
	DB	037H
CONST	ENDS
;	COMDAT _IID_ID3D11DepthStencilView
CONST	SEGMENT
_IID_ID3D11DepthStencilView DD 09fdac92aH
	DW	01876H
	DW	048c3H
	DB	0afH
	DB	0adH
	DB	025H
	DB	0b9H
	DB	04fH
	DB	084H
	DB	0a9H
	DB	0b6H
CONST	ENDS
;	COMDAT __GUID_770aae78_f26f_4dba_a829_253c83d1b387
CONST	SEGMENT
__GUID_770aae78_f26f_4dba_a829_253c83d1b387 DD 0770aae78H
	DW	0f26fH
	DW	04dbaH
	DB	0a8H
	DB	029H
	DB	025H
	DB	03cH
	DB	083H
	DB	0d1H
	DB	0b3H
	DB	087H
CONST	ENDS
;	COMDAT _IID_ID3DUserDefinedAnnotation
CONST	SEGMENT
_IID_ID3DUserDefinedAnnotation DD 0b2daad8bH
	DW	03d4H
	DW	04dbfH
	DB	095H
	DB	0ebH
	DB	032H
	DB	0abH
	DB	04bH
	DB	063H
	DB	0d0H
	DB	0abH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT _IID_IDXGIDisplayControl
CONST	SEGMENT
_IID_IDXGIDisplayControl DD 0ea9dbf1aH
	DW	0c88eH
	DW	04486H
	DB	085H
	DB	04aH
	DB	098H
	DB	0aaH
	DB	01H
	DB	038H
	DB	0f3H
	DB	0cH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D10EffectSamplerVariable
CONST	SEGMENT
_IID_ID3D10EffectSamplerVariable DD 06530d5c7H
	DW	07e9H
	DW	04271H
	DB	0a4H
	DB	018H
	DB	0e7H
	DB	0ceH
	DB	04bH
	DB	0d1H
	DB	0e4H
	DB	080H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$07@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$07@std@@2IB DD 08H		; std::integral_constant<unsigned int,8>::value
CONST	ENDS
;	COMDAT _IID_ID3D10EffectVariable
CONST	SEGMENT
_IID_ID3D10EffectVariable DD 0ae897105H
	DW	0e6H
	DW	045bfH
	DB	0bbH
	DB	08eH
	DB	028H
	DB	01dH
	DB	0d6H
	DB	0dbH
	DB	08eH
	DB	01bH
CONST	ENDS
;	COMDAT _IID_ID3D11Device1
CONST	SEGMENT
_IID_ID3D11Device1 DD 0a04bfb29H
	DW	08efH
	DW	043d6H
	DB	0a4H
	DB	09cH
	DB	0a9H
	DB	0bdH
	DB	0bdH
	DB	0cbH
	DB	0e6H
	DB	086H
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderResourceView
CONST	SEGMENT
_IID_ID3D10ShaderResourceView DD 09b7e4c07H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11Resource
CONST	SEGMENT
_IID_ID3D11Resource DD 0dc8e63f3H
	DW	0d12bH
	DW	04952H
	DB	0b4H
	DB	07bH
	DB	05eH
	DB	045H
	DB	02H
	DB	06aH
	DB	086H
	DB	02dH
CONST	ENDS
;	COMDAT _IID_ID3D10Blob
CONST	SEGMENT
_IID_ID3D10Blob DD 08ba5fb08H
	DW	05195H
	DW	040e2H
	DB	0acH
	DB	058H
	DB	0dH
	DB	098H
	DB	09cH
	DB	03aH
	DB	01H
	DB	02H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT _IID_IDXGIDevice1
CONST	SEGMENT
_IID_IDXGIDevice1 DD 077db970fH
	DW	06276H
	DW	048baH
	DB	0baH
	DB	028H
	DB	07H
	DB	01H
	DB	043H
	DB	0b4H
	DB	039H
	DB	02cH
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGIAdapter1
CONST	SEGMENT
_IID_IDXGIAdapter1 DD 029038f61H
	DW	03839H
	DW	04626H
	DB	091H
	DB	0fdH
	DB	08H
	DB	068H
	DB	079H
	DB	01H
	DB	01aH
	DB	05H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectType
CONST	SEGMENT
_IID_ID3D10EffectType DD 04e9e1ddcH
	DW	0cd9dH
	DW	04772H
	DB	0a8H
	DB	037H
	DB	00H
	DB	018H
	DB	0bH
	DB	09bH
	DB	088H
	DB	0fdH
CONST	ENDS
;	COMDAT _IID_IDXGIFactory1
CONST	SEGMENT
_IID_IDXGIFactory1 DD 0770aae78H
	DW	0f26fH
	DW	04dbaH
	DB	0a8H
	DB	029H
	DB	025H
	DB	03cH
	DB	083H
	DB	0d1H
	DB	0b3H
	DB	087H
CONST	ENDS
;	COMDAT _IID_ID3D11RasterizerState
CONST	SEGMENT
_IID_ID3D11RasterizerState DD 09bb4ab81H
	DW	0ab1aH
	DW	04d8fH
	DB	0b5H
	DB	06H
	DB	0fcH
	DB	04H
	DB	020H
	DB	0bH
	DB	06eH
	DB	0e7H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT _IID_ID3D10EffectRasterizerVariable
CONST	SEGMENT
_IID_ID3D10EffectRasterizerVariable DD 021af9f0eH
	DW	04d94H
	DW	04ea9H
	DB	097H
	DB	085H
	DB	02cH
	DB	0b7H
	DB	06bH
	DB	08cH
	DB	0bH
	DB	034H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT _DXGI_DEBUG_D3D11
CONST	SEGMENT
_DXGI_DEBUG_D3D11 DD 04b99317bH
	DW	0ac39H
	DW	04aa6H
	DB	0bbH
	DB	0bH
	DB	0baH
	DB	0a0H
	DB	047H
	DB	084H
	DB	079H
	DB	08fH
CONST	ENDS
;	COMDAT _IID_ID3D11RefDefaultTrackingOptions
CONST	SEGMENT
_IID_ID3D11RefDefaultTrackingOptions DD 03916615H
	DW	0c644H
	DW	0418cH
	DB	09bH
	DB	0f4H
	DB	075H
	DB	0dbH
	DB	05bH
	DB	0e6H
	DB	03cH
	DB	0a0H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT _IID_ID3D11RefTrackingOptions
CONST	SEGMENT
_IID_ID3D11RefTrackingOptions DD 0193dacdfH
	DW	0db2H
	DW	04c05H
	DB	0a5H
	DB	05cH
	DB	0efH
	DB	06H
	DB	0caH
	DB	0c5H
	DB	06fH
	DB	0d9H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGIDevice
CONST	SEGMENT
_IID_IDXGIDevice DD 054ec77faH
	DW	01377H
	DW	044e6H
	DB	08cH
	DB	032H
	DB	088H
	DB	0fdH
	DB	05fH
	DB	044H
	DB	0c8H
	DB	04cH
CONST	ENDS
;	COMDAT _DXGI_DEBUG_D3D10
CONST	SEGMENT
_DXGI_DEBUG_D3D10 DD 0243b4c52H
	DW	03606H
	DW	04d3aH
	DB	099H
	DB	0d7H
	DB	0a7H
	DB	0e7H
	DB	0b3H
	DB	03eH
	DB	0d7H
	DB	06H
CONST	ENDS
_DATA	SEGMENT
?g_bThreadSafe@@3_NA DB 01H				; g_bThreadSafe
_DATA	ENDS
;	COMDAT _IID_ID3D11TracingDevice
CONST	SEGMENT
_IID_ID3D11TracingDevice DD 01911c771H
	DW	01587H
	DW	0413eH
	DB	0a7H
	DB	0e0H
	DB	0fbH
	DB	026H
	DB	0c3H
	DB	0deH
	DB	02H
	DB	068H
CONST	ENDS
;	COMDAT _IID_ID3D11DeviceContext
CONST	SEGMENT
_IID_ID3D11DeviceContext DD 0c0bfa96cH
	DW	0e089H
	DW	044fbH
	DB	08eH
	DB	0afH
	DB	026H
	DB	0f8H
	DB	079H
	DB	061H
	DB	090H
	DB	0daH
CONST	ENDS
;	COMDAT _IID_ID3D11BlendState
CONST	SEGMENT
_IID_ID3D11BlendState DD 075b68faaH
	DW	0347dH
	DW	04159H
	DB	08fH
	DB	045H
	DB	0a0H
	DB	064H
	DB	0fH
	DB	01H
	DB	0cdH
	DB	09aH
CONST	ENDS
;	COMDAT _IID_ID3D11DeviceContext1
CONST	SEGMENT
_IID_ID3D11DeviceContext1 DD 0bb2c6faaH
	DW	0b5fbH
	DW	04082H
	DB	08eH
	DB	06bH
	DB	038H
	DB	08bH
	DB	08cH
	DB	0faH
	DB	090H
	DB	0e1H
CONST	ENDS
;	COMDAT _IID_ID3D10StateBlock
CONST	SEGMENT
_IID_ID3D10StateBlock DD 0803425aH
	DW	057f5H
	DW	04dd6H
	DB	094H
	DB	065H
	DB	0a8H
	DB	075H
	DB	070H
	DB	083H
	DB	04aH
	DB	08H
CONST	ENDS
;	COMDAT _IID_ID3D10SwitchToRef
CONST	SEGMENT
_IID_ID3D10SwitchToRef DD 09b7e4e02H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectDepthStencilVariable
CONST	SEGMENT
_IID_ID3D10EffectDepthStencilVariable DD 0af482368H
	DW	0330aH
	DW	046a5H
	DB	09aH
	DB	05cH
	DB	01H
	DB	0c7H
	DB	01aH
	DB	0f2H
	DB	04cH
	DB	08dH
CONST	ENDS
;	COMDAT _IID_IDXGIDebug1
CONST	SEGMENT
_IID_IDXGIDebug1 DD 0c5a05f0cH
	DW	016f2H
	DW	04adfH
	DB	09fH
	DB	04dH
	DB	0a8H
	DB	0c4H
	DB	0d5H
	DB	08aH
	DB	0c5H
	DB	050H
CONST	ENDS
;	COMDAT _IID_ID3DDeviceContextState
CONST	SEGMENT
_IID_ID3DDeviceContextState DD 05c1e0d8aH
	DW	07c23H
	DW	048f9H
	DB	08cH
	DB	059H
	DB	0a9H
	DB	029H
	DB	058H
	DB	0ceH
	DB	0ffH
	DB	011H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT _IID_IDXGIFactory
CONST	SEGMENT
_IID_IDXGIFactory DD 07b7166ecH
	DW	021c7H
	DW	044aeH
	DB	0b2H
	DB	01aH
	DB	0c9H
	DB	0aeH
	DB	032H
	DB	01aH
	DB	0e3H
	DB	069H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGIDebug
CONST	SEGMENT
_IID_IDXGIDebug DD 0119e7452H
	DW	0de9eH
	DW	040feH
	DB	088H
	DB	06H
	DB	088H
	DB	0f9H
	DB	0cH
	DB	012H
	DB	0b4H
	DB	041H
CONST	ENDS
;	COMDAT _IID_ID3D11RasterizerState1
CONST	SEGMENT
_IID_ID3D11RasterizerState1 DD 01217d7a6H
	DW	05039H
	DW	0418cH
	DB	0b0H
	DB	042H
	DB	09cH
	DB	0beH
	DB	025H
	DB	06aH
	DB	0fdH
	DB	06eH
CONST	ENDS
;	COMDAT _IID_ID3D10Debug
CONST	SEGMENT
_IID_ID3D10Debug DD 09b7e4e01H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10View
CONST	SEGMENT
_IID_ID3D10View DD 0c902b03fH
	DW	060a7H
	DW	049baH
	DB	099H
	DB	036H
	DB	02aH
	DB	03aH
	DB	0b3H
	DB	07aH
	DB	07eH
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D11SwitchToRef
CONST	SEGMENT
_IID_ID3D11SwitchToRef DD 01ef337e3H
	DW	058e7H
	DW	04f83H
	DB	0a6H
	DB	092H
	DB	0dbH
	DB	022H
	DB	01fH
	DB	05eH
	DB	0d4H
	DB	07eH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGISwapChain
CONST	SEGMENT
_IID_IDXGISwapChain DD 0310d36a0H
	DW	0d2e7H
	DW	04c0aH
	DB	0aaH
	DB	04H
	DB	06aH
	DB	09dH
	DB	023H
	DB	0b8H
	DB	088H
	DB	06aH
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT _IID_ID3D10Texture3D
CONST	SEGMENT
_IID_ID3D10Texture3D DD 09b7e4c05H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10Multithread
CONST	SEGMENT
_IID_ID3D10Multithread DD 09b7e4e00H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11Debug
CONST	SEGMENT
_IID_ID3D11Debug DD 079cf2233H
	DW	07536H
	DW	04948H
	DB	09dH
	DB	036H
	DB	01eH
	DB	046H
	DB	092H
	DB	0dcH
	DB	057H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectBlendVariable
CONST	SEGMENT
_IID_ID3D10EffectBlendVariable DD 01fcd2294H
	DW	0df6dH
	DW	04eaeH
	DB	086H
	DB	0b3H
	DB	0eH
	DB	091H
	DB	060H
	DB	0cfH
	DB	0b0H
	DB	07bH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE DD 041fff286H
	DW	06ae0H
	DW	04d43H
	DB	09dH
	DB	055H
	DB	0a4H
	DB	06eH
	DB	09eH
	DB	0fdH
	DB	015H
	DB	08aH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE DD 0772d047H
	DW	01b40H
	DW	048e8H
	DB	09cH
	DB	0a6H
	DB	0b5H
	DB	0f5H
	DB	010H
	DB	0deH
	DB	09fH
	DB	01H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION DD 06346cc54H
	DW	02cfcH
	DW	04ad4H
	DB	082H
	DB	024H
	DB	0d1H
	DB	058H
	DB	037H
	DB	0deH
	DB	077H
	DB	00H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_PROTECTION
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_PROTECTION DD 050455658H
	DW	03f47H
	DW	04362H
	DB	0bfH
	DB	099H
	DB	0bfH
	DB	0dfH
	DB	0cdH
	DB	0e9H
	DB	0edH
	DB	029H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE DD 06114bdbH
	DW	03523H
	DW	0470aH
	DB	08dH
	DB	0caH
	DB	0fbH
	DB	0c2H
	DB	084H
	DB	051H
	DB	054H
	DB	0f0H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE DD 0ec1791c7H
	DW	0dad3H
	DW	04f15H
	DB	09eH
	DB	0c3H
	DB	0faH
	DB	0a9H
	DB	03dH
	DB	060H
	DB	0d4H
	DB	0f0H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID DD 0f83a5958H
	DW	0e986H
	DW	04bdaH
	DB	0beH
	DB	0b0H
	DB	041H
	DB	01fH
	DB	06aH
	DB	07aH
	DB	01H
	DB	0b7H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT DD 0b30f7066H
	DW	0203cH
	DW	04b07H
	DB	093H
	DB	0fcH
	DB	0ceH
	DB	0aaH
	DB	0fdH
	DB	061H
	DB	024H
	DB	01eH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES DD 06214d9d2H
	DW	0432cH
	DW	04abbH
	DB	09fH
	DB	0ceH
	DB	021H
	DB	06eH
	DB	0eaH
	DB	026H
	DB	09eH
	DB	03bH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_OUTPUT_ID
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID DD 0839ddca3H
	DW	09b4eH
	DW	041e4H
	DB	0b0H
	DB	053H
	DB	089H
	DB	02bH
	DB	0d2H
	DB	0a1H
	DB	01eH
	DB	0e7H
CONST	ENDS
;	COMDAT _IID_IDXGIOutput
CONST	SEGMENT
_IID_IDXGIOutput DD 0ae02eedbH
	DW	0c735H
	DW	04690H
	DB	08dH
	DB	052H
	DB	05aH
	DB	08dH
	DB	0c2H
	DB	02H
	DB	013H
	DB	0aaH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11BlendState1
CONST	SEGMENT
_IID_ID3D11BlendState1 DD 0cc86fabeH
	DW	0da55H
	DW	0401dH
	DB	085H
	DB	0e7H
	DB	0e3H
	DB	0c9H
	DB	0deH
	DB	028H
	DB	077H
	DB	0e9H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT DD 02c042b5eH
	DW	08c07H
	DW	046d5H
	DB	0aaH
	DB	0beH
	DB	08fH
	DB	075H
	DB	0cbH
	DB	0adH
	DB	04cH
	DB	031H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT DD 012f0bd6H
	DW	0e662H
	DW	04474H
	DB	0beH
	DB	0fdH
	DB	0aaH
	DB	053H
	DB	0e5H
	DB	014H
	DB	03cH
	DB	06dH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS DD 0649bbadbH
	DW	0f0f4H
	DW	04639H
	DB	0a1H
	DB	05bH
	DB	024H
	DB	039H
	DB	03fH
	DB	0c3H
	DB	0abH
	DB	0acH
CONST	ENDS
;	COMDAT _IID_ID3D11DepthStencilState
CONST	SEGMENT
_IID_ID3D11DepthStencilState DD 03823efbH
	DW	08d8fH
	DW	04e1cH
	DB	09aH
	DB	0a2H
	DB	0f6H
	DB	04bH
	DB	0b2H
	DB	0cbH
	DB	0fdH
	DB	0f1H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT DD 0db207b3H
	DW	09450H
	DW	046a6H
	DB	082H
	DB	0deH
	DB	01bH
	DB	096H
	DB	0d4H
	DB	04fH
	DB	09cH
	DB	0f2H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION DD 02634499eH
	DW	0d018H
	DW	04d74H
	DB	0acH
	DB	017H
	DB	07fH
	DB	072H
	DB	040H
	DB	059H
	DB	052H
	DB	08dH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE DD 0ec1c539dH
	DW	08cffH
	DW	04e2aH
	DB	0bcH
	DB	0c4H
	DB	0f5H
	DB	069H
	DB	02fH
	DB	099H
	DB	0f4H
	DB	080H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE DD 0bc1b18a5H
	DW	0b1fbH
	DW	042abH
	DB	0bdH
	DB	094H
	DB	0b5H
	DB	082H
	DB	08bH
	DB	04bH
	DB	0f7H
	DB	0beH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_PROTECTION
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_PROTECTION DD 0a84eb584H
	DW	0c495H
	DW	048aaH
	DB	0b9H
	DB	04dH
	DB	08bH
	DB	0d2H
	DB	0d6H
	DB	0fbH
	DB	0ceH
	DB	05H
CONST	ENDS
;	COMDAT _IID_IDXGIAdapter
CONST	SEGMENT
_IID_IDXGIAdapter DD 02411e7e1H
	DW	012acH
	DW	04ccfH
	DB	0bdH
	DB	014H
	DB	097H
	DB	098H
	DB	0e8H
	DB	053H
	DB	04dH
	DB	0c0H
CONST	ENDS
;	COMDAT _IID_ID3D11AuthenticatedChannel
CONST	SEGMENT
_IID_ID3D11AuthenticatedChannel DD 03015a308H
	DW	0dcbdH
	DW	047aaH
	DB	0a7H
	DB	047H
	DB	019H
	DB	024H
	DB	086H
	DB	0d1H
	DB	04dH
	DB	04aH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT _IID_ID3D11RenderTargetView
CONST	SEGMENT
_IID_ID3D11RenderTargetView DD 0dfdba067H
	DW	0b8dH
	DW	04865H
	DB	087H
	DB	05bH
	DB	0d7H
	DB	0b4H
	DB	051H
	DB	06cH
	DB	0c1H
	DB	064H
CONST	ENDS
;	COMDAT _IID_IDXGISurface1
CONST	SEGMENT
_IID_IDXGISurface1 DD 04ae63092H
	DW	06327H
	DW	04c1bH
	DB	080H
	DB	0aeH
	DB	0bfH
	DB	0e1H
	DB	02eH
	DB	0a3H
	DB	02bH
	DB	086H
CONST	ENDS
;	COMDAT _IID_IDXGIInfoQueue
CONST	SEGMENT
_IID_IDXGIInfoQueue DD 0d67441c7H
	DW	0672aH
	DW	0476fH
	DB	09eH
	DB	082H
	DB	0cdH
	DB	055H
	DB	0b4H
	DB	049H
	DB	049H
	DB	0ceH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D10Texture2D
CONST	SEGMENT
_IID_ID3D10Texture2D DD 09b7e4c04H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflection
CONST	SEGMENT
_IID_ID3D10ShaderReflection DD 0d40e20b6H
	DW	0f8f7H
	DW	042adH
	DB	0abH
	DB	020H
	DB	04bH
	DB	0afH
	DB	08fH
	DB	015H
	DB	0dfH
	DB	0aaH
CONST	ENDS
;	COMDAT _IID_IDXGISurface
CONST	SEGMENT
_IID_IDXGISurface DD 0cafcb56cH
	DW	06ac3H
	DW	04889H
	DB	0bfH
	DB	047H
	DB	09eH
	DB	023H
	DB	0bbH
	DB	0d2H
	DB	060H
	DB	0ecH
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessor
CONST	SEGMENT
_IID_ID3D11VideoProcessor DD 01d7b0652H
	DW	0185fH
	DW	041c6H
	DB	085H
	DB	0ceH
	DB	0cH
	DB	05bH
	DB	0e3H
	DB	0d4H
	DB	0aeH
	DB	06cH
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT _IID_ID3D10EffectShaderVariable
CONST	SEGMENT
_IID_ID3D10EffectShaderVariable DD 080849279H
	DW	0c799H
	DW	04797H
	DB	08cH
	DB	033H
	DB	04H
	DB	07H
	DB	0a0H
	DB	07dH
	DB	09eH
	DB	06H
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT _IID_IDXGIKeyedMutex
CONST	SEGMENT
_IID_IDXGIKeyedMutex DD 09d8e1289H
	DW	0d7b3H
	DW	0465fH
	DB	081H
	DB	026H
	DB	025H
	DB	0eH
	DB	034H
	DB	09aH
	DB	0f8H
	DB	05dH
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflectionConstantBuffer
CONST	SEGMENT
_IID_ID3D10ShaderReflectionConstantBuffer DD 066c66a94H
	DW	0ddddH
	DW	04b62H
	DB	0a6H
	DB	06aH
	DB	0f0H
	DB	0daH
	DB	033H
	DB	0c2H
	DB	0b4H
	DB	0d0H
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11CommandList
CONST	SEGMENT
_IID_ID3D11CommandList DD 0a24bc4d1H
	DW	0769eH
	DW	043f7H
	DB	080H
	DB	013H
	DB	098H
	DB	0ffH
	DB	056H
	DB	06cH
	DB	018H
	DB	0e2H
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT _IID_IDXGIResource
CONST	SEGMENT
_IID_IDXGIResource DD 035f3ab4H
	DW	0482eH
	DW	04e50H
	DB	0b4H
	DB	01fH
	DB	08aH
	DB	07fH
	DB	08bH
	DB	0d8H
	DB	096H
	DB	0bH
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflectionVariable
CONST	SEGMENT
_IID_ID3D10ShaderReflectionVariable DD 01bf63c95H
	DW	02650H
	DW	0405dH
	DB	099H
	DB	0c1H
	DB	036H
	DB	036H
	DB	0bdH
	DB	01dH
	DB	0a0H
	DB	0a1H
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT _IID_ID3D11ClassLinkage
CONST	SEGMENT
_IID_ID3D11ClassLinkage DD 0ddf57cbaH
	DW	09543H
	DW	046e4H
	DB	0a1H
	DB	02bH
	DB	0f2H
	DB	07H
	DB	0a0H
	DB	0feH
	DB	07fH
	DB	0edH
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT _IID_IDXGIDeviceSubObject
CONST	SEGMENT
_IID_IDXGIDeviceSubObject DD 03d3e0379H
	DW	0f9deH
	DW	04d58H
	DB	0bbH
	DB	06cH
	DB	018H
	DB	0d6H
	DB	029H
	DB	092H
	DB	0f1H
	DB	0a6H
CONST	ENDS
;	COMDAT _DXGI_DEBUG_APP
CONST	SEGMENT
_DXGI_DEBUG_APP DD 06cd6e01H
	DW	04219H
	DW	04ebdH
	DB	087H
	DB	09H
	DB	027H
	DB	0edH
	DB	023H
	DB	036H
	DB	0cH
	DB	062H
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT _DXGI_DEBUG_DXGI
CONST	SEGMENT
_DXGI_DEBUG_DXGI DD 025cddaa4H
	DW	0b1c6H
	DW	047e1H
	DB	0acH
	DB	03eH
	DB	098H
	DB	087H
	DB	05bH
	DB	05aH
	DB	02eH
	DB	02aH
CONST	ENDS
;	COMDAT _DXGI_DEBUG_DX
CONST	SEGMENT
_DXGI_DEBUG_DX DD 035cdd7fcH
	DW	013b2H
	DW	0421dH
	DB	0a5H
	DB	0d7H
	DB	07eH
	DB	044H
	DB	051H
	DB	028H
	DB	07dH
	DB	064H
CONST	ENDS
;	COMDAT _DXGI_DEBUG_ALL
CONST	SEGMENT
_DXGI_DEBUG_ALL DD 0e48ae283H
	DW	0da80H
	DW	0490bH
	DB	087H
	DB	0e6H
	DB	043H
	DB	0e9H
	DB	0a9H
	DB	0cfH
	DB	0daH
	DB	08H
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflectionType
CONST	SEGMENT
_IID_ID3D10ShaderReflectionType DD 0c530ad7dH
	DW	09b16H
	DW	04395H
	DB	0a9H
	DB	079H
	DB	0baH
	DB	02eH
	DB	0cfH
	DB	0f8H
	DB	03aH
	DB	0ddH
CONST	ENDS
;	COMDAT ?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f1a9a9br ; 0.603922 ; DirectX::Colors::YellowGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Yellow
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::WhiteSmoke
	DD	03f75f5f7r			; 0.960784
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?White@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?White@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::White
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Wheat
	DD	03f5edee0r			; 0.870588
	DD	03f33b3b4r			; 0.701961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Violet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Violet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::Violet
	DD	03f028283r			; 0.509804
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e808081r ; 0.25098 ; DirectX::Colors::Turquoise
	DD	03f60e0e2r			; 0.878431
	DD	03f50d0d2r			; 0.815686
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D11ClassInstance
CONST	SEGMENT
_IID_ID3D11ClassInstance DD 0a6cd7faaH
	DW	0b0b7H
	DW	04a2fH
	DB	094H
	DB	036H
	DB	086H
	DB	062H
	DB	0a6H
	DB	057H
	DB	097H
	DB	0cbH
CONST	ENDS
;	COMDAT ?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Transparent
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Tomato
	DD	03ec6c6c8r			; 0.388235
	DD	03e8e8e8fr			; 0.278431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f58d8dar ; 0.847059 ; DirectX::Colors::Thistle
	DD	03f3fbfc0r			; 0.74902
	DD	03f58d8dar			; 0.847059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Teal@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Teal@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Teal
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?Tan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Tan
	DD	03f34b4b5r			; 0.705882
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e8c8c8dr ; 0.27451 ; DirectX::Colors::SteelBlue
	DD	03f028283r			; 0.509804
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::SpringGreen
	DD	03f800000r			; 1
	DD	03efeff00r			; 0.498039
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT _IID_ID3D11DeviceChild
CONST	SEGMENT
_IID_ID3D11DeviceChild DD 01841e5c8H
	DW	016b0H
	DW	0489bH
	DB	0bcH
	DB	0c8H
	DB	044H
	DB	0cfH
	DB	0b0H
	DB	0d5H
	DB	0deH
	DB	0aeH
CONST	ENDS
;	COMDAT _IID_IDXGIObject
CONST	SEGMENT
_IID_IDXGIObject DD 0aec22fb8H
	DW	076f3H
	DW	04639H
	DB	09bH
	DB	0e0H
	DB	028H
	DB	0ebH
	DB	043H
	DB	0a6H
	DB	07aH
	DB	02eH
CONST	ENDS
;	COMDAT ?Snow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Snow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Snow
	DD	03f7afafcr			; 0.980392
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ee0e0e2r ; 0.439216 ; DirectX::Colors::SlateGray
	DD	03f008081r			; 0.501961
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed4d4d6r ; 0.415686 ; DirectX::Colors::SlateBlue
	DD	03eb4b4b5r			; 0.352941
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::SkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f6bebedr			; 0.921569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D10Texture1D
CONST	SEGMENT
_IID_ID3D10Texture1D DD 09b7e4c03H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?Silver@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Silver@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f40c0c2r ; 0.752941 ; DirectX::Colors::Silver
	DD	03f40c0c2r			; 0.752941
	DD	03f40c0c2r			; 0.752941
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f20a0a1r ; 0.627451 ; DirectX::Colors::Sienna
	DD	03ea4a4a5r			; 0.321569
	DD	03e34b4b5r			; 0.176471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::SeaShell
	DD	03f75f5f7r			; 0.960784
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e38b8b9r ; 0.180392 ; DirectX::Colors::SeaGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03eaeaeafr			; 0.341176
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f74f4f6r ; 0.956863 ; DirectX::Colors::SandyBrown
	DD	03f24a4a5r			; 0.643137
	DD	03ec0c0c2r			; 0.376471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Salmon
	DD	03f008081r			; 0.501961
	DD	03ee4e4e6r			; 0.447059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::SaddleBrown
	DD	03e8a8a8br			; 0.270588
	DD	03d989899r			; 0.0745098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e828283r ; 0.254902 ; DirectX::Colors::RoyalBlue
	DD	03ed2d2d4r			; 0.411765
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3cbcbdr ; 0.737255 ; DirectX::Colors::RosyBrown
	DD	03f0f8f90r			; 0.560784
	DD	03f0f8f90r			; 0.560784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Red@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Red@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Red
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Purple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Purple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Purple
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::PowderBlue
	DD	03f60e0e2r			; 0.878431
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Plum@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Plum@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5ddddfr ; 0.866667 ; DirectX::Colors::Plum
	DD	03f20a0a1r			; 0.627451
	DD	03f5ddddfr			; 0.866667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Pink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Pink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Pink
	DD	03f40c0c2r			; 0.752941
	DD	03f4bcbcdr			; 0.796079
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Peru@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Peru@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::Peru
	DD	03f058586r			; 0.521569
	DD	03e7cfcfer			; 0.247059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PeachPuff
	DD	03f5adadcr			; 0.854902
	DD	03f39b9bar			; 0.72549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PapayaWhip
	DD	03f6feff1r			; 0.937255
	DD	03f55d5d7r			; 0.835294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5bdbddr ; 0.858824 ; DirectX::Colors::PaleVioletRed
	DD	03ee0e0e2r			; 0.439216
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2fafb0r ; 0.686275 ; DirectX::Colors::PaleTurquoise
	DD	03f6eeef0r			; 0.933333
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f189899r ; 0.596078 ; DirectX::Colors::PaleGreen
	DD	03f7bfbfdr			; 0.984314
	DD	03f189899r			; 0.596078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::PaleGoldenrod
	DD	03f68e8ear			; 0.909804
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Orchid
	DD	03ee0e0e2r			; 0.439216
	DD	03f56d6d8r			; 0.839216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::OrangeRed
	DD	03e8a8a8br			; 0.270588
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D11Counter
CONST	SEGMENT
_IID_ID3D11Counter DD 06e8c49fbH
	DW	0a371H
	DW	04770H
	DB	0b4H
	DB	040H
	DB	029H
	DB	08H
	DB	060H
	DB	022H
	DB	0b7H
	DB	041H
CONST	ENDS
;	COMDAT ?Orange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Orange
	DD	03f25a5a6r			; 0.647059
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed6d6d8r ; 0.419608 ; DirectX::Colors::OliveDrab
	DD	03f0e8e8fr			; 0.556863
	DD	03e0c8c8dr			; 0.137255
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Olive@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Olive@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Olive
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D10EffectConstantBuffer
CONST	SEGMENT
_IID_ID3D10EffectConstantBuffer DD 056648f4dH
	DW	0cc8bH
	DW	04444H
	DB	0a5H
	DB	0adH
	DB	0b5H
	DB	0a3H
	DB	0d7H
	DB	06eH
	DB	091H
	DB	0b3H
CONST	ENDS
;	COMDAT ?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7dfdffr ; 0.992157 ; DirectX::Colors::OldLace
	DD	03f75f5f7r			; 0.960784
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Navy@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Navy@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Navy
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::NavajoWhite
	DD	03f5edee0r			; 0.870588
	DD	03f2dadaer			; 0.678431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Moccasin
	DD	03f64e4e6r			; 0.894118
	DD	03f35b5b6r			; 0.709804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::MistyRose
	DD	03f64e4e6r			; 0.894118
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::MintCream
	DD	03f800000r			; 1
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03dc8c8car ; 0.0980392 ; DirectX::Colors::MidnightBlue
	DD	03dc8c8car			; 0.0980392
	DD	03ee0e0e2r			; 0.439216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f47c7c9r ; 0.780392 ; DirectX::Colors::MediumVioletRed
	DD	03da8a8a9r			; 0.0823529
	DD	03f058586r			; 0.521569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::MediumTurquoise
	DD	03f51d1d3r			; 0.819608
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumSpringGreen
	DD	03f7afafcr			; 0.980392
	DD	03f1a9a9br			; 0.603922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef6f6f8r ; 0.482353 ; DirectX::Colors::MediumSlateBlue
	DD	03ed0d0d2r			; 0.407843
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e70f0f2r ; 0.235294 ; DirectX::Colors::MediumSeaGreen
	DD	03f33b3b4r			; 0.701961
	DD	03ee2e2e4r			; 0.443137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f139394r ; 0.576471 ; DirectX::Colors::MediumPurple
	DD	03ee0e0e2r			; 0.439216
	DD	03f5bdbddr			; 0.858824
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3ababbr ; 0.729412 ; DirectX::Colors::MediumOrchid
	DD	03eaaaaabr			; 0.333333
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumBlue
	DD	000000000r			; 0
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ecccccer ; 0.4 ; DirectX::Colors::MediumAquamarine
	DD	03f4dcdcfr			; 0.803922
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Maroon
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Magenta
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?Linen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Linen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Linen
	DD	03f70f0f2r			; 0.941177
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e48c8car ; 0.196078 ; DirectX::Colors::LimeGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lime@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lime@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Lime
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightYellow
	DD	03f800000r			; 1
	DD	03f60e0e2r			; 0.878431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::LightSteelBlue
	DD	03f44c4c6r			; 0.768628
	DD	03f5edee0r			; 0.870588
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eeeeef0r ; 0.466667 ; DirectX::Colors::LightSlateGray
	DD	03f088889r			; 0.533333
	DD	03f19999ar			; 0.6
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::LightSkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e008081r ; 0.12549 ; DirectX::Colors::LightSeaGreen
	DD	03f32b2b3r			; 0.698039
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightSalmon
	DD	03f20a0a1r			; 0.627451
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightPink
	DD	03f36b6b7r			; 0.713726
	DD	03f41c1c3r			; 0.756863
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f53d3d5r ; 0.827451 ; DirectX::Colors::LightGray
	DD	03f53d3d5r			; 0.827451
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f109091r ; 0.564706 ; DirectX::Colors::LightGreen
	DD	03f6eeef0r			; 0.933333
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessorEnumerator
CONST	SEGMENT
_IID_ID3D11VideoProcessorEnumerator DD 031627037H
	DW	053abH
	DW	04200H
	DB	090H
	DB	061H
	DB	05H
	DB	0faH
	DB	0a9H
	DB	0abH
	DB	045H
	DB	0f9H
CONST	ENDS
;	COMDAT ?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::LightGoldenrodYellow
	DD	03f7afafcr			; 0.980392
	DD	03f52d2d4r			; 0.823529
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f60e0e2r ; 0.878431 ; DirectX::Colors::LightCyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::LightCoral
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::LightBlue
	DD	03f58d8dar			; 0.847059
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LemonChiffon
	DD	03f7afafcr			; 0.980392
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef8f8far ; 0.486275 ; DirectX::Colors::LawnGreen
	DD	03f7cfcfer			; 0.988235
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT _IID_ID3D11Device
CONST	SEGMENT
_IID_ID3D11Device DD 0db6f6ddbH
	DW	0ac77H
	DW	04e88H
	DB	082H
	DB	053H
	DB	081H
	DB	09dH
	DB	0f9H
	DB	0bbH
	DB	0f1H
	DB	040H
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LavenderBlush
	DD	03f70f0f2r			; 0.941177
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f66e6e8r ; 0.901961 ; DirectX::Colors::Lavender
	DD	03f66e6e8r			; 0.901961
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Khaki
	DD	03f66e6e8r			; 0.901961
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Ivory
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e969697r ; 0.294118 ; DirectX::Colors::Indigo
	DD	000000000r			; 0
	DD	03f028283r			; 0.509804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT _IID_ID3D10Buffer
CONST	SEGMENT
_IID_ID3D10Buffer DD 09b7e4c02H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::IndianRed
	DD	03eb8b8b9r			; 0.360784
	DD	03eb8b8b9r			; 0.360784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-005 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
CONST	ENDS
;	COMDAT ?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::HotPink
	DD	03ed2d2d4r			; 0.411765
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Honeydew
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::GreenYellow
	DD	03f800000r			; 1
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?Green@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Green@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Green
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?Gray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Gray
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Goldenrod
	DD	03f25a5a6r			; 0.647059
	DD	03e008081r			; 0.12549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?Gold@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gold@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Gold
	DD	03f57d7d9r			; 0.843137
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f78f8far ; 0.972549 ; DirectX::Colors::GhostWhite
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Gainsboro
	DD	03f5cdcder			; 0.862745
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Fuchsia
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e088889r ; 0.133333 ; DirectX::Colors::ForestGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::FloralWhite
	DD	03f7afafcr			; 0.980392
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f32b2b3r ; 0.698039 ; DirectX::Colors::Firebrick
	DD	03e088889r			; 0.133333
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03df0f0f2r ; 0.117647 ; DirectX::Colors::DodgerBlue
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed2d2d4r ; 0.411765 ; DirectX::Colors::DimGray
	DD	03ed2d2d4r			; 0.411765
	DD	03ed2d2d4r			; 0.411765
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DeepSkyBlue
	DD	03f3fbfc0r			; 0.74902
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DeepPink
	DD	03da0a0a1r			; 0.0784314
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f149495r ; 0.580392 ; DirectX::Colors::DarkViolet
	DD	000000000r			; 0
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkTurquoise
	DD	03f4eced0r			; 0.807843
	DD	03f51d1d3r			; 0.819608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e3cbcbdr ; 0.184314 ; DirectX::Colors::DarkSlateGray
	DD	03e9e9e9fr			; 0.309804
	DD	03e9e9e9fr			; 0.309804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+009 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
CONST	ENDS
;	COMDAT ?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::DarkSlateBlue
	DD	03e74f4f6r			; 0.239216
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+009 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
CONST	ENDS
;	COMDAT ?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0f8f90r ; 0.560784 ; DirectX::Colors::DarkSeaGreen
	DD	03f3cbcbdr			; 0.737255
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f69e9ebr ; 0.913726 ; DirectX::Colors::DarkSalmon
	DD	03f169697r			; 0.588235
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkRed
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+006
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f19999ar ; 0.6 ; DirectX::Colors::DarkOrchid
	DD	03e48c8car			; 0.196078
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DarkOrange
	DD	03f0c8c8dr			; 0.54902
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionLinkingGraph
CONST	SEGMENT
_IID_ID3D11FunctionLinkingGraph DD 054133220H
	DW	01ce8H
	DW	043d3H
	DB	082H
	DB	036H
	DB	098H
	DB	055H
	DB	0c5H
	DB	0ceH
	DB	0ecH
	DB	0ffH
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-007
	DD	030800000r			; 9.31323e-010
CONST	ENDS
;	COMDAT ?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eaaaaabr ; 0.333333 ; DirectX::Colors::DarkOliveGreen
	DD	03ed6d6d8r			; 0.419608
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkMagenta
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflection1
CONST	SEGMENT
_IID_ID3D10ShaderReflection1 DD 0c3457783H
	DW	0a846H
	DW	047ceH
	DB	095H
	DB	020H
	DB	0ceH
	DB	0a6H
	DB	0f6H
	DB	06eH
	DB	074H
	DB	047H
CONST	ENDS
;	COMDAT ?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3dbdber ; 0.741176 ; DirectX::Colors::DarkKhaki
	DD	03f37b7b8r			; 0.717647
	DD	03ed6d6d8r			; 0.419608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkGreen
	DD	03ec8c8car			; 0.392157
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f29a9aar ; 0.662745 ; DirectX::Colors::DarkGray
	DD	03f29a9aar			; 0.662745
	DD	03f29a9aar			; 0.662745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f38b8b9r ; 0.721569 ; DirectX::Colors::DarkGoldenrod
	DD	03f068687r			; 0.52549
	DD	03d30b0b1r			; 0.0431373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkCyan
	DD	03f0b8b8cr			; 0.545098
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkBlue
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectDepthStencilViewVariable
CONST	SEGMENT
_IID_ID3D10EffectDepthStencilViewVariable DD 03e02c918H
	DW	0cc79H
	DW	04985H
	DB	0b6H
	DB	022H
	DB	02dH
	DB	092H
	DB	0adH
	DB	070H
	DB	016H
	DB	023H
CONST	ENDS
;	COMDAT ?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Cyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Crimson
	DD	03da0a0a1r			; 0.0784314
	DD	03e70f0f2r			; 0.235294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Cornsilk
	DD	03f78f8far			; 0.972549
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ec8c8car ; 0.392157 ; DirectX::Colors::CornflowerBlue
	DD	03f159596r			; 0.584314
	DD	03f6dedefr			; 0.929412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-005
	DD	037800000r			; 1.52588e-005
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-005
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Coral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Coral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Coral
	DD	03efeff00r			; 0.498039
	DD	03ea0a0a1r			; 0.313726
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Chocolate
	DD	03ed2d2d4r			; 0.411765
	DD	03df0f0f2r			; 0.117647
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Chartreuse
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ebebebfr ; 0.372549 ; DirectX::Colors::CadetBlue
	DD	03f1e9e9fr			; 0.619608
	DD	03f20a0a1r			; 0.627451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5edee0r ; 0.870588 ; DirectX::Colors::BurlyWood
	DD	03f38b8b9r			; 0.721569
	DD	03f078788r			; 0.529412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _IID_ID3D11LinkingNode
CONST	SEGMENT
_IID_ID3D11LinkingNode DD 0d80dd70cH
	DW	08d2fH
	DW	04751H
	DB	094H
	DB	0a1H
	DB	03H
	DB	0c7H
	DB	09bH
	DB	035H
	DB	056H
	DB	0dbH
CONST	ENDS
;	COMDAT ?Brown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Brown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f25a5a6r ; 0.647059 ; DirectX::Colors::Brown
	DD	03e28a8a9r			; 0.164706
	DD	03e28a8a9r			; 0.164706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0a8a8br ; 0.541176 ; DirectX::Colors::BlueViolet
	DD	03e2cacadr			; 0.168627
	DD	03f62e2e4r			; 0.886275
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Blue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Blue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Blue
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::BlanchedAlmond
	DD	03f6bebedr			; 0.921569
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?Black@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Black@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Black
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Bisque
	DD	03f64e4e6r			; 0.894118
	DD	03f44c4c6r			; 0.768628
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Beige@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Beige@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Beige
	DD	03f75f5f7r			; 0.960784
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Azure@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Azure@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Azure
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Aquamarine
	DD	03f800000r			; 1
	DD	03f54d4d6r			; 0.831373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+006 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
CONST	ENDS
;	COMDAT ?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Aqua
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-005
	DD	030000100r			; 4.65675e-010
	DD	030000100r			; 4.65675e-010
CONST	ENDS
;	COMDAT ?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::AntiqueWhite
	DD	03f6bebedr			; 0.921569
	DD	03f57d7d9r			; 0.843137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::AliceBlue
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _IID_ID3D11Predicate
CONST	SEGMENT
_IID_ID3D11Predicate DD 09eb576ddH
	DW	09f77H
	DW	04d86H
	DB	081H
	DB	0aaH
	DB	08bH
	DB	0abH
	DB	05fH
	DB	0e4H
	DB	090H
	DB	0e2H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT _D3D11_CRYPTO_TYPE_AES128_CTR
CONST	SEGMENT
_D3D11_CRYPTO_TYPE_AES128_CTR DD 09b6bd711H
	DW	04f74H
	DW	041c9H
	DB	09eH
	DB	07bH
	DB	0bH
	DB	0e2H
	DB	0d7H
	DB	0d9H
	DB	03bH
	DB	04fH
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-010
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _IID_ID3D10Resource
CONST	SEGMENT
_IID_ID3D10Resource DD 09b7e4c01H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-006
	DD	031004020r			; 1.86629e-009
	DD	02faaaaabr			; 3.10441e-010
CONST	ENDS
;	COMDAT _IID_ID3D11Query
CONST	SEGMENT
_IID_ID3D11Query DD 0d6c00747H
	DW	087b7H
	DW	0425eH
	DB	0b8H
	DB	04dH
	DB	044H
	DB	0d1H
	DB	08H
	DB	056H
	DB	0aH
	DB	0fdH
CONST	ENDS
;	COMDAT _GUID_DeviceType
CONST	SEGMENT
_GUID_DeviceType DD 0d722fb4dH
	DW	07a68H
	DW	0437aH
	DB	0b2H
	DB	0cH
	DB	058H
	DB	04H
	DB	0eeH
	DB	024H
	DB	094H
	DB	0a6H
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT _IID_ID3D11VideoDevice
CONST	SEGMENT
_IID_ID3D11VideoDevice DD 010ec4d5bH
	DW	0975aH
	DW	04689H
	DB	0b9H
	DB	0e4H
	DB	0d0H
	DB	0aaH
	DB	0c3H
	DB	0fH
	DB	0e3H
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D11Linker
CONST	SEGMENT
_IID_ID3D11Linker DD 059a6cd0eH
	DW	0e10dH
	DW	04c1fH
	DB	088H
	DB	0c0H
	DB	063H
	DB	0abH
	DB	0a1H
	DB	0daH
	DB	0f3H
	DB	0eH
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-008 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-005
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-010
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderResourceView
CONST	SEGMENT
_IID_ID3D11ShaderResourceView DD 0b0e06fe0H
	DW	08192H
	DW	04e1aH
	DB	0b1H
	DB	0caH
	DB	036H
	DB	0d7H
	DB	041H
	DB	047H
	DB	010H
	DB	0b2H
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-007 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
CONST	ENDS
;	COMDAT _IID_ID3D10RasterizerState
CONST	SEGMENT
_IID_ID3D10RasterizerState DD 0a2a07292H
	DW	089afH
	DW	04345H
	DB	0beH
	DB	02eH
	DB	0c5H
	DB	03dH
	DB	09fH
	DB	0bbH
	DB	06eH
	DB	09fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppCbCr
CONST	SEGMENT
_GUID_WICPixelFormat16bppCbCr DD 0ff95ba6eH
	DW	011e0H
	DW	04263H
	DB	0bbH
	DB	045H
	DB	01H
	DB	072H
	DB	01fH
	DB	034H
	DB	060H
	DB	0a4H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCr
CONST	SEGMENT
_GUID_WICPixelFormat8bppCr DD 0b8145053H
	DW	02116H
	DW	049f0H
	DB	088H
	DB	035H
	DB	0edH
	DB	084H
	DB	04bH
	DB	020H
	DB	05cH
	DB	051H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCb
CONST	SEGMENT
_GUID_WICPixelFormat8bppCb DD 01339f224H
	DW	06bfeH
	DW	04c3eH
	DB	093H
	DB	02H
	DB	0e4H
	DB	0f3H
	DB	0a6H
	DB	0d0H
	DB	0caH
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppY
CONST	SEGMENT
_GUID_WICPixelFormat8bppY DD 091b4db54H
	DW	02df9H
	DW	042f0H
	DB	0b4H
	DB	049H
	DB	029H
	DB	09H
	DB	0bbH
	DB	03dH
	DB	0f8H
	DB	08eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat144bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat144bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	039H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat128bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	038H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat112bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	037H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat96bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	036H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	035H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	034H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat72bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat72bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	033H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	032H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat56bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	031H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat48bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	030H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat32bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat128bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat112bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat96bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	029H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat80bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	028H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	027H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectRenderTargetViewVariable
CONST	SEGMENT
_IID_ID3D10EffectRenderTargetViewVariable DD 028ca0cc3H
	DW	0c2c9H
	DW	040bbH
	DB	0b5H
	DB	07fH
	DB	067H
	DB	0b7H
	DB	037H
	DB	012H
	DB	02bH
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	026H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	025H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat56bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	024H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	023H
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat40bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	022H
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT _IID_ID3D10BlendState
CONST	SEGMENT
_IID_ID3D10BlendState DD 0edad8d19H
	DW	08a35H
	DW	04d6dH
	DB	085H
	DB	066H
	DB	02eH
	DB	0a2H
	DB	076H
	DB	0cdH
	DB	0e1H
	DB	061H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat32bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	021H
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat24bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	020H
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat64bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03fH
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBE
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBE DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03dH
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03bH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	042H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	041H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01eH
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	040H
CONST	ENDS
;	COMDAT _IID_ID3D10Device
CONST	SEGMENT
_IID_ID3D10Device DD 09b7e4c0fH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT _IID_ID3D11ModuleInstance
CONST	SEGMENT
_IID_ID3D11ModuleInstance DD 0469e07f7H
	DW	045aH
	DW	048d5H
	DB	0aaH
	DB	012H
	DB	068H
	DB	0a4H
	DB	078H
	DB	0cdH
	DB	0f7H
	DB	05dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRAFixedPoint DD 0356de33cH
	DW	054d2H
	DW	04a23H
	DB	0bbH
	DB	04H
	DB	09bH
	DB	07bH
	DB	0f9H
	DB	0b1H
	DB	0d4H
	DB	02dH
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01dH
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat32bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01bH
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppPRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppPRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01aH
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _IID_ID3D11Asynchronous
CONST	SEGMENT
_IID_ID3D11Asynchronous DD 04b35d0cdH
	DW	01e15H
	DW	04258H
	DB	09cH
	DB	098H
	DB	01bH
	DB	013H
	DB	033H
	DB	0f6H
	DB	0ddH
	DB	03bH
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat96bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	018H
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGRFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGRFixedPoint DD 049ca140eH
	DW	0cab6H
	DW	0493bH
	DB	09dH
	DB	0dfH
	DB	060H
	DB	018H
	DB	07cH
	DB	037H
	DB	053H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	012H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR101010
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR101010 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	014H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	013H
CONST	ENDS
;	COMDAT _IID_ID3D10Counter
CONST	SEGMENT
_IID_ID3D10Counter DD 09b7e4c11H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPBGRA DD 08c518e8eH
	DW	0a4ecH
	DW	0468bH
	DB	0aeH
	DB	070H
	DB	0c9H
	DB	0a3H
	DB	05aH
	DB	09cH
	DB	055H
	DB	030H
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRA DD 01562ff7cH
	DW	0d352H
	DW	046f9H
	DB	097H
	DB	09eH
	DB	042H
	DB	097H
	DB	06bH
	DB	079H
	DB	022H
	DB	046H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	015H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPRGBA DD 03cc4a650H
	DW	0a527H
	DW	04d37H
	DB	0a9H
	DB	016H
	DB	031H
	DB	042H
	DB	0c7H
	DB	0ebH
	DB	0edH
	DB	0baH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _IID_ID3D11Module
CONST	SEGMENT
_IID_ID3D11Module DD 0cac701eeH
	DW	080fcH
	DW	04122H
	DB	082H
	DB	042H
	DB	010H
	DB	0b3H
	DB	09cH
	DB	08cH
	DB	0ecH
	DB	034H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	010H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat24bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppGray
CONST	SEGMENT
_GUID_WICPixelFormat4bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	07H
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionParameterReflection
CONST	SEGMENT
_IID_ID3D11FunctionParameterReflection DD 042757488H
	DW	0334fH
	DW	047feH
	DB	098H
	DB	02eH
	DB	01aH
	DB	065H
	DB	0d0H
	DB	08cH
	DB	0c4H
	DB	062H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppGray
CONST	SEGMENT
_GUID_WICPixelFormat2bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	06H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatBlackWhite
CONST	SEGMENT
_GUID_WICPixelFormatBlackWhite DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	05H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat8bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	04H
CONST	ENDS
;	COMDAT _IID_ID3D10InfoQueue
CONST	SEGMENT
_IID_ID3D10InfoQueue DD 01b940b17H
	DW	02642H
	DW	04d1fH
	DB	0abH
	DB	01fH
	DB	0b9H
	DB	09bH
	DB	0adH
	DB	0cH
	DB	039H
	DB	05fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat4bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat2bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat1bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat1bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatDontCare
CONST	SEGMENT
_GUID_WICPixelFormatDontCare DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	00H
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT _IID_ID3D10DepthStencilState
CONST	SEGMENT
_IID_ID3D10DepthStencilState DD 02b4b1cc8H
	DW	0a4adH
	DW	041f8H
	DB	083H
	DB	022H
	DB	0caH
	DB	086H
	DB	0fcH
	DB	03eH
	DB	0c6H
	DB	075H
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT _IID_ID3D11VideoDecoder
CONST	SEGMENT
_IID_ID3D11VideoDecoder DD 03c9c5b51H
	DW	0995dH
	DW	048d1H
	DB	09bH
	DB	08dH
	DB	0faH
	DB	05cH
	DB	0aeH
	DB	0deH
	DB	0d6H
	DB	05cH
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-005
	DD	03824bec9r			; 3.92783e-005
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-007 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-005
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-008 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-006
CONST	ENDS
;	COMDAT _IID_ID3D10EffectShaderResourceVariable
CONST	SEGMENT
_IID_ID3D10EffectShaderResourceVariable DD 0c0a7157bH
	DW	0d872H
	DW	04b1dH
	DB	080H
	DB	073H
	DB	0efH
	DB	0c2H
	DB	0acH
	DB	0d4H
	DB	0b1H
	DB	0fcH
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionReflection
CONST	SEGMENT
_IID_ID3D11FunctionReflection DD 0207bcecbH
	DW	0d683H
	DW	04a06H
	DB	0a8H
	DB	0a3H
	DB	09bH
	DB	014H
	DB	09bH
	DB	09fH
	DB	073H
	DB	0a4H
CONST	ENDS
;	COMDAT _CLSID_WICPlanarFormatConverter
CONST	SEGMENT
_CLSID_WICPlanarFormatConverter DD 0184132b8H
	DW	032f8H
	DW	04784H
	DB	091H
	DB	031H
	DB	0ddH
	DB	072H
	DB	024H
	DB	0b2H
	DB	034H
	DB	038H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterWMPhoto
CONST	SEGMENT
_CLSID_WICFormatConverterWMPhoto DD 09cb5172bH
	DW	0d600H
	DW	046baH
	DB	0abH
	DB	077H
	DB	077H
	DB	0bbH
	DB	07eH
	DB	03aH
	DB	00H
	DB	0d9H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterNChannel
CONST	SEGMENT
_CLSID_WICFormatConverterNChannel DD 0c17cabb2H
	DW	0d4a3H
	DW	047d7H
	DB	0a5H
	DB	057H
	DB	033H
	DB	09bH
	DB	02eH
	DB	0fbH
	DB	0d4H
	DB	0f1H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterHighColor
CONST	SEGMENT
_CLSID_WICFormatConverterHighColor DD 0ac75d454H
	DW	09f37H
	DW	048f8H
	DB	0b9H
	DB	072H
	DB	04eH
	DB	019H
	DB	0bcH
	DB	085H
	DB	060H
	DB	011H
CONST	ENDS
;	COMDAT _IID_ID3D11SamplerState
CONST	SEGMENT
_IID_ID3D11SamplerState DD 0da6fea51H
	DW	0564cH
	DW	04487H
	DB	098H
	DB	010H
	DB	0f0H
	DB	0d0H
	DB	0f9H
	DB	0b4H
	DB	0e3H
	DB	0a5H
CONST	ENDS
;	COMDAT _CLSID_WICDefaultFormatConverter
CONST	SEGMENT
_CLSID_WICDefaultFormatConverter DD 01a3f11dcH
	DW	0b514H
	DW	04b17H
	DB	08cH
	DB	05fH
	DB	021H
	DB	054H
	DB	051H
	DB	038H
	DB	052H
	DB	0f1H
CONST	ENDS
;	COMDAT _CATID_WICMetadataWriter
CONST	SEGMENT
_CATID_WICMetadataWriter DD 0abe3b9a4H
	DW	0257dH
	DW	04b97H
	DB	0bdH
	DB	01aH
	DB	029H
	DB	04aH
	DB	0f4H
	DB	096H
	DB	022H
	DB	02eH
CONST	ENDS
;	COMDAT _CATID_WICMetadataReader
CONST	SEGMENT
_CATID_WICMetadataReader DD 05af94d8H
	DW	07174H
	DW	04cd2H
	DB	0beH
	DB	04aH
	DB	041H
	DB	024H
	DB	0b8H
	DB	0eH
	DB	0e4H
	DB	0b8H
CONST	ENDS
;	COMDAT _CATID_WICFormatConverters
CONST	SEGMENT
_CATID_WICFormatConverters DD 07835eae8H
	DW	0bf14H
	DW	049d1H
	DB	093H
	DB	0ceH
	DB	053H
	DB	03aH
	DB	040H
	DB	07bH
	DB	022H
	DB	048H
CONST	ENDS
;	COMDAT _CATID_WICPixelFormats
CONST	SEGMENT
_CATID_WICPixelFormats DD 02b46e70fH
	DW	0cda7H
	DW	0473eH
	DB	089H
	DB	0f6H
	DB	0dcH
	DB	096H
	DB	030H
	DB	0a2H
	DB	039H
	DB	0bH
CONST	ENDS
;	COMDAT _CATID_WICBitmapEncoders
CONST	SEGMENT
_CATID_WICBitmapEncoders DD 0ac757296H
	DW	03522H
	DW	04e11H
	DB	098H
	DB	062H
	DB	0c1H
	DB	07bH
	DB	0e5H
	DB	0a1H
	DB	076H
	DB	07eH
CONST	ENDS
;	COMDAT _CATID_WICBitmapDecoders
CONST	SEGMENT
_CATID_WICBitmapDecoders DD 07ed96837H
	DW	096f0H
	DW	04812H
	DB	0b2H
	DB	011H
	DB	0f1H
	DB	03cH
	DB	024H
	DB	011H
	DB	07eH
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_WICImagingCategories
CONST	SEGMENT
_CLSID_WICImagingCategories DD 0fae3d380H
	DW	0fea4H
	DW	04623H
	DB	08cH
	DB	075H
	DB	0c6H
	DB	0b6H
	DB	011H
	DB	010H
	DB	0b6H
	DB	081H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatDds
CONST	SEGMENT
_GUID_ContainerFormatDds DD 09967cb95H
	DW	02e85H
	DW	04ac8H
	DB	08cH
	DB	0a2H
	DB	083H
	DB	0d7H
	DB	0ccH
	DB	0d4H
	DB	025H
	DB	0c9H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatWmp
CONST	SEGMENT
_GUID_ContainerFormatWmp DD 057a37caaH
	DW	0367aH
	DW	04540H
	DB	091H
	DB	06bH
	DB	0f1H
	DB	083H
	DB	0c5H
	DB	09H
	DB	03aH
	DB	04bH
CONST	ENDS
;	COMDAT _GUID_ContainerFormatGif
CONST	SEGMENT
_GUID_ContainerFormatGif DD 01f8a5601H
	DW	07d4dH
	DW	04cbdH
	DB	09cH
	DB	082H
	DB	01bH
	DB	0c8H
	DB	0d4H
	DB	0eeH
	DB	0b9H
	DB	0a5H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatTiff
CONST	SEGMENT
_GUID_ContainerFormatTiff DD 0163bcc30H
	DW	0e2e9H
	DW	04f0bH
	DB	096H
	DB	01dH
	DB	0a3H
	DB	0e9H
	DB	0fdH
	DB	0b7H
	DB	088H
	DB	0a3H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatJpeg
CONST	SEGMENT
_GUID_ContainerFormatJpeg DD 019e4a5aaH
	DW	05662H
	DW	04fc5H
	DB	0a0H
	DB	0c0H
	DB	017H
	DB	058H
	DB	02H
	DB	08eH
	DB	010H
	DB	057H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatIco
CONST	SEGMENT
_GUID_ContainerFormatIco DD 0a3a860c4H
	DW	0338fH
	DW	04c17H
	DB	091H
	DB	09aH
	DB	0fbH
	DB	0a4H
	DB	0b5H
	DB	062H
	DB	08fH
	DB	021H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
;	COMDAT _IID_ID3D11LibraryReflection
CONST	SEGMENT
_IID_ID3D11LibraryReflection DD 054384f1bH
	DW	05b3eH
	DW	04bb7H
	DB	0aeH
	DB	01H
	DB	060H
	DB	0baH
	DB	030H
	DB	097H
	DB	0cbH
	DB	0b6H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatBmp
CONST	SEGMENT
_GUID_ContainerFormatBmp DD 0af1d87eH
	DW	0fcfeH
	DW	04188H
	DB	0bdH
	DB	0ebH
	DB	0a7H
	DB	090H
	DB	064H
	DB	071H
	DB	0cbH
	DB	0e3H
CONST	ENDS
CONST	SEGMENT
$SG152594 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG152595 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'B', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H
	DB	'(', 00H, ')', 00H, '-', 00H, '>', 00H, 'W', 00H, 'i', 00H, 'd'
	DB	00H, 't', 00H, 'h', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'(', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H, ')', 00H, 'r'
	DB	00H, 'c', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '.', 00H, 'r', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't'
	DB	00H, 00H, 00H
$SG152598 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152599 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'B', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H
	DB	'(', 00H, ')', 00H, '-', 00H, '>', 00H, 'H', 00H, 'e', 00H, 'i'
	DB	00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '(', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H, ')'
	DB	00H, 'r', 00H, 'c', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, '.', 00H, 'b', 00H, 'o', 00H, 't', 00H, 't'
	DB	00H, 'o', 00H, 'm', 00H, 00H, 00H
$SG153632 DB	' ', 00H, '(', 00H, 'M', 00H, 'S', 00H, '%', 00H, 'u', 00H
	DB	',', 00H, ' ', 00H, 'Q', 00H, '%', 00H, 'u', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG153635 DB	'o', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG153636 DB	'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG153656 DB	00H, 00H
	ORG $+2
$SG153637 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, ' ', 00H
	DB	'%', 00H, '%', 00H, 's', 00H, 'V', 00H, 's', 00H, 'y', 00H, 'n'
	DB	00H, 'c', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'u', 00H, 'x', 00H, '%', 00H, 'u', 00H, ')', 00H, ','
	DB	00H, ' ', 00H, '%', 00H, 's', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG153649 DB	'%', 00H, '0', 00H, '.', 00H, '2', 00H, 'f', 00H, ' ', 00H
	DB	'f', 00H, 'p', 00H, 's', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG151611 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'f', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'l'
	DB	00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l', 00H, 00H, 00H
$SG151614 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'1', 00H, '_', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG151617 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'1', 00H, '_', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG153666 DB	'R', 00H, 'E', 00H, 'F', 00H, 'E', 00H, 'R', 00H, 'E', 00H
	DB	'N', 00H, 'C', 00H, 'E', 00H, 00H, 00H
$SG151620 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'0', 00H, '_', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG153669 DB	'H', 00H, 'A', 00H, 'R', 00H, 'D', 00H, 'W', 00H, 'A', 00H
	DB	'R', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG151623 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'0', 00H, '_', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG153672 DB	'S', 00H, 'O', 00H, 'F', 00H, 'T', 00H, 'W', 00H, 'A', 00H
	DB	'R', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG151626 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '9', 00H
	DB	'_', 00H, '3', 00H, 00H, 00H
$SG153675 DB	'W', 00H, 'A', 00H, 'R', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG153677 DB	':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG151629 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '9', 00H
	DB	'_', 00H, '2', 00H, 00H, 00H
$SG151632 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '9', 00H
	DB	'_', 00H, '1', 00H, 00H, 00H
$SG151634 DB	'a', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG153684 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153685 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG151638 DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG151640 DB	'o', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG151644 DB	'f', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 's', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG151646 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'h', 00H
	DB	'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG153695 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '9', 00H
	DB	'.', 00H, '1', 00H, ')', 00H, 00H, 00H
$SG151648 DB	's', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	's', 00H, 'h', 00H, 'o', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'i'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG153697 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '9', 00H
	DB	'.', 00H, '2', 00H, ')', 00H, 00H, 00H
$SG151650 DB	'%', 00H, 's', 00H, '.', 00H, 'b', 00H, 'm', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG153699 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '9', 00H
	DB	'.', 00H, '3', 00H, ')', 00H, 00H, 00H
$SG151652 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG153701 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'0', 00H, '.', 00H, '0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG151654 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'w', 00H
	DB	'a', 00H, 'r', 00H, 'p', 00H, 00H, 00H
$SG153703 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'0', 00H, '.', 00H, '1', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG151656 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'v', 00H
	DB	's', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG153705 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'1', 00H, '.', 00H, '0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG153707 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'1', 00H, '.', 00H, '1', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG151660 DB	'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG152686 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152687 DB	'p', 00H, 'I', 00H, 'm', 00H, 'm', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'x', 00H, 't', 00H, 00H, 00H
$SG151664 DB	'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG151668 DB	's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'x', 00H
	DB	00H, 00H
	ORG $+2
$SG151672 DB	's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG151676 DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	'n', 00H, 't', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG151682 DB	'q', 00H, 'u', 00H, 'i', 00H, 't', 00H, 'a', 00H, 'f', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG151686 DB	'n', 00H, 'o', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H
	DB	'r', 00H, 'm', 00H, 's', 00H, 'g', 00H, 'b', 00H, 'o', 00H, 'x'
	DB	00H, 'e', 00H, 's', 00H, 00H, 00H
$SG152711 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'l', 00H
	DB	'e', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'p', 00H, '3', 00H, 'D'
	DB	00H, 'E', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 'r', 00H, 'o', 00H
	DB	'n', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG152712 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151688 DB	'n', 00H, 'o', 00H, 's', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	's', 00H, 00H, 00H
$SG151690 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG151695 DB	'U', 00H, 'n', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 'o', 00H
	DB	'g', 00H, 'n', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, 's', 00H, 00H, 00H
$SG151728 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG151729 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151745 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	00H, 00H
$SG151750 DB	'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, 00H, 00H
$SG151751 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151764 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	00H, 00H
$SG151768 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H
	DB	00H
	ORG $+2
$SG151769 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152802 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG152803 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151781 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG151782 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151787 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 00H, 00H
$SG151788 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151795 DB	'S', 00H, 'e', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'o', 00H, 'n', 00H, 'g'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG151796 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151955 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	00H, 00H
$SG152980 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'K', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r'
	DB	00H, 00H, 00H
$SG152981 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151971 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'M', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, 'L', 00H, 'o', 00H, 'o', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG151972 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151989 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'M', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, 'L', 00H, 'o', 00H, 'o', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG151990 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153026 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, '3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG153033 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'e', 00H, 's'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'w', 00H
	DB	'o', 00H, 'r', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'v', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H
	DB	00H, 00H
$SG152013 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG153035 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, ' ', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, '3', 00H, 'D', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, '.', 00H, 00H, 00H
$SG152014 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153041 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'q', 00H, 'u', 00H
	DB	'i', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'e'
	DB	00H, 'd', 00H, 'i', 00H, 'a', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152018 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG152032 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG153047 DB	'T', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, '3', 00H, 'D', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'h', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'a', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H, 'e', 00H
	DB	'r', 00H, 'o', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'm', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 's', 00H, 'o', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'e', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'd', 00H, '.'
	DB	00H, 00H, 00H
$SG153053 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '3', 00H, 'D', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152036 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG152033 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, '.', 00H, 00H
	DB	00H
	ORG $+2
$SG153059 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, '3', 00H, 'D', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '.', 00H, 00H, 00H
$SG152040 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG152037 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, ',', 00H, ' '
	DB	00H, 'b', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, 'a', 00H, 'v', 00H, 'a', 00H, 'i', 00H, 'l'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i', 00H, 's'
	DB	00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H
	DB	'.', 00H, 0aH, 00H, 'F', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd'
	DB	00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'i'
	DB	00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H
	DB	't', 00H, ' ', 00H, 'K', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 'l'
	DB	00H, 'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'B', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'A', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '#', 00H
	DB	'9', 00H, '7', 00H, '1', 00H, '6', 00H, '4', 00H, '4', 00H, 0aH
	DB	00H, 'h', 00H, 't', 00H, 't', 00H, 'p', 00H, ':', 00H, '/', 00H
	DB	'/', 00H, 'g', 00H, 'o', 00H, '.', 00H, 'm', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	'.', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '/', 00H, 'f', 00H, 'w'
	DB	00H, 'l', 00H, 'i', 00H, 'n', 00H, 'k', 00H, '/', 00H, '?', 00H
	DB	'L', 00H, 'i', 00H, 'n', 00H, 'k', 00H, 'I', 00H, 'd', 00H, '='
	DB	00H, '1', 00H, '6', 00H, '0', 00H, '1', 00H, '8', 00H, '9', 00H
	DB	00H, 00H
	ORG $+2
$SG152043 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG153065 DB	'A', 00H, 'n', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'c', 00H, 'c', 00H, 'u'
	DB	00H, 'r', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'd'
	DB	00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 00H, 00H
$SG153082 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, ' ', 00H, 'A', 00H
	DB	'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG152041 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, '.', 00H, ' '
	DB	00H, 'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, ' '
	DB	00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.'
	DB	00H, 0aH, 00H, 'F', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H
	DB	'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'K', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 'l', 00H
	DB	'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'B', 00H, 'a'
	DB	00H, 's', 00H, 'e', 00H, ' ', 00H, 'A', 00H, 'r', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '#', 00H, '9'
	DB	00H, '3', 00H, '5', 00H, '7', 00H, '9', 00H, '1', 00H, 0aH, 00H
	DB	'h', 00H, 't', 00H, 't', 00H, 'p', 00H, ':', 00H, '/', 00H, '/'
	DB	00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, '.', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o'
	DB	00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, '.', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '/', 00H, 'k', 00H, 'b', 00H, '/', 00H, '9'
	DB	00H, '3', 00H, '5', 00H, '7', 00H, '9', 00H, '1', 00H, '/', 00H
	DB	00H, 00H
$SG152044 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'i'
	DB	00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'S'
	DB	00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152059 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG152088 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153071 DB	'A', 00H, 'n', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'c', 00H, 'c', 00H, 'u'
	DB	00H, 'r', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'd'
	DB	00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, ' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152087 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd'
	DB	00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 's', 00H, 00H, 00H
$SG152109 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153077 DB	'T', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, '3', 00H, 'D', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'w', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'd', 00H, '.', 00H
	DB	00H, 00H
	ORG $+2
$SG152108 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd'
	DB	00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 's', 00H, 00H, 00H
$SG153176 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153177 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG153200 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153201 DB	'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG153207 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153208 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG153212 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153213 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'I', 00H, 'm', 00H
	DB	'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG153231 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153230 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 's', 00H, '('
	DB	00H, ' ', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'S', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's'
	DB	00H, '-', 00H, '>', 00H, 'd', 00H, '3', 00H, 'd', 00H, '1', 00H
	DB	'1', 00H, '.', 00H, 's', 00H, 'd', 00H, '.', 00H, 'B', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'C', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 't', 00H, ',', 00H, ' ', 00H, 'W', 00H, 'i'
	DB	00H, 'd', 00H, 't', 00H, 'h', 00H, ',', 00H, ' ', 00H, 'H', 00H
	DB	'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '-'
	DB	00H, '>', 00H, 'd', 00H, '3', 00H, 'd', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, 's', 00H, 'd', 00H, '.', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'D', 00H, 'e', 00H, 's', 00H
	DB	'c', 00H, '.', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, ',', 00H, ' ', 00H, 'F', 00H, 'l', 00H, 'a', 00H
	DB	'g', 00H, 's', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG153238 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, '3', 00H, 'D'
	DB	00H, '1', 00H, '1', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG153239 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153248 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	00H, 00H
$SG153249 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153267 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153268 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG152279 DB	'DXUT', 00H
	ORG $+3
$SG153306 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153307 DB	'p', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG152285 DB	'DXUT', 00H
	ORG $+3
$SG152291 DB	'DXUT', 00H
	ORG $+3
_XM_PI	DD	040490fdbr			; 3.14159
_XM_2PI	DD	040c90fdbr			; 6.28319
_XM_1DIVPI DD	03ea2f983r			; 0.31831
_XM_1DIV2PI DD	03e22f983r			; 0.159155
_XM_PIDIV2 DD	03fc90fdbr			; 1.5708
_XM_PIDIV4 DD	03f490fdbr			; 0.785398
$SG152305 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152306 DB	'p', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't'
	DB	00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG152310 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152311 DB	'p', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'F', 00H
	DB	'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
	ORG $+2
$SG152333 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'C', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG152334 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152371 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152370 DB	'p', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, '(', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'T', 00H, 'e'
	DB	00H, 'm', 00H, 'p', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG152378 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152377 DB	'p', 00H, 'T', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 'A', 00H
	DB	'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-'
	DB	00H, '>', 00H, 'Q', 00H, 'u', 00H, 'e', 00H, 'r', 00H, 'y', 00H
	DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, '(', 00H, ' ', 00H, '_', 00H, '_', 00H
	DB	'u', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'o', 00H, 'f', 00H, '('
	DB	00H, ' ', 00H, 'I', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H
	DB	'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, '1', 00H, ' ', 00H, ')', 00H, ',', 00H, ' ', 00H, '(', 00H
	DB	'L', 00H, 'P', 00H, 'V', 00H, 'O', 00H, 'I', 00H, 'D', 00H, '*'
	DB	00H, ')', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'A', 00H, 'd', 00H
	DB	'a', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG151355 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG151356 DB	'g', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'X', 00H, 'U', 00H
	DB	'T', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG152383 DB	'p', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'P', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'(', 00H, ' ', 00H, '_', 00H, '_', 00H, 'u', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'o', 00H, 'f', 00H, '(', 00H, ' ', 00H, 'I', 00H
	DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'F', 00H, 'a', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '1', 00H, ' ', 00H
	DB	')', 00H, ',', 00H, ' ', 00H, '(', 00H, 'L', 00H, 'P', 00H, 'V'
	DB	00H, 'O', 00H, 'I', 00H, 'D', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'&', 00H, 'p', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'F'
	DB	00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	' ', 00H, ')', 00H, 00H, 00H
$SG152384 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152391 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'C', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG152392 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152402 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'R', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 00H, 00H
$SG152403 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152408 DB	'DXUT Default', 00H
	ORG $+3
$SG152430 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H, 'h', 00H, 'a'
	DB	00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG152431 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152437 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152438 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, '1', 00H, '1', 00H
	DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG152440 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152441 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'I', 00H, 'm', 00H
	DB	'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG152458 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152459 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG152473 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG152474 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152490 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, '3', 00H, 'D'
	DB	00H, '1', 00H, '1', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG152491 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152504 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, 00H, 00H
	ORG $+2
$SG152505 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152528 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152529 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG152541 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152540 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'S'
	DB	00H, 'e', 00H, 't', 00H, 'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, '(', 00H, ' ', 00H
	DB	'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG152547 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152546 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'S'
	DB	00H, 'e', 00H, 't', 00H, 'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, '(', 00H, ' ', 00H
	DB	'T', 00H, 'R', 00H, 'U', 00H, 'E', 00H, ',', 00H, ' ', 00H, 'n'
	DB	00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	' ', 00H, ')', 00H, 00H, 00H
$SG152551 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, '(', 00H, ' '
	DB	00H, '&', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 's', 00H, '-', 00H, '>', 00H, 'd', 00H
	DB	'3', 00H, 'd', 00H, '1', 00H, '1', 00H, '.', 00H, 's', 00H, 'd'
	DB	00H, '.', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ' ', 00H, ')'
	DB	00H, 00H, 00H
$SG152552 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152561 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, '(', 00H, ' '
	DB	00H, '&', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 's', 00H, '-', 00H, '>', 00H, 'd', 00H
	DB	'3', 00H, 'd', 00H, '1', 00H, '1', 00H, '.', 00H, 's', 00H, 'd'
	DB	00H, '.', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ' ', 00H, ')'
	DB	00H, 00H, 00H
$SG152562 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153596 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153597 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _CLSID_WICDdsEncoder
CONST	SEGMENT
_CLSID_WICDdsEncoder DD 0a61dde94H
	DW	066ceH
	DW	04ac1H
	DB	088H
	DB	01bH
	DB	071H
	DB	068H
	DB	05H
	DB	088H
	DB	089H
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_WICWmpEncoder
CONST	SEGMENT
_CLSID_WICWmpEncoder DD 0ac4ce3cbH
	DW	0e1c1H
	DW	044cdH
	DB	082H
	DB	015H
	DB	05aH
	DB	016H
	DB	065H
	DB	050H
	DB	09eH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICTiffEncoder
CONST	SEGMENT
_CLSID_WICTiffEncoder DD 0131be10H
	DW	02001H
	DW	04c5fH
	DB	0a9H
	DB	0b0H
	DB	0ccH
	DB	088H
	DB	0faH
	DB	0b6H
	DB	04cH
	DB	0e8H
CONST	ENDS
;	COMDAT _CLSID_WICGifEncoder
CONST	SEGMENT
_CLSID_WICGifEncoder DD 0114f5598H
	DW	0b22H
	DW	040a0H
	DB	086H
	DB	0a1H
	DB	0c8H
	DB	03eH
	DB	0a4H
	DB	095H
	DB	0adH
	DB	0bdH
CONST	ENDS
;	COMDAT _CLSID_WICJpegEncoder
CONST	SEGMENT
_CLSID_WICJpegEncoder DD 01a34f5c1H
	DW	04a5aH
	DW	046dcH
	DB	0b6H
	DB	044H
	DB	01fH
	DB	045H
	DB	067H
	DB	0e7H
	DB	0a6H
	DB	076H
CONST	ENDS
;	COMDAT _CLSID_WICPngEncoder
CONST	SEGMENT
_CLSID_WICPngEncoder DD 027949969H
	DW	0876aH
	DW	041d7H
	DB	094H
	DB	047H
	DB	056H
	DB	08fH
	DB	06aH
	DB	035H
	DB	0a4H
	DB	0dcH
CONST	ENDS
;	COMDAT _CLSID_WICBmpEncoder
CONST	SEGMENT
_CLSID_WICBmpEncoder DD 069be8bb4H
	DW	0d66dH
	DW	047c8H
	DB	086H
	DB	05aH
	DB	0edH
	DB	015H
	DB	089H
	DB	043H
	DB	037H
	DB	082H
CONST	ENDS
;	COMDAT _CLSID_WICDdsDecoder
CONST	SEGMENT
_CLSID_WICDdsDecoder DD 09053699fH
	DW	0a341H
	DW	0429dH
	DB	09eH
	DB	090H
	DB	0eeH
	DB	043H
	DB	07cH
	DB	0f8H
	DB	0cH
	DB	073H
CONST	ENDS
;	COMDAT _CLSID_WICWmpDecoder
CONST	SEGMENT
_CLSID_WICWmpDecoder DD 0a26cec36H
	DW	0234cH
	DW	04950H
	DB	0aeH
	DB	016H
	DB	0e3H
	DB	04aH
	DB	0acH
	DB	0e7H
	DB	01dH
	DB	0dH
CONST	ENDS
;	COMDAT _CLSID_WICTiffDecoder
CONST	SEGMENT
_CLSID_WICTiffDecoder DD 0b54e85d9H
	DW	0fe23H
	DW	0499fH
	DB	08bH
	DB	088H
	DB	06aH
	DB	0ceH
	DB	0a7H
	DB	013H
	DB	075H
	DB	02bH
CONST	ENDS
;	COMDAT _CLSID_WICGifDecoder
CONST	SEGMENT
_CLSID_WICGifDecoder DD 0381dda3cH
	DW	09ce9H
	DW	04834H
	DB	0a2H
	DB	03eH
	DB	01fH
	DB	098H
	DB	0f8H
	DB	0fcH
	DB	052H
	DB	0beH
CONST	ENDS
;	COMDAT _CLSID_WICJpegDecoder
CONST	SEGMENT
_CLSID_WICJpegDecoder DD 09456a480H
	DW	0e88bH
	DW	043eaH
	DB	09eH
	DB	073H
	DB	0bH
	DB	02dH
	DB	09bH
	DB	071H
	DB	0b1H
	DB	0caH
CONST	ENDS
;	COMDAT _CLSID_WICIcoDecoder
CONST	SEGMENT
_CLSID_WICIcoDecoder DD 0c61bfcdfH
	DW	02e0fH
	DW	04aadH
	DB	0a8H
	DB	0d7H
	DB	0e0H
	DB	06bH
	DB	0afH
	DB	0ebH
	DB	0cdH
	DB	0feH
CONST	ENDS
;	COMDAT _CLSID_WICBmpDecoder
CONST	SEGMENT
_CLSID_WICBmpDecoder DD 06b462062H
	DW	07cbfH
	DW	0400dH
	DB	09fH
	DB	0dbH
	DB	081H
	DB	03dH
	DB	0d1H
	DB	0fH
	DB	027H
	DB	078H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder2
CONST	SEGMENT
_CLSID_WICPngDecoder2 DD 0e018945bH
	DW	0aa86H
	DW	04008H
	DB	09bH
	DB	0d4H
	DB	067H
	DB	077H
	DB	0a1H
	DB	0e4H
	DB	0cH
	DB	011H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder1
CONST	SEGMENT
_CLSID_WICPngDecoder1 DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder
CONST	SEGMENT
_CLSID_WICPngDecoder DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoftBuiltIn
CONST	SEGMENT
_GUID_VendorMicrosoftBuiltIn DD 0257a30fdH
	DW	06b6H
	DW	0462bH
	DB	0aeH
	DB	0a4H
	DB	063H
	DB	0f7H
	DB	0bH
	DB	086H
	DB	0e5H
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D10Predicate
CONST	SEGMENT
_IID_ID3D10Predicate DD 09b7e4c10H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoft
CONST	SEGMENT
_GUID_VendorMicrosoft DD 0f0e749caH
	DW	0edefH
	DW	04589H
	DB	0a7H
	DB	03aH
	DB	0eeH
	DB	0eH
	DB	062H
	DB	06aH
	DB	02aH
	DB	02bH
CONST	ENDS
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	_hypot
PUBLIC	_|
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?DXUTSetCallbackFrameMove@@YGXP6GXNMPAX@Z0@Z	; DXUTSetCallbackFrameMove
PUBLIC	?DXUTSetCallbackKeyboard@@YGXP6GXI_N0PAX@Z1@Z	; DXUTSetCallbackKeyboard
PUBLIC	?DXUTSetCallbackMouse@@YGXP6GX_N0000HHHPAX@Z01@Z ; DXUTSetCallbackMouse
PUBLIC	?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z ; DXUTSetCallbackMsgProc
PUBLIC	?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z ; DXUTSetCallbackDeviceChanging
PUBLIC	?DXUTSetCallbackDeviceRemoved@@YGXP6G_NPAX@Z0@Z	; DXUTSetCallbackDeviceRemoved
PUBLIC	?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z ; DXUTSetCallbackD3D11DeviceAcceptable
PUBLIC	?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z ; DXUTSetCallbackD3D11DeviceCreated
PUBLIC	?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z ; DXUTSetCallbackD3D11SwapChainResized
PUBLIC	?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z ; DXUTSetCallbackD3D11FrameRender
PUBLIC	?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11SwapChainReleasing
PUBLIC	?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11DeviceDestroyed
PUBLIC	?DXUTInit@@YGJ_N0PA_W0@Z			; DXUTInit
PUBLIC	?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
PUBLIC	?DXUTSetWindow@@YGJPAUHWND__@@00_N@Z		; DXUTSetWindow
PUBLIC	?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z		; DXUTStaticWndProc
PUBLIC	?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ; DXUTCreateDevice
PUBLIC	?DXUTCreateDeviceFromSettings@@YGJPAUDXUTDeviceSettings@@_N@Z ; DXUTCreateDeviceFromSettings
PUBLIC	?DXUTMainLoop@@YGJPAUHACCEL__@@@Z		; DXUTMainLoop
PUBLIC	?DXUTRender3DEnvironment@@YGXXZ			; DXUTRender3DEnvironment
PUBLIC	?DXUTToggleFullScreen@@YGJXZ			; DXUTToggleFullScreen
PUBLIC	?DXUTToggleREF@@YGJXZ				; DXUTToggleREF
PUBLIC	?DXUTToggleWARP@@YGJXZ				; DXUTToggleWARP
PUBLIC	?DXUTPause@@YGX_N0@Z				; DXUTPause
PUBLIC	?DXUTSetConstantFrameTime@@YGX_NM@Z		; DXUTSetConstantFrameTime
PUBLIC	?DXUTSetCursorSettings@@YGX_N0@Z		; DXUTSetCursorSettings
PUBLIC	?DXUTSetHotkeyHandling@@YGX_N00@Z		; DXUTSetHotkeyHandling
PUBLIC	?DXUTSetMultimonSettings@@YGX_N@Z		; DXUTSetMultimonSettings
PUBLIC	?DXUTSetShortcutKeySettings@@YGX_N0@Z		; DXUTSetShortcutKeySettings
PUBLIC	?DXUTSetWindowSettings@@YGX_N@Z			; DXUTSetWindowSettings
PUBLIC	?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z		; DXUTSetTimer
PUBLIC	?DXUTKillTimer@@YGJI@Z				; DXUTKillTimer
PUBLIC	?DXUTResetFrameworkState@@YGXXZ			; DXUTResetFrameworkState
PUBLIC	?DXUTShutdown@@YGXH@Z				; DXUTShutdown
PUBLIC	?DXUTSetIsInGammaCorrectMode@@YGX_N@Z		; DXUTSetIsInGammaCorrectMode
PUBLIC	?DXUTGetMSAASwapChainCreated@@YG_NXZ		; DXUTGetMSAASwapChainCreated
PUBLIC	?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ	; DXUTGetDXGIFactory
PUBLIC	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ	; DXUTGetDXGISwapChain
PUBLIC	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
PUBLIC	?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z ; DXUTSetupD3D11Views
PUBLIC	?DXUTGetD3D11DeviceFeatureLevel@@YG?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTGetD3D11DeviceFeatureLevel
PUBLIC	?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ ; DXUTGetD3D11RenderTargetView
PUBLIC	?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ ; DXUTGetD3D11DepthStencilView
PUBLIC	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ	; DXUTGetD3D11Device
PUBLIC	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
PUBLIC	?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ	; DXUTGetD3D11Device1
PUBLIC	?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ ; DXUTGetD3D11DeviceContext1
PUBLIC	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
PUBLIC	?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ		; DXUTGetHINSTANCE
PUBLIC	?DXUTGetHWND@@YGPAUHWND__@@XZ			; DXUTGetHWND
PUBLIC	?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ		; DXUTGetHWNDFocus
PUBLIC	?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ	; DXUTGetHWNDDeviceFullScreen
PUBLIC	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ	; DXUTGetHWNDDeviceWindowed
PUBLIC	?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ	; DXUTGetWindowClientRect
PUBLIC	?DXUTGetWindowWidth@@YGJXZ			; DXUTGetWindowWidth
PUBLIC	?DXUTGetWindowHeight@@YGJXZ			; DXUTGetWindowHeight
PUBLIC	?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRectAtModeChange
PUBLIC	?DXUTGetFullsceenClientRectAtModeChange@@YG?AUtagRECT@@XZ ; DXUTGetFullsceenClientRectAtModeChange
PUBLIC	?DXUTGetTime@@YGNXZ				; DXUTGetTime
PUBLIC	?DXUTGetElapsedTime@@YGMXZ			; DXUTGetElapsedTime
PUBLIC	?DXUTIsWindowed@@YG_NXZ				; DXUTIsWindowed
PUBLIC	?DXUTIsInGammaCorrectMode@@YG_NXZ		; DXUTIsInGammaCorrectMode
PUBLIC	?DXUTGetFPS@@YGMXZ				; DXUTGetFPS
PUBLIC	?DXUTGetWindowTitle@@YGPB_WXZ			; DXUTGetWindowTitle
PUBLIC	?DXUTGetFrameStats@@YGPB_W_N@Z			; DXUTGetFrameStats
PUBLIC	?DXUTGetDeviceStats@@YGPB_WXZ			; DXUTGetDeviceStats
PUBLIC	?DXUTIsVsyncEnabled@@YG_NXZ			; DXUTIsVsyncEnabled
PUBLIC	?DXUTIsRenderingPaused@@YG_NXZ			; DXUTIsRenderingPaused
PUBLIC	?DXUTIsTimePaused@@YG_NXZ			; DXUTIsTimePaused
PUBLIC	?DXUTIsActive@@YG_NXZ				; DXUTIsActive
PUBLIC	?DXUTGetExitCode@@YGHXZ				; DXUTGetExitCode
PUBLIC	?DXUTGetShowMsgBoxOnError@@YG_NXZ		; DXUTGetShowMsgBoxOnError
PUBLIC	?DXUTGetAutomation@@YG_NXZ			; DXUTGetAutomation
PUBLIC	?DXUTIsKeyDown@@YG_NE@Z				; DXUTIsKeyDown
PUBLIC	?DXUTWasKeyPressed@@YG_NE@Z			; DXUTWasKeyPressed
PUBLIC	?DXUTIsMouseButtonDown@@YG_NE@Z			; DXUTIsMouseButtonDown
PUBLIC	?DXUTCreateState@@YGJXZ				; DXUTCreateState
PUBLIC	?DXUTDestroyState@@YGXXZ			; DXUTDestroyState
PUBLIC	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
PUBLIC	?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTApplyDefaultDeviceSettings
PUBLIC	?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetWARPFeaturevel
PUBLIC	?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetREFFeaturevel
PUBLIC	?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin
PUBLIC	?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end
PUBLIC	?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
PUBLIC	?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
PUBLIC	?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty
PUBLIC	?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin
PUBLIC	?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end
PUBLIC	?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
PUBLIC	?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
PUBLIC	?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
PUBLIC	??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[]
PUBLIC	?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size
PUBLIC	??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[]
PUBLIC	?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
PUBLIC	??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??0DXUTLock@@QAE@XZ				; DXUTLock::DXUTLock
PUBLIC	??1DXUTLock@@QAE@XZ				; DXUTLock::~DXUTLock
PUBLIC	??0DXUTState@@QAE@XZ				; DXUTState::DXUTState
PUBLIC	??1DXUTState@@QAE@XZ				; DXUTState::~DXUTState
PUBLIC	?Create@DXUTState@@QAEXXZ			; DXUTState::Create
PUBLIC	?Destroy@DXUTState@@QAEXXZ			; DXUTState::Destroy
PUBLIC	?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
PUBLIC	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
PUBLIC	?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
PUBLIC	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
PUBLIC	?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ; DXUTState::SetDXGIAdapter
PUBLIC	?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ ; DXUTState::GetDXGIAdapter
PUBLIC	?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ; DXUTState::SetDXGIOutputArray
PUBLIC	?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ ; DXUTState::GetDXGIOutputArray
PUBLIC	?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z	; DXUTState::SetDXGIOutputArraySize
PUBLIC	?GetDXGIOutputArraySize@DXUTState@@QAEIXZ	; DXUTState::GetDXGIOutputArraySize
PUBLIC	?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ; DXUTState::SetDXGISwapChain
PUBLIC	?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ; DXUTState::GetDXGISwapChain
PUBLIC	?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
PUBLIC	?SetRenderingOccluded@DXUTState@@QAEX_N@Z	; DXUTState::SetRenderingOccluded
PUBLIC	?GetRenderingOccluded@DXUTState@@QAE_NXZ	; DXUTState::GetRenderingOccluded
PUBLIC	?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z	; DXUTState::SetDoNotStoreBufferSize
PUBLIC	?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ	; DXUTState::GetDoNotStoreBufferSize
PUBLIC	?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ; DXUTState::SetD3D11Device
PUBLIC	?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ ; DXUTState::GetD3D11Device
PUBLIC	?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ; DXUTState::SetD3D11DeviceContext
PUBLIC	?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ ; DXUTState::GetD3D11DeviceContext
PUBLIC	?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetD3D11FeatureLevel
PUBLIC	?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetD3D11FeatureLevel
PUBLIC	?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
PUBLIC	?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ; DXUTState::GetD3D11DepthStencil
PUBLIC	?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
PUBLIC	?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
PUBLIC	?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
PUBLIC	?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
PUBLIC	?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z ; DXUTState::SetD3D11RasterizerState
PUBLIC	?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ; DXUTState::GetD3D11RasterizerState
PUBLIC	?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ; DXUTState::SetD3D11Device1
PUBLIC	?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ ; DXUTState::GetD3D11Device1
PUBLIC	?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ; DXUTState::SetD3D11DeviceContext1
PUBLIC	?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ ; DXUTState::GetD3D11DeviceContext1
PUBLIC	?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z	; DXUTState::SetHWNDFocus
PUBLIC	?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ	; DXUTState::GetHWNDFocus
PUBLIC	?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
PUBLIC	?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceFullScreen
PUBLIC	?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
PUBLIC	?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceWindowed
PUBLIC	?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z ; DXUTState::SetAdapterMonitor
PUBLIC	?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ ; DXUTState::GetAdapterMonitor
PUBLIC	?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ		; DXUTState::GetMenu
PUBLIC	?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
PUBLIC	?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferWidthAtModeChange
PUBLIC	?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
PUBLIC	?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferHeightAtModeChange
PUBLIC	?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
PUBLIC	?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferWidthAtModeChange
PUBLIC	?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
PUBLIC	?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferHeightAtModeChange
PUBLIC	?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ ; DXUTState::GetWindowedPlacement
PUBLIC	?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ	; DXUTState::GetWindowedStyleAtModeChange
PUBLIC	?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ	; DXUTState::GetTopmostWhileWindowed
PUBLIC	?SetMinimized@DXUTState@@QAEX_N@Z		; DXUTState::SetMinimized
PUBLIC	?GetMinimized@DXUTState@@QAE_NXZ		; DXUTState::GetMinimized
PUBLIC	?SetMaximized@DXUTState@@QAEX_N@Z		; DXUTState::SetMaximized
PUBLIC	?GetMaximized@DXUTState@@QAE_NXZ		; DXUTState::GetMaximized
PUBLIC	?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimizedWhileFullscreen
PUBLIC	?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ	; DXUTState::GetMinimizedWhileFullscreen
PUBLIC	?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z	; DXUTState::SetIgnoreSizeChange
PUBLIC	?GetIgnoreSizeChange@DXUTState@@QAE_NXZ		; DXUTState::GetIgnoreSizeChange
PUBLIC	?SetTime@DXUTState@@QAEXN@Z			; DXUTState::SetTime
PUBLIC	?GetTime@DXUTState@@QAENXZ			; DXUTState::GetTime
PUBLIC	?SetAbsoluteTime@DXUTState@@QAEXN@Z		; DXUTState::SetAbsoluteTime
PUBLIC	?GetAbsoluteTime@DXUTState@@QAENXZ		; DXUTState::GetAbsoluteTime
PUBLIC	?SetElapsedTime@DXUTState@@QAEXM@Z		; DXUTState::SetElapsedTime
PUBLIC	?GetElapsedTime@DXUTState@@QAEMXZ		; DXUTState::GetElapsedTime
PUBLIC	?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z	; DXUTState::SetHInstance
PUBLIC	?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ	; DXUTState::GetHInstance
PUBLIC	?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z	; DXUTState::SetLastStatsUpdateTime
PUBLIC	?GetLastStatsUpdateTime@DXUTState@@QAENXZ	; DXUTState::GetLastStatsUpdateTime
PUBLIC	?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z	; DXUTState::SetLastStatsUpdateFrames
PUBLIC	?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ	; DXUTState::GetLastStatsUpdateFrames
PUBLIC	?SetFPS@DXUTState@@QAEXM@Z			; DXUTState::SetFPS
PUBLIC	?GetFPS@DXUTState@@QAEMXZ			; DXUTState::GetFPS
PUBLIC	?SetCurrentFrameNumber@DXUTState@@QAEXH@Z	; DXUTState::SetCurrentFrameNumber
PUBLIC	?GetCurrentFrameNumber@DXUTState@@QAEHXZ	; DXUTState::GetCurrentFrameNumber
PUBLIC	?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z	; DXUTState::SetKeyboardHook
PUBLIC	?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ	; DXUTState::GetKeyboardHook
PUBLIC	?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenFullscreen
PUBLIC	?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
PUBLIC	?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenWindowed
PUBLIC	?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
PUBLIC	?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z	; DXUTState::SetAllowShortcutKeys
PUBLIC	?GetAllowShortcutKeys@DXUTState@@QAE_NXZ	; DXUTState::GetAllowShortcutKeys
PUBLIC	?SetCallDefWindowProc@DXUTState@@QAEX_N@Z	; DXUTState::SetCallDefWindowProc
PUBLIC	?GetCallDefWindowProc@DXUTState@@QAE_NXZ	; DXUTState::GetCallDefWindowProc
PUBLIC	?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z ; DXUTState::SetStartupStickyKeys
PUBLIC	?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ; DXUTState::GetStartupStickyKeys
PUBLIC	?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z ; DXUTState::SetStartupToggleKeys
PUBLIC	?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ; DXUTState::GetStartupToggleKeys
PUBLIC	?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z ; DXUTState::SetStartupFilterKeys
PUBLIC	?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ; DXUTState::GetStartupFilterKeys
PUBLIC	?SetHandleEscape@DXUTState@@QAEX_N@Z		; DXUTState::SetHandleEscape
PUBLIC	?GetHandleEscape@DXUTState@@QAE_NXZ		; DXUTState::GetHandleEscape
PUBLIC	?SetHandleAltEnter@DXUTState@@QAEX_N@Z		; DXUTState::SetHandleAltEnter
PUBLIC	?SetHandlePause@DXUTState@@QAEX_N@Z		; DXUTState::SetHandlePause
PUBLIC	?GetHandlePause@DXUTState@@QAE_NXZ		; DXUTState::GetHandlePause
PUBLIC	?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z	; DXUTState::SetShowMsgBoxOnError
PUBLIC	?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ	; DXUTState::GetShowMsgBoxOnError
PUBLIC	?SetNoStats@DXUTState@@QAEX_N@Z			; DXUTState::SetNoStats
PUBLIC	?GetNoStats@DXUTState@@QAE_NXZ			; DXUTState::GetNoStats
PUBLIC	?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetClipCursorWhenFullScreen
PUBLIC	?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ	; DXUTState::GetClipCursorWhenFullScreen
PUBLIC	?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetShowCursorWhenFullScreen
PUBLIC	?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ	; DXUTState::GetShowCursorWhenFullScreen
PUBLIC	?SetConstantFrameTime@DXUTState@@QAEX_N@Z	; DXUTState::SetConstantFrameTime
PUBLIC	?GetConstantFrameTime@DXUTState@@QAE_NXZ	; DXUTState::GetConstantFrameTime
PUBLIC	?SetTimePerFrame@DXUTState@@QAEXM@Z		; DXUTState::SetTimePerFrame
PUBLIC	?GetTimePerFrame@DXUTState@@QAEMXZ		; DXUTState::GetTimePerFrame
PUBLIC	?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z	; DXUTState::SetAutoChangeAdapter
PUBLIC	?GetAutoChangeAdapter@DXUTState@@QAE_NXZ	; DXUTState::GetAutoChangeAdapter
PUBLIC	?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
PUBLIC	?SetExitCode@DXUTState@@QAEXH@Z			; DXUTState::SetExitCode
PUBLIC	?GetExitCode@DXUTState@@QAEHXZ			; DXUTState::GetExitCode
PUBLIC	?SetDXUTInited@DXUTState@@QAEX_N@Z		; DXUTState::SetDXUTInited
PUBLIC	?GetDXUTInited@DXUTState@@QAE_NXZ		; DXUTState::GetDXUTInited
PUBLIC	?SetWindowCreated@DXUTState@@QAEX_N@Z		; DXUTState::SetWindowCreated
PUBLIC	?GetWindowCreated@DXUTState@@QAE_NXZ		; DXUTState::GetWindowCreated
PUBLIC	?SetDeviceCreated@DXUTState@@QAEX_N@Z		; DXUTState::SetDeviceCreated
PUBLIC	?GetDeviceCreated@DXUTState@@QAE_NXZ		; DXUTState::GetDeviceCreated
PUBLIC	?SetDXUTInitCalled@DXUTState@@QAEX_N@Z		; DXUTState::SetDXUTInitCalled
PUBLIC	?GetDXUTInitCalled@DXUTState@@QAE_NXZ		; DXUTState::GetDXUTInitCalled
PUBLIC	?SetWindowCreateCalled@DXUTState@@QAEX_N@Z	; DXUTState::SetWindowCreateCalled
PUBLIC	?GetWindowCreateCalled@DXUTState@@QAE_NXZ	; DXUTState::GetWindowCreateCalled
PUBLIC	?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceCreateCalled
PUBLIC	?GetDeviceCreateCalled@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceCreateCalled
PUBLIC	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z	; DXUTState::SetInsideDeviceCallback
PUBLIC	?GetInsideDeviceCallback@DXUTState@@QAE_NXZ	; DXUTState::GetInsideDeviceCallback
PUBLIC	?SetInsideMainloop@DXUTState@@QAEX_N@Z		; DXUTState::SetInsideMainloop
PUBLIC	?GetInsideMainloop@DXUTState@@QAE_NXZ		; DXUTState::GetInsideMainloop
PUBLIC	?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceObjectsCreated
PUBLIC	?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceObjectsCreated
PUBLIC	?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceObjectsReset
PUBLIC	?GetDeviceObjectsReset@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceObjectsReset
PUBLIC	?SetActive@DXUTState@@QAEX_N@Z			; DXUTState::SetActive
PUBLIC	?GetActive@DXUTState@@QAE_NXZ			; DXUTState::GetActive
PUBLIC	?SetRenderingPaused@DXUTState@@QAEX_N@Z		; DXUTState::SetRenderingPaused
PUBLIC	?GetRenderingPaused@DXUTState@@QAE_NXZ		; DXUTState::GetRenderingPaused
PUBLIC	?SetTimePaused@DXUTState@@QAEX_N@Z		; DXUTState::SetTimePaused
PUBLIC	?SetPauseRenderingCount@DXUTState@@QAEXH@Z	; DXUTState::SetPauseRenderingCount
PUBLIC	?GetPauseRenderingCount@DXUTState@@QAEHXZ	; DXUTState::GetPauseRenderingCount
PUBLIC	?SetPauseTimeCount@DXUTState@@QAEXH@Z		; DXUTState::SetPauseTimeCount
PUBLIC	?GetPauseTimeCount@DXUTState@@QAEHXZ		; DXUTState::GetPauseTimeCount
PUBLIC	?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z	; DXUTState::SetNotifyOnMouseMove
PUBLIC	?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ	; DXUTState::GetNotifyOnMouseMove
PUBLIC	?SetAutomation@DXUTState@@QAEX_N@Z		; DXUTState::SetAutomation
PUBLIC	?GetAutomation@DXUTState@@QAE_NXZ		; DXUTState::GetAutomation
PUBLIC	?SetInSizeMove@DXUTState@@QAEX_N@Z		; DXUTState::SetInSizeMove
PUBLIC	?GetInSizeMove@DXUTState@@QAE_NXZ		; DXUTState::GetInSizeMove
PUBLIC	?SetTimerLastID@DXUTState@@QAEXI@Z		; DXUTState::SetTimerLastID
PUBLIC	?GetTimerLastID@DXUTState@@QAEIXZ		; DXUTState::GetTimerLastID
PUBLIC	?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ ; DXUTState::GetMessageWhenD3D11NotAvailable
PUBLIC	?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z	; DXUTState::SetAppCalledWasKeyPressed
PUBLIC	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
PUBLIC	?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetOverrideForceFeatureLevel
PUBLIC	?GetScreenShotName@DXUTState@@QAEPA_WXZ		; DXUTState::GetScreenShotName
PUBLIC	?SetSaveScreenShot@DXUTState@@QAEX_N@Z		; DXUTState::SetSaveScreenShot
PUBLIC	?GetSaveScreenShot@DXUTState@@QAE_NXZ		; DXUTState::GetSaveScreenShot
PUBLIC	?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z	; DXUTState::SetExitAfterScreenShot
PUBLIC	?GetExitAfterScreenShot@DXUTState@@QAE_NXZ	; DXUTState::GetExitAfterScreenShot
PUBLIC	?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideAdapterOrdinal
PUBLIC	?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ	; DXUTState::GetOverrideAdapterOrdinal
PUBLIC	?SetOverrideWindowed@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideWindowed
PUBLIC	?GetOverrideWindowed@DXUTState@@QAE_NXZ		; DXUTState::GetOverrideWindowed
PUBLIC	?SetOverrideOutput@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideOutput
PUBLIC	?SetOverrideFullScreen@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideFullScreen
PUBLIC	?GetOverrideFullScreen@DXUTState@@QAE_NXZ	; DXUTState::GetOverrideFullScreen
PUBLIC	?SetOverrideStartX@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideStartX
PUBLIC	?GetOverrideStartX@DXUTState@@QAEHXZ		; DXUTState::GetOverrideStartX
PUBLIC	?SetOverrideStartY@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideStartY
PUBLIC	?GetOverrideStartY@DXUTState@@QAEHXZ		; DXUTState::GetOverrideStartY
PUBLIC	?SetOverrideWidth@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideWidth
PUBLIC	?GetOverrideWidth@DXUTState@@QAEHXZ		; DXUTState::GetOverrideWidth
PUBLIC	?SetOverrideHeight@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideHeight
PUBLIC	?GetOverrideHeight@DXUTState@@QAEHXZ		; DXUTState::GetOverrideHeight
PUBLIC	?SetOverrideForceHAL@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideForceHAL
PUBLIC	?GetOverrideForceHAL@DXUTState@@QAE_NXZ		; DXUTState::GetOverrideForceHAL
PUBLIC	?SetOverrideForceREF@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideForceREF
PUBLIC	?GetOverrideForceREF@DXUTState@@QAE_NXZ		; DXUTState::GetOverrideForceREF
PUBLIC	?SetOverrideForceWARP@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideForceWARP
PUBLIC	?GetOverrideForceWARP@DXUTState@@QAE_NXZ	; DXUTState::GetOverrideForceWARP
PUBLIC	?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideConstantFrameTime
PUBLIC	?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideConstantFrameTime
PUBLIC	?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z ; DXUTState::SetOverrideConstantTimePerFrame
PUBLIC	?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ ; DXUTState::GetOverrideConstantTimePerFrame
PUBLIC	?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideQuitAfterFrame
PUBLIC	?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ	; DXUTState::GetOverrideQuitAfterFrame
PUBLIC	?SetOverrideForceVsync@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideForceVsync
PUBLIC	?GetOverrideForceVsync@DXUTState@@QAEHXZ	; DXUTState::GetOverrideForceVsync
PUBLIC	?SetReleasingSwapChain@DXUTState@@QAEX_N@Z	; DXUTState::SetReleasingSwapChain
PUBLIC	?GetReleasingSwapChain@DXUTState@@QAE_NXZ	; DXUTState::GetReleasingSwapChain
PUBLIC	?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z	; DXUTState::SetIsInGammaCorrectMode
PUBLIC	?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ	; DXUTState::GetIsInGammaCorrectMode
PUBLIC	?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z ; DXUTState::SetModifyDeviceSettingsFunc
PUBLIC	?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ ; DXUTState::GetModifyDeviceSettingsFunc
PUBLIC	?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z ; DXUTState::SetDeviceRemovedFunc
PUBLIC	?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ ; DXUTState::GetDeviceRemovedFunc
PUBLIC	?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z	; DXUTState::SetFrameMoveFunc
PUBLIC	?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ	; DXUTState::GetFrameMoveFunc
PUBLIC	?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z	; DXUTState::SetKeyboardFunc
PUBLIC	?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ	; DXUTState::GetKeyboardFunc
PUBLIC	?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z ; DXUTState::SetMouseFunc
PUBLIC	?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ ; DXUTState::GetMouseFunc
PUBLIC	?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z ; DXUTState::SetWindowMsgFunc
PUBLIC	?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ ; DXUTState::GetWindowMsgFunc
PUBLIC	?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z ; DXUTState::SetIsD3D11DeviceAcceptableFunc
PUBLIC	?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ ; DXUTState::GetIsD3D11DeviceAcceptableFunc
PUBLIC	?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11DeviceCreatedFunc
PUBLIC	?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11DeviceCreatedFunc
PUBLIC	?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11SwapChainResizedFunc
PUBLIC	?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11SwapChainResizedFunc
PUBLIC	?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11SwapChainReleasingFunc
PUBLIC	?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
PUBLIC	?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11DeviceDestroyedFunc
PUBLIC	?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11DeviceDestroyedFunc
PUBLIC	?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z ; DXUTState::SetD3D11FrameRenderFunc
PUBLIC	?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ; DXUTState::GetD3D11FrameRenderFunc
PUBLIC	?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetModifyDeviceSettingsFuncUserContext
PUBLIC	?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetModifyDeviceSettingsFuncUserContext
PUBLIC	?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetDeviceRemovedFuncUserContext
PUBLIC	?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetDeviceRemovedFuncUserContext
PUBLIC	?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetFrameMoveFuncUserContext
PUBLIC	?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetFrameMoveFuncUserContext
PUBLIC	?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetKeyboardFuncUserContext
PUBLIC	?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ	; DXUTState::GetKeyboardFuncUserContext
PUBLIC	?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z	; DXUTState::SetMouseFuncUserContext
PUBLIC	?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ	; DXUTState::GetMouseFuncUserContext
PUBLIC	?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetWindowMsgFuncUserContext
PUBLIC	?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetWindowMsgFuncUserContext
PUBLIC	?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext
PUBLIC	?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext
PUBLIC	?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceCreatedFuncUserContext
PUBLIC	?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceCreatedFuncUserContext
PUBLIC	?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext
PUBLIC	?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext
PUBLIC	?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainResizedFuncUserContext
PUBLIC	?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
PUBLIC	?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext
PUBLIC	?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext
PUBLIC	?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11FrameRenderFuncUserContext
PUBLIC	?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11FrameRenderFuncUserContext
PUBLIC	?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z ; DXUTState::SetTimerList
PUBLIC	?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
PUBLIC	?GetKeys@DXUTState@@QAEPA_NXZ			; DXUTState::GetKeys
PUBLIC	?GetLastKeys@DXUTState@@QAEPA_NXZ		; DXUTState::GetLastKeys
PUBLIC	?GetMouseButtons@DXUTState@@QAEPA_NXZ		; DXUTState::GetMouseButtons
PUBLIC	?GetStaticFrameStats@DXUTState@@QAEPA_WXZ	; DXUTState::GetStaticFrameStats
PUBLIC	?GetFPSStats@DXUTState@@QAEPA_WXZ		; DXUTState::GetFPSStats
PUBLIC	?GetFrameStats@DXUTState@@QAEPA_WXZ		; DXUTState::GetFrameStats
PUBLIC	?GetDeviceStats@DXUTState@@QAEPA_WXZ		; DXUTState::GetDeviceStats
PUBLIC	?GetWindowTitle@DXUTState@@QAEPA_WXZ		; DXUTState::GetWindowTitle
PUBLIC	??_GDXUTState@@QAEPAXI@Z			; DXUTState::`scalar deleting destructor'
PUBLIC	??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ	; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
PUBLIC	?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::deallocate
PUBLIC	?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::allocate
PUBLIC	?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z ; std::allocator<DXUT_TIMER>::construct
PUBLIC	?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ	; std::allocator<DXUT_TIMER>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::~_Vector_val<std::_Simple_types<DXUT_TIMER> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
PUBLIC	??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
PUBLIC	??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
PUBLIC	?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity
PUBLIC	?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
PUBLIC	?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
PUBLIC	?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
PUBLIC	?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
PUBLIC	?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back
PUBLIC	?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to
PUBLIC	?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside
PUBLIC	?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
PUBLIC	?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy
PUBLIC	?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
PUBLIC	??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::`scalar deleting destructor'
PUBLIC	??0DXUTMemoryHelper@@QAE@XZ			; DXUTMemoryHelper::DXUTMemoryHelper
PUBLIC	??1DXUTMemoryHelper@@QAE@XZ			; DXUTMemoryHelper::~DXUTMemoryHelper
PUBLIC	?GetDXUTState@@YAAAVDXUTState@@XZ		; GetDXUTState
PUBLIC	?DXUTParseCommandLine@@YAXPA_W_N@Z		; DXUTParseCommandLine
PUBLIC	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z		; DXUTIsNextArg
PUBLIC	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z		; DXUTGetCmdParam
PUBLIC	?DXUTAllowShortcutKeys@@YAX_N@Z			; DXUTAllowShortcutKeys
PUBLIC	?DXUTUpdateStaticFrameStats@@YAXXZ		; DXUTUpdateStaticFrameStats
PUBLIC	?DXUTUpdateFrameStats@@YAXXZ			; DXUTUpdateFrameStats
PUBLIC	?DXUTHandleTimers@@YAXXZ			; DXUTHandleTimers
PUBLIC	?DXUTDisplayErrorMessage@@YAXJ@Z		; DXUTDisplayErrorMessage
PUBLIC	?DXUTMapButtonToArrayIndex@@YAHE@Z		; DXUTMapButtonToArrayIndex
PUBLIC	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
PUBLIC	?DXUTDelayLoadDXGI@@YAJXZ			; DXUTDelayLoadDXGI
PUBLIC	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
PUBLIC	?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTUpdateDeviceSettingsWithOverrides
PUBLIC	?DXUTCheckForDXGIFullScreenSwitch@@YAXXZ	; DXUTCheckForDXGIFullScreenSwitch
PUBLIC	?DXUTResizeDXGIBuffers@@YAXIIH@Z		; DXUTResizeDXGIBuffers
PUBLIC	?DXUTCheckForDXGIBufferChange@@YAXXZ		; DXUTCheckForDXGIBufferChange
PUBLIC	?DXUTCheckForWindowSizeChange@@YAXXZ		; DXUTCheckForWindowSizeChange
PUBLIC	?DXUTCheckForWindowChangingMonitors@@YAXXZ	; DXUTCheckForWindowChangingMonitors
PUBLIC	?DXUTCleanup3DEnvironment@@YAX_N@Z		; DXUTCleanup3DEnvironment
PUBLIC	?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
PUBLIC	?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetAdapterOrdinalFromMonitor
PUBLIC	?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetOutputOrdinalFromMonitor
PUBLIC	?DXUTHandleDeviceRemoved@@YAJXZ			; DXUTHandleDeviceRemoved
PUBLIC	?DXUTUpdateBackBufferDesc@@YAXXZ		; DXUTUpdateBackBufferDesc
PUBLIC	?DXUTSetupCursor@@YAXXZ				; DXUTSetupCursor
PUBLIC	?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ; DXUTCreateD3D11Views
PUBLIC	?DXUTCreate3DEnvironment11@@YAJXZ		; DXUTCreate3DEnvironment11
PUBLIC	?DXUTReset3DEnvironment11@@YAJXZ		; DXUTReset3DEnvironment11
PUBLIC	?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z ; DXUTUpdateD3D11DeviceStats
PUBLIC	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
PUBLIC	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
PUBLIC	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
PUBLIC	?DXUTGetCallbackD3D11DeviceAcceptable@@YAXPAP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZPAPAX@Z ; DXUTGetCallbackD3D11DeviceAcceptable
PUBLIC	?DXUTLowLevelKeyboardProc@@YGJHIJ@Z		; DXUTLowLevelKeyboardProc
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
PUBLIC	??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ; std::addressof<DXUT_TIMER const >
PUBLIC	??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
PUBLIC	??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>
PUBLIC	??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z ; std::_Allocate<DXUT_TIMER>
PUBLIC	??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
PUBLIC	??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
PUBLIC	??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ; std::forward<DXUT_TIMER const &>
PUBLIC	??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
PUBLIC	??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>
PUBLIC	??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
PUBLIC	??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
PUBLIC	??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>
PUBLIC	??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
PUBLIC	??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Val_type<DXUT_TIMER *>
PUBLIC	??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>
PUBLIC	??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>
PUBLIC	??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z ; std::_Debug_range<DXUT_TIMER *>
PUBLIC	??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
PUBLIC	??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z ; std::_Iter_cat<DXUT_TIMER *>
PUBLIC	??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUT_TIMER *>
PUBLIC	??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
PUBLIC	??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@ ; `string'
PUBLIC	??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3d086595
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp__wcscat_s:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcsncmp:PROC
EXTRN	__imp___wcsnicmp:PROC
EXTRN	__imp__GetCommandLineW@0:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__InitializeCriticalSectionAndSpinCount@8:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__GetVersionExW@4:PROC
EXTRN	__imp__GetModuleFileNameW@12:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__LocalFree@4:PROC
EXTRN	__imp__SetThreadExecutionState@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__PeekMessageW@20:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__RegisterClassW@4:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__GetWindowPlacement@8:PROC
EXTRN	__imp__SetWindowPlacement@8:PROC
EXTRN	__imp__IsWindowVisible@4:PROC
EXTRN	__imp__IsIconic@4:PROC
EXTRN	__imp__IsZoomed@4:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__DestroyAcceleratorTable@4:PROC
EXTRN	__imp__TranslateAcceleratorW@12:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__GetMenu@4:PROC
EXTRN	__imp__DestroyMenu@4:PROC
EXTRN	__imp__GetWindowTextW@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__AdjustWindowRect@12:PROC
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__ClipCursor@4:PROC
EXTRN	__imp__ScreenToClient@8:PROC
EXTRN	__imp__SetRect@20:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__SetWindowsHookExW@16:PROC
EXTRN	__imp__UnhookWindowsHookEx@4:PROC
EXTRN	__imp__CallNextHookEx@16:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__SystemParametersInfoW@16:PROC
EXTRN	__imp__CommandLineToArgvW@8:PROC
EXTRN	__imp__ExtractIconW@12:PROC
EXTRN	__imp__wcstod:PROC
EXTRN	__imp___wtoi:PROC
EXTRN	__imp__CoInitializeEx@8:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp__InitCommonControls@0:PROC
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	??3@YAXPAXABUnothrow_t@std@@@Z:PROC		; operator delete
EXTRN	__imp___hypot:PROC
EXTRN	__imp__swprintf_s:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	?DXUTEnableXInput@@YAX_N@Z:PROC			; DXUTEnableXInput
EXTRN	?DXUTSnapD3D11Screenshot@@YAJPB_W_N@Z:PROC	; DXUTSnapD3D11Screenshot
EXTRN	?Reset@CDXUTTimer@@QAEXXZ:PROC			; CDXUTTimer::Reset
EXTRN	?Start@CDXUTTimer@@QAEXXZ:PROC			; CDXUTTimer::Start
EXTRN	?Stop@CDXUTTimer@@QAEXXZ:PROC			; CDXUTTimer::Stop
EXTRN	?GetTimeValues@CDXUTTimer@@QAEXPAN0PAM@Z:PROC	; CDXUTTimer::GetTimeValues
EXTRN	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ:PROC	; DXUTGetGlobalTimer
EXTRN	?DXUTDXGIFormatToString@@YGPB_WW4DXGI_FORMAT@@_N@Z:PROC ; DXUTDXGIFormatToString
EXTRN	?DXUTOutputDebugStringW@@YAXPB_WZZ:PROC		; DXUTOutputDebugStringW
EXTRN	?DXUTTrace@@YGJPBDKJPB_W_N@Z:PROC		; DXUTTrace
EXTRN	?DXUT_Dynamic_CreateDXGIFactory1@@YGJABU_GUID@@PAPAX@Z:PROC ; DXUT_Dynamic_CreateDXGIFactory1
EXTRN	?DXUT_Dynamic_DXGIGetDebugInterface@@YGJABU_GUID@@PAPAX@Z:PROC ; DXUT_Dynamic_DXGIGetDebugInterface
EXTRN	?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z:PROC ; DXUT_Dynamic_D3D11CreateDevice
EXTRN	?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z:PROC ; DXUTMonitorFromWindow
EXTRN	?DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z:PROC ; DXUTMonitorFromRect
EXTRN	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z:PROC ; DXUTGetMonitorInfo
EXTRN	?DXUTGetD3D11AdapterDisplayMode@@YGJIIPAUDXGI_MODE_DESC@@@Z:PROC ; DXUTGetD3D11AdapterDisplayMode
EXTRN	?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ:PROC ; CD3D11Enumeration::GetAdapterInfoList
EXTRN	?GetAdapterInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumAdapterInfo@@I@Z:PROC ; CD3D11Enumeration::GetAdapterInfo
EXTRN	?GetOutputInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumOutputInfo@@II@Z:PROC ; CD3D11Enumeration::GetOutputInfo
EXTRN	?GetDeviceSettingsCombo@CD3D11Enumeration@@QBEPAUCD3D11EnumDeviceSettingsCombo@@IW4DXGI_FORMAT@@H@Z:PROC ; CD3D11Enumeration::GetDeviceSettingsCombo
EXTRN	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z:PROC ; DXUTGetD3D11Enumeration
EXTRN	?DXUTRankD3D11DeviceCombo@@YAMPAUCD3D11EnumDeviceSettingsCombo@@PAUDXUTD3D11DeviceSettings@@AAH2@Z:PROC ; DXUTRankD3D11DeviceCombo
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A
_BSS	SEGMENT
?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A DB 01H DUP (?) ; `GetDXUTState'::`2'::memory
_BSS	ENDS
;	COMDAT ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
_BSS	SEGMENT
?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA DD 01H DUP (?) ; `GetDXUTState'::`2'::$S1
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTanEstCoefficients$initializer$ DD FLAT:??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3d086595
CONST	SEGMENT
__real@3d086595 DD 03d086595r			; 0.0333
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' '
	DB	00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'a', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M'
	DB	00H, 'E', 00H, 'R', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm'
	DB	00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M'
	DB	00H, 'E', 00H, 'R', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H
	DB	'+', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M'
	DB	00H, 'E', 00H, 'R', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' '
	DB	00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' '
	DB	00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@
CONST	SEGMENT
??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@
CONST	SEGMENT
??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'D'
	DB	00H, 'E', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H, 'C', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I'
	DB	00H, '_', 00H, 'M', 00H, 'O', 00H, 'D', 00H, 'E', 00H, '_', 00H
	DB	'D', 00H, 'E', 00H, 'S', 00H, 'C', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@
CONST	SEGMENT
??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'C', 00H
	DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n'
	DB	00H, 'u', 00H, 'm', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 's', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'o', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 'C', 00H, 'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H
	DB	'E', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'D', 00H, 'e', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 'C', 00H, 'o'
	DB	00H, 'm', 00H, 'b', 00H, 'o', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?s_adapterDesktopDisplayMode@?L@??DXUTToggleFullScreen@@YGJXZ@4UDXGI_MODE_DESC@@B
CONST	SEGMENT
?s_adapterDesktopDisplayMode@?L@??DXUTToggleFullScreen@@YGJXZ@4UDXGI_MODE_DESC@@B DD 0320H ; `DXUTToggleFullScreen'::`11'::s_adapterDesktopDisplayMode
	DD	0258H
	DD	00H
	DD	00H
	DD	01dH
	ORG $+8
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16 ; DirectX::g_XMReciprocalTwoPi
_DATA	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMTwoPi
_DATA	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMReciprocalPi
_DATA	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMPi
_DATA	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMHalfPi
_DATA	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativePi
_DATA	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativeTwoPi
_DATA	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMPiConstants0
_DATA	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	ORG $+4
_DATA	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z$0
__ehfuncinfo$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?GetDXUTState@@YAAAVDXUTState@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDXUTState@@YAAAVDXUTState@@XZ$0
__unwindtable$?DXUTCreateState@@YGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTCreateState@@YGJXZ$0
__unwindtable$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z$0
__unwindtable$?DXUTHandleTimers@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTHandleTimers@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTHandleTimers@@YAXXZ$1
__unwindtable$?DXUTKillTimer@@YGJI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTKillTimer@@YGJI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTKillTimer@@YGJI@Z$1
__unwindtable$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$2
__unwindtable$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3
__unwindtable$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3
__ehfuncinfo$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTHandleTimers@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DXUTHandleTimers@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetDXUTState@@YAAAVDXUTState@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDXUTState@@YAAAVDXUTState@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTCreateState@@YGJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DXUTCreateState@@YGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTKillTimer@@YGJI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DXUTKillTimer@@YGJI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPiConstants0$initializer$ DD FLAT:??__Eg_XMPiConstants0@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativeTwoPi$initializer$ DD FLAT:??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativePi$initializer$ DD FLAT:??__Eg_XMNegativePi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMHalfPi$initializer$ DD FLAT:??__Eg_XMHalfPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPi$initializer$ DD FLAT:??__Eg_XMPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalPi$initializer$ DD FLAT:??__Eg_XMReciprocalPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTwoPi$initializer$ DD FLAT:??__Eg_XMTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalTwoPi$initializer$ DD FLAT:??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z PROC ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 18		 push	 24			; 00000018H
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 39		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	89 0a		 mov	 DWORD PTR [edx], ecx
  0006a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00070	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00073	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00076	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00079	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0007c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0007f	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00082	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00085	89 42 14	 mov	 DWORD PTR [edx+20], eax
  00088	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0008b	89 4d e4	 mov	 DWORD PTR tv74[ebp], ecx
  0008e	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00090	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  00097	8b 55 e4	 mov	 edx, DWORD PTR tv74[ebp]
  0009a	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0009d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	83 c4 1c	 add	 esp, 28			; 0000001cH
  000b2	3b ec		 cmp	 ebp, esp
  000b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ENDP ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z PROC ; std::forward<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ENDP ; std::forward<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z PROC ; std::_Iter_cat<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z ENDP ; std::_Iter_cat<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z PROC ; std::_Debug_pointer<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z PROC ; std::_Debug_range<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z ; std::_Iter_cat<DXUT_TIMER *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUT_TIMER *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z ENDP ; std::_Debug_range<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z PROC ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z ENDP ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	51		 push	 ecx
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00031	68 b6 01 00 00	 push	 438			; 000001b6H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00042	51		 push	 ecx
  00043	e8 00 00 00 00	 call	 ??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z ; std::_Debug_range<DXUT_TIMER *>
  00048	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0004b	68 b7 01 00 00	 push	 439			; 000001b7H
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00055	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00058	52		 push	 edx
  00059	e8 00 00 00 00	 call	 ??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00061	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00064	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0006e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00070	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00073	83 c1 18	 add	 ecx, 24			; 00000018H
  00076	89 4d 10	 mov	 DWORD PTR __Dest$[ebp], ecx
  00079	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0007c	83 c2 18	 add	 edx, 24			; 00000018H
  0007f	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
  00082	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00085	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00088	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008d	51		 push	 ecx
  0008e	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00091	52		 push	 edx
  00092	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00095	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
  0009a	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  0009c	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  0009e	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000a0	8b 45 ec	 mov	 eax, DWORD PTR __Next$[ebp]
  000a3	83 c0 18	 add	 eax, 24			; 00000018H
  000a6	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000a9	8b 4d ec	 mov	 ecx, DWORD PTR __Next$[ebp]
  000ac	3b 4d 10	 cmp	 ecx, DWORD PTR __Dest$[ebp]
  000af	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000b1	8b 55 ec	 mov	 edx, DWORD PTR __Next$[ebp]
  000b4	52		 push	 edx
  000b5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000b8	e8 00 00 00 00	 call	 ??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
  000bd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000bf	6a 00		 push	 0
  000c1	6a 00		 push	 0
  000c3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000c8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000cd	c3		 ret	 0
$LN10@Uninit_mov:
  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000d5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000de	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	83 c4 14	 add	 esp, 20			; 00000014H
  000f2	3b ec		 cmp	 ebp, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z PROC ; std::_Val_type<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ENDP ; std::_Val_type<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Val_type<DXUT_TIMER *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z PROC ; std::_Unchecked<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ENDP ; std::_Unchecked<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z PROC ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 18		 push	 24			; 00000018H
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 39		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	89 0a		 mov	 DWORD PTR [edx], ecx
  0006a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00070	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00073	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00076	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00079	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0007c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0007f	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00082	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00085	89 42 14	 mov	 DWORD PTR [edx+20], eax
  00088	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0008b	89 4d e4	 mov	 DWORD PTR tv74[ebp], ecx
  0008e	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00090	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  00097	8b 55 e4	 mov	 edx, DWORD PTR tv74[ebp]
  0009a	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0009d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	83 c4 1c	 add	 esp, 28			; 0000001cH
  000b2	3b ec		 cmp	 ebp, esp
  000b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ENDP ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 81
  00003	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00005	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00008	83 c0 18	 add	 eax, 24			; 00000018H
  0000b	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00011	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00014	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00016	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00019	52		 push	 edx
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
  00022	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z PROC ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ENDP ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ; std::forward<DXUT_TIMER const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z ; std::allocator<DXUT_TIMER>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z PROC ; std::forward<DXUT_TIMER const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ENDP ; std::forward<DXUT_TIMER const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z PROC ; std::forward<DXUT_TIMER &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ENDP ; std::forward<DXUT_TIMER &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z PROC ; std::_Allocate<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 2e		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 aa aa
	aa 0a		 cmp	 DWORD PTR __Count$[ebp], 178956970 ; 0aaaaaaaH
  00022	77 16		 ja	 SHORT $LN1@Allocate
  00024	6b 45 08 18	 imul	 eax, DWORD PTR __Count$[ebp], 24
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002e	83 c4 04	 add	 esp, 4
  00031	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00034	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00038	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003a	8b f4		 mov	 esi, esp
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  00049	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004c	5e		 pop	 esi
  0004d	83 c4 04	 add	 esp, 4
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z ENDP ; std::_Allocate<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ; std::forward<DXUT_TIMER const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z PROC ; std::addressof<DXUT_TIMER const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ENDP ; std::addressof<DXUT_TIMER const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 18	 add	 ecx, 24			; 00000018H
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv84 = -16						; size = 4
tv74 = -12						; size = 4
_p$ = -8						; size = 4
_bEatKeystroke$ = -1					; size = 1
_nCode$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?DXUTLowLevelKeyboardProc@@YGJHIJ@Z PROC		; DXUTLowLevelKeyboardProc
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3088
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 3089
  00018	83 7d 08 00	 cmp	 DWORD PTR _nCode$[ebp], 0
  0001c	7c 06		 jl	 SHORT $LN6@DXUTLowLev
  0001e	83 7d 08 00	 cmp	 DWORD PTR _nCode$[ebp], 0
  00022	74 2d		 je	 SHORT $LN7@DXUTLowLev
$LN6@DXUTLowLev:
; Line 3090
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR _nCode$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00037	8b c8		 mov	 ecx, eax
  00039	e8 00 00 00 00	 call	 ?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CallNextHookEx@16
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	e9 96 00 00 00	 jmp	 $LN8@DXUTLowLev
$LN7@DXUTLowLev:
; Line 3092
  00051	c6 45 ff 00	 mov	 BYTE PTR _bEatKeystroke$[ebp], 0
; Line 3093
  00055	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  00058	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
; Line 3094
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0005e	89 4d f4	 mov	 DWORD PTR tv74[ebp], ecx
  00061	81 7d f4 00 01
	00 00		 cmp	 DWORD PTR tv74[ebp], 256 ; 00000100H
  00068	72 44		 jb	 SHORT $LN4@DXUTLowLev
  0006a	81 7d f4 01 01
	00 00		 cmp	 DWORD PTR tv74[ebp], 257 ; 00000101H
  00071	76 02		 jbe	 SHORT $LN3@DXUTLowLev
  00073	eb 39		 jmp	 SHORT $LN4@DXUTLowLev
$LN3@DXUTLowLev:
; Line 3100
  00075	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ?GetAllowShortcutKeys@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeys
  00081	0f b6 d0	 movzx	 edx, al
  00084	85 d2		 test	 edx, edx
  00086	75 19		 jne	 SHORT $LN11@DXUTLowLev
  00088	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0008b	83 38 5b	 cmp	 DWORD PTR [eax], 91	; 0000005bH
  0008e	74 08		 je	 SHORT $LN10@DXUTLowLev
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00093	83 39 5c	 cmp	 DWORD PTR [ecx], 92	; 0000005cH
  00096	75 09		 jne	 SHORT $LN11@DXUTLowLev
$LN10@DXUTLowLev:
  00098	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv84[ebp], 1
  0009f	eb 07		 jmp	 SHORT $LN12@DXUTLowLev
$LN11@DXUTLowLev:
  000a1	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN12@DXUTLowLev:
  000a8	8a 55 f0	 mov	 dl, BYTE PTR tv84[ebp]
  000ab	88 55 ff	 mov	 BYTE PTR _bEatKeystroke$[ebp], dl
$LN4@DXUTLowLev:
; Line 3105
  000ae	0f b6 45 ff	 movzx	 eax, BYTE PTR _bEatKeystroke$[ebp]
  000b2	85 c0		 test	 eax, eax
  000b4	74 09		 je	 SHORT $LN2@DXUTLowLev
; Line 3106
  000b6	b8 01 00 00 00	 mov	 eax, 1
  000bb	eb 2a		 jmp	 SHORT $LN8@DXUTLowLev
; Line 3107
  000bd	eb 28		 jmp	 SHORT $LN8@DXUTLowLev
$LN2@DXUTLowLev:
; Line 3108
  000bf	8b f4		 mov	 esi, esp
  000c1	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  000c4	51		 push	 ecx
  000c5	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  000c8	52		 push	 edx
  000c9	8b 45 08	 mov	 eax, DWORD PTR _nCode$[ebp]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
  000d9	50		 push	 eax
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CallNextHookEx@16
  000e0	3b f4		 cmp	 esi, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN8@DXUTLowLev:
; Line 3109
  000e7	5e		 pop	 esi
  000e8	83 c4 10	 add	 esp, 16			; 00000010H
  000eb	3b ec		 cmp	 ebp, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c2 0c 00	 ret	 12			; 0000000cH
?DXUTLowLevelKeyboardProc@@YGJHIJ@Z ENDP		; DXUTLowLevelKeyboardProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ppCallback$ = 8					; size = 4
_ppUserContext$ = 12					; size = 4
?DXUTGetCallbackD3D11DeviceAcceptable@@YAXPAP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZPAPAX@Z PROC ; DXUTGetCallbackD3D11DeviceAcceptable
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 626
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ ; DXUTState::GetIsD3D11DeviceAcceptableFunc
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _ppCallback$[ebp]
  00012	89 01		 mov	 DWORD PTR [ecx], eax
  00014	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext
  00020	8b 55 0c	 mov	 edx, DWORD PTR _ppUserContext$[ebp]
  00023	89 02		 mov	 DWORD PTR [edx], eax
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?DXUTGetCallbackD3D11DeviceAcceptable@@YAXPAP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZPAPAX@Z ENDP ; DXUTGetCallbackD3D11DeviceAcceptable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -1						; size = 1
_pNewDeviceSettings$ = 8				; size = 4
?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z PROC ; DXUTGetIsWindowedFromDS
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 549
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 550
  0000b	83 7d 08 00	 cmp	 DWORD PTR _pNewDeviceSettings$[ebp], 0
  0000f	75 04		 jne	 SHORT $LN1@DXUTGetIsW
; Line 551
  00011	b0 01		 mov	 al, 1
  00013	eb 16		 jmp	 SHORT $LN2@DXUTGetIsW
$LN1@DXUTGetIsW:
; Line 553
  00015	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00018	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  0001c	74 06		 je	 SHORT $LN4@DXUTGetIsW
  0001e	c6 45 ff 01	 mov	 BYTE PTR tv69[ebp], 1
  00022	eb 04		 jmp	 SHORT $LN5@DXUTGetIsW
$LN4@DXUTGetIsW:
  00024	c6 45 ff 00	 mov	 BYTE PTR tv69[ebp], 0
$LN5@DXUTGetIsW:
  00028	8a 45 ff	 mov	 al, BYTE PTR tv69[ebp]
$LN2@DXUTGetIsW:
; Line 554
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetIsWindowedFromDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pNewDeviceSettings$ = 8				; size = 4
?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z PROC ; DXUTGetBackBufferHeightFromDS
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 545
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 546
  00003	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00006	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
; Line 547
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetBackBufferHeightFromDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pNewDeviceSettings$ = 8				; size = 4
?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z PROC ; DXUTGetBackBufferWidthFromDS
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 541
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 542
  00003	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00006	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
; Line 543
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetBackBufferWidthFromDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv152 = -20						; size = 4
_pDeviceSettingsCombo$1 = -16				; size = 4
_pd3dEnum$2 = -12					; size = 4
_pDeviceSettings$3 = -8					; size = 4
_pstrDeviceStats$ = -4					; size = 4
_DeviceType$ = 8					; size = 4
_featureLevel$ = 12					; size = 4
_pAdapterDesc$ = 16					; size = 4
?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z PROC ; DXUTUpdateD3D11DeviceStats
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4071
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 4072
  0001b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00020	8b c8		 mov	 ecx, eax
  00022	e8 00 00 00 00	 call	 ?GetNoStats@DXUTState@@QAE_NXZ ; DXUTState::GetNoStats
  00027	0f b6 c0	 movzx	 eax, al
  0002a	85 c0		 test	 eax, eax
  0002c	74 05		 je	 SHORT $LN21@DXUTUpdate
; Line 4073
  0002e	e9 f2 02 00 00	 jmp	 $LN22@DXUTUpdate
$LN21@DXUTUpdate:
; Line 4076
  00033	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ?GetDeviceStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetDeviceStats
  0003f	89 45 fc	 mov	 DWORD PTR _pstrDeviceStats$[ebp], eax
; Line 4077
  00042	83 7d 08 02	 cmp	 DWORD PTR _DeviceType$[ebp], 2
  00046	75 22		 jne	 SHORT $LN20@DXUTUpdate
; Line 4078
  00048	8b f4		 mov	 esi, esp
  0004a	68 00 00 00 00	 push	 OFFSET $SG153666
  0004f	68 00 01 00 00	 push	 256			; 00000100H
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _pstrDeviceStats$[ebp]
  00057	51		 push	 ecx
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	eb 76		 jmp	 SHORT $LN19@DXUTUpdate
$LN20@DXUTUpdate:
; Line 4079
  0006a	83 7d 08 01	 cmp	 DWORD PTR _DeviceType$[ebp], 1
  0006e	75 22		 jne	 SHORT $LN18@DXUTUpdate
; Line 4080
  00070	8b f4		 mov	 esi, esp
  00072	68 00 00 00 00	 push	 OFFSET $SG153669
  00077	68 00 01 00 00	 push	 256			; 00000100H
  0007c	8b 55 fc	 mov	 edx, DWORD PTR _pstrDeviceStats$[ebp]
  0007f	52		 push	 edx
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00086	83 c4 0c	 add	 esp, 12			; 0000000cH
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	eb 4e		 jmp	 SHORT $LN19@DXUTUpdate
$LN18@DXUTUpdate:
; Line 4081
  00092	83 7d 08 04	 cmp	 DWORD PTR _DeviceType$[ebp], 4
  00096	75 22		 jne	 SHORT $LN16@DXUTUpdate
; Line 4082
  00098	8b f4		 mov	 esi, esp
  0009a	68 00 00 00 00	 push	 OFFSET $SG153672
  0009f	68 00 01 00 00	 push	 256			; 00000100H
  000a4	8b 45 fc	 mov	 eax, DWORD PTR _pstrDeviceStats$[ebp]
  000a7	50		 push	 eax
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	eb 26		 jmp	 SHORT $LN19@DXUTUpdate
$LN16@DXUTUpdate:
; Line 4083
  000ba	83 7d 08 05	 cmp	 DWORD PTR _DeviceType$[ebp], 5
  000be	75 20		 jne	 SHORT $LN19@DXUTUpdate
; Line 4084
  000c0	8b f4		 mov	 esi, esp
  000c2	68 00 00 00 00	 push	 OFFSET $SG153675
  000c7	68 00 01 00 00	 push	 256			; 00000100H
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _pstrDeviceStats$[ebp]
  000cf	51		 push	 ecx
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN19@DXUTUpdate:
; Line 4086
  000e0	83 7d 08 01	 cmp	 DWORD PTR _DeviceType$[ebp], 1
  000e4	0f 85 de 00 00
	00		 jne	 $LN13@DXUTUpdate
; Line 4090
  000ea	8b f4		 mov	 esi, esp
  000ec	68 00 00 00 00	 push	 OFFSET $SG153677
  000f1	68 00 01 00 00	 push	 256			; 00000100H
  000f6	8b 55 fc	 mov	 edx, DWORD PTR _pstrDeviceStats$[ebp]
  000f9	52		 push	 edx
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  00100	83 c4 0c	 add	 esp, 12			; 0000000cH
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4093
  0010a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0010f	8b c8		 mov	 ecx, eax
  00111	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00116	89 45 f8	 mov	 DWORD PTR _pDeviceSettings$3[ebp], eax
; Line 4094
  00119	83 7d f8 00	 cmp	 DWORD PTR _pDeviceSettings$3[ebp], 0
  0011d	75 05		 jne	 SHORT $LN12@DXUTUpdate
; Line 4095
  0011f	e9 01 02 00 00	 jmp	 $LN22@DXUTUpdate
$LN12@DXUTUpdate:
; Line 4097
  00124	6a 00		 push	 0
  00126	6a 01		 push	 1
  00128	6a 00		 push	 0
  0012a	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  0012f	89 45 f4	 mov	 DWORD PTR _pd3dEnum$2[ebp], eax
; Line 4098
  00132	83 7d f4 00	 cmp	 DWORD PTR _pd3dEnum$2[ebp], 0
  00136	75 21		 jne	 SHORT $LN24@DXUTUpdate
  00138	8b f4		 mov	 esi, esp
  0013a	68 02 10 00 00	 push	 4098			; 00001002H
  0013f	68 00 00 00 00	 push	 OFFSET $SG153684
  00144	68 00 00 00 00	 push	 OFFSET $SG153685
  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0014f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00152	3b f4		 cmp	 esi, esp
  00154	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN24@DXUTUpdate:
; Line 4102
  00159	8b 4d f8	 mov	 ecx, DWORD PTR _pDeviceSettings$3[ebp]
  0015c	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  0015f	52		 push	 edx
  00160	8b 45 f8	 mov	 eax, DWORD PTR _pDeviceSettings$3[ebp]
  00163	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00166	51		 push	 ecx
  00167	8b 55 f8	 mov	 edx, DWORD PTR _pDeviceSettings$3[ebp]
  0016a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0016d	50		 push	 eax
  0016e	8b 4d f4	 mov	 ecx, DWORD PTR _pd3dEnum$2[ebp]
  00171	e8 00 00 00 00	 call	 ?GetDeviceSettingsCombo@CD3D11Enumeration@@QBEPAUCD3D11EnumDeviceSettingsCombo@@IW4DXGI_FORMAT@@H@Z ; CD3D11Enumeration::GetDeviceSettingsCombo
  00176	89 45 f0	 mov	 DWORD PTR _pDeviceSettingsCombo$1[ebp], eax
; Line 4103
  00179	83 7d f0 00	 cmp	 DWORD PTR _pDeviceSettingsCombo$1[ebp], 0
  0017d	74 2a		 je	 SHORT $LN11@DXUTUpdate
; Line 4104
  0017f	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$1[ebp]
  00182	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00185	81 c2 28 01 00
	00		 add	 edx, 296		; 00000128H
  0018b	8b f4		 mov	 esi, esp
  0018d	52		 push	 edx
  0018e	68 00 01 00 00	 push	 256			; 00000100H
  00193	8b 45 fc	 mov	 eax, DWORD PTR _pstrDeviceStats$[ebp]
  00196	50		 push	 eax
  00197	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a0	3b f4		 cmp	 esi, esp
  001a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4105
  001a7	eb 1f		 jmp	 SHORT $LN13@DXUTUpdate
$LN11@DXUTUpdate:
; Line 4106
  001a9	8b 4d 10	 mov	 ecx, DWORD PTR _pAdapterDesc$[ebp]
  001ac	8b f4		 mov	 esi, esp
  001ae	51		 push	 ecx
  001af	68 00 01 00 00	 push	 256			; 00000100H
  001b4	8b 55 fc	 mov	 edx, DWORD PTR _pstrDeviceStats$[ebp]
  001b7	52		 push	 edx
  001b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  001be	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c1	3b f4		 cmp	 esi, esp
  001c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@DXUTUpdate:
; Line 4109
  001c8	8b 45 0c	 mov	 eax, DWORD PTR _featureLevel$[ebp]
  001cb	89 45 ec	 mov	 DWORD PTR tv152[ebp], eax
  001ce	81 7d ec 00 a0
	00 00		 cmp	 DWORD PTR tv152[ebp], 40960 ; 0000a000H
  001d5	7f 2d		 jg	 SHORT $LN25@DXUTUpdate
  001d7	81 7d ec 00 a0
	00 00		 cmp	 DWORD PTR tv152[ebp], 40960 ; 0000a000H
  001de	0f 84 bb 00 00
	00		 je	 $LN4@DXUTUpdate
  001e4	81 7d ec 00 91
	00 00		 cmp	 DWORD PTR tv152[ebp], 37120 ; 00009100H
  001eb	74 43		 je	 SHORT $LN7@DXUTUpdate
  001ed	81 7d ec 00 92
	00 00		 cmp	 DWORD PTR tv152[ebp], 37376 ; 00009200H
  001f4	74 5f		 je	 SHORT $LN6@DXUTUpdate
  001f6	81 7d ec 00 93
	00 00		 cmp	 DWORD PTR tv152[ebp], 37632 ; 00009300H
  001fd	74 7b		 je	 SHORT $LN5@DXUTUpdate
  001ff	e9 21 01 00 00	 jmp	 $LN22@DXUTUpdate
$LN25@DXUTUpdate:
  00204	81 7d ec 00 a1
	00 00		 cmp	 DWORD PTR tv152[ebp], 41216 ; 0000a100H
  0020b	0f 84 b0 00 00
	00		 je	 $LN3@DXUTUpdate
  00211	81 7d ec 00 b0
	00 00		 cmp	 DWORD PTR tv152[ebp], 45056 ; 0000b000H
  00218	0f 84 c5 00 00
	00		 je	 $LN2@DXUTUpdate
  0021e	81 7d ec 00 b1
	00 00		 cmp	 DWORD PTR tv152[ebp], 45312 ; 0000b100H
  00225	0f 84 da 00 00
	00		 je	 $LN1@DXUTUpdate
  0022b	e9 f5 00 00 00	 jmp	 $LN22@DXUTUpdate
$LN7@DXUTUpdate:
; Line 4112
  00230	8b f4		 mov	 esi, esp
  00232	68 00 00 00 00	 push	 OFFSET $SG153695
  00237	68 00 01 00 00	 push	 256			; 00000100H
  0023c	8b 4d fc	 mov	 ecx, DWORD PTR _pstrDeviceStats$[ebp]
  0023f	51		 push	 ecx
  00240	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  00246	83 c4 0c	 add	 esp, 12			; 0000000cH
  00249	3b f4		 cmp	 esi, esp
  0024b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4113
  00250	e9 d0 00 00 00	 jmp	 $LN22@DXUTUpdate
$LN6@DXUTUpdate:
; Line 4115
  00255	8b f4		 mov	 esi, esp
  00257	68 00 00 00 00	 push	 OFFSET $SG153697
  0025c	68 00 01 00 00	 push	 256			; 00000100H
  00261	8b 55 fc	 mov	 edx, DWORD PTR _pstrDeviceStats$[ebp]
  00264	52		 push	 edx
  00265	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  0026b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0026e	3b f4		 cmp	 esi, esp
  00270	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4116
  00275	e9 ab 00 00 00	 jmp	 $LN22@DXUTUpdate
$LN5@DXUTUpdate:
; Line 4118
  0027a	8b f4		 mov	 esi, esp
  0027c	68 00 00 00 00	 push	 OFFSET $SG153699
  00281	68 00 01 00 00	 push	 256			; 00000100H
  00286	8b 45 fc	 mov	 eax, DWORD PTR _pstrDeviceStats$[ebp]
  00289	50		 push	 eax
  0028a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  00290	83 c4 0c	 add	 esp, 12			; 0000000cH
  00293	3b f4		 cmp	 esi, esp
  00295	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4119
  0029a	e9 86 00 00 00	 jmp	 $LN22@DXUTUpdate
$LN4@DXUTUpdate:
; Line 4121
  0029f	8b f4		 mov	 esi, esp
  002a1	68 00 00 00 00	 push	 OFFSET $SG153701
  002a6	68 00 01 00 00	 push	 256			; 00000100H
  002ab	8b 4d fc	 mov	 ecx, DWORD PTR _pstrDeviceStats$[ebp]
  002ae	51		 push	 ecx
  002af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  002b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  002b8	3b f4		 cmp	 esi, esp
  002ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4122
  002bf	eb 64		 jmp	 SHORT $LN22@DXUTUpdate
$LN3@DXUTUpdate:
; Line 4124
  002c1	8b f4		 mov	 esi, esp
  002c3	68 00 00 00 00	 push	 OFFSET $SG153703
  002c8	68 00 01 00 00	 push	 256			; 00000100H
  002cd	8b 55 fc	 mov	 edx, DWORD PTR _pstrDeviceStats$[ebp]
  002d0	52		 push	 edx
  002d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  002d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  002da	3b f4		 cmp	 esi, esp
  002dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4125
  002e1	eb 42		 jmp	 SHORT $LN22@DXUTUpdate
$LN2@DXUTUpdate:
; Line 4127
  002e3	8b f4		 mov	 esi, esp
  002e5	68 00 00 00 00	 push	 OFFSET $SG153705
  002ea	68 00 01 00 00	 push	 256			; 00000100H
  002ef	8b 45 fc	 mov	 eax, DWORD PTR _pstrDeviceStats$[ebp]
  002f2	50		 push	 eax
  002f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  002f9	83 c4 0c	 add	 esp, 12			; 0000000cH
  002fc	3b f4		 cmp	 esi, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4128
  00303	eb 20		 jmp	 SHORT $LN22@DXUTUpdate
$LN1@DXUTUpdate:
; Line 4130
  00305	8b f4		 mov	 esi, esp
  00307	68 00 00 00 00	 push	 OFFSET $SG153707
  0030c	68 00 01 00 00	 push	 256			; 00000100H
  00311	8b 4d fc	 mov	 ecx, DWORD PTR _pstrDeviceStats$[ebp]
  00314	51		 push	 ecx
  00315	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  0031b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0031e	3b f4		 cmp	 esi, esp
  00320	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN22@DXUTUpdate:
; Line 4133
  00325	5e		 pop	 esi
  00326	83 c4 14	 add	 esp, 20			; 00000014H
  00329	3b ec		 cmp	 ebp, esp
  0032b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00330	8b e5		 mov	 esp, ebp
  00332	5d		 pop	 ebp
  00333	c3		 ret	 0
?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z ENDP ; DXUTUpdateD3D11DeviceStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv211 = -116						; size = 4
_rcWnd$1 = -108						; size = 16
_SCDesc$ = -84						; size = 60
_pSwapChain$ = -20					; size = 4
_pDeviceSettings$ = -16					; size = 4
_bDeferredDXGIAction$ = -9				; size = 1
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTReset3DEnvironment11@@YAJXZ PROC			; DXUTReset3DEnvironment11
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2666
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d 8c	 lea	 edi, DWORD PTR [ebp-116]
  0000b	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 2669
  00021	6a 00		 push	 0
  00023	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00028	8b c8		 mov	 ecx, eax
  0002a	e8 00 00 00 00	 call	 ?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
; Line 2670
  0002f	6a 01		 push	 1
  00031	6a 01		 push	 1
  00033	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 2672
  00038	c6 45 f7 00	 mov	 BYTE PTR _bDeferredDXGIAction$[ebp], 0
; Line 2673
  0003c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00048	89 45 f0	 mov	 DWORD PTR _pDeviceSettings$[ebp], eax
; Line 2674
  0004b	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  00050	89 45 ec	 mov	 DWORD PTR _pSwapChain$[ebp], eax
; Line 2675
  00053	83 7d ec 00	 cmp	 DWORD PTR _pSwapChain$[ebp], 0
  00057	75 21		 jne	 SHORT $LN18@DXUTReset3
  00059	8b f4		 mov	 esi, esp
  0005b	68 73 0a 00 00	 push	 2675			; 00000a73H
  00060	68 00 00 00 00	 push	 OFFSET $SG152528
  00065	68 00 00 00 00	 push	 OFFSET $SG152529
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
  00073	3b f4		 cmp	 esi, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN18@DXUTReset3:
; Line 2679
  0007a	8b f4		 mov	 esi, esp
  0007c	8d 4d ac	 lea	 ecx, DWORD PTR _SCDesc$[ebp]
  0007f	51		 push	 ecx
  00080	8b 55 ec	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	8b 4d ec	 mov	 ecx, DWORD PTR _pSwapChain$[ebp]
  00088	51		 push	 ecx
  00089	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  0008c	ff d2		 call	 edx
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	85 c0		 test	 eax, eax
  00097	7d 10		 jge	 SHORT $LN15@DXUTReset3
; Line 2680
  00099	6a 3c		 push	 60			; 0000003cH
  0009b	6a 00		 push	 0
  0009d	8d 45 ac	 lea	 eax, DWORD PTR _SCDesc$[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 _memset
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@DXUTReset3:
; Line 2687
  000a9	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  000ac	83 79 40 00	 cmp	 DWORD PTR [ecx+64], 0
  000b0	74 37		 je	 SHORT $LN14@DXUTReset3
  000b2	83 7d dc 00	 cmp	 DWORD PTR _SCDesc$[ebp+48], 0
  000b6	74 31		 je	 SHORT $LN14@DXUTReset3
; Line 2690
  000b8	8b f4		 mov	 esi, esp
  000ba	8d 55 94	 lea	 edx, DWORD PTR _rcWnd$1[ebp]
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  000c3	50		 push	 eax
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2691
  000d1	8b 45 9c	 mov	 eax, DWORD PTR _rcWnd$1[ebp+8]
  000d4	2b 45 94	 sub	 eax, DWORD PTR _rcWnd$1[ebp]
  000d7	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  000da	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 2692
  000dd	8b 55 a0	 mov	 edx, DWORD PTR _rcWnd$1[ebp+12]
  000e0	2b 55 98	 sub	 edx, DWORD PTR _rcWnd$1[ebp+4]
  000e3	8b 45 f0	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000e6	89 50 14	 mov	 DWORD PTR [eax+20], edx
$LN14@DXUTReset3:
; Line 2698
  000e9	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  000ec	8b 55 dc	 mov	 edx, DWORD PTR _SCDesc$[ebp+48]
  000ef	3b 51 40	 cmp	 edx, DWORD PTR [ecx+64]
  000f2	0f 84 03 01 00
	00		 je	 $LN13@DXUTReset3
; Line 2701
  000f8	8b 45 f0	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000fb	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  000ff	74 4c		 je	 SHORT $LN12@DXUTReset3
; Line 2703
  00101	8b f4		 mov	 esi, esp
  00103	6a 00		 push	 0
  00105	6a 00		 push	 0
  00107	8b 4d ec	 mov	 ecx, DWORD PTR _pSwapChain$[ebp]
  0010a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010c	8b 45 ec	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  0010f	50		 push	 eax
  00110	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  00113	ff d1		 call	 ecx
  00115	3b f4		 cmp	 esi, esp
  00117	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  0011f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00123	7d 1f		 jge	 SHORT $LN11@DXUTReset3
  00125	6a 01		 push	 1
  00127	68 00 00 00 00	 push	 OFFSET $SG152540
  0012c	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  0012f	52		 push	 edx
  00130	68 8f 0a 00 00	 push	 2703			; 00000a8fH
  00135	68 00 00 00 00	 push	 OFFSET $SG152541
  0013a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0013f	e9 85 01 00 00	 jmp	 $LN16@DXUTReset3
$LN11@DXUTReset3:
; Line 2704
  00144	c6 45 f7 01	 mov	 BYTE PTR _bDeferredDXGIAction$[ebp], 1
; Line 2706
  00148	e9 a9 00 00 00	 jmp	 $LN10@DXUTReset3
$LN12@DXUTReset3:
; Line 2716
  0014d	6a 01		 push	 1
  0014f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00154	8b c8		 mov	 ecx, eax
  00156	e8 00 00 00 00	 call	 ?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z ; DXUTState::SetDoNotStoreBufferSize
; Line 2717
  0015b	8b f4		 mov	 esi, esp
  0015d	6a 00		 push	 0
  0015f	6a 01		 push	 1
  00161	8b 45 ec	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  00164	8b 08		 mov	 ecx, DWORD PTR [eax]
  00166	8b 55 ec	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  00169	52		 push	 edx
  0016a	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0016d	ff d0		 call	 eax
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  00179	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0017d	7d 1f		 jge	 SHORT $LN9@DXUTReset3
  0017f	6a 01		 push	 1
  00181	68 00 00 00 00	 push	 OFFSET $SG152546
  00186	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00189	51		 push	 ecx
  0018a	68 9d 0a 00 00	 push	 2717			; 00000a9dH
  0018f	68 00 00 00 00	 push	 OFFSET $SG152547
  00194	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00199	e9 2b 01 00 00	 jmp	 $LN16@DXUTReset3
$LN9@DXUTReset3:
; Line 2718
  0019e	6a 00		 push	 0
  001a0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001a5	8b c8		 mov	 ecx, eax
  001a7	e8 00 00 00 00	 call	 ?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z ; DXUTState::SetDoNotStoreBufferSize
; Line 2720
  001ac	8b 55 f0	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  001af	83 c2 10	 add	 edx, 16			; 00000010H
  001b2	8b f4		 mov	 esi, esp
  001b4	52		 push	 edx
  001b5	8b 45 ec	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  001b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ba	8b 55 ec	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  001bd	52		 push	 edx
  001be	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  001c1	ff d0		 call	 eax
  001c3	3b f4		 cmp	 esi, esp
  001c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ca	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  001cd	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001d1	7d 1f		 jge	 SHORT $LN8@DXUTReset3
  001d3	6a 01		 push	 1
  001d5	68 00 00 00 00	 push	 OFFSET $SG152551
  001da	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  001dd	51		 push	 ecx
  001de	68 a0 0a 00 00	 push	 2720			; 00000aa0H
  001e3	68 00 00 00 00	 push	 OFFSET $SG152552
  001e8	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001ed	e9 d7 00 00 00	 jmp	 $LN16@DXUTReset3
$LN8@DXUTReset3:
; Line 2721
  001f2	c6 45 f7 01	 mov	 BYTE PTR _bDeferredDXGIAction$[ebp], 1
$LN10@DXUTReset3:
; Line 2724
  001f6	e9 ad 00 00 00	 jmp	 $LN7@DXUTReset3
$LN13@DXUTReset3:
; Line 2728
  001fb	8b 55 f0	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  001fe	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00201	3b 45 ac	 cmp	 eax, DWORD PTR _SCDesc$[ebp]
  00204	75 45		 jne	 SHORT $LN6@DXUTReset3
  00206	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00209	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0020c	3b 55 b0	 cmp	 edx, DWORD PTR _SCDesc$[ebp+4]
  0020f	75 3a		 jne	 SHORT $LN6@DXUTReset3
  00211	8b 45 f0	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00214	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00217	3b 4d bc	 cmp	 ecx, DWORD PTR _SCDesc$[ebp+16]
  0021a	74 2f		 je	 SHORT $LN6@DXUTReset3
; Line 2730
  0021c	8b 55 f0	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  0021f	83 7a 40 00	 cmp	 DWORD PTR [edx+64], 0
  00223	75 09		 jne	 SHORT $LN19@DXUTReset3
  00225	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR tv211[ebp], 1
  0022c	eb 07		 jmp	 SHORT $LN20@DXUTReset3
$LN19@DXUTReset3:
  0022e	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv211[ebp], 0
$LN20@DXUTReset3:
  00235	8b 45 8c	 mov	 eax, DWORD PTR tv211[ebp]
  00238	50		 push	 eax
  00239	6a 00		 push	 0
  0023b	6a 00		 push	 0
  0023d	e8 00 00 00 00	 call	 ?DXUTResizeDXGIBuffers@@YAXIIH@Z ; DXUTResizeDXGIBuffers
  00242	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2731
  00245	c6 45 f7 01	 mov	 BYTE PTR _bDeferredDXGIAction$[ebp], 1
; Line 2733
  00249	eb 5d		 jmp	 SHORT $LN7@DXUTReset3
$LN6@DXUTReset3:
; Line 2734
  0024b	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  0024e	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00251	3b 55 ac	 cmp	 edx, DWORD PTR _SCDesc$[ebp]
  00254	75 0b		 jne	 SHORT $LN3@DXUTReset3
  00256	8b 45 f0	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00259	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0025c	3b 4d b0	 cmp	 ecx, DWORD PTR _SCDesc$[ebp+4]
  0025f	74 47		 je	 SHORT $LN7@DXUTReset3
$LN3@DXUTReset3:
; Line 2736
  00261	8b 55 f0	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00264	83 c2 10	 add	 edx, 16			; 00000010H
  00267	8b f4		 mov	 esi, esp
  00269	52		 push	 edx
  0026a	8b 45 ec	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  0026d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026f	8b 55 ec	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  00272	52		 push	 edx
  00273	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00276	ff d0		 call	 eax
  00278	3b f4		 cmp	 esi, esp
  0027a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027f	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  00282	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00286	7d 1c		 jge	 SHORT $LN2@DXUTReset3
  00288	6a 01		 push	 1
  0028a	68 00 00 00 00	 push	 OFFSET $SG152561
  0028f	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00292	51		 push	 ecx
  00293	68 b0 0a 00 00	 push	 2736			; 00000ab0H
  00298	68 00 00 00 00	 push	 OFFSET $SG152562
  0029d	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  002a2	eb 25		 jmp	 SHORT $LN16@DXUTReset3
$LN2@DXUTReset3:
; Line 2737
  002a4	c6 45 f7 01	 mov	 BYTE PTR _bDeferredDXGIAction$[ebp], 1
$LN7@DXUTReset3:
; Line 2744
  002a8	0f b6 55 f7	 movzx	 edx, BYTE PTR _bDeferredDXGIAction$[ebp]
  002ac	85 d2		 test	 edx, edx
  002ae	75 0e		 jne	 SHORT $LN1@DXUTReset3
; Line 2745
  002b0	6a 01		 push	 1
  002b2	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002b7	8b c8		 mov	 ecx, eax
  002b9	e8 00 00 00 00	 call	 ?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
$LN1@DXUTReset3:
; Line 2746
  002be	6a 00		 push	 0
  002c0	6a 00		 push	 0
  002c2	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 2748
  002c7	33 c0		 xor	 eax, eax
$LN16@DXUTReset3:
; Line 2749
  002c9	52		 push	 edx
  002ca	8b cd		 mov	 ecx, ebp
  002cc	50		 push	 eax
  002cd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN24@DXUTReset3
  002d3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002d8	58		 pop	 eax
  002d9	5a		 pop	 edx
  002da	5f		 pop	 edi
  002db	5e		 pop	 esi
  002dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002df	33 cd		 xor	 ecx, ebp
  002e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002e6	83 c4 74	 add	 esp, 116		; 00000074H
  002e9	3b ec		 cmp	 ebp, esp
  002eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f0	8b e5		 mov	 esp, ebp
  002f2	5d		 pop	 ebp
  002f3	c3		 ret	 0
$LN24@DXUTReset3:
  002f4	02 00 00 00	 DD	 2
  002f8	00 00 00 00	 DD	 $LN23@DXUTReset3
$LN23@DXUTReset3:
  002fc	ac ff ff ff	 DD	 -84			; ffffffacH
  00300	3c 00 00 00	 DD	 60			; 0000003cH
  00304	00 00 00 00	 DD	 $LN21@DXUTReset3
  00308	94 ff ff ff	 DD	 -108			; ffffff94H
  0030c	10 00 00 00	 DD	 16			; 00000010H
  00310	00 00 00 00	 DD	 $LN22@DXUTReset3
$LN22@DXUTReset3:
  00314	72		 DB	 114			; 00000072H
  00315	63		 DB	 99			; 00000063H
  00316	57		 DB	 87			; 00000057H
  00317	6e		 DB	 110			; 0000006eH
  00318	64		 DB	 100			; 00000064H
  00319	00		 DB	 0
$LN21@DXUTReset3:
  0031a	53		 DB	 83			; 00000053H
  0031b	43		 DB	 67			; 00000043H
  0031c	44		 DB	 68			; 00000044H
  0031d	65		 DB	 101			; 00000065H
  0031e	73		 DB	 115			; 00000073H
  0031f	63		 DB	 99			; 00000063H
  00320	00		 DB	 0
?DXUTReset3DEnvironment11@@YAJXZ ENDP			; DXUTReset3DEnvironment11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv663 = -348						; size = 4
tv621 = -344						; size = 4
tv316 = -340						; size = 4
$T1 = -336						; size = 4
_pCallbackSwapChainResized$ = -332			; size = 4
_pCallbackDeviceCreated$ = -328				; size = 4
_pBackBufferSurfaceDesc$ = -324				; size = 4
_pAdapterInfo$ = -320					; size = 4
_pd3dEnum$ = -316					; size = 4
_pd3dImmediateContext1$2 = -308				; size = 4
_pd3d11Device1$3 = -296					; size = 4
_ppOutputArray$ = -288					; size = 4
_pOutput$4 = -280					; size = 4
_iOutput$ = -272					; size = 4
_OutputCount$ = -268					; size = 4
_pRS$ = -260						; size = 4
_drd$ = -248						; size = 40
_pTempAdapter$5 = -200					; size = 4
_pDXGIDev$6 = -188					; size = 4
_filter$7 = -176					; size = 48
_denied$8 = -120					; size = 4
_infoQueue$9 = -108					; size = 4
_d3dDebug$10 = -96					; size = 4
_ddt$ = -88						; size = 4
_pAdapter$ = -80					; size = 4
_pDXGIFactory$ = -68					; size = 4
_pNewDeviceSettings$ = -60				; size = 4
_pSwapChain$ = -52					; size = 4
_FeatureLevel$ = -40					; size = 4
_pd3dImmediateContext$ = -28				; size = 4
_pd3d11Device$ = -16					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTCreate3DEnvironment11@@YAJXZ PROC			; DXUTCreate3DEnvironment11
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2358
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd a4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-348]
  00011	b9 57 00 00 00	 mov	 ecx, 87			; 00000057H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 2359
  00027	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2361
  0002e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pd3d11Device$[ebp], 0
; Line 2362
  00035	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pd3dImmediateContext$[ebp], 0
; Line 2363
  0003c	c7 45 d8 00 b1
	00 00		 mov	 DWORD PTR _FeatureLevel$[ebp], 45312 ; 0000b100H
; Line 2365
  00043	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _pSwapChain$[ebp], 0
; Line 2366
  0004a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00056	89 45 c4	 mov	 DWORD PTR _pNewDeviceSettings$[ebp], eax
; Line 2367
  00059	83 7d c4 00	 cmp	 DWORD PTR _pNewDeviceSettings$[ebp], 0
  0005d	75 21		 jne	 SHORT $LN49@DXUTCreate
  0005f	8b f4		 mov	 esi, esp
  00061	68 3f 09 00 00	 push	 2367			; 0000093fH
  00066	68 00 00 00 00	 push	 OFFSET $SG152305
  0006b	68 00 00 00 00	 push	 OFFSET $SG152306
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
  00079	3b f4		 cmp	 esi, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN49@DXUTCreate:
; Line 2370
  00080	e8 00 00 00 00	 call	 ?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ ; DXUTGetDXGIFactory
  00085	89 45 bc	 mov	 DWORD PTR _pDXGIFactory$[ebp], eax
; Line 2371
  00088	83 7d bc 00	 cmp	 DWORD PTR _pDXGIFactory$[ebp], 0
  0008c	75 21		 jne	 SHORT $LN50@DXUTCreate
  0008e	8b f4		 mov	 esi, esp
  00090	68 43 09 00 00	 push	 2371			; 00000943H
  00095	68 00 00 00 00	 push	 OFFSET $SG152310
  0009a	68 00 00 00 00	 push	 OFFSET $SG152311
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a8	3b f4		 cmp	 esi, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN50@DXUTCreate:
; Line 2373
  000af	8b f4		 mov	 esi, esp
  000b1	6a 00		 push	 0
  000b3	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  000b8	50		 push	 eax
  000b9	8b 55 bc	 mov	 edx, DWORD PTR _pDXGIFactory$[ebp]
  000bc	8b 02		 mov	 eax, DWORD PTR [edx]
  000be	8b 4d bc	 mov	 ecx, DWORD PTR _pDXGIFactory$[ebp]
  000c1	51		 push	 ecx
  000c2	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000c5	ff d2		 call	 edx
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2376
  000d1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _pAdapter$[ebp], 0
; Line 2378
  000d8	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2379
  000df	8b 45 c4	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  000e2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e5	89 4d a8	 mov	 DWORD PTR _ddt$[ebp], ecx
; Line 2380
  000e8	8b 55 c4	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  000eb	83 7a 08 01	 cmp	 DWORD PTR [edx+8], 1
  000ef	75 3e		 jne	 SHORT $LN46@DXUTCreate
; Line 2382
  000f1	8b f4		 mov	 esi, esp
  000f3	8d 45 b0	 lea	 eax, DWORD PTR _pAdapter$[ebp]
  000f6	50		 push	 eax
  000f7	8b 4d c4	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  000fa	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000fd	52		 push	 edx
  000fe	8b 45 bc	 mov	 eax, DWORD PTR _pDXGIFactory$[ebp]
  00101	8b 08		 mov	 ecx, DWORD PTR [eax]
  00103	8b 55 bc	 mov	 edx, DWORD PTR _pDXGIFactory$[ebp]
  00106	52		 push	 edx
  00107	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  0010a	ff d0		 call	 eax
  0010c	3b f4		 cmp	 esi, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00113	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2383
  00116	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0011a	7d 0a		 jge	 SHORT $LN45@DXUTCreate
; Line 2385
  0011c	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00121	e9 83 0a 00 00	 jmp	 $LN47@DXUTCreate
$LN45@DXUTCreate:
; Line 2387
  00126	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ddt$[ebp], 0
  0012d	eb 30		 jmp	 SHORT $LN41@DXUTCreate
$LN46@DXUTCreate:
; Line 2389
  0012f	8b 4d c4	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  00132	83 79 08 05	 cmp	 DWORD PTR [ecx+8], 5
  00136	75 10		 jne	 SHORT $LN43@DXUTCreate
; Line 2391
  00138	c7 45 a8 05 00
	00 00		 mov	 DWORD PTR _ddt$[ebp], 5
; Line 2392
  0013f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _pAdapter$[ebp], 0
  00146	eb 17		 jmp	 SHORT $LN41@DXUTCreate
$LN43@DXUTCreate:
; Line 2394
  00148	8b 55 c4	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  0014b	83 7a 08 02	 cmp	 DWORD PTR [edx+8], 2
  0014f	75 0e		 jne	 SHORT $LN41@DXUTCreate
; Line 2396
  00151	c7 45 a8 02 00
	00 00		 mov	 DWORD PTR _ddt$[ebp], 2
; Line 2397
  00158	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _pAdapter$[ebp], 0
$LN41@DXUTCreate:
; Line 2400
  0015f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00163	0f 8c 9b 00 00
	00		 jl	 $LN37@DXUTCreate
; Line 2412
  00169	8d 45 e4	 lea	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0016c	50		 push	 eax
  0016d	8d 4d d8	 lea	 ecx, DWORD PTR _FeatureLevel$[ebp]
  00170	51		 push	 ecx
  00171	8d 55 f0	 lea	 edx, DWORD PTR _pd3d11Device$[ebp]
  00174	52		 push	 edx
  00175	6a 07		 push	 7
  00177	6a 01		 push	 1
  00179	8b 45 c4	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  0017c	83 c0 60	 add	 eax, 96			; 00000060H
  0017f	50		 push	 eax
  00180	8b 4d c4	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  00183	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00186	52		 push	 edx
  00187	6a 00		 push	 0
  00189	8b 45 a8	 mov	 eax, DWORD PTR _ddt$[ebp]
  0018c	50		 push	 eax
  0018d	8b 4d b0	 mov	 ecx, DWORD PTR _pAdapter$[ebp]
  00190	51		 push	 ecx
  00191	e8 00 00 00 00	 call	 ?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z ; DXUT_Dynamic_D3D11CreateDevice
  00196	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2414
  00199	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0019d	7d 65		 jge	 SHORT $LN37@DXUTCreate
; Line 2416
  0019f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _pAdapter$[ebp], 0
; Line 2418
  001a6	83 7d a8 00	 cmp	 DWORD PTR _ddt$[ebp], 0
  001aa	75 2e		 jne	 SHORT $LN38@DXUTCreate
; Line 2430
  001ac	8d 55 e4	 lea	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001af	52		 push	 edx
  001b0	8d 45 d8	 lea	 eax, DWORD PTR _FeatureLevel$[ebp]
  001b3	50		 push	 eax
  001b4	8d 4d f0	 lea	 ecx, DWORD PTR _pd3d11Device$[ebp]
  001b7	51		 push	 ecx
  001b8	6a 07		 push	 7
  001ba	6a 01		 push	 1
  001bc	8b 55 c4	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  001bf	83 c2 60	 add	 edx, 96			; 00000060H
  001c2	52		 push	 edx
  001c3	8b 45 c4	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  001c6	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  001c9	51		 push	 ecx
  001ca	6a 00		 push	 0
  001cc	6a 01		 push	 1
  001ce	8b 55 b0	 mov	 edx, DWORD PTR _pAdapter$[ebp]
  001d1	52		 push	 edx
  001d2	e8 00 00 00 00	 call	 ?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z ; DXUT_Dynamic_D3D11CreateDevice
  001d7	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN38@DXUTCreate:
; Line 2432
  001da	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001de	7d 24		 jge	 SHORT $LN37@DXUTCreate
; Line 2434
  001e0	6a 00		 push	 0
  001e2	68 00 00 00 00	 push	 OFFSET $SG152333
  001e7	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  001ea	50		 push	 eax
  001eb	68 82 09 00 00	 push	 2434			; 00000982H
  001f0	68 00 00 00 00	 push	 OFFSET $SG152334
  001f5	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 2435
  001fa	b8 05 09 04 80	 mov	 eax, -2147219195	; 80040905H
  001ff	e9 a5 09 00 00	 jmp	 $LN47@DXUTCreate
$LN37@DXUTCreate:
; Line 2441
  00204	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00208	0f 8c d1 00 00
	00		 jl	 $LN35@DXUTCreate
; Line 2443
  0020e	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _d3dDebug$10[ebp], 0
; Line 2444
  00215	8b f4		 mov	 esi, esp
  00217	8d 4d a0	 lea	 ecx, DWORD PTR _d3dDebug$10[ebp]
  0021a	51		 push	 ecx
  0021b	68 00 00 00 00	 push	 OFFSET __GUID_79cf2233_7536_4948_9d36_1e4692dc5760
  00220	8b 55 f0	 mov	 edx, DWORD PTR _pd3d11Device$[ebp]
  00223	8b 02		 mov	 eax, DWORD PTR [edx]
  00225	8b 4d f0	 mov	 ecx, DWORD PTR _pd3d11Device$[ebp]
  00228	51		 push	 ecx
  00229	8b 10		 mov	 edx, DWORD PTR [eax]
  0022b	ff d2		 call	 edx
  0022d	3b f4		 cmp	 esi, esp
  0022f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00234	85 c0		 test	 eax, eax
  00236	0f 8c a3 00 00
	00		 jl	 $LN35@DXUTCreate
; Line 2446
  0023c	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _infoQueue$9[ebp], 0
; Line 2447
  00243	8b f4		 mov	 esi, esp
  00245	8d 45 94	 lea	 eax, DWORD PTR _infoQueue$9[ebp]
  00248	50		 push	 eax
  00249	68 00 00 00 00	 push	 OFFSET __GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6
  0024e	8b 4d a0	 mov	 ecx, DWORD PTR _d3dDebug$10[ebp]
  00251	8b 11		 mov	 edx, DWORD PTR [ecx]
  00253	8b 45 a0	 mov	 eax, DWORD PTR _d3dDebug$10[ebp]
  00256	50		 push	 eax
  00257	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00259	ff d1		 call	 ecx
  0025b	3b f4		 cmp	 esi, esp
  0025d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00262	85 c0		 test	 eax, eax
  00264	7c 62		 jl	 SHORT $LN34@DXUTCreate
; Line 2453
  00266	c7 45 88 37 00
	00 00		 mov	 DWORD PTR _denied$8[ebp], 55 ; 00000037H
; Line 2456
  0026d	6a 30		 push	 48			; 00000030H
  0026f	6a 00		 push	 0
  00271	8d 95 50 ff ff
	ff		 lea	 edx, DWORD PTR _filter$7[ebp]
  00277	52		 push	 edx
  00278	e8 00 00 00 00	 call	 _memset
  0027d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2457
  00280	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _filter$7[ebp+40], 1
; Line 2458
  0028a	8d 45 88	 lea	 eax, DWORD PTR _denied$8[ebp]
  0028d	89 85 7c ff ff
	ff		 mov	 DWORD PTR _filter$7[ebp+44], eax
; Line 2459
  00293	8b f4		 mov	 esi, esp
  00295	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _filter$7[ebp]
  0029b	51		 push	 ecx
  0029c	8b 55 94	 mov	 edx, DWORD PTR _infoQueue$9[ebp]
  0029f	8b 02		 mov	 eax, DWORD PTR [edx]
  002a1	8b 4d 94	 mov	 ecx, DWORD PTR _infoQueue$9[ebp]
  002a4	51		 push	 ecx
  002a5	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  002a8	ff d2		 call	 edx
  002aa	3b f4		 cmp	 esi, esp
  002ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2460
  002b1	8b 45 94	 mov	 eax, DWORD PTR _infoQueue$9[ebp]
  002b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b6	8b f4		 mov	 esi, esp
  002b8	8b 55 94	 mov	 edx, DWORD PTR _infoQueue$9[ebp]
  002bb	52		 push	 edx
  002bc	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  002bf	ff d0		 call	 eax
  002c1	3b f4		 cmp	 esi, esp
  002c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN34@DXUTCreate:
; Line 2462
  002c8	8b 4d a0	 mov	 ecx, DWORD PTR _d3dDebug$10[ebp]
  002cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  002cd	8b f4		 mov	 esi, esp
  002cf	8b 45 a0	 mov	 eax, DWORD PTR _d3dDebug$10[ebp]
  002d2	50		 push	 eax
  002d3	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  002d6	ff d1		 call	 ecx
  002d8	3b f4		 cmp	 esi, esp
  002da	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN35@DXUTCreate:
; Line 2467
  002df	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  002e3	0f 8c fb 01 00
	00		 jl	 $LN33@DXUTCreate
; Line 2469
  002e9	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pDXGIDev$6[ebp], 0
; Line 2470
  002f3	8b f4		 mov	 esi, esp
  002f5	8d 95 44 ff ff
	ff		 lea	 edx, DWORD PTR _pDXGIDev$6[ebp]
  002fb	52		 push	 edx
  002fc	68 00 00 00 00	 push	 OFFSET __GUID_77db970f_6276_48ba_ba28_070143b4392c
  00301	8b 45 f0	 mov	 eax, DWORD PTR _pd3d11Device$[ebp]
  00304	8b 08		 mov	 ecx, DWORD PTR [eax]
  00306	8b 55 f0	 mov	 edx, DWORD PTR _pd3d11Device$[ebp]
  00309	52		 push	 edx
  0030a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0030c	ff d0		 call	 eax
  0030e	3b f4		 cmp	 esi, esp
  00310	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00315	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2471
  00318	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0031c	0f 8c 82 01 00
	00		 jl	 $LN31@DXUTCreate
  00322	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _pDXGIDev$6[ebp], 0
  00329	0f 84 75 01 00
	00		 je	 $LN31@DXUTCreate
; Line 2473
  0032f	83 7d b0 00	 cmp	 DWORD PTR _pAdapter$[ebp], 0
  00333	0f 85 6b 01 00
	00		 jne	 $LN31@DXUTCreate
; Line 2475
  00339	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pTempAdapter$5[ebp], 0
; Line 2476
  00343	8b f4		 mov	 esi, esp
  00345	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _pTempAdapter$5[ebp]
  0034b	51		 push	 ecx
  0034c	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _pDXGIDev$6[ebp]
  00352	8b 02		 mov	 eax, DWORD PTR [edx]
  00354	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _pDXGIDev$6[ebp]
  0035a	51		 push	 ecx
  0035b	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0035e	ff d2		 call	 edx
  00360	3b f4		 cmp	 esi, esp
  00362	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00367	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  0036a	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0036e	7d 1f		 jge	 SHORT $LN30@DXUTCreate
  00370	6a 01		 push	 1
  00372	68 00 00 00 00	 push	 OFFSET $SG152370
  00377	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0037a	50		 push	 eax
  0037b	68 ac 09 00 00	 push	 2476			; 000009acH
  00380	68 00 00 00 00	 push	 OFFSET $SG152371
  00385	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0038a	e9 1a 08 00 00	 jmp	 $LN47@DXUTCreate
$LN30@DXUTCreate:
; Line 2477
  0038f	8b f4		 mov	 esi, esp
  00391	8d 4d b0	 lea	 ecx, DWORD PTR _pAdapter$[ebp]
  00394	51		 push	 ecx
  00395	68 00 00 00 00	 push	 OFFSET __GUID_29038f61_3839_4626_91fd_086879011a05
  0039a	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _pTempAdapter$5[ebp]
  003a0	8b 02		 mov	 eax, DWORD PTR [edx]
  003a2	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _pTempAdapter$5[ebp]
  003a8	51		 push	 ecx
  003a9	8b 10		 mov	 edx, DWORD PTR [eax]
  003ab	ff d2		 call	 edx
  003ad	3b f4		 cmp	 esi, esp
  003af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b4	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  003b7	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  003bb	7d 1f		 jge	 SHORT $LN29@DXUTCreate
  003bd	6a 01		 push	 1
  003bf	68 00 00 00 00	 push	 OFFSET $SG152377
  003c4	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  003c7	50		 push	 eax
  003c8	68 ad 09 00 00	 push	 2477			; 000009adH
  003cd	68 00 00 00 00	 push	 OFFSET $SG152378
  003d2	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  003d7	e9 cd 07 00 00	 jmp	 $LN47@DXUTCreate
$LN29@DXUTCreate:
; Line 2478
  003dc	8b f4		 mov	 esi, esp
  003de	8d 4d bc	 lea	 ecx, DWORD PTR _pDXGIFactory$[ebp]
  003e1	51		 push	 ecx
  003e2	68 00 00 00 00	 push	 OFFSET __GUID_770aae78_f26f_4dba_a829_253c83d1b387
  003e7	8b 55 b0	 mov	 edx, DWORD PTR _pAdapter$[ebp]
  003ea	8b 02		 mov	 eax, DWORD PTR [edx]
  003ec	8b 4d b0	 mov	 ecx, DWORD PTR _pAdapter$[ebp]
  003ef	51		 push	 ecx
  003f0	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  003f3	ff d2		 call	 edx
  003f5	3b f4		 cmp	 esi, esp
  003f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003fc	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  003ff	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00403	7d 1f		 jge	 SHORT $LN28@DXUTCreate
  00405	6a 01		 push	 1
  00407	68 00 00 00 00	 push	 OFFSET $SG152383
  0040c	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0040f	50		 push	 eax
  00410	68 ae 09 00 00	 push	 2478			; 000009aeH
  00415	68 00 00 00 00	 push	 OFFSET $SG152384
  0041a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0041f	e9 85 07 00 00	 jmp	 $LN47@DXUTCreate
$LN28@DXUTCreate:
; Line 2479
  00424	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR _pTempAdapter$5[ebp], 0
  0042b	74 27		 je	 SHORT $LN27@DXUTCreate
  0042d	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _pTempAdapter$5[ebp]
  00433	8b 11		 mov	 edx, DWORD PTR [ecx]
  00435	8b f4		 mov	 esi, esp
  00437	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTempAdapter$5[ebp]
  0043d	50		 push	 eax
  0043e	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00441	ff d1		 call	 ecx
  00443	3b f4		 cmp	 esi, esp
  00445	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044a	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pTempAdapter$5[ebp], 0
$LN27@DXUTCreate:
; Line 2480
  00454	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00459	8b c8		 mov	 ecx, eax
  0045b	e8 00 00 00 00	 call	 ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
  00460	3b 45 bc	 cmp	 eax, DWORD PTR _pDXGIFactory$[ebp]
  00463	74 2f		 je	 SHORT $LN26@DXUTCreate
; Line 2481
  00465	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0046a	8b c8		 mov	 ecx, eax
  0046c	e8 00 00 00 00	 call	 ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
  00471	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv316[ebp], eax
  00477	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR tv316[ebp]
  0047d	8b 02		 mov	 eax, DWORD PTR [edx]
  0047f	8b f4		 mov	 esi, esp
  00481	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv316[ebp]
  00487	51		 push	 ecx
  00488	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0048b	ff d2		 call	 edx
  0048d	3b f4		 cmp	 esi, esp
  0048f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN26@DXUTCreate:
; Line 2482
  00494	8b 45 bc	 mov	 eax, DWORD PTR _pDXGIFactory$[ebp]
  00497	50		 push	 eax
  00498	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0049d	8b c8		 mov	 ecx, eax
  0049f	e8 00 00 00 00	 call	 ?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
$LN31@DXUTCreate:
; Line 2485
  004a4	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _pDXGIDev$6[ebp], 0
  004ab	74 27		 je	 SHORT $LN25@DXUTCreate
  004ad	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _pDXGIDev$6[ebp]
  004b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  004b5	8b f4		 mov	 esi, esp
  004b7	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pDXGIDev$6[ebp]
  004bd	50		 push	 eax
  004be	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  004c1	ff d1		 call	 ecx
  004c3	3b f4		 cmp	 esi, esp
  004c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004ca	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pDXGIDev$6[ebp], 0
$LN25@DXUTCreate:
; Line 2486
  004d4	8b 55 b0	 mov	 edx, DWORD PTR _pAdapter$[ebp]
  004d7	52		 push	 edx
  004d8	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  004dd	8b c8		 mov	 ecx, eax
  004df	e8 00 00 00 00	 call	 ?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ; DXUTState::SetDXGIAdapter
$LN33@DXUTCreate:
; Line 2489
  004e4	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  004e8	7d 24		 jge	 SHORT $LN24@DXUTCreate
; Line 2491
  004ea	6a 00		 push	 0
  004ec	68 00 00 00 00	 push	 OFFSET $SG152391
  004f1	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  004f4	50		 push	 eax
  004f5	68 bb 09 00 00	 push	 2491			; 000009bbH
  004fa	68 00 00 00 00	 push	 OFFSET $SG152392
  004ff	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 2492
  00504	b8 05 09 04 80	 mov	 eax, -2147219195	; 80040905H
  00509	e9 9b 06 00 00	 jmp	 $LN47@DXUTCreate
$LN24@DXUTCreate:
; Line 2507
  0050e	c7 85 08 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR _drd$[ebp], 3
  00518	c7 85 0c ff ff
	ff 03 00 00 00	 mov	 DWORD PTR _drd$[ebp+4], 3
  00522	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _drd$[ebp+8], 0
  0052c	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _drd$[ebp+12], 0
  00536	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0053e	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _drd$[ebp+16], xmm0
  00546	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0054e	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _drd$[ebp+20], xmm0
  00556	c7 85 20 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _drd$[ebp+24], 1
  00560	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _drd$[ebp+28], 0
  0056a	c7 85 28 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _drd$[ebp+32], 1
  00574	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _drd$[ebp+36], 0
; Line 2508
  0057e	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pRS$[ebp], 0
; Line 2509
  00588	8b f4		 mov	 esi, esp
  0058a	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _pRS$[ebp]
  00590	51		 push	 ecx
  00591	8d 95 08 ff ff
	ff		 lea	 edx, DWORD PTR _drd$[ebp]
  00597	52		 push	 edx
  00598	8b 45 f0	 mov	 eax, DWORD PTR _pd3d11Device$[ebp]
  0059b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0059d	8b 55 f0	 mov	 edx, DWORD PTR _pd3d11Device$[ebp]
  005a0	52		 push	 edx
  005a1	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  005a4	ff d0		 call	 eax
  005a6	3b f4		 cmp	 esi, esp
  005a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005ad	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2510
  005b0	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  005b4	7d 24		 jge	 SHORT $LN23@DXUTCreate
; Line 2512
  005b6	6a 00		 push	 0
  005b8	68 00 00 00 00	 push	 OFFSET $SG152402
  005bd	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  005c0	51		 push	 ecx
  005c1	68 d0 09 00 00	 push	 2512			; 000009d0H
  005c6	68 00 00 00 00	 push	 OFFSET $SG152403
  005cb	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 2513
  005d0	b8 05 09 04 80	 mov	 eax, -2147219195	; 80040905H
  005d5	e9 cf 05 00 00	 jmp	 $LN47@DXUTCreate
$LN23@DXUTCreate:
; Line 2515
  005da	68 00 00 00 00	 push	 OFFSET $SG152408
  005df	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _pRS$[ebp]
  005e5	52		 push	 edx
  005e6	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  005eb	83 c4 08	 add	 esp, 8
; Line 2516
  005ee	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _pRS$[ebp]
  005f4	50		 push	 eax
  005f5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005fa	8b c8		 mov	 ecx, eax
  005fc	e8 00 00 00 00	 call	 ?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z ; DXUTState::SetD3D11RasterizerState
; Line 2517
  00601	8b f4		 mov	 esi, esp
  00603	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _pRS$[ebp]
  00609	51		 push	 ecx
  0060a	8b 55 e4	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0060d	8b 02		 mov	 eax, DWORD PTR [edx]
  0060f	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00612	51		 push	 ecx
  00613	8b 90 ac 00 00
	00		 mov	 edx, DWORD PTR [eax+172]
  00619	ff d2		 call	 edx
  0061b	3b f4		 cmp	 esi, esp
  0061d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2521
  00622	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _OutputCount$[ebp], 0
  0062c	eb 0f		 jmp	 SHORT $LN22@DXUTCreate
$LN21@DXUTCreate:
  0062e	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _OutputCount$[ebp]
  00634	83 c0 01	 add	 eax, 1
  00637	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _OutputCount$[ebp], eax
$LN22@DXUTCreate:
; Line 2524
  0063d	8b f4		 mov	 esi, esp
  0063f	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _pOutput$4[ebp]
  00645	51		 push	 ecx
  00646	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _OutputCount$[ebp]
  0064c	52		 push	 edx
  0064d	8b 45 b0	 mov	 eax, DWORD PTR _pAdapter$[ebp]
  00650	8b 08		 mov	 ecx, DWORD PTR [eax]
  00652	8b 55 b0	 mov	 edx, DWORD PTR _pAdapter$[ebp]
  00655	52		 push	 edx
  00656	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00659	ff d0		 call	 eax
  0065b	3b f4		 cmp	 esi, esp
  0065d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00662	85 c0		 test	 eax, eax
  00664	7d 02		 jge	 SHORT $LN19@DXUTCreate
; Line 2525
  00666	eb 32		 jmp	 SHORT $LN20@DXUTCreate
$LN19@DXUTCreate:
; Line 2526
  00668	83 bd e8 fe ff
	ff 00		 cmp	 DWORD PTR _pOutput$4[ebp], 0
  0066f	74 27		 je	 SHORT $LN18@DXUTCreate
  00671	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _pOutput$4[ebp]
  00677	8b 11		 mov	 edx, DWORD PTR [ecx]
  00679	8b f4		 mov	 esi, esp
  0067b	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pOutput$4[ebp]
  00681	50		 push	 eax
  00682	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00685	ff d1		 call	 ecx
  00687	3b f4		 cmp	 esi, esp
  00689	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0068e	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pOutput$4[ebp], 0
$LN18@DXUTCreate:
; Line 2527
  00698	eb 94		 jmp	 SHORT $LN21@DXUTCreate
$LN20@DXUTCreate:
; Line 2528
  0069a	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0069f	33 c9		 xor	 ecx, ecx
  006a1	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _OutputCount$[ebp]
  006a7	ba 04 00 00 00	 mov	 edx, 4
  006ac	f7 e2		 mul	 edx
  006ae	0f 90 c1	 seto	 cl
  006b1	f7 d9		 neg	 ecx
  006b3	0b c8		 or	 ecx, eax
  006b5	51		 push	 ecx
  006b6	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  006bb	83 c4 08	 add	 esp, 8
  006be	89 85 b0 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  006c4	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  006ca	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _ppOutputArray$[ebp], eax
; Line 2529
  006d0	83 bd e0 fe ff
	ff 00		 cmp	 DWORD PTR _ppOutputArray$[ebp], 0
  006d7	75 0a		 jne	 SHORT $LN17@DXUTCreate
; Line 2530
  006d9	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  006de	e9 c6 04 00 00	 jmp	 $LN47@DXUTCreate
$LN17@DXUTCreate:
; Line 2531
  006e3	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iOutput$[ebp], 0
  006ed	eb 0f		 jmp	 SHORT $LN16@DXUTCreate
$LN15@DXUTCreate:
  006ef	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _iOutput$[ebp]
  006f5	83 c1 01	 add	 ecx, 1
  006f8	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _iOutput$[ebp], ecx
$LN16@DXUTCreate:
  006fe	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR _iOutput$[ebp]
  00704	3b 95 f4 fe ff
	ff		 cmp	 edx, DWORD PTR _OutputCount$[ebp]
  0070a	73 30		 jae	 SHORT $LN14@DXUTCreate
; Line 2532
  0070c	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _iOutput$[ebp]
  00712	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _ppOutputArray$[ebp]
  00718	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0071b	8b f4		 mov	 esi, esp
  0071d	52		 push	 edx
  0071e	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _iOutput$[ebp]
  00724	50		 push	 eax
  00725	8b 4d b0	 mov	 ecx, DWORD PTR _pAdapter$[ebp]
  00728	8b 11		 mov	 edx, DWORD PTR [ecx]
  0072a	8b 45 b0	 mov	 eax, DWORD PTR _pAdapter$[ebp]
  0072d	50		 push	 eax
  0072e	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  00731	ff d1		 call	 ecx
  00733	3b f4		 cmp	 esi, esp
  00735	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0073a	eb b3		 jmp	 SHORT $LN15@DXUTCreate
$LN14@DXUTCreate:
; Line 2533
  0073c	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _ppOutputArray$[ebp]
  00742	52		 push	 edx
  00743	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00748	8b c8		 mov	 ecx, eax
  0074a	e8 00 00 00 00	 call	 ?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ; DXUTState::SetDXGIOutputArray
; Line 2534
  0074f	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _OutputCount$[ebp]
  00755	50		 push	 eax
  00756	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0075b	8b c8		 mov	 ecx, eax
  0075d	e8 00 00 00 00	 call	 ?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z ; DXUTState::SetDXGIOutputArraySize
; Line 2537
  00762	8b f4		 mov	 esi, esp
  00764	8d 4d cc	 lea	 ecx, DWORD PTR _pSwapChain$[ebp]
  00767	51		 push	 ecx
  00768	8b 55 c4	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  0076b	83 c2 10	 add	 edx, 16			; 00000010H
  0076e	52		 push	 edx
  0076f	8b 45 f0	 mov	 eax, DWORD PTR _pd3d11Device$[ebp]
  00772	50		 push	 eax
  00773	8b 4d bc	 mov	 ecx, DWORD PTR _pDXGIFactory$[ebp]
  00776	8b 11		 mov	 edx, DWORD PTR [ecx]
  00778	8b 45 bc	 mov	 eax, DWORD PTR _pDXGIFactory$[ebp]
  0077b	50		 push	 eax
  0077c	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  0077f	ff d1		 call	 ecx
  00781	3b f4		 cmp	 esi, esp
  00783	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00788	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2538
  0078b	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0078f	7d 24		 jge	 SHORT $LN13@DXUTCreate
; Line 2540
  00791	6a 00		 push	 0
  00793	68 00 00 00 00	 push	 OFFSET $SG152430
  00798	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  0079b	52		 push	 edx
  0079c	68 ec 09 00 00	 push	 2540			; 000009ecH
  007a1	68 00 00 00 00	 push	 OFFSET $SG152431
  007a6	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 2541
  007ab	b8 05 09 04 80	 mov	 eax, -2147219195	; 80040905H
  007b0	e9 f4 03 00 00	 jmp	 $LN47@DXUTCreate
$LN13@DXUTCreate:
; Line 2544
  007b5	8b 45 f0	 mov	 eax, DWORD PTR _pd3d11Device$[ebp]
  007b8	50		 push	 eax
  007b9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  007be	8b c8		 mov	 ecx, eax
  007c0	e8 00 00 00 00	 call	 ?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ; DXUTState::SetD3D11Device
; Line 2545
  007c5	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  007c8	51		 push	 ecx
  007c9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  007ce	8b c8		 mov	 ecx, eax
  007d0	e8 00 00 00 00	 call	 ?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ; DXUTState::SetD3D11DeviceContext
; Line 2546
  007d5	8b 55 d8	 mov	 edx, DWORD PTR _FeatureLevel$[ebp]
  007d8	52		 push	 edx
  007d9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  007de	8b c8		 mov	 ecx, eax
  007e0	e8 00 00 00 00	 call	 ?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetD3D11FeatureLevel
; Line 2547
  007e5	8b 45 cc	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  007e8	50		 push	 eax
  007e9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  007ee	8b c8		 mov	 ecx, eax
  007f0	e8 00 00 00 00	 call	 ?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ; DXUTState::SetDXGISwapChain
; Line 2549
  007f5	83 7d f0 00	 cmp	 DWORD PTR _pd3d11Device$[ebp], 0
  007f9	75 21		 jne	 SHORT $LN51@DXUTCreate
  007fb	8b f4		 mov	 esi, esp
  007fd	68 f5 09 00 00	 push	 2549			; 000009f5H
  00802	68 00 00 00 00	 push	 OFFSET $SG152437
  00807	68 00 00 00 00	 push	 OFFSET $SG152438
  0080c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00812	83 c4 0c	 add	 esp, 12			; 0000000cH
  00815	3b f4		 cmp	 esi, esp
  00817	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN51@DXUTCreate:
; Line 2552
  0081c	83 7d e4 00	 cmp	 DWORD PTR _pd3dImmediateContext$[ebp], 0
  00820	75 21		 jne	 SHORT $LN52@DXUTCreate
  00822	8b f4		 mov	 esi, esp
  00824	68 f8 09 00 00	 push	 2552			; 000009f8H
  00829	68 00 00 00 00	 push	 OFFSET $SG152440
  0082e	68 00 00 00 00	 push	 OFFSET $SG152441
  00833	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00839	83 c4 0c	 add	 esp, 12			; 0000000cH
  0083c	3b f4		 cmp	 esi, esp
  0083e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN52@DXUTCreate:
; Line 2557
  00843	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pd3d11Device1$3[ebp], 0
; Line 2558
  0084d	8b f4		 mov	 esi, esp
  0084f	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _pd3d11Device1$3[ebp]
  00855	50		 push	 eax
  00856	68 00 00 00 00	 push	 OFFSET __GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686
  0085b	8b 4d f0	 mov	 ecx, DWORD PTR _pd3d11Device$[ebp]
  0085e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00860	8b 45 f0	 mov	 eax, DWORD PTR _pd3d11Device$[ebp]
  00863	50		 push	 eax
  00864	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00866	ff d1		 call	 ecx
  00868	3b f4		 cmp	 esi, esp
  0086a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0086f	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2559
  00872	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00876	7c 6d		 jl	 SHORT $LN11@DXUTCreate
  00878	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _pd3d11Device1$3[ebp], 0
  0087f	74 64		 je	 SHORT $LN11@DXUTCreate
; Line 2561
  00881	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR _pd3d11Device1$3[ebp]
  00887	52		 push	 edx
  00888	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0088d	8b c8		 mov	 ecx, eax
  0088f	e8 00 00 00 00	 call	 ?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ; DXUTState::SetD3D11Device1
; Line 2563
  00894	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pd3dImmediateContext1$2[ebp], 0
; Line 2564
  0089e	8b f4		 mov	 esi, esp
  008a0	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _pd3dImmediateContext1$2[ebp]
  008a6	50		 push	 eax
  008a7	68 00 00 00 00	 push	 OFFSET __GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1
  008ac	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  008af	8b 11		 mov	 edx, DWORD PTR [ecx]
  008b1	8b 45 e4	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  008b4	50		 push	 eax
  008b5	8b 0a		 mov	 ecx, DWORD PTR [edx]
  008b7	ff d1		 call	 ecx
  008b9	3b f4		 cmp	 esi, esp
  008bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008c0	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2565
  008c3	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  008c7	7c 1c		 jl	 SHORT $LN11@DXUTCreate
  008c9	83 bd cc fe ff
	ff 00		 cmp	 DWORD PTR _pd3dImmediateContext1$2[ebp], 0
  008d0	74 13		 je	 SHORT $LN11@DXUTCreate
; Line 2567
  008d2	8b 95 cc fe ff
	ff		 mov	 edx, DWORD PTR _pd3dImmediateContext1$2[ebp]
  008d8	52		 push	 edx
  008d9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  008de	8b c8		 mov	 ecx, eax
  008e0	e8 00 00 00 00	 call	 ?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ; DXUTState::SetD3D11DeviceContext1
$LN11@DXUTCreate:
; Line 2592
  008e5	8b 45 c4	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  008e8	83 78 08 02	 cmp	 DWORD PTR [eax+8], 2
  008ec	75 20		 jne	 SHORT $LN10@DXUTCreate
  008ee	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  008f3	8b c8		 mov	 ecx, eax
  008f5	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  008fa	85 c0		 test	 eax, eax
  008fc	75 10		 jne	 SHORT $LN10@DXUTCreate
; Line 2593
  008fe	6a 0a		 push	 10			; 0000000aH
  00900	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00905	8b c8		 mov	 ecx, eax
  00907	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
  0090c	eb 28		 jmp	 SHORT $LN8@DXUTCreate
$LN10@DXUTCreate:
; Line 2594
  0090e	8b 4d c4	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  00911	83 79 08 01	 cmp	 DWORD PTR [ecx+8], 1
  00915	75 1f		 jne	 SHORT $LN8@DXUTCreate
  00917	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0091c	8b c8		 mov	 ecx, eax
  0091e	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  00923	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00926	75 0e		 jne	 SHORT $LN8@DXUTCreate
; Line 2595
  00928	6a 00		 push	 0
  0092a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0092f	8b c8		 mov	 ecx, eax
  00931	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
$LN8@DXUTCreate:
; Line 2598
  00936	e8 00 00 00 00	 call	 ?DXUTUpdateBackBufferDesc@@YAXXZ ; DXUTUpdateBackBufferDesc
; Line 2601
  0093b	e8 00 00 00 00	 call	 ?DXUTSetupCursor@@YAXXZ	; DXUTSetupCursor
; Line 2604
  00940	6a 00		 push	 0
  00942	6a 01		 push	 1
  00944	6a 00		 push	 0
  00946	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  0094b	89 85 c4 fe ff
	ff		 mov	 DWORD PTR _pd3dEnum$[ebp], eax
; Line 2605
  00951	83 bd c4 fe ff
	ff 00		 cmp	 DWORD PTR _pd3dEnum$[ebp], 0
  00958	75 21		 jne	 SHORT $LN53@DXUTCreate
  0095a	8b f4		 mov	 esi, esp
  0095c	68 2d 0a 00 00	 push	 2605			; 00000a2dH
  00961	68 00 00 00 00	 push	 OFFSET $SG152458
  00966	68 00 00 00 00	 push	 OFFSET $SG152459
  0096b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00971	83 c4 0c	 add	 esp, 12			; 0000000cH
  00974	3b f4		 cmp	 esi, esp
  00976	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN53@DXUTCreate:
; Line 2607
  0097b	8b 45 c4	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  0097e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00981	51		 push	 ecx
  00982	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _pd3dEnum$[ebp]
  00988	e8 00 00 00 00	 call	 ?GetAdapterInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumAdapterInfo@@I@Z ; CD3D11Enumeration::GetAdapterInfo
  0098d	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _pAdapterInfo$[ebp], eax
; Line 2608
  00993	8b 95 c0 fe ff
	ff		 mov	 edx, DWORD PTR _pAdapterInfo$[ebp]
  00999	83 c2 04	 add	 edx, 4
  0099c	52		 push	 edx
  0099d	8b 45 c4	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  009a0	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  009a3	51		 push	 ecx
  009a4	8b 55 c4	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  009a7	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  009aa	50		 push	 eax
  009ab	e8 00 00 00 00	 call	 ?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z ; DXUTUpdateD3D11DeviceStats
  009b0	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2611
  009b3	e8 00 00 00 00	 call	 ?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
  009b8	89 85 bc fe ff
	ff		 mov	 DWORD PTR _pBackBufferSurfaceDesc$[ebp], eax
; Line 2612
  009be	6a 01		 push	 1
  009c0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  009c5	8b c8		 mov	 ecx, eax
  009c7	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2613
  009cc	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  009d1	8b c8		 mov	 ecx, eax
  009d3	e8 00 00 00 00	 call	 ?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11DeviceCreatedFunc
  009d8	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _pCallbackDeviceCreated$[ebp], eax
; Line 2614
  009de	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2615
  009e5	83 bd b8 fe ff
	ff 00		 cmp	 DWORD PTR _pCallbackDeviceCreated$[ebp], 0
  009ec	74 2c		 je	 SHORT $LN7@DXUTCreate
; Line 2617
  009ee	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  009f3	8b c8		 mov	 ecx, eax
  009f5	e8 00 00 00 00	 call	 ?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceCreatedFuncUserContext
  009fa	8b f4		 mov	 esi, esp
  009fc	50		 push	 eax
  009fd	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
  00a03	51		 push	 ecx
  00a04	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00a09	50		 push	 eax
  00a0a	ff 95 b8 fe ff
	ff		 call	 DWORD PTR _pCallbackDeviceCreated$[ebp]
  00a10	3b f4		 cmp	 esi, esp
  00a12	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a17	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN7@DXUTCreate:
; Line 2618
  00a1a	6a 00		 push	 0
  00a1c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00a21	8b c8		 mov	 ecx, eax
  00a23	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2619
  00a28	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00a2d	85 c0		 test	 eax, eax
  00a2f	75 0a		 jne	 SHORT $LN6@DXUTCreate
; Line 2620
  00a31	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00a36	e9 6e 01 00 00	 jmp	 $LN47@DXUTCreate
$LN6@DXUTCreate:
; Line 2621
  00a3b	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00a3f	7d 44		 jge	 SHORT $LN5@DXUTCreate
; Line 2623
  00a41	6a 00		 push	 0
  00a43	68 00 00 00 00	 push	 OFFSET $SG152473
  00a48	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  00a4b	52		 push	 edx
  00a4c	68 3f 0a 00 00	 push	 2623			; 00000a3fH
  00a51	68 00 00 00 00	 push	 OFFSET $SG152474
  00a56	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 2624
  00a5b	81 7d f8 03 09
	04 80		 cmp	 DWORD PTR _hr$[ebp], -2147219197 ; 80040903H
  00a62	75 0c		 jne	 SHORT $LN54@DXUTCreate
  00a64	c7 85 a8 fe ff
	ff 03 09 04 80	 mov	 DWORD PTR tv621[ebp], -2147219197 ; 80040903H
  00a6e	eb 0a		 jmp	 SHORT $LN55@DXUTCreate
$LN54@DXUTCreate:
  00a70	c7 85 a8 fe ff
	ff 07 09 04 80	 mov	 DWORD PTR tv621[ebp], -2147219193 ; 80040907H
$LN55@DXUTCreate:
  00a7a	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR tv621[ebp]
  00a80	e9 24 01 00 00	 jmp	 $LN47@DXUTCreate
$LN5@DXUTCreate:
; Line 2626
  00a85	6a 01		 push	 1
  00a87	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00a8c	8b c8		 mov	 ecx, eax
  00a8e	e8 00 00 00 00	 call	 ?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsCreated
; Line 2629
  00a93	8b 45 c4	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00a96	50		 push	 eax
  00a97	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00a9a	51		 push	 ecx
  00a9b	8b 55 f0	 mov	 edx, DWORD PTR _pd3d11Device$[ebp]
  00a9e	52		 push	 edx
  00a9f	e8 00 00 00 00	 call	 ?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ; DXUTCreateD3D11Views
  00aa4	83 c4 0c	 add	 esp, 12			; 0000000cH
  00aa7	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2630
  00aaa	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00aae	7d 24		 jge	 SHORT $LN4@DXUTCreate
; Line 2632
  00ab0	6a 00		 push	 0
  00ab2	68 00 00 00 00	 push	 OFFSET $SG152490
  00ab7	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00aba	50		 push	 eax
  00abb	68 48 0a 00 00	 push	 2632			; 00000a48H
  00ac0	68 00 00 00 00	 push	 OFFSET $SG152491
  00ac5	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 2633
  00aca	b8 07 09 04 80	 mov	 eax, -2147219193	; 80040907H
  00acf	e9 d5 00 00 00	 jmp	 $LN47@DXUTCreate
$LN4@DXUTCreate:
; Line 2637
  00ad4	6a 01		 push	 1
  00ad6	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00adb	8b c8		 mov	 ecx, eax
  00add	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2638
  00ae2	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00ae7	8b c8		 mov	 ecx, eax
  00ae9	e8 00 00 00 00	 call	 ?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11SwapChainResizedFunc
  00aee	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _pCallbackSwapChainResized$[ebp], eax
; Line 2639
  00af4	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2640
  00afb	83 bd b4 fe ff
	ff 00		 cmp	 DWORD PTR _pCallbackSwapChainResized$[ebp], 0
  00b02	74 30		 je	 SHORT $LN3@DXUTCreate
; Line 2642
  00b04	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00b09	8b c8		 mov	 ecx, eax
  00b0b	e8 00 00 00 00	 call	 ?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
  00b10	8b f4		 mov	 esi, esp
  00b12	50		 push	 eax
  00b13	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
  00b19	51		 push	 ecx
  00b1a	8b 55 cc	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  00b1d	52		 push	 edx
  00b1e	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00b23	50		 push	 eax
  00b24	ff 95 b4 fe ff
	ff		 call	 DWORD PTR _pCallbackSwapChainResized$[ebp]
  00b2a	3b f4		 cmp	 esi, esp
  00b2c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b31	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@DXUTCreate:
; Line 2643
  00b34	6a 00		 push	 0
  00b36	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00b3b	8b c8		 mov	 ecx, eax
  00b3d	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2644
  00b42	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00b47	85 c0		 test	 eax, eax
  00b49	75 07		 jne	 SHORT $LN2@DXUTCreate
; Line 2645
  00b4b	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00b50	eb 57		 jmp	 SHORT $LN47@DXUTCreate
$LN2@DXUTCreate:
; Line 2646
  00b52	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00b56	7d 41		 jge	 SHORT $LN1@DXUTCreate
; Line 2648
  00b58	6a 00		 push	 0
  00b5a	68 00 00 00 00	 push	 OFFSET $SG152504
  00b5f	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00b62	50		 push	 eax
  00b63	68 58 0a 00 00	 push	 2648			; 00000a58H
  00b68	68 00 00 00 00	 push	 OFFSET $SG152505
  00b6d	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 2649
  00b72	81 7d f8 03 09
	04 80		 cmp	 DWORD PTR _hr$[ebp], -2147219197 ; 80040903H
  00b79	75 0c		 jne	 SHORT $LN56@DXUTCreate
  00b7b	c7 85 a4 fe ff
	ff 03 09 04 80	 mov	 DWORD PTR tv663[ebp], -2147219197 ; 80040903H
  00b85	eb 0a		 jmp	 SHORT $LN57@DXUTCreate
$LN56@DXUTCreate:
  00b87	c7 85 a4 fe ff
	ff 08 09 04 80	 mov	 DWORD PTR tv663[ebp], -2147219192 ; 80040908H
$LN57@DXUTCreate:
  00b91	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR tv663[ebp]
  00b97	eb 10		 jmp	 SHORT $LN47@DXUTCreate
$LN1@DXUTCreate:
; Line 2651
  00b99	6a 01		 push	 1
  00b9b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00ba0	8b c8		 mov	 ecx, eax
  00ba2	e8 00 00 00 00	 call	 ?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
; Line 2653
  00ba7	33 c0		 xor	 eax, eax
$LN47@DXUTCreate:
; Line 2654
  00ba9	52		 push	 edx
  00baa	8b cd		 mov	 ecx, ebp
  00bac	50		 push	 eax
  00bad	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN76@DXUTCreate
  00bb3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00bb8	58		 pop	 eax
  00bb9	5a		 pop	 edx
  00bba	5f		 pop	 edi
  00bbb	5e		 pop	 esi
  00bbc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00bbf	33 cd		 xor	 ecx, ebp
  00bc1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00bc6	81 c4 5c 01 00
	00		 add	 esp, 348		; 0000015cH
  00bcc	3b ec		 cmp	 ebp, esp
  00bce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bd3	8b e5		 mov	 esp, ebp
  00bd5	5d		 pop	 ebp
  00bd6	c3		 ret	 0
  00bd7	90		 npad	 1
$LN76@DXUTCreate:
  00bd8	11 00 00 00	 DD	 17			; 00000011H
  00bdc	00 00 00 00	 DD	 $LN75@DXUTCreate
$LN75@DXUTCreate:
  00be0	f0 ff ff ff	 DD	 -16			; fffffff0H
  00be4	04 00 00 00	 DD	 4
  00be8	00 00 00 00	 DD	 $LN58@DXUTCreate
  00bec	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00bf0	04 00 00 00	 DD	 4
  00bf4	00 00 00 00	 DD	 $LN59@DXUTCreate
  00bf8	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00bfc	04 00 00 00	 DD	 4
  00c00	00 00 00 00	 DD	 $LN60@DXUTCreate
  00c04	cc ff ff ff	 DD	 -52			; ffffffccH
  00c08	04 00 00 00	 DD	 4
  00c0c	00 00 00 00	 DD	 $LN61@DXUTCreate
  00c10	bc ff ff ff	 DD	 -68			; ffffffbcH
  00c14	04 00 00 00	 DD	 4
  00c18	00 00 00 00	 DD	 $LN62@DXUTCreate
  00c1c	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00c20	04 00 00 00	 DD	 4
  00c24	00 00 00 00	 DD	 $LN63@DXUTCreate
  00c28	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00c2c	04 00 00 00	 DD	 4
  00c30	00 00 00 00	 DD	 $LN64@DXUTCreate
  00c34	94 ff ff ff	 DD	 -108			; ffffff94H
  00c38	04 00 00 00	 DD	 4
  00c3c	00 00 00 00	 DD	 $LN65@DXUTCreate
  00c40	88 ff ff ff	 DD	 -120			; ffffff88H
  00c44	04 00 00 00	 DD	 4
  00c48	00 00 00 00	 DD	 $LN66@DXUTCreate
  00c4c	50 ff ff ff	 DD	 -176			; ffffff50H
  00c50	30 00 00 00	 DD	 48			; 00000030H
  00c54	00 00 00 00	 DD	 $LN67@DXUTCreate
  00c58	44 ff ff ff	 DD	 -188			; ffffff44H
  00c5c	04 00 00 00	 DD	 4
  00c60	00 00 00 00	 DD	 $LN68@DXUTCreate
  00c64	38 ff ff ff	 DD	 -200			; ffffff38H
  00c68	04 00 00 00	 DD	 4
  00c6c	00 00 00 00	 DD	 $LN69@DXUTCreate
  00c70	08 ff ff ff	 DD	 -248			; ffffff08H
  00c74	28 00 00 00	 DD	 40			; 00000028H
  00c78	00 00 00 00	 DD	 $LN70@DXUTCreate
  00c7c	fc fe ff ff	 DD	 -260			; fffffefcH
  00c80	04 00 00 00	 DD	 4
  00c84	00 00 00 00	 DD	 $LN71@DXUTCreate
  00c88	e8 fe ff ff	 DD	 -280			; fffffee8H
  00c8c	04 00 00 00	 DD	 4
  00c90	00 00 00 00	 DD	 $LN72@DXUTCreate
  00c94	d8 fe ff ff	 DD	 -296			; fffffed8H
  00c98	04 00 00 00	 DD	 4
  00c9c	00 00 00 00	 DD	 $LN73@DXUTCreate
  00ca0	cc fe ff ff	 DD	 -308			; fffffeccH
  00ca4	04 00 00 00	 DD	 4
  00ca8	00 00 00 00	 DD	 $LN74@DXUTCreate
$LN74@DXUTCreate:
  00cac	70		 DB	 112			; 00000070H
  00cad	64		 DB	 100			; 00000064H
  00cae	33		 DB	 51			; 00000033H
  00caf	64		 DB	 100			; 00000064H
  00cb0	49		 DB	 73			; 00000049H
  00cb1	6d		 DB	 109			; 0000006dH
  00cb2	6d		 DB	 109			; 0000006dH
  00cb3	65		 DB	 101			; 00000065H
  00cb4	64		 DB	 100			; 00000064H
  00cb5	69		 DB	 105			; 00000069H
  00cb6	61		 DB	 97			; 00000061H
  00cb7	74		 DB	 116			; 00000074H
  00cb8	65		 DB	 101			; 00000065H
  00cb9	43		 DB	 67			; 00000043H
  00cba	6f		 DB	 111			; 0000006fH
  00cbb	6e		 DB	 110			; 0000006eH
  00cbc	74		 DB	 116			; 00000074H
  00cbd	65		 DB	 101			; 00000065H
  00cbe	78		 DB	 120			; 00000078H
  00cbf	74		 DB	 116			; 00000074H
  00cc0	31		 DB	 49			; 00000031H
  00cc1	00		 DB	 0
$LN73@DXUTCreate:
  00cc2	70		 DB	 112			; 00000070H
  00cc3	64		 DB	 100			; 00000064H
  00cc4	33		 DB	 51			; 00000033H
  00cc5	64		 DB	 100			; 00000064H
  00cc6	31		 DB	 49			; 00000031H
  00cc7	31		 DB	 49			; 00000031H
  00cc8	44		 DB	 68			; 00000044H
  00cc9	65		 DB	 101			; 00000065H
  00cca	76		 DB	 118			; 00000076H
  00ccb	69		 DB	 105			; 00000069H
  00ccc	63		 DB	 99			; 00000063H
  00ccd	65		 DB	 101			; 00000065H
  00cce	31		 DB	 49			; 00000031H
  00ccf	00		 DB	 0
$LN72@DXUTCreate:
  00cd0	70		 DB	 112			; 00000070H
  00cd1	4f		 DB	 79			; 0000004fH
  00cd2	75		 DB	 117			; 00000075H
  00cd3	74		 DB	 116			; 00000074H
  00cd4	70		 DB	 112			; 00000070H
  00cd5	75		 DB	 117			; 00000075H
  00cd6	74		 DB	 116			; 00000074H
  00cd7	00		 DB	 0
$LN71@DXUTCreate:
  00cd8	70		 DB	 112			; 00000070H
  00cd9	52		 DB	 82			; 00000052H
  00cda	53		 DB	 83			; 00000053H
  00cdb	00		 DB	 0
$LN70@DXUTCreate:
  00cdc	64		 DB	 100			; 00000064H
  00cdd	72		 DB	 114			; 00000072H
  00cde	64		 DB	 100			; 00000064H
  00cdf	00		 DB	 0
$LN69@DXUTCreate:
  00ce0	70		 DB	 112			; 00000070H
  00ce1	54		 DB	 84			; 00000054H
  00ce2	65		 DB	 101			; 00000065H
  00ce3	6d		 DB	 109			; 0000006dH
  00ce4	70		 DB	 112			; 00000070H
  00ce5	41		 DB	 65			; 00000041H
  00ce6	64		 DB	 100			; 00000064H
  00ce7	61		 DB	 97			; 00000061H
  00ce8	70		 DB	 112			; 00000070H
  00ce9	74		 DB	 116			; 00000074H
  00cea	65		 DB	 101			; 00000065H
  00ceb	72		 DB	 114			; 00000072H
  00cec	00		 DB	 0
$LN68@DXUTCreate:
  00ced	70		 DB	 112			; 00000070H
  00cee	44		 DB	 68			; 00000044H
  00cef	58		 DB	 88			; 00000058H
  00cf0	47		 DB	 71			; 00000047H
  00cf1	49		 DB	 73			; 00000049H
  00cf2	44		 DB	 68			; 00000044H
  00cf3	65		 DB	 101			; 00000065H
  00cf4	76		 DB	 118			; 00000076H
  00cf5	00		 DB	 0
$LN67@DXUTCreate:
  00cf6	66		 DB	 102			; 00000066H
  00cf7	69		 DB	 105			; 00000069H
  00cf8	6c		 DB	 108			; 0000006cH
  00cf9	74		 DB	 116			; 00000074H
  00cfa	65		 DB	 101			; 00000065H
  00cfb	72		 DB	 114			; 00000072H
  00cfc	00		 DB	 0
$LN66@DXUTCreate:
  00cfd	64		 DB	 100			; 00000064H
  00cfe	65		 DB	 101			; 00000065H
  00cff	6e		 DB	 110			; 0000006eH
  00d00	69		 DB	 105			; 00000069H
  00d01	65		 DB	 101			; 00000065H
  00d02	64		 DB	 100			; 00000064H
  00d03	00		 DB	 0
$LN65@DXUTCreate:
  00d04	69		 DB	 105			; 00000069H
  00d05	6e		 DB	 110			; 0000006eH
  00d06	66		 DB	 102			; 00000066H
  00d07	6f		 DB	 111			; 0000006fH
  00d08	51		 DB	 81			; 00000051H
  00d09	75		 DB	 117			; 00000075H
  00d0a	65		 DB	 101			; 00000065H
  00d0b	75		 DB	 117			; 00000075H
  00d0c	65		 DB	 101			; 00000065H
  00d0d	00		 DB	 0
$LN64@DXUTCreate:
  00d0e	64		 DB	 100			; 00000064H
  00d0f	33		 DB	 51			; 00000033H
  00d10	64		 DB	 100			; 00000064H
  00d11	44		 DB	 68			; 00000044H
  00d12	65		 DB	 101			; 00000065H
  00d13	62		 DB	 98			; 00000062H
  00d14	75		 DB	 117			; 00000075H
  00d15	67		 DB	 103			; 00000067H
  00d16	00		 DB	 0
$LN63@DXUTCreate:
  00d17	70		 DB	 112			; 00000070H
  00d18	41		 DB	 65			; 00000041H
  00d19	64		 DB	 100			; 00000064H
  00d1a	61		 DB	 97			; 00000061H
  00d1b	70		 DB	 112			; 00000070H
  00d1c	74		 DB	 116			; 00000074H
  00d1d	65		 DB	 101			; 00000065H
  00d1e	72		 DB	 114			; 00000072H
  00d1f	00		 DB	 0
$LN62@DXUTCreate:
  00d20	70		 DB	 112			; 00000070H
  00d21	44		 DB	 68			; 00000044H
  00d22	58		 DB	 88			; 00000058H
  00d23	47		 DB	 71			; 00000047H
  00d24	49		 DB	 73			; 00000049H
  00d25	46		 DB	 70			; 00000046H
  00d26	61		 DB	 97			; 00000061H
  00d27	63		 DB	 99			; 00000063H
  00d28	74		 DB	 116			; 00000074H
  00d29	6f		 DB	 111			; 0000006fH
  00d2a	72		 DB	 114			; 00000072H
  00d2b	79		 DB	 121			; 00000079H
  00d2c	00		 DB	 0
$LN61@DXUTCreate:
  00d2d	70		 DB	 112			; 00000070H
  00d2e	53		 DB	 83			; 00000053H
  00d2f	77		 DB	 119			; 00000077H
  00d30	61		 DB	 97			; 00000061H
  00d31	70		 DB	 112			; 00000070H
  00d32	43		 DB	 67			; 00000043H
  00d33	68		 DB	 104			; 00000068H
  00d34	61		 DB	 97			; 00000061H
  00d35	69		 DB	 105			; 00000069H
  00d36	6e		 DB	 110			; 0000006eH
  00d37	00		 DB	 0
$LN60@DXUTCreate:
  00d38	46		 DB	 70			; 00000046H
  00d39	65		 DB	 101			; 00000065H
  00d3a	61		 DB	 97			; 00000061H
  00d3b	74		 DB	 116			; 00000074H
  00d3c	75		 DB	 117			; 00000075H
  00d3d	72		 DB	 114			; 00000072H
  00d3e	65		 DB	 101			; 00000065H
  00d3f	4c		 DB	 76			; 0000004cH
  00d40	65		 DB	 101			; 00000065H
  00d41	76		 DB	 118			; 00000076H
  00d42	65		 DB	 101			; 00000065H
  00d43	6c		 DB	 108			; 0000006cH
  00d44	00		 DB	 0
$LN59@DXUTCreate:
  00d45	70		 DB	 112			; 00000070H
  00d46	64		 DB	 100			; 00000064H
  00d47	33		 DB	 51			; 00000033H
  00d48	64		 DB	 100			; 00000064H
  00d49	49		 DB	 73			; 00000049H
  00d4a	6d		 DB	 109			; 0000006dH
  00d4b	6d		 DB	 109			; 0000006dH
  00d4c	65		 DB	 101			; 00000065H
  00d4d	64		 DB	 100			; 00000064H
  00d4e	69		 DB	 105			; 00000069H
  00d4f	61		 DB	 97			; 00000061H
  00d50	74		 DB	 116			; 00000074H
  00d51	65		 DB	 101			; 00000065H
  00d52	43		 DB	 67			; 00000043H
  00d53	6f		 DB	 111			; 0000006fH
  00d54	6e		 DB	 110			; 0000006eH
  00d55	74		 DB	 116			; 00000074H
  00d56	65		 DB	 101			; 00000065H
  00d57	78		 DB	 120			; 00000078H
  00d58	74		 DB	 116			; 00000074H
  00d59	00		 DB	 0
$LN58@DXUTCreate:
  00d5a	70		 DB	 112			; 00000070H
  00d5b	64		 DB	 100			; 00000064H
  00d5c	33		 DB	 51			; 00000033H
  00d5d	64		 DB	 100			; 00000064H
  00d5e	31		 DB	 49			; 00000031H
  00d5f	31		 DB	 49			; 00000031H
  00d60	44		 DB	 68			; 00000044H
  00d61	65		 DB	 101			; 00000065H
  00d62	76		 DB	 118			; 00000076H
  00d63	69		 DB	 105			; 00000069H
  00d64	63		 DB	 99			; 00000063H
  00d65	65		 DB	 101			; 00000065H
  00d66	00		 DB	 0
?DXUTCreate3DEnvironment11@@YAJXZ ENDP			; DXUTCreate3DEnvironment11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_descDSV$1 = -192					; size = 24
_descDepth$2 = -160					; size = 44
_pDepthStencil$3 = -108					; size = 4
_backBufferSurfaceDesc$ = -96				; size = 44
_pBackBuffer$ = -44					; size = 4
_pRTV$ = -32						; size = 4
_pDSV$ = -20						; size = 4
_pSwapChain$ = -12					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3dImmediateContext$ = 12				; size = 4
_pDeviceSettings$ = 16					; size = 4
?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z PROC ; DXUTCreateD3D11Views
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2286
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00011	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 2287
  00027	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2288
  0002e	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  00033	89 45 f4	 mov	 DWORD PTR _pSwapChain$[ebp], eax
; Line 2289
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pDSV$[ebp], 0
; Line 2290
  0003d	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pRTV$[ebp], 0
; Line 2294
  00044	8b f4		 mov	 esi, esp
  00046	8d 45 d4	 lea	 eax, DWORD PTR _pBackBuffer$[ebp]
  00049	50		 push	 eax
  0004a	68 00 00 00 00	 push	 OFFSET __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
  0004f	6a 00		 push	 0
  00051	8b 4d f4	 mov	 ecx, DWORD PTR _pSwapChain$[ebp]
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	8b 45 f4	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  00059	50		 push	 eax
  0005a	8b 4a 24	 mov	 ecx, DWORD PTR [edx+36]
  0005d	ff d1		 call	 ecx
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2295
  00069	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0006d	7d 08		 jge	 SHORT $LN9@DXUTCreate
; Line 2296
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00072	e9 15 02 00 00	 jmp	 $LN10@DXUTCreate
$LN9@DXUTCreate:
; Line 2298
  00077	8b f4		 mov	 esi, esp
  00079	8d 55 a0	 lea	 edx, DWORD PTR _backBufferSurfaceDesc$[ebp]
  0007c	52		 push	 edx
  0007d	8b 45 d4	 mov	 eax, DWORD PTR _pBackBuffer$[ebp]
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	8b 55 d4	 mov	 edx, DWORD PTR _pBackBuffer$[ebp]
  00085	52		 push	 edx
  00086	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00089	ff d0		 call	 eax
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2301
  00092	8b f4		 mov	 esi, esp
  00094	8d 4d e0	 lea	 ecx, DWORD PTR _pRTV$[ebp]
  00097	51		 push	 ecx
  00098	6a 00		 push	 0
  0009a	8b 55 d4	 mov	 edx, DWORD PTR _pBackBuffer$[ebp]
  0009d	52		 push	 edx
  0009e	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000a6	52		 push	 edx
  000a7	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  000aa	ff d0		 call	 eax
  000ac	3b f4		 cmp	 esi, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2302
  000b6	83 7d d4 00	 cmp	 DWORD PTR _pBackBuffer$[ebp], 0
  000ba	74 1e		 je	 SHORT $LN8@DXUTCreate
  000bc	8b 4d d4	 mov	 ecx, DWORD PTR _pBackBuffer$[ebp]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	8b f4		 mov	 esi, esp
  000c3	8b 45 d4	 mov	 eax, DWORD PTR _pBackBuffer$[ebp]
  000c6	50		 push	 eax
  000c7	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000ca	ff d1		 call	 ecx
  000cc	3b f4		 cmp	 esi, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pBackBuffer$[ebp], 0
$LN8@DXUTCreate:
; Line 2303
  000da	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000de	7d 08		 jge	 SHORT $LN7@DXUTCreate
; Line 2304
  000e0	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  000e3	e9 a4 01 00 00	 jmp	 $LN10@DXUTCreate
$LN7@DXUTCreate:
; Line 2305
  000e8	68 00 00 00 00	 push	 OFFSET $SG152279
  000ed	8b 55 e0	 mov	 edx, DWORD PTR _pRTV$[ebp]
  000f0	52		 push	 edx
  000f1	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  000f6	83 c4 08	 add	 esp, 8
; Line 2306
  000f9	8b 45 e0	 mov	 eax, DWORD PTR _pRTV$[ebp]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00102	8b c8		 mov	 ecx, eax
  00104	e8 00 00 00 00	 call	 ?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
; Line 2308
  00109	8b 4d 10	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  0010c	0f b6 51 58	 movzx	 edx, BYTE PTR [ecx+88]
  00110	85 d2		 test	 edx, edx
  00112	0f 84 5a 01 00
	00		 je	 $LN6@DXUTCreate
; Line 2311
  00118	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _pDepthStencil$3[ebp], 0
; Line 2313
  0011f	8b 45 a0	 mov	 eax, DWORD PTR _backBufferSurfaceDesc$[ebp]
  00122	89 85 60 ff ff
	ff		 mov	 DWORD PTR _descDepth$2[ebp], eax
; Line 2314
  00128	8b 4d a4	 mov	 ecx, DWORD PTR _backBufferSurfaceDesc$[ebp+4]
  0012b	89 8d 64 ff ff
	ff		 mov	 DWORD PTR _descDepth$2[ebp+4], ecx
; Line 2315
  00131	c7 85 68 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _descDepth$2[ebp+8], 1
; Line 2316
  0013b	c7 85 6c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _descDepth$2[ebp+12], 1
; Line 2317
  00145	8b 55 10	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00148	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0014b	89 85 70 ff ff
	ff		 mov	 DWORD PTR _descDepth$2[ebp+16], eax
; Line 2318
  00151	8b 4d 10	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00154	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00157	89 95 74 ff ff
	ff		 mov	 DWORD PTR _descDepth$2[ebp+20], edx
; Line 2319
  0015d	8b 45 10	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00160	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00163	89 8d 78 ff ff
	ff		 mov	 DWORD PTR _descDepth$2[ebp+24], ecx
; Line 2320
  00169	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _descDepth$2[ebp+28], 0
; Line 2321
  00173	c7 45 80 40 00
	00 00		 mov	 DWORD PTR _descDepth$2[ebp+32], 64 ; 00000040H
; Line 2322
  0017a	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _descDepth$2[ebp+36], 0
; Line 2323
  00181	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _descDepth$2[ebp+40], 0
; Line 2324
  00188	8b f4		 mov	 esi, esp
  0018a	8d 55 94	 lea	 edx, DWORD PTR _pDepthStencil$3[ebp]
  0018d	52		 push	 edx
  0018e	6a 00		 push	 0
  00190	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _descDepth$2[ebp]
  00196	50		 push	 eax
  00197	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019c	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0019f	50		 push	 eax
  001a0	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  001a3	ff d1		 call	 ecx
  001a5	3b f4		 cmp	 esi, esp
  001a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ac	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2325
  001af	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b3	7d 08		 jge	 SHORT $LN5@DXUTCreate
; Line 2326
  001b5	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  001b8	e9 cf 00 00 00	 jmp	 $LN10@DXUTCreate
$LN5@DXUTCreate:
; Line 2327
  001bd	68 00 00 00 00	 push	 OFFSET $SG152285
  001c2	8b 55 94	 mov	 edx, DWORD PTR _pDepthStencil$3[ebp]
  001c5	52		 push	 edx
  001c6	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  001cb	83 c4 08	 add	 esp, 8
; Line 2328
  001ce	8b 45 94	 mov	 eax, DWORD PTR _pDepthStencil$3[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001d7	8b c8		 mov	 ecx, eax
  001d9	e8 00 00 00 00	 call	 ?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
; Line 2332
  001de	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _descDepth$2[ebp+16]
  001e4	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _descDSV$1[ebp], ecx
; Line 2333
  001ea	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _descDSV$1[ebp+8], 0
; Line 2334
  001f4	83 bd 74 ff ff
	ff 01		 cmp	 DWORD PTR _descDepth$2[ebp+20], 1
  001fb	76 0c		 jbe	 SHORT $LN4@DXUTCreate
; Line 2335
  001fd	c7 85 44 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR _descDSV$1[ebp+4], 5
; Line 2336
  00207	eb 0a		 jmp	 SHORT $LN3@DXUTCreate
$LN4@DXUTCreate:
; Line 2337
  00209	c7 85 44 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR _descDSV$1[ebp+4], 3
$LN3@DXUTCreate:
; Line 2338
  00213	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _descDSV$1[ebp+12], 0
; Line 2339
  0021d	8b f4		 mov	 esi, esp
  0021f	8d 55 ec	 lea	 edx, DWORD PTR _pDSV$[ebp]
  00222	52		 push	 edx
  00223	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _descDSV$1[ebp]
  00229	50		 push	 eax
  0022a	8b 4d 94	 mov	 ecx, DWORD PTR _pDepthStencil$3[ebp]
  0022d	51		 push	 ecx
  0022e	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00231	8b 02		 mov	 eax, DWORD PTR [edx]
  00233	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00236	51		 push	 ecx
  00237	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  0023a	ff d2		 call	 edx
  0023c	3b f4		 cmp	 esi, esp
  0023e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00243	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2340
  00246	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0024a	7d 05		 jge	 SHORT $LN2@DXUTCreate
; Line 2341
  0024c	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0024f	eb 3b		 jmp	 SHORT $LN10@DXUTCreate
$LN2@DXUTCreate:
; Line 2342
  00251	68 00 00 00 00	 push	 OFFSET $SG152291
  00256	8b 45 ec	 mov	 eax, DWORD PTR _pDSV$[ebp]
  00259	50		 push	 eax
  0025a	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0025f	83 c4 08	 add	 esp, 8
; Line 2343
  00262	8b 4d ec	 mov	 ecx, DWORD PTR _pDSV$[ebp]
  00265	51		 push	 ecx
  00266	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0026b	8b c8		 mov	 ecx, eax
  0026d	e8 00 00 00 00	 call	 ?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
$LN6@DXUTCreate:
; Line 2346
  00272	8b 55 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00275	52		 push	 edx
  00276	e8 00 00 00 00	 call	 ?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z ; DXUTSetupD3D11Views
  0027b	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2347
  0027e	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00282	7d 05		 jge	 SHORT $LN1@DXUTCreate
; Line 2348
  00284	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00287	eb 03		 jmp	 SHORT $LN10@DXUTCreate
$LN1@DXUTCreate:
; Line 2350
  00289	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN10@DXUTCreate:
; Line 2351
  0028c	52		 push	 edx
  0028d	8b cd		 mov	 ecx, ebp
  0028f	50		 push	 eax
  00290	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN20@DXUTCreate
  00296	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0029b	58		 pop	 eax
  0029c	5a		 pop	 edx
  0029d	5f		 pop	 edi
  0029e	5e		 pop	 esi
  0029f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a2	33 cd		 xor	 ecx, ebp
  002a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a9	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  002af	3b ec		 cmp	 ebp, esp
  002b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b6	8b e5		 mov	 esp, ebp
  002b8	5d		 pop	 ebp
  002b9	c3		 ret	 0
  002ba	8b ff		 npad	 2
$LN20@DXUTCreate:
  002bc	07 00 00 00	 DD	 7
  002c0	00 00 00 00	 DD	 $LN19@DXUTCreate
$LN19@DXUTCreate:
  002c4	ec ff ff ff	 DD	 -20			; ffffffecH
  002c8	04 00 00 00	 DD	 4
  002cc	00 00 00 00	 DD	 $LN12@DXUTCreate
  002d0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  002d4	04 00 00 00	 DD	 4
  002d8	00 00 00 00	 DD	 $LN13@DXUTCreate
  002dc	d4 ff ff ff	 DD	 -44			; ffffffd4H
  002e0	04 00 00 00	 DD	 4
  002e4	00 00 00 00	 DD	 $LN14@DXUTCreate
  002e8	a0 ff ff ff	 DD	 -96			; ffffffa0H
  002ec	2c 00 00 00	 DD	 44			; 0000002cH
  002f0	00 00 00 00	 DD	 $LN15@DXUTCreate
  002f4	94 ff ff ff	 DD	 -108			; ffffff94H
  002f8	04 00 00 00	 DD	 4
  002fc	00 00 00 00	 DD	 $LN16@DXUTCreate
  00300	60 ff ff ff	 DD	 -160			; ffffff60H
  00304	2c 00 00 00	 DD	 44			; 0000002cH
  00308	00 00 00 00	 DD	 $LN17@DXUTCreate
  0030c	40 ff ff ff	 DD	 -192			; ffffff40H
  00310	18 00 00 00	 DD	 24			; 00000018H
  00314	00 00 00 00	 DD	 $LN18@DXUTCreate
$LN18@DXUTCreate:
  00318	64		 DB	 100			; 00000064H
  00319	65		 DB	 101			; 00000065H
  0031a	73		 DB	 115			; 00000073H
  0031b	63		 DB	 99			; 00000063H
  0031c	44		 DB	 68			; 00000044H
  0031d	53		 DB	 83			; 00000053H
  0031e	56		 DB	 86			; 00000056H
  0031f	00		 DB	 0
$LN17@DXUTCreate:
  00320	64		 DB	 100			; 00000064H
  00321	65		 DB	 101			; 00000065H
  00322	73		 DB	 115			; 00000073H
  00323	63		 DB	 99			; 00000063H
  00324	44		 DB	 68			; 00000044H
  00325	65		 DB	 101			; 00000065H
  00326	70		 DB	 112			; 00000070H
  00327	74		 DB	 116			; 00000074H
  00328	68		 DB	 104			; 00000068H
  00329	00		 DB	 0
$LN16@DXUTCreate:
  0032a	70		 DB	 112			; 00000070H
  0032b	44		 DB	 68			; 00000044H
  0032c	65		 DB	 101			; 00000065H
  0032d	70		 DB	 112			; 00000070H
  0032e	74		 DB	 116			; 00000074H
  0032f	68		 DB	 104			; 00000068H
  00330	53		 DB	 83			; 00000053H
  00331	74		 DB	 116			; 00000074H
  00332	65		 DB	 101			; 00000065H
  00333	6e		 DB	 110			; 0000006eH
  00334	63		 DB	 99			; 00000063H
  00335	69		 DB	 105			; 00000069H
  00336	6c		 DB	 108			; 0000006cH
  00337	00		 DB	 0
$LN15@DXUTCreate:
  00338	62		 DB	 98			; 00000062H
  00339	61		 DB	 97			; 00000061H
  0033a	63		 DB	 99			; 00000063H
  0033b	6b		 DB	 107			; 0000006bH
  0033c	42		 DB	 66			; 00000042H
  0033d	75		 DB	 117			; 00000075H
  0033e	66		 DB	 102			; 00000066H
  0033f	66		 DB	 102			; 00000066H
  00340	65		 DB	 101			; 00000065H
  00341	72		 DB	 114			; 00000072H
  00342	53		 DB	 83			; 00000053H
  00343	75		 DB	 117			; 00000075H
  00344	72		 DB	 114			; 00000072H
  00345	66		 DB	 102			; 00000066H
  00346	61		 DB	 97			; 00000061H
  00347	63		 DB	 99			; 00000063H
  00348	65		 DB	 101			; 00000065H
  00349	44		 DB	 68			; 00000044H
  0034a	65		 DB	 101			; 00000065H
  0034b	73		 DB	 115			; 00000073H
  0034c	63		 DB	 99			; 00000063H
  0034d	00		 DB	 0
$LN14@DXUTCreate:
  0034e	70		 DB	 112			; 00000070H
  0034f	42		 DB	 66			; 00000042H
  00350	61		 DB	 97			; 00000061H
  00351	63		 DB	 99			; 00000063H
  00352	6b		 DB	 107			; 0000006bH
  00353	42		 DB	 66			; 00000042H
  00354	75		 DB	 117			; 00000075H
  00355	66		 DB	 102			; 00000066H
  00356	66		 DB	 102			; 00000066H
  00357	65		 DB	 101			; 00000065H
  00358	72		 DB	 114			; 00000072H
  00359	00		 DB	 0
$LN13@DXUTCreate:
  0035a	70		 DB	 112			; 00000070H
  0035b	52		 DB	 82			; 00000052H
  0035c	54		 DB	 84			; 00000054H
  0035d	56		 DB	 86			; 00000056H
  0035e	00		 DB	 0
$LN12@DXUTCreate:
  0035f	70		 DB	 112			; 00000070H
  00360	44		 DB	 68			; 00000044H
  00361	53		 DB	 83			; 00000053H
  00362	56		 DB	 86			; 00000056H
  00363	00		 DB	 0
?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ENDP ; DXUTCreateD3D11Views
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rcWindow$1 = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
?DXUTSetupCursor@@YAXXZ PROC				; DXUTSetupCursor
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3969
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00026	33 c5		 xor	 eax, ebp
  00028	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3971
  0002b	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	75 41		 jne	 SHORT $LN2@DXUTSetupC
  00037	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ ; DXUTState::GetClipCursorWhenFullScreen
  00043	0f b6 c8	 movzx	 ecx, al
  00046	85 c9		 test	 ecx, ecx
  00048	74 2e		 je	 SHORT $LN2@DXUTSetupC
; Line 3975
  0004a	8b f4		 mov	 esi, esp
  0004c	8d 55 e8	 lea	 edx, DWORD PTR _rcWindow$1[ebp]
  0004f	52		 push	 edx
  00050	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceFullScreen
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3976
  00063	8b f4		 mov	 esi, esp
  00065	8d 45 e8	 lea	 eax, DWORD PTR _rcWindow$1[ebp]
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4
  0006f	3b f4		 cmp	 esi, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3978
  00076	eb 11		 jmp	 SHORT $LN3@DXUTSetupC
$LN2@DXUTSetupC:
; Line 3980
  00078	8b f4		 mov	 esi, esp
  0007a	6a 00		 push	 0
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@DXUTSetupC:
; Line 3982
  00089	52		 push	 edx
  0008a	8b cd		 mov	 ecx, ebp
  0008c	50		 push	 eax
  0008d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@DXUTSetupC
  00093	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00098	58		 pop	 eax
  00099	5a		 pop	 edx
  0009a	5e		 pop	 esi
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009e	33 cd		 xor	 ecx, ebp
  000a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a5	83 c4 1c	 add	 esp, 28			; 0000001cH
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
  000b3	90		 npad	 1
$LN7@DXUTSetupC:
  000b4	01 00 00 00	 DD	 1
  000b8	00 00 00 00	 DD	 $LN6@DXUTSetupC
$LN6@DXUTSetupC:
  000bc	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000c0	10 00 00 00	 DD	 16			; 00000010H
  000c4	00 00 00 00	 DD	 $LN5@DXUTSetupC
$LN5@DXUTSetupC:
  000c8	72		 DB	 114			; 00000072H
  000c9	63		 DB	 99			; 00000063H
  000ca	57		 DB	 87			; 00000057H
  000cb	69		 DB	 105			; 00000069H
  000cc	6e		 DB	 110			; 0000006eH
  000cd	64		 DB	 100			; 00000064H
  000ce	6f		 DB	 111			; 0000006fH
  000cf	77		 DB	 119			; 00000077H
  000d0	00		 DB	 0
?DXUTSetupCursor@@YAXXZ ENDP				; DXUTSetupCursor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_TexDesc$1 = -76					; size = 44
_pBBufferSurfaceDesc$ = -28				; size = 4
_pSwapChain$ = -24					; size = 4
_pBackBuffer$ = -16					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTUpdateBackBufferDesc@@YAXXZ PROC			; DXUTUpdateBackBufferDesc
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3943
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000b	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3946
  00021	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00026	8b c8		 mov	 ecx, eax
  00028	e8 00 00 00 00	 call	 ?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ; DXUTState::GetDXGISwapChain
  0002d	89 45 e8	 mov	 DWORD PTR _pSwapChain$[ebp], eax
; Line 3947
  00030	83 7d e8 00	 cmp	 DWORD PTR _pSwapChain$[ebp], 0
  00034	75 21		 jne	 SHORT $LN5@DXUTUpdate
  00036	8b f4		 mov	 esi, esp
  00038	68 6b 0f 00 00	 push	 3947			; 00000f6bH
  0003d	68 00 00 00 00	 push	 OFFSET $SG153596
  00042	68 00 00 00 00	 push	 OFFSET $SG153597
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@DXUTUpdate:
; Line 3949
  00057	8b f4		 mov	 esi, esp
  00059	8d 4d f0	 lea	 ecx, DWORD PTR _pBackBuffer$[ebp]
  0005c	51		 push	 ecx
  0005d	68 00 00 00 00	 push	 OFFSET __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
  00062	6a 00		 push	 0
  00064	8b 55 e8	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  00067	8b 02		 mov	 eax, DWORD PTR [edx]
  00069	8b 4d e8	 mov	 ecx, DWORD PTR _pSwapChain$[ebp]
  0006c	51		 push	 ecx
  0006d	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00070	ff d2		 call	 edx
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 3950
  0007c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
  00088	89 45 e4	 mov	 DWORD PTR _pBBufferSurfaceDesc$[ebp], eax
; Line 3951
  0008b	33 c0		 xor	 eax, eax
  0008d	8b 4d e4	 mov	 ecx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
  00090	89 01		 mov	 DWORD PTR [ecx], eax
  00092	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00095	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00098	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0009b	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 3952
  0009e	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000a2	7c 68		 jl	 SHORT $LN3@DXUTUpdate
; Line 3955
  000a4	8b f4		 mov	 esi, esp
  000a6	8d 55 b4	 lea	 edx, DWORD PTR _TexDesc$1[ebp]
  000a9	52		 push	 edx
  000aa	8b 45 f0	 mov	 eax, DWORD PTR _pBackBuffer$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	8b 55 f0	 mov	 edx, DWORD PTR _pBackBuffer$[ebp]
  000b2	52		 push	 edx
  000b3	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  000b6	ff d0		 call	 eax
  000b8	3b f4		 cmp	 esi, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3956
  000bf	8b 4d e4	 mov	 ecx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
  000c2	8b 55 b4	 mov	 edx, DWORD PTR _TexDesc$1[ebp]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
; Line 3957
  000c7	8b 45 e4	 mov	 eax, DWORD PTR _pBBufferSurfaceDesc$[ebp]
  000ca	8b 4d b8	 mov	 ecx, DWORD PTR _TexDesc$1[ebp+4]
  000cd	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 3958
  000d0	8b 55 e4	 mov	 edx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
  000d3	8b 45 c4	 mov	 eax, DWORD PTR _TexDesc$1[ebp+16]
  000d6	89 42 08	 mov	 DWORD PTR [edx+8], eax
; Line 3959
  000d9	8b 4d e4	 mov	 ecx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
  000dc	8b 55 c8	 mov	 edx, DWORD PTR _TexDesc$1[ebp+20]
  000df	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
  000e2	8b 45 cc	 mov	 eax, DWORD PTR _TexDesc$1[ebp+24]
  000e5	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 3960
  000e8	83 7d f0 00	 cmp	 DWORD PTR _pBackBuffer$[ebp], 0
  000ec	74 1e		 je	 SHORT $LN3@DXUTUpdate
  000ee	8b 4d f0	 mov	 ecx, DWORD PTR _pBackBuffer$[ebp]
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	8b f4		 mov	 esi, esp
  000f5	8b 45 f0	 mov	 eax, DWORD PTR _pBackBuffer$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000fc	ff d1		 call	 ecx
  000fe	3b f4		 cmp	 esi, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pBackBuffer$[ebp], 0
$LN3@DXUTUpdate:
; Line 3962
  0010c	52		 push	 edx
  0010d	8b cd		 mov	 ecx, ebp
  0010f	50		 push	 eax
  00110	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@DXUTUpdate
  00116	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0011b	58		 pop	 eax
  0011c	5a		 pop	 edx
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00122	33 cd		 xor	 ecx, ebp
  00124	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00129	83 c4 50	 add	 esp, 80			; 00000050H
  0012c	3b ec		 cmp	 ebp, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c3		 ret	 0
  00137	90		 npad	 1
$LN9@DXUTUpdate:
  00138	02 00 00 00	 DD	 2
  0013c	00 00 00 00	 DD	 $LN8@DXUTUpdate
$LN8@DXUTUpdate:
  00140	f0 ff ff ff	 DD	 -16			; fffffff0H
  00144	04 00 00 00	 DD	 4
  00148	00 00 00 00	 DD	 $LN6@DXUTUpdate
  0014c	b4 ff ff ff	 DD	 -76			; ffffffb4H
  00150	2c 00 00 00	 DD	 44			; 0000002cH
  00154	00 00 00 00	 DD	 $LN7@DXUTUpdate
$LN7@DXUTUpdate:
  00158	54		 DB	 84			; 00000054H
  00159	65		 DB	 101			; 00000065H
  0015a	78		 DB	 120			; 00000078H
  0015b	44		 DB	 68			; 00000044H
  0015c	65		 DB	 101			; 00000065H
  0015d	73		 DB	 115			; 00000073H
  0015e	63		 DB	 99			; 00000063H
  0015f	00		 DB	 0
$LN6@DXUTUpdate:
  00160	70		 DB	 112			; 00000070H
  00161	42		 DB	 66			; 00000042H
  00162	61		 DB	 97			; 00000061H
  00163	63		 DB	 99			; 00000063H
  00164	6b		 DB	 107			; 0000006bH
  00165	42		 DB	 66			; 00000042H
  00166	75		 DB	 117			; 00000075H
  00167	66		 DB	 102			; 00000066H
  00168	66		 DB	 102			; 00000066H
  00169	65		 DB	 101			; 00000065H
  0016a	72		 DB	 114			; 00000072H
  0016b	00		 DB	 0
?DXUTUpdateBackBufferDesc@@YAXXZ ENDP			; DXUTUpdateBackBufferDesc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDeviceSettings$1 = -16				; size = 4
_pDeviceRemovedFunc$ = -12				; size = 4
_bLookForNewDevice$ = -5				; size = 1
_hr$ = -4						; size = 4
?DXUTHandleDeviceRemoved@@YAJXZ PROC			; DXUTHandleDeviceRemoved
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3908
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 3909
  00018	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 3913
  0001f	c6 45 fb 01	 mov	 BYTE PTR _bLookForNewDevice$[ebp], 1
; Line 3914
  00023	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00028	8b c8		 mov	 ecx, eax
  0002a	e8 00 00 00 00	 call	 ?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ ; DXUTState::GetDeviceRemovedFunc
  0002f	89 45 f4	 mov	 DWORD PTR _pDeviceRemovedFunc$[ebp], eax
; Line 3915
  00032	83 7d f4 00	 cmp	 DWORD PTR _pDeviceRemovedFunc$[ebp], 0
  00036	74 1c		 je	 SHORT $LN4@DXUTHandle
; Line 3916
  00038	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetDeviceRemovedFuncUserContext
  00044	8b f4		 mov	 esi, esp
  00046	50		 push	 eax
  00047	ff 55 f4	 call	 DWORD PTR _pDeviceRemovedFunc$[ebp]
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	88 45 fb	 mov	 BYTE PTR _bLookForNewDevice$[ebp], al
$LN4@DXUTHandle:
; Line 3918
  00054	0f b6 45 fb	 movzx	 eax, BYTE PTR _bLookForNewDevice$[ebp]
  00058	85 c0		 test	 eax, eax
  0005a	74 43		 je	 SHORT $LN3@DXUTHandle
; Line 3920
  0005c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00061	8b c8		 mov	 ecx, eax
  00063	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00068	89 45 f0	 mov	 DWORD PTR _pDeviceSettings$1[ebp], eax
; Line 3923
  0006b	6a 00		 push	 0
  0006d	6a 00		 push	 0
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettings$1[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 3924
  0007e	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00082	7c 1b		 jl	 SHORT $LN3@DXUTHandle
; Line 3928
  00084	6a 00		 push	 0
  00086	8b 55 f0	 mov	 edx, DWORD PTR _pDeviceSettings$1[ebp]
  00089	52		 push	 edx
  0008a	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  0008f	83 c4 08	 add	 esp, 8
  00092	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 3929
  00095	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00099	7c 04		 jl	 SHORT $LN3@DXUTHandle
; Line 3930
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 05		 jmp	 SHORT $LN5@DXUTHandle
$LN3@DXUTHandle:
; Line 3935
  0009f	b8 0a 09 04 80	 mov	 eax, -2147219190	; 8004090aH
$LN5@DXUTHandle:
; Line 3936
  000a4	5e		 pop	 esi
  000a5	83 c4 10	 add	 esp, 16			; 00000010H
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?DXUTHandleDeviceRemoved@@YAJXZ ENDP			; DXUTHandleDeviceRemoved
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv169 = -336						; size = 4
tv132 = -332						; size = 4
tv166 = -328						; size = 4
tv82 = -324						; size = 4
$T2 = -320						; size = 4
$T3 = -316						; size = 12
$T4 = -301						; size = 1
$T5 = -300						; size = 12
$T6 = -285						; size = 1
_Desc$7 = -280						; size = 92
_pOutputInfo$8 = -184					; size = 4
_jit$9 = -176						; size = 12
_pAdapterInfo$10 = -160					; size = 4
_it$11 = -152						; size = 12
_pAdapterList$ = -136					; size = 4
_pd3dEnum$ = -132					; size = 4
_mi$ = -124						; size = 104
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hMonitor$ = 8						; size = 4
_pOutputOrdinal$ = 12					; size = 4
?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z PROC ; DXUTGetOutputOrdinalFromMonitor
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3870
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd b0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-336]
  0001f	b9 51 00 00 00	 mov	 ecx, 81			; 00000051H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 3873
  0003f	c7 45 84 68 00
	00 00		 mov	 DWORD PTR _mi$[ebp], 104 ; 00000068H
; Line 3874
  00046	8d 45 84	 lea	 eax, DWORD PTR _mi$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _hMonitor$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 ?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 3877
  00053	6a 00		 push	 0
  00055	6a 01		 push	 1
  00057	6a 00		 push	 0
  00059	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  0005e	89 85 7c ff ff
	ff		 mov	 DWORD PTR _pd3dEnum$[ebp], eax
; Line 3878
  00064	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _pd3dEnum$[ebp]
  0006a	e8 00 00 00 00	 call	 ?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ ; CD3D11Enumeration::GetAdapterInfoList
  0006f	89 85 78 ff ff
	ff		 mov	 DWORD PTR _pAdapterList$[ebp], eax
; Line 3879
  00075	8d 95 68 ff ff
	ff		 lea	 edx, DWORD PTR _it$11[ebp]
  0007b	52		 push	 edx
  0007c	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  00082	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008e	eb 0b		 jmp	 SHORT $LN8@DXUTGetOut
$LN7@DXUTGetOut:
  00090	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$11[ebp]
  00096	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
$LN8@DXUTGetOut:
  0009b	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  000a1	50		 push	 eax
  000a2	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  000a8	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
  000ad	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv82[ebp], eax
  000b3	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv82[ebp]
  000b9	89 8d b8 fe ff
	ff		 mov	 DWORD PTR tv166[ebp], ecx
  000bf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000c3	8b 95 b8 fe ff
	ff		 mov	 edx, DWORD PTR tv166[ebp]
  000c9	52		 push	 edx
  000ca	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$11[ebp]
  000d0	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
  000d5	88 85 e3 fe ff
	ff		 mov	 BYTE PTR $T6[ebp], al
  000db	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000df	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  000e5	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
  000ea	0f b6 85 e3 fe
	ff ff		 movzx	 eax, BYTE PTR $T6[ebp]
  000f1	85 c0		 test	 eax, eax
  000f3	0f 84 59 01 00
	00		 je	 $LN6@DXUTGetOut
; Line 3881
  000f9	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$11[ebp]
  000ff	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
  00104	8b 08		 mov	 ecx, DWORD PTR [eax]
  00106	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _pAdapterInfo$10[ebp], ecx
; Line 3882
  0010c	8d 95 50 ff ff
	ff		 lea	 edx, DWORD PTR _jit$9[ebp]
  00112	52		 push	 edx
  00113	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterInfo$10[ebp]
  00119	81 c1 30 02 00
	00		 add	 ecx, 560		; 00000230H
  0011f	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
  00124	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00128	eb 0b		 jmp	 SHORT $LN5@DXUTGetOut
$LN4@DXUTGetOut:
  0012a	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$9[ebp]
  00130	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
$LN5@DXUTGetOut:
  00135	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  0013b	50		 push	 eax
  0013c	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterInfo$10[ebp]
  00142	81 c1 30 02 00
	00		 add	 ecx, 560		; 00000230H
  00148	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
  0014d	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv132[ebp], eax
  00153	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR tv132[ebp]
  00159	89 8d b0 fe ff
	ff		 mov	 DWORD PTR tv169[ebp], ecx
  0015f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00163	8b 95 b0 fe ff
	ff		 mov	 edx, DWORD PTR tv169[ebp]
  00169	52		 push	 edx
  0016a	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$9[ebp]
  00170	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
  00175	88 85 d3 fe ff
	ff		 mov	 BYTE PTR $T4[ebp], al
  0017b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0017f	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00185	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
  0018a	0f b6 85 d3 fe
	ff ff		 movzx	 eax, BYTE PTR $T4[ebp]
  00191	85 c0		 test	 eax, eax
  00193	0f 84 a5 00 00
	00		 je	 $LN3@DXUTGetOut
; Line 3884
  00199	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$9[ebp]
  0019f	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
  001a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a6	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _pOutputInfo$8[ebp], ecx
; Line 3886
  001ac	8b f4		 mov	 esi, esp
  001ae	8d 95 e8 fe ff
	ff		 lea	 edx, DWORD PTR _Desc$7[ebp]
  001b4	52		 push	 edx
  001b5	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _pOutputInfo$8[ebp]
  001bb	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001be	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _pOutputInfo$8[ebp]
  001c4	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c7	8b 09		 mov	 ecx, DWORD PTR [ecx]
  001c9	50		 push	 eax
  001ca	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  001cd	ff d2		 call	 edx
  001cf	3b f4		 cmp	 esi, esp
  001d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d6	85 c0		 test	 eax, eax
  001d8	7d 13		 jge	 SHORT $LN2@DXUTGetOut
; Line 3887
  001da	6a 5c		 push	 92			; 0000005cH
  001dc	6a 00		 push	 0
  001de	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _Desc$7[ebp]
  001e4	50		 push	 eax
  001e5	e8 00 00 00 00	 call	 _memset
  001ea	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@DXUTGetOut:
; Line 3889
  001ed	8b 4d 08	 mov	 ecx, DWORD PTR _hMonitor$[ebp]
  001f0	3b 8d 40 ff ff
	ff		 cmp	 ecx, DWORD PTR _Desc$7[ebp+88]
  001f6	75 41		 jne	 SHORT $LN1@DXUTGetOut
; Line 3891
  001f8	8b 55 0c	 mov	 edx, DWORD PTR _pOutputOrdinal$[ebp]
  001fb	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _pOutputInfo$8[ebp]
  00201	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00204	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 3892
  00206	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  00210	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00214	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$9[ebp]
  0021a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
  0021f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00226	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$11[ebp]
  0022c	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
  00231	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00237	eb 30		 jmp	 SHORT $LN9@DXUTGetOut
$LN1@DXUTGetOut:
; Line 3893
  00239	e9 ec fe ff ff	 jmp	 $LN4@DXUTGetOut
$LN3@DXUTGetOut:
; Line 3894
  0023e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00242	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$9[ebp]
  00248	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
  0024d	e9 3e fe ff ff	 jmp	 $LN7@DXUTGetOut
$LN6@DXUTGetOut:
; Line 3895
  00252	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00259	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$11[ebp]
  0025f	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
; Line 3897
  00264	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
$LN9@DXUTGetOut:
; Line 3898
  00269	52		 push	 edx
  0026a	8b cd		 mov	 ecx, ebp
  0026c	50		 push	 eax
  0026d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN21@DXUTGetOut
  00273	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00278	58		 pop	 eax
  00279	5a		 pop	 edx
  0027a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0027d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00284	59		 pop	 ecx
  00285	5f		 pop	 edi
  00286	5e		 pop	 esi
  00287	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0028a	33 cd		 xor	 ecx, ebp
  0028c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00291	81 c4 50 01 00
	00		 add	 esp, 336		; 00000150H
  00297	3b ec		 cmp	 ebp, esp
  00299	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0029e	8b e5		 mov	 esp, ebp
  002a0	5d		 pop	 ebp
  002a1	c3		 ret	 0
  002a2	8b ff		 npad	 2
$LN21@DXUTGetOut:
  002a4	04 00 00 00	 DD	 4
  002a8	00 00 00 00	 DD	 $LN20@DXUTGetOut
$LN20@DXUTGetOut:
  002ac	84 ff ff ff	 DD	 -124			; ffffff84H
  002b0	68 00 00 00	 DD	 104			; 00000068H
  002b4	00 00 00 00	 DD	 $LN15@DXUTGetOut
  002b8	68 ff ff ff	 DD	 -152			; ffffff68H
  002bc	0c 00 00 00	 DD	 12			; 0000000cH
  002c0	00 00 00 00	 DD	 $LN16@DXUTGetOut
  002c4	50 ff ff ff	 DD	 -176			; ffffff50H
  002c8	0c 00 00 00	 DD	 12			; 0000000cH
  002cc	00 00 00 00	 DD	 $LN17@DXUTGetOut
  002d0	e8 fe ff ff	 DD	 -280			; fffffee8H
  002d4	5c 00 00 00	 DD	 92			; 0000005cH
  002d8	00 00 00 00	 DD	 $LN18@DXUTGetOut
$LN18@DXUTGetOut:
  002dc	44		 DB	 68			; 00000044H
  002dd	65		 DB	 101			; 00000065H
  002de	73		 DB	 115			; 00000073H
  002df	63		 DB	 99			; 00000063H
  002e0	00		 DB	 0
$LN17@DXUTGetOut:
  002e1	6a		 DB	 106			; 0000006aH
  002e2	69		 DB	 105			; 00000069H
  002e3	74		 DB	 116			; 00000074H
  002e4	00		 DB	 0
$LN16@DXUTGetOut:
  002e5	69		 DB	 105			; 00000069H
  002e6	74		 DB	 116			; 00000074H
  002e7	00		 DB	 0
$LN15@DXUTGetOut:
  002e8	6d		 DB	 109			; 0000006dH
  002e9	69		 DB	 105			; 00000069H
  002ea	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0:
  00000	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$11[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1:
  0000b	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2:
  00016	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$9[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3:
  00021	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z:
  0002c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00030	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00033	8b 8a b0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-336]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ENDP ; DXUTGetOutputOrdinalFromMonitor
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv162 = -236						; size = 4
tv132 = -232						; size = 4
tv159 = -228						; size = 4
tv82 = -224						; size = 4
$T2 = -220						; size = 4
$T3 = -216						; size = 12
$T4 = -201						; size = 1
$T5 = -200						; size = 12
$T6 = -185						; size = 1
_pOutputInfo$7 = -184					; size = 4
_jit$8 = -176						; size = 12
_pAdapterInfo$9 = -160					; size = 4
_it$10 = -152						; size = 12
_pAdapterList$ = -136					; size = 4
_pd3dEnum$ = -132					; size = 4
_mi$ = -124						; size = 104
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hMonitor$ = 8						; size = 4
_pAdapterOrdinal$ = 12					; size = 4
?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z PROC ; DXUTGetAdapterOrdinalFromMonitor
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3835
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  0001f	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 3836
  0003f	8b 45 0c	 mov	 eax, DWORD PTR _pAdapterOrdinal$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 3840
  00048	c7 45 84 68 00
	00 00		 mov	 DWORD PTR _mi$[ebp], 104 ; 00000068H
; Line 3841
  0004f	8d 4d 84	 lea	 ecx, DWORD PTR _mi$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 08	 mov	 edx, DWORD PTR _hMonitor$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 3844
  0005c	6a 00		 push	 0
  0005e	6a 01		 push	 1
  00060	6a 00		 push	 0
  00062	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  00067	89 85 7c ff ff
	ff		 mov	 DWORD PTR _pd3dEnum$[ebp], eax
; Line 3845
  0006d	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _pd3dEnum$[ebp]
  00073	e8 00 00 00 00	 call	 ?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ ; CD3D11Enumeration::GetAdapterInfoList
  00078	89 85 78 ff ff
	ff		 mov	 DWORD PTR _pAdapterList$[ebp], eax
; Line 3846
  0007e	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _it$10[ebp]
  00084	50		 push	 eax
  00085	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  0008b	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
  00090	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00097	eb 0b		 jmp	 SHORT $LN7@DXUTGetAda
$LN6@DXUTGetAda:
  00099	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  0009f	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
$LN7@DXUTGetAda:
  000a4	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  000aa	51		 push	 ecx
  000ab	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  000b1	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
  000b6	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], eax
  000bc	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR tv82[ebp]
  000c2	89 95 1c ff ff
	ff		 mov	 DWORD PTR tv159[ebp], edx
  000c8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000cc	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv159[ebp]
  000d2	50		 push	 eax
  000d3	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  000d9	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
  000de	88 85 47 ff ff
	ff		 mov	 BYTE PTR $T6[ebp], al
  000e4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000e8	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  000ee	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
  000f3	0f b6 8d 47 ff
	ff ff		 movzx	 ecx, BYTE PTR $T6[ebp]
  000fa	85 c9		 test	 ecx, ecx
  000fc	0f 84 2e 01 00
	00		 je	 $LN5@DXUTGetAda
; Line 3848
  00102	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  00108	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
  0010d	8b 10		 mov	 edx, DWORD PTR [eax]
  0010f	89 95 60 ff ff
	ff		 mov	 DWORD PTR _pAdapterInfo$9[ebp], edx
; Line 3849
  00115	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _jit$8[ebp]
  0011b	50		 push	 eax
  0011c	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterInfo$9[ebp]
  00122	81 c1 30 02 00
	00		 add	 ecx, 560		; 00000230H
  00128	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
  0012d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00131	eb 0b		 jmp	 SHORT $LN4@DXUTGetAda
$LN3@DXUTGetAda:
  00133	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$8[ebp]
  00139	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
$LN4@DXUTGetAda:
  0013e	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00144	51		 push	 ecx
  00145	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _pAdapterInfo$9[ebp]
  0014b	81 c1 30 02 00
	00		 add	 ecx, 560		; 00000230H
  00151	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
  00156	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv132[ebp], eax
  0015c	8b 95 18 ff ff
	ff		 mov	 edx, DWORD PTR tv132[ebp]
  00162	89 95 14 ff ff
	ff		 mov	 DWORD PTR tv162[ebp], edx
  00168	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0016c	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv162[ebp]
  00172	50		 push	 eax
  00173	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$8[ebp]
  00179	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
  0017e	88 85 37 ff ff
	ff		 mov	 BYTE PTR $T4[ebp], al
  00184	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00188	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0018e	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
  00193	0f b6 8d 37 ff
	ff ff		 movzx	 ecx, BYTE PTR $T4[ebp]
  0019a	85 c9		 test	 ecx, ecx
  0019c	74 7e		 je	 SHORT $LN2@DXUTGetAda
; Line 3851
  0019e	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$8[ebp]
  001a4	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
  001a9	8b 10		 mov	 edx, DWORD PTR [eax]
  001ab	89 95 48 ff ff
	ff		 mov	 DWORD PTR _pOutputInfo$7[ebp], edx
; Line 3854
  001b1	8b f4		 mov	 esi, esp
  001b3	6a 20		 push	 32			; 00000020H
  001b5	8d 45 ac	 lea	 eax, DWORD PTR _mi$[ebp+40]
  001b8	50		 push	 eax
  001b9	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _pOutputInfo$7[ebp]
  001bf	83 c1 0c	 add	 ecx, 12			; 0000000cH
  001c2	51		 push	 ecx
  001c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcsncmp
  001c9	83 c4 0c	 add	 esp, 12			; 0000000cH
  001cc	3b f4		 cmp	 esi, esp
  001ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d3	85 c0		 test	 eax, eax
  001d5	75 40		 jne	 SHORT $LN1@DXUTGetAda
; Line 3856
  001d7	8b 55 0c	 mov	 edx, DWORD PTR _pAdapterOrdinal$[ebp]
  001da	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _pAdapterInfo$9[ebp]
  001e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e2	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 3857
  001e4	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  001ee	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001f2	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$8[ebp]
  001f8	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
  001fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00204	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  0020a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
  0020f	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00215	eb 30		 jmp	 SHORT $LN8@DXUTGetAda
$LN1@DXUTGetAda:
; Line 3858
  00217	e9 17 ff ff ff	 jmp	 $LN3@DXUTGetAda
$LN2@DXUTGetAda:
; Line 3859
  0021c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00220	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$8[ebp]
  00226	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
  0022b	e9 69 fe ff ff	 jmp	 $LN6@DXUTGetAda
$LN5@DXUTGetAda:
; Line 3860
  00230	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00237	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  0023d	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
; Line 3861
  00242	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
$LN8@DXUTGetAda:
; Line 3862
  00247	52		 push	 edx
  00248	8b cd		 mov	 ecx, ebp
  0024a	50		 push	 eax
  0024b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN19@DXUTGetAda
  00251	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00256	58		 pop	 eax
  00257	5a		 pop	 edx
  00258	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0025b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00262	59		 pop	 ecx
  00263	5f		 pop	 edi
  00264	5e		 pop	 esi
  00265	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00268	33 cd		 xor	 ecx, ebp
  0026a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026f	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  00275	3b ec		 cmp	 ebp, esp
  00277	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027c	8b e5		 mov	 esp, ebp
  0027e	5d		 pop	 ebp
  0027f	c3		 ret	 0
$LN19@DXUTGetAda:
  00280	03 00 00 00	 DD	 3
  00284	00 00 00 00	 DD	 $LN18@DXUTGetAda
$LN18@DXUTGetAda:
  00288	84 ff ff ff	 DD	 -124			; ffffff84H
  0028c	68 00 00 00	 DD	 104			; 00000068H
  00290	00 00 00 00	 DD	 $LN14@DXUTGetAda
  00294	68 ff ff ff	 DD	 -152			; ffffff68H
  00298	0c 00 00 00	 DD	 12			; 0000000cH
  0029c	00 00 00 00	 DD	 $LN15@DXUTGetAda
  002a0	50 ff ff ff	 DD	 -176			; ffffff50H
  002a4	0c 00 00 00	 DD	 12			; 0000000cH
  002a8	00 00 00 00	 DD	 $LN16@DXUTGetAda
$LN16@DXUTGetAda:
  002ac	6a		 DB	 106			; 0000006aH
  002ad	69		 DB	 105			; 00000069H
  002ae	74		 DB	 116			; 00000074H
  002af	00		 DB	 0
$LN15@DXUTGetAda:
  002b0	69		 DB	 105			; 00000069H
  002b1	74		 DB	 116			; 00000074H
  002b2	00		 DB	 0
$LN14@DXUTGetAda:
  002b3	6d		 DB	 109			; 0000006dH
  002b4	69		 DB	 105			; 00000069H
  002b5	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0:
  00000	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _it$10[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1:
  0000b	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2:
  00016	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _jit$8[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3:
  00021	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z:
  0002c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00030	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00033	8b 8a 14 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-236]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ENDP ; DXUTGetAdapterOrdinalFromMonitor
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pOutputInfo$ = -8					; size = 4
_pD3DEnum$ = -4						; size = 4
_pDeviceSettings$ = 8					; size = 4
?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z PROC ; DXUTGetMonitorFromAdapter
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3818
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 3819
  00015	6a 00		 push	 0
  00017	6a 01		 push	 1
  00019	6a 00		 push	 0
  0001b	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  00020	89 45 fc	 mov	 DWORD PTR _pD3DEnum$[ebp], eax
; Line 3820
  00023	83 7d fc 00	 cmp	 DWORD PTR _pD3DEnum$[ebp], 0
  00027	75 21		 jne	 SHORT $LN4@DXUTGetMon
  00029	8b f4		 mov	 esi, esp
  0002b	68 ec 0e 00 00	 push	 3820			; 00000eecH
  00030	68 00 00 00 00	 push	 OFFSET $SG153306
  00035	68 00 00 00 00	 push	 OFFSET $SG153307
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@DXUTGetMon:
; Line 3823
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  0004d	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00050	52		 push	 edx
  00051	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00054	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00057	51		 push	 ecx
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _pD3DEnum$[ebp]
  0005b	e8 00 00 00 00	 call	 ?GetOutputInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumOutputInfo@@II@Z ; CD3D11Enumeration::GetOutputInfo
  00060	89 45 f8	 mov	 DWORD PTR _pOutputInfo$[ebp], eax
; Line 3824
  00063	83 7d f8 00	 cmp	 DWORD PTR _pOutputInfo$[ebp], 0
  00067	75 04		 jne	 SHORT $LN1@DXUTGetMon
; Line 3825
  00069	33 c0		 xor	 eax, eax
  0006b	eb 0e		 jmp	 SHORT $LN2@DXUTGetMon
$LN1@DXUTGetMon:
; Line 3826
  0006d	6a 02		 push	 2
  0006f	8b 55 f8	 mov	 edx, DWORD PTR _pOutputInfo$[ebp]
  00072	83 c2 4c	 add	 edx, 76			; 0000004cH
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ?DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z ; DXUTMonitorFromRect
$LN2@DXUTGetMon:
; Line 3827
  0007b	5e		 pop	 esi
  0007c	83 c4 08	 add	 esp, 8
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetMonitorFromAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -104						; size = 4
$T1 = -100						; size = 4
$T2 = -96						; size = 4
_pBackBufferSurfaceDesc$3 = -92				; size = 4
_pOldDeviceSettings$4 = -88				; size = 4
_dxgiDebug$5 = -80					; size = 4
_references$6 = -72					; size = 4
_pd3dDevice1$7 = -68					; size = 4
_d3dDebug$8 = -60					; size = 4
_pImmediateContext1$9 = -52				; size = 4
_pImmediateContext$10 = -48				; size = 4
_pAdapter$11 = -44					; size = 4
_o$12 = -40						; size = 4
_OutputCount$13 = -36					; size = 4
_ppOutputArray$14 = -32					; size = 4
_pSwapChain$15 = -28					; size = 4
_pCallbackDeviceDestroyed$16 = -24			; size = 4
_pRTV$17 = -20						; size = 4
_pDSV$18 = -16						; size = 4
_pDS$19 = -12						; size = 4
_pCallbackSwapChainReleasing$20 = -8			; size = 4
_pd3dDevice$ = -4					; size = 4
_bReleaseSettings$ = 8					; size = 1
?DXUTCleanup3DEnvironment@@YAX_N@Z PROC			; DXUTCleanup3DEnvironment
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2937
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d 98	 lea	 edi, DWORD PTR [ebp-104]
  0000b	b9 1a 00 00 00	 mov	 ecx, 26			; 0000001aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
; Line 2938
  00017	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  0001c	89 45 fc	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 2940
  0001f	83 7d fc 00	 cmp	 DWORD PTR _pd3dDevice$[ebp], 0
  00023	0f 84 c0 05 00
	00		 je	 $LN26@DXUTCleanu
; Line 2942
  00029	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ; DXUTState::GetD3D11RasterizerState
  00035	85 c0		 test	 eax, eax
  00037	74 26		 je	 SHORT $LN24@DXUTCleanu
; Line 2943
  00039	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ; DXUTState::GetD3D11RasterizerState
  00045	89 45 98	 mov	 DWORD PTR tv78[ebp], eax
  00048	8b 45 98	 mov	 eax, DWORD PTR tv78[ebp]
  0004b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004d	8b f4		 mov	 esi, esp
  0004f	8b 55 98	 mov	 edx, DWORD PTR tv78[ebp]
  00052	52		 push	 edx
  00053	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00056	ff d0		 call	 eax
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN24@DXUTCleanu:
; Line 2946
  0005f	6a 01		 push	 1
  00061	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00066	8b c8		 mov	 ecx, eax
  00068	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2947
  0006d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ?GetDeviceObjectsReset@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsReset
  00079	0f b6 c8	 movzx	 ecx, al
  0007c	85 c9		 test	 ecx, ecx
  0007e	74 3c		 je	 SHORT $LN23@DXUTCleanu
; Line 2950
  00080	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
  0008c	89 45 f8	 mov	 DWORD PTR _pCallbackSwapChainReleasing$20[ebp], eax
; Line 2951
  0008f	83 7d f8 00	 cmp	 DWORD PTR _pCallbackSwapChainReleasing$20[ebp], 0
  00093	74 19		 je	 SHORT $LN22@DXUTCleanu
; Line 2952
  00095	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext
  000a1	8b f4		 mov	 esi, esp
  000a3	50		 push	 eax
  000a4	ff 55 f8	 call	 DWORD PTR _pCallbackSwapChainReleasing$20[ebp]
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN22@DXUTCleanu:
; Line 2953
  000ae	6a 00		 push	 0
  000b0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
$LN23@DXUTCleanu:
; Line 2957
  000bc	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000c1	8b c8		 mov	 ecx, eax
  000c3	e8 00 00 00 00	 call	 ?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ; DXUTState::GetD3D11DepthStencil
  000c8	89 45 f4	 mov	 DWORD PTR _pDS$19[ebp], eax
; Line 2958
  000cb	83 7d f4 00	 cmp	 DWORD PTR _pDS$19[ebp], 0
  000cf	74 1e		 je	 SHORT $LN21@DXUTCleanu
  000d1	8b 55 f4	 mov	 edx, DWORD PTR _pDS$19[ebp]
  000d4	8b 02		 mov	 eax, DWORD PTR [edx]
  000d6	8b f4		 mov	 esi, esp
  000d8	8b 4d f4	 mov	 ecx, DWORD PTR _pDS$19[ebp]
  000db	51		 push	 ecx
  000dc	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000df	ff d2		 call	 edx
  000e1	3b f4		 cmp	 esi, esp
  000e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e8	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pDS$19[ebp], 0
$LN21@DXUTCleanu:
; Line 2959
  000ef	6a 00		 push	 0
  000f1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000f6	8b c8		 mov	 ecx, eax
  000f8	e8 00 00 00 00	 call	 ?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
; Line 2960
  000fd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00102	8b c8		 mov	 ecx, eax
  00104	e8 00 00 00 00	 call	 ?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
  00109	89 45 f0	 mov	 DWORD PTR _pDSV$18[ebp], eax
; Line 2961
  0010c	83 7d f0 00	 cmp	 DWORD PTR _pDSV$18[ebp], 0
  00110	74 1e		 je	 SHORT $LN20@DXUTCleanu
  00112	8b 45 f0	 mov	 eax, DWORD PTR _pDSV$18[ebp]
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	8b f4		 mov	 esi, esp
  00119	8b 55 f0	 mov	 edx, DWORD PTR _pDSV$18[ebp]
  0011c	52		 push	 edx
  0011d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00120	ff d0		 call	 eax
  00122	3b f4		 cmp	 esi, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00129	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pDSV$18[ebp], 0
$LN20@DXUTCleanu:
; Line 2962
  00130	6a 00		 push	 0
  00132	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00137	8b c8		 mov	 ecx, eax
  00139	e8 00 00 00 00	 call	 ?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
; Line 2965
  0013e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00143	8b c8		 mov	 ecx, eax
  00145	e8 00 00 00 00	 call	 ?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
  0014a	89 45 ec	 mov	 DWORD PTR _pRTV$17[ebp], eax
; Line 2966
  0014d	83 7d ec 00	 cmp	 DWORD PTR _pRTV$17[ebp], 0
  00151	74 1e		 je	 SHORT $LN19@DXUTCleanu
  00153	8b 4d ec	 mov	 ecx, DWORD PTR _pRTV$17[ebp]
  00156	8b 11		 mov	 edx, DWORD PTR [ecx]
  00158	8b f4		 mov	 esi, esp
  0015a	8b 45 ec	 mov	 eax, DWORD PTR _pRTV$17[ebp]
  0015d	50		 push	 eax
  0015e	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00161	ff d1		 call	 ecx
  00163	3b f4		 cmp	 esi, esp
  00165	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pRTV$17[ebp], 0
$LN19@DXUTCleanu:
; Line 2967
  00171	6a 00		 push	 0
  00173	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00178	8b c8		 mov	 ecx, eax
  0017a	e8 00 00 00 00	 call	 ?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
; Line 2970
  0017f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00184	8b c8		 mov	 ecx, eax
  00186	e8 00 00 00 00	 call	 ?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsCreated
  0018b	0f b6 d0	 movzx	 edx, al
  0018e	85 d2		 test	 edx, edx
  00190	74 3c		 je	 SHORT $LN18@DXUTCleanu
; Line 2972
  00192	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00197	8b c8		 mov	 ecx, eax
  00199	e8 00 00 00 00	 call	 ?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11DeviceDestroyedFunc
  0019e	89 45 e8	 mov	 DWORD PTR _pCallbackDeviceDestroyed$16[ebp], eax
; Line 2973
  001a1	83 7d e8 00	 cmp	 DWORD PTR _pCallbackDeviceDestroyed$16[ebp], 0
  001a5	74 19		 je	 SHORT $LN17@DXUTCleanu
; Line 2974
  001a7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001ac	8b c8		 mov	 ecx, eax
  001ae	e8 00 00 00 00	 call	 ?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext
  001b3	8b f4		 mov	 esi, esp
  001b5	50		 push	 eax
  001b6	ff 55 e8	 call	 DWORD PTR _pCallbackDeviceDestroyed$16[ebp]
  001b9	3b f4		 cmp	 esi, esp
  001bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN17@DXUTCleanu:
; Line 2975
  001c0	6a 00		 push	 0
  001c2	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001c7	8b c8		 mov	 ecx, eax
  001c9	e8 00 00 00 00	 call	 ?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsCreated
$LN18@DXUTCleanu:
; Line 2978
  001ce	6a 00		 push	 0
  001d0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001d5	8b c8		 mov	 ecx, eax
  001d7	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2981
  001dc	6a 01		 push	 1
  001de	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001e3	8b c8		 mov	 ecx, eax
  001e5	e8 00 00 00 00	 call	 ?SetReleasingSwapChain@DXUTState@@QAEX_N@Z ; DXUTState::SetReleasingSwapChain
; Line 2982
  001ea	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  001ef	89 45 e4	 mov	 DWORD PTR _pSwapChain$15[ebp], eax
; Line 2983
  001f2	83 7d e4 00	 cmp	 DWORD PTR _pSwapChain$15[ebp], 0
  001f6	74 1b		 je	 SHORT $LN16@DXUTCleanu
; Line 2985
  001f8	8b f4		 mov	 esi, esp
  001fa	6a 00		 push	 0
  001fc	6a 00		 push	 0
  001fe	8b 45 e4	 mov	 eax, DWORD PTR _pSwapChain$15[ebp]
  00201	8b 08		 mov	 ecx, DWORD PTR [eax]
  00203	8b 55 e4	 mov	 edx, DWORD PTR _pSwapChain$15[ebp]
  00206	52		 push	 edx
  00207	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0020a	ff d0		 call	 eax
  0020c	3b f4		 cmp	 esi, esp
  0020e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN16@DXUTCleanu:
; Line 2987
  00213	83 7d e4 00	 cmp	 DWORD PTR _pSwapChain$15[ebp], 0
  00217	74 1e		 je	 SHORT $LN15@DXUTCleanu
  00219	8b 4d e4	 mov	 ecx, DWORD PTR _pSwapChain$15[ebp]
  0021c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0021e	8b f4		 mov	 esi, esp
  00220	8b 45 e4	 mov	 eax, DWORD PTR _pSwapChain$15[ebp]
  00223	50		 push	 eax
  00224	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00227	ff d1		 call	 ecx
  00229	3b f4		 cmp	 esi, esp
  0022b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00230	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pSwapChain$15[ebp], 0
$LN15@DXUTCleanu:
; Line 2988
  00237	6a 00		 push	 0
  00239	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0023e	8b c8		 mov	 ecx, eax
  00240	e8 00 00 00 00	 call	 ?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ; DXUTState::SetDXGISwapChain
; Line 2989
  00245	6a 00		 push	 0
  00247	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0024c	8b c8		 mov	 ecx, eax
  0024e	e8 00 00 00 00	 call	 ?SetReleasingSwapChain@DXUTState@@QAEX_N@Z ; DXUTState::SetReleasingSwapChain
; Line 2992
  00253	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00258	8b c8		 mov	 ecx, eax
  0025a	e8 00 00 00 00	 call	 ?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ ; DXUTState::GetDXGIOutputArray
  0025f	89 45 e0	 mov	 DWORD PTR _ppOutputArray$14[ebp], eax
; Line 2993
  00262	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00267	8b c8		 mov	 ecx, eax
  00269	e8 00 00 00 00	 call	 ?GetDXGIOutputArraySize@DXUTState@@QAEIXZ ; DXUTState::GetDXGIOutputArraySize
  0026e	89 45 dc	 mov	 DWORD PTR _OutputCount$13[ebp], eax
; Line 2994
  00271	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _o$12[ebp], 0
  00278	eb 09		 jmp	 SHORT $LN14@DXUTCleanu
$LN13@DXUTCleanu:
  0027a	8b 55 d8	 mov	 edx, DWORD PTR _o$12[ebp]
  0027d	83 c2 01	 add	 edx, 1
  00280	89 55 d8	 mov	 DWORD PTR _o$12[ebp], edx
$LN14@DXUTCleanu:
  00283	8b 45 d8	 mov	 eax, DWORD PTR _o$12[ebp]
  00286	3b 45 dc	 cmp	 eax, DWORD PTR _OutputCount$13[ebp]
  00289	73 3e		 jae	 SHORT $LN12@DXUTCleanu
; Line 2995
  0028b	8b 4d d8	 mov	 ecx, DWORD PTR _o$12[ebp]
  0028e	8b 55 e0	 mov	 edx, DWORD PTR _ppOutputArray$14[ebp]
  00291	83 3c 8a 00	 cmp	 DWORD PTR [edx+ecx*4], 0
  00295	74 30		 je	 SHORT $LN11@DXUTCleanu
  00297	8b 45 d8	 mov	 eax, DWORD PTR _o$12[ebp]
  0029a	8b 4d e0	 mov	 ecx, DWORD PTR _ppOutputArray$14[ebp]
  0029d	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  002a0	8b 45 d8	 mov	 eax, DWORD PTR _o$12[ebp]
  002a3	8b 4d e0	 mov	 ecx, DWORD PTR _ppOutputArray$14[ebp]
  002a6	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  002a9	8b 0a		 mov	 ecx, DWORD PTR [edx]
  002ab	8b f4		 mov	 esi, esp
  002ad	50		 push	 eax
  002ae	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  002b1	ff d2		 call	 edx
  002b3	3b f4		 cmp	 esi, esp
  002b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ba	8b 45 d8	 mov	 eax, DWORD PTR _o$12[ebp]
  002bd	8b 4d e0	 mov	 ecx, DWORD PTR _ppOutputArray$14[ebp]
  002c0	c7 04 81 00 00
	00 00		 mov	 DWORD PTR [ecx+eax*4], 0
$LN11@DXUTCleanu:
  002c7	eb b1		 jmp	 SHORT $LN13@DXUTCleanu
$LN12@DXUTCleanu:
; Line 2996
  002c9	8b 55 e0	 mov	 edx, DWORD PTR _ppOutputArray$14[ebp]
  002cc	89 55 a0	 mov	 DWORD PTR $T2[ebp], edx
  002cf	8b 45 a0	 mov	 eax, DWORD PTR $T2[ebp]
  002d2	50		 push	 eax
  002d3	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  002d8	83 c4 04	 add	 esp, 4
; Line 2997
  002db	6a 00		 push	 0
  002dd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002e2	8b c8		 mov	 ecx, eax
  002e4	e8 00 00 00 00	 call	 ?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ; DXUTState::SetDXGIOutputArray
; Line 2998
  002e9	6a 00		 push	 0
  002eb	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002f0	8b c8		 mov	 ecx, eax
  002f2	e8 00 00 00 00	 call	 ?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z ; DXUTState::SetDXGIOutputArraySize
; Line 3001
  002f7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002fc	8b c8		 mov	 ecx, eax
  002fe	e8 00 00 00 00	 call	 ?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ ; DXUTState::GetDXGIAdapter
  00303	89 45 d4	 mov	 DWORD PTR _pAdapter$11[ebp], eax
; Line 3002
  00306	83 7d d4 00	 cmp	 DWORD PTR _pAdapter$11[ebp], 0
  0030a	74 1e		 je	 SHORT $LN10@DXUTCleanu
  0030c	8b 4d d4	 mov	 ecx, DWORD PTR _pAdapter$11[ebp]
  0030f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00311	8b f4		 mov	 esi, esp
  00313	8b 45 d4	 mov	 eax, DWORD PTR _pAdapter$11[ebp]
  00316	50		 push	 eax
  00317	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0031a	ff d1		 call	 ecx
  0031c	3b f4		 cmp	 esi, esp
  0031e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00323	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pAdapter$11[ebp], 0
$LN10@DXUTCleanu:
; Line 3003
  0032a	6a 00		 push	 0
  0032c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00331	8b c8		 mov	 ecx, eax
  00333	e8 00 00 00 00	 call	 ?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ; DXUTState::SetDXGIAdapter
; Line 3006
  00338	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  0033d	89 45 d0	 mov	 DWORD PTR _pImmediateContext$10[ebp], eax
; Line 3007
  00340	83 7d d0 00	 cmp	 DWORD PTR _pImmediateContext$10[ebp], 0
  00344	75 21		 jne	 SHORT $LN28@DXUTCleanu
  00346	8b f4		 mov	 esi, esp
  00348	68 bf 0b 00 00	 push	 3007			; 00000bbfH
  0034d	68 00 00 00 00	 push	 OFFSET $SG152686
  00352	68 00 00 00 00	 push	 OFFSET $SG152687
  00357	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0035d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00360	3b f4		 cmp	 esi, esp
  00362	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN28@DXUTCleanu:
; Line 3008
  00367	8b 45 d0	 mov	 eax, DWORD PTR _pImmediateContext$10[ebp]
  0036a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0036c	8b f4		 mov	 esi, esp
  0036e	8b 55 d0	 mov	 edx, DWORD PTR _pImmediateContext$10[ebp]
  00371	52		 push	 edx
  00372	8b 81 b8 01 00
	00		 mov	 eax, DWORD PTR [ecx+440]
  00378	ff d0		 call	 eax
  0037a	3b f4		 cmp	 esi, esp
  0037c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3009
  00381	8b 4d d0	 mov	 ecx, DWORD PTR _pImmediateContext$10[ebp]
  00384	8b 11		 mov	 edx, DWORD PTR [ecx]
  00386	8b f4		 mov	 esi, esp
  00388	8b 45 d0	 mov	 eax, DWORD PTR _pImmediateContext$10[ebp]
  0038b	50		 push	 eax
  0038c	8b 8a bc 01 00
	00		 mov	 ecx, DWORD PTR [edx+444]
  00392	ff d1		 call	 ecx
  00394	3b f4		 cmp	 esi, esp
  00396	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3012
  0039b	83 7d d0 00	 cmp	 DWORD PTR _pImmediateContext$10[ebp], 0
  0039f	74 1e		 je	 SHORT $LN9@DXUTCleanu
  003a1	8b 55 d0	 mov	 edx, DWORD PTR _pImmediateContext$10[ebp]
  003a4	8b 02		 mov	 eax, DWORD PTR [edx]
  003a6	8b f4		 mov	 esi, esp
  003a8	8b 4d d0	 mov	 ecx, DWORD PTR _pImmediateContext$10[ebp]
  003ab	51		 push	 ecx
  003ac	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  003af	ff d2		 call	 edx
  003b1	3b f4		 cmp	 esi, esp
  003b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b8	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pImmediateContext$10[ebp], 0
$LN9@DXUTCleanu:
; Line 3013
  003bf	6a 00		 push	 0
  003c1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003c6	8b c8		 mov	 ecx, eax
  003c8	e8 00 00 00 00	 call	 ?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ; DXUTState::SetD3D11DeviceContext
; Line 3015
  003cd	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ ; DXUTGetD3D11DeviceContext1
  003d2	89 45 cc	 mov	 DWORD PTR _pImmediateContext1$9[ebp], eax
; Line 3016
  003d5	83 7d cc 00	 cmp	 DWORD PTR _pImmediateContext1$9[ebp], 0
  003d9	74 1e		 je	 SHORT $LN8@DXUTCleanu
  003db	8b 45 cc	 mov	 eax, DWORD PTR _pImmediateContext1$9[ebp]
  003de	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e0	8b f4		 mov	 esi, esp
  003e2	8b 55 cc	 mov	 edx, DWORD PTR _pImmediateContext1$9[ebp]
  003e5	52		 push	 edx
  003e6	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  003e9	ff d0		 call	 eax
  003eb	3b f4		 cmp	 esi, esp
  003ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f2	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _pImmediateContext1$9[ebp], 0
$LN8@DXUTCleanu:
; Line 3017
  003f9	6a 00		 push	 0
  003fb	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00400	8b c8		 mov	 ecx, eax
  00402	e8 00 00 00 00	 call	 ?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ; DXUTState::SetD3D11DeviceContext1
; Line 3026
  00407	83 7d fc 00	 cmp	 DWORD PTR _pd3dDevice$[ebp], 0
  0040b	0f 84 e7 00 00
	00		 je	 $LN7@DXUTCleanu
; Line 3029
  00411	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _d3dDebug$8[ebp], 0
; Line 3030
  00418	8b f4		 mov	 esi, esp
  0041a	8d 4d c4	 lea	 ecx, DWORD PTR _d3dDebug$8[ebp]
  0041d	51		 push	 ecx
  0041e	68 00 00 00 00	 push	 OFFSET __GUID_79cf2233_7536_4948_9d36_1e4692dc5760
  00423	8b 55 fc	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00426	8b 02		 mov	 eax, DWORD PTR [edx]
  00428	8b 4d fc	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0042b	51		 push	 ecx
  0042c	8b 10		 mov	 edx, DWORD PTR [eax]
  0042e	ff d2		 call	 edx
  00430	3b f4		 cmp	 esi, esp
  00432	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00437	85 c0		 test	 eax, eax
  00439	7c 3b		 jl	 SHORT $LN6@DXUTCleanu
; Line 3032
  0043b	6a 02		 push	 2
  0043d	6a 01		 push	 1
  0043f	e8 00 00 00 00	 call	 _|
  00444	83 c4 08	 add	 esp, 8
  00447	8b f4		 mov	 esi, esp
  00449	50		 push	 eax
  0044a	8b 45 c4	 mov	 eax, DWORD PTR _d3dDebug$8[ebp]
  0044d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0044f	8b 55 c4	 mov	 edx, DWORD PTR _d3dDebug$8[ebp]
  00452	52		 push	 edx
  00453	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00456	ff d0		 call	 eax
  00458	3b f4		 cmp	 esi, esp
  0045a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3033
  0045f	8b 4d c4	 mov	 ecx, DWORD PTR _d3dDebug$8[ebp]
  00462	8b 11		 mov	 edx, DWORD PTR [ecx]
  00464	8b f4		 mov	 esi, esp
  00466	8b 45 c4	 mov	 eax, DWORD PTR _d3dDebug$8[ebp]
  00469	50		 push	 eax
  0046a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0046d	ff d1		 call	 ecx
  0046f	3b f4		 cmp	 esi, esp
  00471	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@DXUTCleanu:
; Line 3037
  00476	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ ; DXUTGetD3D11Device1
  0047b	89 45 bc	 mov	 DWORD PTR _pd3dDevice1$7[ebp], eax
; Line 3038
  0047e	83 7d bc 00	 cmp	 DWORD PTR _pd3dDevice1$7[ebp], 0
  00482	74 1e		 je	 SHORT $LN5@DXUTCleanu
  00484	8b 55 bc	 mov	 edx, DWORD PTR _pd3dDevice1$7[ebp]
  00487	8b 02		 mov	 eax, DWORD PTR [edx]
  00489	8b f4		 mov	 esi, esp
  0048b	8b 4d bc	 mov	 ecx, DWORD PTR _pd3dDevice1$7[ebp]
  0048e	51		 push	 ecx
  0048f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00492	ff d2		 call	 edx
  00494	3b f4		 cmp	 esi, esp
  00496	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0049b	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _pd3dDevice1$7[ebp], 0
$LN5@DXUTCleanu:
; Line 3039
  004a2	6a 00		 push	 0
  004a4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  004a9	8b c8		 mov	 ecx, eax
  004ab	e8 00 00 00 00	 call	 ?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ; DXUTState::SetD3D11Device1
; Line 3049
  004b0	8b 45 fc	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  004b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b5	8b f4		 mov	 esi, esp
  004b7	8b 55 fc	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  004ba	52		 push	 edx
  004bb	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  004be	ff d0		 call	 eax
  004c0	3b f4		 cmp	 esi, esp
  004c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c7	89 45 b8	 mov	 DWORD PTR _references$6[ebp], eax
; Line 3050
  004ca	83 7d b8 00	 cmp	 DWORD PTR _references$6[ebp], 0
  004ce	76 28		 jbe	 SHORT $LN7@DXUTCleanu
; Line 3052
  004d0	68 04 09 04 80	 push	 -2147219196		; 80040904H
  004d5	e8 00 00 00 00	 call	 ?DXUTDisplayErrorMessage@@YAXJ@Z ; DXUTDisplayErrorMessage
  004da	83 c4 04	 add	 esp, 4
; Line 3053
  004dd	6a 00		 push	 0
  004df	68 00 00 00 00	 push	 OFFSET $SG152711
  004e4	68 04 09 04 80	 push	 -2147219196		; 80040904H
  004e9	68 ed 0b 00 00	 push	 3053			; 00000bedH
  004ee	68 00 00 00 00	 push	 OFFSET $SG152712
  004f3	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
$LN7@DXUTCleanu:
; Line 3056
  004f8	6a 00		 push	 0
  004fa	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  004ff	8b c8		 mov	 ecx, eax
  00501	e8 00 00 00 00	 call	 ?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ; DXUTState::SetD3D11Device
; Line 3060
  00506	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _dxgiDebug$5[ebp], 0
; Line 3061
  0050d	8d 4d b0	 lea	 ecx, DWORD PTR _dxgiDebug$5[ebp]
  00510	51		 push	 ecx
  00511	68 00 00 00 00	 push	 OFFSET _IID_IDXGIDebug
  00516	e8 00 00 00 00	 call	 ?DXUT_Dynamic_DXGIGetDebugInterface@@YGJABU_GUID@@PAPAX@Z ; DXUT_Dynamic_DXGIGetDebugInterface
  0051b	85 c0		 test	 eax, eax
  0051d	7c 56		 jl	 SHORT $LN3@DXUTCleanu
; Line 3063
  0051f	8b f4		 mov	 esi, esp
  00521	6a 03		 push	 3
  00523	83 ec 10	 sub	 esp, 16			; 00000010H
  00526	8b d4		 mov	 edx, esp
  00528	a1 00 00 00 00	 mov	 eax, DWORD PTR _DXGI_DEBUG_ALL
  0052d	89 02		 mov	 DWORD PTR [edx], eax
  0052f	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _DXGI_DEBUG_ALL+4
  00535	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00538	a1 08 00 00 00	 mov	 eax, DWORD PTR _DXGI_DEBUG_ALL+8
  0053d	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00540	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _DXGI_DEBUG_ALL+12
  00546	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00549	8b 55 b0	 mov	 edx, DWORD PTR _dxgiDebug$5[ebp]
  0054c	8b 02		 mov	 eax, DWORD PTR [edx]
  0054e	8b 4d b0	 mov	 ecx, DWORD PTR _dxgiDebug$5[ebp]
  00551	51		 push	 ecx
  00552	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00555	ff d2		 call	 edx
  00557	3b f4		 cmp	 esi, esp
  00559	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3064
  0055e	8b 45 b0	 mov	 eax, DWORD PTR _dxgiDebug$5[ebp]
  00561	8b 08		 mov	 ecx, DWORD PTR [eax]
  00563	8b f4		 mov	 esi, esp
  00565	8b 55 b0	 mov	 edx, DWORD PTR _dxgiDebug$5[ebp]
  00568	52		 push	 edx
  00569	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0056c	ff d0		 call	 eax
  0056e	3b f4		 cmp	 esi, esp
  00570	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@DXUTCleanu:
; Line 3069
  00575	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bReleaseSettings$[ebp]
  00579	85 c9		 test	 ecx, ecx
  0057b	74 3c		 je	 SHORT $LN2@DXUTCleanu
; Line 3071
  0057d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00582	8b c8		 mov	 ecx, eax
  00584	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00589	89 45 a8	 mov	 DWORD PTR _pOldDeviceSettings$4[ebp], eax
; Line 3072
  0058c	83 7d a8 00	 cmp	 DWORD PTR _pOldDeviceSettings$4[ebp], 0
  00590	74 19		 je	 SHORT $LN1@DXUTCleanu
  00592	8b 55 a8	 mov	 edx, DWORD PTR _pOldDeviceSettings$4[ebp]
  00595	89 55 9c	 mov	 DWORD PTR $T1[ebp], edx
  00598	8b 45 9c	 mov	 eax, DWORD PTR $T1[ebp]
  0059b	50		 push	 eax
  0059c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005a1	83 c4 04	 add	 esp, 4
  005a4	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _pOldDeviceSettings$4[ebp], 0
$LN1@DXUTCleanu:
; Line 3073
  005ab	6a 00		 push	 0
  005ad	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005b2	8b c8		 mov	 ecx, eax
  005b4	e8 00 00 00 00	 call	 ?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
$LN2@DXUTCleanu:
; Line 3076
  005b9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005be	8b c8		 mov	 ecx, eax
  005c0	e8 00 00 00 00	 call	 ?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
  005c5	89 45 a4	 mov	 DWORD PTR _pBackBufferSurfaceDesc$3[ebp], eax
; Line 3077
  005c8	33 c9		 xor	 ecx, ecx
  005ca	8b 55 a4	 mov	 edx, DWORD PTR _pBackBufferSurfaceDesc$3[ebp]
  005cd	89 0a		 mov	 DWORD PTR [edx], ecx
  005cf	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  005d2	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  005d5	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  005d8	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
; Line 3079
  005db	6a 00		 push	 0
  005dd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005e2	8b c8		 mov	 ecx, eax
  005e4	e8 00 00 00 00	 call	 ?SetDeviceCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceCreated
$LN26@DXUTCleanu:
; Line 3081
  005e9	52		 push	 edx
  005ea	8b cd		 mov	 ecx, ebp
  005ec	50		 push	 eax
  005ed	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN32@DXUTCleanu
  005f3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  005f8	58		 pop	 eax
  005f9	5a		 pop	 edx
  005fa	5f		 pop	 edi
  005fb	5e		 pop	 esi
  005fc	83 c4 68	 add	 esp, 104		; 00000068H
  005ff	3b ec		 cmp	 ebp, esp
  00601	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00606	8b e5		 mov	 esp, ebp
  00608	5d		 pop	 ebp
  00609	c3		 ret	 0
  0060a	8b ff		 npad	 2
$LN32@DXUTCleanu:
  0060c	02 00 00 00	 DD	 2
  00610	00 00 00 00	 DD	 $LN31@DXUTCleanu
$LN31@DXUTCleanu:
  00614	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00618	04 00 00 00	 DD	 4
  0061c	00 00 00 00	 DD	 $LN29@DXUTCleanu
  00620	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00624	04 00 00 00	 DD	 4
  00628	00 00 00 00	 DD	 $LN30@DXUTCleanu
$LN30@DXUTCleanu:
  0062c	64		 DB	 100			; 00000064H
  0062d	78		 DB	 120			; 00000078H
  0062e	67		 DB	 103			; 00000067H
  0062f	69		 DB	 105			; 00000069H
  00630	44		 DB	 68			; 00000044H
  00631	65		 DB	 101			; 00000065H
  00632	62		 DB	 98			; 00000062H
  00633	75		 DB	 117			; 00000075H
  00634	67		 DB	 103			; 00000067H
  00635	00		 DB	 0
$LN29@DXUTCleanu:
  00636	64		 DB	 100			; 00000064H
  00637	33		 DB	 51			; 00000033H
  00638	64		 DB	 100			; 00000064H
  00639	44		 DB	 68			; 00000044H
  0063a	65		 DB	 101			; 00000065H
  0063b	62		 DB	 98			; 00000062H
  0063c	75		 DB	 117			; 00000075H
  0063d	67		 DB	 103			; 00000067H
  0063e	00		 DB	 0
?DXUTCleanup3DEnvironment@@YAX_N@Z ENDP			; DXUTCleanup3DEnvironment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -348						; size = 100
_newOutput$2 = -244					; size = 4
$T3 = -236						; size = 100
_deviceSettings$4 = -132				; size = 100
_newOrdinal$5 = -24					; size = 4
_hAdapterMonitor$ = -16					; size = 4
_hWindowMonitor$ = -12					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTCheckForWindowChangingMonitors@@YAXXZ PROC		; DXUTCheckForWindowChangingMonitors
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3768
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd a4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-348]
  00011	b9 57 00 00 00	 mov	 ecx, 87			; 00000057H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3771
  00027	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002c	8b c8		 mov	 ecx, eax
  0002e	e8 00 00 00 00	 call	 ?GetAutoChangeAdapter@DXUTState@@QAE_NXZ ; DXUTState::GetAutoChangeAdapter
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 32		 je	 SHORT $LN8@DXUTCheckF
  0003a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003f	8b c8		 mov	 ecx, eax
  00041	e8 00 00 00 00	 call	 ?GetIgnoreSizeChange@DXUTState@@QAE_NXZ ; DXUTState::GetIgnoreSizeChange
  00046	0f b6 c8	 movzx	 ecx, al
  00049	85 c9		 test	 ecx, ecx
  0004b	75 1f		 jne	 SHORT $LN8@DXUTCheckF
  0004d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00052	8b c8		 mov	 ecx, eax
  00054	e8 00 00 00 00	 call	 ?GetDeviceCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceCreated
  00059	0f b6 d0	 movzx	 edx, al
  0005c	85 d2		 test	 edx, edx
  0005e	74 0c		 je	 SHORT $LN8@DXUTCheckF
  00060	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00065	0f b6 c0	 movzx	 eax, al
  00068	85 c0		 test	 eax, eax
  0006a	75 05		 jne	 SHORT $LN9@DXUTCheckF
$LN8@DXUTCheckF:
; Line 3772
  0006c	e9 f6 00 00 00	 jmp	 $LN10@DXUTCheckF
$LN9@DXUTCheckF:
; Line 3775
  00071	6a 01		 push	 1
  00073	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ; DXUTMonitorFromWindow
  0007e	89 45 f4	 mov	 DWORD PTR _hWindowMonitor$[ebp], eax
; Line 3776
  00081	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ ; DXUTState::GetAdapterMonitor
  0008d	89 45 f0	 mov	 DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 3777
  00090	8b 4d f4	 mov	 ecx, DWORD PTR _hWindowMonitor$[ebp]
  00093	3b 4d f0	 cmp	 ecx, DWORD PTR _hAdapterMonitor$[ebp]
  00096	0f 84 cb 00 00
	00		 je	 $LN10@DXUTCheckF
; Line 3780
  0009c	8d 55 e8	 lea	 edx, DWORD PTR _newOrdinal$5[ebp]
  0009f	52		 push	 edx
  000a0	8b 45 f4	 mov	 eax, DWORD PTR _hWindowMonitor$[ebp]
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetAdapterOrdinalFromMonitor
  000a9	83 c4 08	 add	 esp, 8
  000ac	85 c0		 test	 eax, eax
  000ae	0f 8c b3 00 00
	00		 jl	 $LN10@DXUTCheckF
; Line 3783
  000b4	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000ba	51		 push	 ecx
  000bb	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  000c0	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000c5	8b f0		 mov	 esi, eax
  000c7	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR $T3[ebp]
  000cd	f3 a5		 rep movsd
  000cf	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000d4	8d b5 14 ff ff
	ff		 lea	 esi, DWORD PTR $T3[ebp]
  000da	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR _deviceSettings$4[ebp]
  000e0	f3 a5		 rep movsd
; Line 3784
  000e2	8b 55 e8	 mov	 edx, DWORD PTR _newOrdinal$5[ebp]
  000e5	89 55 80	 mov	 DWORD PTR _deviceSettings$4[ebp+4], edx
; Line 3786
  000e8	8d 85 0c ff ff
	ff		 lea	 eax, DWORD PTR _newOutput$2[ebp]
  000ee	50		 push	 eax
  000ef	8b 4d f4	 mov	 ecx, DWORD PTR _hWindowMonitor$[ebp]
  000f2	51		 push	 ecx
  000f3	e8 00 00 00 00	 call	 ?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetOutputOrdinalFromMonitor
  000f8	83 c4 08	 add	 esp, 8
  000fb	85 c0		 test	 eax, eax
  000fd	7c 09		 jl	 SHORT $LN5@DXUTCheckF
; Line 3787
  000ff	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _newOutput$2[ebp]
  00105	89 55 88	 mov	 DWORD PTR _deviceSettings$4[ebp+12], edx
$LN5@DXUTCheckF:
; Line 3789
  00108	6a 00		 push	 0
  0010a	6a 00		 push	 0
  0010c	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _deviceSettings$4[ebp]
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
  00118	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011b	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 3790
  0011e	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00122	7c 43		 jl	 SHORT $LN10@DXUTCheckF
; Line 3794
  00124	6a 00		 push	 0
  00126	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _deviceSettings$4[ebp]
  0012c	51		 push	 ecx
  0012d	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  00132	83 c4 08	 add	 esp, 8
  00135	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 3797
  00138	81 7d f8 04 40
	00 80		 cmp	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
  0013f	75 10		 jne	 SHORT $LN3@DXUTCheckF
; Line 3800
  00141	6a 00		 push	 0
  00143	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00148	8b c8		 mov	 ecx, eax
  0014a	e8 00 00 00 00	 call	 ?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z ; DXUTState::SetAutoChangeAdapter
  0014f	eb 16		 jmp	 SHORT $LN10@DXUTCheckF
$LN3@DXUTCheckF:
; Line 3802
  00151	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00155	7d 10		 jge	 SHORT $LN10@DXUTCheckF
; Line 3804
  00157	6a 00		 push	 0
  00159	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
; Line 3805
  0015e	6a 00		 push	 0
  00160	6a 00		 push	 0
  00162	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
$LN10@DXUTCheckF:
; Line 3811
  00167	52		 push	 edx
  00168	8b cd		 mov	 ecx, ebp
  0016a	50		 push	 eax
  0016b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@DXUTCheckF
  00171	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00176	58		 pop	 eax
  00177	5a		 pop	 edx
  00178	5f		 pop	 edi
  00179	5e		 pop	 esi
  0017a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017d	33 cd		 xor	 ecx, ebp
  0017f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00184	81 c4 5c 01 00
	00		 add	 esp, 348		; 0000015cH
  0018a	3b ec		 cmp	 ebp, esp
  0018c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00191	8b e5		 mov	 esp, ebp
  00193	5d		 pop	 ebp
  00194	c3		 ret	 0
  00195	8d 49 00	 npad	 3
$LN16@DXUTCheckF:
  00198	03 00 00 00	 DD	 3
  0019c	00 00 00 00	 DD	 $LN15@DXUTCheckF
$LN15@DXUTCheckF:
  001a0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  001a4	04 00 00 00	 DD	 4
  001a8	00 00 00 00	 DD	 $LN12@DXUTCheckF
  001ac	7c ff ff ff	 DD	 -132			; ffffff7cH
  001b0	64 00 00 00	 DD	 100			; 00000064H
  001b4	00 00 00 00	 DD	 $LN13@DXUTCheckF
  001b8	0c ff ff ff	 DD	 -244			; ffffff0cH
  001bc	04 00 00 00	 DD	 4
  001c0	00 00 00 00	 DD	 $LN14@DXUTCheckF
$LN14@DXUTCheckF:
  001c4	6e		 DB	 110			; 0000006eH
  001c5	65		 DB	 101			; 00000065H
  001c6	77		 DB	 119			; 00000077H
  001c7	4f		 DB	 79			; 0000004fH
  001c8	75		 DB	 117			; 00000075H
  001c9	74		 DB	 116			; 00000074H
  001ca	70		 DB	 112			; 00000070H
  001cb	75		 DB	 117			; 00000075H
  001cc	74		 DB	 116			; 00000074H
  001cd	00		 DB	 0
$LN13@DXUTCheckF:
  001ce	64		 DB	 100			; 00000064H
  001cf	65		 DB	 101			; 00000065H
  001d0	76		 DB	 118			; 00000076H
  001d1	69		 DB	 105			; 00000069H
  001d2	63		 DB	 99			; 00000063H
  001d3	65		 DB	 101			; 00000065H
  001d4	53		 DB	 83			; 00000053H
  001d5	65		 DB	 101			; 00000065H
  001d6	74		 DB	 116			; 00000074H
  001d7	74		 DB	 116			; 00000074H
  001d8	69		 DB	 105			; 00000069H
  001d9	6e		 DB	 110			; 0000006eH
  001da	67		 DB	 103			; 00000067H
  001db	73		 DB	 115			; 00000073H
  001dc	00		 DB	 0
$LN12@DXUTCheckF:
  001dd	6e		 DB	 110			; 0000006eH
  001de	65		 DB	 101			; 00000065H
  001df	77		 DB	 119			; 00000077H
  001e0	4f		 DB	 79			; 0000004fH
  001e1	72		 DB	 114			; 00000072H
  001e2	64		 DB	 100			; 00000064H
  001e3	69		 DB	 105			; 00000069H
  001e4	6e		 DB	 110			; 0000006eH
  001e5	61		 DB	 97			; 00000061H
  001e6	6c		 DB	 108			; 0000006cH
  001e7	00		 DB	 0
?DXUTCheckForWindowChangingMonitors@@YAXXZ ENDP		; DXUTCheckForWindowChangingMonitors
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTCheckForWindowSizeChange@@YAXXZ PROC		; DXUTCheckForWindowSizeChange
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3756
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetIgnoreSizeChange@DXUTState@@QAE_NXZ ; DXUTState::GetIgnoreSizeChange
  0000f	0f b6 c0	 movzx	 eax, al
  00012	85 c0		 test	 eax, eax
  00014	75 13		 jne	 SHORT $LN1@DXUTCheckF
  00016	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001b	8b c8		 mov	 ecx, eax
  0001d	e8 00 00 00 00	 call	 ?GetDeviceCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceCreated
  00022	0f b6 c8	 movzx	 ecx, al
  00025	85 c9		 test	 ecx, ecx
  00027	75 02		 jne	 SHORT $LN2@DXUTCheckF
$LN1@DXUTCheckF:
; Line 3757
  00029	eb 05		 jmp	 SHORT $LN3@DXUTCheckF
$LN2@DXUTCheckF:
; Line 3759
  0002b	e8 00 00 00 00	 call	 ?DXUTCheckForDXGIBufferChange@@YAXXZ ; DXUTCheckForDXGIBufferChange
$LN3@DXUTCheckF:
; Line 3760
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?DXUTCheckForWindowSizeChange@@YAXXZ ENDP		; DXUTCheckForWindowSizeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bFullScreen$1 = -12					; size = 4
_pSwapChain$2 = -4					; size = 4
?DXUTCheckForDXGIBufferChange@@YAXXZ PROC		; DXUTCheckForDXGIBufferChange
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3726
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 3727
  00018	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  0001d	85 c0		 test	 eax, eax
  0001f	0f 84 91 00 00
	00		 je	 $LN3@DXUTCheckF
  00025	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetReleasingSwapChain@DXUTState@@QAE_NXZ ; DXUTState::GetReleasingSwapChain
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	75 7e		 jne	 SHORT $LN3@DXUTCheckF
; Line 3730
  00038	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  0003d	89 45 fc	 mov	 DWORD PTR _pSwapChain$2[ebp], eax
; Line 3731
  00040	83 7d fc 00	 cmp	 DWORD PTR _pSwapChain$2[ebp], 0
  00044	75 21		 jne	 SHORT $LN5@DXUTCheckF
  00046	8b f4		 mov	 esi, esp
  00048	68 93 0e 00 00	 push	 3731			; 00000e93H
  0004d	68 00 00 00 00	 push	 OFFSET $SG153267
  00052	68 00 00 00 00	 push	 OFFSET $SG153268
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	3b f4		 cmp	 esi, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@DXUTCheckF:
; Line 3739
  00067	8b f4		 mov	 esi, esp
  00069	6a 00		 push	 0
  0006b	8d 55 f4	 lea	 edx, DWORD PTR _bFullScreen$1[ebp]
  0006e	52		 push	 edx
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _pSwapChain$2[ebp]
  00072	8b 08		 mov	 ecx, DWORD PTR [eax]
  00074	8b 55 fc	 mov	 edx, DWORD PTR _pSwapChain$2[ebp]
  00077	52		 push	 edx
  00078	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  0007b	ff d0		 call	 eax
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	85 c0		 test	 eax, eax
  00086	7d 07		 jge	 SHORT $LN1@DXUTCheckF
; Line 3740
  00088	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bFullScreen$1[ebp], 0
$LN1@DXUTCheckF:
; Line 3743
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _bFullScreen$1[ebp]
  00092	51		 push	 ecx
  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	e8 00 00 00 00	 call	 ?DXUTResizeDXGIBuffers@@YAXIIH@Z ; DXUTResizeDXGIBuffers
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 3745
  0009f	8b f4		 mov	 esi, esp
  000a1	6a 05		 push	 5
  000a3	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  000a8	50		 push	 eax
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  000af	3b f4		 cmp	 esi, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@DXUTCheckF:
; Line 3747
  000b6	52		 push	 edx
  000b7	8b cd		 mov	 ecx, ebp
  000b9	50		 push	 eax
  000ba	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@DXUTCheckF
  000c0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c5	58		 pop	 eax
  000c6	5a		 pop	 edx
  000c7	5e		 pop	 esi
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	3b ec		 cmp	 ebp, esp
  000cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
  000d6	8b ff		 npad	 2
$LN8@DXUTCheckF:
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN7@DXUTCheckF
$LN7@DXUTCheckF:
  000e0	f4 ff ff ff	 DD	 -12			; fffffff4H
  000e4	04 00 00 00	 DD	 4
  000e8	00 00 00 00	 DD	 $LN6@DXUTCheckF
$LN6@DXUTCheckF:
  000ec	62		 DB	 98			; 00000062H
  000ed	46		 DB	 70			; 00000046H
  000ee	75		 DB	 117			; 00000075H
  000ef	6c		 DB	 108			; 0000006cH
  000f0	6c		 DB	 108			; 0000006cH
  000f1	53		 DB	 83			; 00000053H
  000f2	63		 DB	 99			; 00000063H
  000f3	72		 DB	 114			; 00000072H
  000f4	65		 DB	 101			; 00000065H
  000f5	65		 DB	 101			; 00000065H
  000f6	6e		 DB	 110			; 0000006eH
  000f7	00		 DB	 0
?DXUTCheckForDXGIBufferChange@@YAXXZ ENDP		; DXUTCheckForDXGIBufferChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv92 = -80						; size = 4
_pCallbackSwapChainResized$ = -76			; size = 4
_pBackBufferSurfaceDesc$ = -72				; size = 4
_Flags$ = -68						; size = 4
_pRTV$ = -64						; size = 4
_pDSV$ = -60						; size = 4
_pDS$ = -56						; size = 4
_pCallbackSwapChainReleasing$ = -52			; size = 4
_pd3dImmediateContext$ = -48				; size = 4
_pd3dDevice$ = -44					; size = 4
_pSwapChain$ = -40					; size = 4
_pDevSettings$ = -36					; size = 4
_rcCurrentClient$ = -28					; size = 16
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_Width$ = 8						; size = 4
_Height$ = 12						; size = 4
_bFullScreen$ = 16					; size = 4
?DXUTResizeDXGIBuffers@@YAXIIH@Z PROC			; DXUTResizeDXGIBuffers
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3608
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000b	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3609
  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 3611
  00028	8b f4		 mov	 esi, esp
  0002a	8d 45 e4	 lea	 eax, DWORD PTR _rcCurrentClient$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00033	50		 push	 eax
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3613
  00041	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00046	8b c8		 mov	 ecx, eax
  00048	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  0004d	89 45 dc	 mov	 DWORD PTR _pDevSettings$[ebp], eax
; Line 3614
  00050	83 7d dc 00	 cmp	 DWORD PTR _pDevSettings$[ebp], 0
  00054	75 21		 jne	 SHORT $LN16@DXUTResize
  00056	8b f4		 mov	 esi, esp
  00058	68 1e 0e 00 00	 push	 3614			; 00000e1eH
  0005d	68 00 00 00 00	 push	 OFFSET $SG153200
  00062	68 00 00 00 00	 push	 OFFSET $SG153201
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN16@DXUTResize:
; Line 3617
  00077	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  0007c	89 45 d8	 mov	 DWORD PTR _pSwapChain$[ebp], eax
; Line 3619
  0007f	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00084	89 45 d4	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 3620
  00087	83 7d d4 00	 cmp	 DWORD PTR _pd3dDevice$[ebp], 0
  0008b	75 21		 jne	 SHORT $LN17@DXUTResize
  0008d	8b f4		 mov	 esi, esp
  0008f	68 24 0e 00 00	 push	 3620			; 00000e24H
  00094	68 00 00 00 00	 push	 OFFSET $SG153207
  00099	68 00 00 00 00	 push	 OFFSET $SG153208
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000a4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN17@DXUTResize:
; Line 3623
  000ae	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  000b3	89 45 d0	 mov	 DWORD PTR _pd3dImmediateContext$[ebp], eax
; Line 3624
  000b6	83 7d d0 00	 cmp	 DWORD PTR _pd3dImmediateContext$[ebp], 0
  000ba	75 21		 jne	 SHORT $LN18@DXUTResize
  000bc	8b f4		 mov	 esi, esp
  000be	68 28 0e 00 00	 push	 3624			; 00000e28H
  000c3	68 00 00 00 00	 push	 OFFSET $SG153212
  000c8	68 00 00 00 00	 push	 OFFSET $SG153213
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN18@DXUTResize:
; Line 3628
  000dd	83 7d 10 00	 cmp	 DWORD PTR _bFullScreen$[ebp], 0
  000e1	75 09		 jne	 SHORT $LN19@DXUTResize
  000e3	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv92[ebp], 1
  000ea	eb 07		 jmp	 SHORT $LN20@DXUTResize
$LN19@DXUTResize:
  000ec	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN20@DXUTResize:
  000f3	8b 4d dc	 mov	 ecx, DWORD PTR _pDevSettings$[ebp]
  000f6	8b 55 b0	 mov	 edx, DWORD PTR tv92[ebp]
  000f9	89 51 40	 mov	 DWORD PTR [ecx+64], edx
; Line 3631
  000fc	6a 01		 push	 1
  000fe	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00103	8b c8		 mov	 ecx, eax
  00105	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3633
  0010a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0010f	8b c8		 mov	 ecx, eax
  00111	e8 00 00 00 00	 call	 ?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
  00116	89 45 cc	 mov	 DWORD PTR _pCallbackSwapChainReleasing$[ebp], eax
; Line 3634
  00119	83 7d cc 00	 cmp	 DWORD PTR _pCallbackSwapChainReleasing$[ebp], 0
  0011d	74 19		 je	 SHORT $LN13@DXUTResize
; Line 3635
  0011f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00124	8b c8		 mov	 ecx, eax
  00126	e8 00 00 00 00	 call	 ?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
  0012b	8b f4		 mov	 esi, esp
  0012d	50		 push	 eax
  0012e	ff 55 cc	 call	 DWORD PTR _pCallbackSwapChainReleasing$[ebp]
  00131	3b f4		 cmp	 esi, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@DXUTResize:
; Line 3636
  00138	6a 00		 push	 0
  0013a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0013f	8b c8		 mov	 ecx, eax
  00141	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3639
  00146	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0014b	8b c8		 mov	 ecx, eax
  0014d	e8 00 00 00 00	 call	 ?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ; DXUTState::GetD3D11DepthStencil
  00152	89 45 c8	 mov	 DWORD PTR _pDS$[ebp], eax
; Line 3640
  00155	83 7d c8 00	 cmp	 DWORD PTR _pDS$[ebp], 0
  00159	74 1e		 je	 SHORT $LN12@DXUTResize
  0015b	8b 45 c8	 mov	 eax, DWORD PTR _pDS$[ebp]
  0015e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00160	8b f4		 mov	 esi, esp
  00162	8b 55 c8	 mov	 edx, DWORD PTR _pDS$[ebp]
  00165	52		 push	 edx
  00166	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00169	ff d0		 call	 eax
  0016b	3b f4		 cmp	 esi, esp
  0016d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00172	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pDS$[ebp], 0
$LN12@DXUTResize:
; Line 3641
  00179	6a 00		 push	 0
  0017b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00180	8b c8		 mov	 ecx, eax
  00182	e8 00 00 00 00	 call	 ?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
; Line 3642
  00187	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0018c	8b c8		 mov	 ecx, eax
  0018e	e8 00 00 00 00	 call	 ?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
  00193	89 45 c4	 mov	 DWORD PTR _pDSV$[ebp], eax
; Line 3643
  00196	83 7d c4 00	 cmp	 DWORD PTR _pDSV$[ebp], 0
  0019a	74 1e		 je	 SHORT $LN11@DXUTResize
  0019c	8b 4d c4	 mov	 ecx, DWORD PTR _pDSV$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b f4		 mov	 esi, esp
  001a3	8b 45 c4	 mov	 eax, DWORD PTR _pDSV$[ebp]
  001a6	50		 push	 eax
  001a7	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  001aa	ff d1		 call	 ecx
  001ac	3b f4		 cmp	 esi, esp
  001ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b3	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _pDSV$[ebp], 0
$LN11@DXUTResize:
; Line 3644
  001ba	6a 00		 push	 0
  001bc	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001c1	8b c8		 mov	 ecx, eax
  001c3	e8 00 00 00 00	 call	 ?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
; Line 3647
  001c8	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001cd	8b c8		 mov	 ecx, eax
  001cf	e8 00 00 00 00	 call	 ?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
  001d4	89 45 c0	 mov	 DWORD PTR _pRTV$[ebp], eax
; Line 3648
  001d7	83 7d c0 00	 cmp	 DWORD PTR _pRTV$[ebp], 0
  001db	74 1e		 je	 SHORT $LN10@DXUTResize
  001dd	8b 55 c0	 mov	 edx, DWORD PTR _pRTV$[ebp]
  001e0	8b 02		 mov	 eax, DWORD PTR [edx]
  001e2	8b f4		 mov	 esi, esp
  001e4	8b 4d c0	 mov	 ecx, DWORD PTR _pRTV$[ebp]
  001e7	51		 push	 ecx
  001e8	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001eb	ff d2		 call	 edx
  001ed	3b f4		 cmp	 esi, esp
  001ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f4	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pRTV$[ebp], 0
$LN10@DXUTResize:
; Line 3649
  001fb	6a 00		 push	 0
  001fd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00202	8b c8		 mov	 ecx, eax
  00204	e8 00 00 00 00	 call	 ?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
; Line 3656
  00209	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _Flags$[ebp], 0
; Line 3657
  00210	83 7d 10 00	 cmp	 DWORD PTR _bFullScreen$[ebp], 0
  00214	74 07		 je	 SHORT $LN9@DXUTResize
; Line 3658
  00216	c7 45 bc 02 00
	00 00		 mov	 DWORD PTR _Flags$[ebp], 2
$LN9@DXUTResize:
; Line 3665
  0021d	8b f4		 mov	 esi, esp
  0021f	8b 45 bc	 mov	 eax, DWORD PTR _Flags$[ebp]
  00222	50		 push	 eax
  00223	8b 4d dc	 mov	 ecx, DWORD PTR _pDevSettings$[ebp]
  00226	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00229	52		 push	 edx
  0022a	8b 45 0c	 mov	 eax, DWORD PTR _Height$[ebp]
  0022d	50		 push	 eax
  0022e	8b 4d 08	 mov	 ecx, DWORD PTR _Width$[ebp]
  00231	51		 push	 ecx
  00232	8b 55 dc	 mov	 edx, DWORD PTR _pDevSettings$[ebp]
  00235	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00238	50		 push	 eax
  00239	8b 4d d8	 mov	 ecx, DWORD PTR _pSwapChain$[ebp]
  0023c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0023e	8b 45 d8	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  00241	50		 push	 eax
  00242	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  00245	ff d1		 call	 ecx
  00247	3b f4		 cmp	 esi, esp
  00249	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0024e	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  00251	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00255	7d 1a		 jge	 SHORT $LN8@DXUTResize
  00257	6a 01		 push	 1
  00259	68 00 00 00 00	 push	 OFFSET $SG153230
  0025e	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  00261	52		 push	 edx
  00262	68 51 0e 00 00	 push	 3665			; 00000e51H
  00267	68 00 00 00 00	 push	 OFFSET $SG153231
  0026c	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
$LN8@DXUTResize:
; Line 3667
  00271	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00276	8b c8		 mov	 ecx, eax
  00278	e8 00 00 00 00	 call	 ?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ ; DXUTState::GetDoNotStoreBufferSize
  0027d	0f b6 c0	 movzx	 eax, al
  00280	85 c0		 test	 eax, eax
  00282	75 12		 jne	 SHORT $LN7@DXUTResize
; Line 3669
  00284	8b 4d dc	 mov	 ecx, DWORD PTR _pDevSettings$[ebp]
  00287	8b 55 ec	 mov	 edx, DWORD PTR _rcCurrentClient$[ebp+8]
  0028a	89 51 10	 mov	 DWORD PTR [ecx+16], edx
; Line 3670
  0028d	8b 45 dc	 mov	 eax, DWORD PTR _pDevSettings$[ebp]
  00290	8b 4d f0	 mov	 ecx, DWORD PTR _rcCurrentClient$[ebp+12]
  00293	89 48 14	 mov	 DWORD PTR [eax+20], ecx
$LN7@DXUTResize:
; Line 3674
  00296	e8 00 00 00 00	 call	 ?DXUTUpdateBackBufferDesc@@YAXXZ ; DXUTUpdateBackBufferDesc
; Line 3677
  0029b	e8 00 00 00 00	 call	 ?DXUTUpdateStaticFrameStats@@YAXXZ ; DXUTUpdateStaticFrameStats
; Line 3680
  002a0	8b 55 dc	 mov	 edx, DWORD PTR _pDevSettings$[ebp]
  002a3	52		 push	 edx
  002a4	8b 45 d0	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  002a7	50		 push	 eax
  002a8	8b 4d d4	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  002ab	51		 push	 ecx
  002ac	e8 00 00 00 00	 call	 ?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ; DXUTCreateD3D11Views
  002b1	83 c4 0c	 add	 esp, 12			; 0000000cH
  002b4	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 3681
  002b7	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  002bb	7d 1f		 jge	 SHORT $LN6@DXUTResize
; Line 3683
  002bd	6a 00		 push	 0
  002bf	68 00 00 00 00	 push	 OFFSET $SG153238
  002c4	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  002c7	52		 push	 edx
  002c8	68 63 0e 00 00	 push	 3683			; 00000e63H
  002cd	68 00 00 00 00	 push	 OFFSET $SG153239
  002d2	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 3684
  002d7	e9 1e 01 00 00	 jmp	 $LN14@DXUTResize
$LN6@DXUTResize:
; Line 3688
  002dc	e8 00 00 00 00	 call	 ?DXUTSetupCursor@@YAXXZ	; DXUTSetupCursor
; Line 3691
  002e1	6a 01		 push	 1
  002e3	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002e8	8b c8		 mov	 ecx, eax
  002ea	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3692
  002ef	e8 00 00 00 00	 call	 ?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
  002f4	89 45 b8	 mov	 DWORD PTR _pBackBufferSurfaceDesc$[ebp], eax
; Line 3693
  002f7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002fc	8b c8		 mov	 ecx, eax
  002fe	e8 00 00 00 00	 call	 ?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11SwapChainResizedFunc
  00303	89 45 b4	 mov	 DWORD PTR _pCallbackSwapChainResized$[ebp], eax
; Line 3694
  00306	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 3695
  0030d	83 7d b4 00	 cmp	 DWORD PTR _pCallbackSwapChainResized$[ebp], 0
  00311	74 28		 je	 SHORT $LN5@DXUTResize
; Line 3697
  00313	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00318	8b c8		 mov	 ecx, eax
  0031a	e8 00 00 00 00	 call	 ?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
  0031f	8b f4		 mov	 esi, esp
  00321	50		 push	 eax
  00322	8b 45 b8	 mov	 eax, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
  00325	50		 push	 eax
  00326	8b 4d d8	 mov	 ecx, DWORD PTR _pSwapChain$[ebp]
  00329	51		 push	 ecx
  0032a	8b 55 d4	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  0032d	52		 push	 edx
  0032e	ff 55 b4	 call	 DWORD PTR _pCallbackSwapChainResized$[ebp]
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN5@DXUTResize:
; Line 3698
  0033b	6a 00		 push	 0
  0033d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00342	8b c8		 mov	 ecx, eax
  00344	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3699
  00349	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0034d	0f 8d 90 00 00
	00		 jge	 $LN4@DXUTResize
; Line 3702
  00353	6a 00		 push	 0
  00355	68 00 00 00 00	 push	 OFFSET $SG153248
  0035a	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0035d	50		 push	 eax
  0035e	68 76 0e 00 00	 push	 3702			; 00000e76H
  00363	68 00 00 00 00	 push	 OFFSET $SG153249
  00368	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
; Line 3703
  0036d	81 7d f8 03 09
	04 80		 cmp	 DWORD PTR _hr$[ebp], -2147219197 ; 80040903H
  00374	74 07		 je	 SHORT $LN3@DXUTResize
; Line 3704
  00376	c7 45 f8 08 09
	04 80		 mov	 DWORD PTR _hr$[ebp], -2147219192 ; 80040908H
$LN3@DXUTResize:
; Line 3706
  0037d	6a 01		 push	 1
  0037f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00384	8b c8		 mov	 ecx, eax
  00386	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3708
  0038b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00390	8b c8		 mov	 ecx, eax
  00392	e8 00 00 00 00	 call	 ?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
  00397	89 45 cc	 mov	 DWORD PTR _pCallbackSwapChainReleasing$[ebp], eax
; Line 3709
  0039a	83 7d cc 00	 cmp	 DWORD PTR _pCallbackSwapChainReleasing$[ebp], 0
  0039e	74 19		 je	 SHORT $LN2@DXUTResize
; Line 3710
  003a0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003a5	8b c8		 mov	 ecx, eax
  003a7	e8 00 00 00 00	 call	 ?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
  003ac	8b f4		 mov	 esi, esp
  003ae	50		 push	 eax
  003af	ff 55 cc	 call	 DWORD PTR _pCallbackSwapChainReleasing$[ebp]
  003b2	3b f4		 cmp	 esi, esp
  003b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTResize:
; Line 3711
  003b9	6a 00		 push	 0
  003bb	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003c0	8b c8		 mov	 ecx, eax
  003c2	e8 00 00 00 00	 call	 ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3712
  003c7	6a 00		 push	 0
  003c9	6a 00		 push	 0
  003cb	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 3713
  003d0	8b f4		 mov	 esi, esp
  003d2	6a 00		 push	 0
  003d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
  003da	3b f4		 cmp	 esi, esp
  003dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3715
  003e1	eb 17		 jmp	 SHORT $LN14@DXUTResize
$LN4@DXUTResize:
; Line 3717
  003e3	6a 01		 push	 1
  003e5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003ea	8b c8		 mov	 ecx, eax
  003ec	e8 00 00 00 00	 call	 ?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
; Line 3718
  003f1	6a 00		 push	 0
  003f3	6a 00		 push	 0
  003f5	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
$LN14@DXUTResize:
; Line 3720
  003fa	52		 push	 edx
  003fb	8b cd		 mov	 ecx, ebp
  003fd	50		 push	 eax
  003fe	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@DXUTResize
  00404	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00409	58		 pop	 eax
  0040a	5a		 pop	 edx
  0040b	5f		 pop	 edi
  0040c	5e		 pop	 esi
  0040d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00410	33 cd		 xor	 ecx, ebp
  00412	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00417	83 c4 50	 add	 esp, 80			; 00000050H
  0041a	3b ec		 cmp	 ebp, esp
  0041c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00421	8b e5		 mov	 esp, ebp
  00423	5d		 pop	 ebp
  00424	c3		 ret	 0
  00425	8d 49 00	 npad	 3
$LN23@DXUTResize:
  00428	01 00 00 00	 DD	 1
  0042c	00 00 00 00	 DD	 $LN22@DXUTResize
$LN22@DXUTResize:
  00430	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00434	10 00 00 00	 DD	 16			; 00000010H
  00438	00 00 00 00	 DD	 $LN21@DXUTResize
$LN21@DXUTResize:
  0043c	72		 DB	 114			; 00000072H
  0043d	63		 DB	 99			; 00000063H
  0043e	43		 DB	 67			; 00000043H
  0043f	75		 DB	 117			; 00000075H
  00440	72		 DB	 114			; 00000072H
  00441	72		 DB	 114			; 00000072H
  00442	65		 DB	 101			; 00000065H
  00443	6e		 DB	 110			; 0000006eH
  00444	74		 DB	 116			; 00000074H
  00445	43		 DB	 67			; 00000043H
  00446	6c		 DB	 108			; 0000006cH
  00447	69		 DB	 105			; 00000069H
  00448	65		 DB	 101			; 00000065H
  00449	6e		 DB	 110			; 0000006eH
  0044a	74		 DB	 116			; 00000074H
  0044b	00		 DB	 0
?DXUTResizeDXGIBuffers@@YAXIIH@Z ENDP			; DXUTResizeDXGIBuffers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -392						; size = 100
$T2 = -292						; size = 100
_deviceSettings$3 = -188				; size = 100
_bIsWindowed$ = -84					; size = 4
_SCDesc$ = -76						; size = 60
_pSwapChain$ = -12					; size = 4
_pDeviceSettings$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTCheckForDXGIFullScreenSwitch@@YAXXZ PROC		; DXUTCheckForDXGIFullScreenSwitch
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 01 00
	00		 sub	 esp, 392		; 00000188H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 78 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-392]
  00011	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3578
  00027	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002c	8b c8		 mov	 ecx, eax
  0002e	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00033	89 45 f8	 mov	 DWORD PTR _pDeviceSettings$[ebp], eax
; Line 3579
  00036	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  0003b	89 45 f4	 mov	 DWORD PTR _pSwapChain$[ebp], eax
; Line 3580
  0003e	83 7d f4 00	 cmp	 DWORD PTR _pSwapChain$[ebp], 0
  00042	75 21		 jne	 SHORT $LN7@DXUTCheckF
  00044	8b f4		 mov	 esi, esp
  00046	68 fc 0d 00 00	 push	 3580			; 00000dfcH
  0004b	68 00 00 00 00	 push	 OFFSET $SG153176
  00050	68 00 00 00 00	 push	 OFFSET $SG153177
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@DXUTCheckF:
; Line 3583
  00065	8b f4		 mov	 esi, esp
  00067	8d 4d b4	 lea	 ecx, DWORD PTR _SCDesc$[ebp]
  0006a	51		 push	 ecx
  0006b	8b 55 f4	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  0006e	8b 02		 mov	 eax, DWORD PTR [edx]
  00070	8b 4d f4	 mov	 ecx, DWORD PTR _pSwapChain$[ebp]
  00073	51		 push	 ecx
  00074	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  00077	ff d2		 call	 edx
  00079	3b f4		 cmp	 esi, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	85 c0		 test	 eax, eax
  00082	7d 10		 jge	 SHORT $LN4@DXUTCheckF
; Line 3584
  00084	6a 3c		 push	 60			; 0000003cH
  00086	6a 00		 push	 0
  00088	8d 45 b4	 lea	 eax, DWORD PTR _SCDesc$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 _memset
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@DXUTCheckF:
; Line 3586
  00094	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00099	0f b6 c8	 movzx	 ecx, al
  0009c	89 4d ac	 mov	 DWORD PTR _bIsWindowed$[ebp], ecx
; Line 3587
  0009f	8b 55 ac	 mov	 edx, DWORD PTR _bIsWindowed$[ebp]
  000a2	3b 55 e4	 cmp	 edx, DWORD PTR _SCDesc$[ebp+48]
  000a5	0f 84 8b 00 00
	00		 je	 $LN5@DXUTCheckF
; Line 3589
  000ab	8b 45 f8	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000ae	8b 4d e4	 mov	 ecx, DWORD PTR _SCDesc$[ebp+48]
  000b1	89 48 40	 mov	 DWORD PTR [eax+64], ecx
; Line 3591
  000b4	8d 95 78 fe ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  000ba	52		 push	 edx
  000bb	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  000c0	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000c5	8b f0		 mov	 esi, eax
  000c7	8d bd dc fe ff
	ff		 lea	 edi, DWORD PTR $T2[ebp]
  000cd	f3 a5		 rep movsd
  000cf	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000d4	8d b5 dc fe ff
	ff		 lea	 esi, DWORD PTR $T2[ebp]
  000da	8d bd 44 ff ff
	ff		 lea	 edi, DWORD PTR _deviceSettings$3[ebp]
  000e0	f3 a5		 rep movsd
; Line 3593
  000e2	83 7d ac 00	 cmp	 DWORD PTR _bIsWindowed$[ebp], 0
  000e6	74 28		 je	 SHORT $LN2@DXUTCheckF
; Line 3595
  000e8	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _deviceSettings$3[ebp+16]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000f4	8b c8		 mov	 ecx, eax
  000f6	e8 00 00 00 00	 call	 ?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 3596
  000fb	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _deviceSettings$3[ebp+20]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00107	8b c8		 mov	 ecx, eax
  00109	e8 00 00 00 00	 call	 ?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
; Line 3598
  0010e	eb 26		 jmp	 SHORT $LN5@DXUTCheckF
$LN2@DXUTCheckF:
; Line 3600
  00110	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _deviceSettings$3[ebp+16]
  00116	52		 push	 edx
  00117	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0011c	8b c8		 mov	 ecx, eax
  0011e	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 3601
  00123	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _deviceSettings$3[ebp+20]
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0012f	8b c8		 mov	 ecx, eax
  00131	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
$LN5@DXUTCheckF:
; Line 3604
  00136	52		 push	 edx
  00137	8b cd		 mov	 ecx, ebp
  00139	50		 push	 eax
  0013a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@DXUTCheckF
  00140	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00145	58		 pop	 eax
  00146	5a		 pop	 edx
  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014c	33 cd		 xor	 ecx, ebp
  0014e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00153	81 c4 88 01 00
	00		 add	 esp, 392		; 00000188H
  00159	3b ec		 cmp	 ebp, esp
  0015b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00160	8b e5		 mov	 esp, ebp
  00162	5d		 pop	 ebp
  00163	c3		 ret	 0
$LN11@DXUTCheckF:
  00164	02 00 00 00	 DD	 2
  00168	00 00 00 00	 DD	 $LN10@DXUTCheckF
$LN10@DXUTCheckF:
  0016c	b4 ff ff ff	 DD	 -76			; ffffffb4H
  00170	3c 00 00 00	 DD	 60			; 0000003cH
  00174	00 00 00 00	 DD	 $LN8@DXUTCheckF
  00178	44 ff ff ff	 DD	 -188			; ffffff44H
  0017c	64 00 00 00	 DD	 100			; 00000064H
  00180	00 00 00 00	 DD	 $LN9@DXUTCheckF
$LN9@DXUTCheckF:
  00184	64		 DB	 100			; 00000064H
  00185	65		 DB	 101			; 00000065H
  00186	76		 DB	 118			; 00000076H
  00187	69		 DB	 105			; 00000069H
  00188	63		 DB	 99			; 00000063H
  00189	65		 DB	 101			; 00000065H
  0018a	53		 DB	 83			; 00000053H
  0018b	65		 DB	 101			; 00000065H
  0018c	74		 DB	 116			; 00000074H
  0018d	74		 DB	 116			; 00000074H
  0018e	69		 DB	 105			; 00000069H
  0018f	6e		 DB	 110			; 0000006eH
  00190	67		 DB	 103			; 00000067H
  00191	73		 DB	 115			; 00000073H
  00192	00		 DB	 0
$LN8@DXUTCheckF:
  00193	53		 DB	 83			; 00000053H
  00194	43		 DB	 67			; 00000043H
  00195	44		 DB	 68			; 00000044H
  00196	65		 DB	 101			; 00000065H
  00197	73		 DB	 115			; 00000073H
  00198	63		 DB	 99			; 00000063H
  00199	00		 DB	 0
?DXUTCheckForDXGIFullScreenSwitch@@YAXXZ ENDP		; DXUTCheckForDXGIFullScreenSwitch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDeviceSettings$ = 8					; size = 4
?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z PROC ; DXUTUpdateDeviceSettingsWithOverrides
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2196
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 2198
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetOverrideWidth@DXUTState@@QAEHXZ ; DXUTState::GetOverrideWidth
  0000f	85 c0		 test	 eax, eax
  00011	74 12		 je	 SHORT $LN12@DXUTUpdate
; Line 2200
  00013	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00018	8b c8		 mov	 ecx, eax
  0001a	e8 00 00 00 00	 call	 ?GetOverrideWidth@DXUTState@@QAEHXZ ; DXUTState::GetOverrideWidth
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00022	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN12@DXUTUpdate:
; Line 2202
  00025	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetOverrideHeight@DXUTState@@QAEHXZ ; DXUTState::GetOverrideHeight
  00031	85 c0		 test	 eax, eax
  00033	74 12		 je	 SHORT $LN11@DXUTUpdate
; Line 2204
  00035	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ?GetOverrideHeight@DXUTState@@QAEHXZ ; DXUTState::GetOverrideHeight
  00041	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00044	89 42 14	 mov	 DWORD PTR [edx+20], eax
$LN11@DXUTUpdate:
; Line 2207
  00047	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ ; DXUTState::GetOverrideAdapterOrdinal
  00053	83 f8 ff	 cmp	 eax, -1
  00056	74 12		 je	 SHORT $LN10@DXUTUpdate
; Line 2209
  00058	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0005d	8b c8		 mov	 ecx, eax
  0005f	e8 00 00 00 00	 call	 ?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ ; DXUTState::GetOverrideAdapterOrdinal
  00064	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00067	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN10@DXUTUpdate:
; Line 2212
  0006a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ?GetOverrideFullScreen@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideFullScreen
  00076	0f b6 d0	 movzx	 edx, al
  00079	85 d2		 test	 edx, edx
  0007b	74 0a		 je	 SHORT $LN9@DXUTUpdate
; Line 2214
  0007d	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00080	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
$LN9@DXUTUpdate:
; Line 2217
  00087	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ?GetOverrideWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideWindowed
  00093	0f b6 c8	 movzx	 ecx, al
  00096	85 c9		 test	 ecx, ecx
  00098	74 0a		 je	 SHORT $LN8@DXUTUpdate
; Line 2219
  0009a	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  0009d	c7 42 40 01 00
	00 00		 mov	 DWORD PTR [edx+64], 1
$LN8@DXUTUpdate:
; Line 2222
  000a4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ?GetOverrideForceHAL@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideForceHAL
  000b0	0f b6 c0	 movzx	 eax, al
  000b3	85 c0		 test	 eax, eax
  000b5	74 0a		 je	 SHORT $LN7@DXUTUpdate
; Line 2224
  000b7	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  000ba	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
$LN7@DXUTUpdate:
; Line 2227
  000c1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ?GetOverrideForceREF@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideForceREF
  000cd	0f b6 d0	 movzx	 edx, al
  000d0	85 d2		 test	 edx, edx
  000d2	74 0a		 je	 SHORT $LN6@DXUTUpdate
; Line 2229
  000d4	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000d7	c7 40 08 02 00
	00 00		 mov	 DWORD PTR [eax+8], 2
$LN6@DXUTUpdate:
; Line 2232
  000de	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000e3	8b c8		 mov	 ecx, eax
  000e5	e8 00 00 00 00	 call	 ?GetOverrideForceWARP@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideForceWARP
  000ea	0f b6 c8	 movzx	 ecx, al
  000ed	85 c9		 test	 ecx, ecx
  000ef	74 14		 je	 SHORT $LN5@DXUTUpdate
; Line 2234
  000f1	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  000f4	c7 42 08 05 00
	00 00		 mov	 DWORD PTR [edx+8], 5
; Line 2235
  000fb	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000fe	c7 40 40 01 00
	00 00		 mov	 DWORD PTR [eax+64], 1
$LN5@DXUTUpdate:
; Line 2238
  00105	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0010a	8b c8		 mov	 ecx, eax
  0010c	e8 00 00 00 00	 call	 ?GetOverrideForceVsync@DXUTState@@QAEHXZ ; DXUTState::GetOverrideForceVsync
  00111	85 c0		 test	 eax, eax
  00113	75 0c		 jne	 SHORT $LN4@DXUTUpdate
; Line 2240
  00115	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00118	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
  0011f	eb 1b		 jmp	 SHORT $LN3@DXUTUpdate
$LN4@DXUTUpdate:
; Line 2242
  00121	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00126	8b c8		 mov	 ecx, eax
  00128	e8 00 00 00 00	 call	 ?GetOverrideForceVsync@DXUTState@@QAEHXZ ; DXUTState::GetOverrideForceVsync
  0012d	83 f8 01	 cmp	 eax, 1
  00130	75 0a		 jne	 SHORT $LN3@DXUTUpdate
; Line 2244
  00132	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00135	c7 42 50 01 00
	00 00		 mov	 DWORD PTR [edx+80], 1
$LN3@DXUTUpdate:
; Line 2247
  0013c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00141	8b c8		 mov	 ecx, eax
  00143	e8 00 00 00 00	 call	 ?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetOverrideForceFeatureLevel
  00148	85 c0		 test	 eax, eax
  0014a	74 12		 je	 SHORT $LN13@DXUTUpdate
; Line 2249
  0014c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00151	8b c8		 mov	 ecx, eax
  00153	e8 00 00 00 00	 call	 ?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetOverrideForceFeatureLevel
  00158	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  0015b	89 41 60	 mov	 DWORD PTR [ecx+96], eax
$LN13@DXUTUpdate:
; Line 2251
  0015e	3b ec		 cmp	 ebp, esp
  00160	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00165	5d		 pop	 ebp
  00166	c3		 ret	 0
?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ENDP ; DXUTUpdateDeviceSettingsWithOverrides
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv311 = -192						; size = 4
tv312 = -188						; size = 4
tv309 = -184						; size = 4
tv77 = -180						; size = 4
$T2 = -176						; size = 12
$T3 = -164						; size = 12
$T4 = -149						; size = 1
_maxRefFL$5 = -148					; size = 4
_maxWarpFL$6 = -144					; size = 4
_bestDisplayMode$7 = -136				; size = 28
_score$8 = -104						; size = 4
_bestMSAA$9 = -96					; size = 4
_bestMode$10 = -84					; size = 4
_tempDeviceSettingsCombo$11 = -76			; size = 4
_iDeviceCombo$12 = -72					; size = 4
_biggestScore$ = -68					; size = 4
_pDeviceSettingsCombo$ = -64				; size = 4
_tempAdapterInfo$13 = -60				; size = 4
_it$14 = -52						; size = 12
_pAdapterList$ = -36					; size = 4
_pAdapterInfo$ = -32					; size = 4
_pEnum$ = -28						; size = 4
_bestMSAAIndex$ = -24					; size = 4
_bestModeIndex$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pDeviceSettings$ = 8					; size = 4
_forceEnum$ = 12					; size = 1
_forceFL$ = 16						; size = 4
?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z PROC ; DXUTSnapDeviceSettingsToEnumDevice
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  0001f	b9 2d 00 00 00	 mov	 ecx, 45			; 0000002dH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 4324
  0003f	8b f4		 mov	 esi, esp
  00041	68 00 10 00 00	 push	 4096			; 00001000H
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	85 c0		 test	 eax, eax
  00055	74 0a		 je	 SHORT $LN22@DXUTSnapDe
; Line 4326
  00057	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  0005a	c7 40 40 01 00
	00 00		 mov	 DWORD PTR [eax+64], 1
$LN22@DXUTSnapDe:
; Line 4328
  00061	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _bestModeIndex$[ebp], 0
; Line 4329
  00068	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _bestMSAAIndex$[ebp], 0
; Line 4332
  0006f	8b 4d 10	 mov	 ecx, DWORD PTR _forceFL$[ebp]
  00072	51		 push	 ecx
  00073	6a 01		 push	 1
  00075	0f b6 55 0c	 movzx	 edx, BYTE PTR _forceEnum$[ebp]
  00079	52		 push	 edx
  0007a	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  0007f	89 45 e4	 mov	 DWORD PTR _pEnum$[ebp], eax
; Line 4334
  00082	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pAdapterInfo$[ebp], 0
; Line 4335
  00089	8b 4d e4	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  0008c	e8 00 00 00 00	 call	 ?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ ; CD3D11Enumeration::GetAdapterInfoList
  00091	89 45 dc	 mov	 DWORD PTR _pAdapterList$[ebp], eax
; Line 4336
  00094	8d 45 cc	 lea	 eax, DWORD PTR _it$14[ebp]
  00097	50		 push	 eax
  00098	8b 4d dc	 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  0009b	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
  000a0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a7	eb 08		 jmp	 SHORT $LN21@DXUTSnapDe
$LN20@DXUTSnapDe:
  000a9	8d 4d cc	 lea	 ecx, DWORD PTR _it$14[ebp]
  000ac	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
$LN21@DXUTSnapDe:
  000b1	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  000b7	51		 push	 ecx
  000b8	8b 4d dc	 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  000bb	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
  000c0	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv77[ebp], eax
  000c6	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv77[ebp]
  000cc	89 95 48 ff ff
	ff		 mov	 DWORD PTR tv309[ebp], edx
  000d2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000d6	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv309[ebp]
  000dc	50		 push	 eax
  000dd	8d 4d cc	 lea	 ecx, DWORD PTR _it$14[ebp]
  000e0	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
  000e5	88 85 6b ff ff
	ff		 mov	 BYTE PTR $T4[ebp], al
  000eb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000ef	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  000f5	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
  000fa	0f b6 8d 6b ff
	ff ff		 movzx	 ecx, BYTE PTR $T4[ebp]
  00101	85 c9		 test	 ecx, ecx
  00103	74 22		 je	 SHORT $LN19@DXUTSnapDe
; Line 4338
  00105	8d 4d cc	 lea	 ecx, DWORD PTR _it$14[ebp]
  00108	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
  0010d	8b 10		 mov	 edx, DWORD PTR [eax]
  0010f	89 55 c4	 mov	 DWORD PTR _tempAdapterInfo$13[ebp], edx
; Line 4339
  00112	8b 45 c4	 mov	 eax, DWORD PTR _tempAdapterInfo$13[ebp]
  00115	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00118	8b 10		 mov	 edx, DWORD PTR [eax]
  0011a	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0011d	75 06		 jne	 SHORT $LN18@DXUTSnapDe
  0011f	8b 45 c4	 mov	 eax, DWORD PTR _tempAdapterInfo$13[ebp]
  00122	89 45 e0	 mov	 DWORD PTR _pAdapterInfo$[ebp], eax
$LN18@DXUTSnapDe:
; Line 4340
  00125	eb 82		 jmp	 SHORT $LN20@DXUTSnapDe
$LN19@DXUTSnapDe:
  00127	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0012e	8d 4d cc	 lea	 ecx, DWORD PTR _it$14[ebp]
  00131	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
; Line 4341
  00136	83 7d e0 00	 cmp	 DWORD PTR _pAdapterInfo$[ebp], 0
  0013a	75 6c		 jne	 SHORT $LN17@DXUTSnapDe
; Line 4343
  0013c	8b 4d dc	 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  0013f	e8 00 00 00 00	 call	 ?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty
  00144	0f b6 c8	 movzx	 ecx, al
  00147	85 c9		 test	 ecx, ecx
  00149	75 09		 jne	 SHORT $LN15@DXUTSnapDe
  0014b	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  0014e	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  00152	76 0a		 jbe	 SHORT $LN16@DXUTSnapDe
$LN15@DXUTSnapDe:
; Line 4345
  00154	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00159	e9 86 02 00 00	 jmp	 $LN23@DXUTSnapDe
$LN16@DXUTSnapDe:
; Line 4347
  0015e	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00164	50		 push	 eax
  00165	8b 4d dc	 mov	 ecx, DWORD PTR _pAdapterList$[ebp]
  00168	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
  0016d	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv312[ebp], eax
  00173	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR tv312[ebp]
  00179	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv311[ebp], ecx
  0017f	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00186	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv311[ebp]
  0018c	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
  00191	8b 10		 mov	 edx, DWORD PTR [eax]
  00193	89 55 e0	 mov	 DWORD PTR _pAdapterInfo$[ebp], edx
  00196	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0019d	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  001a3	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
$LN17@DXUTSnapDe:
; Line 4349
  001a8	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pDeviceSettingsCombo$[ebp], 0
; Line 4350
  001af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  001b7	f3 0f 11 45 bc	 movss	 DWORD PTR _biggestScore$[ebp], xmm0
; Line 4352
  001bc	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _iDeviceCombo$12[ebp], 0
  001c3	eb 09		 jmp	 SHORT $LN14@DXUTSnapDe
$LN13@DXUTSnapDe:
  001c5	8b 45 b8	 mov	 eax, DWORD PTR _iDeviceCombo$12[ebp]
  001c8	83 c0 01	 add	 eax, 1
  001cb	89 45 b8	 mov	 DWORD PTR _iDeviceCombo$12[ebp], eax
$LN14@DXUTSnapDe:
  001ce	8b 4d e0	 mov	 ecx, DWORD PTR _pAdapterInfo$[ebp]
  001d1	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  001d7	e8 00 00 00 00	 call	 ?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
  001dc	39 45 b8	 cmp	 DWORD PTR _iDeviceCombo$12[ebp], eax
  001df	73 5e		 jae	 SHORT $LN12@DXUTSnapDe
; Line 4354
  001e1	8b 4d b8	 mov	 ecx, DWORD PTR _iDeviceCombo$12[ebp]
  001e4	51		 push	 ecx
  001e5	8b 4d e0	 mov	 ecx, DWORD PTR _pAdapterInfo$[ebp]
  001e8	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  001ee	e8 00 00 00 00	 call	 ??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[]
  001f3	8b 10		 mov	 edx, DWORD PTR [eax]
  001f5	89 55 b4	 mov	 DWORD PTR _tempDeviceSettingsCombo$11[ebp], edx
; Line 4358
  001f8	8d 45 a0	 lea	 eax, DWORD PTR _bestMSAA$9[ebp]
  001fb	50		 push	 eax
  001fc	8d 4d ac	 lea	 ecx, DWORD PTR _bestMode$10[ebp]
  001ff	51		 push	 ecx
  00200	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00203	83 c2 04	 add	 edx, 4
  00206	52		 push	 edx
  00207	8b 45 b4	 mov	 eax, DWORD PTR _tempDeviceSettingsCombo$11[ebp]
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ?DXUTRankD3D11DeviceCombo@@YAMPAUCD3D11EnumDeviceSettingsCombo@@PAUDXUTD3D11DeviceSettings@@AAH2@Z ; DXUTRankD3D11DeviceCombo
  00210	83 c4 10	 add	 esp, 16			; 00000010H
  00213	d9 5d 98	 fstp	 DWORD PTR _score$8[ebp]
; Line 4359
  00216	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _score$8[ebp]
  0021b	0f 2f 45 bc	 comiss	 xmm0, DWORD PTR _biggestScore$[ebp]
  0021f	76 1c		 jbe	 SHORT $LN11@DXUTSnapDe
; Line 4361
  00221	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _score$8[ebp]
  00226	f3 0f 11 45 bc	 movss	 DWORD PTR _biggestScore$[ebp], xmm0
; Line 4362
  0022b	8b 4d b4	 mov	 ecx, DWORD PTR _tempDeviceSettingsCombo$11[ebp]
  0022e	89 4d c0	 mov	 DWORD PTR _pDeviceSettingsCombo$[ebp], ecx
; Line 4363
  00231	8b 55 ac	 mov	 edx, DWORD PTR _bestMode$10[ebp]
  00234	89 55 ec	 mov	 DWORD PTR _bestModeIndex$[ebp], edx
; Line 4364
  00237	8b 45 a0	 mov	 eax, DWORD PTR _bestMSAA$9[ebp]
  0023a	89 45 e8	 mov	 DWORD PTR _bestMSAAIndex$[ebp], eax
$LN11@DXUTSnapDe:
; Line 4366
  0023d	eb 86		 jmp	 SHORT $LN13@DXUTSnapDe
$LN12@DXUTSnapDe:
; Line 4367
  0023f	83 7d c0 00	 cmp	 DWORD PTR _pDeviceSettingsCombo$[ebp], 0
  00243	75 0a		 jne	 SHORT $LN10@DXUTSnapDe
; Line 4369
  00245	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  0024a	e9 95 01 00 00	 jmp	 $LN23@DXUTSnapDe
$LN10@DXUTSnapDe:
; Line 4372
  0024f	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00252	8b 55 c0	 mov	 edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  00255	8b 02		 mov	 eax, DWORD PTR [edx]
  00257	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 4373
  0025a	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  0025d	8b 55 c0	 mov	 edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  00260	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00263	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 4374
  00266	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00269	8b 55 c0	 mov	 edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  0026c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0026f	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 4376
  00272	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00275	8b 55 c0	 mov	 edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  00278	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0027b	89 41 40	 mov	 DWORD PTR [ecx+64], eax
; Line 4377
  0027e	8b f4		 mov	 esi, esp
  00280	68 00 10 00 00	 push	 4096			; 00001000H
  00285	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0028b	3b f4		 cmp	 esi, esp
  0028d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00292	85 c0		 test	 eax, eax
  00294	74 0a		 je	 SHORT $LN9@DXUTSnapDe
; Line 4379
  00296	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00299	c7 41 40 01 00
	00 00		 mov	 DWORD PTR [ecx+64], 1
$LN9@DXUTSnapDe:
; Line 4381
  002a0	8b 55 c0	 mov	 edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  002a3	83 7a 3c 00	 cmp	 DWORD PTR [edx+60], 0
  002a7	74 66		 je	 SHORT $LN7@DXUTSnapDe
; Line 4383
  002a9	8b 45 ec	 mov	 eax, DWORD PTR _bestModeIndex$[ebp]
  002ac	50		 push	 eax
  002ad	8b 4d c0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  002b0	8b 49 3c	 mov	 ecx, DWORD PTR [ecx+60]
  002b3	83 c1 68	 add	 ecx, 104		; 00000068H
  002b6	e8 00 00 00 00	 call	 ??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[]
  002bb	b9 07 00 00 00	 mov	 ecx, 7
  002c0	8b f0		 mov	 esi, eax
  002c2	8d bd 78 ff ff
	ff		 lea	 edi, DWORD PTR _bestDisplayMode$7[ebp]
  002c8	f3 a5		 rep movsd
; Line 4384
  002ca	8b 55 c0	 mov	 edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  002cd	83 7a 0c 00	 cmp	 DWORD PTR [edx+12], 0
  002d1	75 3c		 jne	 SHORT $LN7@DXUTSnapDe
; Line 4386
  002d3	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  002d6	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _bestDisplayMode$7[ebp+4]
  002dc	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; Line 4387
  002df	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  002e2	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _bestDisplayMode$7[ebp]
  002e8	89 42 10	 mov	 DWORD PTR [edx+16], eax
; Line 4388
  002eb	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  002ee	8b 55 80	 mov	 edx, DWORD PTR _bestDisplayMode$7[ebp+8]
  002f1	89 51 18	 mov	 DWORD PTR [ecx+24], edx
; Line 4389
  002f4	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  002f7	8b 4d 84	 mov	 ecx, DWORD PTR _bestDisplayMode$7[ebp+12]
  002fa	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
; Line 4390
  002fd	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00300	8b 45 90	 mov	 eax, DWORD PTR _bestDisplayMode$7[ebp+24]
  00303	89 42 28	 mov	 DWORD PTR [edx+40], eax
; Line 4391
  00306	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00309	8b 55 8c	 mov	 edx, DWORD PTR _bestDisplayMode$7[ebp+20]
  0030c	89 51 24	 mov	 DWORD PTR [ecx+36], edx
$LN7@DXUTSnapDe:
; Line 4394
  0030f	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00312	83 78 60 00	 cmp	 DWORD PTR [eax+96], 0
  00316	75 0f		 jne	 SHORT $LN6@DXUTSnapDe
; Line 4395
  00318	8b 4d c0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  0031b	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0031e	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00321	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00324	89 48 60	 mov	 DWORD PTR [eax+96], ecx
$LN6@DXUTSnapDe:
; Line 4397
  00327	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  0032a	83 7a 08 05	 cmp	 DWORD PTR [edx+8], 5
  0032e	75 28		 jne	 SHORT $LN4@DXUTSnapDe
; Line 4399
  00330	8b 4d e4	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  00333	e8 00 00 00 00	 call	 ?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetWARPFeaturevel
  00338	89 85 70 ff ff
	ff		 mov	 DWORD PTR _maxWarpFL$6[ebp], eax
; Line 4401
  0033e	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00341	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00344	3b 8d 70 ff ff
	ff		 cmp	 ecx, DWORD PTR _maxWarpFL$6[ebp]
  0034a	7e 0c		 jle	 SHORT $LN4@DXUTSnapDe
; Line 4402
  0034c	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  0034f	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _maxWarpFL$6[ebp]
  00355	89 42 60	 mov	 DWORD PTR [edx+96], eax
$LN4@DXUTSnapDe:
; Line 4405
  00358	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  0035b	83 79 08 02	 cmp	 DWORD PTR [ecx+8], 2
  0035f	75 28		 jne	 SHORT $LN2@DXUTSnapDe
; Line 4407
  00361	8b 4d e4	 mov	 ecx, DWORD PTR _pEnum$[ebp]
  00364	e8 00 00 00 00	 call	 ?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetREFFeaturevel
  00369	89 85 6c ff ff
	ff		 mov	 DWORD PTR _maxRefFL$5[ebp], eax
; Line 4409
  0036f	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00372	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00375	3b 85 6c ff ff
	ff		 cmp	 eax, DWORD PTR _maxRefFL$5[ebp]
  0037b	7e 0c		 jle	 SHORT $LN2@DXUTSnapDe
; Line 4410
  0037d	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00380	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR _maxRefFL$5[ebp]
  00386	89 51 60	 mov	 DWORD PTR [ecx+96], edx
$LN2@DXUTSnapDe:
; Line 4413
  00389	8b 45 e8	 mov	 eax, DWORD PTR _bestMSAAIndex$[ebp]
  0038c	50		 push	 eax
  0038d	8b 4d c0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  00390	83 c1 14	 add	 ecx, 20			; 00000014H
  00393	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  00398	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  0039b	8b 10		 mov	 edx, DWORD PTR [eax]
  0039d	89 51 2c	 mov	 DWORD PTR [ecx+44], edx
; Line 4414
  003a0	8b 45 e8	 mov	 eax, DWORD PTR _bestMSAAIndex$[ebp]
  003a3	50		 push	 eax
  003a4	8b 4d c0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  003a7	83 c1 24	 add	 ecx, 36			; 00000024H
  003aa	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  003af	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b1	83 e9 01	 sub	 ecx, 1
  003b4	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  003b7	39 4a 30	 cmp	 DWORD PTR [edx+48], ecx
  003ba	76 1a		 jbe	 SHORT $LN1@DXUTSnapDe
; Line 4415
  003bc	8b 45 e8	 mov	 eax, DWORD PTR _bestMSAAIndex$[ebp]
  003bf	50		 push	 eax
  003c0	8b 4d c0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  003c3	83 c1 24	 add	 ecx, 36			; 00000024H
  003c6	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  003cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003cd	83 e9 01	 sub	 ecx, 1
  003d0	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  003d3	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
$LN1@DXUTSnapDe:
; Line 4417
  003d6	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  003d9	8b 4d c0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  003dc	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003df	89 50 20	 mov	 DWORD PTR [eax+32], edx
; Line 4419
  003e2	33 c0		 xor	 eax, eax
$LN23@DXUTSnapDe:
; Line 4420
  003e4	52		 push	 edx
  003e5	8b cd		 mov	 ecx, ebp
  003e7	50		 push	 eax
  003e8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN34@DXUTSnapDe
  003ee	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003f3	58		 pop	 eax
  003f4	5a		 pop	 edx
  003f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003ff	59		 pop	 ecx
  00400	5f		 pop	 edi
  00401	5e		 pop	 esi
  00402	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00405	33 cd		 xor	 ecx, ebp
  00407	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0040c	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00412	3b ec		 cmp	 ebp, esp
  00414	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00419	8b e5		 mov	 esp, ebp
  0041b	5d		 pop	 ebp
  0041c	c3		 ret	 0
  0041d	8d 49 00	 npad	 3
$LN34@DXUTSnapDe:
  00420	04 00 00 00	 DD	 4
  00424	00 00 00 00	 DD	 $LN33@DXUTSnapDe
$LN33@DXUTSnapDe:
  00428	cc ff ff ff	 DD	 -52			; ffffffccH
  0042c	0c 00 00 00	 DD	 12			; 0000000cH
  00430	00 00 00 00	 DD	 $LN28@DXUTSnapDe
  00434	ac ff ff ff	 DD	 -84			; ffffffacH
  00438	04 00 00 00	 DD	 4
  0043c	00 00 00 00	 DD	 $LN29@DXUTSnapDe
  00440	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00444	04 00 00 00	 DD	 4
  00448	00 00 00 00	 DD	 $LN30@DXUTSnapDe
  0044c	78 ff ff ff	 DD	 -136			; ffffff78H
  00450	1c 00 00 00	 DD	 28			; 0000001cH
  00454	00 00 00 00	 DD	 $LN31@DXUTSnapDe
$LN31@DXUTSnapDe:
  00458	62		 DB	 98			; 00000062H
  00459	65		 DB	 101			; 00000065H
  0045a	73		 DB	 115			; 00000073H
  0045b	74		 DB	 116			; 00000074H
  0045c	44		 DB	 68			; 00000044H
  0045d	69		 DB	 105			; 00000069H
  0045e	73		 DB	 115			; 00000073H
  0045f	70		 DB	 112			; 00000070H
  00460	6c		 DB	 108			; 0000006cH
  00461	61		 DB	 97			; 00000061H
  00462	79		 DB	 121			; 00000079H
  00463	4d		 DB	 77			; 0000004dH
  00464	6f		 DB	 111			; 0000006fH
  00465	64		 DB	 100			; 00000064H
  00466	65		 DB	 101			; 00000065H
  00467	00		 DB	 0
$LN30@DXUTSnapDe:
  00468	62		 DB	 98			; 00000062H
  00469	65		 DB	 101			; 00000065H
  0046a	73		 DB	 115			; 00000073H
  0046b	74		 DB	 116			; 00000074H
  0046c	4d		 DB	 77			; 0000004dH
  0046d	53		 DB	 83			; 00000053H
  0046e	41		 DB	 65			; 00000041H
  0046f	41		 DB	 65			; 00000041H
  00470	00		 DB	 0
$LN29@DXUTSnapDe:
  00471	62		 DB	 98			; 00000062H
  00472	65		 DB	 101			; 00000065H
  00473	73		 DB	 115			; 00000073H
  00474	74		 DB	 116			; 00000074H
  00475	4d		 DB	 77			; 0000004dH
  00476	6f		 DB	 111			; 0000006fH
  00477	64		 DB	 100			; 00000064H
  00478	65		 DB	 101			; 00000065H
  00479	00		 DB	 0
$LN28@DXUTSnapDe:
  0047a	69		 DB	 105			; 00000069H
  0047b	74		 DB	 116			; 00000074H
  0047c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _it$14[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$1:
  00008	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$2:
  00013	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z:
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 8a 40 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-192]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ENDP ; DXUTSnapDeviceSettingsToEnumDevice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$1 = -16						; size = 4
_pDXGIFactory$ = -8					; size = 4
?DXUTDelayLoadDXGI@@YAJXZ PROC				; DXUTDelayLoadDXGI
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2171
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 2172
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
  00023	89 45 f8	 mov	 DWORD PTR _pDXGIFactory$[ebp], eax
; Line 2173
  00026	83 7d f8 00	 cmp	 DWORD PTR _pDXGIFactory$[ebp], 0
  0002a	75 39		 jne	 SHORT $LN3@DXUTDelayL
; Line 2175
  0002c	8d 45 f8	 lea	 eax, DWORD PTR _pDXGIFactory$[ebp]
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET __GUID_770aae78_f26f_4dba_a829_253c83d1b387
  00035	e8 00 00 00 00	 call	 ?DXUT_Dynamic_CreateDXGIFactory1@@YGJABU_GUID@@PAPAX@Z ; DXUT_Dynamic_CreateDXGIFactory1
  0003a	89 45 f0	 mov	 DWORD PTR _hr$1[ebp], eax
; Line 2176
  0003d	83 7d f0 00	 cmp	 DWORD PTR _hr$1[ebp], 0
  00041	7d 05		 jge	 SHORT $LN2@DXUTDelayL
; Line 2177
  00043	8b 45 f0	 mov	 eax, DWORD PTR _hr$1[ebp]
  00046	eb 1f		 jmp	 SHORT $LN4@DXUTDelayL
$LN2@DXUTDelayL:
; Line 2179
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _pDXGIFactory$[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
; Line 2180
  00058	83 7d f8 00	 cmp	 DWORD PTR _pDXGIFactory$[ebp], 0
  0005c	75 07		 jne	 SHORT $LN3@DXUTDelayL
; Line 2182
  0005e	b8 01 09 04 80	 mov	 eax, -2147219199	; 80040901H
  00063	eb 02		 jmp	 SHORT $LN4@DXUTDelayL
$LN3@DXUTDelayL:
; Line 2188
  00065	33 c0		 xor	 eax, eax
$LN4@DXUTDelayL:
; Line 2189
  00067	52		 push	 edx
  00068	8b cd		 mov	 ecx, ebp
  0006a	50		 push	 eax
  0006b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@DXUTDelayL
  00071	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00076	58		 pop	 eax
  00077	5a		 pop	 edx
  00078	83 c4 10	 add	 esp, 16			; 00000010H
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
  00086	8b ff		 npad	 2
$LN8@DXUTDelayL:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN7@DXUTDelayL
$LN7@DXUTDelayL:
  00090	f8 ff ff ff	 DD	 -8			; fffffff8H
  00094	04 00 00 00	 DD	 4
  00098	00 00 00 00	 DD	 $LN6@DXUTDelayL
$LN6@DXUTDelayL:
  0009c	70		 DB	 112			; 00000070H
  0009d	44		 DB	 68			; 00000044H
  0009e	58		 DB	 88			; 00000058H
  0009f	47		 DB	 71			; 00000047H
  000a0	49		 DB	 73			; 00000049H
  000a1	46		 DB	 70			; 00000046H
  000a2	61		 DB	 97			; 00000061H
  000a3	63		 DB	 99			; 00000063H
  000a4	74		 DB	 116			; 00000074H
  000a5	6f		 DB	 111			; 0000006fH
  000a6	72		 DB	 114			; 00000072H
  000a7	79		 DB	 121			; 00000079H
  000a8	00		 DB	 0
?DXUTDelayLoadDXGI@@YAJXZ ENDP				; DXUTDelayLoadDXGI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv540 = -848						; size = 4
tv463 = -844						; size = 4
tv308 = -840						; size = 4
tv261 = -836						; size = 4
tv234 = -829						; size = 1
$T1 = -828						; size = 4
$T2 = -824						; size = 4
$T3 = -820						; size = 100
$T4 = -720						; size = 4
$T5 = -716						; size = 4
$T6 = -712						; size = 4
$T7 = -708						; size = 4
$T8 = -704						; size = 100
_deviceSettings$9 = -600				; size = 100
_nClientHeight$10 = -496				; size = 4
_nClientWidth$11 = -492					; size = 4
_rcClient$12 = -484					; size = 16
_cy$13 = -464						; size = 4
_cx$14 = -460						; size = 4
_rcWindow$15 = -452					; size = 16
_nWindowOffsetY$16 = -432				; size = 4
_nWindowOffsetX$17 = -428				; size = 4
_nWindowHeight$18 = -424				; size = 4
_nWindowWidth$19 = -420					; size = 4
_rcResizedWindow$20 = -412				; size = 16
_rcWindow$21 = -388					; size = 16
_nClientHeight$22 = -368				; size = 4
_nClientWidth$23 = -364					; size = 4
_nAdapterMonitorHeight$24 = -360			; size = 4
_nAdapterMonitorWidth$25 = -356				; size = 4
_miWindow$26 = -348					; size = 40
_miAdapter$27 = -300					; size = 40
_rcWindow$28 = -252					; size = 16
_hWindowMonitor$29 = -232				; size = 4
_miAdapter$30 = -224					; size = 40
_rcClient$31 = -176					; size = 16
_nFrameHeight$32 = -156					; size = 4
_nFrameWidth$33 = -152					; size = 4
_rcFrame$34 = -144					; size = 16
_rcClient$35 = -120					; size = 16
_wp$36 = -96						; size = 44
_nClientHeight$37 = -48					; size = 4
_nClientWidth$38 = -44					; size = 4
_bNeedToResize$ = -37					; size = 1
_hWndInsertAfter$39 = -36				; size = 4
_pwp$40 = -32						; size = 4
_hAdapterMonitor$ = -28					; size = 4
_bKeepCurrentWindowSize$ = -22				; size = 1
_bContinue$41 = -21					; size = 1
_pCallbackModifyDeviceSettings$ = -20			; size = 4
_pNewDeviceSettingsOnHeap$ = -16			; size = 4
_pOldDeviceSettings$ = -12				; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pNewDeviceSettings$ = 8				; size = 4
_bClipWindowToSingleAdapter$ = 12			; size = 1
?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z PROC	; DXUTChangeDevice
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 1785
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 03 00
	00		 sub	 esp, 848		; 00000350H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd b0 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-848]
  00011	b9 d4 00 00 00	 mov	 ecx, 212		; 000000d4H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 1786
  00027	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002c	8b c8		 mov	 ecx, eax
  0002e	e8 00 00 00 00	 call	 ?GetReleasingSwapChain@DXUTState@@QAE_NXZ ; DXUTState::GetReleasingSwapChain
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 0a		 je	 SHORT $LN52@DXUTChange
; Line 1787
  0003a	b8 01 00 00 00	 mov	 eax, 1
  0003f	e9 ee 0c 00 00	 jmp	 $LN53@DXUTChange
$LN52@DXUTChange:
; Line 1789
  00044	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1790
  0004b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00057	89 45 f4	 mov	 DWORD PTR _pOldDeviceSettings$[ebp], eax
; Line 1792
  0005a	83 7d 08 00	 cmp	 DWORD PTR _pNewDeviceSettings$[ebp], 0
  0005e	75 0a		 jne	 SHORT $LN51@DXUTChange
; Line 1793
  00060	b8 01 00 00 00	 mov	 eax, 1
  00065	e9 c8 0c 00 00	 jmp	 $LN53@DXUTChange
$LN51@DXUTChange:
; Line 1795
  0006a	e8 00 00 00 00	 call	 ?DXUTDelayLoadDXGI@@YAJXZ ; DXUTDelayLoadDXGI
  0006f	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1797
  00072	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00076	7d 08		 jge	 SHORT $LN50@DXUTChange
; Line 1798
  00078	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0007b	e9 b2 0c 00 00	 jmp	 $LN53@DXUTChange
$LN50@DXUTChange:
; Line 1801
  00080	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00085	6a 64		 push	 100			; 00000064H
  00087	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  0008c	83 c4 08	 add	 esp, 8
  0008f	89 85 3c fd ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00095	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
  0009b	89 4d f0	 mov	 DWORD PTR _pNewDeviceSettingsOnHeap$[ebp], ecx
; Line 1802
  0009e	83 7d f0 00	 cmp	 DWORD PTR _pNewDeviceSettingsOnHeap$[ebp], 0
  000a2	75 0a		 jne	 SHORT $LN49@DXUTChange
; Line 1803
  000a4	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000a9	e9 84 0c 00 00	 jmp	 $LN53@DXUTChange
$LN49@DXUTChange:
; Line 1804
  000ae	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000b3	8b 75 08	 mov	 esi, DWORD PTR _pNewDeviceSettings$[ebp]
  000b6	8b 7d f0	 mov	 edi, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
  000b9	f3 a5		 rep movsd
; Line 1805
  000bb	8b 55 f0	 mov	 edx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
  000be	89 55 08	 mov	 DWORD PTR _pNewDeviceSettings$[ebp], edx
; Line 1807
  000c1	8b 45 f0	 mov	 eax, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
; Line 1808
  000d1	6a 00		 push	 0
  000d3	6a 00		 push	 0
  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
  000d8	51		 push	 ecx
  000d9	e8 00 00 00 00	 call	 ?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
  000de	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e1	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1810
  000e4	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000e8	7d 2b		 jge	 SHORT $LN48@DXUTChange
; Line 1812
  000ea	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?DXUTDisplayErrorMessage@@YAXJ@Z ; DXUTDisplayErrorMessage
  000f3	83 c4 04	 add	 esp, 4
; Line 1813
  000f6	6a 00		 push	 0
  000f8	68 00 00 00 00	 push	 OFFSET $SG152087
  000fd	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00100	50		 push	 eax
  00101	68 15 07 00 00	 push	 1813			; 00000715H
  00106	68 00 00 00 00	 push	 OFFSET $SG152088
  0010b	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00110	e9 1d 0c 00 00	 jmp	 $LN53@DXUTChange
$LN48@DXUTChange:
; Line 1818
  00115	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0011a	8b c8		 mov	 ecx, eax
  0011c	e8 00 00 00 00	 call	 ?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ ; DXUTState::GetModifyDeviceSettingsFunc
  00121	89 45 ec	 mov	 DWORD PTR _pCallbackModifyDeviceSettings$[ebp], eax
; Line 1819
  00124	83 7d ec 00	 cmp	 DWORD PTR _pCallbackModifyDeviceSettings$[ebp], 0
  00128	0f 84 ea 00 00
	00		 je	 $LN47@DXUTChange
; Line 1822
  0012e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00133	8b c8		 mov	 ecx, eax
  00135	e8 00 00 00 00	 call	 ?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetModifyDeviceSettingsFuncUserContext
  0013a	8b f4		 mov	 esi, esp
  0013c	50		 push	 eax
  0013d	8b 4d 08	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  00140	51		 push	 ecx
  00141	ff 55 ec	 call	 DWORD PTR _pCallbackModifyDeviceSettings$[ebp]
  00144	3b f4		 cmp	 esi, esp
  00146	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014b	88 45 eb	 mov	 BYTE PTR _bContinue$41[ebp], al
; Line 1823
  0014e	0f b6 55 eb	 movzx	 edx, BYTE PTR _bContinue$41[ebp]
  00152	85 d2		 test	 edx, edx
  00154	75 42		 jne	 SHORT $LN46@DXUTChange
; Line 1826
  00156	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  0015a	75 0d		 jne	 SHORT $LN45@DXUTChange
; Line 1827
  0015c	68 02 09 04 80	 push	 -2147219198		; 80040902H
  00161	e8 00 00 00 00	 call	 ?DXUTDisplayErrorMessage@@YAXJ@Z ; DXUTDisplayErrorMessage
  00166	83 c4 04	 add	 esp, 4
$LN45@DXUTChange:
; Line 1828
  00169	83 7d 08 00	 cmp	 DWORD PTR _pNewDeviceSettings$[ebp], 0
  0016d	74 1f		 je	 SHORT $LN44@DXUTChange
  0016f	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00172	89 85 38 fd ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00178	8b 8d 38 fd ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  0017e	51		 push	 ecx
  0017f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00184	83 c4 04	 add	 esp, 4
  00187	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pNewDeviceSettings$[ebp], 0
$LN44@DXUTChange:
; Line 1829
  0018e	b8 04 40 00 80	 mov	 eax, -2147467260	; 80004004H
  00193	e9 9a 0b 00 00	 jmp	 $LN53@DXUTChange
$LN46@DXUTChange:
; Line 1831
  00198	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0019d	8b c8		 mov	 ecx, eax
  0019f	e8 00 00 00 00	 call	 ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
  001a4	85 c0		 test	 eax, eax
  001a6	75 2f		 jne	 SHORT $LN43@DXUTChange
; Line 1833
  001a8	83 7d 08 00	 cmp	 DWORD PTR _pNewDeviceSettings$[ebp], 0
  001ac	74 1f		 je	 SHORT $LN42@DXUTChange
  001ae	8b 55 08	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  001b1	89 95 34 fd ff
	ff		 mov	 DWORD PTR $T5[ebp], edx
  001b7	8b 85 34 fd ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001c3	83 c4 04	 add	 esp, 4
  001c6	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pNewDeviceSettings$[ebp], 0
$LN42@DXUTChange:
; Line 1834
  001cd	b8 01 00 00 00	 mov	 eax, 1
  001d2	e9 5b 0b 00 00	 jmp	 $LN53@DXUTChange
$LN43@DXUTChange:
; Line 1836
  001d7	6a 00		 push	 0
  001d9	6a 00		 push	 0
  001db	8b 4d f0	 mov	 ecx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
  001de	51		 push	 ecx
  001df	e8 00 00 00 00	 call	 ?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
  001e4	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1838
  001e7	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001eb	7d 2b		 jge	 SHORT $LN47@DXUTChange
; Line 1840
  001ed	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  001f0	52		 push	 edx
  001f1	e8 00 00 00 00	 call	 ?DXUTDisplayErrorMessage@@YAXJ@Z ; DXUTDisplayErrorMessage
  001f6	83 c4 04	 add	 esp, 4
; Line 1841
  001f9	6a 00		 push	 0
  001fb	68 00 00 00 00	 push	 OFFSET $SG152108
  00200	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00203	50		 push	 eax
  00204	68 31 07 00 00	 push	 1841			; 00000731H
  00209	68 00 00 00 00	 push	 OFFSET $SG152109
  0020e	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00213	e9 1a 0b 00 00	 jmp	 $LN53@DXUTChange
$LN47@DXUTChange:
; Line 1846
  00218	8b 4d f0	 mov	 ecx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
  0021b	51		 push	 ecx
  0021c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00221	8b c8		 mov	 ecx, eax
  00223	e8 00 00 00 00	 call	 ?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
; Line 1848
  00228	6a 01		 push	 1
  0022a	6a 01		 push	 1
  0022c	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1851
  00231	c6 45 ea 00	 mov	 BYTE PTR _bKeepCurrentWindowSize$[ebp], 0
; Line 1853
  00235	8b 55 08	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  00238	52		 push	 edx
  00239	e8 00 00 00 00	 call	 ?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
  0023e	83 c4 04	 add	 esp, 4
  00241	85 c0		 test	 eax, eax
  00243	75 14		 jne	 SHORT $LN40@DXUTChange
  00245	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00248	50		 push	 eax
  00249	e8 00 00 00 00	 call	 ?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
  0024e	83 c4 04	 add	 esp, 4
  00251	85 c0		 test	 eax, eax
  00253	75 04		 jne	 SHORT $LN40@DXUTChange
; Line 1854
  00255	c6 45 ea 01	 mov	 BYTE PTR _bKeepCurrentWindowSize$[ebp], 1
$LN40@DXUTChange:
; Line 1860
  00259	8b 4d 08	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  0025c	51		 push	 ecx
  0025d	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  00262	83 c4 04	 add	 esp, 4
  00265	0f b6 d0	 movzx	 edx, al
  00268	85 d2		 test	 edx, edx
  0026a	74 4d		 je	 SHORT $LN39@DXUTChange
; Line 1863
  0026c	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  00270	74 45		 je	 SHORT $LN38@DXUTChange
  00272	8b 45 f4	 mov	 eax, DWORD PTR _pOldDeviceSettings$[ebp]
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  0027b	83 c4 04	 add	 esp, 4
  0027e	0f b6 c8	 movzx	 ecx, al
  00281	85 c9		 test	 ecx, ecx
  00283	75 32		 jne	 SHORT $LN38@DXUTChange
; Line 1867
  00285	8b 55 f4	 mov	 edx, DWORD PTR _pOldDeviceSettings$[ebp]
  00288	52		 push	 edx
  00289	e8 00 00 00 00	 call	 ?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
  0028e	83 c4 04	 add	 esp, 4
  00291	50		 push	 eax
  00292	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00297	8b c8		 mov	 ecx, eax
  00299	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 1869
  0029e	8b 45 f4	 mov	 eax, DWORD PTR _pOldDeviceSettings$[ebp]
  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 ?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
  002a7	83 c4 04	 add	 esp, 4
  002aa	50		 push	 eax
  002ab	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002b0	8b c8		 mov	 ecx, eax
  002b2	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
$LN38@DXUTChange:
; Line 1872
  002b7	eb 57		 jmp	 SHORT $LN37@DXUTChange
$LN39@DXUTChange:
; Line 1875
  002b9	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  002bd	74 19		 je	 SHORT $LN35@DXUTChange
  002bf	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  002c3	74 4b		 je	 SHORT $LN37@DXUTChange
  002c5	8b 4d f4	 mov	 ecx, DWORD PTR _pOldDeviceSettings$[ebp]
  002c8	51		 push	 ecx
  002c9	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  002ce	83 c4 04	 add	 esp, 4
  002d1	0f b6 d0	 movzx	 edx, al
  002d4	85 d2		 test	 edx, edx
  002d6	74 38		 je	 SHORT $LN37@DXUTChange
$LN35@DXUTChange:
; Line 1878
  002d8	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  002dc	74 32		 je	 SHORT $LN37@DXUTChange
; Line 1881
  002de	8b 45 f4	 mov	 eax, DWORD PTR _pOldDeviceSettings$[ebp]
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 ?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
  002e7	83 c4 04	 add	 esp, 4
  002ea	50		 push	 eax
  002eb	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002f0	8b c8		 mov	 ecx, eax
  002f2	e8 00 00 00 00	 call	 ?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 1883
  002f7	8b 4d f4	 mov	 ecx, DWORD PTR _pOldDeviceSettings$[ebp]
  002fa	51		 push	 ecx
  002fb	e8 00 00 00 00	 call	 ?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
  00300	83 c4 04	 add	 esp, 4
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00309	8b c8		 mov	 ecx, eax
  0030b	e8 00 00 00 00	 call	 ?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
$LN37@DXUTChange:
; Line 1888
  00310	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  00314	74 0a		 je	 SHORT $LN33@DXUTChange
; Line 1889
  00316	6a 00		 push	 0
  00318	e8 00 00 00 00	 call	 ?DXUTCleanup3DEnvironment@@YAX_N@Z ; DXUTCleanup3DEnvironment
  0031d	83 c4 04	 add	 esp, 4
$LN33@DXUTChange:
; Line 1892
  00320	e8 00 00 00 00	 call	 ?DXUTCreate3DEnvironment11@@YAJXZ ; DXUTCreate3DEnvironment11
  00325	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1893
  00328	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0032c	7d 5a		 jge	 SHORT $LN32@DXUTChange
; Line 1895
  0032e	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  00332	74 1f		 je	 SHORT $LN31@DXUTChange
  00334	8b 55 f4	 mov	 edx, DWORD PTR _pOldDeviceSettings$[ebp]
  00337	89 95 30 fd ff
	ff		 mov	 DWORD PTR $T4[ebp], edx
  0033d	8b 85 30 fd ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00349	83 c4 04	 add	 esp, 4
  0034c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pOldDeviceSettings$[ebp], 0
$LN31@DXUTChange:
; Line 1896
  00353	6a 01		 push	 1
  00355	e8 00 00 00 00	 call	 ?DXUTCleanup3DEnvironment@@YAX_N@Z ; DXUTCleanup3DEnvironment
  0035a	83 c4 04	 add	 esp, 4
; Line 1897
  0035d	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00360	51		 push	 ecx
  00361	e8 00 00 00 00	 call	 ?DXUTDisplayErrorMessage@@YAXJ@Z ; DXUTDisplayErrorMessage
  00366	83 c4 04	 add	 esp, 4
; Line 1898
  00369	6a 00		 push	 0
  0036b	6a 00		 push	 0
  0036d	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1899
  00372	6a 00		 push	 0
  00374	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00379	8b c8		 mov	 ecx, eax
  0037b	e8 00 00 00 00	 call	 ?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ; DXUTState::SetIgnoreSizeChange
; Line 1900
  00380	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00383	e9 aa 09 00 00	 jmp	 $LN53@DXUTChange
$LN32@DXUTChange:
; Line 1907
  00388	8b 55 08	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  0038b	52		 push	 edx
  0038c	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  00391	83 c4 04	 add	 esp, 4
  00394	0f b6 c0	 movzx	 eax, al
  00397	85 c0		 test	 eax, eax
  00399	74 14		 je	 SHORT $LN55@DXUTChange
  0039b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003a0	8b c8		 mov	 ecx, eax
  003a2	e8 00 00 00 00	 call	 ?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
  003a7	88 85 c3 fc ff
	ff		 mov	 BYTE PTR tv234[ebp], al
  003ad	eb 12		 jmp	 SHORT $LN56@DXUTChange
$LN55@DXUTChange:
  003af	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003b4	8b c8		 mov	 ecx, eax
  003b6	e8 00 00 00 00	 call	 ?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
  003bb	88 85 c3 fc ff
	ff		 mov	 BYTE PTR tv234[ebp], al
$LN56@DXUTChange:
  003c1	0f b6 8d c3 fc
	ff ff		 movzx	 ecx, BYTE PTR tv234[ebp]
  003c8	51		 push	 ecx
  003c9	e8 00 00 00 00	 call	 ?DXUTAllowShortcutKeys@@YAX_N@Z ; DXUTAllowShortcutKeys
  003ce	83 c4 04	 add	 esp, 4
; Line 1909
  003d1	8b 55 08	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  003d4	52		 push	 edx
  003d5	e8 00 00 00 00	 call	 ?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
  003da	83 c4 04	 add	 esp, 4
  003dd	89 45 e4	 mov	 DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 1910
  003e0	8b 45 e4	 mov	 eax, DWORD PTR _hAdapterMonitor$[ebp]
  003e3	50		 push	 eax
  003e4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003e9	8b c8		 mov	 ecx, eax
  003eb	e8 00 00 00 00	 call	 ?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z ; DXUTState::SetAdapterMonitor
; Line 1913
  003f0	e8 00 00 00 00	 call	 ?DXUTUpdateStaticFrameStats@@YAXXZ ; DXUTUpdateStaticFrameStats
; Line 1916
  003f5	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  003f9	0f 84 a7 00 00
	00		 je	 $LN30@DXUTChange
  003ff	8b 4d f4	 mov	 ecx, DWORD PTR _pOldDeviceSettings$[ebp]
  00402	51		 push	 ecx
  00403	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  00408	83 c4 04	 add	 esp, 4
  0040b	0f b6 d0	 movzx	 edx, al
  0040e	85 d2		 test	 edx, edx
  00410	0f 85 90 00 00
	00		 jne	 $LN30@DXUTChange
  00416	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00419	50		 push	 eax
  0041a	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  0041f	83 c4 04	 add	 esp, 4
  00422	0f b6 c8	 movzx	 ecx, al
  00425	85 c9		 test	 ecx, ecx
  00427	74 7d		 je	 SHORT $LN30@DXUTChange
; Line 1924
  00429	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0042e	8b c8		 mov	 ecx, eax
  00430	e8 00 00 00 00	 call	 ?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ ; DXUTState::GetWindowedPlacement
  00435	89 45 e0	 mov	 DWORD PTR _pwp$40[ebp], eax
; Line 1925
  00438	8b f4		 mov	 esi, esp
  0043a	8b 55 e0	 mov	 edx, DWORD PTR _pwp$40[ebp]
  0043d	52		 push	 edx
  0043e	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00443	50		 push	 eax
  00444	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPlacement@8
  0044a	3b f4		 cmp	 esi, esp
  0044c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1928
  00451	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00456	8b c8		 mov	 ecx, eax
  00458	e8 00 00 00 00	 call	 ?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetTopmostWhileWindowed
  0045d	0f b6 c0	 movzx	 eax, al
  00460	85 c0		 test	 eax, eax
  00462	74 0c		 je	 SHORT $LN57@DXUTChange
  00464	c7 85 bc fc ff
	ff ff ff ff ff	 mov	 DWORD PTR tv261[ebp], -1
  0046e	eb 0a		 jmp	 SHORT $LN58@DXUTChange
$LN57@DXUTChange:
  00470	c7 85 bc fc ff
	ff fe ff ff ff	 mov	 DWORD PTR tv261[ebp], -2 ; fffffffeH
$LN58@DXUTChange:
  0047a	8b 8d bc fc ff
	ff		 mov	 ecx, DWORD PTR tv261[ebp]
  00480	89 4d dc	 mov	 DWORD PTR _hWndInsertAfter$39[ebp], ecx
; Line 1930
  00483	8b f4		 mov	 esi, esp
  00485	6a 0b		 push	 11			; 0000000bH
  00487	6a 00		 push	 0
  00489	6a 00		 push	 0
  0048b	6a 00		 push	 0
  0048d	6a 00		 push	 0
  0048f	8b 55 dc	 mov	 edx, DWORD PTR _hWndInsertAfter$39[ebp]
  00492	52		 push	 edx
  00493	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00498	50		 push	 eax
  00499	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
  0049f	3b f4		 cmp	 esi, esp
  004a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN30@DXUTChange:
; Line 1936
  004a6	c6 45 db 00	 mov	 BYTE PTR _bNeedToResize$[ebp], 0
; Line 1938
  004aa	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  004ad	50		 push	 eax
  004ae	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  004b3	83 c4 04	 add	 esp, 4
  004b6	0f b6 c8	 movzx	 ecx, al
  004b9	85 c9		 test	 ecx, ecx
  004bb	0f 84 ba 02 00
	00		 je	 $LN29@DXUTChange
  004c1	0f b6 55 ea	 movzx	 edx, BYTE PTR _bKeepCurrentWindowSize$[ebp]
  004c5	85 d2		 test	 edx, edx
  004c7	0f 85 ae 02 00
	00		 jne	 $LN29@DXUTChange
; Line 1942
  004cd	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  004d2	8b f4		 mov	 esi, esp
  004d4	50		 push	 eax
  004d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsIconic@4
  004db	3b f4		 cmp	 esi, esp
  004dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e2	85 c0		 test	 eax, eax
  004e4	0f 84 4e 01 00
	00		 je	 $LN28@DXUTChange
; Line 1948
  004ea	6a 2c		 push	 44			; 0000002cH
  004ec	6a 00		 push	 0
  004ee	8d 45 a0	 lea	 eax, DWORD PTR _wp$36[ebp]
  004f1	50		 push	 eax
  004f2	e8 00 00 00 00	 call	 _memset
  004f7	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1949
  004fa	c7 45 a0 2c 00
	00 00		 mov	 DWORD PTR _wp$36[ebp], 44 ; 0000002cH
; Line 1950
  00501	8b f4		 mov	 esi, esp
  00503	8d 4d a0	 lea	 ecx, DWORD PTR _wp$36[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  0050c	50		 push	 eax
  0050d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowPlacement@8
  00513	3b f4		 cmp	 esi, esp
  00515	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1952
  0051a	8b 55 a4	 mov	 edx, DWORD PTR _wp$36[ebp+4]
  0051d	83 e2 02	 and	 edx, 2
  00520	74 64		 je	 SHORT $LN27@DXUTChange
  00522	83 7d a8 02	 cmp	 DWORD PTR _wp$36[ebp+8], 2
  00526	75 5e		 jne	 SHORT $LN27@DXUTChange
; Line 1958
  00528	8b f4		 mov	 esi, esp
  0052a	6a 09		 push	 9
  0052c	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00531	50		 push	 eax
  00532	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00538	3b f4		 cmp	 esi, esp
  0053a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1960
  0053f	8b f4		 mov	 esi, esp
  00541	8d 45 88	 lea	 eax, DWORD PTR _rcClient$35[ebp]
  00544	50		 push	 eax
  00545	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  0054a	50		 push	 eax
  0054b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00551	3b f4		 cmp	 esi, esp
  00553	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1961
  00558	8b 4d 90	 mov	 ecx, DWORD PTR _rcClient$35[ebp+8]
  0055b	2b 4d 88	 sub	 ecx, DWORD PTR _rcClient$35[ebp]
  0055e	89 4d d4	 mov	 DWORD PTR _nClientWidth$38[ebp], ecx
; Line 1962
  00561	8b 55 94	 mov	 edx, DWORD PTR _rcClient$35[ebp+12]
  00564	2b 55 8c	 sub	 edx, DWORD PTR _rcClient$35[ebp+4]
  00567	89 55 d0	 mov	 DWORD PTR _nClientHeight$37[ebp], edx
; Line 1963
  0056a	8b f4		 mov	 esi, esp
  0056c	6a 06		 push	 6
  0056e	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00573	50		 push	 eax
  00574	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0057a	3b f4		 cmp	 esi, esp
  0057c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1965
  00581	e9 b0 00 00 00	 jmp	 $LN26@DXUTChange
$LN27@DXUTChange:
; Line 1969
  00586	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _rcFrame$34[ebp], 0
  00590	33 c0		 xor	 eax, eax
  00592	89 85 74 ff ff
	ff		 mov	 DWORD PTR _rcFrame$34[ebp+4], eax
  00598	89 85 78 ff ff
	ff		 mov	 DWORD PTR _rcFrame$34[ebp+8], eax
  0059e	89 85 7c ff ff
	ff		 mov	 DWORD PTR _rcFrame$34[ebp+12], eax
; Line 1970
  005a4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005a9	8b c8		 mov	 ecx, eax
  005ab	e8 00 00 00 00	 call	 ?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ ; DXUTState::GetMenu
  005b0	85 c0		 test	 eax, eax
  005b2	74 0c		 je	 SHORT $LN59@DXUTChange
  005b4	c7 85 b8 fc ff
	ff 01 00 00 00	 mov	 DWORD PTR tv308[ebp], 1
  005be	eb 0a		 jmp	 SHORT $LN60@DXUTChange
$LN59@DXUTChange:
  005c0	c7 85 b8 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv308[ebp], 0
$LN60@DXUTChange:
  005ca	8b f4		 mov	 esi, esp
  005cc	8b 8d b8 fc ff
	ff		 mov	 ecx, DWORD PTR tv308[ebp]
  005d2	51		 push	 ecx
  005d3	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005d8	8b c8		 mov	 ecx, eax
  005da	e8 00 00 00 00	 call	 ?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ ; DXUTState::GetWindowedStyleAtModeChange
  005df	50		 push	 eax
  005e0	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcFrame$34[ebp]
  005e6	52		 push	 edx
  005e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AdjustWindowRect@12
  005ed	3b f4		 cmp	 esi, esp
  005ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1971
  005f4	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _rcFrame$34[ebp+8]
  005fa	2b 85 70 ff ff
	ff		 sub	 eax, DWORD PTR _rcFrame$34[ebp]
  00600	89 85 68 ff ff
	ff		 mov	 DWORD PTR _nFrameWidth$33[ebp], eax
; Line 1972
  00606	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _rcFrame$34[ebp+12]
  0060c	2b 8d 74 ff ff
	ff		 sub	 ecx, DWORD PTR _rcFrame$34[ebp+4]
  00612	89 8d 64 ff ff
	ff		 mov	 DWORD PTR _nFrameHeight$32[ebp], ecx
; Line 1973
  00618	8b 55 c4	 mov	 edx, DWORD PTR _wp$36[ebp+36]
  0061b	2b 55 bc	 sub	 edx, DWORD PTR _wp$36[ebp+28]
  0061e	2b 95 68 ff ff
	ff		 sub	 edx, DWORD PTR _nFrameWidth$33[ebp]
  00624	89 55 d4	 mov	 DWORD PTR _nClientWidth$38[ebp], edx
; Line 1974
  00627	8b 45 c8	 mov	 eax, DWORD PTR _wp$36[ebp+40]
  0062a	2b 45 c0	 sub	 eax, DWORD PTR _wp$36[ebp+32]
  0062d	2b 85 64 ff ff
	ff		 sub	 eax, DWORD PTR _nFrameHeight$32[ebp]
  00633	89 45 d0	 mov	 DWORD PTR _nClientHeight$37[ebp], eax
$LN26@DXUTChange:
; Line 1977
  00636	eb 3a		 jmp	 SHORT $LN25@DXUTChange
$LN28@DXUTChange:
; Line 1981
  00638	8b f4		 mov	 esi, esp
  0063a	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _rcClient$31[ebp]
  00640	51		 push	 ecx
  00641	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00646	50		 push	 eax
  00647	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0064d	3b f4		 cmp	 esi, esp
  0064f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1982
  00654	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _rcClient$31[ebp+8]
  0065a	2b 95 50 ff ff
	ff		 sub	 edx, DWORD PTR _rcClient$31[ebp]
  00660	89 55 d4	 mov	 DWORD PTR _nClientWidth$38[ebp], edx
; Line 1983
  00663	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _rcClient$31[ebp+12]
  00669	2b 85 54 ff ff
	ff		 sub	 eax, DWORD PTR _rcClient$31[ebp+4]
  0066f	89 45 d0	 mov	 DWORD PTR _nClientHeight$37[ebp], eax
$LN25@DXUTChange:
; Line 1989
  00672	8b 4d 08	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  00675	51		 push	 ecx
  00676	e8 00 00 00 00	 call	 ?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
  0067b	83 c4 04	 add	 esp, 4
  0067e	39 45 d4	 cmp	 DWORD PTR _nClientWidth$38[ebp], eax
  00681	75 11		 jne	 SHORT $LN23@DXUTChange
  00683	8b 55 08	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  00686	52		 push	 edx
  00687	e8 00 00 00 00	 call	 ?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
  0068c	83 c4 04	 add	 esp, 4
  0068f	39 45 d0	 cmp	 DWORD PTR _nClientHeight$37[ebp], eax
  00692	74 04		 je	 SHORT $LN24@DXUTChange
$LN23@DXUTChange:
; Line 1991
  00694	c6 45 db 01	 mov	 BYTE PTR _bNeedToResize$[ebp], 1
$LN24@DXUTChange:
; Line 1994
  00698	0f b6 45 0c	 movzx	 eax, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
  0069c	85 c0		 test	 eax, eax
  0069e	0f 84 d7 00 00
	00		 je	 $LN29@DXUTChange
  006a4	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  006a9	8b f4		 mov	 esi, esp
  006ab	50		 push	 eax
  006ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsIconic@4
  006b2	3b f4		 cmp	 esi, esp
  006b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006b9	85 c0		 test	 eax, eax
  006bb	0f 85 ba 00 00
	00		 jne	 $LN29@DXUTChange
; Line 1998
  006c1	c7 85 20 ff ff
	ff 28 00 00 00	 mov	 DWORD PTR _miAdapter$30[ebp], 40 ; 00000028H
; Line 1999
  006cb	8b 4d 08	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  006ce	51		 push	 ecx
  006cf	e8 00 00 00 00	 call	 ?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
  006d4	83 c4 04	 add	 esp, 4
  006d7	89 45 e4	 mov	 DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 2000
  006da	8d 95 20 ff ff
	ff		 lea	 edx, DWORD PTR _miAdapter$30[ebp]
  006e0	52		 push	 edx
  006e1	8b 45 e4	 mov	 eax, DWORD PTR _hAdapterMonitor$[ebp]
  006e4	50		 push	 eax
  006e5	e8 00 00 00 00	 call	 ?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 2001
  006ea	6a 01		 push	 1
  006ec	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  006f1	50		 push	 eax
  006f2	e8 00 00 00 00	 call	 ?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ; DXUTMonitorFromWindow
  006f7	89 85 18 ff ff
	ff		 mov	 DWORD PTR _hWindowMonitor$29[ebp], eax
; Line 2005
  006fd	8b f4		 mov	 esi, esp
  006ff	8d 8d 04 ff ff
	ff		 lea	 ecx, DWORD PTR _rcWindow$28[ebp]
  00705	51		 push	 ecx
  00706	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  0070b	50		 push	 eax
  0070c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  00712	3b f4		 cmp	 esi, esp
  00714	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2011
  00719	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR _rcWindow$28[ebp]
  0071f	3b 95 34 ff ff
	ff		 cmp	 edx, DWORD PTR _miAdapter$30[ebp+20]
  00725	7c 2a		 jl	 SHORT $LN20@DXUTChange
  00727	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _rcWindow$28[ebp+8]
  0072d	3b 85 3c ff ff
	ff		 cmp	 eax, DWORD PTR _miAdapter$30[ebp+28]
  00733	7f 1c		 jg	 SHORT $LN20@DXUTChange
  00735	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _rcWindow$28[ebp+4]
  0073b	3b 8d 38 ff ff
	ff		 cmp	 ecx, DWORD PTR _miAdapter$30[ebp+24]
  00741	7c 0e		 jl	 SHORT $LN20@DXUTChange
  00743	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR _rcWindow$28[ebp+12]
  00749	3b 95 40 ff ff
	ff		 cmp	 edx, DWORD PTR _miAdapter$30[ebp+32]
  0074f	7e 2a		 jle	 SHORT $LN29@DXUTChange
$LN20@DXUTChange:
; Line 2013
  00751	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _hWindowMonitor$29[ebp]
  00757	3b 45 e4	 cmp	 eax, DWORD PTR _hAdapterMonitor$[ebp]
  0075a	75 1b		 jne	 SHORT $LN19@DXUTChange
  0075c	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00761	8b f4		 mov	 esi, esp
  00763	50		 push	 eax
  00764	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsZoomed@4
  0076a	3b f4		 cmp	 esi, esp
  0076c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00771	85 c0		 test	 eax, eax
  00773	74 02		 je	 SHORT $LN19@DXUTChange
; Line 2019
  00775	eb 04		 jmp	 SHORT $LN29@DXUTChange
$LN19@DXUTChange:
; Line 2021
  00777	c6 45 db 01	 mov	 BYTE PTR _bNeedToResize$[ebp], 1
$LN29@DXUTChange:
; Line 2029
  0077b	0f b6 4d db	 movzx	 ecx, BYTE PTR _bNeedToResize$[ebp]
  0077f	85 c9		 test	 ecx, ecx
  00781	0f 84 f9 04 00
	00		 je	 $LN17@DXUTChange
; Line 2032
  00787	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  0078c	8b f4		 mov	 esi, esp
  0078e	50		 push	 eax
  0078f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsIconic@4
  00795	3b f4		 cmp	 esi, esp
  00797	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079c	85 c0		 test	 eax, eax
  0079e	74 17		 je	 SHORT $LN16@DXUTChange
; Line 2033
  007a0	8b f4		 mov	 esi, esp
  007a2	6a 09		 push	 9
  007a4	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  007a9	50		 push	 eax
  007aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  007b0	3b f4		 cmp	 esi, esp
  007b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN16@DXUTChange:
; Line 2034
  007b7	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  007bc	8b f4		 mov	 esi, esp
  007be	50		 push	 eax
  007bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsZoomed@4
  007c5	3b f4		 cmp	 esi, esp
  007c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007cc	85 c0		 test	 eax, eax
  007ce	74 17		 je	 SHORT $LN15@DXUTChange
; Line 2035
  007d0	8b f4		 mov	 esi, esp
  007d2	6a 09		 push	 9
  007d4	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  007d9	50		 push	 eax
  007da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  007e0	3b f4		 cmp	 esi, esp
  007e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@DXUTChange:
; Line 2037
  007e7	0f b6 55 0c	 movzx	 edx, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
  007eb	85 d2		 test	 edx, edx
  007ed	0f 84 88 02 00
	00		 je	 $LN14@DXUTChange
; Line 2041
  007f3	c7 85 d4 fe ff
	ff 28 00 00 00	 mov	 DWORD PTR _miAdapter$27[ebp], 40 ; 00000028H
; Line 2042
  007fd	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00800	50		 push	 eax
  00801	e8 00 00 00 00	 call	 ?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
  00806	83 c4 04	 add	 esp, 4
  00809	89 45 e4	 mov	 DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 2043
  0080c	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _miAdapter$27[ebp]
  00812	51		 push	 ecx
  00813	8b 55 e4	 mov	 edx, DWORD PTR _hAdapterMonitor$[ebp]
  00816	52		 push	 edx
  00817	e8 00 00 00 00	 call	 ?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 2047
  0081c	c7 85 a4 fe ff
	ff 28 00 00 00	 mov	 DWORD PTR _miWindow$26[ebp], 40 ; 00000028H
; Line 2048
  00826	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _miWindow$26[ebp]
  0082c	50		 push	 eax
  0082d	6a 01		 push	 1
  0082f	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00834	50		 push	 eax
  00835	e8 00 00 00 00	 call	 ?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ; DXUTMonitorFromWindow
  0083a	50		 push	 eax
  0083b	e8 00 00 00 00	 call	 ?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 2051
  00840	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _miAdapter$27[ebp+28]
  00846	2b 8d e8 fe ff
	ff		 sub	 ecx, DWORD PTR _miAdapter$27[ebp+20]
  0084c	89 8d 9c fe ff
	ff		 mov	 DWORD PTR _nAdapterMonitorWidth$25[ebp], ecx
; Line 2052
  00852	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _miAdapter$27[ebp+32]
  00858	2b 95 ec fe ff
	ff		 sub	 edx, DWORD PTR _miAdapter$27[ebp+24]
  0085e	89 95 98 fe ff
	ff		 mov	 DWORD PTR _nAdapterMonitorHeight$24[ebp], edx
; Line 2054
  00864	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00867	50		 push	 eax
  00868	e8 00 00 00 00	 call	 ?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
  0086d	83 c4 04	 add	 esp, 4
  00870	89 85 94 fe ff
	ff		 mov	 DWORD PTR _nClientWidth$23[ebp], eax
; Line 2055
  00876	8b 4d 08	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  00879	51		 push	 ecx
  0087a	e8 00 00 00 00	 call	 ?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
  0087f	83 c4 04	 add	 esp, 4
  00882	89 85 90 fe ff
	ff		 mov	 DWORD PTR _nClientHeight$22[ebp], eax
; Line 2059
  00888	8b f4		 mov	 esi, esp
  0088a	8d 95 7c fe ff
	ff		 lea	 edx, DWORD PTR _rcWindow$21[ebp]
  00890	52		 push	 edx
  00891	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00896	50		 push	 eax
  00897	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  0089d	3b f4		 cmp	 esi, esp
  0089f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2063
  008a4	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _rcResizedWindow$20[ebp], 0
; Line 2064
  008ae	8b 85 94 fe ff
	ff		 mov	 eax, DWORD PTR _nClientWidth$23[ebp]
  008b4	89 85 6c fe ff
	ff		 mov	 DWORD PTR _rcResizedWindow$20[ebp+8], eax
; Line 2065
  008ba	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _rcResizedWindow$20[ebp+4], 0
; Line 2066
  008c4	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR _nClientHeight$22[ebp]
  008ca	89 8d 70 fe ff
	ff		 mov	 DWORD PTR _rcResizedWindow$20[ebp+12], ecx
; Line 2068
  008d0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  008d5	8b c8		 mov	 ecx, eax
  008d7	e8 00 00 00 00	 call	 ?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ ; DXUTState::GetMenu
  008dc	85 c0		 test	 eax, eax
  008de	74 0c		 je	 SHORT $LN61@DXUTChange
  008e0	c7 85 b4 fc ff
	ff 01 00 00 00	 mov	 DWORD PTR tv463[ebp], 1
  008ea	eb 0a		 jmp	 SHORT $LN62@DXUTChange
$LN61@DXUTChange:
  008ec	c7 85 b4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv463[ebp], 0
$LN62@DXUTChange:
  008f6	8b f4		 mov	 esi, esp
  008f8	8b 95 b4 fc ff
	ff		 mov	 edx, DWORD PTR tv463[ebp]
  008fe	52		 push	 edx
  008ff	8b fc		 mov	 edi, esp
  00901	6a f0		 push	 -16			; fffffff0H
  00903	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00908	50		 push	 eax
  00909	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  0090f	3b fc		 cmp	 edi, esp
  00911	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00916	50		 push	 eax
  00917	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _rcResizedWindow$20[ebp]
  0091d	50		 push	 eax
  0091e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AdjustWindowRect@12
  00924	3b f4		 cmp	 esi, esp
  00926	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2070
  0092b	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR _rcResizedWindow$20[ebp+8]
  00931	2b 8d 64 fe ff
	ff		 sub	 ecx, DWORD PTR _rcResizedWindow$20[ebp]
  00937	89 8d 5c fe ff
	ff		 mov	 DWORD PTR _nWindowWidth$19[ebp], ecx
; Line 2071
  0093d	8b 95 70 fe ff
	ff		 mov	 edx, DWORD PTR _rcResizedWindow$20[ebp+12]
  00943	2b 95 68 fe ff
	ff		 sub	 edx, DWORD PTR _rcResizedWindow$20[ebp+4]
  00949	89 95 58 fe ff
	ff		 mov	 DWORD PTR _nWindowHeight$18[ebp], edx
; Line 2073
  0094f	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _nWindowWidth$19[ebp]
  00955	3b 85 9c fe ff
	ff		 cmp	 eax, DWORD PTR _nAdapterMonitorWidth$25[ebp]
  0095b	7e 0c		 jle	 SHORT $LN13@DXUTChange
; Line 2074
  0095d	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR _nAdapterMonitorWidth$25[ebp]
  00963	89 8d 5c fe ff
	ff		 mov	 DWORD PTR _nWindowWidth$19[ebp], ecx
$LN13@DXUTChange:
; Line 2075
  00969	8b 95 58 fe ff
	ff		 mov	 edx, DWORD PTR _nWindowHeight$18[ebp]
  0096f	3b 95 98 fe ff
	ff		 cmp	 edx, DWORD PTR _nAdapterMonitorHeight$24[ebp]
  00975	7e 0c		 jle	 SHORT $LN12@DXUTChange
; Line 2076
  00977	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _nAdapterMonitorHeight$24[ebp]
  0097d	89 85 58 fe ff
	ff		 mov	 DWORD PTR _nWindowHeight$18[ebp], eax
$LN12@DXUTChange:
; Line 2081
  00983	8b 8d 64 fe ff
	ff		 mov	 ecx, DWORD PTR _rcResizedWindow$20[ebp]
  00989	3b 8d e8 fe ff
	ff		 cmp	 ecx, DWORD PTR _miAdapter$27[ebp+20]
  0098f	7c 2e		 jl	 SHORT $LN10@DXUTChange
  00991	8b 95 68 fe ff
	ff		 mov	 edx, DWORD PTR _rcResizedWindow$20[ebp+4]
  00997	3b 95 ec fe ff
	ff		 cmp	 edx, DWORD PTR _miAdapter$27[ebp+24]
  0099d	7c 20		 jl	 SHORT $LN10@DXUTChange
  0099f	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _rcResizedWindow$20[ebp+8]
  009a5	3b 85 f0 fe ff
	ff		 cmp	 eax, DWORD PTR _miAdapter$27[ebp+28]
  009ab	7f 12		 jg	 SHORT $LN10@DXUTChange
  009ad	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _rcResizedWindow$20[ebp+12]
  009b3	3b 8d f4 fe ff
	ff		 cmp	 ecx, DWORD PTR _miAdapter$27[ebp+32]
  009b9	0f 8e 82 00 00
	00		 jle	 $LN11@DXUTChange
$LN10@DXUTChange:
; Line 2083
  009bf	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _nAdapterMonitorWidth$25[ebp]
  009c5	2b 85 5c fe ff
	ff		 sub	 eax, DWORD PTR _nWindowWidth$19[ebp]
  009cb	99		 cdq
  009cc	2b c2		 sub	 eax, edx
  009ce	d1 f8		 sar	 eax, 1
  009d0	89 85 54 fe ff
	ff		 mov	 DWORD PTR _nWindowOffsetX$17[ebp], eax
; Line 2084
  009d6	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _nAdapterMonitorHeight$24[ebp]
  009dc	2b 85 58 fe ff
	ff		 sub	 eax, DWORD PTR _nWindowHeight$18[ebp]
  009e2	99		 cdq
  009e3	2b c2		 sub	 eax, edx
  009e5	d1 f8		 sar	 eax, 1
  009e7	89 85 50 fe ff
	ff		 mov	 DWORD PTR _nWindowOffsetY$16[ebp], eax
; Line 2086
  009ed	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _miAdapter$27[ebp+20]
  009f3	03 95 54 fe ff
	ff		 add	 edx, DWORD PTR _nWindowOffsetX$17[ebp]
  009f9	89 95 64 fe ff
	ff		 mov	 DWORD PTR _rcResizedWindow$20[ebp], edx
; Line 2087
  009ff	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _miAdapter$27[ebp+24]
  00a05	03 85 50 fe ff
	ff		 add	 eax, DWORD PTR _nWindowOffsetY$16[ebp]
  00a0b	89 85 68 fe ff
	ff		 mov	 DWORD PTR _rcResizedWindow$20[ebp+4], eax
; Line 2088
  00a11	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _miAdapter$27[ebp+20]
  00a17	03 8d 54 fe ff
	ff		 add	 ecx, DWORD PTR _nWindowOffsetX$17[ebp]
  00a1d	03 8d 5c fe ff
	ff		 add	 ecx, DWORD PTR _nWindowWidth$19[ebp]
  00a23	89 8d 6c fe ff
	ff		 mov	 DWORD PTR _rcResizedWindow$20[ebp+8], ecx
; Line 2089
  00a29	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _miAdapter$27[ebp+24]
  00a2f	03 95 50 fe ff
	ff		 add	 edx, DWORD PTR _nWindowOffsetY$16[ebp]
  00a35	03 95 58 fe ff
	ff		 add	 edx, DWORD PTR _nWindowHeight$18[ebp]
  00a3b	89 95 70 fe ff
	ff		 mov	 DWORD PTR _rcResizedWindow$20[ebp+12], edx
$LN11@DXUTChange:
; Line 2096
  00a41	8b f4		 mov	 esi, esp
  00a43	6a 04		 push	 4
  00a45	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _nWindowHeight$18[ebp]
  00a4b	50		 push	 eax
  00a4c	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR _nWindowWidth$19[ebp]
  00a52	51		 push	 ecx
  00a53	8b 95 68 fe ff
	ff		 mov	 edx, DWORD PTR _rcResizedWindow$20[ebp+4]
  00a59	52		 push	 edx
  00a5a	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _rcResizedWindow$20[ebp]
  00a60	50		 push	 eax
  00a61	6a 00		 push	 0
  00a63	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00a68	50		 push	 eax
  00a69	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
  00a6f	3b f4		 cmp	 esi, esp
  00a71	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2098
  00a76	e9 ec 00 00 00	 jmp	 $LN9@DXUTChange
$LN14@DXUTChange:
; Line 2101
  00a7b	c7 85 3c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _rcWindow$15[ebp], 0
  00a85	33 c9		 xor	 ecx, ecx
  00a87	89 8d 40 fe ff
	ff		 mov	 DWORD PTR _rcWindow$15[ebp+4], ecx
  00a8d	89 8d 44 fe ff
	ff		 mov	 DWORD PTR _rcWindow$15[ebp+8], ecx
  00a93	89 8d 48 fe ff
	ff		 mov	 DWORD PTR _rcWindow$15[ebp+12], ecx
; Line 2102
  00a99	8b 55 08	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  00a9c	52		 push	 edx
  00a9d	e8 00 00 00 00	 call	 ?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
  00aa2	83 c4 04	 add	 esp, 4
  00aa5	89 85 44 fe ff
	ff		 mov	 DWORD PTR _rcWindow$15[ebp+8], eax
; Line 2103
  00aab	8b 45 08	 mov	 eax, DWORD PTR _pNewDeviceSettings$[ebp]
  00aae	50		 push	 eax
  00aaf	e8 00 00 00 00	 call	 ?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
  00ab4	83 c4 04	 add	 esp, 4
  00ab7	89 85 48 fe ff
	ff		 mov	 DWORD PTR _rcWindow$15[ebp+12], eax
; Line 2104
  00abd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00ac2	8b c8		 mov	 ecx, eax
  00ac4	e8 00 00 00 00	 call	 ?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ ; DXUTState::GetMenu
  00ac9	85 c0		 test	 eax, eax
  00acb	74 0c		 je	 SHORT $LN63@DXUTChange
  00acd	c7 85 b0 fc ff
	ff 01 00 00 00	 mov	 DWORD PTR tv540[ebp], 1
  00ad7	eb 0a		 jmp	 SHORT $LN64@DXUTChange
$LN63@DXUTChange:
  00ad9	c7 85 b0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv540[ebp], 0
$LN64@DXUTChange:
  00ae3	8b f4		 mov	 esi, esp
  00ae5	8b 8d b0 fc ff
	ff		 mov	 ecx, DWORD PTR tv540[ebp]
  00aeb	51		 push	 ecx
  00aec	8b fc		 mov	 edi, esp
  00aee	6a f0		 push	 -16			; fffffff0H
  00af0	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00af5	50		 push	 eax
  00af6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00afc	3b fc		 cmp	 edi, esp
  00afe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b03	50		 push	 eax
  00b04	8d 95 3c fe ff
	ff		 lea	 edx, DWORD PTR _rcWindow$15[ebp]
  00b0a	52		 push	 edx
  00b0b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AdjustWindowRect@12
  00b11	3b f4		 cmp	 esi, esp
  00b13	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2109
  00b18	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR _rcWindow$15[ebp+8]
  00b1e	2b 85 3c fe ff
	ff		 sub	 eax, DWORD PTR _rcWindow$15[ebp]
  00b24	89 85 34 fe ff
	ff		 mov	 DWORD PTR _cx$14[ebp], eax
; Line 2110
  00b2a	8b 8d 48 fe ff
	ff		 mov	 ecx, DWORD PTR _rcWindow$15[ebp+12]
  00b30	2b 8d 40 fe ff
	ff		 sub	 ecx, DWORD PTR _rcWindow$15[ebp+4]
  00b36	89 8d 30 fe ff
	ff		 mov	 DWORD PTR _cy$13[ebp], ecx
; Line 2111
  00b3c	8b f4		 mov	 esi, esp
  00b3e	6a 06		 push	 6
  00b40	8b 95 30 fe ff
	ff		 mov	 edx, DWORD PTR _cy$13[ebp]
  00b46	52		 push	 edx
  00b47	8b 85 34 fe ff
	ff		 mov	 eax, DWORD PTR _cx$14[ebp]
  00b4d	50		 push	 eax
  00b4e	6a 00		 push	 0
  00b50	6a 00		 push	 0
  00b52	6a 00		 push	 0
  00b54	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00b59	50		 push	 eax
  00b5a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
  00b60	3b f4		 cmp	 esi, esp
  00b62	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@DXUTChange:
; Line 2119
  00b67	8b f4		 mov	 esi, esp
  00b69	8d 8d 1c fe ff
	ff		 lea	 ecx, DWORD PTR _rcClient$12[ebp]
  00b6f	51		 push	 ecx
  00b70	e8 00 00 00 00	 call	 ?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
  00b75	50		 push	 eax
  00b76	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00b7c	3b f4		 cmp	 esi, esp
  00b7e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2120
  00b83	8b 95 24 fe ff
	ff		 mov	 edx, DWORD PTR _rcClient$12[ebp+8]
  00b89	2b 95 1c fe ff
	ff		 sub	 edx, DWORD PTR _rcClient$12[ebp]
  00b8f	89 95 14 fe ff
	ff		 mov	 DWORD PTR _nClientWidth$11[ebp], edx
; Line 2121
  00b95	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR _rcClient$12[ebp+12]
  00b9b	2b 85 20 fe ff
	ff		 sub	 eax, DWORD PTR _rcClient$12[ebp+4]
  00ba1	89 85 10 fe ff
	ff		 mov	 DWORD PTR _nClientHeight$10[ebp], eax
; Line 2123
  00ba7	8b 4d 08	 mov	 ecx, DWORD PTR _pNewDeviceSettings$[ebp]
  00baa	51		 push	 ecx
  00bab	e8 00 00 00 00	 call	 ?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
  00bb0	83 c4 04	 add	 esp, 4
  00bb3	39 85 14 fe ff
	ff		 cmp	 DWORD PTR _nClientWidth$11[ebp], eax
  00bb9	75 18		 jne	 SHORT $LN7@DXUTChange
  00bbb	8b 55 08	 mov	 edx, DWORD PTR _pNewDeviceSettings$[ebp]
  00bbe	52		 push	 edx
  00bbf	e8 00 00 00 00	 call	 ?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
  00bc4	83 c4 04	 add	 esp, 4
  00bc7	39 85 10 fe ff
	ff		 cmp	 DWORD PTR _nClientHeight$10[ebp], eax
  00bcd	0f 84 ad 00 00
	00		 je	 $LN17@DXUTChange
$LN7@DXUTChange:
; Line 2127
  00bd3	8d 85 cc fc ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00bd9	50		 push	 eax
  00bda	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  00bdf	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00be4	8b f0		 mov	 esi, eax
  00be6	8d bd 40 fd ff
	ff		 lea	 edi, DWORD PTR $T8[ebp]
  00bec	f3 a5		 rep movsd
  00bee	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00bf3	8d b5 40 fd ff
	ff		 lea	 esi, DWORD PTR $T8[ebp]
  00bf9	8d bd a8 fd ff
	ff		 lea	 edi, DWORD PTR _deviceSettings$9[ebp]
  00bff	f3 a5		 rep movsd
; Line 2128
  00c01	c7 85 b8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _deviceSettings$9[ebp+16], 0
; Line 2129
  00c0b	c7 85 bc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _deviceSettings$9[ebp+20], 0
; Line 2131
  00c15	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
  00c19	51		 push	 ecx
  00c1a	8d 95 a8 fd ff
	ff		 lea	 edx, DWORD PTR _deviceSettings$9[ebp]
  00c20	52		 push	 edx
  00c21	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  00c26	83 c4 08	 add	 esp, 8
  00c29	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2132
  00c2c	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00c30	7d 4e		 jge	 SHORT $LN17@DXUTChange
; Line 2134
  00c32	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  00c36	74 1f		 je	 SHORT $LN5@DXUTChange
  00c38	8b 45 f4	 mov	 eax, DWORD PTR _pOldDeviceSettings$[ebp]
  00c3b	89 85 c8 fc ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00c41	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00c47	51		 push	 ecx
  00c48	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00c4d	83 c4 04	 add	 esp, 4
  00c50	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pOldDeviceSettings$[ebp], 0
$LN5@DXUTChange:
; Line 2135
  00c57	6a 01		 push	 1
  00c59	e8 00 00 00 00	 call	 ?DXUTCleanup3DEnvironment@@YAX_N@Z ; DXUTCleanup3DEnvironment
  00c5e	83 c4 04	 add	 esp, 4
; Line 2136
  00c61	6a 00		 push	 0
  00c63	6a 00		 push	 0
  00c65	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 2137
  00c6a	6a 00		 push	 0
  00c6c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00c71	8b c8		 mov	 ecx, eax
  00c73	e8 00 00 00 00	 call	 ?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ; DXUTState::SetIgnoreSizeChange
; Line 2138
  00c78	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00c7b	e9 b2 00 00 00	 jmp	 $LN53@DXUTChange
$LN17@DXUTChange:
; Line 2149
  00c80	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00c85	8b f4		 mov	 esi, esp
  00c87	50		 push	 eax
  00c88	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindowVisible@4
  00c8e	3b f4		 cmp	 esi, esp
  00c90	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c95	85 c0		 test	 eax, eax
  00c97	75 17		 jne	 SHORT $LN4@DXUTChange
; Line 2150
  00c99	8b f4		 mov	 esi, esp
  00c9b	6a 05		 push	 5
  00c9d	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00ca2	50		 push	 eax
  00ca3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00ca9	3b f4		 cmp	 esi, esp
  00cab	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@DXUTChange:
; Line 2153
  00cb0	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00cb5	0f b6 d0	 movzx	 edx, al
  00cb8	85 d2		 test	 edx, edx
  00cba	75 16		 jne	 SHORT $LN3@DXUTChange
; Line 2154
  00cbc	8b f4		 mov	 esi, esp
  00cbe	68 02 00 00 80	 push	 -2147483646		; 80000002H
  00cc3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetThreadExecutionState@4
  00cc9	3b f4		 cmp	 esi, esp
  00ccb	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2155
  00cd0	eb 14		 jmp	 SHORT $LN2@DXUTChange
$LN3@DXUTChange:
; Line 2156
  00cd2	8b f4		 mov	 esi, esp
  00cd4	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00cd9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetThreadExecutionState@4
  00cdf	3b f4		 cmp	 esi, esp
  00ce1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTChange:
; Line 2158
  00ce6	83 7d f4 00	 cmp	 DWORD PTR _pOldDeviceSettings$[ebp], 0
  00cea	74 1f		 je	 SHORT $LN1@DXUTChange
  00cec	8b 45 f4	 mov	 eax, DWORD PTR _pOldDeviceSettings$[ebp]
  00cef	89 85 c4 fc ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00cf5	8b 8d c4 fc ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00cfb	51		 push	 ecx
  00cfc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00d01	83 c4 04	 add	 esp, 4
  00d04	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pOldDeviceSettings$[ebp], 0
$LN1@DXUTChange:
; Line 2159
  00d0b	6a 00		 push	 0
  00d0d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00d12	8b c8		 mov	 ecx, eax
  00d14	e8 00 00 00 00	 call	 ?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ; DXUTState::SetIgnoreSizeChange
; Line 2160
  00d19	6a 00		 push	 0
  00d1b	6a 00		 push	 0
  00d1d	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 2161
  00d22	6a 01		 push	 1
  00d24	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00d29	8b c8		 mov	 ecx, eax
  00d2b	e8 00 00 00 00	 call	 ?SetDeviceCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceCreated
; Line 2163
  00d30	33 c0		 xor	 eax, eax
$LN53@DXUTChange:
; Line 2164
  00d32	52		 push	 edx
  00d33	8b cd		 mov	 ecx, ebp
  00d35	50		 push	 eax
  00d36	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN79@DXUTChange
  00d3c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00d41	58		 pop	 eax
  00d42	5a		 pop	 edx
  00d43	5f		 pop	 edi
  00d44	5e		 pop	 esi
  00d45	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00d48	33 cd		 xor	 ecx, ebp
  00d4a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00d4f	81 c4 50 03 00
	00		 add	 esp, 848		; 00000350H
  00d55	3b ec		 cmp	 ebp, esp
  00d57	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d5c	8b e5		 mov	 esp, ebp
  00d5e	5d		 pop	 ebp
  00d5f	c3		 ret	 0
$LN79@DXUTChange:
  00d60	0d 00 00 00	 DD	 13			; 0000000dH
  00d64	00 00 00 00	 DD	 $LN78@DXUTChange
$LN78@DXUTChange:
  00d68	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00d6c	2c 00 00 00	 DD	 44			; 0000002cH
  00d70	00 00 00 00	 DD	 $LN65@DXUTChange
  00d74	88 ff ff ff	 DD	 -120			; ffffff88H
  00d78	10 00 00 00	 DD	 16			; 00000010H
  00d7c	00 00 00 00	 DD	 $LN66@DXUTChange
  00d80	70 ff ff ff	 DD	 -144			; ffffff70H
  00d84	10 00 00 00	 DD	 16			; 00000010H
  00d88	00 00 00 00	 DD	 $LN67@DXUTChange
  00d8c	50 ff ff ff	 DD	 -176			; ffffff50H
  00d90	10 00 00 00	 DD	 16			; 00000010H
  00d94	00 00 00 00	 DD	 $LN68@DXUTChange
  00d98	20 ff ff ff	 DD	 -224			; ffffff20H
  00d9c	28 00 00 00	 DD	 40			; 00000028H
  00da0	00 00 00 00	 DD	 $LN69@DXUTChange
  00da4	04 ff ff ff	 DD	 -252			; ffffff04H
  00da8	10 00 00 00	 DD	 16			; 00000010H
  00dac	00 00 00 00	 DD	 $LN70@DXUTChange
  00db0	d4 fe ff ff	 DD	 -300			; fffffed4H
  00db4	28 00 00 00	 DD	 40			; 00000028H
  00db8	00 00 00 00	 DD	 $LN71@DXUTChange
  00dbc	a4 fe ff ff	 DD	 -348			; fffffea4H
  00dc0	28 00 00 00	 DD	 40			; 00000028H
  00dc4	00 00 00 00	 DD	 $LN72@DXUTChange
  00dc8	7c fe ff ff	 DD	 -388			; fffffe7cH
  00dcc	10 00 00 00	 DD	 16			; 00000010H
  00dd0	00 00 00 00	 DD	 $LN73@DXUTChange
  00dd4	64 fe ff ff	 DD	 -412			; fffffe64H
  00dd8	10 00 00 00	 DD	 16			; 00000010H
  00ddc	00 00 00 00	 DD	 $LN74@DXUTChange
  00de0	3c fe ff ff	 DD	 -452			; fffffe3cH
  00de4	10 00 00 00	 DD	 16			; 00000010H
  00de8	00 00 00 00	 DD	 $LN75@DXUTChange
  00dec	1c fe ff ff	 DD	 -484			; fffffe1cH
  00df0	10 00 00 00	 DD	 16			; 00000010H
  00df4	00 00 00 00	 DD	 $LN76@DXUTChange
  00df8	a8 fd ff ff	 DD	 -600			; fffffda8H
  00dfc	64 00 00 00	 DD	 100			; 00000064H
  00e00	00 00 00 00	 DD	 $LN77@DXUTChange
$LN77@DXUTChange:
  00e04	64		 DB	 100			; 00000064H
  00e05	65		 DB	 101			; 00000065H
  00e06	76		 DB	 118			; 00000076H
  00e07	69		 DB	 105			; 00000069H
  00e08	63		 DB	 99			; 00000063H
  00e09	65		 DB	 101			; 00000065H
  00e0a	53		 DB	 83			; 00000053H
  00e0b	65		 DB	 101			; 00000065H
  00e0c	74		 DB	 116			; 00000074H
  00e0d	74		 DB	 116			; 00000074H
  00e0e	69		 DB	 105			; 00000069H
  00e0f	6e		 DB	 110			; 0000006eH
  00e10	67		 DB	 103			; 00000067H
  00e11	73		 DB	 115			; 00000073H
  00e12	00		 DB	 0
$LN76@DXUTChange:
  00e13	72		 DB	 114			; 00000072H
  00e14	63		 DB	 99			; 00000063H
  00e15	43		 DB	 67			; 00000043H
  00e16	6c		 DB	 108			; 0000006cH
  00e17	69		 DB	 105			; 00000069H
  00e18	65		 DB	 101			; 00000065H
  00e19	6e		 DB	 110			; 0000006eH
  00e1a	74		 DB	 116			; 00000074H
  00e1b	00		 DB	 0
$LN75@DXUTChange:
  00e1c	72		 DB	 114			; 00000072H
  00e1d	63		 DB	 99			; 00000063H
  00e1e	57		 DB	 87			; 00000057H
  00e1f	69		 DB	 105			; 00000069H
  00e20	6e		 DB	 110			; 0000006eH
  00e21	64		 DB	 100			; 00000064H
  00e22	6f		 DB	 111			; 0000006fH
  00e23	77		 DB	 119			; 00000077H
  00e24	00		 DB	 0
$LN74@DXUTChange:
  00e25	72		 DB	 114			; 00000072H
  00e26	63		 DB	 99			; 00000063H
  00e27	52		 DB	 82			; 00000052H
  00e28	65		 DB	 101			; 00000065H
  00e29	73		 DB	 115			; 00000073H
  00e2a	69		 DB	 105			; 00000069H
  00e2b	7a		 DB	 122			; 0000007aH
  00e2c	65		 DB	 101			; 00000065H
  00e2d	64		 DB	 100			; 00000064H
  00e2e	57		 DB	 87			; 00000057H
  00e2f	69		 DB	 105			; 00000069H
  00e30	6e		 DB	 110			; 0000006eH
  00e31	64		 DB	 100			; 00000064H
  00e32	6f		 DB	 111			; 0000006fH
  00e33	77		 DB	 119			; 00000077H
  00e34	00		 DB	 0
$LN73@DXUTChange:
  00e35	72		 DB	 114			; 00000072H
  00e36	63		 DB	 99			; 00000063H
  00e37	57		 DB	 87			; 00000057H
  00e38	69		 DB	 105			; 00000069H
  00e39	6e		 DB	 110			; 0000006eH
  00e3a	64		 DB	 100			; 00000064H
  00e3b	6f		 DB	 111			; 0000006fH
  00e3c	77		 DB	 119			; 00000077H
  00e3d	00		 DB	 0
$LN72@DXUTChange:
  00e3e	6d		 DB	 109			; 0000006dH
  00e3f	69		 DB	 105			; 00000069H
  00e40	57		 DB	 87			; 00000057H
  00e41	69		 DB	 105			; 00000069H
  00e42	6e		 DB	 110			; 0000006eH
  00e43	64		 DB	 100			; 00000064H
  00e44	6f		 DB	 111			; 0000006fH
  00e45	77		 DB	 119			; 00000077H
  00e46	00		 DB	 0
$LN71@DXUTChange:
  00e47	6d		 DB	 109			; 0000006dH
  00e48	69		 DB	 105			; 00000069H
  00e49	41		 DB	 65			; 00000041H
  00e4a	64		 DB	 100			; 00000064H
  00e4b	61		 DB	 97			; 00000061H
  00e4c	70		 DB	 112			; 00000070H
  00e4d	74		 DB	 116			; 00000074H
  00e4e	65		 DB	 101			; 00000065H
  00e4f	72		 DB	 114			; 00000072H
  00e50	00		 DB	 0
$LN70@DXUTChange:
  00e51	72		 DB	 114			; 00000072H
  00e52	63		 DB	 99			; 00000063H
  00e53	57		 DB	 87			; 00000057H
  00e54	69		 DB	 105			; 00000069H
  00e55	6e		 DB	 110			; 0000006eH
  00e56	64		 DB	 100			; 00000064H
  00e57	6f		 DB	 111			; 0000006fH
  00e58	77		 DB	 119			; 00000077H
  00e59	00		 DB	 0
$LN69@DXUTChange:
  00e5a	6d		 DB	 109			; 0000006dH
  00e5b	69		 DB	 105			; 00000069H
  00e5c	41		 DB	 65			; 00000041H
  00e5d	64		 DB	 100			; 00000064H
  00e5e	61		 DB	 97			; 00000061H
  00e5f	70		 DB	 112			; 00000070H
  00e60	74		 DB	 116			; 00000074H
  00e61	65		 DB	 101			; 00000065H
  00e62	72		 DB	 114			; 00000072H
  00e63	00		 DB	 0
$LN68@DXUTChange:
  00e64	72		 DB	 114			; 00000072H
  00e65	63		 DB	 99			; 00000063H
  00e66	43		 DB	 67			; 00000043H
  00e67	6c		 DB	 108			; 0000006cH
  00e68	69		 DB	 105			; 00000069H
  00e69	65		 DB	 101			; 00000065H
  00e6a	6e		 DB	 110			; 0000006eH
  00e6b	74		 DB	 116			; 00000074H
  00e6c	00		 DB	 0
$LN67@DXUTChange:
  00e6d	72		 DB	 114			; 00000072H
  00e6e	63		 DB	 99			; 00000063H
  00e6f	46		 DB	 70			; 00000046H
  00e70	72		 DB	 114			; 00000072H
  00e71	61		 DB	 97			; 00000061H
  00e72	6d		 DB	 109			; 0000006dH
  00e73	65		 DB	 101			; 00000065H
  00e74	00		 DB	 0
$LN66@DXUTChange:
  00e75	72		 DB	 114			; 00000072H
  00e76	63		 DB	 99			; 00000063H
  00e77	43		 DB	 67			; 00000043H
  00e78	6c		 DB	 108			; 0000006cH
  00e79	69		 DB	 105			; 00000069H
  00e7a	65		 DB	 101			; 00000065H
  00e7b	6e		 DB	 110			; 0000006eH
  00e7c	74		 DB	 116			; 00000074H
  00e7d	00		 DB	 0
$LN65@DXUTChange:
  00e7e	77		 DB	 119			; 00000077H
  00e7f	70		 DB	 112			; 00000070H
  00e80	00		 DB	 0
?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ENDP	; DXUTChangeDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -4						; size = 4
_vButton$ = 8						; size = 1
?DXUTMapButtonToArrayIndex@@YAHE@Z PROC			; DXUTMapButtonToArrayIndex
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3395
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 3396
  0000b	0f b6 45 08	 movzx	 eax, BYTE PTR _vButton$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR tv65[ebp], eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR tv65[ebp]
  00015	83 e9 01	 sub	 ecx, 1
  00018	89 4d fc	 mov	 DWORD PTR tv65[ebp], ecx
  0001b	83 7d fc 3f	 cmp	 DWORD PTR tv65[ebp], 63	; 0000003fH
  0001f	77 31		 ja	 SHORT $LN6@DXUTMapBut
  00021	8b 55 fc	 mov	 edx, DWORD PTR tv65[ebp]
  00024	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN10@DXUTMapBut[edx]
  0002b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@DXUTMapBut[eax*4]
$LN5@DXUTMapBut:
; Line 3399
  00032	33 c0		 xor	 eax, eax
  00034	eb 1e		 jmp	 SHORT $LN8@DXUTMapBut
$LN4@DXUTMapBut:
; Line 3402
  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	eb 17		 jmp	 SHORT $LN8@DXUTMapBut
$LN3@DXUTMapBut:
; Line 3404
  0003d	b8 02 00 00 00	 mov	 eax, 2
  00042	eb 10		 jmp	 SHORT $LN8@DXUTMapBut
$LN2@DXUTMapBut:
; Line 3407
  00044	b8 03 00 00 00	 mov	 eax, 3
  00049	eb 09		 jmp	 SHORT $LN8@DXUTMapBut
$LN1@DXUTMapBut:
; Line 3410
  0004b	b8 04 00 00 00	 mov	 eax, 4
  00050	eb 02		 jmp	 SHORT $LN8@DXUTMapBut
$LN6@DXUTMapBut:
; Line 3413
  00052	33 c0		 xor	 eax, eax
$LN8@DXUTMapBut:
; Line 3414
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN11@DXUTMapBut:
  00058	00 00 00 00	 DD	 $LN5@DXUTMapBut
  0005c	00 00 00 00	 DD	 $LN3@DXUTMapBut
  00060	00 00 00 00	 DD	 $LN4@DXUTMapBut
  00064	00 00 00 00	 DD	 $LN2@DXUTMapBut
  00068	00 00 00 00	 DD	 $LN1@DXUTMapBut
  0006c	00 00 00 00	 DD	 $LN6@DXUTMapBut
$LN10@DXUTMapBut:
  00070	00		 DB	 0
  00071	01		 DB	 1
  00072	05		 DB	 5
  00073	02		 DB	 2
  00074	03		 DB	 3
  00075	04		 DB	 4
  00076	05		 DB	 5
  00077	05		 DB	 5
  00078	05		 DB	 5
  00079	05		 DB	 5
  0007a	05		 DB	 5
  0007b	05		 DB	 5
  0007c	05		 DB	 5
  0007d	05		 DB	 5
  0007e	05		 DB	 5
  0007f	02		 DB	 2
  00080	05		 DB	 5
  00081	05		 DB	 5
  00082	05		 DB	 5
  00083	05		 DB	 5
  00084	05		 DB	 5
  00085	05		 DB	 5
  00086	05		 DB	 5
  00087	05		 DB	 5
  00088	05		 DB	 5
  00089	05		 DB	 5
  0008a	05		 DB	 5
  0008b	05		 DB	 5
  0008c	05		 DB	 5
  0008d	05		 DB	 5
  0008e	05		 DB	 5
  0008f	03		 DB	 3
  00090	05		 DB	 5
  00091	05		 DB	 5
  00092	05		 DB	 5
  00093	05		 DB	 5
  00094	05		 DB	 5
  00095	05		 DB	 5
  00096	05		 DB	 5
  00097	05		 DB	 5
  00098	05		 DB	 5
  00099	05		 DB	 5
  0009a	05		 DB	 5
  0009b	05		 DB	 5
  0009c	05		 DB	 5
  0009d	05		 DB	 5
  0009e	05		 DB	 5
  0009f	05		 DB	 5
  000a0	05		 DB	 5
  000a1	05		 DB	 5
  000a2	05		 DB	 5
  000a3	05		 DB	 5
  000a4	05		 DB	 5
  000a5	05		 DB	 5
  000a6	05		 DB	 5
  000a7	05		 DB	 5
  000a8	05		 DB	 5
  000a9	05		 DB	 5
  000aa	05		 DB	 5
  000ab	05		 DB	 5
  000ac	05		 DB	 5
  000ad	05		 DB	 5
  000ae	05		 DB	 5
  000af	04		 DB	 4
?DXUTMapButtonToArrayIndex@@YAHE@Z ENDP			; DXUTMapButtonToArrayIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -1048						; size = 4
_bShowMsgBoxOnError$ = -1042				; size = 1
_bFound$ = -1041					; size = 1
_nExitCode$ = -1040					; size = 4
_strBuffer$ = -1032					; size = 1024
__$ArrayPad$ = -4					; size = 4
_hr$ = 8						; size = 4
?DXUTDisplayErrorMessage@@YAXJ@Z PROC			; DXUTDisplayErrorMessage
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3346
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 04 00
	00		 sub	 esp, 1048		; 00000418H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd e8 fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1048]
  00011	b9 06 01 00 00	 mov	 ecx, 262		; 00000106H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3350
  00027	c6 85 ef fb ff
	ff 01		 mov	 BYTE PTR _bFound$[ebp], 1
; Line 3351
  0002e	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00031	89 85 e8 fb ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  00037	8b 8d e8 fb ff
	ff		 mov	 ecx, DWORD PTR tv64[ebp]
  0003d	81 c1 ff f6 fb
	7f		 add	 ecx, 2147219199		; 7ffbf6ffH
  00043	89 8d e8 fb ff
	ff		 mov	 DWORD PTR tv64[ebp], ecx
  00049	83 bd e8 fb ff
	ff 09		 cmp	 DWORD PTR tv64[ebp], 9
  00050	0f 87 03 02 00
	00		 ja	 $LN4@DXUTDispla
  00056	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR tv64[ebp]
  0005c	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN23@DXUTDispla[edx*4]
$LN15@DXUTDispla:
; Line 3355
  00063	c7 85 f0 fb ff
	ff 02 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 2
; Line 3356
  0006d	8b f4		 mov	 esi, esp
  0006f	68 00 00 00 00	 push	 OFFSET $SG153026
  00074	68 00 02 00 00	 push	 512			; 00000200H
  00079	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _strBuffer$[ebp]
  0007f	50		 push	 eax
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00086	83 c4 0c	 add	 esp, 12			; 0000000cH
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3357
  00090	e9 d5 01 00 00	 jmp	 $LN16@DXUTDispla
$LN14@DXUTDispla:
; Line 3360
  00095	c7 85 f0 fb ff
	ff 03 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 3
; Line 3361
  0009f	8b f4		 mov	 esi, esp
  000a1	68 00 10 00 00	 push	 4096			; 00001000H
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  000ac	3b f4		 cmp	 esi, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	85 c0		 test	 eax, eax
  000b5	74 25		 je	 SHORT $LN13@DXUTDispla
; Line 3362
  000b7	8b f4		 mov	 esi, esp
  000b9	68 00 00 00 00	 push	 OFFSET $SG153033
  000be	68 00 02 00 00	 push	 512			; 00000200H
  000c3	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _strBuffer$[ebp]
  000c9	51		 push	 ecx
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3363
  000da	eb 23		 jmp	 SHORT $LN12@DXUTDispla
$LN13@DXUTDispla:
; Line 3364
  000dc	8b f4		 mov	 esi, esp
  000de	68 00 00 00 00	 push	 OFFSET $SG153035
  000e3	68 00 02 00 00	 push	 512			; 00000200H
  000e8	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _strBuffer$[ebp]
  000ee	52		 push	 edx
  000ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000f5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN12@DXUTDispla:
; Line 3365
  000ff	e9 66 01 00 00	 jmp	 $LN16@DXUTDispla
$LN11@DXUTDispla:
; Line 3366
  00104	c7 85 f0 fb ff
	ff 04 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 4
  0010e	8b f4		 mov	 esi, esp
  00110	68 00 00 00 00	 push	 OFFSET $SG153041
  00115	68 00 02 00 00	 push	 512			; 00000200H
  0011a	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _strBuffer$[ebp]
  00120	50		 push	 eax
  00121	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00127	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012a	3b f4		 cmp	 esi, esp
  0012c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00131	e9 34 01 00 00	 jmp	 $LN16@DXUTDispla
$LN10@DXUTDispla:
; Line 3367
  00136	c7 85 f0 fb ff
	ff 05 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 5
  00140	8b f4		 mov	 esi, esp
  00142	68 00 00 00 00	 push	 OFFSET $SG153047
  00147	68 00 02 00 00	 push	 512			; 00000200H
  0014c	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _strBuffer$[ebp]
  00152	51		 push	 ecx
  00153	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00159	83 c4 0c	 add	 esp, 12			; 0000000cH
  0015c	3b f4		 cmp	 esi, esp
  0015e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00163	e9 02 01 00 00	 jmp	 $LN16@DXUTDispla
$LN9@DXUTDispla:
; Line 3368
  00168	c7 85 f0 fb ff
	ff 06 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 6
  00172	8b f4		 mov	 esi, esp
  00174	68 00 00 00 00	 push	 OFFSET $SG153053
  00179	68 00 02 00 00	 push	 512			; 00000200H
  0017e	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _strBuffer$[ebp]
  00184	52		 push	 edx
  00185	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0018b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018e	3b f4		 cmp	 esi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00195	e9 d0 00 00 00	 jmp	 $LN16@DXUTDispla
$LN8@DXUTDispla:
; Line 3369
  0019a	c7 85 f0 fb ff
	ff 07 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 7
  001a4	8b f4		 mov	 esi, esp
  001a6	68 00 00 00 00	 push	 OFFSET $SG153059
  001ab	68 00 02 00 00	 push	 512			; 00000200H
  001b0	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _strBuffer$[ebp]
  001b6	50		 push	 eax
  001b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  001bd	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c0	3b f4		 cmp	 esi, esp
  001c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c7	e9 9e 00 00 00	 jmp	 $LN16@DXUTDispla
$LN7@DXUTDispla:
; Line 3370
  001cc	c7 85 f0 fb ff
	ff 08 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 8
  001d6	8b f4		 mov	 esi, esp
  001d8	68 00 00 00 00	 push	 OFFSET $SG153065
  001dd	68 00 02 00 00	 push	 512			; 00000200H
  001e2	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _strBuffer$[ebp]
  001e8	51		 push	 ecx
  001e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  001ef	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f2	3b f4		 cmp	 esi, esp
  001f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f9	eb 6f		 jmp	 SHORT $LN16@DXUTDispla
$LN6@DXUTDispla:
; Line 3371
  001fb	c7 85 f0 fb ff
	ff 09 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 9
  00205	8b f4		 mov	 esi, esp
  00207	68 00 00 00 00	 push	 OFFSET $SG153071
  0020c	68 00 02 00 00	 push	 512			; 00000200H
  00211	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _strBuffer$[ebp]
  00217	52		 push	 edx
  00218	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0021e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00221	3b f4		 cmp	 esi, esp
  00223	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00228	eb 40		 jmp	 SHORT $LN16@DXUTDispla
$LN5@DXUTDispla:
; Line 3373
  0022a	c7 85 f0 fb ff
	ff 0b 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 11 ; 0000000bH
  00234	8b f4		 mov	 esi, esp
  00236	68 00 00 00 00	 push	 OFFSET $SG153077
  0023b	68 00 02 00 00	 push	 512			; 00000200H
  00240	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _strBuffer$[ebp]
  00246	50		 push	 eax
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0024d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	eb 11		 jmp	 SHORT $LN16@DXUTDispla
$LN4@DXUTDispla:
; Line 3374
  00259	c6 85 ef fb ff
	ff 00		 mov	 BYTE PTR _bFound$[ebp], 0
  00260	c7 85 f0 fb ff
	ff 01 00 00 00	 mov	 DWORD PTR _nExitCode$[ebp], 1
$LN16@DXUTDispla:
; Line 3378
  0026a	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR _nExitCode$[ebp]
  00270	51		 push	 ecx
  00271	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00276	8b c8		 mov	 ecx, eax
  00278	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
; Line 3380
  0027d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00282	8b c8		 mov	 ecx, eax
  00284	e8 00 00 00 00	 call	 ?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ ; DXUTState::GetShowMsgBoxOnError
  00289	88 85 ee fb ff
	ff		 mov	 BYTE PTR _bShowMsgBoxOnError$[ebp], al
; Line 3381
  0028f	0f b6 95 ef fb
	ff ff		 movzx	 edx, BYTE PTR _bFound$[ebp]
  00296	85 d2		 test	 edx, edx
  00298	74 69		 je	 SHORT $LN18@DXUTDispla
  0029a	0f b6 85 ee fb
	ff ff		 movzx	 eax, BYTE PTR _bShowMsgBoxOnError$[ebp]
  002a1	85 c0		 test	 eax, eax
  002a3	74 5e		 je	 SHORT $LN18@DXUTDispla
; Line 3383
  002a5	e8 00 00 00 00	 call	 ?DXUTGetWindowTitle@@YGPB_WXZ ; DXUTGetWindowTitle
  002aa	b9 02 00 00 00	 mov	 ecx, 2
  002af	6b d1 00	 imul	 edx, ecx, 0
  002b2	0f b7 04 10	 movzx	 eax, WORD PTR [eax+edx]
  002b6	85 c0		 test	 eax, eax
  002b8	75 25		 jne	 SHORT $LN2@DXUTDispla
; Line 3384
  002ba	8b f4		 mov	 esi, esp
  002bc	6a 10		 push	 16			; 00000010H
  002be	68 00 00 00 00	 push	 OFFSET $SG153082
  002c3	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _strBuffer$[ebp]
  002c9	51		 push	 ecx
  002ca	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  002cf	50		 push	 eax
  002d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  002d6	3b f4		 cmp	 esi, esp
  002d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3385
  002dd	eb 24		 jmp	 SHORT $LN18@DXUTDispla
$LN2@DXUTDispla:
; Line 3386
  002df	8b f4		 mov	 esi, esp
  002e1	6a 10		 push	 16			; 00000010H
  002e3	e8 00 00 00 00	 call	 ?DXUTGetWindowTitle@@YGPB_WXZ ; DXUTGetWindowTitle
  002e8	50		 push	 eax
  002e9	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _strBuffer$[ebp]
  002ef	52		 push	 edx
  002f0	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  002f5	50		 push	 eax
  002f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  002fc	3b f4		 cmp	 esi, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN18@DXUTDispla:
; Line 3388
  00303	52		 push	 edx
  00304	8b cd		 mov	 ecx, ebp
  00306	50		 push	 eax
  00307	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN22@DXUTDispla
  0030d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00312	58		 pop	 eax
  00313	5a		 pop	 edx
  00314	5f		 pop	 edi
  00315	5e		 pop	 esi
  00316	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00319	33 cd		 xor	 ecx, ebp
  0031b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00320	81 c4 18 04 00
	00		 add	 esp, 1048		; 00000418H
  00326	3b ec		 cmp	 ebp, esp
  00328	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0032d	8b e5		 mov	 esp, ebp
  0032f	5d		 pop	 ebp
  00330	c3		 ret	 0
  00331	8d 49 00	 npad	 3
$LN22@DXUTDispla:
  00334	01 00 00 00	 DD	 1
  00338	00 00 00 00	 DD	 $LN21@DXUTDispla
$LN21@DXUTDispla:
  0033c	f8 fb ff ff	 DD	 -1032			; fffffbf8H
  00340	00 04 00 00	 DD	 1024			; 00000400H
  00344	00 00 00 00	 DD	 $LN20@DXUTDispla
$LN20@DXUTDispla:
  00348	73		 DB	 115			; 00000073H
  00349	74		 DB	 116			; 00000074H
  0034a	72		 DB	 114			; 00000072H
  0034b	42		 DB	 66			; 00000042H
  0034c	75		 DB	 117			; 00000075H
  0034d	66		 DB	 102			; 00000066H
  0034e	66		 DB	 102			; 00000066H
  0034f	65		 DB	 101			; 00000065H
  00350	72		 DB	 114			; 00000072H
  00351	00		 DB	 0
  00352	8b ff		 npad	 2
$LN23@DXUTDispla:
  00354	00 00 00 00	 DD	 $LN15@DXUTDispla
  00358	00 00 00 00	 DD	 $LN14@DXUTDispla
  0035c	00 00 00 00	 DD	 $LN11@DXUTDispla
  00360	00 00 00 00	 DD	 $LN10@DXUTDispla
  00364	00 00 00 00	 DD	 $LN9@DXUTDispla
  00368	00 00 00 00	 DD	 $LN8@DXUTDispla
  0036c	00 00 00 00	 DD	 $LN7@DXUTDispla
  00370	00 00 00 00	 DD	 $LN6@DXUTDispla
  00374	00 00 00 00	 DD	 $LN4@DXUTDispla
  00378	00 00 00 00	 DD	 $LN5@DXUTDispla
?DXUTDisplayErrorMessage@@YAXJ@Z ENDP			; DXUTDisplayErrorMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv140 = -96						; size = 4
tv70 = -92						; size = 4
$T2 = -88						; size = 12
$T3 = -73						; size = 1
_DXUTTimer$4 = -68					; size = 24
_it$5 = -36						; size = 12
_pTimerList$ = -20					; size = 4
_fElapsedTime$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DXUTHandleTimers@@YAXXZ PROC				; DXUTHandleTimers
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3313
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTHandleTimers@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8d 7d a0	 lea	 edi, DWORD PTR [ebp-96]
  00019	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 3314
  00036	e8 00 00 00 00	 call	 ?DXUTGetElapsedTime@@YGMXZ ; DXUTGetElapsedTime
  0003b	d9 5d f0	 fstp	 DWORD PTR _fElapsedTime$[ebp]
; Line 3316
  0003e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00043	8b c8		 mov	 ecx, eax
  00045	e8 00 00 00 00	 call	 ?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
  0004a	89 45 ec	 mov	 DWORD PTR _pTimerList$[ebp], eax
; Line 3317
  0004d	83 7d ec 00	 cmp	 DWORD PTR _pTimerList$[ebp], 0
  00051	75 05		 jne	 SHORT $LN6@DXUTHandle
; Line 3318
  00053	e9 39 01 00 00	 jmp	 $LN7@DXUTHandle
$LN6@DXUTHandle:
; Line 3321
  00058	8d 45 dc	 lea	 eax, DWORD PTR _it$5[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d ec	 mov	 ecx, DWORD PTR _pTimerList$[ebp]
  0005f	e8 00 00 00 00	 call	 ?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
  00064	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006b	eb 08		 jmp	 SHORT $LN5@DXUTHandle
$LN4@DXUTHandle:
  0006d	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00070	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
$LN5@DXUTHandle:
  00075	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  00078	51		 push	 ecx
  00079	8b 4d ec	 mov	 ecx, DWORD PTR _pTimerList$[ebp]
  0007c	e8 00 00 00 00	 call	 ?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
  00081	89 45 a4	 mov	 DWORD PTR tv70[ebp], eax
  00084	8b 55 a4	 mov	 edx, DWORD PTR tv70[ebp]
  00087	89 55 a0	 mov	 DWORD PTR tv140[ebp], edx
  0008a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008e	8b 45 a0	 mov	 eax, DWORD PTR tv140[ebp]
  00091	50		 push	 eax
  00092	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00095	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
  0009a	88 45 b7	 mov	 BYTE PTR $T3[ebp], al
  0009d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000a1	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  000a4	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
  000a9	0f b6 4d b7	 movzx	 ecx, BYTE PTR $T3[ebp]
  000ad	85 c9		 test	 ecx, ecx
  000af	0f 84 cd 00 00
	00		 je	 $LN3@DXUTHandle
; Line 3323
  000b5	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b8	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
  000bd	8b 10		 mov	 edx, DWORD PTR [eax]
  000bf	89 55 bc	 mov	 DWORD PTR _DXUTTimer$4[ebp], edx
  000c2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c5	89 4d c0	 mov	 DWORD PTR _DXUTTimer$4[ebp+4], ecx
  000c8	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000cb	89 55 c4	 mov	 DWORD PTR _DXUTTimer$4[ebp+8], edx
  000ce	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000d1	89 4d c8	 mov	 DWORD PTR _DXUTTimer$4[ebp+12], ecx
  000d4	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000d7	89 55 cc	 mov	 DWORD PTR _DXUTTimer$4[ebp+16], edx
  000da	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  000dd	89 45 d0	 mov	 DWORD PTR _DXUTTimer$4[ebp+20], eax
; Line 3324
  000e0	0f b6 4d cc	 movzx	 ecx, BYTE PTR _DXUTTimer$4[ebp+16]
  000e4	85 c9		 test	 ecx, ecx
  000e6	0f 84 91 00 00
	00		 je	 $LN2@DXUTHandle
; Line 3326
  000ec	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _DXUTTimer$4[ebp+12]
  000f1	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000f6	f3 0f 11 45 c8	 movss	 DWORD PTR _DXUTTimer$4[ebp+12], xmm0
; Line 3329
  000fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00103	0f 2f 45 c8	 comiss	 xmm0, DWORD PTR _DXUTTimer$4[ebp+12]
  00107	76 49		 jbe	 SHORT $LN1@DXUTHandle
; Line 3331
  00109	8b f4		 mov	 esi, esp
  0010b	8b 55 c0	 mov	 edx, DWORD PTR _DXUTTimer$4[ebp+4]
  0010e	52		 push	 edx
  0010f	8b 45 d0	 mov	 eax, DWORD PTR _DXUTTimer$4[ebp+20]
  00112	50		 push	 eax
  00113	ff 55 bc	 call	 DWORD PTR _DXUTTimer$4[ebp]
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3333
  0011d	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00120	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
  00125	8b 08		 mov	 ecx, DWORD PTR [eax]
  00127	89 4d bc	 mov	 DWORD PTR _DXUTTimer$4[ebp], ecx
  0012a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0012d	89 55 c0	 mov	 DWORD PTR _DXUTTimer$4[ebp+4], edx
  00130	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00133	89 4d c4	 mov	 DWORD PTR _DXUTTimer$4[ebp+8], ecx
  00136	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00139	89 55 c8	 mov	 DWORD PTR _DXUTTimer$4[ebp+12], edx
  0013c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0013f	89 4d cc	 mov	 DWORD PTR _DXUTTimer$4[ebp+16], ecx
  00142	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00145	89 55 d0	 mov	 DWORD PTR _DXUTTimer$4[ebp+20], edx
; Line 3334
  00148	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _DXUTTimer$4[ebp+8]
  0014d	f3 0f 11 45 c8	 movss	 DWORD PTR _DXUTTimer$4[ebp+12], xmm0
$LN1@DXUTHandle:
; Line 3336
  00152	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00155	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
  0015a	8b 4d bc	 mov	 ecx, DWORD PTR _DXUTTimer$4[ebp]
  0015d	89 08		 mov	 DWORD PTR [eax], ecx
  0015f	8b 55 c0	 mov	 edx, DWORD PTR _DXUTTimer$4[ebp+4]
  00162	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00165	8b 4d c4	 mov	 ecx, DWORD PTR _DXUTTimer$4[ebp+8]
  00168	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0016b	8b 55 c8	 mov	 edx, DWORD PTR _DXUTTimer$4[ebp+12]
  0016e	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00171	8b 4d cc	 mov	 ecx, DWORD PTR _DXUTTimer$4[ebp+16]
  00174	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00177	8b 55 d0	 mov	 edx, DWORD PTR _DXUTTimer$4[ebp+20]
  0017a	89 50 14	 mov	 DWORD PTR [eax+20], edx
$LN2@DXUTHandle:
; Line 3337
  0017d	e9 eb fe ff ff	 jmp	 $LN4@DXUTHandle
$LN3@DXUTHandle:
; Line 3338
  00182	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00189	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  0018c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
$LN7@DXUTHandle:
; Line 3339
  00191	52		 push	 edx
  00192	8b cd		 mov	 ecx, ebp
  00194	50		 push	 eax
  00195	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@DXUTHandle
  0019b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001a0	58		 pop	 eax
  001a1	5a		 pop	 edx
  001a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ac	59		 pop	 ecx
  001ad	5f		 pop	 edi
  001ae	5e		 pop	 esi
  001af	83 c4 60	 add	 esp, 96			; 00000060H
  001b2	3b ec		 cmp	 ebp, esp
  001b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b9	8b e5		 mov	 esp, ebp
  001bb	5d		 pop	 ebp
  001bc	c3		 ret	 0
  001bd	8d 49 00	 npad	 3
$LN15@DXUTHandle:
  001c0	02 00 00 00	 DD	 2
  001c4	00 00 00 00	 DD	 $LN14@DXUTHandle
$LN14@DXUTHandle:
  001c8	dc ff ff ff	 DD	 -36			; ffffffdcH
  001cc	0c 00 00 00	 DD	 12			; 0000000cH
  001d0	00 00 00 00	 DD	 $LN11@DXUTHandle
  001d4	bc ff ff ff	 DD	 -68			; ffffffbcH
  001d8	18 00 00 00	 DD	 24			; 00000018H
  001dc	00 00 00 00	 DD	 $LN12@DXUTHandle
$LN12@DXUTHandle:
  001e0	44		 DB	 68			; 00000044H
  001e1	58		 DB	 88			; 00000058H
  001e2	55		 DB	 85			; 00000055H
  001e3	54		 DB	 84			; 00000054H
  001e4	54		 DB	 84			; 00000054H
  001e5	69		 DB	 105			; 00000069H
  001e6	6d		 DB	 109			; 0000006dH
  001e7	65		 DB	 101			; 00000065H
  001e8	72		 DB	 114			; 00000072H
  001e9	00		 DB	 0
$LN11@DXUTHandle:
  001ea	69		 DB	 105			; 00000069H
  001eb	74		 DB	 116			; 00000074H
  001ec	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTHandleTimers@@YAXXZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTHandleTimers@@YAXXZ$1:
  00008	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTHandleTimers@@YAXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTHandleTimers@@YAXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTHandleTimers@@YAXXZ ENDP				; DXUTHandleTimers
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv153 = -32						; size = 4
_pstrFPS$1 = -28					; size = 4
_fFPS$2 = -24						; size = 4
_fAbsTime$ = -20					; size = 8
_dwFrames$ = -12					; size = 4
_fLastTime$ = -8					; size = 8
?DXUTUpdateFrameStats@@YAXXZ PROC			; DXUTUpdateFrameStats
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4026
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 4027
  00024	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00029	8b c8		 mov	 ecx, eax
  0002b	e8 00 00 00 00	 call	 ?GetNoStats@DXUTState@@QAE_NXZ ; DXUTState::GetNoStats
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 05		 je	 SHORT $LN2@DXUTUpdate
; Line 4028
  00037	e9 06 01 00 00	 jmp	 $LN3@DXUTUpdate
$LN2@DXUTUpdate:
; Line 4031
  0003c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ?GetLastStatsUpdateTime@DXUTState@@QAENXZ ; DXUTState::GetLastStatsUpdateTime
  00048	dd 5d f8	 fstp	 QWORD PTR _fLastTime$[ebp]
; Line 4032
  0004b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ ; DXUTState::GetLastStatsUpdateFrames
  00057	89 45 f4	 mov	 DWORD PTR _dwFrames$[ebp], eax
; Line 4033
  0005a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0005f	8b c8		 mov	 ecx, eax
  00061	e8 00 00 00 00	 call	 ?GetAbsoluteTime@DXUTState@@QAENXZ ; DXUTState::GetAbsoluteTime
  00066	dd 5d ec	 fstp	 QWORD PTR _fAbsTime$[ebp]
; Line 4034
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _dwFrames$[ebp]
  0006c	83 c1 01	 add	 ecx, 1
  0006f	89 4d f4	 mov	 DWORD PTR _dwFrames$[ebp], ecx
; Line 4035
  00072	8b 55 f4	 mov	 edx, DWORD PTR _dwFrames$[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z ; DXUTState::SetLastStatsUpdateFrames
; Line 4038
  00082	f2 0f 10 45 ec	 movsd	 xmm0, QWORD PTR _fAbsTime$[ebp]
  00087	f2 0f 5c 45 f8	 subsd	 xmm0, QWORD PTR _fLastTime$[ebp]
  0008c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00094	0f 86 a8 00 00
	00		 jbe	 $LN1@DXUTUpdate
; Line 4040
  0009a	8b 45 f4	 mov	 eax, DWORD PTR _dwFrames$[ebp]
  0009d	89 45 e0	 mov	 DWORD PTR tv153[ebp], eax
  000a0	f2 0f 2a 45 e0	 cvtsi2sd xmm0, DWORD PTR tv153[ebp]
  000a5	8b 4d e0	 mov	 ecx, DWORD PTR tv153[ebp]
  000a8	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000ab	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  000b4	f2 0f 10 4d ec	 movsd	 xmm1, QWORD PTR _fAbsTime$[ebp]
  000b9	f2 0f 5c 4d f8	 subsd	 xmm1, QWORD PTR _fLastTime$[ebp]
  000be	f2 0f 5e c1	 divsd	 xmm0, xmm1
  000c2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c6	f3 0f 11 45 e8	 movss	 DWORD PTR _fFPS$2[ebp], xmm0
; Line 4041
  000cb	51		 push	 ecx
  000cc	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fFPS$2[ebp]
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000db	8b c8		 mov	 ecx, eax
  000dd	e8 00 00 00 00	 call	 ?SetFPS@DXUTState@@QAEXM@Z ; DXUTState::SetFPS
; Line 4042
  000e2	83 ec 08	 sub	 esp, 8
  000e5	f2 0f 10 45 ec	 movsd	 xmm0, QWORD PTR _fAbsTime$[ebp]
  000ea	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ef	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000f4	8b c8		 mov	 ecx, eax
  000f6	e8 00 00 00 00	 call	 ?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z ; DXUTState::SetLastStatsUpdateTime
; Line 4043
  000fb	6a 00		 push	 0
  000fd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00102	8b c8		 mov	 ecx, eax
  00104	e8 00 00 00 00	 call	 ?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z ; DXUTState::SetLastStatsUpdateFrames
; Line 4045
  00109	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0010e	8b c8		 mov	 ecx, eax
  00110	e8 00 00 00 00	 call	 ?GetFPSStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetFPSStats
  00115	89 45 e4	 mov	 DWORD PTR _pstrFPS$1[ebp], eax
; Line 4046
  00118	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _fFPS$2[ebp]
  0011d	8b f4		 mov	 esi, esp
  0011f	83 ec 08	 sub	 esp, 8
  00122	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00127	68 00 00 00 00	 push	 OFFSET $SG153649
  0012c	6a 40		 push	 64			; 00000040H
  0012e	8b 55 e4	 mov	 edx, DWORD PTR _pstrFPS$1[ebp]
  00131	52		 push	 edx
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__swprintf_s
  00138	83 c4 14	 add	 esp, 20			; 00000014H
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@DXUTUpdate:
$LN3@DXUTUpdate:
; Line 4048
  00142	5e		 pop	 esi
  00143	83 c4 20	 add	 esp, 32			; 00000020H
  00146	3b ec		 cmp	 ebp, esp
  00148	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c3		 ret	 0
?DXUTUpdateFrameStats@@YAXXZ ENDP			; DXUTUpdateFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv164 = -440						; size = 4
_pstrStaticFrameStats$ = -436				; size = 4
_strMultiSample$ = -428					; size = 200
_strFmt$ = -220						; size = 200
_pDeviceSettingsCombo$ = -16				; size = 4
_pd3dEnum$ = -12					; size = 4
_pDeviceSettings$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTUpdateStaticFrameStats@@YAXXZ PROC			; DXUTUpdateStaticFrameStats
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3989
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 01 00
	00		 sub	 esp, 440		; 000001b8H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 48 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-440]
  00011	b9 6e 00 00 00	 mov	 ecx, 110		; 0000006eH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3990
  00027	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002c	8b c8		 mov	 ecx, eax
  0002e	e8 00 00 00 00	 call	 ?GetNoStats@DXUTState@@QAE_NXZ ; DXUTState::GetNoStats
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 05		 je	 SHORT $LN4@DXUTUpdate
; Line 3991
  0003a	e9 2d 01 00 00	 jmp	 $LN5@DXUTUpdate
$LN4@DXUTUpdate:
; Line 3993
  0003f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00044	8b c8		 mov	 ecx, eax
  00046	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  0004b	89 45 f8	 mov	 DWORD PTR _pDeviceSettings$[ebp], eax
; Line 3994
  0004e	83 7d f8 00	 cmp	 DWORD PTR _pDeviceSettings$[ebp], 0
  00052	75 05		 jne	 SHORT $LN3@DXUTUpdate
; Line 3995
  00054	e9 13 01 00 00	 jmp	 $LN5@DXUTUpdate
$LN3@DXUTUpdate:
; Line 3998
  00059	6a 00		 push	 0
  0005b	6a 01		 push	 1
  0005d	6a 00		 push	 0
  0005f	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  00064	89 45 f4	 mov	 DWORD PTR _pd3dEnum$[ebp], eax
; Line 3999
  00067	83 7d f4 00	 cmp	 DWORD PTR _pd3dEnum$[ebp], 0
  0006b	75 05		 jne	 SHORT $LN2@DXUTUpdate
; Line 4000
  0006d	e9 fa 00 00 00	 jmp	 $LN5@DXUTUpdate
$LN2@DXUTUpdate:
; Line 4004
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  00075	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  00078	52		 push	 edx
  00079	8b 45 f8	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  0007c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0007f	51		 push	 ecx
  00080	8b 55 f8	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00083	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00086	50		 push	 eax
  00087	8b 4d f4	 mov	 ecx, DWORD PTR _pd3dEnum$[ebp]
  0008a	e8 00 00 00 00	 call	 ?GetDeviceSettingsCombo@CD3D11Enumeration@@QBEPAUCD3D11EnumDeviceSettingsCombo@@IW4DXGI_FORMAT@@H@Z ; CD3D11Enumeration::GetDeviceSettingsCombo
  0008f	89 45 f0	 mov	 DWORD PTR _pDeviceSettingsCombo$[ebp], eax
; Line 4005
  00092	83 7d f0 00	 cmp	 DWORD PTR _pDeviceSettingsCombo$[ebp], 0
  00096	75 05		 jne	 SHORT $LN1@DXUTUpdate
; Line 4006
  00098	e9 cf 00 00 00	 jmp	 $LN5@DXUTUpdate
$LN1@DXUTUpdate:
; Line 4009
  0009d	6a 00		 push	 0
  0009f	8b 4d f0	 mov	 ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
  000a2	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000a5	52		 push	 edx
  000a6	e8 00 00 00 00	 call	 ?DXUTDXGIFormatToString@@YGPB_WW4DXGI_FORMAT@@_N@Z ; DXUTDXGIFormatToString
  000ab	8b f4		 mov	 esi, esp
  000ad	50		 push	 eax
  000ae	6a 64		 push	 100			; 00000064H
  000b0	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _strFmt$[ebp]
  000b6	50		 push	 eax
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000bd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4013
  000c7	8b f4		 mov	 esi, esp
  000c9	8b 4d f8	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  000cc	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  000cf	52		 push	 edx
  000d0	8b 45 f8	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000d3	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000d6	51		 push	 ecx
  000d7	68 00 00 00 00	 push	 OFFSET $SG153632
  000dc	6a 64		 push	 100			; 00000064H
  000de	8d 95 54 fe ff
	ff		 lea	 edx, DWORD PTR _strMultiSample$[ebp]
  000e4	52		 push	 edx
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__swprintf_s
  000eb	83 c4 14	 add	 esp, 20			; 00000014H
  000ee	3b f4		 cmp	 esi, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4014
  000f5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000fa	8b c8		 mov	 ecx, eax
  000fc	e8 00 00 00 00	 call	 ?GetStaticFrameStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetStaticFrameStats
  00101	89 85 4c fe ff
	ff		 mov	 DWORD PTR _pstrStaticFrameStats$[ebp], eax
; Line 4018
  00107	8b 45 f8	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  0010a	83 78 50 00	 cmp	 DWORD PTR [eax+80], 0
  0010e	75 0c		 jne	 SHORT $LN7@DXUTUpdate
  00110	c7 85 48 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], OFFSET $SG153635
  0011a	eb 0a		 jmp	 SHORT $LN8@DXUTUpdate
$LN7@DXUTUpdate:
  0011c	c7 85 48 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], OFFSET $SG153636
$LN8@DXUTUpdate:
  00126	8b f4		 mov	 esi, esp
  00128	8d 8d 54 fe ff
	ff		 lea	 ecx, DWORD PTR _strMultiSample$[ebp]
  0012e	51		 push	 ecx
  0012f	8d 95 24 ff ff
	ff		 lea	 edx, DWORD PTR _strFmt$[ebp]
  00135	52		 push	 edx
  00136	8b 45 f8	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00139	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0013c	51		 push	 ecx
  0013d	8b 55 f8	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00140	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00143	50		 push	 eax
  00144	8b 8d 48 fe ff
	ff		 mov	 ecx, DWORD PTR tv164[ebp]
  0014a	51		 push	 ecx
  0014b	68 00 00 00 00	 push	 OFFSET $SG153637
  00150	68 00 01 00 00	 push	 256			; 00000100H
  00155	8b 95 4c fe ff
	ff		 mov	 edx, DWORD PTR _pstrStaticFrameStats$[ebp]
  0015b	52		 push	 edx
  0015c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__swprintf_s
  00162	83 c4 20	 add	 esp, 32			; 00000020H
  00165	3b f4		 cmp	 esi, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@DXUTUpdate:
; Line 4019
  0016c	52		 push	 edx
  0016d	8b cd		 mov	 ecx, ebp
  0016f	50		 push	 eax
  00170	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@DXUTUpdate
  00176	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0017b	58		 pop	 eax
  0017c	5a		 pop	 edx
  0017d	5f		 pop	 edi
  0017e	5e		 pop	 esi
  0017f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00182	33 cd		 xor	 ecx, ebp
  00184	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00189	81 c4 b8 01 00
	00		 add	 esp, 440		; 000001b8H
  0018f	3b ec		 cmp	 ebp, esp
  00191	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00196	8b e5		 mov	 esp, ebp
  00198	5d		 pop	 ebp
  00199	c3		 ret	 0
  0019a	8b ff		 npad	 2
$LN12@DXUTUpdate:
  0019c	02 00 00 00	 DD	 2
  001a0	00 00 00 00	 DD	 $LN11@DXUTUpdate
$LN11@DXUTUpdate:
  001a4	24 ff ff ff	 DD	 -220			; ffffff24H
  001a8	c8 00 00 00	 DD	 200			; 000000c8H
  001ac	00 00 00 00	 DD	 $LN9@DXUTUpdate
  001b0	54 fe ff ff	 DD	 -428			; fffffe54H
  001b4	c8 00 00 00	 DD	 200			; 000000c8H
  001b8	00 00 00 00	 DD	 $LN10@DXUTUpdate
$LN10@DXUTUpdate:
  001bc	73		 DB	 115			; 00000073H
  001bd	74		 DB	 116			; 00000074H
  001be	72		 DB	 114			; 00000072H
  001bf	4d		 DB	 77			; 0000004dH
  001c0	75		 DB	 117			; 00000075H
  001c1	6c		 DB	 108			; 0000006cH
  001c2	74		 DB	 116			; 00000074H
  001c3	69		 DB	 105			; 00000069H
  001c4	53		 DB	 83			; 00000053H
  001c5	61		 DB	 97			; 00000061H
  001c6	6d		 DB	 109			; 0000006dH
  001c7	70		 DB	 112			; 00000070H
  001c8	6c		 DB	 108			; 0000006cH
  001c9	65		 DB	 101			; 00000065H
  001ca	00		 DB	 0
$LN9@DXUTUpdate:
  001cb	73		 DB	 115			; 00000073H
  001cc	74		 DB	 116			; 00000074H
  001cd	72		 DB	 114			; 00000072H
  001ce	46		 DB	 70			; 00000046H
  001cf	6d		 DB	 109			; 0000006dH
  001d0	74		 DB	 116			; 00000074H
  001d1	00		 DB	 0
?DXUTUpdateStaticFrameStats@@YAXXZ ENDP			; DXUTUpdateStaticFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fkOff$1 = -132						; size = 24
_tkOff$2 = -100						; size = 8
_skOff$3 = -84						; size = 8
_hKeyboardHook$4 = -72					; size = 4
_fk$5 = -64						; size = 24
_tk$6 = -32						; size = 8
_sk$7 = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_bAllowKeys$ = 8					; size = 1
?DXUTAllowShortcutKeys@@YAX_N@Z PROC			; DXUTAllowShortcutKeys
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3138
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 78 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-136]
  00011	b9 22 00 00 00	 mov	 ecx, 34			; 00000022H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3139
  00027	0f b6 45 08	 movzx	 eax, BYTE PTR _bAllowKeys$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeys
; Line 3141
  00038	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bAllowKeys$[ebp]
  0003c	85 c9		 test	 ecx, ecx
  0003e	0f 84 ba 00 00
	00		 je	 $LN7@DXUTAllowS
; Line 3144
  00044	8d 55 f0	 lea	 edx, DWORD PTR _sk$7[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ; DXUTState::GetStartupStickyKeys
; Line 3145
  00054	8d 45 e0	 lea	 eax, DWORD PTR _tk$6[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0005d	8b c8		 mov	 ecx, eax
  0005f	e8 00 00 00 00	 call	 ?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ; DXUTState::GetStartupToggleKeys
; Line 3146
  00064	8d 4d c0	 lea	 ecx, DWORD PTR _fk$5[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ; DXUTState::GetStartupFilterKeys
; Line 3148
  00074	8b f4		 mov	 esi, esp
  00076	6a 00		 push	 0
  00078	8d 55 f0	 lea	 edx, DWORD PTR _sk$7[ebp]
  0007b	52		 push	 edx
  0007c	6a 08		 push	 8
  0007e	6a 3b		 push	 59			; 0000003bH
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3149
  0008d	8b f4		 mov	 esi, esp
  0008f	6a 00		 push	 0
  00091	8d 45 e0	 lea	 eax, DWORD PTR _tk$6[ebp]
  00094	50		 push	 eax
  00095	6a 08		 push	 8
  00097	6a 35		 push	 53			; 00000035H
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3150
  000a6	8b f4		 mov	 esi, esp
  000a8	6a 00		 push	 0
  000aa	8d 4d c0	 lea	 ecx, DWORD PTR _fk$5[ebp]
  000ad	51		 push	 ecx
  000ae	6a 18		 push	 24			; 00000018H
  000b0	6a 33		 push	 51			; 00000033H
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  000b8	3b f4		 cmp	 esi, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3153
  000bf	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
  000cb	85 c0		 test	 eax, eax
  000cd	74 2a		 je	 SHORT $LN6@DXUTAllowS
; Line 3155
  000cf	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
  000db	8b f4		 mov	 esi, esp
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnhookWindowsHookEx@4
  000e4	3b f4		 cmp	 esi, esp
  000e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3156
  000eb	6a 00		 push	 0
  000ed	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000f2	8b c8		 mov	 ecx, eax
  000f4	e8 00 00 00 00	 call	 ?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z ; DXUTState::SetKeyboardHook
$LN6@DXUTAllowS:
; Line 3159
  000f9	e9 1c 01 00 00	 jmp	 $LN8@DXUTAllowS
$LN7@DXUTAllowS:
; Line 3162
  000fe	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00103	8b c8		 mov	 ecx, eax
  00105	e8 00 00 00 00	 call	 ?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
  0010a	85 c0		 test	 eax, eax
  0010c	75 3d		 jne	 SHORT $LN4@DXUTAllowS
; Line 3166
  0010e	8b f4		 mov	 esi, esp
  00110	6a 00		 push	 0
  00112	8b fc		 mov	 edi, esp
  00114	6a 00		 push	 0
  00116	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  0011c	3b fc		 cmp	 edi, esp
  0011e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00123	50		 push	 eax
  00124	68 00 00 00 00	 push	 OFFSET ?DXUTLowLevelKeyboardProc@@YGJHIJ@Z ; DXUTLowLevelKeyboardProc
  00129	6a 0d		 push	 13			; 0000000dH
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowsHookExW@16
  00131	3b f4		 cmp	 esi, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	89 45 b8	 mov	 DWORD PTR _hKeyboardHook$4[ebp], eax
; Line 3167
  0013b	8b 55 b8	 mov	 edx, DWORD PTR _hKeyboardHook$4[ebp]
  0013e	52		 push	 edx
  0013f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00144	8b c8		 mov	 ecx, eax
  00146	e8 00 00 00 00	 call	 ?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z ; DXUTState::SetKeyboardHook
$LN4@DXUTAllowS:
; Line 3173
  0014b	8d 45 ac	 lea	 eax, DWORD PTR _skOff$3[ebp]
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00154	8b c8		 mov	 ecx, eax
  00156	e8 00 00 00 00	 call	 ?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ; DXUTState::GetStartupStickyKeys
; Line 3174
  0015b	8b 4d b0	 mov	 ecx, DWORD PTR _skOff$3[ebp+4]
  0015e	83 e1 01	 and	 ecx, 1
  00161	75 2b		 jne	 SHORT $LN3@DXUTAllowS
; Line 3177
  00163	8b 55 b0	 mov	 edx, DWORD PTR _skOff$3[ebp+4]
  00166	83 e2 fb	 and	 edx, -5			; fffffffbH
  00169	89 55 b0	 mov	 DWORD PTR _skOff$3[ebp+4], edx
; Line 3178
  0016c	8b 45 b0	 mov	 eax, DWORD PTR _skOff$3[ebp+4]
  0016f	83 e0 f7	 and	 eax, -9			; fffffff7H
  00172	89 45 b0	 mov	 DWORD PTR _skOff$3[ebp+4], eax
; Line 3180
  00175	8b f4		 mov	 esi, esp
  00177	6a 00		 push	 0
  00179	8d 4d ac	 lea	 ecx, DWORD PTR _skOff$3[ebp]
  0017c	51		 push	 ecx
  0017d	6a 08		 push	 8
  0017f	6a 3b		 push	 59			; 0000003bH
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  00187	3b f4		 cmp	 esi, esp
  00189	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@DXUTAllowS:
; Line 3183
  0018e	8d 55 9c	 lea	 edx, DWORD PTR _tkOff$2[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00197	8b c8		 mov	 ecx, eax
  00199	e8 00 00 00 00	 call	 ?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ; DXUTState::GetStartupToggleKeys
; Line 3184
  0019e	8b 45 a0	 mov	 eax, DWORD PTR _tkOff$2[ebp+4]
  001a1	83 e0 01	 and	 eax, 1
  001a4	75 2b		 jne	 SHORT $LN2@DXUTAllowS
; Line 3187
  001a6	8b 4d a0	 mov	 ecx, DWORD PTR _tkOff$2[ebp+4]
  001a9	83 e1 fb	 and	 ecx, -5			; fffffffbH
  001ac	89 4d a0	 mov	 DWORD PTR _tkOff$2[ebp+4], ecx
; Line 3188
  001af	8b 55 a0	 mov	 edx, DWORD PTR _tkOff$2[ebp+4]
  001b2	83 e2 f7	 and	 edx, -9			; fffffff7H
  001b5	89 55 a0	 mov	 DWORD PTR _tkOff$2[ebp+4], edx
; Line 3190
  001b8	8b f4		 mov	 esi, esp
  001ba	6a 00		 push	 0
  001bc	8d 45 9c	 lea	 eax, DWORD PTR _tkOff$2[ebp]
  001bf	50		 push	 eax
  001c0	6a 08		 push	 8
  001c2	6a 35		 push	 53			; 00000035H
  001c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  001ca	3b f4		 cmp	 esi, esp
  001cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTAllowS:
; Line 3193
  001d1	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _fkOff$1[ebp]
  001d7	51		 push	 ecx
  001d8	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001dd	8b c8		 mov	 ecx, eax
  001df	e8 00 00 00 00	 call	 ?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ; DXUTState::GetStartupFilterKeys
; Line 3194
  001e4	8b 55 80	 mov	 edx, DWORD PTR _fkOff$1[ebp+4]
  001e7	83 e2 01	 and	 edx, 1
  001ea	75 2e		 jne	 SHORT $LN8@DXUTAllowS
; Line 3197
  001ec	8b 45 80	 mov	 eax, DWORD PTR _fkOff$1[ebp+4]
  001ef	83 e0 fb	 and	 eax, -5			; fffffffbH
  001f2	89 45 80	 mov	 DWORD PTR _fkOff$1[ebp+4], eax
; Line 3198
  001f5	8b 4d 80	 mov	 ecx, DWORD PTR _fkOff$1[ebp+4]
  001f8	83 e1 f7	 and	 ecx, -9			; fffffff7H
  001fb	89 4d 80	 mov	 DWORD PTR _fkOff$1[ebp+4], ecx
; Line 3200
  001fe	8b f4		 mov	 esi, esp
  00200	6a 00		 push	 0
  00202	8d 95 7c ff ff
	ff		 lea	 edx, DWORD PTR _fkOff$1[ebp]
  00208	52		 push	 edx
  00209	6a 18		 push	 24			; 00000018H
  0020b	6a 33		 push	 51			; 00000033H
  0020d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  00213	3b f4		 cmp	 esi, esp
  00215	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN8@DXUTAllowS:
; Line 3203
  0021a	52		 push	 edx
  0021b	8b cd		 mov	 ecx, ebp
  0021d	50		 push	 eax
  0021e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@DXUTAllowS
  00224	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00229	58		 pop	 eax
  0022a	5a		 pop	 edx
  0022b	5f		 pop	 edi
  0022c	5e		 pop	 esi
  0022d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00230	33 cd		 xor	 ecx, ebp
  00232	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00237	81 c4 88 00 00
	00		 add	 esp, 136		; 00000088H
  0023d	3b ec		 cmp	 ebp, esp
  0023f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00244	8b e5		 mov	 esp, ebp
  00246	5d		 pop	 ebp
  00247	c3		 ret	 0
$LN17@DXUTAllowS:
  00248	06 00 00 00	 DD	 6
  0024c	00 00 00 00	 DD	 $LN16@DXUTAllowS
$LN16@DXUTAllowS:
  00250	f0 ff ff ff	 DD	 -16			; fffffff0H
  00254	08 00 00 00	 DD	 8
  00258	00 00 00 00	 DD	 $LN10@DXUTAllowS
  0025c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00260	08 00 00 00	 DD	 8
  00264	00 00 00 00	 DD	 $LN11@DXUTAllowS
  00268	c0 ff ff ff	 DD	 -64			; ffffffc0H
  0026c	18 00 00 00	 DD	 24			; 00000018H
  00270	00 00 00 00	 DD	 $LN12@DXUTAllowS
  00274	ac ff ff ff	 DD	 -84			; ffffffacH
  00278	08 00 00 00	 DD	 8
  0027c	00 00 00 00	 DD	 $LN13@DXUTAllowS
  00280	9c ff ff ff	 DD	 -100			; ffffff9cH
  00284	08 00 00 00	 DD	 8
  00288	00 00 00 00	 DD	 $LN14@DXUTAllowS
  0028c	7c ff ff ff	 DD	 -132			; ffffff7cH
  00290	18 00 00 00	 DD	 24			; 00000018H
  00294	00 00 00 00	 DD	 $LN15@DXUTAllowS
$LN15@DXUTAllowS:
  00298	66		 DB	 102			; 00000066H
  00299	6b		 DB	 107			; 0000006bH
  0029a	4f		 DB	 79			; 0000004fH
  0029b	66		 DB	 102			; 00000066H
  0029c	66		 DB	 102			; 00000066H
  0029d	00		 DB	 0
$LN14@DXUTAllowS:
  0029e	74		 DB	 116			; 00000074H
  0029f	6b		 DB	 107			; 0000006bH
  002a0	4f		 DB	 79			; 0000004fH
  002a1	66		 DB	 102			; 00000066H
  002a2	66		 DB	 102			; 00000066H
  002a3	00		 DB	 0
$LN13@DXUTAllowS:
  002a4	73		 DB	 115			; 00000073H
  002a5	6b		 DB	 107			; 0000006bH
  002a6	4f		 DB	 79			; 0000004fH
  002a7	66		 DB	 102			; 00000066H
  002a8	66		 DB	 102			; 00000066H
  002a9	00		 DB	 0
$LN12@DXUTAllowS:
  002aa	66		 DB	 102			; 00000066H
  002ab	6b		 DB	 107			; 0000006bH
  002ac	00		 DB	 0
$LN11@DXUTAllowS:
  002ad	74		 DB	 116			; 00000074H
  002ae	6b		 DB	 107			; 0000006bH
  002af	00		 DB	 0
$LN10@DXUTAllowS:
  002b0	73		 DB	 115			; 00000073H
  002b1	6b		 DB	 107			; 0000006bH
  002b2	00		 DB	 0
?DXUTAllowShortcutKeys@@YAX_N@Z ENDP			; DXUTAllowShortcutKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -24						; size = 4
tv144 = -18						; size = 2
tv141 = -16						; size = 4
tv138 = -12						; size = 4
_count$1 = -8						; size = 4
_strSpace$2 = -4					; size = 4
_strCmdLine$ = 8					; size = 4
_strFlag$ = 12						; size = 4
_cchDest$ = 16						; size = 4
?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z PROC		; DXUTGetCmdParam
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 941
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 942
  0001e	8b 45 08	 mov	 eax, DWORD PTR _strCmdLine$[ebp]
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00026	83 fa 3a	 cmp	 edx, 58			; 0000003aH
  00029	0f 85 b8 00 00
	00		 jne	 $LN4@DXUTGetCmd
; Line 944
  0002f	8b 45 08	 mov	 eax, DWORD PTR _strCmdLine$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	83 c1 02	 add	 ecx, 2
  00037	8b 55 08	 mov	 edx, DWORD PTR _strCmdLine$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 947
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 45 08	 mov	 eax, DWORD PTR _strCmdLine$[ebp]
  00041	8b 08		 mov	 ecx, DWORD PTR [eax]
  00043	51		 push	 ecx
  00044	8b 55 10	 mov	 edx, DWORD PTR _cchDest$[ebp]
  00047	52		 push	 edx
  00048	8b 45 0c	 mov	 eax, DWORD PTR _strFlag$[ebp]
  0004b	50		 push	 eax
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 949
  0005c	8b 4d 0c	 mov	 ecx, DWORD PTR _strFlag$[ebp]
  0005f	89 4d fc	 mov	 DWORD PTR _strSpace$2[ebp], ecx
; Line 950
  00062	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
$LN3@DXUTGetCmd:
; Line 951
  00069	8b 55 fc	 mov	 edx, DWORD PTR _strSpace$2[ebp]
  0006c	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0006f	85 c0		 test	 eax, eax
  00071	74 27		 je	 SHORT $LN2@DXUTGetCmd
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _strSpace$2[ebp]
  00076	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00079	83 fa 20	 cmp	 edx, 32			; 00000020H
  0007c	7e 1c		 jle	 SHORT $LN2@DXUTGetCmd
  0007e	8b 45 f8	 mov	 eax, DWORD PTR _count$1[ebp]
  00081	3b 45 10	 cmp	 eax, DWORD PTR _cchDest$[ebp]
  00084	7d 14		 jge	 SHORT $LN2@DXUTGetCmd
; Line 953
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _strSpace$2[ebp]
  00089	83 c1 02	 add	 ecx, 2
  0008c	89 4d fc	 mov	 DWORD PTR _strSpace$2[ebp], ecx
; Line 954
  0008f	8b 55 f8	 mov	 edx, DWORD PTR _count$1[ebp]
  00092	83 c2 01	 add	 edx, 1
  00095	89 55 f8	 mov	 DWORD PTR _count$1[ebp], edx
; Line 955
  00098	eb cf		 jmp	 SHORT $LN3@DXUTGetCmd
$LN2@DXUTGetCmd:
; Line 956
  0009a	33 c0		 xor	 eax, eax
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _strSpace$2[ebp]
  0009f	66 89 01	 mov	 WORD PTR [ecx], ax
; Line 959
  000a2	8b 55 0c	 mov	 edx, DWORD PTR _strFlag$[ebp]
  000a5	89 55 f4	 mov	 DWORD PTR tv138[ebp], edx
  000a8	8b 45 f4	 mov	 eax, DWORD PTR tv138[ebp]
  000ab	83 c0 02	 add	 eax, 2
  000ae	89 45 f0	 mov	 DWORD PTR tv141[ebp], eax
$LL7@DXUTGetCmd:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR tv138[ebp]
  000b4	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000b7	66 89 55 ee	 mov	 WORD PTR tv144[ebp], dx
  000bb	83 45 f4 02	 add	 DWORD PTR tv138[ebp], 2
  000bf	66 83 7d ee 00	 cmp	 WORD PTR tv144[ebp], 0
  000c4	75 eb		 jne	 SHORT $LL7@DXUTGetCmd
  000c6	8b 45 f4	 mov	 eax, DWORD PTR tv138[ebp]
  000c9	2b 45 f0	 sub	 eax, DWORD PTR tv141[ebp]
  000cc	d1 f8		 sar	 eax, 1
  000ce	89 45 e8	 mov	 DWORD PTR tv80[ebp], eax
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _strCmdLine$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	8b 45 e8	 mov	 eax, DWORD PTR tv80[ebp]
  000d9	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  000dc	8b 55 08	 mov	 edx, DWORD PTR _strCmdLine$[ebp]
  000df	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 960
  000e1	b0 01		 mov	 al, 1
  000e3	eb 15		 jmp	 SHORT $LN5@DXUTGetCmd
; Line 962
  000e5	eb 13		 jmp	 SHORT $LN5@DXUTGetCmd
$LN4@DXUTGetCmd:
; Line 964
  000e7	b8 02 00 00 00	 mov	 eax, 2
  000ec	6b c8 00	 imul	 ecx, eax, 0
  000ef	33 d2		 xor	 edx, edx
  000f1	8b 45 0c	 mov	 eax, DWORD PTR _strFlag$[ebp]
  000f4	66 89 14 08	 mov	 WORD PTR [eax+ecx], dx
; Line 965
  000f8	32 c0		 xor	 al, al
$LN5@DXUTGetCmd:
; Line 967
  000fa	5e		 pop	 esi
  000fb	83 c4 18	 add	 esp, 24			; 00000018H
  000fe	3b ec		 cmp	 ebp, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ENDP		; DXUTGetCmdParam
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -40						; size = 4
tv142 = -34						; size = 2
tv139 = -32						; size = 4
tv136 = -28						; size = 4
tv66 = -24						; size = 4
tv128 = -18						; size = 2
tv93 = -16						; size = 4
tv90 = -12						; size = 4
_nCmdLen$ = -8						; size = 4
_nArgLen$ = -4						; size = 4
_strCmdLine$ = 8					; size = 4
_strArg$ = 12						; size = 4
?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z PROC			; DXUTIsNextArg
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 918
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
; Line 919
  00017	8b 45 0c	 mov	 eax, DWORD PTR _strArg$[ebp]
  0001a	89 45 f4	 mov	 DWORD PTR tv90[ebp], eax
  0001d	8b 4d f4	 mov	 ecx, DWORD PTR tv90[ebp]
  00020	83 c1 02	 add	 ecx, 2
  00023	89 4d f0	 mov	 DWORD PTR tv93[ebp], ecx
$LL5@DXUTIsNext:
  00026	8b 55 f4	 mov	 edx, DWORD PTR tv90[ebp]
  00029	66 8b 02	 mov	 ax, WORD PTR [edx]
  0002c	66 89 45 ee	 mov	 WORD PTR tv128[ebp], ax
  00030	83 45 f4 02	 add	 DWORD PTR tv90[ebp], 2
  00034	66 83 7d ee 00	 cmp	 WORD PTR tv128[ebp], 0
  00039	75 eb		 jne	 SHORT $LL5@DXUTIsNext
  0003b	8b 4d f4	 mov	 ecx, DWORD PTR tv90[ebp]
  0003e	2b 4d f0	 sub	 ecx, DWORD PTR tv93[ebp]
  00041	d1 f9		 sar	 ecx, 1
  00043	89 4d e8	 mov	 DWORD PTR tv66[ebp], ecx
  00046	8b 55 e8	 mov	 edx, DWORD PTR tv66[ebp]
  00049	89 55 fc	 mov	 DWORD PTR _nArgLen$[ebp], edx
; Line 920
  0004c	8b 45 08	 mov	 eax, DWORD PTR _strCmdLine$[ebp]
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	89 4d e4	 mov	 DWORD PTR tv136[ebp], ecx
  00054	8b 55 e4	 mov	 edx, DWORD PTR tv136[ebp]
  00057	83 c2 02	 add	 edx, 2
  0005a	89 55 e0	 mov	 DWORD PTR tv139[ebp], edx
$LL6@DXUTIsNext:
  0005d	8b 45 e4	 mov	 eax, DWORD PTR tv136[ebp]
  00060	66 8b 08	 mov	 cx, WORD PTR [eax]
  00063	66 89 4d de	 mov	 WORD PTR tv142[ebp], cx
  00067	83 45 e4 02	 add	 DWORD PTR tv136[ebp], 2
  0006b	66 83 7d de 00	 cmp	 WORD PTR tv142[ebp], 0
  00070	75 eb		 jne	 SHORT $LL6@DXUTIsNext
  00072	8b 55 e4	 mov	 edx, DWORD PTR tv136[ebp]
  00075	2b 55 e0	 sub	 edx, DWORD PTR tv139[ebp]
  00078	d1 fa		 sar	 edx, 1
  0007a	89 55 d8	 mov	 DWORD PTR tv69[ebp], edx
  0007d	8b 45 d8	 mov	 eax, DWORD PTR tv69[ebp]
  00080	89 45 f8	 mov	 DWORD PTR _nCmdLen$[ebp], eax
; Line 924
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _nCmdLen$[ebp]
  00086	3b 4d fc	 cmp	 ecx, DWORD PTR _nArgLen$[ebp]
  00089	72 59		 jb	 SHORT $LN2@DXUTIsNext
  0008b	8b f4		 mov	 esi, esp
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _nArgLen$[ebp]
  00090	52		 push	 edx
  00091	8b 45 0c	 mov	 eax, DWORD PTR _strArg$[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _strCmdLine$[ebp]
  00098	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009a	52		 push	 edx
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	85 c0		 test	 eax, eax
  000ad	75 35		 jne	 SHORT $LN2@DXUTIsNext
  000af	8b 45 08	 mov	 eax, DWORD PTR _strCmdLine$[ebp]
  000b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _nArgLen$[ebp]
  000b7	0f b7 04 51	 movzx	 eax, WORD PTR [ecx+edx*2]
  000bb	85 c0		 test	 eax, eax
  000bd	74 11		 je	 SHORT $LN1@DXUTIsNext
  000bf	8b 4d 08	 mov	 ecx, DWORD PTR _strCmdLine$[ebp]
  000c2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c4	8b 45 fc	 mov	 eax, DWORD PTR _nArgLen$[ebp]
  000c7	0f b7 0c 42	 movzx	 ecx, WORD PTR [edx+eax*2]
  000cb	83 f9 3a	 cmp	 ecx, 58			; 0000003aH
  000ce	75 14		 jne	 SHORT $LN2@DXUTIsNext
$LN1@DXUTIsNext:
; Line 926
  000d0	8b 55 08	 mov	 edx, DWORD PTR _strCmdLine$[ebp]
  000d3	8b 02		 mov	 eax, DWORD PTR [edx]
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _nArgLen$[ebp]
  000d8	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  000db	8b 45 08	 mov	 eax, DWORD PTR _strCmdLine$[ebp]
  000de	89 10		 mov	 DWORD PTR [eax], edx
; Line 927
  000e0	b0 01		 mov	 al, 1
  000e2	eb 02		 jmp	 SHORT $LN3@DXUTIsNext
$LN2@DXUTIsNext:
; Line 930
  000e4	32 c0		 xor	 al, al
$LN3@DXUTIsNext:
; Line 931
  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	83 c4 28	 add	 esp, 40			; 00000028H
  000eb	3b ec		 cmp	 ebp, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c3		 ret	 0
?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ENDP			; DXUTIsNextArg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv428 = -624						; size = 4
tv647 = -618						; size = 2
tv644 = -616						; size = 4
tv641 = -612						; size = 4
_strSpace$1 = -608					; size = 4
_nFrame$2 = -604					; size = 4
_fTimePerFrame$3 = -600					; size = 4
_nY$4 = -596						; size = 4
_nX$5 = -592						; size = 4
_nHeight$6 = -588					; size = 4
_nWidth$7 = -584					; size = 4
_nOn$8 = -580						; size = 4
_Output$9 = -576					; size = 4
_nAdapter$10 = -572					; size = 4
_iArg$11 = -568						; size = 4
_iArgStart$ = -564					; size = 4
_pstrArgList$ = -560					; size = 4
_nNumArgs$ = -552					; size = 4
_strFlag$ = -540					; size = 520
_strCmdLine$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_strCommandLine$ = 8					; size = 4
_bIgnoreFirstCommand$ = 12				; size = 1
?DXUTParseCommandLine@@YAXPA_W_N@Z PROC			; DXUTParseCommandLine
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 708
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 70 02 00
	00		 sub	 esp, 624		; 00000270H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 90 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-624]
  00011	b9 9c 00 00 00	 mov	 ecx, 156		; 0000009cH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 713
  00027	8b f4		 mov	 esi, esp
  00029	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _nNumArgs$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _strCommandLine$[ebp]
  00033	51		 push	 ecx
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CommandLineToArgvW@8
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	89 85 d0 fd ff
	ff		 mov	 DWORD PTR _pstrArgList$[ebp], eax
; Line 714
  00047	c7 85 cc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _iArgStart$[ebp], 0
; Line 715
  00051	0f b6 55 0c	 movzx	 edx, BYTE PTR _bIgnoreFirstCommand$[ebp]
  00055	85 d2		 test	 edx, edx
  00057	74 0a		 je	 SHORT $LN52@DXUTParseC
; Line 716
  00059	c7 85 cc fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _iArgStart$[ebp], 1
$LN52@DXUTParseC:
; Line 717
  00063	8b 85 cc fd ff
	ff		 mov	 eax, DWORD PTR _iArgStart$[ebp]
  00069	89 85 c8 fd ff
	ff		 mov	 DWORD PTR _iArg$11[ebp], eax
  0006f	eb 0f		 jmp	 SHORT $LN51@DXUTParseC
$LN50@DXUTParseC:
  00071	8b 8d c8 fd ff
	ff		 mov	 ecx, DWORD PTR _iArg$11[ebp]
  00077	83 c1 01	 add	 ecx, 1
  0007a	89 8d c8 fd ff
	ff		 mov	 DWORD PTR _iArg$11[ebp], ecx
$LN51@DXUTParseC:
  00080	8b 95 c8 fd ff
	ff		 mov	 edx, DWORD PTR _iArg$11[ebp]
  00086	3b 95 d8 fd ff
	ff		 cmp	 edx, DWORD PTR _nNumArgs$[ebp]
  0008c	0f 8d f6 08 00
	00		 jge	 $LN49@DXUTParseC
; Line 719
  00092	8b 85 c8 fd ff
	ff		 mov	 eax, DWORD PTR _iArg$11[ebp]
  00098	8b 8d d0 fd ff
	ff		 mov	 ecx, DWORD PTR _pstrArgList$[ebp]
  0009e	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  000a1	89 55 f4	 mov	 DWORD PTR _strCmdLine$[ebp], edx
; Line 722
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _strCmdLine$[ebp]
  000a7	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000aa	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  000ad	74 0f		 je	 SHORT $LN47@DXUTParseC
  000af	8b 55 f4	 mov	 edx, DWORD PTR _strCmdLine$[ebp]
  000b2	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000b5	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  000b8	0f 85 ed 07 00
	00		 jne	 $LN3@DXUTParseC
$LN47@DXUTParseC:
; Line 724
  000be	8b 4d f4	 mov	 ecx, DWORD PTR _strCmdLine$[ebp]
  000c1	83 c1 02	 add	 ecx, 2
  000c4	89 4d f4	 mov	 DWORD PTR _strCmdLine$[ebp], ecx
; Line 726
  000c7	68 00 00 00 00	 push	 OFFSET $SG151611
  000cc	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  000d5	83 c4 08	 add	 esp, 8
  000d8	0f b6 c0	 movzx	 eax, al
  000db	85 c0		 test	 eax, eax
  000dd	0f 84 c8 01 00
	00		 je	 $LN45@DXUTParseC
; Line 728
  000e3	68 04 01 00 00	 push	 260			; 00000104H
  000e8	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  000ee	51		 push	 ecx
  000ef	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  000f2	52		 push	 edx
  000f3	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  000f8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000fb	0f b6 c0	 movzx	 eax, al
  000fe	85 c0		 test	 eax, eax
  00100	0f 84 a5 01 00
	00		 je	 $LN45@DXUTParseC
; Line 730
  00106	8b f4		 mov	 esi, esp
  00108	68 04 01 00 00	 push	 260			; 00000104H
  0010d	68 00 00 00 00	 push	 OFFSET $SG151614
  00112	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  00118	51		 push	 ecx
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  0011f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00122	3b f4		 cmp	 esi, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00129	85 c0		 test	 eax, eax
  0012b	75 16		 jne	 SHORT $LN44@DXUTParseC
; Line 731
  0012d	68 00 b1 00 00	 push	 45312			; 0000b100H
  00132	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00137	8b c8		 mov	 ecx, eax
  00139	e8 00 00 00 00	 call	 ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
  0013e	e9 63 01 00 00	 jmp	 $LN32@DXUTParseC
$LN44@DXUTParseC:
; Line 732
  00143	8b f4		 mov	 esi, esp
  00145	68 04 01 00 00	 push	 260			; 00000104H
  0014a	68 00 00 00 00	 push	 OFFSET $SG151617
  0014f	8d 95 e4 fd ff
	ff		 lea	 edx, DWORD PTR _strFlag$[ebp]
  00155	52		 push	 edx
  00156	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  0015c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0015f	3b f4		 cmp	 esi, esp
  00161	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00166	85 c0		 test	 eax, eax
  00168	75 16		 jne	 SHORT $LN42@DXUTParseC
; Line 733
  0016a	68 00 b0 00 00	 push	 45056			; 0000b000H
  0016f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00174	8b c8		 mov	 ecx, eax
  00176	e8 00 00 00 00	 call	 ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
  0017b	e9 26 01 00 00	 jmp	 $LN32@DXUTParseC
$LN42@DXUTParseC:
; Line 734
  00180	8b f4		 mov	 esi, esp
  00182	68 04 01 00 00	 push	 260			; 00000104H
  00187	68 00 00 00 00	 push	 OFFSET $SG151620
  0018c	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  00192	50		 push	 eax
  00193	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  00199	83 c4 0c	 add	 esp, 12			; 0000000cH
  0019c	3b f4		 cmp	 esi, esp
  0019e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a3	85 c0		 test	 eax, eax
  001a5	75 16		 jne	 SHORT $LN40@DXUTParseC
; Line 735
  001a7	68 00 a1 00 00	 push	 41216			; 0000a100H
  001ac	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001b1	8b c8		 mov	 ecx, eax
  001b3	e8 00 00 00 00	 call	 ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
  001b8	e9 e9 00 00 00	 jmp	 $LN32@DXUTParseC
$LN40@DXUTParseC:
; Line 736
  001bd	8b f4		 mov	 esi, esp
  001bf	68 04 01 00 00	 push	 260			; 00000104H
  001c4	68 00 00 00 00	 push	 OFFSET $SG151623
  001c9	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  001cf	51		 push	 ecx
  001d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  001d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d9	3b f4		 cmp	 esi, esp
  001db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e0	85 c0		 test	 eax, eax
  001e2	75 16		 jne	 SHORT $LN38@DXUTParseC
; Line 737
  001e4	68 00 a0 00 00	 push	 40960			; 0000a000H
  001e9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001ee	8b c8		 mov	 ecx, eax
  001f0	e8 00 00 00 00	 call	 ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
  001f5	e9 ac 00 00 00	 jmp	 $LN32@DXUTParseC
$LN38@DXUTParseC:
; Line 738
  001fa	8b f4		 mov	 esi, esp
  001fc	68 04 01 00 00	 push	 260			; 00000104H
  00201	68 00 00 00 00	 push	 OFFSET $SG151626
  00206	8d 95 e4 fd ff
	ff		 lea	 edx, DWORD PTR _strFlag$[ebp]
  0020c	52		 push	 edx
  0020d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  00213	83 c4 0c	 add	 esp, 12			; 0000000cH
  00216	3b f4		 cmp	 esi, esp
  00218	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021d	85 c0		 test	 eax, eax
  0021f	75 13		 jne	 SHORT $LN36@DXUTParseC
; Line 739
  00221	68 00 93 00 00	 push	 37632			; 00009300H
  00226	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0022b	8b c8		 mov	 ecx, eax
  0022d	e8 00 00 00 00	 call	 ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
  00232	eb 72		 jmp	 SHORT $LN32@DXUTParseC
$LN36@DXUTParseC:
; Line 740
  00234	8b f4		 mov	 esi, esp
  00236	68 04 01 00 00	 push	 260			; 00000104H
  0023b	68 00 00 00 00	 push	 OFFSET $SG151629
  00240	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  00246	50		 push	 eax
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  0024d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	85 c0		 test	 eax, eax
  00259	75 13		 jne	 SHORT $LN34@DXUTParseC
; Line 741
  0025b	68 00 92 00 00	 push	 37376			; 00009200H
  00260	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00265	8b c8		 mov	 ecx, eax
  00267	e8 00 00 00 00	 call	 ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
  0026c	eb 38		 jmp	 SHORT $LN32@DXUTParseC
$LN34@DXUTParseC:
; Line 742
  0026e	8b f4		 mov	 esi, esp
  00270	68 04 01 00 00	 push	 260			; 00000104H
  00275	68 00 00 00 00	 push	 OFFSET $SG151632
  0027a	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  00280	51		 push	 ecx
  00281	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  00287	83 c4 0c	 add	 esp, 12			; 0000000cH
  0028a	3b f4		 cmp	 esi, esp
  0028c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00291	85 c0		 test	 eax, eax
  00293	75 11		 jne	 SHORT $LN32@DXUTParseC
; Line 743
  00295	68 00 91 00 00	 push	 37120			; 00009100H
  0029a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0029f	8b c8		 mov	 ecx, eax
  002a1	e8 00 00 00 00	 call	 ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
$LN32@DXUTParseC:
; Line 745
  002a6	e9 c6 fd ff ff	 jmp	 $LN50@DXUTParseC
$LN45@DXUTParseC:
; Line 749
  002ab	68 00 00 00 00	 push	 OFFSET $SG151634
  002b0	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  002b3	52		 push	 edx
  002b4	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  002b9	83 c4 08	 add	 esp, 8
  002bc	0f b6 c0	 movzx	 eax, al
  002bf	85 c0		 test	 eax, eax
  002c1	74 56		 je	 SHORT $LN30@DXUTParseC
; Line 751
  002c3	68 04 01 00 00	 push	 260			; 00000104H
  002c8	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  002ce	51		 push	 ecx
  002cf	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  002d2	52		 push	 edx
  002d3	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  002d8	83 c4 0c	 add	 esp, 12			; 0000000cH
  002db	0f b6 c0	 movzx	 eax, al
  002de	85 c0		 test	 eax, eax
  002e0	74 37		 je	 SHORT $LN30@DXUTParseC
; Line 753
  002e2	8b f4		 mov	 esi, esp
  002e4	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  002ea	51		 push	 ecx
  002eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  002f1	83 c4 04	 add	 esp, 4
  002f4	3b f4		 cmp	 esi, esp
  002f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fb	89 85 c4 fd ff
	ff		 mov	 DWORD PTR _nAdapter$10[ebp], eax
; Line 754
  00301	8b 95 c4 fd ff
	ff		 mov	 edx, DWORD PTR _nAdapter$10[ebp]
  00307	52		 push	 edx
  00308	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0030d	8b c8		 mov	 ecx, eax
  0030f	e8 00 00 00 00	 call	 ?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideAdapterOrdinal
; Line 755
  00314	e9 58 fd ff ff	 jmp	 $LN50@DXUTParseC
$LN30@DXUTParseC:
; Line 759
  00319	68 00 00 00 00	 push	 OFFSET $SG151638
  0031e	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  00327	83 c4 08	 add	 esp, 8
  0032a	0f b6 c8	 movzx	 ecx, al
  0032d	85 c9		 test	 ecx, ecx
  0032f	74 13		 je	 SHORT $LN29@DXUTParseC
; Line 761
  00331	6a 01		 push	 1
  00333	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00338	8b c8		 mov	 ecx, eax
  0033a	e8 00 00 00 00	 call	 ?SetOverrideWindowed@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideWindowed
; Line 762
  0033f	e9 2d fd ff ff	 jmp	 $LN50@DXUTParseC
$LN29@DXUTParseC:
; Line 765
  00344	68 00 00 00 00	 push	 OFFSET $SG151640
  00349	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  0034c	52		 push	 edx
  0034d	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  00352	83 c4 08	 add	 esp, 8
  00355	0f b6 c0	 movzx	 eax, al
  00358	85 c0		 test	 eax, eax
  0035a	74 56		 je	 SHORT $LN27@DXUTParseC
; Line 767
  0035c	68 04 01 00 00	 push	 260			; 00000104H
  00361	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  00367	51		 push	 ecx
  00368	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  0036b	52		 push	 edx
  0036c	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  00371	83 c4 0c	 add	 esp, 12			; 0000000cH
  00374	0f b6 c0	 movzx	 eax, al
  00377	85 c0		 test	 eax, eax
  00379	74 37		 je	 SHORT $LN27@DXUTParseC
; Line 769
  0037b	8b f4		 mov	 esi, esp
  0037d	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  00383	51		 push	 ecx
  00384	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  0038a	83 c4 04	 add	 esp, 4
  0038d	3b f4		 cmp	 esi, esp
  0038f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00394	89 85 c0 fd ff
	ff		 mov	 DWORD PTR _Output$9[ebp], eax
; Line 770
  0039a	8b 95 c0 fd ff
	ff		 mov	 edx, DWORD PTR _Output$9[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003a6	8b c8		 mov	 ecx, eax
  003a8	e8 00 00 00 00	 call	 ?SetOverrideOutput@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideOutput
; Line 771
  003ad	e9 bf fc ff ff	 jmp	 $LN50@DXUTParseC
$LN27@DXUTParseC:
; Line 775
  003b2	68 00 00 00 00	 push	 OFFSET $SG151644
  003b7	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  003ba	50		 push	 eax
  003bb	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  003c0	83 c4 08	 add	 esp, 8
  003c3	0f b6 c8	 movzx	 ecx, al
  003c6	85 c9		 test	 ecx, ecx
  003c8	74 13		 je	 SHORT $LN26@DXUTParseC
; Line 777
  003ca	6a 01		 push	 1
  003cc	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003d1	8b c8		 mov	 ecx, eax
  003d3	e8 00 00 00 00	 call	 ?SetOverrideFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideFullScreen
; Line 778
  003d8	e9 94 fc ff ff	 jmp	 $LN50@DXUTParseC
$LN26@DXUTParseC:
; Line 781
  003dd	68 00 00 00 00	 push	 OFFSET $SG151646
  003e2	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  003e5	52		 push	 edx
  003e6	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  003eb	83 c4 08	 add	 esp, 8
  003ee	0f b6 c0	 movzx	 eax, al
  003f1	85 c0		 test	 eax, eax
  003f3	74 13		 je	 SHORT $LN25@DXUTParseC
; Line 783
  003f5	6a 01		 push	 1
  003f7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003fc	8b c8		 mov	 ecx, eax
  003fe	e8 00 00 00 00	 call	 ?SetOverrideForceHAL@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideForceHAL
; Line 784
  00403	e9 69 fc ff ff	 jmp	 $LN50@DXUTParseC
$LN25@DXUTParseC:
; Line 786
  00408	68 00 00 00 00	 push	 OFFSET $SG151648
  0040d	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  00410	51		 push	 ecx
  00411	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  00416	83 c4 08	 add	 esp, 8
  00419	0f b6 d0	 movzx	 edx, al
  0041c	85 d2		 test	 edx, edx
  0041e	74 70		 je	 SHORT $LN23@DXUTParseC
; Line 787
  00420	68 04 01 00 00	 push	 260			; 00000104H
  00425	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  0042b	50		 push	 eax
  0042c	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  0042f	51		 push	 ecx
  00430	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  00435	83 c4 0c	 add	 esp, 12			; 0000000cH
  00438	0f b6 d0	 movzx	 edx, al
  0043b	85 d2		 test	 edx, edx
  0043d	74 51		 je	 SHORT $LN23@DXUTParseC
; Line 789
  0043f	6a 01		 push	 1
  00441	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00446	8b c8		 mov	 ecx, eax
  00448	e8 00 00 00 00	 call	 ?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z ; DXUTState::SetExitAfterScreenShot
; Line 790
  0044d	6a 01		 push	 1
  0044f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00454	8b c8		 mov	 ecx, eax
  00456	e8 00 00 00 00	 call	 ?SetSaveScreenShot@DXUTState@@QAEX_N@Z ; DXUTState::SetSaveScreenShot
; Line 791
  0045b	8b f4		 mov	 esi, esp
  0045d	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  00463	50		 push	 eax
  00464	68 00 00 00 00	 push	 OFFSET $SG151650
  00469	68 00 01 00 00	 push	 256			; 00000100H
  0046e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00473	8b c8		 mov	 ecx, eax
  00475	e8 00 00 00 00	 call	 ?GetScreenShotName@DXUTState@@QAEPA_WXZ ; DXUTState::GetScreenShotName
  0047a	50		 push	 eax
  0047b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__swprintf_s
  00481	83 c4 10	 add	 esp, 16			; 00000010H
  00484	3b f4		 cmp	 esi, esp
  00486	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 792
  0048b	e9 e1 fb ff ff	 jmp	 $LN50@DXUTParseC
$LN23@DXUTParseC:
; Line 795
  00490	68 00 00 00 00	 push	 OFFSET $SG151652
  00495	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  00498	51		 push	 ecx
  00499	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  0049e	83 c4 08	 add	 esp, 8
  004a1	0f b6 d0	 movzx	 edx, al
  004a4	85 d2		 test	 edx, edx
  004a6	74 13		 je	 SHORT $LN22@DXUTParseC
; Line 797
  004a8	6a 01		 push	 1
  004aa	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  004af	8b c8		 mov	 ecx, eax
  004b1	e8 00 00 00 00	 call	 ?SetOverrideForceREF@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideForceREF
; Line 798
  004b6	e9 b6 fb ff ff	 jmp	 $LN50@DXUTParseC
$LN22@DXUTParseC:
; Line 800
  004bb	68 00 00 00 00	 push	 OFFSET $SG151654
  004c0	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  004c3	50		 push	 eax
  004c4	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  004c9	83 c4 08	 add	 esp, 8
  004cc	0f b6 c8	 movzx	 ecx, al
  004cf	85 c9		 test	 ecx, ecx
  004d1	74 13		 je	 SHORT $LN21@DXUTParseC
; Line 802
  004d3	6a 01		 push	 1
  004d5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  004da	8b c8		 mov	 ecx, eax
  004dc	e8 00 00 00 00	 call	 ?SetOverrideForceWARP@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideForceWARP
; Line 803
  004e1	e9 8b fb ff ff	 jmp	 $LN50@DXUTParseC
$LN21@DXUTParseC:
; Line 806
  004e6	68 00 00 00 00	 push	 OFFSET $SG151656
  004eb	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  004ee	52		 push	 edx
  004ef	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  004f4	83 c4 08	 add	 esp, 8
  004f7	0f b6 c0	 movzx	 eax, al
  004fa	85 c0		 test	 eax, eax
  004fc	74 56		 je	 SHORT $LN19@DXUTParseC
; Line 808
  004fe	68 04 01 00 00	 push	 260			; 00000104H
  00503	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  00509	51		 push	 ecx
  0050a	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  0050d	52		 push	 edx
  0050e	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  00513	83 c4 0c	 add	 esp, 12			; 0000000cH
  00516	0f b6 c0	 movzx	 eax, al
  00519	85 c0		 test	 eax, eax
  0051b	74 37		 je	 SHORT $LN19@DXUTParseC
; Line 810
  0051d	8b f4		 mov	 esi, esp
  0051f	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  00525	51		 push	 ecx
  00526	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  0052c	83 c4 04	 add	 esp, 4
  0052f	3b f4		 cmp	 esi, esp
  00531	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00536	89 85 bc fd ff
	ff		 mov	 DWORD PTR _nOn$8[ebp], eax
; Line 811
  0053c	8b 95 bc fd ff
	ff		 mov	 edx, DWORD PTR _nOn$8[ebp]
  00542	52		 push	 edx
  00543	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00548	8b c8		 mov	 ecx, eax
  0054a	e8 00 00 00 00	 call	 ?SetOverrideForceVsync@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideForceVsync
; Line 812
  0054f	e9 1d fb ff ff	 jmp	 $LN50@DXUTParseC
$LN19@DXUTParseC:
; Line 816
  00554	68 00 00 00 00	 push	 OFFSET $SG151660
  00559	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  0055c	50		 push	 eax
  0055d	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  00562	83 c4 08	 add	 esp, 8
  00565	0f b6 c8	 movzx	 ecx, al
  00568	85 c9		 test	 ecx, ecx
  0056a	74 56		 je	 SHORT $LN17@DXUTParseC
; Line 818
  0056c	68 04 01 00 00	 push	 260			; 00000104H
  00571	8d 95 e4 fd ff
	ff		 lea	 edx, DWORD PTR _strFlag$[ebp]
  00577	52		 push	 edx
  00578	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  0057b	50		 push	 eax
  0057c	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  00581	83 c4 0c	 add	 esp, 12			; 0000000cH
  00584	0f b6 c8	 movzx	 ecx, al
  00587	85 c9		 test	 ecx, ecx
  00589	74 37		 je	 SHORT $LN17@DXUTParseC
; Line 820
  0058b	8b f4		 mov	 esi, esp
  0058d	8d 95 e4 fd ff
	ff		 lea	 edx, DWORD PTR _strFlag$[ebp]
  00593	52		 push	 edx
  00594	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  0059a	83 c4 04	 add	 esp, 4
  0059d	3b f4		 cmp	 esi, esp
  0059f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a4	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _nWidth$7[ebp], eax
; Line 821
  005aa	8b 85 b8 fd ff
	ff		 mov	 eax, DWORD PTR _nWidth$7[ebp]
  005b0	50		 push	 eax
  005b1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005b6	8b c8		 mov	 ecx, eax
  005b8	e8 00 00 00 00	 call	 ?SetOverrideWidth@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideWidth
; Line 822
  005bd	e9 af fa ff ff	 jmp	 $LN50@DXUTParseC
$LN17@DXUTParseC:
; Line 826
  005c2	68 00 00 00 00	 push	 OFFSET $SG151664
  005c7	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  005ca	51		 push	 ecx
  005cb	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  005d0	83 c4 08	 add	 esp, 8
  005d3	0f b6 d0	 movzx	 edx, al
  005d6	85 d2		 test	 edx, edx
  005d8	74 56		 je	 SHORT $LN15@DXUTParseC
; Line 828
  005da	68 04 01 00 00	 push	 260			; 00000104H
  005df	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  005e5	50		 push	 eax
  005e6	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  005e9	51		 push	 ecx
  005ea	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  005ef	83 c4 0c	 add	 esp, 12			; 0000000cH
  005f2	0f b6 d0	 movzx	 edx, al
  005f5	85 d2		 test	 edx, edx
  005f7	74 37		 je	 SHORT $LN15@DXUTParseC
; Line 830
  005f9	8b f4		 mov	 esi, esp
  005fb	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  00601	50		 push	 eax
  00602	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  00608	83 c4 04	 add	 esp, 4
  0060b	3b f4		 cmp	 esi, esp
  0060d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00612	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _nHeight$6[ebp], eax
; Line 831
  00618	8b 8d b4 fd ff
	ff		 mov	 ecx, DWORD PTR _nHeight$6[ebp]
  0061e	51		 push	 ecx
  0061f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00624	8b c8		 mov	 ecx, eax
  00626	e8 00 00 00 00	 call	 ?SetOverrideHeight@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideHeight
; Line 832
  0062b	e9 41 fa ff ff	 jmp	 $LN50@DXUTParseC
$LN15@DXUTParseC:
; Line 836
  00630	68 00 00 00 00	 push	 OFFSET $SG151668
  00635	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  00638	52		 push	 edx
  00639	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  0063e	83 c4 08	 add	 esp, 8
  00641	0f b6 c0	 movzx	 eax, al
  00644	85 c0		 test	 eax, eax
  00646	74 56		 je	 SHORT $LN13@DXUTParseC
; Line 838
  00648	68 04 01 00 00	 push	 260			; 00000104H
  0064d	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  00653	51		 push	 ecx
  00654	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  00657	52		 push	 edx
  00658	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  0065d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00660	0f b6 c0	 movzx	 eax, al
  00663	85 c0		 test	 eax, eax
  00665	74 37		 je	 SHORT $LN13@DXUTParseC
; Line 840
  00667	8b f4		 mov	 esi, esp
  00669	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  0066f	51		 push	 ecx
  00670	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  00676	83 c4 04	 add	 esp, 4
  00679	3b f4		 cmp	 esi, esp
  0067b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00680	89 85 b0 fd ff
	ff		 mov	 DWORD PTR _nX$5[ebp], eax
; Line 841
  00686	8b 95 b0 fd ff
	ff		 mov	 edx, DWORD PTR _nX$5[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00692	8b c8		 mov	 ecx, eax
  00694	e8 00 00 00 00	 call	 ?SetOverrideStartX@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideStartX
; Line 842
  00699	e9 d3 f9 ff ff	 jmp	 $LN50@DXUTParseC
$LN13@DXUTParseC:
; Line 846
  0069e	68 00 00 00 00	 push	 OFFSET $SG151672
  006a3	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  006a6	50		 push	 eax
  006a7	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  006ac	83 c4 08	 add	 esp, 8
  006af	0f b6 c8	 movzx	 ecx, al
  006b2	85 c9		 test	 ecx, ecx
  006b4	74 56		 je	 SHORT $LN11@DXUTParseC
; Line 848
  006b6	68 04 01 00 00	 push	 260			; 00000104H
  006bb	8d 95 e4 fd ff
	ff		 lea	 edx, DWORD PTR _strFlag$[ebp]
  006c1	52		 push	 edx
  006c2	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  006c5	50		 push	 eax
  006c6	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  006cb	83 c4 0c	 add	 esp, 12			; 0000000cH
  006ce	0f b6 c8	 movzx	 ecx, al
  006d1	85 c9		 test	 ecx, ecx
  006d3	74 37		 je	 SHORT $LN11@DXUTParseC
; Line 850
  006d5	8b f4		 mov	 esi, esp
  006d7	8d 95 e4 fd ff
	ff		 lea	 edx, DWORD PTR _strFlag$[ebp]
  006dd	52		 push	 edx
  006de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  006e4	83 c4 04	 add	 esp, 4
  006e7	3b f4		 cmp	 esi, esp
  006e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006ee	89 85 ac fd ff
	ff		 mov	 DWORD PTR _nY$4[ebp], eax
; Line 851
  006f4	8b 85 ac fd ff
	ff		 mov	 eax, DWORD PTR _nY$4[ebp]
  006fa	50		 push	 eax
  006fb	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00700	8b c8		 mov	 ecx, eax
  00702	e8 00 00 00 00	 call	 ?SetOverrideStartY@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideStartY
; Line 852
  00707	e9 65 f9 ff ff	 jmp	 $LN50@DXUTParseC
$LN11@DXUTParseC:
; Line 856
  0070c	68 00 00 00 00	 push	 OFFSET $SG151676
  00711	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  00714	51		 push	 ecx
  00715	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  0071a	83 c4 08	 add	 esp, 8
  0071d	0f b6 d0	 movzx	 edx, al
  00720	85 d2		 test	 edx, edx
  00722	0f 84 94 00 00
	00		 je	 $LN10@DXUTParseC
; Line 859
  00728	68 04 01 00 00	 push	 260			; 00000104H
  0072d	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  00733	50		 push	 eax
  00734	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  00737	51		 push	 ecx
  00738	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  0073d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00740	0f b6 d0	 movzx	 edx, al
  00743	85 d2		 test	 edx, edx
  00745	74 23		 je	 SHORT $LN9@DXUTParseC
; Line 860
  00747	8b f4		 mov	 esi, esp
  00749	6a 00		 push	 0
  0074b	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  00751	50		 push	 eax
  00752	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcstod
  00758	83 c4 08	 add	 esp, 8
  0075b	3b f4		 cmp	 esi, esp
  0075d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00762	d9 9d a8 fd ff
	ff		 fstp	 DWORD PTR _fTimePerFrame$3[ebp]
; Line 861
  00768	eb 10		 jmp	 SHORT $LN8@DXUTParseC
$LN9@DXUTParseC:
; Line 862
  0076a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d086595
  00772	f3 0f 11 85 a8
	fd ff ff	 movss	 DWORD PTR _fTimePerFrame$3[ebp], xmm0
$LN8@DXUTParseC:
; Line 863
  0077a	6a 01		 push	 1
  0077c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00781	8b c8		 mov	 ecx, eax
  00783	e8 00 00 00 00	 call	 ?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideConstantFrameTime
; Line 864
  00788	51		 push	 ecx
  00789	f3 0f 10 85 a8
	fd ff ff	 movss	 xmm0, DWORD PTR _fTimePerFrame$3[ebp]
  00791	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00796	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0079b	8b c8		 mov	 ecx, eax
  0079d	e8 00 00 00 00	 call	 ?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z ; DXUTState::SetOverrideConstantTimePerFrame
; Line 865
  007a2	51		 push	 ecx
  007a3	f3 0f 10 85 a8
	fd ff ff	 movss	 xmm0, DWORD PTR _fTimePerFrame$3[ebp]
  007ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b0	6a 01		 push	 1
  007b2	e8 00 00 00 00	 call	 ?DXUTSetConstantFrameTime@@YGX_NM@Z ; DXUTSetConstantFrameTime
; Line 866
  007b7	e9 b5 f8 ff ff	 jmp	 $LN50@DXUTParseC
$LN10@DXUTParseC:
; Line 869
  007bc	68 00 00 00 00	 push	 OFFSET $SG151682
  007c1	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  007c4	51		 push	 ecx
  007c5	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  007ca	83 c4 08	 add	 esp, 8
  007cd	0f b6 d0	 movzx	 edx, al
  007d0	85 d2		 test	 edx, edx
  007d2	74 56		 je	 SHORT $LN6@DXUTParseC
; Line 871
  007d4	68 04 01 00 00	 push	 260			; 00000104H
  007d9	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  007df	50		 push	 eax
  007e0	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  007e3	51		 push	 ecx
  007e4	e8 00 00 00 00	 call	 ?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ; DXUTGetCmdParam
  007e9	83 c4 0c	 add	 esp, 12			; 0000000cH
  007ec	0f b6 d0	 movzx	 edx, al
  007ef	85 d2		 test	 edx, edx
  007f1	74 37		 je	 SHORT $LN6@DXUTParseC
; Line 873
  007f3	8b f4		 mov	 esi, esp
  007f5	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  007fb	50		 push	 eax
  007fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wtoi
  00802	83 c4 04	 add	 esp, 4
  00805	3b f4		 cmp	 esi, esp
  00807	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0080c	89 85 a4 fd ff
	ff		 mov	 DWORD PTR _nFrame$2[ebp], eax
; Line 874
  00812	8b 8d a4 fd ff
	ff		 mov	 ecx, DWORD PTR _nFrame$2[ebp]
  00818	51		 push	 ecx
  00819	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0081e	8b c8		 mov	 ecx, eax
  00820	e8 00 00 00 00	 call	 ?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideQuitAfterFrame
; Line 875
  00825	e9 47 f8 ff ff	 jmp	 $LN50@DXUTParseC
$LN6@DXUTParseC:
; Line 879
  0082a	68 00 00 00 00	 push	 OFFSET $SG151686
  0082f	8d 55 f4	 lea	 edx, DWORD PTR _strCmdLine$[ebp]
  00832	52		 push	 edx
  00833	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  00838	83 c4 08	 add	 esp, 8
  0083b	0f b6 c0	 movzx	 eax, al
  0083e	85 c0		 test	 eax, eax
  00840	74 13		 je	 SHORT $LN5@DXUTParseC
; Line 881
  00842	6a 00		 push	 0
  00844	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00849	8b c8		 mov	 ecx, eax
  0084b	e8 00 00 00 00	 call	 ?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z ; DXUTState::SetShowMsgBoxOnError
; Line 882
  00850	e9 1c f8 ff ff	 jmp	 $LN50@DXUTParseC
$LN5@DXUTParseC:
; Line 885
  00855	68 00 00 00 00	 push	 OFFSET $SG151688
  0085a	8d 4d f4	 lea	 ecx, DWORD PTR _strCmdLine$[ebp]
  0085d	51		 push	 ecx
  0085e	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  00863	83 c4 08	 add	 esp, 8
  00866	0f b6 d0	 movzx	 edx, al
  00869	85 d2		 test	 edx, edx
  0086b	74 13		 je	 SHORT $LN4@DXUTParseC
; Line 887
  0086d	6a 01		 push	 1
  0086f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00874	8b c8		 mov	 ecx, eax
  00876	e8 00 00 00 00	 call	 ?SetNoStats@DXUTState@@QAEX_N@Z ; DXUTState::SetNoStats
; Line 888
  0087b	e9 f1 f7 ff ff	 jmp	 $LN50@DXUTParseC
$LN4@DXUTParseC:
; Line 891
  00880	68 00 00 00 00	 push	 OFFSET $SG151690
  00885	8d 45 f4	 lea	 eax, DWORD PTR _strCmdLine$[ebp]
  00888	50		 push	 eax
  00889	e8 00 00 00 00	 call	 ?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ; DXUTIsNextArg
  0088e	83 c4 08	 add	 esp, 8
  00891	0f b6 c8	 movzx	 ecx, al
  00894	85 c9		 test	 ecx, ecx
  00896	74 13		 je	 SHORT $LN3@DXUTParseC
; Line 893
  00898	6a 01		 push	 1
  0089a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0089f	8b c8		 mov	 ecx, eax
  008a1	e8 00 00 00 00	 call	 ?SetAutomation@DXUTState@@QAEX_N@Z ; DXUTState::SetAutomation
; Line 894
  008a6	e9 c6 f7 ff ff	 jmp	 $LN50@DXUTParseC
$LN3@DXUTParseC:
; Line 899
  008ab	8b f4		 mov	 esi, esp
  008ad	8b 55 f4	 mov	 edx, DWORD PTR _strCmdLine$[ebp]
  008b0	52		 push	 edx
  008b1	68 04 01 00 00	 push	 260			; 00000104H
  008b6	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  008bc	50		 push	 eax
  008bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  008c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  008c6	3b f4		 cmp	 esi, esp
  008c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 900
  008cd	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  008d3	89 8d a0 fd ff
	ff		 mov	 DWORD PTR _strSpace$1[ebp], ecx
$LN2@DXUTParseC:
; Line 901
  008d9	8b 95 a0 fd ff
	ff		 mov	 edx, DWORD PTR _strSpace$1[ebp]
  008df	0f b7 02	 movzx	 eax, WORD PTR [edx]
  008e2	85 c0		 test	 eax, eax
  008e4	74 1f		 je	 SHORT $LN1@DXUTParseC
  008e6	8b 8d a0 fd ff
	ff		 mov	 ecx, DWORD PTR _strSpace$1[ebp]
  008ec	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  008ef	83 fa 20	 cmp	 edx, 32			; 00000020H
  008f2	7e 11		 jle	 SHORT $LN1@DXUTParseC
; Line 902
  008f4	8b 85 a0 fd ff
	ff		 mov	 eax, DWORD PTR _strSpace$1[ebp]
  008fa	83 c0 02	 add	 eax, 2
  008fd	89 85 a0 fd ff
	ff		 mov	 DWORD PTR _strSpace$1[ebp], eax
  00903	eb d4		 jmp	 SHORT $LN2@DXUTParseC
$LN1@DXUTParseC:
; Line 903
  00905	33 c9		 xor	 ecx, ecx
  00907	8b 95 a0 fd ff
	ff		 mov	 edx, DWORD PTR _strSpace$1[ebp]
  0090d	66 89 0a	 mov	 WORD PTR [edx], cx
; Line 905
  00910	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _strFlag$[ebp]
  00916	50		 push	 eax
  00917	68 00 00 00 00	 push	 OFFSET $SG151695
  0091c	e8 00 00 00 00	 call	 ?DXUTOutputDebugStringW@@YAXPB_WZZ ; DXUTOutputDebugStringW
  00921	83 c4 08	 add	 esp, 8
; Line 906
  00924	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _strFlag$[ebp]
  0092a	89 8d 9c fd ff
	ff		 mov	 DWORD PTR tv641[ebp], ecx
  00930	8b 95 9c fd ff
	ff		 mov	 edx, DWORD PTR tv641[ebp]
  00936	83 c2 02	 add	 edx, 2
  00939	89 95 98 fd ff
	ff		 mov	 DWORD PTR tv644[ebp], edx
$LL55@DXUTParseC:
  0093f	8b 85 9c fd ff
	ff		 mov	 eax, DWORD PTR tv641[ebp]
  00945	66 8b 08	 mov	 cx, WORD PTR [eax]
  00948	66 89 8d 96 fd
	ff ff		 mov	 WORD PTR tv647[ebp], cx
  0094f	83 85 9c fd ff
	ff 02		 add	 DWORD PTR tv641[ebp], 2
  00956	66 83 bd 96 fd
	ff ff 00	 cmp	 WORD PTR tv647[ebp], 0
  0095e	75 df		 jne	 SHORT $LL55@DXUTParseC
  00960	8b 95 9c fd ff
	ff		 mov	 edx, DWORD PTR tv641[ebp]
  00966	2b 95 98 fd ff
	ff		 sub	 edx, DWORD PTR tv644[ebp]
  0096c	d1 fa		 sar	 edx, 1
  0096e	89 95 90 fd ff
	ff		 mov	 DWORD PTR tv428[ebp], edx
  00974	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR tv428[ebp]
  0097a	8b 4d f4	 mov	 ecx, DWORD PTR _strCmdLine$[ebp]
  0097d	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00980	89 55 f4	 mov	 DWORD PTR _strCmdLine$[ebp], edx
; Line 907
  00983	e9 e9 f6 ff ff	 jmp	 $LN50@DXUTParseC
$LN49@DXUTParseC:
; Line 909
  00988	8b f4		 mov	 esi, esp
  0098a	8b 85 d0 fd ff
	ff		 mov	 eax, DWORD PTR _pstrArgList$[ebp]
  00990	50		 push	 eax
  00991	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LocalFree@4
  00997	3b f4		 cmp	 esi, esp
  00999	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 910
  0099e	52		 push	 edx
  0099f	8b cd		 mov	 ecx, ebp
  009a1	50		 push	 eax
  009a2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN60@DXUTParseC
  009a8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  009ad	58		 pop	 eax
  009ae	5a		 pop	 edx
  009af	5f		 pop	 edi
  009b0	5e		 pop	 esi
  009b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009b4	33 cd		 xor	 ecx, ebp
  009b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009bb	81 c4 70 02 00
	00		 add	 esp, 624		; 00000270H
  009c1	3b ec		 cmp	 ebp, esp
  009c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009c8	8b e5		 mov	 esp, ebp
  009ca	5d		 pop	 ebp
  009cb	c3		 ret	 0
$LN60@DXUTParseC:
  009cc	03 00 00 00	 DD	 3
  009d0	00 00 00 00	 DD	 $LN59@DXUTParseC
$LN59@DXUTParseC:
  009d4	f4 ff ff ff	 DD	 -12			; fffffff4H
  009d8	04 00 00 00	 DD	 4
  009dc	00 00 00 00	 DD	 $LN56@DXUTParseC
  009e0	e4 fd ff ff	 DD	 -540			; fffffde4H
  009e4	08 02 00 00	 DD	 520			; 00000208H
  009e8	00 00 00 00	 DD	 $LN57@DXUTParseC
  009ec	d8 fd ff ff	 DD	 -552			; fffffdd8H
  009f0	04 00 00 00	 DD	 4
  009f4	00 00 00 00	 DD	 $LN58@DXUTParseC
$LN58@DXUTParseC:
  009f8	6e		 DB	 110			; 0000006eH
  009f9	4e		 DB	 78			; 0000004eH
  009fa	75		 DB	 117			; 00000075H
  009fb	6d		 DB	 109			; 0000006dH
  009fc	41		 DB	 65			; 00000041H
  009fd	72		 DB	 114			; 00000072H
  009fe	67		 DB	 103			; 00000067H
  009ff	73		 DB	 115			; 00000073H
  00a00	00		 DB	 0
$LN57@DXUTParseC:
  00a01	73		 DB	 115			; 00000073H
  00a02	74		 DB	 116			; 00000074H
  00a03	72		 DB	 114			; 00000072H
  00a04	46		 DB	 70			; 00000046H
  00a05	6c		 DB	 108			; 0000006cH
  00a06	61		 DB	 97			; 00000061H
  00a07	67		 DB	 103			; 00000067H
  00a08	00		 DB	 0
$LN56@DXUTParseC:
  00a09	73		 DB	 115			; 00000073H
  00a0a	74		 DB	 116			; 00000074H
  00a0b	72		 DB	 114			; 00000072H
  00a0c	43		 DB	 67			; 00000043H
  00a0d	6d		 DB	 109			; 0000006dH
  00a0e	64		 DB	 100			; 00000064H
  00a0f	4c		 DB	 76			; 0000004cH
  00a10	69		 DB	 105			; 00000069H
  00a11	6e		 DB	 110			; 0000006eH
  00a12	65		 DB	 101			; 00000065H
  00a13	00		 DB	 0
?DXUTParseCommandLine@@YAXPA_W_N@Z ENDP			; DXUTParseCommandLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ
text$yd	SEGMENT
??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ PROC ; `GetDXUTState'::`2'::`dynamic atexit destructor for 'memory'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A
  00008	e8 00 00 00 00	 call	 ??1DXUTMemoryHelper@@QAE@XZ ; DXUTMemoryHelper::~DXUTMemoryHelper
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ ENDP ; `GetDXUTState'::`2'::`dynamic atexit destructor for 'memory''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?GetDXUTState@@YAAAVDXUTState@@XZ PROC			; GetDXUTState
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetDXUTState@@YAAAVDXUTState@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 483
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
  00028	83 e0 01	 and	 eax, 1
  0002b	75 34		 jne	 SHORT $LN1@GetDXUTSta
  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
  00033	83 c9 01	 or	 ecx, 1
  00036	89 0d 00 00 00
	00		 mov	 DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA, ecx
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	b9 00 00 00 00	 mov	 ecx, OFFSET ?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A
  00048	e8 00 00 00 00	 call	 ??0DXUTMemoryHelper@@QAE@XZ ; DXUTMemoryHelper::DXUTMemoryHelper
  0004d	68 00 00 00 00	 push	 OFFSET ??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ ; `GetDXUTState'::`2'::`dynamic atexit destructor for 'memory''
  00052	e8 00 00 00 00	 call	 _atexit
  00057	83 c4 04	 add	 esp, 4
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
$LN1@GetDXUTSta:
; Line 484
  00061	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
  00068	75 21		 jne	 SHORT $LN4@GetDXUTSta
  0006a	8b f4		 mov	 esi, esp
  0006c	68 e4 01 00 00	 push	 484			; 000001e4H
  00071	68 00 00 00 00	 push	 OFFSET $SG151355
  00076	68 00 00 00 00	 push	 OFFSET $SG151356
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH
  00084	3b f4		 cmp	 esi, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@GetDXUTSta:
; Line 486
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A ; g_pDXUTState
; Line 487
  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	5e		 pop	 esi
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetDXUTState@@YAAAVDXUTState@@XZ$0:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
  00005	83 e0 fe	 and	 eax, -2			; fffffffeH
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA, eax
  0000d	c3		 ret	 0
__ehhandler$?GetDXUTState@@YAAAVDXUTState@@XZ:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetDXUTState@@YAAAVDXUTState@@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetDXUTState@@YAAAVDXUTState@@XZ ENDP			; GetDXUTState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DXUTMemoryHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DXUTMemoryHelper@@QAE@XZ PROC			; DXUTMemoryHelper::~DXUTMemoryHelper, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 476
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	e8 00 00 00 00	 call	 ?DXUTDestroyState@@YGXXZ ; DXUTDestroyState
  00013	83 c4 04	 add	 esp, 4
  00016	3b ec		 cmp	 ebp, esp
  00018	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??1DXUTMemoryHelper@@QAE@XZ ENDP			; DXUTMemoryHelper::~DXUTMemoryHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTMemoryHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTMemoryHelper@@QAE@XZ PROC			; DXUTMemoryHelper::DXUTMemoryHelper, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 475
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	e8 00 00 00 00	 call	 ?DXUTCreateState@@YGJXZ	; DXUTCreateState
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??0DXUTMemoryHelper@@QAE@XZ ENDP			; DXUTMemoryHelper::DXUTMemoryHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 77		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	8b c1		 mov	 eax, ecx
  00057	99		 cdq
  00058	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0005d	f7 f9		 idiv	 ecx
  0005f	50		 push	 eax
  00060	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00063	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00066	50		 push	 eax
  00067	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0006a	51		 push	 ecx
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
; Line 1629
  0007a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00098	5e		 pop	 esi
  00099	83 c4 08	 add	 esp, 8
  0009c	3b ec		 cmp	 ebp, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 45		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000ea	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  000ed	99		 cdq
  000ee	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000f3	f7 f9		 idiv	 ecx
  000f5	50		 push	 eax
  000f6	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000f9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000fc	50		 push	 eax
  000fd	8d 4d e1	 lea	 ecx, DWORD PTR $T2[ebp]
  00100	51		 push	 ecx
  00101	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
  00109	8b c8		 mov	 ecx, eax
  0010b	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
$LN1@Reallocate:
; Line 1605
  00110	8b f4		 mov	 esi, esp
  00112	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0011b	3b f4		 cmp	 esi, esp
  0011d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  00122	6b 55 08 18	 imul	 edx, DWORD PTR __Count$[ebp], 24
  00126	03 55 e8	 add	 edx, DWORD PTR __Ptr$[ebp]
  00129	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0012c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012f	6b 4d e4 18	 imul	 ecx, DWORD PTR __Size$[ebp], 24
  00133	03 4d e8	 add	 ecx, DWORD PTR __Ptr$[ebp]
  00136	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00139	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1608
  0013c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013f	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00142	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00145	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00148	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014f	59		 pop	 ecx
  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	83 c4 20	 add	 esp, 32			; 00000020H
  00156	3b ec		 cmp	 ebp, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	8b e5		 mov	 esp, ebp
  0015f	5d		 pop	 ebp
  00160	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ; std::addressof<DXUT_TIMER const >
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	0f 84 81 00 00
	00		 je	 $LN4@push_back
; Line 1246
  0003e	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ; std::addressof<DXUT_TIMER const >
  00047	83 c4 04	 add	 esp, 4
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00050	99		 cdq
  00051	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00056	f7 f9		 idiv	 ecx
  00058	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  0005b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00064	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00067	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00069	6a 01		 push	 1
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
$LN3@push_back:
; Line 1249
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00080	52		 push	 edx
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
; Line 1251
  00089	6b 45 f8 18	 imul	 eax, DWORD PTR __Idx$3[ebp], 24
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00093	50		 push	 eax
  00094	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00097	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009a	50		 push	 eax
  0009b	8d 4d f7	 lea	 ecx, DWORD PTR $T2[ebp]
  0009e	51		 push	 ecx
  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
; Line 1252
  000ae	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000b4	83 c0 18	 add	 eax, 24			; 00000018H
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1254
  000bd	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000c8	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  000cb	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000cd	6a 01		 push	 1
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
$LN1@push_back:
; Line 1258
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000da	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000dd	50		 push	 eax
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000e4	52		 push	 edx
  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
; Line 1260
  000ed	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000f7	52		 push	 edx
  000f8	8d 45 f6	 lea	 eax, DWORD PTR $T1[ebp]
  000fb	50		 push	 eax
  000fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
; Line 1261
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00111	83 c2 18	 add	 edx, 24			; 00000018H
  00114	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00117	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 1263
  0011a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011d	3b ec		 cmp	 ebp, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 04 00	 ret	 4
?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	99		 cdq
  0001b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00020	f7 f9		 idiv	 ecx
; Line 1149
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	99		 cdq
  0001b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00020	f7 f9		 idiv	 ecx
; Line 1016
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	99		 cdq
  0001b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00020	f7 f9		 idiv	 ecx
; Line 1011
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ ; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::~_Vector_val<std::_Simple_types<DXUT_TIMER> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::~_Vector_val<std::_Simple_types<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ ; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ ; std::allocator<DXUT_TIMER>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ PROC	; std::allocator<DXUT_TIMER>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ ENDP	; std::allocator<DXUT_TIMER>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z PROC ; std::allocator<DXUT_TIMER>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 18		 push	 24			; 00000018H
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 30		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00038	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  0003b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003d	89 02		 mov	 DWORD PTR [edx], eax
  0003f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00042	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00045	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00048	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0004b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0004e	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  00051	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00054	89 42 10	 mov	 DWORD PTR [edx+16], eax
  00057	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0005a	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
  0005d	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00060	89 55 f4	 mov	 DWORD PTR tv69[ebp], edx
  00063	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00065	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 08 00	 ret	 8
?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z ENDP ; std::allocator<DXUT_TIMER>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z PROC ; std::allocator<DXUT_TIMER>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z ; std::_Allocate<DXUT_TIMER>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z ENDP ; std::allocator<DXUT_TIMER>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z PROC ; std::allocator<DXUT_TIMER>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z ENDP ; std::allocator<DXUT_TIMER>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ PROC		; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ ENDP		; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GDXUTState@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDXUTState@@QAEPAXI@Z PROC				; DXUTState::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1DXUTState@@QAE@XZ	; DXUTState::~DXUTState
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GDXUTState@@QAEPAXI@Z ENDP				; DXUTState::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowTitle@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowTitle@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetWindowTitle, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 447
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 6c 0c 00 00	 add	 eax, 3180		; 00000c6cH
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowT
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetWindowT:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetWindowT
$LN5@GetWindowT:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetWindowT
$LN4@GetWindowT:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetWindowTitle@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetWindowTitle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceStats@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetDeviceStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 446
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 6c 0a 00 00	 add	 eax, 2668		; 00000a6cH
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDeviceS
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetDeviceS:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDeviceS
$LN5@GetDeviceS:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDeviceS
$LN4@GetDeviceS:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDeviceStats@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetDeviceStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFrameStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFrameStats@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetFrameStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 445
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 6c 08 00 00	 add	 eax, 2156		; 0000086cH
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetFrameSt
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetFrameSt:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetFrameSt
$LN5@GetFrameSt:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetFrameSt
$LN4@GetFrameSt:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetFrameStats@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFPSStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFPSStats@DXUTState@@QAEPA_WXZ PROC			; DXUTState::GetFPSStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 ec 07 00 00	 add	 eax, 2028		; 000007ecH
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetFPSStat
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetFPSStat:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetFPSStat
$LN5@GetFPSStat:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetFPSStat
$LN4@GetFPSStat:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetFPSStats@DXUTState@@QAEPA_WXZ ENDP			; DXUTState::GetFPSStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStaticFrameStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetStaticFrameStats@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetStaticFrameStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 443
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 ec 05 00 00	 add	 eax, 1516		; 000005ecH
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetStaticF
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetStaticF:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetStaticF
$LN5@GetStaticF:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetStaticF
$LN4@GetStaticF:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetStaticFrameStats@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetStaticFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMouseButtons@DXUTState@@QAEPA_NXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMouseButtons@DXUTState@@QAEPA_NXZ PROC		; DXUTState::GetMouseButtons, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 442
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 e0 05 00 00	 add	 eax, 1504		; 000005e0H
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMouseBu
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetMouseBu:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetMouseBu
$LN5@GetMouseBu:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetMouseBu
$LN4@GetMouseBu:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetMouseButtons@DXUTState@@QAEPA_NXZ ENDP		; DXUTState::GetMouseButtons
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetLastKeys@DXUTState@@QAEPA_NXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetLastKeys@DXUTState@@QAEPA_NXZ PROC			; DXUTState::GetLastKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 441
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 e0 04 00 00	 add	 eax, 1248		; 000004e0H
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetLastKey
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetLastKey:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetLastKey
$LN5@GetLastKey:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetLastKey
$LN4@GetLastKey:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetLastKeys@DXUTState@@QAEPA_NXZ ENDP			; DXUTState::GetLastKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeys@DXUTState@@QAEPA_NXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeys@DXUTState@@QAEPA_NXZ PROC			; DXUTState::GetKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 440
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 e0 03 00 00	 add	 eax, 992		; 000003e0H
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetKeys
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetKeys:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetKeys
$LN5@GetKeys:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetKeys
$LN4@GetKeys:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetKeys@DXUTState@@QAEPA_NXZ ENDP			; DXUTState::GetKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ PROC ; DXUTState::GetTimerList, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 e8 05 00
	00		 mov	 ecx, DWORD PTR [eax+1512]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetTimerLi
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetTimerLi:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetTimerLi
$LN5@GetTimerLi:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetTimerLi
$LN4@GetTimerLi:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ENDP ; DXUTState::GetTimerList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z PROC ; DXUTState::SetTimerList, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 e8 05 00
	00		 mov	 DWORD PTR [eax+1512], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetTimerLi
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetTimerLi:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetTimerLi
$LN5@SetTimerLi:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetTimerLi
$LN4@SetTimerLi:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z ENDP ; DXUTState::SetTimerList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11FrameRenderFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 dc 03 00
	00		 mov	 ecx, DWORD PTR [eax+988]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Fr
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11Fr:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11Fr
$LN5@GetD3D11Fr:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11Fr
$LN4@GetD3D11Fr:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11FrameRenderFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11FrameRenderFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 dc 03 00
	00		 mov	 DWORD PTR [eax+988], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Fr
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11Fr:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11Fr
$LN5@SetD3D11Fr:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11Fr
$LN4@SetD3D11Fr:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11FrameRenderFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 436
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 d4 03 00
	00		 mov	 ecx, DWORD PTR [eax+980]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Sw
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11Sw:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 436
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 d4 03 00
	00		 mov	 DWORD PTR [eax+980], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Sw
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11Sw:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11SwapChainResizedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 435
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 d0 03 00
	00		 mov	 ecx, DWORD PTR [eax+976]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Sw
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11Sw:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11SwapChainResizedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 435
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 d0 03 00
	00		 mov	 DWORD PTR [eax+976], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Sw
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11Sw:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11SwapChainResizedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 434
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 d8 03 00
	00		 mov	 ecx, DWORD PTR [eax+984]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11De:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 434
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 d8 03 00
	00		 mov	 DWORD PTR [eax+984], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11DeviceCreatedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 433
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 cc 03 00
	00		 mov	 ecx, DWORD PTR [eax+972]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11De:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11DeviceCreatedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11DeviceCreatedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 433
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 cc 03 00
	00		 mov	 DWORD PTR [eax+972], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11DeviceCreatedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 432
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 c8 03 00
	00		 mov	 ecx, DWORD PTR [eax+968]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetIsD3D11
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetIsD3D11:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetIsD3D11
$LN5@GetIsD3D11:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetIsD3D11
$LN4@GetIsD3D11:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 432
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 c8 03 00
	00		 mov	 DWORD PTR [eax+968], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetIsD3D11
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetIsD3D11:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetIsD3D11
$LN5@SetIsD3D11:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetIsD3D11
$LN4@SetIsD3D11:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetWindowMsgFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 c4 03 00
	00		 mov	 ecx, DWORD PTR [eax+964]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowM
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetWindowM:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetWindowM
$LN5@GetWindowM:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetWindowM
$LN4@GetWindowM:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetWindowMsgFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetWindowMsgFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 c4 03 00
	00		 mov	 DWORD PTR [eax+964], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetWindowM
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetWindowM:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetWindowM
$LN5@SetWindowM:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetWindowM
$LN4@SetWindowM:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetWindowMsgFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetMouseFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 429
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 c0 03 00
	00		 mov	 ecx, DWORD PTR [eax+960]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMouseFu
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetMouseFu:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetMouseFu
$LN5@GetMouseFu:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetMouseFu
$LN4@GetMouseFu:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetMouseFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetMouseFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 429
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 c0 03 00
	00		 mov	 DWORD PTR [eax+960], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetMouseFu
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetMouseFu:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetMouseFu
$LN5@SetMouseFu:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetMouseFu
$LN4@SetMouseFu:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetMouseFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetKeyboardFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 428
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 bc 03 00
	00		 mov	 ecx, DWORD PTR [eax+956]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetKeyboar
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetKeyboar:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetKeyboar
$LN5@GetKeyboar:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetKeyboar
$LN4@GetKeyboar:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetKeyboardFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetKeyboardFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 428
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 bc 03 00
	00		 mov	 DWORD PTR [eax+956], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetKeyboar
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetKeyboar:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetKeyboar
$LN5@SetKeyboar:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetKeyboar
$LN4@SetKeyboar:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetKeyboardFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetFrameMoveFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 427
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 b8 03 00
	00		 mov	 ecx, DWORD PTR [eax+952]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetFrameMo
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetFrameMo:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetFrameMo
$LN5@GetFrameMo:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetFrameMo
$LN4@GetFrameMo:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetFrameMoveFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetFrameMoveFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 427
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 b8 03 00
	00		 mov	 DWORD PTR [eax+952], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetFrameMo
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetFrameMo:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetFrameMo
$LN5@SetFrameMo:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetFrameMo
$LN4@SetFrameMo:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetFrameMoveFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetDeviceRemovedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 426
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 b4 03 00
	00		 mov	 ecx, DWORD PTR [eax+948]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDeviceR
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDeviceR:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDeviceR
$LN5@GetDeviceR:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDeviceR
$LN4@GetDeviceR:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetDeviceRemovedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetDeviceRemovedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 426
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 b4 03 00
	00		 mov	 DWORD PTR [eax+948], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDeviceR
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDeviceR:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDeviceR
$LN5@SetDeviceR:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDeviceR
$LN4@SetDeviceR:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetDeviceRemovedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetModifyDeviceSettingsFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 425
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 b0 03 00
	00		 mov	 ecx, DWORD PTR [eax+944]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetModifyD
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetModifyD:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetModifyD
$LN5@GetModifyD:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetModifyD
$LN4@GetModifyD:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetModifyDeviceSettingsFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetModifyDeviceSettingsFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 425
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 b0 03 00
	00		 mov	 DWORD PTR [eax+944], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetModifyD
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetModifyD:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetModifyD
$LN5@SetModifyD:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetModifyD
$LN4@SetModifyD:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetModifyDeviceSettingsFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ PROC ; DXUTState::GetD3D11FrameRenderFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 423
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 ac 03 00
	00		 mov	 ecx, DWORD PTR [eax+940]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Fr
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11Fr:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11Fr
$LN5@GetD3D11Fr:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11Fr
$LN4@GetD3D11Fr:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ENDP ; DXUTState::GetD3D11FrameRenderFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z PROC ; DXUTState::SetD3D11FrameRenderFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 423
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 ac 03 00
	00		 mov	 DWORD PTR [eax+940], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Fr
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11Fr:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11Fr
$LN5@SetD3D11Fr:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11Fr
$LN4@SetD3D11Fr:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z ENDP ; DXUTState::SetD3D11FrameRenderFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ PROC ; DXUTState::GetD3D11DeviceDestroyedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 422
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 a8 03 00
	00		 mov	 ecx, DWORD PTR [eax+936]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11De:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ ENDP ; DXUTState::GetD3D11DeviceDestroyedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z PROC ; DXUTState::SetD3D11DeviceDestroyedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 422
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 a8 03 00
	00		 mov	 DWORD PTR [eax+936], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z ENDP ; DXUTState::SetD3D11DeviceDestroyedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ PROC ; DXUTState::GetD3D11SwapChainReleasingFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 421
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 a4 03 00
	00		 mov	 ecx, DWORD PTR [eax+932]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Sw
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11Sw:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ENDP ; DXUTState::GetD3D11SwapChainReleasingFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z PROC ; DXUTState::SetD3D11SwapChainReleasingFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 421
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 a4 03 00
	00		 mov	 DWORD PTR [eax+932], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Sw
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11Sw:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z ENDP ; DXUTState::SetD3D11SwapChainReleasingFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ PROC ; DXUTState::GetD3D11SwapChainResizedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 420
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 a0 03 00
	00		 mov	 ecx, DWORD PTR [eax+928]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Sw
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11Sw:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ENDP ; DXUTState::GetD3D11SwapChainResizedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z PROC ; DXUTState::SetD3D11SwapChainResizedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 420
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 a0 03 00
	00		 mov	 DWORD PTR [eax+928], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Sw
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11Sw:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ENDP ; DXUTState::SetD3D11SwapChainResizedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ PROC ; DXUTState::GetD3D11DeviceCreatedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 419
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 9c 03 00
	00		 mov	 ecx, DWORD PTR [eax+924]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetD3D11De:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ENDP ; DXUTState::GetD3D11DeviceCreatedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z PROC ; DXUTState::SetD3D11DeviceCreatedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 419
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 9c 03 00
	00		 mov	 DWORD PTR [eax+924], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ENDP ; DXUTState::SetD3D11DeviceCreatedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ PROC ; DXUTState::GetIsD3D11DeviceAcceptableFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 418
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 98 03 00
	00		 mov	 ecx, DWORD PTR [eax+920]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetIsD3D11
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetIsD3D11:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetIsD3D11
$LN5@GetIsD3D11:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetIsD3D11
$LN4@GetIsD3D11:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ ENDP ; DXUTState::GetIsD3D11DeviceAcceptableFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z PROC ; DXUTState::SetIsD3D11DeviceAcceptableFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 418
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 98 03 00
	00		 mov	 DWORD PTR [eax+920], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetIsD3D11
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetIsD3D11:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetIsD3D11
$LN5@SetIsD3D11:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetIsD3D11
$LN4@SetIsD3D11:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z ENDP ; DXUTState::SetIsD3D11DeviceAcceptableFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ PROC ; DXUTState::GetWindowMsgFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 416
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 94 03 00
	00		 mov	 ecx, DWORD PTR [eax+916]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowM
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetWindowM:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetWindowM
$LN5@GetWindowM:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetWindowM
$LN4@GetWindowM:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ ENDP ; DXUTState::GetWindowMsgFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z PROC ; DXUTState::SetWindowMsgFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 416
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 94 03 00
	00		 mov	 DWORD PTR [eax+916], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetWindowM
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetWindowM:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetWindowM
$LN5@SetWindowM:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetWindowM
$LN4@SetWindowM:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z ENDP ; DXUTState::SetWindowMsgFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ PROC	; DXUTState::GetMouseFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 415
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 90 03 00
	00		 mov	 ecx, DWORD PTR [eax+912]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMouseFu
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetMouseFu:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetMouseFu
$LN5@GetMouseFu:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetMouseFu
$LN4@GetMouseFu:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ ENDP	; DXUTState::GetMouseFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z PROC	; DXUTState::SetMouseFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 415
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 90 03 00
	00		 mov	 DWORD PTR [eax+912], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetMouseFu
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetMouseFu:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetMouseFu
$LN5@SetMouseFu:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetMouseFu
$LN4@SetMouseFu:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z ENDP	; DXUTState::SetMouseFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ PROC	; DXUTState::GetKeyboardFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 414
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 8c 03 00
	00		 mov	 ecx, DWORD PTR [eax+908]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetKeyboar
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetKeyboar:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetKeyboar
$LN5@GetKeyboar:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetKeyboar
$LN4@GetKeyboar:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ ENDP	; DXUTState::GetKeyboardFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z PROC	; DXUTState::SetKeyboardFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 414
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 8c 03 00
	00		 mov	 DWORD PTR [eax+908], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetKeyboar
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetKeyboar:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetKeyboar
$LN5@SetKeyboar:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetKeyboar
$LN4@SetKeyboar:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z ENDP	; DXUTState::SetKeyboardFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ PROC	; DXUTState::GetFrameMoveFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 413
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 88 03 00
	00		 mov	 ecx, DWORD PTR [eax+904]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetFrameMo
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetFrameMo:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetFrameMo
$LN5@GetFrameMo:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetFrameMo
$LN4@GetFrameMo:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ ENDP	; DXUTState::GetFrameMoveFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z PROC	; DXUTState::SetFrameMoveFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 413
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 88 03 00
	00		 mov	 DWORD PTR [eax+904], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetFrameMo
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetFrameMo:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetFrameMo
$LN5@SetFrameMo:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetFrameMo
$LN4@SetFrameMo:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z ENDP	; DXUTState::SetFrameMoveFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ PROC	; DXUTState::GetDeviceRemovedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 412
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 84 03 00
	00		 mov	 ecx, DWORD PTR [eax+900]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDeviceR
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDeviceR:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDeviceR
$LN5@GetDeviceR:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDeviceR
$LN4@GetDeviceR:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ ENDP	; DXUTState::GetDeviceRemovedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z PROC	; DXUTState::SetDeviceRemovedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 412
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 84 03 00
	00		 mov	 DWORD PTR [eax+900], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDeviceR
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDeviceR:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDeviceR
$LN5@SetDeviceR:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDeviceR
$LN4@SetDeviceR:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z ENDP	; DXUTState::SetDeviceRemovedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ PROC ; DXUTState::GetModifyDeviceSettingsFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 411
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 80 03 00
	00		 mov	 ecx, DWORD PTR [eax+896]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetModifyD
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetModifyD:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetModifyD
$LN5@GetModifyD:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetModifyD
$LN4@GetModifyD:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ ENDP ; DXUTState::GetModifyDeviceSettingsFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z PROC ; DXUTState::SetModifyDeviceSettingsFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 411
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 80 03 00
	00		 mov	 DWORD PTR [eax+896], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetModifyD
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetModifyD:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetModifyD
$LN5@SetModifyD:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetModifyD
$LN4@SetModifyD:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z ENDP ; DXUTState::SetModifyDeviceSettingsFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ PROC	; DXUTState::GetIsInGammaCorrectMode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 409
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 7e 03 00
	00		 mov	 cl, BYTE PTR [eax+894]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetIsInGam
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetIsInGam:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetIsInGam
$LN5@GetIsInGam:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetIsInGam
$LN4@GetIsInGam:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetIsInGammaCorrectMode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 409
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 7e 03 00
	00		 mov	 BYTE PTR [eax+894], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetIsInGam
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetIsInGam:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetIsInGam
$LN5@SetIsInGam:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetIsInGam
$LN4@SetIsInGam:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetReleasingSwapChain@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetReleasingSwapChain@DXUTState@@QAE_NXZ PROC		; DXUTState::GetReleasingSwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 408
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 7d 03 00
	00		 mov	 cl, BYTE PTR [eax+893]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetReleasi
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetReleasi:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetReleasi
$LN5@GetReleasi:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetReleasi
$LN4@GetReleasi:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetReleasingSwapChain@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetReleasingSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetReleasingSwapChain@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetReleasingSwapChain@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetReleasingSwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 408
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 7d 03 00
	00		 mov	 BYTE PTR [eax+893], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetReleasi
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetReleasi:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetReleasi
$LN5@SetReleasi:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetReleasi
$LN4@SetReleasi:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetReleasingSwapChain@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetReleasingSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceVsync@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceVsync@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideForceVsync, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 407
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 78 03 00
	00		 mov	 ecx, DWORD PTR [eax+888]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideForceVsync@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideForceVsync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceVsync@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideForceVsync@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideForceVsync, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 407
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 78 03 00
	00		 mov	 DWORD PTR [eax+888], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideForceVsync@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideForceVsync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ PROC	; DXUTState::GetOverrideQuitAfterFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 406
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 74 03 00
	00		 mov	 ecx, DWORD PTR [eax+884]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ ENDP	; DXUTState::GetOverrideQuitAfterFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z PROC	; DXUTState::SetOverrideQuitAfterFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 406
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 74 03 00
	00		 mov	 DWORD PTR [eax+884], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z ENDP	; DXUTState::SetOverrideQuitAfterFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ PROC	; DXUTState::GetOverrideConstantTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	f3 0f 10 80 70
	03 00 00	 movss	 xmm0, DWORD PTR [eax+880]
  00030	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp], xmm0
  00035	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00038	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003d	d9 45 ec	 fld	 DWORD PTR $T1[ebp]
  00040	52		 push	 edx
  00041	8b cd		 mov	 ecx, ebp
  00043	50		 push	 eax
  00044	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  0004a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004f	58		 pop	 eax
  00050	5a		 pop	 edx
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
  0005f	90		 npad	 1
$LN6@GetOverrid:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00074	6c		 DB	 108			; 0000006cH
  00075	00		 DB	 0
?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ ENDP	; DXUTState::GetOverrideConstantTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z PROC ; DXUTState::SetOverrideConstantTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _t$[ebp]
  0002a	f3 0f 11 80 70
	03 00 00	 movss	 DWORD PTR [eax+880], xmm0
  00032	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00035	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
  0005b	90		 npad	 1
$LN6@SetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z ENDP ; DXUTState::SetOverrideConstantTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ PROC	; DXUTState::GetOverrideConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 404
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 6f 03 00
	00		 mov	 cl, BYTE PTR [eax+879]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetOverrideConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetOverrideConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 404
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 6f 03 00
	00		 mov	 BYTE PTR [eax+879], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetOverrideConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceWARP@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceWARP@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideForceWARP, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 403
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 6e 03 00
	00		 mov	 cl, BYTE PTR [eax+878]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideForceWARP@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideForceWARP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceWARP@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideForceWARP@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideForceWARP, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 403
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 6e 03 00
	00		 mov	 BYTE PTR [eax+878], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideForceWARP@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideForceWARP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceREF@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceREF@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideForceREF, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 402
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 6d 03 00
	00		 mov	 cl, BYTE PTR [eax+877]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideForceREF@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideForceREF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceREF@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideForceREF@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideForceREF, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 402
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 6d 03 00
	00		 mov	 BYTE PTR [eax+877], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideForceREF@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideForceREF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceHAL@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceHAL@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideForceHAL, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 401
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 6c 03 00
	00		 mov	 cl, BYTE PTR [eax+876]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideForceHAL@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideForceHAL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceHAL@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideForceHAL@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideForceHAL, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 401
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 6c 03 00
	00		 mov	 BYTE PTR [eax+876], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideForceHAL@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideForceHAL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideHeight@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideHeight@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideHeight, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 400
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 68 03 00
	00		 mov	 ecx, DWORD PTR [eax+872]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideHeight@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideHeight@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideHeight@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideHeight, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 400
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 68 03 00
	00		 mov	 DWORD PTR [eax+872], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideHeight@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideWidth@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideWidth@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideWidth, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 399
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 64 03 00
	00		 mov	 ecx, DWORD PTR [eax+868]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideWidth@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideWidth@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideWidth@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideWidth, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 399
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 64 03 00
	00		 mov	 DWORD PTR [eax+868], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideWidth@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideStartY@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideStartY@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideStartY, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 398
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 60 03 00
	00		 mov	 ecx, DWORD PTR [eax+864]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideStartY@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideStartY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideStartY@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideStartY@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideStartY, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 398
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 60 03 00
	00		 mov	 DWORD PTR [eax+864], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideStartY@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideStartY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideStartX@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideStartX@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideStartX, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 397
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 5c 03 00
	00		 mov	 ecx, DWORD PTR [eax+860]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideStartX@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideStartX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideStartX@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideStartX@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideStartX, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 397
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 5c 03 00
	00		 mov	 DWORD PTR [eax+860], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideStartX@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideStartX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideFullScreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideFullScreen@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 396
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 58 03 00
	00		 mov	 cl, BYTE PTR [eax+856]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideFullScreen@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideFullScreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideFullScreen@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 396
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 58 03 00
	00		 mov	 BYTE PTR [eax+856], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideFullScreen@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideOutput@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideOutput@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideOutput, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 395
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 54 03 00
	00		 mov	 DWORD PTR [eax+852], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideOutput@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideOutput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideWindowed@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideWindowed@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 394
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 50 03 00
	00		 mov	 cl, BYTE PTR [eax+848]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideWindowed@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideWindowed@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideWindowed@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 394
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 50 03 00
	00		 mov	 BYTE PTR [eax+848], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideWindowed@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ PROC	; DXUTState::GetOverrideAdapterOrdinal, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 393
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 4c 03 00
	00		 mov	 ecx, DWORD PTR [eax+844]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ ENDP	; DXUTState::GetOverrideAdapterOrdinal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z PROC	; DXUTState::SetOverrideAdapterOrdinal, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 393
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 4c 03 00
	00		 mov	 DWORD PTR [eax+844], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z ENDP	; DXUTState::SetOverrideAdapterOrdinal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetExitAfterScreenShot@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetExitAfterScreenShot@DXUTState@@QAE_NXZ PROC		; DXUTState::GetExitAfterScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 391
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 49 03 00
	00		 mov	 cl, BYTE PTR [eax+841]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetExitAft
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetExitAft:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetExitAft
$LN5@GetExitAft:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetExitAft
$LN4@GetExitAft:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetExitAfterScreenShot@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetExitAfterScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetExitAfterScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 391
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 49 03 00
	00		 mov	 BYTE PTR [eax+841], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetExitAft
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetExitAft:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetExitAft
$LN5@SetExitAft:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetExitAft
$LN4@SetExitAft:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetExitAfterScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetSaveScreenShot@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetSaveScreenShot@DXUTState@@QAE_NXZ PROC		; DXUTState::GetSaveScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 390
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 48 03 00
	00		 mov	 cl, BYTE PTR [eax+840]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetSaveScr
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetSaveScr:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetSaveScr
$LN5@GetSaveScr:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetSaveScr
$LN4@GetSaveScr:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetSaveScreenShot@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetSaveScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetSaveScreenShot@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetSaveScreenShot@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetSaveScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 390
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 48 03 00
	00		 mov	 BYTE PTR [eax+840], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetSaveScr
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetSaveScr:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetSaveScr
$LN5@SetSaveScr:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetSaveScr
$LN4@SetSaveScr:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetSaveScreenShot@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetSaveScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetScreenShotName@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetScreenShotName@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetScreenShotName, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 389
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 48 01 00 00	 add	 eax, 328		; 00000148H
  0002d	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00030	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00033	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00038	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b cd		 mov	 ecx, ebp
  0003e	50		 push	 eax
  0003f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetScreenS
  00045	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004a	58		 pop	 eax
  0004b	5a		 pop	 edx
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	8b ff		 npad	 2
$LN6@GetScreenS:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetScreenS
$LN5@GetScreenS:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetScreenS
$LN4@GetScreenS:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetScreenShotName@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetScreenShotName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; DXUTState::GetOverrideForceFeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 44 01 00
	00		 mov	 ecx, DWORD PTR [eax+324]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetOverrid
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetOverrid:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetOverrid
$LN5@GetOverrid:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetOverrid
$LN4@GetOverrid:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; DXUTState::GetOverrideForceFeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z PROC ; DXUTState::SetOverrideForceFeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetOverrid
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetOverrid:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetOverrid
$LN5@SetOverrid:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetOverrid
$LN4@SetOverrid:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ENDP ; DXUTState::SetOverrideForceFeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetAppCalledWasKeyPressed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 386
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 7c 03 00
	00		 mov	 BYTE PTR [eax+892], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAppCall
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetAppCall:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetAppCall
$LN5@SetAppCall:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetAppCall
$LN4@SetAppCall:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetAppCalledWasKeyPressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ PROC ; DXUTState::GetMessageWhenD3D11NotAvailable, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 385
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 40 01 00
	00		 mov	 cl, BYTE PTR [eax+320]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMessage
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetMessage:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetMessage
$LN5@GetMessage:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetMessage
$LN4@GetMessage:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ ENDP ; DXUTState::GetMessageWhenD3D11NotAvailable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTimerLastID@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTimerLastID@DXUTState@@QAEIXZ PROC			; DXUTState::GetTimerLastID, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 3c 01 00
	00		 mov	 ecx, DWORD PTR [eax+316]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetTimerLa
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetTimerLa:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetTimerLa
$LN5@GetTimerLa:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetTimerLa
$LN4@GetTimerLa:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetTimerLastID@DXUTState@@QAEIXZ ENDP			; DXUTState::GetTimerLastID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimerLastID@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTimerLastID@DXUTState@@QAEXI@Z PROC			; DXUTState::SetTimerLastID, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 3c 01 00
	00		 mov	 DWORD PTR [eax+316], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetTimerLa
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetTimerLa:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetTimerLa
$LN5@SetTimerLa:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetTimerLa
$LN4@SetTimerLa:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetTimerLastID@DXUTState@@QAEXI@Z ENDP			; DXUTState::SetTimerLastID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInSizeMove@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetInSizeMove@DXUTState@@QAE_NXZ PROC			; DXUTState::GetInSizeMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 383
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 3b 01 00
	00		 mov	 cl, BYTE PTR [eax+315]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetInSizeM
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetInSizeM:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetInSizeM
$LN5@GetInSizeM:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetInSizeM
$LN4@GetInSizeM:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetInSizeMove@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetInSizeMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetInSizeMove@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetInSizeMove@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetInSizeMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 383
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 3b 01 00
	00		 mov	 BYTE PTR [eax+315], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetInSizeM
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetInSizeM:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetInSizeM
$LN5@SetInSizeM:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetInSizeM
$LN4@SetInSizeM:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetInSizeMove@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetInSizeMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAutomation@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAutomation@DXUTState@@QAE_NXZ PROC			; DXUTState::GetAutomation, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 382
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 3a 01 00
	00		 mov	 cl, BYTE PTR [eax+314]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetAutomat
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetAutomat:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetAutomat
$LN5@GetAutomat:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetAutomat
$LN4@GetAutomat:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetAutomation@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetAutomation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAutomation@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAutomation@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetAutomation, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 382
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 3a 01 00
	00		 mov	 BYTE PTR [eax+314], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAutomat
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetAutomat:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetAutomat
$LN5@SetAutomat:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetAutomat
$LN4@SetAutomat:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetAutomation@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetAutomation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ PROC		; DXUTState::GetNotifyOnMouseMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 381
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 39 01 00
	00		 mov	 cl, BYTE PTR [eax+313]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetNotifyO
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetNotifyO:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetNotifyO
$LN5@GetNotifyO:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetNotifyO
$LN4@GetNotifyO:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetNotifyOnMouseMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetNotifyOnMouseMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 381
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 39 01 00
	00		 mov	 BYTE PTR [eax+313], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetNotifyO
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetNotifyO:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetNotifyO
$LN5@SetNotifyO:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetNotifyO
$LN4@SetNotifyO:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetNotifyOnMouseMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPauseTimeCount@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetPauseTimeCount@DXUTState@@QAEHXZ PROC		; DXUTState::GetPauseTimeCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 379
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetPauseTi
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetPauseTi:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetPauseTi
$LN5@GetPauseTi:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetPauseTi
$LN4@GetPauseTi:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetPauseTimeCount@DXUTState@@QAEHXZ ENDP		; DXUTState::GetPauseTimeCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetPauseTimeCount@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetPauseTimeCount@DXUTState@@QAEXH@Z PROC		; DXUTState::SetPauseTimeCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 379
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 34 01 00
	00		 mov	 DWORD PTR [eax+308], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetPauseTi
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetPauseTi:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetPauseTi
$LN5@SetPauseTi:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetPauseTi
$LN4@SetPauseTi:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetPauseTimeCount@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetPauseTimeCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPauseRenderingCount@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetPauseRenderingCount@DXUTState@@QAEHXZ PROC		; DXUTState::GetPauseRenderingCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 378
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 30 01 00
	00		 mov	 ecx, DWORD PTR [eax+304]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetPauseRe
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetPauseRe:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetPauseRe
$LN5@GetPauseRe:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetPauseRe
$LN4@GetPauseRe:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetPauseRenderingCount@DXUTState@@QAEHXZ ENDP		; DXUTState::GetPauseRenderingCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetPauseRenderingCount@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetPauseRenderingCount@DXUTState@@QAEXH@Z PROC		; DXUTState::SetPauseRenderingCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 378
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 30 01 00
	00		 mov	 DWORD PTR [eax+304], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetPauseRe
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetPauseRe:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetPauseRe
$LN5@SetPauseRe:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetPauseRe
$LN4@SetPauseRe:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetPauseRenderingCount@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetPauseRenderingCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimePaused@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetTimePaused@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetTimePaused, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 377
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 2b 01 00
	00		 mov	 BYTE PTR [eax+299], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetTimePau
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetTimePau:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetTimePau
$LN5@SetTimePau:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetTimePau
$LN4@SetTimePau:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetTimePaused@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetTimePaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetRenderingPaused@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetRenderingPaused@DXUTState@@QAE_NXZ PROC		; DXUTState::GetRenderingPaused, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 376
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 2c 01 00
	00		 mov	 cl, BYTE PTR [eax+300]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetRenderi
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetRenderi:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetRenderi
$LN5@GetRenderi:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetRenderi
$LN4@GetRenderi:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetRenderingPaused@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetRenderingPaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetRenderingPaused@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetRenderingPaused@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetRenderingPaused, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 376
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 2c 01 00
	00		 mov	 BYTE PTR [eax+300], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetRenderi
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetRenderi:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetRenderi
$LN5@SetRenderi:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetRenderi
$LN4@SetRenderi:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetRenderingPaused@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetRenderingPaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetActive@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetActive@DXUTState@@QAE_NXZ PROC			; DXUTState::GetActive, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 375
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 2a 01 00
	00		 mov	 cl, BYTE PTR [eax+298]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetActive
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetActive:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetActive
$LN5@GetActive:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetActive
$LN4@GetActive:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetActive@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetActive@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetActive@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetActive, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 375
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 2a 01 00
	00		 mov	 BYTE PTR [eax+298], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetActive
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetActive:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetActive
$LN5@SetActive:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetActive
$LN4@SetActive:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetActive@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceObjectsReset@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceObjectsReset@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDeviceObjectsReset, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 374
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 27 01 00
	00		 mov	 cl, BYTE PTR [eax+295]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDeviceO
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDeviceO:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDeviceO
$LN5@GetDeviceO:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDeviceO
$LN4@GetDeviceO:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDeviceObjectsReset@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDeviceObjectsReset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDeviceObjectsReset, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 374
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 27 01 00
	00		 mov	 BYTE PTR [eax+295], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDeviceO
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDeviceO:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDeviceO
$LN5@SetDeviceO:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDeviceO
$LN4@SetDeviceO:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDeviceObjectsReset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ PROC	; DXUTState::GetDeviceObjectsCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 373
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 26 01 00
	00		 mov	 cl, BYTE PTR [eax+294]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDeviceO
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDeviceO:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDeviceO
$LN5@GetDeviceO:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDeviceO
$LN4@GetDeviceO:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetDeviceObjectsCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetDeviceObjectsCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 373
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 26 01 00
	00		 mov	 BYTE PTR [eax+294], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDeviceO
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDeviceO:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDeviceO
$LN5@SetDeviceO:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDeviceO
$LN4@SetDeviceO:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetDeviceObjectsCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInsideMainloop@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetInsideMainloop@DXUTState@@QAE_NXZ PROC		; DXUTState::GetInsideMainloop, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 372
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 29 01 00
	00		 mov	 cl, BYTE PTR [eax+297]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetInsideM
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetInsideM:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetInsideM
$LN5@GetInsideM:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetInsideM
$LN4@GetInsideM:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetInsideMainloop@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetInsideMainloop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetInsideMainloop@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetInsideMainloop@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetInsideMainloop, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 372
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 29 01 00
	00		 mov	 BYTE PTR [eax+297], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetInsideM
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetInsideM:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetInsideM
$LN5@SetInsideM:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetInsideM
$LN4@SetInsideM:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetInsideMainloop@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetInsideMainloop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInsideDeviceCallback@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetInsideDeviceCallback@DXUTState@@QAE_NXZ PROC	; DXUTState::GetInsideDeviceCallback, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 371
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 28 01 00
	00		 mov	 cl, BYTE PTR [eax+296]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetInsideD
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetInsideD:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetInsideD
$LN5@GetInsideD:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetInsideD
$LN4@GetInsideD:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetInsideDeviceCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetInsideDeviceCallback, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 371
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 28 01 00
	00		 mov	 BYTE PTR [eax+296], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetInsideD
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetInsideD:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetInsideD
$LN5@SetInsideD:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetInsideD
$LN4@SetInsideD:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetInsideDeviceCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceCreateCalled@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceCreateCalled@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDeviceCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 370
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 25 01 00
	00		 mov	 cl, BYTE PTR [eax+293]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDeviceC
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDeviceC:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDeviceC
$LN5@GetDeviceC:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDeviceC
$LN4@GetDeviceC:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDeviceCreateCalled@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDeviceCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDeviceCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 370
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 25 01 00
	00		 mov	 BYTE PTR [eax+293], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDeviceC
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDeviceC:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDeviceC
$LN5@SetDeviceC:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDeviceC
$LN4@SetDeviceC:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDeviceCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowCreateCalled@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowCreateCalled@DXUTState@@QAE_NXZ PROC		; DXUTState::GetWindowCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 369
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 24 01 00
	00		 mov	 cl, BYTE PTR [eax+292]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowC
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetWindowC:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetWindowC
$LN5@GetWindowC:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetWindowC
$LN4@GetWindowC:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetWindowCreateCalled@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetWindowCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowCreateCalled@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetWindowCreateCalled@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetWindowCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 369
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 24 01 00
	00		 mov	 BYTE PTR [eax+292], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetWindowC
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetWindowC:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetWindowC
$LN5@SetWindowC:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetWindowC
$LN4@SetWindowC:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetWindowCreateCalled@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetWindowCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXUTInitCalled@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXUTInitCalled@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDXUTInitCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 368
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 23 01 00
	00		 mov	 cl, BYTE PTR [eax+291]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDXUTIni
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDXUTIni:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDXUTIni
$LN5@GetDXUTIni:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDXUTIni
$LN4@GetDXUTIni:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDXUTInitCalled@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDXUTInitCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXUTInitCalled@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDXUTInitCalled@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDXUTInitCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 368
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 23 01 00
	00		 mov	 BYTE PTR [eax+291], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDXUTIni
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDXUTIni:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDXUTIni
$LN5@SetDXUTIni:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDXUTIni
$LN4@SetDXUTIni:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDXUTInitCalled@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDXUTInitCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceCreated@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceCreated@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDeviceCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 22 01 00
	00		 mov	 cl, BYTE PTR [eax+290]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDeviceC
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDeviceC:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDeviceC
$LN5@GetDeviceC:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDeviceC
$LN4@GetDeviceC:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDeviceCreated@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDeviceCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceCreated@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceCreated@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDeviceCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 22 01 00
	00		 mov	 BYTE PTR [eax+290], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDeviceC
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDeviceC:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDeviceC
$LN5@SetDeviceC:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDeviceC
$LN4@SetDeviceC:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDeviceCreated@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDeviceCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowCreated@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowCreated@DXUTState@@QAE_NXZ PROC		; DXUTState::GetWindowCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 366
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 21 01 00
	00		 mov	 cl, BYTE PTR [eax+289]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowC
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetWindowC:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetWindowC
$LN5@GetWindowC:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetWindowC
$LN4@GetWindowC:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetWindowCreated@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetWindowCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowCreated@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetWindowCreated@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetWindowCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 366
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 21 01 00
	00		 mov	 BYTE PTR [eax+289], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetWindowC
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetWindowC:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetWindowC
$LN5@SetWindowC:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetWindowC
$LN4@SetWindowC:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetWindowCreated@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetWindowCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXUTInited@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXUTInited@DXUTState@@QAE_NXZ PROC			; DXUTState::GetDXUTInited, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 365
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 20 01 00
	00		 mov	 cl, BYTE PTR [eax+288]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDXUTIni
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetDXUTIni:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetDXUTIni
$LN5@GetDXUTIni:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetDXUTIni
$LN4@GetDXUTIni:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetDXUTInited@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetDXUTInited
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXUTInited@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDXUTInited@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetDXUTInited, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 365
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 20 01 00
	00		 mov	 BYTE PTR [eax+288], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDXUTIni
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetDXUTIni:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetDXUTIni
$LN5@SetDXUTIni:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetDXUTIni
$LN4@SetDXUTIni:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetDXUTInited@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetDXUTInited
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetExitCode@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetExitCode@DXUTState@@QAEHXZ PROC			; DXUTState::GetExitCode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 363
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 1c 01 00
	00		 mov	 ecx, DWORD PTR [eax+284]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetExitCod
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetExitCod:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetExitCod
$LN5@GetExitCod:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetExitCod
$LN4@GetExitCod:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetExitCode@DXUTState@@QAEHXZ ENDP			; DXUTState::GetExitCode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetExitCode@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetExitCode@DXUTState@@QAEXH@Z PROC			; DXUTState::SetExitCode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 363
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 1c 01 00
	00		 mov	 DWORD PTR [eax+284], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetExitCod
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetExitCod:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetExitCod
$LN5@SetExitCod:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetExitCod
$LN4@SetExitCod:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetExitCode@DXUTState@@QAEXH@Z ENDP			; DXUTState::SetExitCode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z PROC ; DXUTState::SetWindowCreatedWithDefaultPositions, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 362
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 1a 01 00
	00		 mov	 BYTE PTR [eax+282], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetWindowC
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetWindowC:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetWindowC
$LN5@SetWindowC:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetWindowC
$LN4@SetWindowC:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ENDP ; DXUTState::SetWindowCreatedWithDefaultPositions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAutoChangeAdapter@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAutoChangeAdapter@DXUTState@@QAE_NXZ PROC		; DXUTState::GetAutoChangeAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 361
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 19 01 00
	00		 mov	 cl, BYTE PTR [eax+281]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetAutoCha
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetAutoCha:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetAutoCha
$LN5@GetAutoCha:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetAutoCha
$LN4@GetAutoCha:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetAutoChangeAdapter@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetAutoChangeAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetAutoChangeAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 361
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 19 01 00
	00		 mov	 BYTE PTR [eax+281], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAutoCha
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetAutoCha:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetAutoCha
$LN5@SetAutoCha:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetAutoCha
$LN4@SetAutoCha:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetAutoChangeAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTimePerFrame@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTimePerFrame@DXUTState@@QAEMXZ PROC			; DXUTState::GetTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 359
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	f3 0f 10 80 14
	01 00 00	 movss	 xmm0, DWORD PTR [eax+276]
  00030	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp], xmm0
  00035	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00038	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003d	d9 45 ec	 fld	 DWORD PTR $T1[ebp]
  00040	52		 push	 edx
  00041	8b cd		 mov	 ecx, ebp
  00043	50		 push	 eax
  00044	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetTimePer
  0004a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004f	58		 pop	 eax
  00050	5a		 pop	 edx
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
  0005f	90		 npad	 1
$LN6@GetTimePer:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@GetTimePer
$LN5@GetTimePer:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@GetTimePer
$LN4@GetTimePer:
  00074	6c		 DB	 108			; 0000006cH
  00075	00		 DB	 0
?GetTimePerFrame@DXUTState@@QAEMXZ ENDP			; DXUTState::GetTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimePerFrame@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTimePerFrame@DXUTState@@QAEXM@Z PROC		; DXUTState::SetTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 359
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _t$[ebp]
  0002a	f3 0f 11 80 14
	01 00 00	 movss	 DWORD PTR [eax+276], xmm0
  00032	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00035	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetTimePer
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
  0005b	90		 npad	 1
$LN6@SetTimePer:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@SetTimePer
$LN5@SetTimePer:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@SetTimePer
$LN4@SetTimePer:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?SetTimePerFrame@DXUTState@@QAEXM@Z ENDP		; DXUTState::SetTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetConstantFrameTime@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetConstantFrameTime@DXUTState@@QAE_NXZ PROC		; DXUTState::GetConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 358
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 13 01 00
	00		 mov	 cl, BYTE PTR [eax+275]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetConstan
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetConstan:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetConstan
$LN5@GetConstan:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetConstan
$LN4@GetConstan:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetConstantFrameTime@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetConstantFrameTime@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetConstantFrameTime@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 358
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 13 01 00
	00		 mov	 BYTE PTR [eax+275], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetConstan
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetConstan:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetConstan
$LN5@SetConstan:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetConstan
$LN4@SetConstan:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetConstantFrameTime@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ PROC	; DXUTState::GetShowCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 357
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 12 01 00
	00		 mov	 cl, BYTE PTR [eax+274]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetShowCur
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetShowCur:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetShowCur
$LN5@GetShowCur:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetShowCur
$LN4@GetShowCur:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetShowCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetShowCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 357
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 12 01 00
	00		 mov	 BYTE PTR [eax+274], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetShowCur
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetShowCur:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetShowCur
$LN5@SetShowCur:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetShowCur
$LN4@SetShowCur:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetShowCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ PROC	; DXUTState::GetClipCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 356
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 11 01 00
	00		 mov	 cl, BYTE PTR [eax+273]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetClipCur
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetClipCur:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetClipCur
$LN5@GetClipCur:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetClipCur
$LN4@GetClipCur:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetClipCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetClipCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 356
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 11 01 00
	00		 mov	 BYTE PTR [eax+273], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetClipCur
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetClipCur:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetClipCur
$LN5@SetClipCur:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetClipCur
$LN4@SetClipCur:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetClipCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNoStats@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetNoStats@DXUTState@@QAE_NXZ PROC			; DXUTState::GetNoStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 355
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 10 01 00
	00		 mov	 cl, BYTE PTR [eax+272]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetNoStats
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetNoStats:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetNoStats
$LN5@GetNoStats:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetNoStats
$LN4@GetNoStats:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetNoStats@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetNoStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetNoStats@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetNoStats@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetNoStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 355
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 10 01 00
	00		 mov	 BYTE PTR [eax+272], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetNoStats
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetNoStats:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetNoStats
$LN5@SetNoStats:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetNoStats
$LN4@SetNoStats:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetNoStats@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetNoStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ PROC		; DXUTState::GetShowMsgBoxOnError, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 354
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 0f 01 00
	00		 mov	 cl, BYTE PTR [eax+271]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetShowMsg
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetShowMsg:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetShowMsg
$LN5@GetShowMsg:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetShowMsg
$LN4@GetShowMsg:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetShowMsgBoxOnError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetShowMsgBoxOnError, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 354
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 0f 01 00
	00		 mov	 BYTE PTR [eax+271], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetShowMsg
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetShowMsg:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetShowMsg
$LN5@SetShowMsg:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetShowMsg
$LN4@SetShowMsg:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetShowMsgBoxOnError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHandlePause@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHandlePause@DXUTState@@QAE_NXZ PROC			; DXUTState::GetHandlePause, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 0e 01 00
	00		 mov	 cl, BYTE PTR [eax+270]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetHandleP
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetHandleP:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetHandleP
$LN5@GetHandleP:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetHandleP
$LN4@GetHandleP:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetHandlePause@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetHandlePause
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHandlePause@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetHandlePause@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetHandlePause, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 0e 01 00
	00		 mov	 BYTE PTR [eax+270], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetHandleP
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetHandleP:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetHandleP
$LN5@SetHandleP:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetHandleP
$LN4@SetHandleP:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetHandlePause@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetHandlePause
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHandleAltEnter@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetHandleAltEnter@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetHandleAltEnter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 352
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 0d 01 00
	00		 mov	 BYTE PTR [eax+269], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetHandleA
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetHandleA:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetHandleA
$LN5@SetHandleA:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetHandleA
$LN4@SetHandleA:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetHandleAltEnter@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetHandleAltEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHandleEscape@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHandleEscape@DXUTState@@QAE_NXZ PROC		; DXUTState::GetHandleEscape, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 351
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 0c 01 00
	00		 mov	 cl, BYTE PTR [eax+268]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetHandleE
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetHandleE:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetHandleE
$LN5@GetHandleE:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetHandleE
$LN4@GetHandleE:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetHandleEscape@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetHandleEscape
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHandleEscape@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetHandleEscape@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetHandleEscape, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 351
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 0c 01 00
	00		 mov	 BYTE PTR [eax+268], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetHandleE
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetHandleE:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetHandleE
$LN5@SetHandleE:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetHandleE
$LN4@SetHandleE:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetHandleEscape@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetHandleEscape
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ PROC ; DXUTState::GetStartupFilterKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 349
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00034	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00037	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0003a	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0003d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00040	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
  00043	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00046	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  00049	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0004c	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0004f	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00052	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00057	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0005a	52		 push	 edx
  0005b	8b cd		 mov	 ecx, ebp
  0005d	50		 push	 eax
  0005e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetStartup
  00064	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00069	58		 pop	 eax
  0006a	5a		 pop	 edx
  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
  0007b	90		 npad	 1
$LN6@GetStartup:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN5@GetStartup
$LN5@GetStartup:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@GetStartup
$LN4@GetStartup:
  00090	6c		 DB	 108			; 0000006cH
  00091	00		 DB	 0
?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ENDP ; DXUTState::GetStartupFilterKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 24
?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z PROC ; DXUTState::SetStartupFilterKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 349
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  0002d	89 08		 mov	 DWORD PTR [eax], ecx
  0002f	8b 55 0c	 mov	 edx, DWORD PTR _t$[ebp+4]
  00032	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00035	8b 4d 10	 mov	 ecx, DWORD PTR _t$[ebp+8]
  00038	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0003b	8b 55 14	 mov	 edx, DWORD PTR _t$[ebp+12]
  0003e	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00041	8b 4d 18	 mov	 ecx, DWORD PTR _t$[ebp+16]
  00044	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00047	8b 55 1c	 mov	 edx, DWORD PTR _t$[ebp+20]
  0004a	89 50 14	 mov	 DWORD PTR [eax+20], edx
  0004d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00050	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00055	52		 push	 edx
  00056	8b cd		 mov	 ecx, ebp
  00058	50		 push	 eax
  00059	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetStartup
  0005f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00064	58		 pop	 eax
  00065	5a		 pop	 edx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 18 00	 ret	 24			; 00000018H
  00076	8b ff		 npad	 2
$LN6@SetStartup:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN5@SetStartup
$LN5@SetStartup:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@SetStartup
$LN4@SetStartup:
  0008c	6c		 DB	 108			; 0000006cH
  0008d	00		 DB	 0
?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z ENDP ; DXUTState::SetStartupFilterKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ PROC ; DXUTState::GetStartupToggleKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 348
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 88 ec 00 00
	00		 mov	 ecx, DWORD PTR [eax+236]
  0002b	8b 90 f0 00 00
	00		 mov	 edx, DWORD PTR [eax+240]
  00031	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00034	89 08		 mov	 DWORD PTR [eax], ecx
  00036	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00039	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0003c	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	52		 push	 edx
  00045	8b cd		 mov	 ecx, ebp
  00047	50		 push	 eax
  00048	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetStartup
  0004e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00053	58		 pop	 eax
  00054	5a		 pop	 edx
  00055	83 c4 10	 add	 esp, 16			; 00000010H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
  00065	8d 49 00	 npad	 3
$LN6@GetStartup:
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN5@GetStartup
$LN5@GetStartup:
  00070	f7 ff ff ff	 DD	 -9			; fffffff7H
  00074	01 00 00 00	 DD	 1
  00078	00 00 00 00	 DD	 $LN4@GetStartup
$LN4@GetStartup:
  0007c	6c		 DB	 108			; 0000006cH
  0007d	00		 DB	 0
?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ENDP ; DXUTState::GetStartupToggleKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z PROC ; DXUTState::SetStartupToggleKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 348
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 ec 00 00
	00		 mov	 DWORD PTR [eax+236], ecx
  0002e	8b 55 0c	 mov	 edx, DWORD PTR _t$[ebp+4]
  00031	89 90 f0 00 00
	00		 mov	 DWORD PTR [eax+240], edx
  00037	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0003a	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003f	52		 push	 edx
  00040	8b cd		 mov	 ecx, ebp
  00042	50		 push	 eax
  00043	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetStartup
  00049	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004e	58		 pop	 eax
  0004f	5a		 pop	 edx
  00050	83 c4 10	 add	 esp, 16			; 00000010H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
$LN6@SetStartup:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@SetStartup
$LN5@SetStartup:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@SetStartup
$LN4@SetStartup:
  00074	6c		 DB	 108			; 0000006cH
  00075	00		 DB	 0
?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z ENDP ; DXUTState::SetStartupToggleKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ PROC ; DXUTState::GetStartupStickyKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 347
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  0002b	8b 90 e8 00 00
	00		 mov	 edx, DWORD PTR [eax+232]
  00031	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00034	89 08		 mov	 DWORD PTR [eax], ecx
  00036	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00039	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0003c	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	52		 push	 edx
  00045	8b cd		 mov	 ecx, ebp
  00047	50		 push	 eax
  00048	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetStartup
  0004e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00053	58		 pop	 eax
  00054	5a		 pop	 edx
  00055	83 c4 10	 add	 esp, 16			; 00000010H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
  00065	8d 49 00	 npad	 3
$LN6@GetStartup:
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN5@GetStartup
$LN5@GetStartup:
  00070	f7 ff ff ff	 DD	 -9			; fffffff7H
  00074	01 00 00 00	 DD	 1
  00078	00 00 00 00	 DD	 $LN4@GetStartup
$LN4@GetStartup:
  0007c	6c		 DB	 108			; 0000006cH
  0007d	00		 DB	 0
?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ENDP ; DXUTState::GetStartupStickyKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z PROC ; DXUTState::SetStartupStickyKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 347
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 e4 00 00
	00		 mov	 DWORD PTR [eax+228], ecx
  0002e	8b 55 0c	 mov	 edx, DWORD PTR _t$[ebp+4]
  00031	89 90 e8 00 00
	00		 mov	 DWORD PTR [eax+232], edx
  00037	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0003a	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003f	52		 push	 edx
  00040	8b cd		 mov	 ecx, ebp
  00042	50		 push	 eax
  00043	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetStartup
  00049	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004e	58		 pop	 eax
  0004f	5a		 pop	 edx
  00050	83 c4 10	 add	 esp, 16			; 00000010H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
$LN6@SetStartup:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@SetStartup
$LN5@SetStartup:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@SetStartup
$LN4@SetStartup:
  00074	6c		 DB	 108			; 0000006cH
  00075	00		 DB	 0
?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z ENDP ; DXUTState::SetStartupStickyKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCallDefWindowProc@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetCallDefWindowProc@DXUTState@@QAE_NXZ PROC		; DXUTState::GetCallDefWindowProc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 346
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 e3 00 00
	00		 mov	 cl, BYTE PTR [eax+227]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetCallDef
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetCallDef:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetCallDef
$LN5@GetCallDef:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetCallDef
$LN4@GetCallDef:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetCallDefWindowProc@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetCallDefWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCallDefWindowProc@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetCallDefWindowProc@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetCallDefWindowProc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 346
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 e3 00 00
	00		 mov	 BYTE PTR [eax+227], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetCallDef
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetCallDef:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetCallDef
$LN5@SetCallDef:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetCallDef
$LN4@SetCallDef:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetCallDefWindowProc@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetCallDefWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAllowShortcutKeys@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAllowShortcutKeys@DXUTState@@QAE_NXZ PROC		; DXUTState::GetAllowShortcutKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 345
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 e2 00 00
	00		 mov	 cl, BYTE PTR [eax+226]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetAllowSh
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetAllowSh:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetAllowSh
$LN5@GetAllowSh:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetAllowSh
$LN4@GetAllowSh:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetAllowShortcutKeys@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetAllowShortcutKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetAllowShortcutKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 345
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 e2 00 00
	00		 mov	 BYTE PTR [eax+226], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAllowSh
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetAllowSh:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetAllowSh
$LN5@SetAllowSh:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetAllowSh
$LN4@SetAllowSh:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetAllowShortcutKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ PROC ; DXUTState::GetAllowShortcutKeysWhenWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 344
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 e1 00 00
	00		 mov	 cl, BYTE PTR [eax+225]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetAllowSh
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetAllowSh:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetAllowSh
$LN5@GetAllowSh:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetAllowSh
$LN4@GetAllowSh:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ENDP ; DXUTState::GetAllowShortcutKeysWhenWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z PROC ; DXUTState::SetAllowShortcutKeysWhenWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 344
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 e1 00 00
	00		 mov	 BYTE PTR [eax+225], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAllowSh
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetAllowSh:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetAllowSh
$LN5@SetAllowSh:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetAllowSh
$LN4@SetAllowSh:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z ENDP ; DXUTState::SetAllowShortcutKeysWhenWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ PROC ; DXUTState::GetAllowShortcutKeysWhenFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 e0 00 00
	00		 mov	 cl, BYTE PTR [eax+224]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetAllowSh
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetAllowSh:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetAllowSh
$LN5@GetAllowSh:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetAllowSh
$LN4@GetAllowSh:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ENDP ; DXUTState::GetAllowShortcutKeysWhenFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z PROC ; DXUTState::SetAllowShortcutKeysWhenFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 e0 00 00
	00		 mov	 BYTE PTR [eax+224], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAllowSh
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetAllowSh:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetAllowSh
$LN5@SetAllowSh:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetAllowSh
$LN4@SetAllowSh:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z ENDP ; DXUTState::SetAllowShortcutKeysWhenFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ PROC	; DXUTState::GetKeyboardHook, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 342
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetKeyboar
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetKeyboar:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetKeyboar
$LN5@GetKeyboar:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetKeyboar
$LN4@GetKeyboar:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ENDP	; DXUTState::GetKeyboardHook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z PROC	; DXUTState::SetKeyboardHook, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 342
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 dc 00 00
	00		 mov	 DWORD PTR [eax+220], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetKeyboar
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetKeyboar:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetKeyboar
$LN5@SetKeyboar:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetKeyboar
$LN4@SetKeyboar:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z ENDP	; DXUTState::SetKeyboardHook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCurrentFrameNumber@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetCurrentFrameNumber@DXUTState@@QAEHXZ PROC		; DXUTState::GetCurrentFrameNumber, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 341
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetCurrent
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetCurrent:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetCurrent
$LN5@GetCurrent:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetCurrent
$LN4@GetCurrent:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetCurrentFrameNumber@DXUTState@@QAEHXZ ENDP		; DXUTState::GetCurrentFrameNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCurrentFrameNumber@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetCurrentFrameNumber@DXUTState@@QAEXH@Z PROC		; DXUTState::SetCurrentFrameNumber, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 341
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 d8 00 00
	00		 mov	 DWORD PTR [eax+216], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetCurrent
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetCurrent:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetCurrent
$LN5@SetCurrent:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetCurrent
$LN4@SetCurrent:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetCurrentFrameNumber@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetCurrentFrameNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFPS@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFPS@DXUTState@@QAEMXZ PROC				; DXUTState::GetFPS, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 340
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	f3 0f 10 80 d4
	00 00 00	 movss	 xmm0, DWORD PTR [eax+212]
  00030	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp], xmm0
  00035	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00038	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003d	d9 45 ec	 fld	 DWORD PTR $T1[ebp]
  00040	52		 push	 edx
  00041	8b cd		 mov	 ecx, ebp
  00043	50		 push	 eax
  00044	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetFPS
  0004a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004f	58		 pop	 eax
  00050	5a		 pop	 edx
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
  0005f	90		 npad	 1
$LN6@GetFPS:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@GetFPS
$LN5@GetFPS:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@GetFPS
$LN4@GetFPS:
  00074	6c		 DB	 108			; 0000006cH
  00075	00		 DB	 0
?GetFPS@DXUTState@@QAEMXZ ENDP				; DXUTState::GetFPS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFPS@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFPS@DXUTState@@QAEXM@Z PROC				; DXUTState::SetFPS, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 340
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _t$[ebp]
  0002a	f3 0f 11 80 d4
	00 00 00	 movss	 DWORD PTR [eax+212], xmm0
  00032	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00035	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetFPS
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
  0005b	90		 npad	 1
$LN6@SetFPS:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@SetFPS
$LN5@SetFPS:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@SetFPS
$LN4@SetFPS:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?SetFPS@DXUTState@@QAEXM@Z ENDP				; DXUTState::SetFPS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ PROC	; DXUTState::GetLastStatsUpdateFrames, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 339
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetLastSta
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetLastSta:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetLastSta
$LN5@GetLastSta:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetLastSta
$LN4@GetLastSta:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ ENDP	; DXUTState::GetLastStatsUpdateFrames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z PROC	; DXUTState::SetLastStatsUpdateFrames, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 339
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 d0 00 00
	00		 mov	 DWORD PTR [eax+208], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetLastSta
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetLastSta:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetLastSta
$LN5@SetLastSta:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetLastSta
$LN4@SetLastSta:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z ENDP	; DXUTState::SetLastStatsUpdateFrames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetLastStatsUpdateTime@DXUTState@@QAENXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetLastStatsUpdateTime@DXUTState@@QAENXZ PROC		; DXUTState::GetLastStatsUpdateTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 338
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00020	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00023	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	f2 0f 10 80 c8
	00 00 00	 movsd	 xmm0, QWORD PTR [eax+200]
  00033	f2 0f 11 45 e8	 movsd	 QWORD PTR $T1[ebp], xmm0
  00038	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0003b	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00040	dd 45 e8	 fld	 QWORD PTR $T1[ebp]
  00043	52		 push	 edx
  00044	8b cd		 mov	 ecx, ebp
  00046	50		 push	 eax
  00047	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetLastSta
  0004d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00052	58		 pop	 eax
  00053	5a		 pop	 edx
  00054	83 c4 18	 add	 esp, 24			; 00000018H
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
  00062	8b ff		 npad	 2
$LN6@GetLastSta:
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN5@GetLastSta
$LN5@GetLastSta:
  0006c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00070	01 00 00 00	 DD	 1
  00074	00 00 00 00	 DD	 $LN4@GetLastSta
$LN4@GetLastSta:
  00078	6c		 DB	 108			; 0000006cH
  00079	00		 DB	 0
?GetLastStatsUpdateTime@DXUTState@@QAENXZ ENDP		; DXUTState::GetLastStatsUpdateTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z PROC		; DXUTState::SetLastStatsUpdateTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 338
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _t$[ebp]
  0002a	f2 0f 11 80 c8
	00 00 00	 movsd	 QWORD PTR [eax+200], xmm0
  00032	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00035	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetLastSta
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN6@SetLastSta:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@SetLastSta
$LN5@SetLastSta:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@SetLastSta
$LN4@SetLastSta:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z ENDP		; DXUTState::SetLastStatsUpdateTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ PROC	; DXUTState::GetHInstance, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  0002e	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetHInstan
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetHInstan:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetHInstan
$LN5@GetHInstan:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetHInstan
$LN4@GetHInstan:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ ENDP	; DXUTState::GetHInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z PROC	; DXUTState::SetHInstance, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 88 c4 00 00
	00		 mov	 DWORD PTR [eax+196], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetHInstan
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetHInstan:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetHInstan
$LN5@SetHInstan:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetHInstan
$LN4@SetHInstan:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z ENDP	; DXUTState::SetHInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetElapsedTime@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetElapsedTime@DXUTState@@QAEMXZ PROC			; DXUTState::GetElapsedTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 335
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	f3 0f 10 80 c0
	00 00 00	 movss	 xmm0, DWORD PTR [eax+192]
  00030	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp], xmm0
  00035	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00038	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003d	d9 45 ec	 fld	 DWORD PTR $T1[ebp]
  00040	52		 push	 edx
  00041	8b cd		 mov	 ecx, ebp
  00043	50		 push	 eax
  00044	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetElapsed
  0004a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004f	58		 pop	 eax
  00050	5a		 pop	 edx
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
  0005f	90		 npad	 1
$LN6@GetElapsed:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN5@GetElapsed
$LN5@GetElapsed:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@GetElapsed
$LN4@GetElapsed:
  00074	6c		 DB	 108			; 0000006cH
  00075	00		 DB	 0
?GetElapsedTime@DXUTState@@QAEMXZ ENDP			; DXUTState::GetElapsedTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetElapsedTime@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetElapsedTime@DXUTState@@QAEXM@Z PROC			; DXUTState::SetElapsedTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 335
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _t$[ebp]
  0002a	f3 0f 11 80 c0
	00 00 00	 movss	 DWORD PTR [eax+192], xmm0
  00032	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00035	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetElapsed
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
  0005b	90		 npad	 1
$LN6@SetElapsed:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@SetElapsed
$LN5@SetElapsed:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@SetElapsed
$LN4@SetElapsed:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?SetElapsedTime@DXUTState@@QAEXM@Z ENDP			; DXUTState::SetElapsedTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAbsoluteTime@DXUTState@@QAENXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAbsoluteTime@DXUTState@@QAENXZ PROC			; DXUTState::GetAbsoluteTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 334
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00020	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00023	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	f2 0f 10 80 b8
	00 00 00	 movsd	 xmm0, QWORD PTR [eax+184]
  00033	f2 0f 11 45 e8	 movsd	 QWORD PTR $T1[ebp], xmm0
  00038	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0003b	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00040	dd 45 e8	 fld	 QWORD PTR $T1[ebp]
  00043	52		 push	 edx
  00044	8b cd		 mov	 ecx, ebp
  00046	50		 push	 eax
  00047	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetAbsolut
  0004d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00052	58		 pop	 eax
  00053	5a		 pop	 edx
  00054	83 c4 18	 add	 esp, 24			; 00000018H
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
  00062	8b ff		 npad	 2
$LN6@GetAbsolut:
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN5@GetAbsolut
$LN5@GetAbsolut:
  0006c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00070	01 00 00 00	 DD	 1
  00074	00 00 00 00	 DD	 $LN4@GetAbsolut
$LN4@GetAbsolut:
  00078	6c		 DB	 108			; 0000006cH
  00079	00		 DB	 0
?GetAbsoluteTime@DXUTState@@QAENXZ ENDP			; DXUTState::GetAbsoluteTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAbsoluteTime@DXUTState@@QAEXN@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetAbsoluteTime@DXUTState@@QAEXN@Z PROC		; DXUTState::SetAbsoluteTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 334
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _t$[ebp]
  0002a	f2 0f 11 80 b8
	00 00 00	 movsd	 QWORD PTR [eax+184], xmm0
  00032	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00035	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAbsolut
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN6@SetAbsolut:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@SetAbsolut
$LN5@SetAbsolut:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@SetAbsolut
$LN4@SetAbsolut:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?SetAbsoluteTime@DXUTState@@QAEXN@Z ENDP		; DXUTState::SetAbsoluteTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTime@DXUTState@@QAENXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTime@DXUTState@@QAENXZ PROC				; DXUTState::GetTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00020	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00023	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	f2 0f 10 80 b0
	00 00 00	 movsd	 xmm0, QWORD PTR [eax+176]
  00033	f2 0f 11 45 e8	 movsd	 QWORD PTR $T1[ebp], xmm0
  00038	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0003b	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00040	dd 45 e8	 fld	 QWORD PTR $T1[ebp]
  00043	52		 push	 edx
  00044	8b cd		 mov	 ecx, ebp
  00046	50		 push	 eax
  00047	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetTime
  0004d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00052	58		 pop	 eax
  00053	5a		 pop	 edx
  00054	83 c4 18	 add	 esp, 24			; 00000018H
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
  00062	8b ff		 npad	 2
$LN6@GetTime:
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN5@GetTime
$LN5@GetTime:
  0006c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00070	01 00 00 00	 DD	 1
  00074	00 00 00 00	 DD	 $LN4@GetTime
$LN4@GetTime:
  00078	6c		 DB	 108			; 0000006cH
  00079	00		 DB	 0
?GetTime@DXUTState@@QAENXZ ENDP				; DXUTState::GetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTime@DXUTState@@QAEXN@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetTime@DXUTState@@QAEXN@Z PROC			; DXUTState::SetTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _t$[ebp]
  0002a	f2 0f 11 80 b0
	00 00 00	 movsd	 QWORD PTR [eax+176], xmm0
  00032	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00035	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetTime
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN6@SetTime:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@SetTime
$LN5@SetTime:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@SetTime
$LN4@SetTime:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?SetTime@DXUTState@@QAEXN@Z ENDP			; DXUTState::SetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIgnoreSizeChange@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIgnoreSizeChange@DXUTState@@QAE_NXZ PROC		; DXUTState::GetIgnoreSizeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 331
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 ac 00 00
	00		 mov	 cl, BYTE PTR [eax+172]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetIgnoreS
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetIgnoreS:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetIgnoreS
$LN5@GetIgnoreS:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetIgnoreS
$LN4@GetIgnoreS:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetIgnoreSizeChange@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetIgnoreSizeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetIgnoreSizeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 331
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 ac 00 00
	00		 mov	 BYTE PTR [eax+172], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetIgnoreS
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetIgnoreS:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetIgnoreS
$LN5@SetIgnoreS:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetIgnoreS
$LN4@SetIgnoreS:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetIgnoreSizeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ PROC	; DXUTState::GetMinimizedWhileFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 330
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 ab 00 00
	00		 mov	 cl, BYTE PTR [eax+171]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMinimiz
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetMinimiz:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetMinimiz
$LN5@GetMinimiz:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetMinimiz
$LN4@GetMinimiz:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetMinimizedWhileFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetMinimizedWhileFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 330
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 ab 00 00
	00		 mov	 BYTE PTR [eax+171], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetMinimiz
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetMinimiz:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetMinimiz
$LN5@SetMinimiz:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetMinimiz
$LN4@SetMinimiz:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetMinimizedWhileFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMaximized@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMaximized@DXUTState@@QAE_NXZ PROC			; DXUTState::GetMaximized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 329
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 aa 00 00
	00		 mov	 cl, BYTE PTR [eax+170]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMaximiz
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetMaximiz:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetMaximiz
$LN5@GetMaximiz:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetMaximiz
$LN4@GetMaximiz:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetMaximized@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetMaximized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMaximized@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetMaximized@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetMaximized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 329
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 aa 00 00
	00		 mov	 BYTE PTR [eax+170], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetMaximiz
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetMaximiz:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetMaximiz
$LN5@SetMaximiz:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetMaximiz
$LN4@SetMaximiz:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetMaximized@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetMaximized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMinimized@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMinimized@DXUTState@@QAE_NXZ PROC			; DXUTState::GetMinimized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 328
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 a9 00 00
	00		 mov	 cl, BYTE PTR [eax+169]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMinimiz
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetMinimiz:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetMinimiz
$LN5@GetMinimiz:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetMinimiz
$LN4@GetMinimiz:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetMinimized@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetMinimized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMinimized@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetMinimized@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetMinimized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 328
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 88 a9 00 00
	00		 mov	 BYTE PTR [eax+169], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	52		 push	 edx
  00037	8b cd		 mov	 ecx, ebp
  00039	50		 push	 eax
  0003a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetMinimiz
  00040	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00045	58		 pop	 eax
  00046	5a		 pop	 edx
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
  00057	90		 npad	 1
$LN6@SetMinimiz:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@SetMinimiz
$LN5@SetMinimiz:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@SetMinimiz
$LN4@SetMinimiz:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?SetMinimized@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetMinimized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ PROC	; DXUTState::GetTopmostWhileWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 327
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 88 a8 00 00
	00		 mov	 cl, BYTE PTR [eax+168]
  0002e	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  00031	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00034	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00039	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  0003c	52		 push	 edx
  0003d	8b cd		 mov	 ecx, ebp
  0003f	50		 push	 eax
  00040	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetTopmost
  00046	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004b	58		 pop	 eax
  0004c	5a		 pop	 edx
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN6@GetTopmost:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN5@GetTopmost
$LN5@GetTopmost:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN4@GetTopmost
$LN4@GetTopmost:
  00070	6c		 DB	 108			; 0000006cH
  00071	00		 DB	 0
?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetTopmostWhileWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ PROC	; DXUTState::GetWindowedStyleAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowe
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetWindowe:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetWindowe
$LN5@GetWindowe:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetWindowe
$LN4@GetWindowe:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ ENDP	; DXUTState::GetWindowedStyleAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ PROC ; DXUTState::GetWindowedPlacement, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 325
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	83 c0 7c	 add	 eax, 124		; 0000007cH
  0002b	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowe
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetWindowe:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetWindowe
$LN5@GetWindowe:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetWindowe
$LN4@GetWindowe:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ ENDP ; DXUTState::GetWindowedPlacement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetWindowBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 324
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowB
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetWindowB:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetWindowB
$LN5@GetWindowB:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetWindowB
$LN4@GetWindowB:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetWindowBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetWindowBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 324
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 74	 mov	 DWORD PTR [eax+116], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetWindowB
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetWindowB:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetWindowB
$LN5@SetWindowB:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetWindowB
$LN4@SetWindowB:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetWindowBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetWindowBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetWindowB
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetWindowB:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetWindowB
$LN5@GetWindowB:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetWindowB
$LN4@GetWindowB:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetWindowBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetWindowBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 70	 mov	 DWORD PTR [eax+112], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetWindowB
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetWindowB:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetWindowB
$LN5@SetWindowB:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetWindowB
$LN4@SetWindowB:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetWindowBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetFullScreenBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 322
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetFullScr
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetFullScr:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetFullScr
$LN5@GetFullScr:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetFullScr
$LN4@GetFullScr:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetFullScreenBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetFullScreenBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 322
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 6c	 mov	 DWORD PTR [eax+108], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetFullScr
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetFullScr:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetFullScr
$LN5@SetFullScr:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetFullScr
$LN4@SetFullScr:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetFullScreenBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 321
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetFullScr
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetFullScr:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetFullScr
$LN5@GetFullScr:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetFullScr
$LN4@GetFullScr:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetFullScreenBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetFullScreenBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 321
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 68	 mov	 DWORD PTR [eax+104], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetFullScr
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetFullScr:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetFullScr
$LN5@SetFullScr:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetFullScr
$LN4@SetFullScr:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ PROC		; DXUTState::GetMenu, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetMenu
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetMenu:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetMenu
$LN5@GetMenu:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetMenu
$LN4@GetMenu:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ ENDP		; DXUTState::GetMenu
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ PROC	; DXUTState::GetAdapterMonitor, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 318
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetAdapter
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetAdapter:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetAdapter
$LN5@GetAdapter:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetAdapter
$LN4@GetAdapter:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ ENDP	; DXUTState::GetAdapterMonitor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z PROC ; DXUTState::SetAdapterMonitor, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 318
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 60	 mov	 DWORD PTR [eax+96], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetAdapter
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetAdapter:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetAdapter
$LN5@SetAdapter:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetAdapter
$LN4@SetAdapter:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z ENDP ; DXUTState::SetAdapterMonitor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ PROC	; DXUTState::GetHWNDDeviceWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 317
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 5c	 mov	 ecx, DWORD PTR [eax+92]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetHWNDDev
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetHWNDDev:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetHWNDDev
$LN5@GetHWNDDev:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetHWNDDev
$LN4@GetHWNDDev:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ENDP	; DXUTState::GetHWNDDeviceWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z PROC ; DXUTState::SetHWNDDeviceWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 317
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 5c	 mov	 DWORD PTR [eax+92], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetHWNDDev
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetHWNDDev:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetHWNDDev
$LN5@SetHWNDDev:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetHWNDDev
$LN4@SetHWNDDev:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ENDP ; DXUTState::SetHWNDDeviceWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ PROC ; DXUTState::GetHWNDDeviceFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 316
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetHWNDDev
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetHWNDDev:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetHWNDDev
$LN5@GetHWNDDev:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetHWNDDev
$LN4@GetHWNDDev:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ENDP ; DXUTState::GetHWNDDeviceFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z PROC ; DXUTState::SetHWNDDeviceFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 316
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 58	 mov	 DWORD PTR [eax+88], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetHWNDDev
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetHWNDDev:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetHWNDDev
$LN5@SetHWNDDev:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetHWNDDev
$LN4@SetHWNDDev:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ENDP ; DXUTState::SetHWNDDeviceFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ PROC		; DXUTState::GetHWNDFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 315
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetHWNDFoc
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetHWNDFoc:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetHWNDFoc
$LN5@GetHWNDFoc:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetHWNDFoc
$LN4@GetHWNDFoc:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ ENDP		; DXUTState::GetHWNDFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z PROC		; DXUTState::SetHWNDFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 315
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 54	 mov	 DWORD PTR [eax+84], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetHWNDFoc
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetHWNDFoc:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetHWNDFoc
$LN5@SetHWNDFoc:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetHWNDFoc
$LN4@SetHWNDFoc:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ENDP		; DXUTState::SetHWNDFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ PROC ; DXUTState::GetD3D11DeviceContext1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 308
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ ENDP ; DXUTState::GetD3D11DeviceContext1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z PROC ; DXUTState::SetD3D11DeviceContext1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 308
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 50	 mov	 DWORD PTR [eax+80], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11De:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ENDP ; DXUTState::SetD3D11DeviceContext1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ PROC ; DXUTState::GetD3D11Device1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 307
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ ENDP ; DXUTState::GetD3D11Device1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z PROC ; DXUTState::SetD3D11Device1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 307
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 4c	 mov	 DWORD PTR [eax+76], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11De:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ENDP ; DXUTState::SetD3D11Device1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ PROC ; DXUTState::GetD3D11RasterizerState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 305
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Ra
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11Ra:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11Ra
$LN5@GetD3D11Ra:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11Ra
$LN4@GetD3D11Ra:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ENDP ; DXUTState::GetD3D11RasterizerState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z PROC ; DXUTState::SetD3D11RasterizerState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 305
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 48	 mov	 DWORD PTR [eax+72], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Ra
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11Ra:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11Ra
$LN5@SetD3D11Ra:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11Ra
$LN4@SetD3D11Ra:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z ENDP ; DXUTState::SetD3D11RasterizerState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ PROC ; DXUTState::GetD3D11RenderTargetView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 304
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Re
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11Re:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11Re
$LN5@GetD3D11Re:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11Re
$LN4@GetD3D11Re:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ENDP ; DXUTState::GetD3D11RenderTargetView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z PROC ; DXUTState::SetD3D11RenderTargetView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 304
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 44	 mov	 DWORD PTR [eax+68], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Re
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11Re:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11Re
$LN5@SetD3D11Re:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11Re
$LN4@SetD3D11Re:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ENDP ; DXUTState::SetD3D11RenderTargetView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ PROC ; DXUTState::GetD3D11DepthStencilView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 303
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ENDP ; DXUTState::GetD3D11DepthStencilView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z PROC ; DXUTState::SetD3D11DepthStencilView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 303
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 40	 mov	 DWORD PTR [eax+64], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11De:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ENDP ; DXUTState::SetD3D11DepthStencilView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ PROC ; DXUTState::GetD3D11DepthStencil, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 302
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ENDP ; DXUTState::GetD3D11DepthStencil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z PROC ; DXUTState::SetD3D11DepthStencil, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 302
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 3c	 mov	 DWORD PTR [eax+60], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11De:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ENDP ; DXUTState::SetD3D11DepthStencil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; DXUTState::GetD3D11FeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 301
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11Fe
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11Fe:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11Fe
$LN5@GetD3D11Fe:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11Fe
$LN4@GetD3D11Fe:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; DXUTState::GetD3D11FeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z PROC ; DXUTState::SetD3D11FeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 301
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 38	 mov	 DWORD PTR [eax+56], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11Fe
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11Fe:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11Fe
$LN5@SetD3D11Fe:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11Fe
$LN4@SetD3D11Fe:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ENDP ; DXUTState::SetD3D11FeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ PROC ; DXUTState::GetD3D11DeviceContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 300
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ ENDP ; DXUTState::GetD3D11DeviceContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z PROC ; DXUTState::SetD3D11DeviceContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 300
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 34	 mov	 DWORD PTR [eax+52], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11De:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ENDP ; DXUTState::SetD3D11DeviceContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ PROC	; DXUTState::GetD3D11Device, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 299
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetD3D11De
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetD3D11De:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetD3D11De
$LN5@GetD3D11De:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetD3D11De
$LN4@GetD3D11De:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ ENDP	; DXUTState::GetD3D11Device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z PROC	; DXUTState::SetD3D11Device, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 299
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 30	 mov	 DWORD PTR [eax+48], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetD3D11De
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetD3D11De:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetD3D11De
$LN5@SetD3D11De:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetD3D11De
$LN4@SetD3D11De:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ENDP	; DXUTState::SetD3D11Device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ PROC	; DXUTState::GetDoNotStoreBufferSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 297
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  0002b	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDoNotSt
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetDoNotSt:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetDoNotSt
$LN5@GetDoNotSt:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetDoNotSt
$LN4@GetDoNotSt:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetDoNotStoreBufferSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetDoNotStoreBufferSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 297
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 48 2d	 mov	 BYTE PTR [eax+45], cl
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDoNotSt
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetDoNotSt:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetDoNotSt
$LN5@SetDoNotSt:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetDoNotSt
$LN4@SetDoNotSt:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetDoNotStoreBufferSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetRenderingOccluded@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetRenderingOccluded@DXUTState@@QAE_NXZ PROC		; DXUTState::GetRenderingOccluded, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 296
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8a 48 2c	 mov	 cl, BYTE PTR [eax+44]
  0002b	88 4d ef	 mov	 BYTE PTR $T1[ebp], cl
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8a 45 ef	 mov	 al, BYTE PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetRenderi
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetRenderi:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetRenderi
$LN5@GetRenderi:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetRenderi
$LN4@GetRenderi:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetRenderingOccluded@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetRenderingOccluded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetRenderingOccluded@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetRenderingOccluded@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetRenderingOccluded, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 296
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8a 4d 08	 mov	 cl, BYTE PTR _t$[ebp]
  00028	88 48 2c	 mov	 BYTE PTR [eax+44], cl
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetRenderi
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetRenderi:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetRenderi
$LN5@SetRenderi:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetRenderi
$LN4@SetRenderi:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetRenderingOccluded@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetRenderingOccluded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ PROC ; DXUTState::GetBackBufferSurfaceDescDXGI, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 295
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	83 c0 18	 add	 eax, 24			; 00000018H
  0002b	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetBackBuf
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetBackBuf:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetBackBuf
$LN5@GetBackBuf:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetBackBuf
$LN4@GetBackBuf:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ENDP ; DXUTState::GetBackBufferSurfaceDescDXGI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ PROC ; DXUTState::GetDXGISwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 294
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDXGISwa
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetDXGISwa:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetDXGISwa
$LN5@GetDXGISwa:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetDXGISwa
$LN4@GetDXGISwa:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ENDP ; DXUTState::GetDXGISwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z PROC ; DXUTState::SetDXGISwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 294
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDXGISwa
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetDXGISwa:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetDXGISwa
$LN5@SetDXGISwa:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetDXGISwa
$LN4@SetDXGISwa:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ENDP ; DXUTState::SetDXGISwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIOutputArraySize@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIOutputArraySize@DXUTState@@QAEIXZ PROC		; DXUTState::GetDXGIOutputArraySize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 293
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDXGIOut
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetDXGIOut:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetDXGIOut
$LN5@GetDXGIOut:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetDXGIOut
$LN4@GetDXGIOut:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetDXGIOutputArraySize@DXUTState@@QAEIXZ ENDP		; DXUTState::GetDXGIOutputArraySize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z PROC		; DXUTState::SetDXGIOutputArraySize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 293
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDXGIOut
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetDXGIOut:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetDXGIOut
$LN5@SetDXGIOut:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetDXGIOut
$LN4@SetDXGIOut:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z ENDP		; DXUTState::SetDXGIOutputArraySize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ PROC ; DXUTState::GetDXGIOutputArray, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 292
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDXGIOut
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetDXGIOut:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetDXGIOut
$LN5@GetDXGIOut:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetDXGIOut
$LN4@GetDXGIOut:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ ENDP ; DXUTState::GetDXGIOutputArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z PROC ; DXUTState::SetDXGIOutputArray, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 292
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDXGIOut
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetDXGIOut:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetDXGIOut
$LN5@SetDXGIOut:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetDXGIOut
$LN4@SetDXGIOut:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ENDP ; DXUTState::SetDXGIOutputArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ PROC	; DXUTState::GetDXGIAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 291
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDXGIAda
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetDXGIAda:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetDXGIAda
$LN5@GetDXGIAda:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetDXGIAda
$LN4@GetDXGIAda:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ ENDP	; DXUTState::GetDXGIAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z PROC ; DXUTState::SetDXGIAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 291
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDXGIAda
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetDXGIAda:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetDXGIAda
$LN5@SetDXGIAda:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetDXGIAda
$LN4@SetDXGIAda:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ENDP ; DXUTState::SetDXGIAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ PROC	; DXUTState::GetDXGIFactory, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 290
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002b	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002e	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00031	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00036	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetDXGIFac
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN6@GetDXGIFac:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetDXGIFac
$LN5@GetDXGIFac:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetDXGIFac
$LN4@GetDXGIFac:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ENDP	; DXUTState::GetDXGIFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z PROC ; DXUTState::SetDXGIFactory, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 290
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0002b	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00033	52		 push	 edx
  00034	8b cd		 mov	 ecx, ebp
  00036	50		 push	 eax
  00037	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetDXGIFac
  0003d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00042	58		 pop	 eax
  00043	5a		 pop	 edx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN6@SetDXGIFac:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetDXGIFac
$LN5@SetDXGIFac:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetDXGIFac
$LN4@SetDXGIFac:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ENDP ; DXUTState::SetDXGIFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ PROC ; DXUTState::GetCurrentDeviceSettings, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 287
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00020	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  0002d	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  00030	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00035	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00038	52		 push	 edx
  00039	8b cd		 mov	 ecx, ebp
  0003b	50		 push	 eax
  0003c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetCurrent
  00042	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00047	58		 pop	 eax
  00048	5a		 pop	 edx
  00049	83 c4 14	 add	 esp, 20			; 00000014H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
  00057	90		 npad	 1
$LN6@GetCurrent:
  00058	01 00 00 00	 DD	 1
  0005c	00 00 00 00	 DD	 $LN5@GetCurrent
$LN5@GetCurrent:
  00060	f7 ff ff ff	 DD	 -9			; fffffff7H
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $LN4@GetCurrent
$LN4@GetCurrent:
  0006c	6c		 DB	 108			; 0000006cH
  0006d	00		 DB	 0
?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ENDP ; DXUTState::GetCurrentDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z PROC ; DXUTState::SetCurrentDeviceSettings, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 287
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0001d	e8 00 00 00 00	 call	 ??0DXUTLock@@QAE@XZ	; DXUTLock::DXUTLock
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00028	89 08		 mov	 DWORD PTR [eax], ecx
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR _l$[ebp]
  0002d	e8 00 00 00 00	 call	 ??1DXUTLock@@QAE@XZ	; DXUTLock::~DXUTLock
  00032	52		 push	 edx
  00033	8b cd		 mov	 ecx, ebp
  00035	50		 push	 eax
  00036	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@SetCurrent
  0003c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00041	58		 pop	 eax
  00042	5a		 pop	 edx
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
  00053	90		 npad	 1
$LN6@SetCurrent:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN5@SetCurrent
$LN5@SetCurrent:
  0005c	f7 ff ff ff	 DD	 -9			; fffffff7H
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@SetCurrent
$LN4@SetCurrent:
  00068	6c		 DB	 108			; 0000006cH
  00069	00		 DB	 0
?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ENDP ; DXUTState::SetCurrentDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Destroy@DXUTState@@QAEXXZ
_TEXT	SEGMENT
tv73 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?Destroy@DXUTState@@QAEXXZ PROC				; DXUTState::Destroy, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 281
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 b8 e8 05 00
	00 00		 cmp	 DWORD PTR [eax+1512], 0
  00025	74 3b		 je	 SHORT $LN1@Destroy
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 91 e8 05 00
	00		 mov	 edx, DWORD PTR [ecx+1512]
  00030	89 55 f4	 mov	 DWORD PTR $T1[ebp], edx
  00033	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  00036	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  00039	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0003d	74 0f		 je	 SHORT $LN4@Destroy
  0003f	6a 01		 push	 1
  00041	8b 4d f8	 mov	 ecx, DWORD PTR $T2[ebp]
  00044	e8 00 00 00 00	 call	 ??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z
  00049	89 45 f0	 mov	 DWORD PTR tv73[ebp], eax
  0004c	eb 07		 jmp	 SHORT $LN5@Destroy
$LN4@Destroy:
  0004e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN5@Destroy:
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	c7 81 e8 05 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+1512], 0
$LN1@Destroy:
; Line 282
  00062	6a 00		 push	 0
  00064	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
; Line 283
  00069	8b f4		 mov	 esi, esp
  0006b	68 00 00 00 00	 push	 OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 284
  0007d	5e		 pop	 esi
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
?Destroy@DXUTState@@QAEXXZ ENDP				; DXUTState::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@DXUTState@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Create@DXUTState@@QAEXXZ PROC				; DXUTState::Create, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 252
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 253
  0000f	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?g_bThreadSafe@@3_NA, 1 ; g_bThreadSafe
; Line 254
  00016	8b f4		 mov	 esi, esp
  00018	68 e8 03 00 00	 push	 1000			; 000003e8H
  0001d	68 00 00 00 00	 push	 OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 256
  0002f	68 70 0e 00 00	 push	 3696			; 00000e70H
  00034	6a 00		 push	 0
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 _memset
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 257
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	c7 81 5c 03 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+860], -1
; Line 258
  0004f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00052	c7 82 60 03 00
	00 ff ff ff ff	 mov	 DWORD PTR [edx+864], -1
; Line 259
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 80 44 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+324], 0
; Line 260
  00069	b9 02 00 00 00	 mov	 ecx, 2
  0006e	6b d1 00	 imul	 edx, ecx, 0
  00071	33 c0		 xor	 eax, eax
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	66 89 84 11 48
	01 00 00	 mov	 WORD PTR [ecx+edx+328], ax
; Line 261
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	c6 82 48 03 00
	00 00		 mov	 BYTE PTR [edx+840], 0
; Line 262
  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c6 80 49 03 00
	00 00		 mov	 BYTE PTR [eax+841], 0
; Line 263
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	c7 81 4c 03 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+844], -1
; Line 264
  0009f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	c7 82 54 03 00
	00 ff ff ff ff	 mov	 DWORD PTR [edx+852], -1
; Line 265
  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	c7 80 78 03 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+888], -1
; Line 266
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	c6 81 19 01 00
	00 01		 mov	 BYTE PTR [ecx+281], 1
; Line 267
  000c3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c6	c6 82 0f 01 00
	00 01		 mov	 BYTE PTR [edx+271], 1
; Line 268
  000cd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	c6 80 e1 00 00
	00 01		 mov	 BYTE PTR [eax+225], 1
; Line 269
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	c6 81 2a 01 00
	00 01		 mov	 BYTE PTR [ecx+298], 1
; Line 270
  000e1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	c6 82 e3 00 00
	00 01		 mov	 BYTE PTR [edx+227], 1
; Line 271
  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	c6 80 0c 01 00
	00 01		 mov	 BYTE PTR [eax+268], 1
; Line 272
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	c6 81 0d 01 00
	00 01		 mov	 BYTE PTR [ecx+269], 1
; Line 273
  000ff	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00102	c6 82 0e 01 00
	00 01		 mov	 BYTE PTR [edx+270], 1
; Line 274
  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	c6 80 7e 03 00
	00 01		 mov	 BYTE PTR [eax+894], 1
; Line 275
  00113	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0011e	f3 0f 11 81 d4
	00 00 00	 movss	 DWORD PTR [ecx+212], xmm0
; Line 276
  00126	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00129	c6 82 40 01 00
	00 01		 mov	 BYTE PTR [edx+320], 1
; Line 277
  00130	5e		 pop	 esi
  00131	83 c4 04	 add	 esp, 4
  00134	3b ec		 cmp	 ebp, esp
  00136	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013b	8b e5		 mov	 esp, ebp
  0013d	5d		 pop	 ebp
  0013e	c3		 ret	 0
?Create@DXUTState@@QAEXXZ ENDP				; DXUTState::Create
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DXUTState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DXUTState@@QAE@XZ PROC				; DXUTState::~DXUTState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 249
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Destroy@DXUTState@@QAEXXZ ; DXUTState::Destroy
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1DXUTState@@QAE@XZ ENDP				; DXUTState::~DXUTState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTState@@QAE@XZ PROC				; DXUTState::DXUTState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 248
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Create@DXUTState@@QAEXXZ ; DXUTState::Create
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0DXUTState@@QAE@XZ ENDP				; DXUTState::DXUTState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DXUTLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DXUTLock@@QAE@XZ PROC				; DXUTLock::~DXUTLock, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 40
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?g_bThreadSafe@@3_NA ; g_bThreadSafe
  00016	85 c0		 test	 eax, eax
  00018	74 14		 je	 SHORT $LN2@DXUTLock
  0001a	8b f4		 mov	 esi, esp
  0001c	68 00 00 00 00	 push	 OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00027	3b f4		 cmp	 esi, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTLock:
  0002e	5e		 pop	 esi
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??1DXUTLock@@QAE@XZ ENDP				; DXUTLock::~DXUTLock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTLock@@QAE@XZ PROC				; DXUTLock::DXUTLock, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 38
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?g_bThreadSafe@@3_NA ; g_bThreadSafe
  00016	85 c0		 test	 eax, eax
  00018	74 14		 je	 SHORT $LN2@DXUTLock
  0001a	8b f4		 mov	 esi, esp
  0001c	68 00 00 00 00	 push	 OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
  00027	3b f4		 cmp	 esi, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTLock:
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	5e		 pop	 esi
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0DXUTLock@@QAE@XZ ENDP				; DXUTLock::DXUTLock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 08		 push	 8
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 21		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 10		 mov	 edx, DWORD PTR [eax]
  00065	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00068	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006b	89 11		 mov	 DWORD PTR [ecx], edx
  0006d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00070	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00073	89 55 e4	 mov	 DWORD PTR tv74[ebp], edx
  00076	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00078	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  0007f	8b 45 e4	 mov	 eax, DWORD PTR tv74[ebp]
  00082	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
  00085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  0008c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00096	59		 pop	 ecx
  00097	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 03	 shl	 eax, 3
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z PROC ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	6b 45 08 1c	 imul	 eax, DWORD PTR __Pos$[ebp], 28
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	03 41 04	 add	 eax, DWORD PTR [ecx+4]
; Line 1210
  000b0	5e		 pop	 esi
  000b1	83 c4 04	 add	 esp, 4
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 04 00	 ret	 4
??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z ENDP ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ PROC ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	99		 cdq
  0001b	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00020	f7 f9		 idiv	 ecx
; Line 1149
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z PROC ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z ENDP ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ PROC ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ENDP ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1074
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1075
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1076
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1069
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1070
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1071
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1040
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1030
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1158
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00020	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00023	75 09		 jne	 SHORT $LN3@empty
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN4@empty
$LN3@empty:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN4@empty:
  00035	8a 45 f8	 mov	 al, BYTE PTR tv75[ebp]
; Line 1159
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1074
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1075
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1076
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1069
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1070
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1071
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1040
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1030
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; CD3D11Enumeration::GetREFFeaturevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutdevice11.h
; Line 76
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; CD3D11Enumeration::GetREFFeaturevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; CD3D11Enumeration::GetWARPFeaturevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutdevice11.h
; Line 75
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; CD3D11Enumeration::GetWARPFeaturevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_modifySettings$ = 8					; size = 4
?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z PROC ; DXUTApplyDefaultDeviceSettings
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4285
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4286
  00003	6a 64		 push	 100			; 00000064H
  00005	6a 00		 push	 0
  00007	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 _memset
  00010	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 4288
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  00016	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 4289
  0001d	8b 55 08	 mov	 edx, DWORD PTR _modifySettings$[ebp]
  00020	c6 42 58 01	 mov	 BYTE PTR [edx+88], 1
; Line 4290
  00024	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  00027	c7 40 5c 2d 00
	00 00		 mov	 DWORD PTR [eax+92], 45	; 0000002dH
; Line 4292
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  00031	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00034	83 ca 02	 or	 edx, 2
  00037	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  0003a	89 50 4c	 mov	 DWORD PTR [eax+76], edx
; Line 4296
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  00040	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
; Line 4297
  00047	8b 55 08	 mov	 edx, DWORD PTR _modifySettings$[ebp]
  0004a	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 4298
  00051	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  00054	c7 40 54 00 00
	00 00		 mov	 DWORD PTR [eax+84], 0
; Line 4299
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  0005e	c7 41 38 02 00
	00 00		 mov	 DWORD PTR [ecx+56], 2
; Line 4300
  00065	8b 55 08	 mov	 edx, DWORD PTR _modifySettings$[ebp]
  00068	c7 42 20 1d 00
	00 00		 mov	 DWORD PTR [edx+32], 29	; 0000001dH
; Line 4301
  0006f	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  00072	c7 40 14 58 02
	00 00		 mov	 DWORD PTR [eax+20], 600	; 00000258H
; Line 4302
  00079	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  0007c	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 4303
  00083	8b 55 08	 mov	 edx, DWORD PTR _modifySettings$[ebp]
  00086	c7 42 1c 00 00
	00 00		 mov	 DWORD PTR [edx+28], 0
; Line 4304
  0008d	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  00090	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0
; Line 4305
  00097	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  0009a	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
; Line 4306
  000a1	8b 55 08	 mov	 edx, DWORD PTR _modifySettings$[ebp]
  000a4	c7 42 10 20 03
	00 00		 mov	 DWORD PTR [edx+16], 800	; 00000320H
; Line 4307
  000ab	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  000ae	c7 40 34 20 00
	00 00		 mov	 DWORD PTR [eax+52], 32	; 00000020H
; Line 4308
  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  000b8	c7 41 48 02 00
	00 00		 mov	 DWORD PTR [ecx+72], 2
; Line 4309
  000bf	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  000c4	8b 55 08	 mov	 edx, DWORD PTR _modifySettings$[ebp]
  000c7	89 42 3c	 mov	 DWORD PTR [edx+60], eax
; Line 4310
  000ca	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  000cd	c7 40 2c 01 00
	00 00		 mov	 DWORD PTR [eax+44], 1
; Line 4311
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  000d7	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0
; Line 4312
  000de	8b 55 08	 mov	 edx, DWORD PTR _modifySettings$[ebp]
  000e1	c7 42 44 00 00
	00 00		 mov	 DWORD PTR [edx+68], 0
; Line 4313
  000e8	8b 45 08	 mov	 eax, DWORD PTR _modifySettings$[ebp]
  000eb	c7 40 40 01 00
	00 00		 mov	 DWORD PTR [eax+64], 1
; Line 4314
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR _modifySettings$[ebp]
  000f5	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
; Line 4315
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	5d		 pop	 ebp
  00104	c3		 ret	 0
?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z ENDP ; DXUTApplyDefaultDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
tv82 = -9						; size = 1
tv79 = -8						; size = 4
tv76 = -4						; size = 4
_pObj$ = 8						; size = 4
_pstrName$ = 12						; size = 4
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z PROC	; DXUT_SetDebugName, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.h
; Line 197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 198
  00018	83 7d 08 00	 cmp	 DWORD PTR _pObj$[ebp], 0
  0001c	74 4e		 je	 SHORT $LN2@DXUT_SetDe
; Line 199
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _pstrName$[ebp]
  00021	89 45 fc	 mov	 DWORD PTR tv76[ebp], eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR tv76[ebp]
  00027	83 c1 01	 add	 ecx, 1
  0002a	89 4d f8	 mov	 DWORD PTR tv79[ebp], ecx
$LL4@DXUT_SetDe:
  0002d	8b 55 fc	 mov	 edx, DWORD PTR tv76[ebp]
  00030	8a 02		 mov	 al, BYTE PTR [edx]
  00032	88 45 f7	 mov	 BYTE PTR tv82[ebp], al
  00035	83 45 fc 01	 add	 DWORD PTR tv76[ebp], 1
  00039	80 7d f7 00	 cmp	 BYTE PTR tv82[ebp], 0
  0003d	75 ee		 jne	 SHORT $LL4@DXUT_SetDe
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR tv76[ebp]
  00042	2b 4d f8	 sub	 ecx, DWORD PTR tv79[ebp]
  00045	89 4d f0	 mov	 DWORD PTR tv72[ebp], ecx
  00048	8b f4		 mov	 esi, esp
  0004a	8b 55 0c	 mov	 edx, DWORD PTR _pstrName$[ebp]
  0004d	52		 push	 edx
  0004e	8b 45 f0	 mov	 eax, DWORD PTR tv72[ebp]
  00051	50		 push	 eax
  00052	68 00 00 00 00	 push	 OFFSET _WKPDID_D3DDebugObjectName
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pObj$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 45 08	 mov	 eax, DWORD PTR _pObj$[ebp]
  0005f	50		 push	 eax
  00060	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  00063	ff d1		 call	 ecx
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUT_SetDe:
; Line 200
  0006c	5e		 pop	 esi
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ENDP	; DXUT_SetDebugName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
?DXUTDestroyState@@YGXXZ PROC				; DXUTDestroyState
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 468
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 469
  0001b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
  00022	74 34		 je	 SHORT $LN2@DXUTDestro
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A ; g_pDXUTState
  00029	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0002f	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx
  00032	83 7d fc 00	 cmp	 DWORD PTR $T2[ebp], 0
  00036	74 0f		 je	 SHORT $LN4@DXUTDestro
  00038	6a 01		 push	 1
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  0003d	e8 00 00 00 00	 call	 ??_GDXUTState@@QAEPAXI@Z
  00042	89 45 f4	 mov	 DWORD PTR tv69[ebp], eax
  00045	eb 07		 jmp	 SHORT $LN5@DXUTDestro
$LN4@DXUTDestro:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN5@DXUTDestro:
  0004e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
$LN2@DXUTDestro:
; Line 470
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?DXUTDestroyState@@YGXXZ ENDP				; DXUTDestroyState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DXUTCreateState@@YGJXZ PROC				; DXUTCreateState
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 457
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTCreateState@@YGJXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  0001b	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  00022	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 458
  0003a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
  00041	75 5c		 jne	 SHORT $LN2@DXUTCreate
; Line 460
  00043	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00048	68 70 0e 00 00	 push	 3696			; 00000e70H
  0004d	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00052	83 c4 08	 add	 esp, 8
  00055	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005f	83 7d ec 00	 cmp	 DWORD PTR $T2[ebp], 0
  00063	74 0d		 je	 SHORT $LN5@DXUTCreate
  00065	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  00068	e8 00 00 00 00	 call	 ??0DXUTState@@QAE@XZ	; DXUTState::DXUTState
  0006d	89 45 e8	 mov	 DWORD PTR tv74[ebp], eax
  00070	eb 07		 jmp	 SHORT $LN6@DXUTCreate
$LN5@DXUTCreate:
  00072	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@DXUTCreate:
  00079	8b 45 e8	 mov	 eax, DWORD PTR tv74[ebp]
  0007c	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00086	8b 4d f0	 mov	 ecx, DWORD PTR $T3[ebp]
  00089	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, ecx ; g_pDXUTState
; Line 461
  0008f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
  00096	75 07		 jne	 SHORT $LN2@DXUTCreate
; Line 462
  00098	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  0009d	eb 02		 jmp	 SHORT $LN3@DXUTCreate
$LN2@DXUTCreate:
; Line 464
  0009f	33 c0		 xor	 eax, eax
$LN3@DXUTCreate:
; Line 465
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ab	59		 pop	 ecx
  000ac	83 c4 18	 add	 esp, 24			; 00000018H
  000af	3b ec		 cmp	 ebp, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTCreateState@@YGJXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?DXUTCreateState@@YGJXZ:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTCreateState@@YGJXZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTCreateState@@YGJXZ ENDP				; DXUTCreateState
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_bMouseButtons$ = -4					; size = 4
_vButton$ = 8						; size = 1
?DXUTIsMouseButtonDown@@YG_NE@Z PROC			; DXUTIsMouseButtonDown
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4189
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4190
  00014	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ?GetMouseButtons@DXUTState@@QAEPA_NXZ ; DXUTState::GetMouseButtons
  00020	89 45 fc	 mov	 DWORD PTR _bMouseButtons$[ebp], eax
; Line 4191
  00023	0f b6 45 08	 movzx	 eax, BYTE PTR _vButton$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?DXUTMapButtonToArrayIndex@@YAHE@Z ; DXUTMapButtonToArrayIndex
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f8	 mov	 DWORD PTR _nIndex$[ebp], eax
; Line 4192
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _bMouseButtons$[ebp]
  00036	03 4d f8	 add	 ecx, DWORD PTR _nIndex$[ebp]
  00039	8a 01		 mov	 al, BYTE PTR [ecx]
; Line 4193
  0003b	83 c4 08	 add	 esp, 8
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?DXUTIsMouseButtonDown@@YG_NE@Z ENDP			; DXUTIsMouseButtonDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -12						; size = 4
_bKeys$ = -8						; size = 4
_bLastKeys$ = -4					; size = 4
_vKey$ = 8						; size = 1
?DXUTWasKeyPressed@@YG_NE@Z PROC			; DXUTWasKeyPressed
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4182
  0001b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00020	8b c8		 mov	 ecx, eax
  00022	e8 00 00 00 00	 call	 ?GetLastKeys@DXUTState@@QAEPA_NXZ ; DXUTState::GetLastKeys
  00027	89 45 fc	 mov	 DWORD PTR _bLastKeys$[ebp], eax
; Line 4183
  0002a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ?GetKeys@DXUTState@@QAEPA_NXZ ; DXUTState::GetKeys
  00036	89 45 f8	 mov	 DWORD PTR _bKeys$[ebp], eax
; Line 4184
  00039	6a 01		 push	 1
  0003b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00040	8b c8		 mov	 ecx, eax
  00042	e8 00 00 00 00	 call	 ?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z ; DXUTState::SetAppCalledWasKeyPressed
; Line 4185
  00047	0f b6 45 08	 movzx	 eax, BYTE PTR _vKey$[ebp]
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _bLastKeys$[ebp]
  0004e	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  00052	85 d2		 test	 edx, edx
  00054	75 18		 jne	 SHORT $LN3@DXUTWasKey
  00056	0f b6 45 08	 movzx	 eax, BYTE PTR _vKey$[ebp]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _bKeys$[ebp]
  0005d	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  00061	85 d2		 test	 edx, edx
  00063	74 09		 je	 SHORT $LN3@DXUTWasKey
  00065	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0006c	eb 07		 jmp	 SHORT $LN4@DXUTWasKey
$LN3@DXUTWasKey:
  0006e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN4@DXUTWasKey:
  00075	8a 45 f4	 mov	 al, BYTE PTR tv83[ebp]
; Line 4186
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
?DXUTWasKeyPressed@@YG_NE@Z ENDP			; DXUTWasKeyPressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -8						; size = 4
_bKeys$ = -4						; size = 4
_vKey$ = 8						; size = 1
?DXUTIsKeyDown@@YG_NE@Z PROC				; DXUTIsKeyDown
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4170
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4171
  00015	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001a	8b c8		 mov	 ecx, eax
  0001c	e8 00 00 00 00	 call	 ?GetKeys@DXUTState@@QAEPA_NXZ ; DXUTState::GetKeys
  00021	89 45 fc	 mov	 DWORD PTR _bKeys$[ebp], eax
; Line 4172
  00024	0f b6 45 08	 movzx	 eax, BYTE PTR _vKey$[ebp]
  00028	3d a0 00 00 00	 cmp	 eax, 160		; 000000a0H
  0002d	7c 3c		 jl	 SHORT $LN4@DXUTIsKeyD
  0002f	0f b6 4d 08	 movzx	 ecx, BYTE PTR _vKey$[ebp]
  00033	81 f9 a5 00 00
	00		 cmp	 ecx, 165		; 000000a5H
  00039	7f 30		 jg	 SHORT $LN4@DXUTIsKeyD
; Line 4173
  0003b	0f b6 55 08	 movzx	 edx, BYTE PTR _vKey$[ebp]
  0003f	8b f4		 mov	 esi, esp
  00041	52		 push	 edx
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetAsyncKeyState@4
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	98		 cwde
  00050	85 c0		 test	 eax, eax
  00052	74 09		 je	 SHORT $LN7@DXUTIsKeyD
  00054	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  0005b	eb 07		 jmp	 SHORT $LN8@DXUTIsKeyD
$LN7@DXUTIsKeyD:
  0005d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN8@DXUTIsKeyD:
  00064	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
  00067	eb 35		 jmp	 SHORT $LN5@DXUTIsKeyD
  00069	eb 33		 jmp	 SHORT $LN5@DXUTIsKeyD
$LN4@DXUTIsKeyD:
; Line 4174
  0006b	0f b6 4d 08	 movzx	 ecx, BYTE PTR _vKey$[ebp]
  0006f	83 f9 01	 cmp	 ecx, 1
  00072	7c 20		 jl	 SHORT $LN2@DXUTIsKeyD
  00074	0f b6 55 08	 movzx	 edx, BYTE PTR _vKey$[ebp]
  00078	83 fa 06	 cmp	 edx, 6
  0007b	7f 17		 jg	 SHORT $LN2@DXUTIsKeyD
  0007d	0f b6 45 08	 movzx	 eax, BYTE PTR _vKey$[ebp]
  00081	83 f8 03	 cmp	 eax, 3
  00084	74 0e		 je	 SHORT $LN2@DXUTIsKeyD
; Line 4175
  00086	0f b6 4d 08	 movzx	 ecx, BYTE PTR _vKey$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 ?DXUTIsMouseButtonDown@@YG_NE@Z ; DXUTIsMouseButtonDown
  00090	eb 0c		 jmp	 SHORT $LN5@DXUTIsKeyD
; Line 4176
  00092	eb 0a		 jmp	 SHORT $LN5@DXUTIsKeyD
$LN2@DXUTIsKeyD:
; Line 4177
  00094	0f b6 55 08	 movzx	 edx, BYTE PTR _vKey$[ebp]
  00098	8b 45 fc	 mov	 eax, DWORD PTR _bKeys$[ebp]
  0009b	8a 04 10	 mov	 al, BYTE PTR [eax+edx]
$LN5@DXUTIsKeyD:
; Line 4178
  0009e	5e		 pop	 esi
  0009f	83 c4 08	 add	 esp, 8
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 04 00	 ret	 4
?DXUTIsKeyDown@@YG_NE@Z ENDP				; DXUTIsKeyDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetAutomation@@YG_NXZ PROC				; DXUTGetAutomation
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetAutomation@DXUTState@@QAE_NXZ ; DXUTState::GetAutomation
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetAutomation@@YG_NXZ ENDP				; DXUTGetAutomation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetShowMsgBoxOnError@@YG_NXZ PROC			; DXUTGetShowMsgBoxOnError
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 591
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ ; DXUTState::GetShowMsgBoxOnError
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetShowMsgBoxOnError@@YG_NXZ ENDP			; DXUTGetShowMsgBoxOnError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetExitCode@@YGHXZ PROC				; DXUTGetExitCode
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 590
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetExitCode@@YGHXZ ENDP				; DXUTGetExitCode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTIsActive@@YG_NXZ PROC				; DXUTIsActive
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 589
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetActive@DXUTState@@QAE_NXZ ; DXUTState::GetActive
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTIsActive@@YG_NXZ ENDP				; DXUTIsActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
?DXUTIsTimePaused@@YG_NXZ PROC				; DXUTIsTimePaused
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 588
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00010	8b c8		 mov	 ecx, eax
  00012	e8 00 00 00 00	 call	 ?GetPauseTimeCount@DXUTState@@QAEHXZ ; DXUTState::GetPauseTimeCount
  00017	85 c0		 test	 eax, eax
  00019	7e 09		 jle	 SHORT $LN3@DXUTIsTime
  0001b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN4@DXUTIsTime
$LN3@DXUTIsTime:
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@DXUTIsTime:
  0002b	8a 45 fc	 mov	 al, BYTE PTR tv68[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?DXUTIsTimePaused@@YG_NXZ ENDP				; DXUTIsTimePaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
?DXUTIsRenderingPaused@@YG_NXZ PROC			; DXUTIsRenderingPaused
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00010	8b c8		 mov	 ecx, eax
  00012	e8 00 00 00 00	 call	 ?GetPauseRenderingCount@DXUTState@@QAEHXZ ; DXUTState::GetPauseRenderingCount
  00017	85 c0		 test	 eax, eax
  00019	7e 09		 jle	 SHORT $LN3@DXUTIsRend
  0001b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN4@DXUTIsRend
$LN3@DXUTIsRend:
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@DXUTIsRend:
  0002b	8a 45 fc	 mov	 al, BYTE PTR tv68[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?DXUTIsRenderingPaused@@YG_NXZ ENDP			; DXUTIsRenderingPaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -8						; size = 4
_pDS$ = -4						; size = 4
?DXUTIsVsyncEnabled@@YG_NXZ PROC			; DXUTIsVsyncEnabled
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4158
  00014	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00020	89 45 fc	 mov	 DWORD PTR _pDS$[ebp], eax
; Line 4159
  00023	83 7d fc 00	 cmp	 DWORD PTR _pDS$[ebp], 0
  00027	74 20		 je	 SHORT $LN2@DXUTIsVsyn
; Line 4161
  00029	8b 45 fc	 mov	 eax, DWORD PTR _pDS$[ebp]
  0002c	83 78 50 00	 cmp	 DWORD PTR [eax+80], 0
  00030	75 09		 jne	 SHORT $LN5@DXUTIsVsyn
  00032	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv71[ebp], 1
  00039	eb 07		 jmp	 SHORT $LN6@DXUTIsVsyn
$LN5@DXUTIsVsyn:
  0003b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN6@DXUTIsVsyn:
  00042	8a 45 f8	 mov	 al, BYTE PTR tv71[ebp]
  00045	eb 04		 jmp	 SHORT $LN3@DXUTIsVsyn
; Line 4163
  00047	eb 02		 jmp	 SHORT $LN3@DXUTIsVsyn
$LN2@DXUTIsVsyn:
; Line 4165
  00049	b0 01		 mov	 al, 1
$LN3@DXUTIsVsyn:
; Line 4167
  0004b	83 c4 08	 add	 esp, 8
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?DXUTIsVsyncEnabled@@YG_NXZ ENDP			; DXUTIsVsyncEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDeviceStats@@YGPB_WXZ PROC			; DXUTGetDeviceStats
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 586
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetDeviceStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetDeviceStats
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetDeviceStats@@YGPB_WXZ ENDP			; DXUTGetDeviceStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -12						; size = 4
_pstrFPS$ = -8						; size = 4
_pstrFrameStats$ = -4					; size = 4
_bShowFPS$ = 8						; size = 1
?DXUTGetFrameStats@@YGPB_W_N@Z PROC			; DXUTGetFrameStats
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4057
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4058
  0001c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ?GetFrameStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetFrameStats
  00028	89 45 fc	 mov	 DWORD PTR _pstrFrameStats$[ebp], eax
; Line 4059
  0002b	0f b6 45 08	 movzx	 eax, BYTE PTR _bShowFPS$[ebp]
  0002f	85 c0		 test	 eax, eax
  00031	74 11		 je	 SHORT $LN3@DXUTGetFra
  00033	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ?GetFPSStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetFPSStats
  0003f	89 45 f4	 mov	 DWORD PTR tv72[ebp], eax
  00042	eb 07		 jmp	 SHORT $LN4@DXUTGetFra
$LN3@DXUTGetFra:
  00044	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], OFFSET $SG153656
$LN4@DXUTGetFra:
  0004b	8b 4d f4	 mov	 ecx, DWORD PTR tv72[ebp]
  0004e	89 4d f8	 mov	 DWORD PTR _pstrFPS$[ebp], ecx
; Line 4060
  00051	8b f4		 mov	 esi, esp
  00053	8b 55 f8	 mov	 edx, DWORD PTR _pstrFPS$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ?GetStaticFrameStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetStaticFrameStats
  00063	50		 push	 eax
  00064	68 00 01 00 00	 push	 256			; 00000100H
  00069	8b 45 fc	 mov	 eax, DWORD PTR _pstrFrameStats$[ebp]
  0006c	50		 push	 eax
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__swprintf_s
  00073	83 c4 10	 add	 esp, 16			; 00000010H
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4061
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _pstrFrameStats$[ebp]
; Line 4062
  00080	5e		 pop	 esi
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
?DXUTGetFrameStats@@YGPB_W_N@Z ENDP			; DXUTGetFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetWindowTitle@@YGPB_WXZ PROC			; DXUTGetWindowTitle
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 585
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetWindowTitle@DXUTState@@QAEPA_WXZ ; DXUTState::GetWindowTitle
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetWindowTitle@@YGPB_WXZ ENDP			; DXUTGetWindowTitle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetFPS@@YGMXZ PROC					; DXUTGetFPS
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 584
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetFPS@DXUTState@@QAEMXZ ; DXUTState::GetFPS
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetFPS@@YGMXZ ENDP					; DXUTGetFPS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTIsInGammaCorrectMode@@YG_NXZ PROC			; DXUTIsInGammaCorrectMode
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 594
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ ; DXUTState::GetIsInGammaCorrectMode
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTIsInGammaCorrectMode@@YG_NXZ ENDP			; DXUTIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTIsWindowed@@YG_NXZ PROC				; DXUTIsWindowed
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 593
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
  00015	83 c4 04	 add	 esp, 4
  00018	3b ec		 cmp	 ebp, esp
  0001a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?DXUTIsWindowed@@YG_NXZ ENDP				; DXUTIsWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetElapsedTime@@YGMXZ PROC				; DXUTGetElapsedTime
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetElapsedTime@DXUTState@@QAEMXZ ; DXUTState::GetElapsedTime
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetElapsedTime@@YGMXZ ENDP				; DXUTGetElapsedTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetTime@@YGNXZ PROC				; DXUTGetTime
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetTime@DXUTState@@QAENXZ ; DXUTState::GetTime
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetTime@@YGNXZ ENDP				; DXUTGetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
?DXUTGetFullsceenClientRectAtModeChange@@YG?AUtagRECT@@XZ PROC ; DXUTGetFullsceenClientRectAtModeChange
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 581
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _rc$[ebp], 0
  00031	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rc$[ebp+4], 0
  00038	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferWidthAtModeChange
  00044	89 45 f0	 mov	 DWORD PTR _rc$[ebp+8], eax
  00047	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferHeightAtModeChange
  00053	89 45 f4	 mov	 DWORD PTR _rc$[ebp+12], eax
  00056	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  00059	8b 4d e8	 mov	 ecx, DWORD PTR _rc$[ebp]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx
  0005e	8b 55 ec	 mov	 edx, DWORD PTR _rc$[ebp+4]
  00061	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  00067	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0006a	8b 55 f4	 mov	 edx, DWORD PTR _rc$[ebp+12]
  0006d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00070	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  00073	52		 push	 edx
  00074	8b cd		 mov	 ecx, ebp
  00076	50		 push	 eax
  00077	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@DXUTGetFul
  0007d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00082	58		 pop	 eax
  00083	5a		 pop	 edx
  00084	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00087	33 cd		 xor	 ecx, ebp
  00089	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00091	3b ec		 cmp	 ebp, esp
  00093	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
  0009e	8b ff		 npad	 2
$LN5@DXUTGetFul:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@DXUTGetFul
$LN4@DXUTGetFul:
  000a8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000ac	10 00 00 00	 DD	 16			; 00000010H
  000b0	00 00 00 00	 DD	 $LN3@DXUTGetFul
$LN3@DXUTGetFul:
  000b4	72		 DB	 114			; 00000072H
  000b5	63		 DB	 99			; 00000063H
  000b6	00		 DB	 0
?DXUTGetFullsceenClientRectAtModeChange@@YG?AUtagRECT@@XZ ENDP ; DXUTGetFullsceenClientRectAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ PROC ; DXUTGetWindowClientRectAtModeChange
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 580
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _rc$[ebp], 0
  00031	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rc$[ebp+4], 0
  00038	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferWidthAtModeChange
  00044	89 45 f0	 mov	 DWORD PTR _rc$[ebp+8], eax
  00047	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferHeightAtModeChange
  00053	89 45 f4	 mov	 DWORD PTR _rc$[ebp+12], eax
  00056	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  00059	8b 4d e8	 mov	 ecx, DWORD PTR _rc$[ebp]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx
  0005e	8b 55 ec	 mov	 edx, DWORD PTR _rc$[ebp+4]
  00061	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  00067	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0006a	8b 55 f4	 mov	 edx, DWORD PTR _rc$[ebp+12]
  0006d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00070	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  00073	52		 push	 edx
  00074	8b cd		 mov	 ecx, ebp
  00076	50		 push	 eax
  00077	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@DXUTGetWin
  0007d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00082	58		 pop	 eax
  00083	5a		 pop	 edx
  00084	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00087	33 cd		 xor	 ecx, ebp
  00089	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00091	3b ec		 cmp	 ebp, esp
  00093	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
  0009e	8b ff		 npad	 2
$LN5@DXUTGetWin:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@DXUTGetWin
$LN4@DXUTGetWin:
  000a8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000ac	10 00 00 00	 DD	 16			; 00000010H
  000b0	00 00 00 00	 DD	 $LN3@DXUTGetWin
$LN3@DXUTGetWin:
  000b4	72		 DB	 114			; 00000072H
  000b5	63		 DB	 99			; 00000063H
  000b6	00		 DB	 0
?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ ENDP ; DXUTGetWindowClientRectAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -60						; size = 16
$T2 = -44						; size = 16
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
?DXUTGetWindowHeight@@YGJXZ PROC			; DXUTGetWindowHeight
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	57		 push	 edi
  00007	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0000a	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00020	8d 45 c4	 lea	 eax, DWORD PTR $T1[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRect
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d d4	 mov	 DWORD PTR $T2[ebp], ecx
  0002e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00031	89 55 d8	 mov	 DWORD PTR $T2[ebp+4], edx
  00034	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00037	89 4d dc	 mov	 DWORD PTR $T2[ebp+8], ecx
  0003a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0003d	89 55 e0	 mov	 DWORD PTR $T2[ebp+12], edx
  00040	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00043	89 45 e8	 mov	 DWORD PTR _rc$[ebp], eax
  00046	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+4]
  00049	89 4d ec	 mov	 DWORD PTR _rc$[ebp+4], ecx
  0004c	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+8]
  0004f	89 55 f0	 mov	 DWORD PTR _rc$[ebp+8], edx
  00052	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp+12]
  00055	89 45 f4	 mov	 DWORD PTR _rc$[ebp+12], eax
  00058	8b 45 f4	 mov	 eax, DWORD PTR _rc$[ebp+12]
  0005b	2b 45 ec	 sub	 eax, DWORD PTR _rc$[ebp+4]
  0005e	52		 push	 edx
  0005f	8b cd		 mov	 ecx, ebp
  00061	50		 push	 eax
  00062	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@DXUTGetWin
  00068	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006d	58		 pop	 eax
  0006e	5a		 pop	 edx
  0006f	5f		 pop	 edi
  00070	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00073	33 cd		 xor	 ecx, ebp
  00075	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007a	83 c4 3c	 add	 esp, 60			; 0000003cH
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN5@DXUTGetWin:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@DXUTGetWin
$LN4@DXUTGetWin:
  00090	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00094	10 00 00 00	 DD	 16			; 00000010H
  00098	00 00 00 00	 DD	 $LN3@DXUTGetWin
$LN3@DXUTGetWin:
  0009c	72		 DB	 114			; 00000072H
  0009d	63		 DB	 99			; 00000063H
  0009e	00		 DB	 0
?DXUTGetWindowHeight@@YGJXZ ENDP			; DXUTGetWindowHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -60						; size = 16
$T2 = -44						; size = 16
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
?DXUTGetWindowWidth@@YGJXZ PROC				; DXUTGetWindowWidth
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 578
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	57		 push	 edi
  00007	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0000a	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00020	8d 45 c4	 lea	 eax, DWORD PTR $T1[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRect
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d d4	 mov	 DWORD PTR $T2[ebp], ecx
  0002e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00031	89 55 d8	 mov	 DWORD PTR $T2[ebp+4], edx
  00034	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00037	89 4d dc	 mov	 DWORD PTR $T2[ebp+8], ecx
  0003a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0003d	89 55 e0	 mov	 DWORD PTR $T2[ebp+12], edx
  00040	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00043	89 45 e8	 mov	 DWORD PTR _rc$[ebp], eax
  00046	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+4]
  00049	89 4d ec	 mov	 DWORD PTR _rc$[ebp+4], ecx
  0004c	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+8]
  0004f	89 55 f0	 mov	 DWORD PTR _rc$[ebp+8], edx
  00052	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp+12]
  00055	89 45 f4	 mov	 DWORD PTR _rc$[ebp+12], eax
  00058	8b 45 f0	 mov	 eax, DWORD PTR _rc$[ebp+8]
  0005b	2b 45 e8	 sub	 eax, DWORD PTR _rc$[ebp]
  0005e	52		 push	 edx
  0005f	8b cd		 mov	 ecx, ebp
  00061	50		 push	 eax
  00062	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@DXUTGetWin
  00068	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006d	58		 pop	 eax
  0006e	5a		 pop	 edx
  0006f	5f		 pop	 edi
  00070	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00073	33 cd		 xor	 ecx, ebp
  00075	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007a	83 c4 3c	 add	 esp, 60			; 0000003cH
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN5@DXUTGetWin:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@DXUTGetWin
$LN4@DXUTGetWin:
  00090	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00094	10 00 00 00	 DD	 16			; 00000010H
  00098	00 00 00 00	 DD	 $LN3@DXUTGetWin
$LN3@DXUTGetWin:
  0009c	72		 DB	 114			; 00000072H
  0009d	63		 DB	 99			; 00000063H
  0009e	00		 DB	 0
?DXUTGetWindowWidth@@YGJXZ ENDP				; DXUTGetWindowWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ PROC		; DXUTGetWindowClientRect
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00026	33 c5		 xor	 eax, ebp
  00028	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002b	8b f4		 mov	 esi, esp
  0002d	8d 45 e8	 lea	 eax, DWORD PTR _rc$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b 4d 08	 mov	 ecx, DWORD PTR $T1[ebp]
  00047	8b 55 e8	 mov	 edx, DWORD PTR _rc$[ebp]
  0004a	89 11		 mov	 DWORD PTR [ecx], edx
  0004c	8b 45 ec	 mov	 eax, DWORD PTR _rc$[ebp+4]
  0004f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00052	8b 55 f0	 mov	 edx, DWORD PTR _rc$[ebp+8]
  00055	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00058	8b 45 f4	 mov	 eax, DWORD PTR _rc$[ebp+12]
  0005b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0005e	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  00061	52		 push	 edx
  00062	8b cd		 mov	 ecx, ebp
  00064	50		 push	 eax
  00065	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@DXUTGetWin
  0006b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00070	58		 pop	 eax
  00071	5a		 pop	 edx
  00072	5e		 pop	 esi
  00073	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00076	33 cd		 xor	 ecx, ebp
  00078	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00080	3b ec		 cmp	 ebp, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
  0008d	8d 49 00	 npad	 3
$LN5@DXUTGetWin:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@DXUTGetWin
$LN4@DXUTGetWin:
  00098	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0009c	10 00 00 00	 DD	 16			; 00000010H
  000a0	00 00 00 00	 DD	 $LN3@DXUTGetWin
$LN3@DXUTGetWin:
  000a4	72		 DB	 114			; 00000072H
  000a5	63		 DB	 99			; 00000063H
  000a6	00		 DB	 0
?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ ENDP		; DXUTGetWindowClientRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ PROC	; DXUTGetHWNDDeviceWindowed
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 576
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceWindowed
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ENDP	; DXUTGetHWNDDeviceWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ PROC	; DXUTGetHWNDDeviceFullScreen
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 575
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceFullScreen
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ ENDP	; DXUTGetHWNDDeviceFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ PROC			; DXUTGetHWNDFocus
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 574
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDFocus
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ ENDP			; DXUTGetHWNDFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -4						; size = 4
?DXUTGetHWND@@YGPAUHWND__@@XZ PROC			; DXUTGetHWND
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 573
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00010	0f b6 c0	 movzx	 eax, al
  00013	85 c0		 test	 eax, eax
  00015	74 11		 je	 SHORT $LN3@DXUTGetHWN
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceWindowed
  00023	89 45 fc	 mov	 DWORD PTR tv73[ebp], eax
  00026	eb 0f		 jmp	 SHORT $LN4@DXUTGetHWN
$LN3@DXUTGetHWN:
  00028	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceFullScreen
  00034	89 45 fc	 mov	 DWORD PTR tv73[ebp], eax
$LN4@DXUTGetHWN:
  00037	8b 45 fc	 mov	 eax, DWORD PTR tv73[ebp]
  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
?DXUTGetHWND@@YGPAUHWND__@@XZ ENDP			; DXUTGetHWND
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ PROC		; DXUTGetHINSTANCE
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ ; DXUTState::GetHInstance
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ ENDP		; DXUTGetHINSTANCE
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ds$1 = -112						; size = 100
_pDS$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
$T2 = 8							; size = 4
?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ PROC ; DXUTGetDeviceSettings
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4140
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d 8c	 lea	 edi, DWORD PTR [ebp-116]
  0000b	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 4143
  00021	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00026	8b c8		 mov	 ecx, eax
  00028	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  0002d	89 45 f8	 mov	 DWORD PTR _pDS$[ebp], eax
; Line 4144
  00030	83 7d f8 00	 cmp	 DWORD PTR _pDS$[ebp], 0
  00034	74 14		 je	 SHORT $LN2@DXUTGetDev
; Line 4146
  00036	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  0003b	8b 75 f8	 mov	 esi, DWORD PTR _pDS$[ebp]
  0003e	8b 7d 08	 mov	 edi, DWORD PTR $T2[ebp]
  00041	f3 a5		 rep movsd
  00043	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00046	eb 22		 jmp	 SHORT $LN3@DXUTGetDev
; Line 4148
  00048	eb 20		 jmp	 SHORT $LN3@DXUTGetDev
$LN2@DXUTGetDev:
; Line 4151
  0004a	6a 64		 push	 100			; 00000064H
  0004c	6a 00		 push	 0
  0004e	8d 45 90	 lea	 eax, DWORD PTR _ds$1[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 4152
  0005a	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  0005f	8d 75 90	 lea	 esi, DWORD PTR _ds$1[ebp]
  00062	8b 7d 08	 mov	 edi, DWORD PTR $T2[ebp]
  00065	f3 a5		 rep movsd
  00067	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
$LN3@DXUTGetDev:
; Line 4154
  0006a	52		 push	 edx
  0006b	8b cd		 mov	 ecx, ebp
  0006d	50		 push	 eax
  0006e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@DXUTGetDev
  00074	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00079	58		 pop	 eax
  0007a	5a		 pop	 edx
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00080	33 cd		 xor	 ecx, ebp
  00082	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00087	83 c4 74	 add	 esp, 116		; 00000074H
  0008a	3b ec		 cmp	 ebp, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
  00097	90		 npad	 1
$LN7@DXUTGetDev:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN6@DXUTGetDev
$LN6@DXUTGetDev:
  000a0	90 ff ff ff	 DD	 -112			; ffffff90H
  000a4	64 00 00 00	 DD	 100			; 00000064H
  000a8	00 00 00 00	 DD	 $LN5@DXUTGetDev
$LN5@DXUTGetDev:
  000ac	64		 DB	 100			; 00000064H
  000ad	73		 DB	 115			; 00000073H
  000ae	00		 DB	 0
?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ENDP ; DXUTGetDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ PROC ; DXUTGetD3D11DeviceContext1
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 600
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ ; DXUTState::GetD3D11DeviceContext1
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ ENDP ; DXUTGetD3D11DeviceContext1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ PROC	; DXUTGetD3D11Device1
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 599
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ ; DXUTState::GetD3D11Device1
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ ENDP	; DXUTGetD3D11Device1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ PROC ; DXUTGetD3D11DeviceContext
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ ; DXUTState::GetD3D11DeviceContext
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ENDP ; DXUTGetD3D11DeviceContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ PROC		; DXUTGetD3D11Device
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 597
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ ; DXUTState::GetD3D11Device
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ENDP		; DXUTGetD3D11Device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ PROC ; DXUTGetD3D11DepthStencilView
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ ENDP ; DXUTGetD3D11DepthStencilView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ PROC ; DXUTGetD3D11RenderTargetView
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 569
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ ENDP ; DXUTGetD3D11RenderTargetView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DeviceFeatureLevel@@YG?AW4D3D_FEATURE_LEVEL@@XZ PROC ; DXUTGetD3D11DeviceFeatureLevel
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 567
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetD3D11FeatureLevel
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetD3D11DeviceFeatureLevel@@YG?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; DXUTGetD3D11DeviceFeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv136 = -80						; size = 8
tv132 = -72						; size = 4
tv94 = -68						; size = 8
tv90 = -60						; size = 4
_pDSV$ = -56						; size = 4
_pRTV$ = -48						; size = 4
_vp$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDeviceContext$ = 8					; size = 4
?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z PROC ; DXUTSetupD3D11Views
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2258
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000b	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 2259
  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2263
  00028	e8 00 00 00 00	 call	 ?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	89 45 c4	 mov	 DWORD PTR tv90[ebp], eax
  00032	f2 0f 2a 45 c4	 cvtsi2sd xmm0, DWORD PTR tv90[ebp]
  00037	8b 4d c4	 mov	 ecx, DWORD PTR tv90[ebp]
  0003a	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0003d	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  00046	f2 0f 11 45 bc	 movsd	 QWORD PTR tv94[ebp], xmm0
  0004b	f2 0f 5a 45 bc	 cvtsd2ss xmm0, QWORD PTR tv94[ebp]
  00050	f3 0f 11 45 e4	 movss	 DWORD PTR _vp$[ebp+8], xmm0
; Line 2264
  00055	e8 00 00 00 00	 call	 ?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
  0005a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0005d	89 55 b8	 mov	 DWORD PTR tv132[ebp], edx
  00060	f2 0f 2a 45 b8	 cvtsi2sd xmm0, DWORD PTR tv132[ebp]
  00065	8b 45 b8	 mov	 eax, DWORD PTR tv132[ebp]
  00068	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0006b	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00074	f2 0f 11 45 b0	 movsd	 QWORD PTR tv136[ebp], xmm0
  00079	f2 0f 5a 45 b0	 cvtsd2ss xmm0, QWORD PTR tv136[ebp]
  0007e	f3 0f 11 45 e8	 movss	 DWORD PTR _vp$[ebp+12], xmm0
; Line 2265
  00083	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0008b	f3 0f 11 45 ec	 movss	 DWORD PTR _vp$[ebp+16], xmm0
; Line 2266
  00090	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00098	f3 0f 11 45 f0	 movss	 DWORD PTR _vp$[ebp+20], xmm0
; Line 2267
  0009d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000a5	f3 0f 11 45 dc	 movss	 DWORD PTR _vp$[ebp], xmm0
; Line 2268
  000aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000b2	f3 0f 11 45 e0	 movss	 DWORD PTR _vp$[ebp+4], xmm0
; Line 2269
  000b7	8b f4		 mov	 esi, esp
  000b9	8d 4d dc	 lea	 ecx, DWORD PTR _vp$[ebp]
  000bc	51		 push	 ecx
  000bd	6a 01		 push	 1
  000bf	8b 55 08	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  000c2	8b 02		 mov	 eax, DWORD PTR [edx]
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDeviceContext$[ebp]
  000c7	51		 push	 ecx
  000c8	8b 90 b0 00 00
	00		 mov	 edx, DWORD PTR [eax+176]
  000ce	ff d2		 call	 edx
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2272
  000d7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000dc	8b c8		 mov	 ecx, eax
  000de	e8 00 00 00 00	 call	 ?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
  000e3	89 45 d0	 mov	 DWORD PTR _pRTV$[ebp], eax
; Line 2273
  000e6	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000eb	8b c8		 mov	 ecx, eax
  000ed	e8 00 00 00 00	 call	 ?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
  000f2	89 45 c8	 mov	 DWORD PTR _pDSV$[ebp], eax
; Line 2274
  000f5	8b f4		 mov	 esi, esp
  000f7	8b 45 c8	 mov	 eax, DWORD PTR _pDSV$[ebp]
  000fa	50		 push	 eax
  000fb	8d 4d d0	 lea	 ecx, DWORD PTR _pRTV$[ebp]
  000fe	51		 push	 ecx
  000ff	6a 01		 push	 1
  00101	8b 55 08	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  00104	8b 02		 mov	 eax, DWORD PTR [edx]
  00106	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDeviceContext$[ebp]
  00109	51		 push	 ecx
  0010a	8b 90 84 00 00
	00		 mov	 edx, DWORD PTR [eax+132]
  00110	ff d2		 call	 edx
  00112	3b f4		 cmp	 esi, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2276
  00119	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
; Line 2277
  0011c	52		 push	 edx
  0011d	8b cd		 mov	 ecx, ebp
  0011f	50		 push	 eax
  00120	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@DXUTSetupD
  00126	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0012b	58		 pop	 eax
  0012c	5a		 pop	 edx
  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00132	33 cd		 xor	 ecx, ebp
  00134	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00139	83 c4 50	 add	 esp, 80			; 00000050H
  0013c	3b ec		 cmp	 ebp, esp
  0013e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 04 00	 ret	 4
  00149	8d 49 00	 npad	 3
$LN6@DXUTSetupD:
  0014c	02 00 00 00	 DD	 2
  00150	00 00 00 00	 DD	 $LN5@DXUTSetupD
$LN5@DXUTSetupD:
  00154	dc ff ff ff	 DD	 -36			; ffffffdcH
  00158	18 00 00 00	 DD	 24			; 00000018H
  0015c	00 00 00 00	 DD	 $LN3@DXUTSetupD
  00160	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00164	04 00 00 00	 DD	 4
  00168	00 00 00 00	 DD	 $LN4@DXUTSetupD
$LN4@DXUTSetupD:
  0016c	70		 DB	 112			; 00000070H
  0016d	52		 DB	 82			; 00000052H
  0016e	54		 DB	 84			; 00000054H
  0016f	56		 DB	 86			; 00000056H
  00170	00		 DB	 0
$LN3@DXUTSetupD:
  00171	76		 DB	 118			; 00000076H
  00172	70		 DB	 112			; 00000070H
  00173	00		 DB	 0
?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z ENDP ; DXUTSetupD3D11Views
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ PROC ; DXUTGetDXGIBackBufferSurfaceDesc
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ENDP ; DXUTGetDXGIBackBufferSurfaceDesc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ PROC	; DXUTGetDXGISwapChain
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 568
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ; DXUTState::GetDXGISwapChain
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ENDP	; DXUTGetDXGISwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ PROC	; DXUTGetDXGIFactory
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 595
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?DXUTDelayLoadDXGI@@YAJXZ ; DXUTDelayLoadDXGI
  00008	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ ENDP	; DXUTGetDXGIFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -8						; size = 4
_psettings$ = -4					; size = 4
?DXUTGetMSAASwapChainCreated@@YG_NXZ PROC		; DXUTGetMSAASwapChainCreated
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 561
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 562
  00014	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00020	89 45 fc	 mov	 DWORD PTR _psettings$[ebp], eax
; Line 563
  00023	83 7d fc 00	 cmp	 DWORD PTR _psettings$[ebp], 0
  00027	75 04		 jne	 SHORT $LN1@DXUTGetMSA
; Line 564
  00029	32 c0		 xor	 al, al
  0002b	eb 1c		 jmp	 SHORT $LN2@DXUTGetMSA
$LN1@DXUTGetMSA:
; Line 565
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _psettings$[ebp]
  00030	83 78 2c 01	 cmp	 DWORD PTR [eax+44], 1
  00034	76 09		 jbe	 SHORT $LN4@DXUTGetMSA
  00036	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0003d	eb 07		 jmp	 SHORT $LN5@DXUTGetMSA
$LN4@DXUTGetMSA:
  0003f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN5@DXUTGetMSA:
  00046	8a 45 f8	 mov	 al, BYTE PTR tv73[ebp]
$LN2@DXUTGetMSA:
; Line 566
  00049	83 c4 08	 add	 esp, 8
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?DXUTGetMSAASwapChainCreated@@YG_NXZ ENDP		; DXUTGetMSAASwapChainCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bGammaCorrect$ = 8					; size = 1
?DXUTSetIsInGammaCorrectMode@@YGX_N@Z PROC		; DXUTSetIsInGammaCorrectMode
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4278
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4279
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _bGammaCorrect$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z ; DXUTState::SetIsInGammaCorrectMode
; Line 4280
  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?DXUTSetIsInGammaCorrectMode@@YGX_N@Z ENDP		; DXUTSetIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDXGIFactory$ = -8					; size = 4
_hWnd$ = -4						; size = 4
_nExitCode$ = 8						; size = 4
?DXUTShutdown@@YGXH@Z PROC				; DXUTShutdown
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4248
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4249
  00015	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  0001a	89 45 fc	 mov	 DWORD PTR _hWnd$[ebp], eax
; Line 4250
  0001d	83 7d fc 00	 cmp	 DWORD PTR _hWnd$[ebp], 0
  00021	74 19		 je	 SHORT $LN2@DXUTShutdo
; Line 4251
  00023	8b f4		 mov	 esi, esp
  00025	6a 00		 push	 0
  00027	6a 00		 push	 0
  00029	6a 10		 push	 16			; 00000010H
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0002e	50		 push	 eax
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageW@16
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTShutdo:
; Line 4253
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _nExitCode$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00045	8b c8		 mov	 ecx, eax
  00047	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
; Line 4255
  0004c	6a 01		 push	 1
  0004e	e8 00 00 00 00	 call	 ?DXUTCleanup3DEnvironment@@YAX_N@Z ; DXUTCleanup3DEnvironment
  00053	83 c4 04	 add	 esp, 4
; Line 4265
  00056	6a 01		 push	 1
  00058	e8 00 00 00 00	 call	 ?DXUTAllowShortcutKeys@@YAX_N@Z ; DXUTAllowShortcutKeys
  0005d	83 c4 04	 add	 esp, 4
; Line 4268
  00060	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
  0006c	89 45 f8	 mov	 DWORD PTR _pDXGIFactory$[ebp], eax
; Line 4269
  0006f	83 7d f8 00	 cmp	 DWORD PTR _pDXGIFactory$[ebp], 0
  00073	74 1e		 je	 SHORT $LN1@DXUTShutdo
  00075	8b 55 f8	 mov	 edx, DWORD PTR _pDXGIFactory$[ebp]
  00078	8b 02		 mov	 eax, DWORD PTR [edx]
  0007a	8b f4		 mov	 esi, esp
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _pDXGIFactory$[ebp]
  0007f	51		 push	 ecx
  00080	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00083	ff d2		 call	 edx
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pDXGIFactory$[ebp], 0
$LN1@DXUTShutdo:
; Line 4270
  00093	6a 00		 push	 0
  00095	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
; Line 4271
  000a1	5e		 pop	 esi
  000a2	83 c4 08	 add	 esp, 8
  000a5	3b ec		 cmp	 ebp, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
?DXUTShutdown@@YGXH@Z ENDP				; DXUTShutdown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTResetFrameworkState@@YGXXZ PROC			; DXUTResetFrameworkState
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4238
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4239
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?Destroy@DXUTState@@QAEXXZ ; DXUTState::Destroy
; Line 4240
  0000f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?Create@DXUTState@@QAEXXZ ; DXUTState::Create
; Line 4241
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?DXUTResetFrameworkState@@YGXXZ ENDP			; DXUTResetFrameworkState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv139 = -96						; size = 4
tv69 = -92						; size = 4
$T2 = -88						; size = 12
$T3 = -73						; size = 1
_DXUTTimer$4 = -68					; size = 24
_it$5 = -36						; size = 12
_bFound$ = -17						; size = 1
_pTimerList$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_nIDEvent$ = 8						; size = 4
?DXUTKillTimer@@YGJI@Z PROC				; DXUTKillTimer
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3283
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTKillTimer@@YGJI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	57		 push	 edi
  00015	8d 7d a0	 lea	 edi, DWORD PTR [ebp-96]
  00018	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 3284
  00035	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
  00041	89 45 f0	 mov	 DWORD PTR _pTimerList$[ebp], eax
; Line 3285
  00044	83 7d f0 00	 cmp	 DWORD PTR _pTimerList$[ebp], 0
  00048	75 0a		 jne	 SHORT $LN6@DXUTKillTi
; Line 3286
  0004a	b8 01 00 00 00	 mov	 eax, 1
  0004f	e9 00 01 00 00	 jmp	 $LN7@DXUTKillTi
$LN6@DXUTKillTi:
; Line 3288
  00054	c6 45 ef 00	 mov	 BYTE PTR _bFound$[ebp], 0
; Line 3290
  00058	8d 45 dc	 lea	 eax, DWORD PTR _it$5[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _pTimerList$[ebp]
  0005f	e8 00 00 00 00	 call	 ?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
  00064	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006b	eb 08		 jmp	 SHORT $LN5@DXUTKillTi
$LN4@DXUTKillTi:
  0006d	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00070	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
$LN5@DXUTKillTi:
  00075	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  00078	51		 push	 ecx
  00079	8b 4d f0	 mov	 ecx, DWORD PTR _pTimerList$[ebp]
  0007c	e8 00 00 00 00	 call	 ?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
  00081	89 45 a4	 mov	 DWORD PTR tv69[ebp], eax
  00084	8b 55 a4	 mov	 edx, DWORD PTR tv69[ebp]
  00087	89 55 a0	 mov	 DWORD PTR tv139[ebp], edx
  0008a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008e	8b 45 a0	 mov	 eax, DWORD PTR tv139[ebp]
  00091	50		 push	 eax
  00092	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00095	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
  0009a	88 45 b7	 mov	 BYTE PTR $T3[ebp], al
  0009d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000a1	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  000a4	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
  000a9	0f b6 4d b7	 movzx	 ecx, BYTE PTR $T3[ebp]
  000ad	85 c9		 test	 ecx, ecx
  000af	74 6d		 je	 SHORT $LN3@DXUTKillTi
; Line 3292
  000b1	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b4	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
  000b9	8b 10		 mov	 edx, DWORD PTR [eax]
  000bb	89 55 bc	 mov	 DWORD PTR _DXUTTimer$4[ebp], edx
  000be	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c1	89 4d c0	 mov	 DWORD PTR _DXUTTimer$4[ebp+4], ecx
  000c4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000c7	89 55 c4	 mov	 DWORD PTR _DXUTTimer$4[ebp+8], edx
  000ca	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000cd	89 4d c8	 mov	 DWORD PTR _DXUTTimer$4[ebp+12], ecx
  000d0	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000d3	89 55 cc	 mov	 DWORD PTR _DXUTTimer$4[ebp+16], edx
  000d6	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  000d9	89 45 d0	 mov	 DWORD PTR _DXUTTimer$4[ebp+20], eax
; Line 3293
  000dc	8b 4d d0	 mov	 ecx, DWORD PTR _DXUTTimer$4[ebp+20]
  000df	3b 4d 08	 cmp	 ecx, DWORD PTR _nIDEvent$[ebp]
  000e2	75 35		 jne	 SHORT $LN2@DXUTKillTi
; Line 3295
  000e4	c6 45 cc 00	 mov	 BYTE PTR _DXUTTimer$4[ebp+16], 0
; Line 3296
  000e8	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  000eb	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
  000f0	8b 55 bc	 mov	 edx, DWORD PTR _DXUTTimer$4[ebp]
  000f3	89 10		 mov	 DWORD PTR [eax], edx
  000f5	8b 4d c0	 mov	 ecx, DWORD PTR _DXUTTimer$4[ebp+4]
  000f8	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  000fb	8b 55 c4	 mov	 edx, DWORD PTR _DXUTTimer$4[ebp+8]
  000fe	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00101	8b 4d c8	 mov	 ecx, DWORD PTR _DXUTTimer$4[ebp+12]
  00104	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00107	8b 55 cc	 mov	 edx, DWORD PTR _DXUTTimer$4[ebp+16]
  0010a	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0010d	8b 4d d0	 mov	 ecx, DWORD PTR _DXUTTimer$4[ebp+20]
  00110	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; Line 3297
  00113	c6 45 ef 01	 mov	 BYTE PTR _bFound$[ebp], 1
; Line 3298
  00117	eb 05		 jmp	 SHORT $LN3@DXUTKillTi
$LN2@DXUTKillTi:
; Line 3299
  00119	e9 4f ff ff ff	 jmp	 $LN4@DXUTKillTi
$LN3@DXUTKillTi:
; Line 3300
  0011e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00125	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00128	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
; Line 3302
  0012d	0f b6 55 ef	 movzx	 edx, BYTE PTR _bFound$[ebp]
  00131	85 d2		 test	 edx, edx
  00133	75 1d		 jne	 SHORT $LN1@DXUTKillTi
; Line 3303
  00135	6a 01		 push	 1
  00137	68 00 00 00 00	 push	 OFFSET $SG152980
  0013c	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00141	68 e7 0c 00 00	 push	 3303			; 00000ce7H
  00146	68 00 00 00 00	 push	 OFFSET $SG152981
  0014b	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00150	eb 02		 jmp	 SHORT $LN7@DXUTKillTi
$LN1@DXUTKillTi:
; Line 3305
  00152	33 c0		 xor	 eax, eax
$LN7@DXUTKillTi:
; Line 3306
  00154	52		 push	 edx
  00155	8b cd		 mov	 ecx, ebp
  00157	50		 push	 eax
  00158	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@DXUTKillTi
  0015e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00163	58		 pop	 eax
  00164	5a		 pop	 edx
  00165	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00168	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016f	59		 pop	 ecx
  00170	5f		 pop	 edi
  00171	83 c4 60	 add	 esp, 96			; 00000060H
  00174	3b ec		 cmp	 ebp, esp
  00176	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017b	8b e5		 mov	 esp, ebp
  0017d	5d		 pop	 ebp
  0017e	c2 04 00	 ret	 4
  00181	8d 49 00	 npad	 3
$LN15@DXUTKillTi:
  00184	02 00 00 00	 DD	 2
  00188	00 00 00 00	 DD	 $LN14@DXUTKillTi
$LN14@DXUTKillTi:
  0018c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00190	0c 00 00 00	 DD	 12			; 0000000cH
  00194	00 00 00 00	 DD	 $LN11@DXUTKillTi
  00198	bc ff ff ff	 DD	 -68			; ffffffbcH
  0019c	18 00 00 00	 DD	 24			; 00000018H
  001a0	00 00 00 00	 DD	 $LN12@DXUTKillTi
$LN12@DXUTKillTi:
  001a4	44		 DB	 68			; 00000044H
  001a5	58		 DB	 88			; 00000058H
  001a6	55		 DB	 85			; 00000055H
  001a7	54		 DB	 84			; 00000054H
  001a8	54		 DB	 84			; 00000054H
  001a9	69		 DB	 105			; 00000069H
  001aa	6d		 DB	 109			; 0000006dH
  001ab	65		 DB	 101			; 00000065H
  001ac	72		 DB	 114			; 00000072H
  001ad	00		 DB	 0
$LN11@DXUTKillTi:
  001ae	69		 DB	 105			; 00000069H
  001af	74		 DB	 116			; 00000074H
  001b0	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTKillTimer@@YGJI@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTKillTimer@@YGJI@Z$1:
  00008	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTKillTimer@@YGJI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTKillTimer@@YGJI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTKillTimer@@YGJI@Z ENDP				; DXUTKillTimer
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv91 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 4
_pTimerList$ = -48					; size = 4
_DXUTTimer$ = -40					; size = 24
__$EHRec$ = -12						; size = 12
_pCallbackTimer$ = 8					; size = 4
_fTimeoutInSecs$ = 12					; size = 4
_pnIDEvent$ = 16					; size = 4
_pCallbackUserContext$ = 20				; size = 4
?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z PROC		; DXUTSetTimer
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3248
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00018	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 3249
  00035	83 7d 08 00	 cmp	 DWORD PTR _pCallbackTimer$[ebp], 0
  00039	75 20		 jne	 SHORT $LN4@DXUTSetTim
; Line 3250
  0003b	6a 01		 push	 1
  0003d	68 00 00 00 00	 push	 OFFSET $SG152802
  00042	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00047	68 b2 0c 00 00	 push	 3250			; 00000cb2H
  0004c	68 00 00 00 00	 push	 OFFSET $SG152803
  00051	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00056	e9 da 00 00 00	 jmp	 $LN5@DXUTSetTim
$LN4@DXUTSetTim:
; Line 3253
  0005b	8b 45 08	 mov	 eax, DWORD PTR _pCallbackTimer$[ebp]
  0005e	89 45 d8	 mov	 DWORD PTR _DXUTTimer$[ebp], eax
; Line 3254
  00061	8b 4d 14	 mov	 ecx, DWORD PTR _pCallbackUserContext$[ebp]
  00064	89 4d dc	 mov	 DWORD PTR _DXUTTimer$[ebp+4], ecx
; Line 3255
  00067	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTimeoutInSecs$[ebp]
  0006c	f3 0f 11 45 e0	 movss	 DWORD PTR _DXUTTimer$[ebp+8], xmm0
; Line 3256
  00071	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTimeoutInSecs$[ebp]
  00076	f3 0f 11 45 e4	 movss	 DWORD PTR _DXUTTimer$[ebp+12], xmm0
; Line 3257
  0007b	c6 45 e8 01	 mov	 BYTE PTR _DXUTTimer$[ebp+16], 1
; Line 3258
  0007f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ?GetTimerLastID@DXUTState@@QAEIXZ ; DXUTState::GetTimerLastID
  0008b	83 c0 01	 add	 eax, 1
  0008e	89 45 ec	 mov	 DWORD PTR _DXUTTimer$[ebp+20], eax
; Line 3259
  00091	8b 55 ec	 mov	 edx, DWORD PTR _DXUTTimer$[ebp+20]
  00094	52		 push	 edx
  00095	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ?SetTimerLastID@DXUTState@@QAEXI@Z ; DXUTState::SetTimerLastID
; Line 3261
  000a1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
  000ad	89 45 d0	 mov	 DWORD PTR _pTimerList$[ebp], eax
; Line 3262
  000b0	83 7d d0 00	 cmp	 DWORD PTR _pTimerList$[ebp], 0
  000b4	75 63		 jne	 SHORT $LN3@DXUTSetTim
; Line 3264
  000b6	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  000bb	6a 10		 push	 16			; 00000010H
  000bd	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  000c2	83 c4 08	 add	 esp, 8
  000c5	89 45 c8	 mov	 DWORD PTR $T2[ebp], eax
  000c8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000cf	83 7d c8 00	 cmp	 DWORD PTR $T2[ebp], 0
  000d3	74 0d		 je	 SHORT $LN7@DXUTSetTim
  000d5	8b 4d c8	 mov	 ecx, DWORD PTR $T2[ebp]
  000d8	e8 00 00 00 00	 call	 ??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
  000dd	89 45 c4	 mov	 DWORD PTR tv91[ebp], eax
  000e0	eb 07		 jmp	 SHORT $LN8@DXUTSetTim
$LN7@DXUTSetTim:
  000e2	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN8@DXUTSetTim:
  000e9	8b 45 c4	 mov	 eax, DWORD PTR tv91[ebp]
  000ec	89 45 cc	 mov	 DWORD PTR $T3[ebp], eax
  000ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f6	8b 4d cc	 mov	 ecx, DWORD PTR $T3[ebp]
  000f9	89 4d d0	 mov	 DWORD PTR _pTimerList$[ebp], ecx
; Line 3265
  000fc	83 7d d0 00	 cmp	 DWORD PTR _pTimerList$[ebp], 0
  00100	75 07		 jne	 SHORT $LN2@DXUTSetTim
; Line 3266
  00102	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00107	eb 2c		 jmp	 SHORT $LN5@DXUTSetTim
$LN2@DXUTSetTim:
; Line 3267
  00109	8b 55 d0	 mov	 edx, DWORD PTR _pTimerList$[ebp]
  0010c	52		 push	 edx
  0010d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00112	8b c8		 mov	 ecx, eax
  00114	e8 00 00 00 00	 call	 ?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z ; DXUTState::SetTimerList
$LN3@DXUTSetTim:
; Line 3270
  00119	8d 45 d8	 lea	 eax, DWORD PTR _DXUTTimer$[ebp]
  0011c	50		 push	 eax
  0011d	8b 4d d0	 mov	 ecx, DWORD PTR _pTimerList$[ebp]
  00120	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back
; Line 3272
  00125	83 7d 10 00	 cmp	 DWORD PTR _pnIDEvent$[ebp], 0
  00129	74 08		 je	 SHORT $LN1@DXUTSetTim
; Line 3273
  0012b	8b 4d 10	 mov	 ecx, DWORD PTR _pnIDEvent$[ebp]
  0012e	8b 55 ec	 mov	 edx, DWORD PTR _DXUTTimer$[ebp+20]
  00131	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@DXUTSetTim:
; Line 3275
  00133	33 c0		 xor	 eax, eax
$LN5@DXUTSetTim:
; Line 3276
  00135	52		 push	 edx
  00136	8b cd		 mov	 ecx, ebp
  00138	50		 push	 eax
  00139	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@DXUTSetTim
  0013f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00144	58		 pop	 eax
  00145	5a		 pop	 edx
  00146	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00149	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00150	59		 pop	 ecx
  00151	5f		 pop	 edi
  00152	83 c4 3c	 add	 esp, 60			; 0000003cH
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 10 00	 ret	 16			; 00000010H
  00162	8b ff		 npad	 2
$LN13@DXUTSetTim:
  00164	01 00 00 00	 DD	 1
  00168	00 00 00 00	 DD	 $LN12@DXUTSetTim
$LN12@DXUTSetTim:
  0016c	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00170	18 00 00 00	 DD	 24			; 00000018H
  00174	00 00 00 00	 DD	 $LN10@DXUTSetTim
$LN10@DXUTSetTim:
  00178	44		 DB	 68			; 00000044H
  00179	58		 DB	 88			; 00000058H
  0017a	55		 DB	 85			; 00000055H
  0017b	54		 DB	 84			; 00000054H
  0017c	54		 DB	 84			; 00000054H
  0017d	69		 DB	 105			; 00000069H
  0017e	6d		 DB	 109			; 0000006dH
  0017f	65		 DB	 101			; 00000065H
  00180	72		 DB	 114			; 00000072H
  00181	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z ENDP		; DXUTSetTimer
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bCallDefWindowProc$ = 8				; size = 1
?DXUTSetWindowSettings@@YGX_N@Z PROC			; DXUTSetWindowSettings
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4217
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4218
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _bCallDefWindowProc$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?SetCallDefWindowProc@DXUTState@@QAEX_N@Z ; DXUTState::SetCallDefWindowProc
; Line 4219
  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?DXUTSetWindowSettings@@YGX_N@Z ENDP			; DXUTSetWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bAllowWhenFullscreen$ = 8				; size = 1
_bAllowWhenWindowed$ = 12				; size = 1
?DXUTSetShortcutKeySettings@@YGX_N0@Z PROC		; DXUTSetShortcutKeySettings
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3118
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3119
  00003	0f b6 45 0c	 movzx	 eax, BYTE PTR _bAllowWhenWindowed$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenWindowed
; Line 3120
  00014	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bAllowWhenFullscreen$[ebp]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001e	8b c8		 mov	 ecx, eax
  00020	e8 00 00 00 00	 call	 ?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenFullscreen
; Line 3123
  00025	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetDXUTInited@DXUTState@@QAE_NXZ ; DXUTState::GetDXUTInited
  00031	0f b6 d0	 movzx	 edx, al
  00034	85 d2		 test	 edx, edx
  00036	74 3e		 je	 SHORT $LN4@DXUTSetSho
; Line 3125
  00038	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  0003d	0f b6 c0	 movzx	 eax, al
  00040	85 c0		 test	 eax, eax
  00042	74 1a		 je	 SHORT $LN2@DXUTSetSho
; Line 3126
  00044	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00049	8b c8		 mov	 ecx, eax
  0004b	e8 00 00 00 00	 call	 ?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
  00050	0f b6 c8	 movzx	 ecx, al
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ?DXUTAllowShortcutKeys@@YAX_N@Z ; DXUTAllowShortcutKeys
  00059	83 c4 04	 add	 esp, 4
; Line 3127
  0005c	eb 18		 jmp	 SHORT $LN4@DXUTSetSho
$LN2@DXUTSetSho:
; Line 3128
  0005e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
  0006a	0f b6 d0	 movzx	 edx, al
  0006d	52		 push	 edx
  0006e	e8 00 00 00 00	 call	 ?DXUTAllowShortcutKeys@@YAX_N@Z ; DXUTAllowShortcutKeys
  00073	83 c4 04	 add	 esp, 4
$LN4@DXUTSetSho:
; Line 3130
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?DXUTSetShortcutKeySettings@@YGX_N0@Z ENDP		; DXUTSetShortcutKeySettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bAutoChangeAdapter$ = 8				; size = 1
?DXUTSetMultimonSettings@@YGX_N@Z PROC			; DXUTSetMultimonSettings
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4196
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4197
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _bAutoChangeAdapter$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z ; DXUTState::SetAutoChangeAdapter
; Line 4198
  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?DXUTSetMultimonSettings@@YGX_N@Z ENDP			; DXUTSetMultimonSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bAltEnterToToggleFullscreen$ = 8			; size = 1
_bEscapeToQuit$ = 12					; size = 1
_bPauseToToggleTimePause$ = 16				; size = 1
?DXUTSetHotkeyHandling@@YGX_N00@Z PROC			; DXUTSetHotkeyHandling
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4202
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4203
  00003	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEscapeToQuit$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?SetHandleEscape@DXUTState@@QAEX_N@Z ; DXUTState::SetHandleEscape
; Line 4204
  00014	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bAltEnterToToggleFullscreen$[ebp]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001e	8b c8		 mov	 ecx, eax
  00020	e8 00 00 00 00	 call	 ?SetHandleAltEnter@DXUTState@@QAEX_N@Z ; DXUTState::SetHandleAltEnter
; Line 4205
  00025	0f b6 55 10	 movzx	 edx, BYTE PTR _bPauseToToggleTimePause$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ?SetHandlePause@DXUTState@@QAEX_N@Z ; DXUTState::SetHandlePause
; Line 4206
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	5d		 pop	 ebp
  0003e	c2 0c 00	 ret	 12			; 0000000cH
?DXUTSetHotkeyHandling@@YGX_N00@Z ENDP			; DXUTSetHotkeyHandling
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bShowCursorWhenFullScreen$ = 8				; size = 1
_bClipCursorWhenFullScreen$ = 12			; size = 1
?DXUTSetCursorSettings@@YGX_N0@Z PROC			; DXUTSetCursorSettings
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4210
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4211
  00003	0f b6 45 0c	 movzx	 eax, BYTE PTR _bClipCursorWhenFullScreen$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000d	8b c8		 mov	 ecx, eax
  0000f	e8 00 00 00 00	 call	 ?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetClipCursorWhenFullScreen
; Line 4212
  00014	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bShowCursorWhenFullScreen$[ebp]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001e	8b c8		 mov	 ecx, eax
  00020	e8 00 00 00 00	 call	 ?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetShowCursorWhenFullScreen
; Line 4213
  00025	e8 00 00 00 00	 call	 ?DXUTSetupCursor@@YAXXZ	; DXUTSetupCursor
; Line 4214
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?DXUTSetCursorSettings@@YGX_N0@Z ENDP			; DXUTSetCursorSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bEnabled$ = 8						; size = 1
_fTimePerFrame$ = 12					; size = 4
?DXUTSetConstantFrameTime@@YGX_NM@Z PROC		; DXUTSetConstantFrameTime
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 4223
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4224
  00003	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00008	8b c8		 mov	 ecx, eax
  0000a	e8 00 00 00 00	 call	 ?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideConstantFrameTime
  0000f	0f b6 c0	 movzx	 eax, al
  00012	85 c0		 test	 eax, eax
  00014	74 1e		 je	 SHORT $LN1@DXUTSetCon
; Line 4226
  00016	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001b	8b c8		 mov	 ecx, eax
  0001d	e8 00 00 00 00	 call	 ?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideConstantFrameTime
  00022	88 45 08	 mov	 BYTE PTR _bEnabled$[ebp], al
; Line 4227
  00025	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 ?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ ; DXUTState::GetOverrideConstantTimePerFrame
  00031	d9 5d 0c	 fstp	 DWORD PTR _fTimePerFrame$[ebp]
$LN1@DXUTSetCon:
; Line 4229
  00034	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bEnabled$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ?SetConstantFrameTime@DXUTState@@QAEX_N@Z ; DXUTState::SetConstantFrameTime
; Line 4230
  00045	51		 push	 ecx
  00046	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTimePerFrame$[ebp]
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00055	8b c8		 mov	 ecx, eax
  00057	e8 00 00 00 00	 call	 ?SetTimePerFrame@DXUTState@@QAEXM@Z ; DXUTState::SetTimePerFrame
; Line 4231
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
?DXUTSetConstantFrameTime@@YGX_NM@Z ENDP		; DXUTSetConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv131 = -10						; size = 1
tv94 = -9						; size = 1
_nPauseRenderingCount$ = -8				; size = 4
_nPauseTimeCount$ = -4					; size = 4
_bPauseTime$ = 8					; size = 1
_bPauseRendering$ = 12					; size = 1
?DXUTPause@@YGX_N0@Z PROC				; DXUTPause
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3211
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 3212
  0001b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00020	8b c8		 mov	 ecx, eax
  00022	e8 00 00 00 00	 call	 ?GetPauseTimeCount@DXUTState@@QAEHXZ ; DXUTState::GetPauseTimeCount
  00027	89 45 fc	 mov	 DWORD PTR _nPauseTimeCount$[ebp], eax
; Line 3213
  0002a	0f b6 45 08	 movzx	 eax, BYTE PTR _bPauseTime$[ebp]
  0002e	85 c0		 test	 eax, eax
  00030	74 0b		 je	 SHORT $LN8@DXUTPause
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _nPauseTimeCount$[ebp]
  00035	83 c1 01	 add	 ecx, 1
  00038	89 4d fc	 mov	 DWORD PTR _nPauseTimeCount$[ebp], ecx
; Line 3214
  0003b	eb 09		 jmp	 SHORT $LN7@DXUTPause
$LN8@DXUTPause:
; Line 3215
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _nPauseTimeCount$[ebp]
  00040	83 ea 01	 sub	 edx, 1
  00043	89 55 fc	 mov	 DWORD PTR _nPauseTimeCount$[ebp], edx
$LN7@DXUTPause:
; Line 3216
  00046	83 7d fc 00	 cmp	 DWORD PTR _nPauseTimeCount$[ebp], 0
  0004a	7d 07		 jge	 SHORT $LN6@DXUTPause
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nPauseTimeCount$[ebp], 0
$LN6@DXUTPause:
; Line 3217
  00053	8b 45 fc	 mov	 eax, DWORD PTR _nPauseTimeCount$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ?SetPauseTimeCount@DXUTState@@QAEXH@Z ; DXUTState::SetPauseTimeCount
; Line 3219
  00063	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ?GetPauseRenderingCount@DXUTState@@QAEHXZ ; DXUTState::GetPauseRenderingCount
  0006f	89 45 f8	 mov	 DWORD PTR _nPauseRenderingCount$[ebp], eax
; Line 3220
  00072	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _bPauseRendering$[ebp]
  00076	85 c9		 test	 ecx, ecx
  00078	74 0b		 je	 SHORT $LN5@DXUTPause
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _nPauseRenderingCount$[ebp]
  0007d	83 c2 01	 add	 edx, 1
  00080	89 55 f8	 mov	 DWORD PTR _nPauseRenderingCount$[ebp], edx
; Line 3221
  00083	eb 09		 jmp	 SHORT $LN4@DXUTPause
$LN5@DXUTPause:
; Line 3222
  00085	8b 45 f8	 mov	 eax, DWORD PTR _nPauseRenderingCount$[ebp]
  00088	83 e8 01	 sub	 eax, 1
  0008b	89 45 f8	 mov	 DWORD PTR _nPauseRenderingCount$[ebp], eax
$LN4@DXUTPause:
; Line 3223
  0008e	83 7d f8 00	 cmp	 DWORD PTR _nPauseRenderingCount$[ebp], 0
  00092	7d 07		 jge	 SHORT $LN3@DXUTPause
  00094	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nPauseRenderingCount$[ebp], 0
$LN3@DXUTPause:
; Line 3224
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _nPauseRenderingCount$[ebp]
  0009e	51		 push	 ecx
  0009f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ?SetPauseRenderingCount@DXUTState@@QAEXH@Z ; DXUTState::SetPauseRenderingCount
; Line 3226
  000ab	83 7d fc 00	 cmp	 DWORD PTR _nPauseTimeCount$[ebp], 0
  000af	7e 0e		 jle	 SHORT $LN2@DXUTPause
; Line 3229
  000b1	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ?Stop@CDXUTTimer@@QAEXXZ ; CDXUTTimer::Stop
; Line 3231
  000bd	eb 0c		 jmp	 SHORT $LN1@DXUTPause
$LN2@DXUTPause:
; Line 3234
  000bf	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ?Start@CDXUTTimer@@QAEXXZ ; CDXUTTimer::Start
$LN1@DXUTPause:
; Line 3237
  000cb	83 7d f8 00	 cmp	 DWORD PTR _nPauseRenderingCount$[ebp], 0
  000cf	7e 06		 jle	 SHORT $LN11@DXUTPause
  000d1	c6 45 f7 01	 mov	 BYTE PTR tv94[ebp], 1
  000d5	eb 04		 jmp	 SHORT $LN12@DXUTPause
$LN11@DXUTPause:
  000d7	c6 45 f7 00	 mov	 BYTE PTR tv94[ebp], 0
$LN12@DXUTPause:
  000db	0f b6 55 f7	 movzx	 edx, BYTE PTR tv94[ebp]
  000df	52		 push	 edx
  000e0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000e5	8b c8		 mov	 ecx, eax
  000e7	e8 00 00 00 00	 call	 ?SetRenderingPaused@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingPaused
; Line 3238
  000ec	83 7d fc 00	 cmp	 DWORD PTR _nPauseTimeCount$[ebp], 0
  000f0	7e 06		 jle	 SHORT $LN13@DXUTPause
  000f2	c6 45 f6 01	 mov	 BYTE PTR tv131[ebp], 1
  000f6	eb 04		 jmp	 SHORT $LN14@DXUTPause
$LN13@DXUTPause:
  000f8	c6 45 f6 00	 mov	 BYTE PTR tv131[ebp], 0
$LN14@DXUTPause:
  000fc	0f b6 45 f6	 movzx	 eax, BYTE PTR tv131[ebp]
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00106	8b c8		 mov	 ecx, eax
  00108	e8 00 00 00 00	 call	 ?SetTimePaused@DXUTState@@QAEX_N@Z ; DXUTState::SetTimePaused
; Line 3239
  0010d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00110	3b ec		 cmp	 ebp, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c2 08 00	 ret	 8
?DXUTPause@@YGX_N0@Z ENDP				; DXUTPause
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -628						; size = 100
$T2 = -528						; size = 100
_hr2$3 = -428						; size = 4
$T4 = -424						; size = 100
_orginalDeviceSettings$5 = -320				; size = 100
_hr$ = -216						; size = 4
$T6 = -212						; size = 100
_deviceSettings$ = -108					; size = 100
__$ArrayPad$ = -4					; size = 4
?DXUTToggleWARP@@YGJXZ PROC				; DXUTToggleWARP
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3478
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 02 00
	00		 sub	 esp, 628		; 00000274H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 8c fd ff
	ff		 lea	 edi, DWORD PTR [ebp-628]
  00011	b9 9d 00 00 00	 mov	 ecx, 157		; 0000009dH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3479
  00027	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  00033	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00038	8b f0		 mov	 esi, eax
  0003a	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR $T6[ebp]
  00040	f3 a5		 rep movsd
  00042	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00047	8d b5 2c ff ff
	ff		 lea	 esi, DWORD PTR $T6[ebp]
  0004d	8d 7d 94	 lea	 edi, DWORD PTR _deviceSettings$[ebp]
  00050	f3 a5		 rep movsd
; Line 3481
  00052	83 7d 9c 01	 cmp	 DWORD PTR _deviceSettings$[ebp+8], 1
  00056	74 06		 je	 SHORT $LN7@DXUTToggle
  00058	83 7d 9c 02	 cmp	 DWORD PTR _deviceSettings$[ebp+8], 2
  0005c	75 19		 jne	 SHORT $LN8@DXUTToggle
$LN7@DXUTToggle:
; Line 3483
  0005e	83 7d d4 00	 cmp	 DWORD PTR _deviceSettings$[ebp+64], 0
  00062	75 0a		 jne	 SHORT $LN6@DXUTToggle
; Line 3486
  00064	b8 01 00 00 00	 mov	 eax, 1
  00069	e9 b9 00 00 00	 jmp	 $LN9@DXUTToggle
$LN6@DXUTToggle:
; Line 3489
  0006e	c7 45 9c 05 00
	00 00		 mov	 DWORD PTR _deviceSettings$[ebp+8], 5
  00075	eb 0d		 jmp	 SHORT $LN5@DXUTToggle
$LN8@DXUTToggle:
; Line 3491
  00077	83 7d 9c 05	 cmp	 DWORD PTR _deviceSettings$[ebp+8], 5
  0007b	75 07		 jne	 SHORT $LN5@DXUTToggle
; Line 3493
  0007d	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR _deviceSettings$[ebp+8], 1
$LN5@DXUTToggle:
; Line 3496
  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	8d 4d 94	 lea	 ecx, DWORD PTR _deviceSettings$[ebp]
  0008b	51		 push	 ecx
  0008c	e8 00 00 00 00	 call	 ?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
  00094	89 85 28 ff ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
; Line 3497
  0009a	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000a1	7c 7e		 jl	 SHORT $LN3@DXUTToggle
; Line 3499
  000a3	8d 95 8c fd ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  000a9	52		 push	 edx
  000aa	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  000af	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000b4	8b f0		 mov	 esi, eax
  000b6	8d bd 58 fe ff
	ff		 lea	 edi, DWORD PTR $T4[ebp]
  000bc	f3 a5		 rep movsd
  000be	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000c3	8d b5 58 fe ff
	ff		 lea	 esi, DWORD PTR $T4[ebp]
  000c9	8d bd c0 fe ff
	ff		 lea	 edi, DWORD PTR _orginalDeviceSettings$5[ebp]
  000cf	f3 a5		 rep movsd
; Line 3503
  000d1	6a 00		 push	 0
  000d3	8d 45 94	 lea	 eax, DWORD PTR _deviceSettings$[ebp]
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  000dc	83 c4 08	 add	 esp, 8
  000df	89 85 28 ff ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
; Line 3506
  000e5	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000ec	7d 33		 jge	 SHORT $LN3@DXUTToggle
  000ee	81 bd 28 ff ff
	ff 04 40 00 80	 cmp	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
  000f8	74 27		 je	 SHORT $LN3@DXUTToggle
; Line 3509
  000fa	6a 00		 push	 0
  000fc	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _orginalDeviceSettings$5[ebp]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  00108	83 c4 08	 add	 esp, 8
  0010b	89 85 54 fe ff
	ff		 mov	 DWORD PTR _hr2$3[ebp], eax
; Line 3510
  00111	83 bd 54 fe ff
	ff 00		 cmp	 DWORD PTR _hr2$3[ebp], 0
  00118	7d 07		 jge	 SHORT $LN3@DXUTToggle
; Line 3513
  0011a	6a 00		 push	 0
  0011c	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
$LN3@DXUTToggle:
; Line 3518
  00121	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
$LN9@DXUTToggle:
; Line 3519
  00127	52		 push	 edx
  00128	8b cd		 mov	 ecx, ebp
  0012a	50		 push	 eax
  0012b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@DXUTToggle
  00131	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00136	58		 pop	 eax
  00137	5a		 pop	 edx
  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013d	33 cd		 xor	 ecx, ebp
  0013f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00144	81 c4 74 02 00
	00		 add	 esp, 628		; 00000274H
  0014a	3b ec		 cmp	 ebp, esp
  0014c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00151	8b e5		 mov	 esp, ebp
  00153	5d		 pop	 ebp
  00154	c3		 ret	 0
  00155	8d 49 00	 npad	 3
$LN14@DXUTToggle:
  00158	02 00 00 00	 DD	 2
  0015c	00 00 00 00	 DD	 $LN13@DXUTToggle
$LN13@DXUTToggle:
  00160	94 ff ff ff	 DD	 -108			; ffffff94H
  00164	64 00 00 00	 DD	 100			; 00000064H
  00168	00 00 00 00	 DD	 $LN11@DXUTToggle
  0016c	c0 fe ff ff	 DD	 -320			; fffffec0H
  00170	64 00 00 00	 DD	 100			; 00000064H
  00174	00 00 00 00	 DD	 $LN12@DXUTToggle
$LN12@DXUTToggle:
  00178	6f		 DB	 111			; 0000006fH
  00179	72		 DB	 114			; 00000072H
  0017a	67		 DB	 103			; 00000067H
  0017b	69		 DB	 105			; 00000069H
  0017c	6e		 DB	 110			; 0000006eH
  0017d	61		 DB	 97			; 00000061H
  0017e	6c		 DB	 108			; 0000006cH
  0017f	44		 DB	 68			; 00000044H
  00180	65		 DB	 101			; 00000065H
  00181	76		 DB	 118			; 00000076H
  00182	69		 DB	 105			; 00000069H
  00183	63		 DB	 99			; 00000063H
  00184	65		 DB	 101			; 00000065H
  00185	53		 DB	 83			; 00000053H
  00186	65		 DB	 101			; 00000065H
  00187	74		 DB	 116			; 00000074H
  00188	74		 DB	 116			; 00000074H
  00189	69		 DB	 105			; 00000069H
  0018a	6e		 DB	 110			; 0000006eH
  0018b	67		 DB	 103			; 00000067H
  0018c	73		 DB	 115			; 00000073H
  0018d	00		 DB	 0
$LN11@DXUTToggle:
  0018e	64		 DB	 100			; 00000064H
  0018f	65		 DB	 101			; 00000065H
  00190	76		 DB	 118			; 00000076H
  00191	69		 DB	 105			; 00000069H
  00192	63		 DB	 99			; 00000063H
  00193	65		 DB	 101			; 00000065H
  00194	53		 DB	 83			; 00000053H
  00195	65		 DB	 101			; 00000065H
  00196	74		 DB	 116			; 00000074H
  00197	74		 DB	 116			; 00000074H
  00198	69		 DB	 105			; 00000069H
  00199	6e		 DB	 110			; 0000006eH
  0019a	67		 DB	 103			; 00000067H
  0019b	73		 DB	 115			; 00000073H
  0019c	00		 DB	 0
?DXUTToggleWARP@@YGJXZ ENDP				; DXUTToggleWARP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -628						; size = 100
$T2 = -528						; size = 100
_hr2$3 = -428						; size = 4
$T4 = -424						; size = 100
_orginalDeviceSettings$5 = -320				; size = 100
_hr$ = -216						; size = 4
$T6 = -212						; size = 100
_deviceSettings$ = -108					; size = 100
__$ArrayPad$ = -4					; size = 4
?DXUTToggleREF@@YGJXZ PROC				; DXUTToggleREF
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3526
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 02 00
	00		 sub	 esp, 628		; 00000274H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 8c fd ff
	ff		 lea	 edi, DWORD PTR [ebp-628]
  00011	b9 9d 00 00 00	 mov	 ecx, 157		; 0000009dH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3527
  00027	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  00033	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00038	8b f0		 mov	 esi, eax
  0003a	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR $T6[ebp]
  00040	f3 a5		 rep movsd
  00042	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00047	8d b5 2c ff ff
	ff		 lea	 esi, DWORD PTR $T6[ebp]
  0004d	8d 7d 94	 lea	 edi, DWORD PTR _deviceSettings$[ebp]
  00050	f3 a5		 rep movsd
; Line 3529
  00052	83 7d 9c 01	 cmp	 DWORD PTR _deviceSettings$[ebp+8], 1
  00056	75 09		 jne	 SHORT $LN9@DXUTToggle
; Line 3531
  00058	c7 45 9c 02 00
	00 00		 mov	 DWORD PTR _deviceSettings$[ebp+8], 2
  0005f	eb 2c		 jmp	 SHORT $LN8@DXUTToggle
$LN9@DXUTToggle:
; Line 3533
  00061	83 7d 9c 02	 cmp	 DWORD PTR _deviceSettings$[ebp+8], 2
  00065	75 09		 jne	 SHORT $LN7@DXUTToggle
; Line 3535
  00067	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR _deviceSettings$[ebp+8], 1
  0006e	eb 1d		 jmp	 SHORT $LN8@DXUTToggle
$LN7@DXUTToggle:
; Line 3537
  00070	83 7d 9c 05	 cmp	 DWORD PTR _deviceSettings$[ebp+8], 5
  00074	75 17		 jne	 SHORT $LN8@DXUTToggle
; Line 3539
  00076	83 7d d4 00	 cmp	 DWORD PTR _deviceSettings$[ebp+64], 0
  0007a	75 0a		 jne	 SHORT $LN4@DXUTToggle
; Line 3542
  0007c	b8 01 00 00 00	 mov	 eax, 1
  00081	e9 aa 00 00 00	 jmp	 $LN10@DXUTToggle
$LN4@DXUTToggle:
; Line 3545
  00086	c7 45 9c 02 00
	00 00		 mov	 DWORD PTR _deviceSettings$[ebp+8], 2
$LN8@DXUTToggle:
; Line 3548
  0008d	6a 00		 push	 0
  0008f	6a 00		 push	 0
  00091	8d 4d 94	 lea	 ecx, DWORD PTR _deviceSettings$[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 ?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009d	89 85 28 ff ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
; Line 3549
  000a3	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000aa	7c 7e		 jl	 SHORT $LN3@DXUTToggle
; Line 3551
  000ac	8d 95 8c fd ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  000b2	52		 push	 edx
  000b3	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  000b8	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000bd	8b f0		 mov	 esi, eax
  000bf	8d bd 58 fe ff
	ff		 lea	 edi, DWORD PTR $T4[ebp]
  000c5	f3 a5		 rep movsd
  000c7	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  000cc	8d b5 58 fe ff
	ff		 lea	 esi, DWORD PTR $T4[ebp]
  000d2	8d bd c0 fe ff
	ff		 lea	 edi, DWORD PTR _orginalDeviceSettings$5[ebp]
  000d8	f3 a5		 rep movsd
; Line 3555
  000da	6a 00		 push	 0
  000dc	8d 45 94	 lea	 eax, DWORD PTR _deviceSettings$[ebp]
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  000e5	83 c4 08	 add	 esp, 8
  000e8	89 85 28 ff ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
; Line 3558
  000ee	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000f5	7d 33		 jge	 SHORT $LN3@DXUTToggle
  000f7	81 bd 28 ff ff
	ff 04 40 00 80	 cmp	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
  00101	74 27		 je	 SHORT $LN3@DXUTToggle
; Line 3561
  00103	6a 00		 push	 0
  00105	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _orginalDeviceSettings$5[ebp]
  0010b	51		 push	 ecx
  0010c	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  00111	83 c4 08	 add	 esp, 8
  00114	89 85 54 fe ff
	ff		 mov	 DWORD PTR _hr2$3[ebp], eax
; Line 3562
  0011a	83 bd 54 fe ff
	ff 00		 cmp	 DWORD PTR _hr2$3[ebp], 0
  00121	7d 07		 jge	 SHORT $LN3@DXUTToggle
; Line 3565
  00123	6a 00		 push	 0
  00125	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
$LN3@DXUTToggle:
; Line 3570
  0012a	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
$LN10@DXUTToggle:
; Line 3571
  00130	52		 push	 edx
  00131	8b cd		 mov	 ecx, ebp
  00133	50		 push	 eax
  00134	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@DXUTToggle
  0013a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0013f	58		 pop	 eax
  00140	5a		 pop	 edx
  00141	5f		 pop	 edi
  00142	5e		 pop	 esi
  00143	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00146	33 cd		 xor	 ecx, ebp
  00148	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014d	81 c4 74 02 00
	00		 add	 esp, 628		; 00000274H
  00153	3b ec		 cmp	 ebp, esp
  00155	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c3		 ret	 0
  0015e	8b ff		 npad	 2
$LN15@DXUTToggle:
  00160	02 00 00 00	 DD	 2
  00164	00 00 00 00	 DD	 $LN14@DXUTToggle
$LN14@DXUTToggle:
  00168	94 ff ff ff	 DD	 -108			; ffffff94H
  0016c	64 00 00 00	 DD	 100			; 00000064H
  00170	00 00 00 00	 DD	 $LN12@DXUTToggle
  00174	c0 fe ff ff	 DD	 -320			; fffffec0H
  00178	64 00 00 00	 DD	 100			; 00000064H
  0017c	00 00 00 00	 DD	 $LN13@DXUTToggle
$LN13@DXUTToggle:
  00180	6f		 DB	 111			; 0000006fH
  00181	72		 DB	 114			; 00000072H
  00182	67		 DB	 103			; 00000067H
  00183	69		 DB	 105			; 00000069H
  00184	6e		 DB	 110			; 0000006eH
  00185	61		 DB	 97			; 00000061H
  00186	6c		 DB	 108			; 0000006cH
  00187	44		 DB	 68			; 00000044H
  00188	65		 DB	 101			; 00000065H
  00189	76		 DB	 118			; 00000076H
  0018a	69		 DB	 105			; 00000069H
  0018b	63		 DB	 99			; 00000063H
  0018c	65		 DB	 101			; 00000065H
  0018d	53		 DB	 83			; 00000053H
  0018e	65		 DB	 101			; 00000065H
  0018f	74		 DB	 116			; 00000074H
  00190	74		 DB	 116			; 00000074H
  00191	69		 DB	 105			; 00000069H
  00192	6e		 DB	 110			; 0000006eH
  00193	67		 DB	 103			; 00000067H
  00194	73		 DB	 115			; 00000073H
  00195	00		 DB	 0
$LN12@DXUTToggle:
  00196	64		 DB	 100			; 00000064H
  00197	65		 DB	 101			; 00000065H
  00198	76		 DB	 118			; 00000076H
  00199	69		 DB	 105			; 00000069H
  0019a	63		 DB	 99			; 00000063H
  0019b	65		 DB	 101			; 00000065H
  0019c	53		 DB	 83			; 00000053H
  0019d	65		 DB	 101			; 00000065H
  0019e	74		 DB	 116			; 00000074H
  0019f	74		 DB	 116			; 00000074H
  001a0	69		 DB	 105			; 00000069H
  001a1	6e		 DB	 110			; 0000006eH
  001a2	67		 DB	 103			; 00000067H
  001a3	73		 DB	 115			; 00000073H
  001a4	00		 DB	 0
?DXUTToggleREF@@YGJXZ ENDP				; DXUTToggleREF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -724						; size = 4
$T1 = -720						; size = 16
$T2 = -704						; size = 100
$T3 = -604						; size = 100
_hr2$4 = -504						; size = 4
$T5 = -500						; size = 16
_r$6 = -480						; size = 16
_adapterDesktopDisplayMode$7 = -456			; size = 28
_hr$ = -424						; size = 4
$T8 = -420						; size = 100
_orginalDeviceSettings$ = -316				; size = 100
$T9 = -212						; size = 100
_deviceSettings$ = -108					; size = 100
__$ArrayPad$ = -4					; size = 4
?DXUTToggleFullScreen@@YGJXZ PROC			; DXUTToggleFullScreen
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 3421
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 02 00
	00		 sub	 esp, 724		; 000002d4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 2c fd ff
	ff		 lea	 edi, DWORD PTR [ebp-724]
  00011	b9 b5 00 00 00	 mov	 ecx, 181		; 000000b5H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 3422
  00027	8d 85 a4 fd ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  00033	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00038	8b f0		 mov	 esi, eax
  0003a	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR $T9[ebp]
  00040	f3 a5		 rep movsd
  00042	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00047	8d b5 2c ff ff
	ff		 lea	 esi, DWORD PTR $T9[ebp]
  0004d	8d 7d 94	 lea	 edi, DWORD PTR _deviceSettings$[ebp]
  00050	f3 a5		 rep movsd
; Line 3423
  00052	83 7d 9c 05	 cmp	 DWORD PTR _deviceSettings$[ebp+8], 5
  00056	75 0a		 jne	 SHORT $LN6@DXUTToggle
; Line 3426
  00058	b8 01 00 00 00	 mov	 eax, 1
  0005d	e9 65 01 00 00	 jmp	 $LN7@DXUTToggle
$LN6@DXUTToggle:
; Line 3429
  00062	8d 8d 40 fd ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  0006e	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00073	8b f0		 mov	 esi, eax
  00075	8d bd 5c fe ff
	ff		 lea	 edi, DWORD PTR $T8[ebp]
  0007b	f3 a5		 rep movsd
  0007d	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00082	8d b5 5c fe ff
	ff		 lea	 esi, DWORD PTR $T8[ebp]
  00088	8d bd c4 fe ff
	ff		 lea	 edi, DWORD PTR _orginalDeviceSettings$[ebp]
  0008e	f3 a5		 rep movsd
; Line 3431
  00090	83 7d d4 00	 cmp	 DWORD PTR _deviceSettings$[ebp+64], 0
  00094	75 0c		 jne	 SHORT $LN9@DXUTToggle
  00096	c7 85 2c fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv72[ebp], 1
  000a0	eb 0a		 jmp	 SHORT $LN10@DXUTToggle
$LN9@DXUTToggle:
  000a2	c7 85 2c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv72[ebp], 0
$LN10@DXUTToggle:
  000ac	8b 95 2c fd ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  000b2	89 55 d4	 mov	 DWORD PTR _deviceSettings$[ebp+64], edx
; Line 3434
  000b5	83 7d d4 00	 cmp	 DWORD PTR _deviceSettings$[ebp+64], 0
  000b9	75 45		 jne	 SHORT $LN5@DXUTToggle
; Line 3437
  000bb	8d 85 38 fe ff
	ff		 lea	 eax, DWORD PTR _adapterDesktopDisplayMode$7[ebp]
  000c1	50		 push	 eax
  000c2	6a 00		 push	 0
  000c4	8b 4d 98	 mov	 ecx, DWORD PTR _deviceSettings$[ebp+4]
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 ?DXUTGetD3D11AdapterDisplayMode@@YGJIIPAUDXGI_MODE_DESC@@@Z ; DXUTGetD3D11AdapterDisplayMode
  000cd	89 85 58 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
; Line 3438
  000d3	83 bd 58 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000da	7d 12		 jge	 SHORT $LN4@DXUTToggle
; Line 3444
  000dc	b9 07 00 00 00	 mov	 ecx, 7
  000e1	be 00 00 00 00	 mov	 esi, OFFSET ?s_adapterDesktopDisplayMode@?L@??DXUTToggleFullScreen@@YGJXZ@4UDXGI_MODE_DESC@@B
  000e6	8d bd 38 fe ff
	ff		 lea	 edi, DWORD PTR _adapterDesktopDisplayMode$7[ebp]
  000ec	f3 a5		 rep movsd
$LN4@DXUTToggle:
; Line 3447
  000ee	b9 07 00 00 00	 mov	 ecx, 7
  000f3	8d b5 38 fe ff
	ff		 lea	 esi, DWORD PTR _adapterDesktopDisplayMode$7[ebp]
  000f9	8d 7d a4	 lea	 edi, DWORD PTR _deviceSettings$[ebp+16]
  000fc	f3 a5		 rep movsd
; Line 3449
  000fe	eb 71		 jmp	 SHORT $LN3@DXUTToggle
$LN5@DXUTToggle:
; Line 3451
  00100	8d 95 30 fd ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00106	52		 push	 edx
  00107	e8 00 00 00 00	 call	 ?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRectAtModeChange
  0010c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010e	89 8d 0c fe ff
	ff		 mov	 DWORD PTR $T5[ebp], ecx
  00114	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00117	89 95 10 fe ff
	ff		 mov	 DWORD PTR $T5[ebp+4], edx
  0011d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00120	89 8d 14 fe ff
	ff		 mov	 DWORD PTR $T5[ebp+8], ecx
  00126	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00129	89 95 18 fe ff
	ff		 mov	 DWORD PTR $T5[ebp+12], edx
  0012f	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00135	89 85 20 fe ff
	ff		 mov	 DWORD PTR _r$6[ebp], eax
  0013b	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp+4]
  00141	89 8d 24 fe ff
	ff		 mov	 DWORD PTR _r$6[ebp+4], ecx
  00147	8b 95 14 fe ff
	ff		 mov	 edx, DWORD PTR $T5[ebp+8]
  0014d	89 95 28 fe ff
	ff		 mov	 DWORD PTR _r$6[ebp+8], edx
  00153	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp+12]
  00159	89 85 2c fe ff
	ff		 mov	 DWORD PTR _r$6[ebp+12], eax
; Line 3452
  0015f	8b 8d 2c fe ff
	ff		 mov	 ecx, DWORD PTR _r$6[ebp+12]
  00165	89 4d a8	 mov	 DWORD PTR _deviceSettings$[ebp+20], ecx
; Line 3453
  00168	8b 95 28 fe ff
	ff		 mov	 edx, DWORD PTR _r$6[ebp+8]
  0016e	89 55 a4	 mov	 DWORD PTR _deviceSettings$[ebp+16], edx
$LN3@DXUTToggle:
; Line 3456
  00171	6a 00		 push	 0
  00173	8d 45 94	 lea	 eax, DWORD PTR _deviceSettings$[ebp]
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  0017c	83 c4 08	 add	 esp, 8
  0017f	89 85 58 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
; Line 3459
  00185	83 bd 58 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0018c	7d 33		 jge	 SHORT $LN2@DXUTToggle
  0018e	81 bd 58 fe ff
	ff 04 40 00 80	 cmp	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
  00198	74 27		 je	 SHORT $LN2@DXUTToggle
; Line 3462
  0019a	6a 00		 push	 0
  0019c	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _orginalDeviceSettings$[ebp]
  001a2	51		 push	 ecx
  001a3	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  001a8	83 c4 08	 add	 esp, 8
  001ab	89 85 08 fe ff
	ff		 mov	 DWORD PTR _hr2$4[ebp], eax
; Line 3463
  001b1	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR _hr2$4[ebp], 0
  001b8	7d 07		 jge	 SHORT $LN2@DXUTToggle
; Line 3466
  001ba	6a 00		 push	 0
  001bc	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
$LN2@DXUTToggle:
; Line 3470
  001c1	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
$LN7@DXUTToggle:
; Line 3471
  001c7	52		 push	 edx
  001c8	8b cd		 mov	 ecx, ebp
  001ca	50		 push	 eax
  001cb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@DXUTToggle
  001d1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001d6	58		 pop	 eax
  001d7	5a		 pop	 edx
  001d8	5f		 pop	 edi
  001d9	5e		 pop	 esi
  001da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001dd	33 cd		 xor	 ecx, ebp
  001df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e4	81 c4 d4 02 00
	00		 add	 esp, 724		; 000002d4H
  001ea	3b ec		 cmp	 ebp, esp
  001ec	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f1	8b e5		 mov	 esp, ebp
  001f3	5d		 pop	 ebp
  001f4	c3		 ret	 0
  001f5	8d 49 00	 npad	 3
$LN16@DXUTToggle:
  001f8	04 00 00 00	 DD	 4
  001fc	00 00 00 00	 DD	 $LN15@DXUTToggle
$LN15@DXUTToggle:
  00200	94 ff ff ff	 DD	 -108			; ffffff94H
  00204	64 00 00 00	 DD	 100			; 00000064H
  00208	00 00 00 00	 DD	 $LN11@DXUTToggle
  0020c	c4 fe ff ff	 DD	 -316			; fffffec4H
  00210	64 00 00 00	 DD	 100			; 00000064H
  00214	00 00 00 00	 DD	 $LN12@DXUTToggle
  00218	38 fe ff ff	 DD	 -456			; fffffe38H
  0021c	1c 00 00 00	 DD	 28			; 0000001cH
  00220	00 00 00 00	 DD	 $LN13@DXUTToggle
  00224	20 fe ff ff	 DD	 -480			; fffffe20H
  00228	10 00 00 00	 DD	 16			; 00000010H
  0022c	00 00 00 00	 DD	 $LN14@DXUTToggle
$LN14@DXUTToggle:
  00230	72		 DB	 114			; 00000072H
  00231	00		 DB	 0
$LN13@DXUTToggle:
  00232	61		 DB	 97			; 00000061H
  00233	64		 DB	 100			; 00000064H
  00234	61		 DB	 97			; 00000061H
  00235	70		 DB	 112			; 00000070H
  00236	74		 DB	 116			; 00000074H
  00237	65		 DB	 101			; 00000065H
  00238	72		 DB	 114			; 00000072H
  00239	44		 DB	 68			; 00000044H
  0023a	65		 DB	 101			; 00000065H
  0023b	73		 DB	 115			; 00000073H
  0023c	6b		 DB	 107			; 0000006bH
  0023d	74		 DB	 116			; 00000074H
  0023e	6f		 DB	 111			; 0000006fH
  0023f	70		 DB	 112			; 00000070H
  00240	44		 DB	 68			; 00000044H
  00241	69		 DB	 105			; 00000069H
  00242	73		 DB	 115			; 00000073H
  00243	70		 DB	 112			; 00000070H
  00244	6c		 DB	 108			; 0000006cH
  00245	61		 DB	 97			; 00000061H
  00246	79		 DB	 121			; 00000079H
  00247	4d		 DB	 77			; 0000004dH
  00248	6f		 DB	 111			; 0000006fH
  00249	64		 DB	 100			; 00000064H
  0024a	65		 DB	 101			; 00000065H
  0024b	00		 DB	 0
$LN12@DXUTToggle:
  0024c	6f		 DB	 111			; 0000006fH
  0024d	72		 DB	 114			; 00000072H
  0024e	67		 DB	 103			; 00000067H
  0024f	69		 DB	 105			; 00000069H
  00250	6e		 DB	 110			; 0000006eH
  00251	61		 DB	 97			; 00000061H
  00252	6c		 DB	 108			; 0000006cH
  00253	44		 DB	 68			; 00000044H
  00254	65		 DB	 101			; 00000065H
  00255	76		 DB	 118			; 00000076H
  00256	69		 DB	 105			; 00000069H
  00257	63		 DB	 99			; 00000063H
  00258	65		 DB	 101			; 00000065H
  00259	53		 DB	 83			; 00000053H
  0025a	65		 DB	 101			; 00000065H
  0025b	74		 DB	 116			; 00000074H
  0025c	74		 DB	 116			; 00000074H
  0025d	69		 DB	 105			; 00000069H
  0025e	6e		 DB	 110			; 0000006eH
  0025f	67		 DB	 103			; 00000067H
  00260	73		 DB	 115			; 00000073H
  00261	00		 DB	 0
$LN11@DXUTToggle:
  00262	64		 DB	 100			; 00000064H
  00263	65		 DB	 101			; 00000065H
  00264	76		 DB	 118			; 00000076H
  00265	69		 DB	 105			; 00000069H
  00266	63		 DB	 99			; 00000063H
  00267	65		 DB	 101			; 00000065H
  00268	53		 DB	 83			; 00000053H
  00269	65		 DB	 101			; 00000065H
  0026a	74		 DB	 116			; 00000074H
  0026b	74		 DB	 116			; 00000074H
  0026c	69		 DB	 105			; 00000069H
  0026d	6e		 DB	 110			; 0000006eH
  0026e	67		 DB	 103			; 00000067H
  0026f	73		 DB	 115			; 00000073H
  00270	00		 DB	 0
?DXUTToggleFullScreen@@YGJXZ ENDP			; DXUTToggleFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv304 = -120						; size = 8
_nFrame$ = -112						; size = 4
_pDeviceSettings$1 = -108				; size = 4
_SyncInterval$ = -104					; size = 4
_dwFlags$ = -100					; size = 4
_rcClient$2 = -92					; size = 16
_pCallbackFrameRender$3 = -72				; size = 4
_pCallbackFrameMove$ = -68				; size = 4
_fElapsedTime$ = -60					; size = 4
_fAbsTime$ = -48					; size = 8
_fTime$ = -32						; size = 8
_pSwapChain$ = -20					; size = 4
_pd3dImmediateContext$ = -16				; size = 4
_pd3dDevice$ = -12					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTRender3DEnvironment@@YGXXZ PROC			; DXUTRender3DEnvironment
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 2760
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d 88	 lea	 edi, DWORD PTR [ebp-120]
  0000b	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 2763
  00021	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00026	89 45 f4	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 2764
  00029	83 7d f4 00	 cmp	 DWORD PTR _pd3dDevice$[ebp], 0
  0002d	75 05		 jne	 SHORT $LN32@DXUTRender
; Line 2765
  0002f	e9 5d 04 00 00	 jmp	 $LN33@DXUTRender
$LN32@DXUTRender:
; Line 2767
  00034	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  00039	89 45 f0	 mov	 DWORD PTR _pd3dImmediateContext$[ebp], eax
; Line 2768
  0003c	83 7d f0 00	 cmp	 DWORD PTR _pd3dImmediateContext$[ebp], 0
  00040	75 05		 jne	 SHORT $LN31@DXUTRender
; Line 2769
  00042	e9 4a 04 00 00	 jmp	 $LN33@DXUTRender
$LN31@DXUTRender:
; Line 2771
  00047	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  0004c	89 45 ec	 mov	 DWORD PTR _pSwapChain$[ebp], eax
; Line 2772
  0004f	83 7d ec 00	 cmp	 DWORD PTR _pSwapChain$[ebp], 0
  00053	75 05		 jne	 SHORT $LN30@DXUTRender
; Line 2773
  00055	e9 37 04 00 00	 jmp	 $LN33@DXUTRender
$LN30@DXUTRender:
; Line 2775
  0005a	e8 00 00 00 00	 call	 ?DXUTIsRenderingPaused@@YG_NXZ ; DXUTIsRenderingPaused
  0005f	0f b6 c0	 movzx	 eax, al
  00062	85 c0		 test	 eax, eax
  00064	75 18		 jne	 SHORT $LN28@DXUTRender
  00066	e8 00 00 00 00	 call	 ?DXUTIsActive@@YG_NXZ	; DXUTIsActive
  0006b	0f b6 c8	 movzx	 ecx, al
  0006e	85 c9		 test	 ecx, ecx
  00070	74 0c		 je	 SHORT $LN28@DXUTRender
  00072	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
$LN28@DXUTRender:
; Line 2783
  0007e	8d 45 c4	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00081	50		 push	 eax
  00082	8d 4d d0	 lea	 ecx, DWORD PTR _fAbsTime$[ebp]
  00085	51		 push	 ecx
  00086	8d 55 e0	 lea	 edx, DWORD PTR _fTime$[ebp]
  00089	52		 push	 edx
  0008a	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ?GetTimeValues@CDXUTTimer@@QAEXPAN0PAM@Z ; CDXUTTimer::GetTimeValues
; Line 2786
  00096	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ?GetConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetConstantFrameTime
  000a2	0f b6 c0	 movzx	 eax, al
  000a5	85 c0		 test	 eax, eax
  000a7	74 2a		 je	 SHORT $LN27@DXUTRender
; Line 2788
  000a9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ?GetTimePerFrame@DXUTState@@QAEMXZ ; DXUTState::GetTimePerFrame
  000b5	d9 5d c4	 fstp	 DWORD PTR _fElapsedTime$[ebp]
; Line 2789
  000b8	e8 00 00 00 00	 call	 ?DXUTGetTime@@YGNXZ	; DXUTGetTime
  000bd	dd 5d 88	 fstp	 QWORD PTR tv304[ebp]
  000c0	f2 0f 10 45 88	 movsd	 xmm0, QWORD PTR tv304[ebp]
  000c5	f3 0f 5a 4d c4	 cvtss2sd xmm1, DWORD PTR _fElapsedTime$[ebp]
  000ca	f2 0f 58 c1	 addsd	 xmm0, xmm1
  000ce	f2 0f 11 45 e0	 movsd	 QWORD PTR _fTime$[ebp], xmm0
$LN27@DXUTRender:
; Line 2792
  000d3	83 ec 08	 sub	 esp, 8
  000d6	f2 0f 10 45 e0	 movsd	 xmm0, QWORD PTR _fTime$[ebp]
  000db	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000e5	8b c8		 mov	 ecx, eax
  000e7	e8 00 00 00 00	 call	 ?SetTime@DXUTState@@QAEXN@Z ; DXUTState::SetTime
; Line 2793
  000ec	83 ec 08	 sub	 esp, 8
  000ef	f2 0f 10 45 d0	 movsd	 xmm0, QWORD PTR _fAbsTime$[ebp]
  000f4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000fe	8b c8		 mov	 ecx, eax
  00100	e8 00 00 00 00	 call	 ?SetAbsoluteTime@DXUTState@@QAEXN@Z ; DXUTState::SetAbsoluteTime
; Line 2794
  00105	51		 push	 ecx
  00106	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00115	8b c8		 mov	 ecx, eax
  00117	e8 00 00 00 00	 call	 ?SetElapsedTime@DXUTState@@QAEXM@Z ; DXUTState::SetElapsedTime
; Line 2797
  0011c	e8 00 00 00 00	 call	 ?DXUTUpdateFrameStats@@YAXXZ ; DXUTUpdateFrameStats
; Line 2799
  00121	e8 00 00 00 00	 call	 ?DXUTHandleTimers@@YAXXZ ; DXUTHandleTimers
; Line 2802
  00126	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0012b	8b c8		 mov	 ecx, eax
  0012d	e8 00 00 00 00	 call	 ?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ ; DXUTState::GetFrameMoveFunc
  00132	89 45 bc	 mov	 DWORD PTR _pCallbackFrameMove$[ebp], eax
; Line 2803
  00135	83 7d bc 00	 cmp	 DWORD PTR _pCallbackFrameMove$[ebp], 0
  00139	74 44		 je	 SHORT $LN25@DXUTRender
; Line 2805
  0013b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00140	8b c8		 mov	 ecx, eax
  00142	e8 00 00 00 00	 call	 ?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetFrameMoveFuncUserContext
  00147	8b f4		 mov	 esi, esp
  00149	50		 push	 eax
  0014a	51		 push	 ecx
  0014b	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00150	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00155	83 ec 08	 sub	 esp, 8
  00158	f2 0f 10 45 e0	 movsd	 xmm0, QWORD PTR _fTime$[ebp]
  0015d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00162	ff 55 bc	 call	 DWORD PTR _pCallbackFrameMove$[ebp]
  00165	3b f4		 cmp	 esi, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2806
  0016c	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00171	89 45 f4	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 2807
  00174	83 7d f4 00	 cmp	 DWORD PTR _pd3dDevice$[ebp], 0
  00178	75 05		 jne	 SHORT $LN25@DXUTRender
; Line 2808
  0017a	e9 12 03 00 00	 jmp	 $LN33@DXUTRender
$LN25@DXUTRender:
; Line 2811
  0017f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00184	8b c8		 mov	 ecx, eax
  00186	e8 00 00 00 00	 call	 ?GetRenderingPaused@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingPaused
  0018b	0f b6 c8	 movzx	 ecx, al
  0018e	85 c9		 test	 ecx, ecx
  00190	0f 85 1a 01 00
	00		 jne	 $LN36@DXUTRender
; Line 2814
  00196	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0019b	8b c8		 mov	 ecx, eax
  0019d	e8 00 00 00 00	 call	 ?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ; DXUTState::GetD3D11FrameRenderFunc
  001a2	89 45 b8	 mov	 DWORD PTR _pCallbackFrameRender$3[ebp], eax
; Line 2815
  001a5	83 7d b8 00	 cmp	 DWORD PTR _pCallbackFrameRender$3[ebp], 0
  001a9	74 5f		 je	 SHORT $LN22@DXUTRender
  001ab	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001b0	8b c8		 mov	 ecx, eax
  001b2	e8 00 00 00 00	 call	 ?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
  001b7	0f b6 d0	 movzx	 edx, al
  001ba	85 d2		 test	 edx, edx
  001bc	75 4c		 jne	 SHORT $LN22@DXUTRender
; Line 2818
  001be	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001c3	8b c8		 mov	 ecx, eax
  001c5	e8 00 00 00 00	 call	 ?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11FrameRenderFuncUserContext
  001ca	8b f4		 mov	 esi, esp
  001cc	50		 push	 eax
  001cd	51		 push	 ecx
  001ce	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  001d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d8	83 ec 08	 sub	 esp, 8
  001db	f2 0f 10 45 e0	 movsd	 xmm0, QWORD PTR _fTime$[ebp]
  001e0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001e5	8b 45 f0	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001e8	50		 push	 eax
  001e9	8b 4d f4	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  001ec	51		 push	 ecx
  001ed	ff 55 b8	 call	 DWORD PTR _pCallbackFrameRender$3[ebp]
  001f0	3b f4		 cmp	 esi, esp
  001f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2820
  001f7	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  001fc	89 45 f4	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 2821
  001ff	83 7d f4 00	 cmp	 DWORD PTR _pd3dDevice$[ebp], 0
  00203	75 05		 jne	 SHORT $LN22@DXUTRender
; Line 2822
  00205	e9 87 02 00 00	 jmp	 $LN33@DXUTRender
$LN22@DXUTRender:
; Line 2829
  0020a	8b f4		 mov	 esi, esp
  0020c	8d 55 a4	 lea	 edx, DWORD PTR _rcClient$2[ebp]
  0020f	52		 push	 edx
  00210	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00215	50		 push	 eax
  00216	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0021c	3b f4		 cmp	 esi, esp
  0021e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2830
  00223	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00228	8b f4		 mov	 esi, esp
  0022a	50		 push	 eax
  0022b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsIconic@4
  00231	3b f4		 cmp	 esi, esp
  00233	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00238	85 c0		 test	 eax, eax
  0023a	75 74		 jne	 SHORT $LN36@DXUTRender
; Line 2832
  0023c	8b f4		 mov	 esi, esp
  0023e	8d 45 a4	 lea	 eax, DWORD PTR _rcClient$2[ebp]
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00247	50		 push	 eax
  00248	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0024e	3b f4		 cmp	 esi, esp
  00250	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2834
  00255	e8 00 00 00 00	 call	 ?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
  0025a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025c	3b 4d ac	 cmp	 ecx, DWORD PTR _rcClient$2[ebp+8]
  0025f	74 21		 je	 SHORT $LN35@DXUTRender
  00261	8b f4		 mov	 esi, esp
  00263	68 12 0b 00 00	 push	 2834			; 00000b12H
  00268	68 00 00 00 00	 push	 OFFSET $SG152594
  0026d	68 00 00 00 00	 push	 OFFSET $SG152595
  00272	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00278	83 c4 0c	 add	 esp, 12			; 0000000cH
  0027b	3b f4		 cmp	 esi, esp
  0027d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN35@DXUTRender:
; Line 2835
  00282	e8 00 00 00 00	 call	 ?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
  00287	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0028a	3b 45 b0	 cmp	 eax, DWORD PTR _rcClient$2[ebp+12]
  0028d	74 21		 je	 SHORT $LN36@DXUTRender
  0028f	8b f4		 mov	 esi, esp
  00291	68 13 0b 00 00	 push	 2835			; 00000b13H
  00296	68 00 00 00 00	 push	 OFFSET $SG152598
  0029b	68 00 00 00 00	 push	 OFFSET $SG152599
  002a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  002a6	83 c4 0c	 add	 esp, 12			; 0000000cH
  002a9	3b f4		 cmp	 esi, esp
  002ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN36@DXUTRender:
; Line 2840
  002b0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002b5	8b c8		 mov	 ecx, eax
  002b7	e8 00 00 00 00	 call	 ?GetSaveScreenShot@DXUTState@@QAE_NXZ ; DXUTState::GetSaveScreenShot
  002bc	0f b6 d0	 movzx	 edx, al
  002bf	85 d2		 test	 edx, edx
  002c1	74 17		 je	 SHORT $LN20@DXUTRender
; Line 2842
  002c3	6a 00		 push	 0
  002c5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002ca	8b c8		 mov	 ecx, eax
  002cc	e8 00 00 00 00	 call	 ?GetScreenShotName@DXUTState@@QAEPA_WXZ ; DXUTState::GetScreenShotName
  002d1	50		 push	 eax
  002d2	e8 00 00 00 00	 call	 ?DXUTSnapD3D11Screenshot@@YAJPB_W_N@Z ; DXUTSnapD3D11Screenshot
  002d7	83 c4 08	 add	 esp, 8
$LN20@DXUTRender:
; Line 2844
  002da	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002df	8b c8		 mov	 ecx, eax
  002e1	e8 00 00 00 00	 call	 ?GetExitAfterScreenShot@DXUTState@@QAE_NXZ ; DXUTState::GetExitAfterScreenShot
  002e6	0f b6 c0	 movzx	 eax, al
  002e9	85 c0		 test	 eax, eax
  002eb	74 0c		 je	 SHORT $LN19@DXUTRender
; Line 2846
  002ed	6a 00		 push	 0
  002ef	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
; Line 2847
  002f4	e9 98 01 00 00	 jmp	 $LN33@DXUTRender
$LN19@DXUTRender:
; Line 2850
  002f9	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _dwFlags$[ebp], 0
; Line 2851
  00300	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00305	8b c8		 mov	 ecx, eax
  00307	e8 00 00 00 00	 call	 ?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
  0030c	0f b6 c8	 movzx	 ecx, al
  0030f	85 c9		 test	 ecx, ecx
  00311	74 09		 je	 SHORT $LN18@DXUTRender
; Line 2852
  00313	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR _dwFlags$[ebp], 1
; Line 2853
  0031a	eb 12		 jmp	 SHORT $LN17@DXUTRender
$LN18@DXUTRender:
; Line 2854
  0031c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00321	8b c8		 mov	 ecx, eax
  00323	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  00328	8b 50 54	 mov	 edx, DWORD PTR [eax+84]
  0032b	89 55 9c	 mov	 DWORD PTR _dwFlags$[ebp], edx
$LN17@DXUTRender:
; Line 2855
  0032e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00333	8b c8		 mov	 ecx, eax
  00335	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  0033a	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  0033d	89 45 98	 mov	 DWORD PTR _SyncInterval$[ebp], eax
; Line 2858
  00340	8b f4		 mov	 esi, esp
  00342	8b 4d 9c	 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  00345	51		 push	 ecx
  00346	8b 55 98	 mov	 edx, DWORD PTR _SyncInterval$[ebp]
  00349	52		 push	 edx
  0034a	8b 45 ec	 mov	 eax, DWORD PTR _pSwapChain$[ebp]
  0034d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0034f	8b 55 ec	 mov	 edx, DWORD PTR _pSwapChain$[ebp]
  00352	52		 push	 edx
  00353	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00356	ff d0		 call	 eax
  00358	3b f4		 cmp	 esi, esp
  0035a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035f	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2859
  00362	81 7d f8 01 00
	7a 08		 cmp	 DWORD PTR _hr$[ebp], 142213121 ; 087a0001H
  00369	75 13		 jne	 SHORT $LN16@DXUTRender
; Line 2863
  0036b	6a 01		 push	 1
  0036d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00372	8b c8		 mov	 ecx, eax
  00374	e8 00 00 00 00	 call	 ?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
  00379	e9 c3 00 00 00	 jmp	 $LN3@DXUTRender
$LN16@DXUTRender:
; Line 2865
  0037e	81 7d f8 07 00
	7a 88		 cmp	 DWORD PTR _hr$[ebp], -2005270521 ; 887a0007H
  00385	75 69		 jne	 SHORT $LN14@DXUTRender
; Line 2868
  00387	e8 00 00 00 00	 call	 ?DXUTReset3DEnvironment11@@YAJXZ ; DXUTReset3DEnvironment11
  0038c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  0038f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00393	7d 59		 jge	 SHORT $LN9@DXUTRender
; Line 2871
  00395	81 7d f8 08 09
	04 80		 cmp	 DWORD PTR _hr$[ebp], -2147219192 ; 80040908H
  0039c	74 09		 je	 SHORT $LN11@DXUTRender
  0039e	81 7d f8 03 09
	04 80		 cmp	 DWORD PTR _hr$[ebp], -2147219197 ; 80040903H
  003a5	75 1a		 jne	 SHORT $LN12@DXUTRender
$LN11@DXUTRender:
; Line 2873
  003a7	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  003aa	51		 push	 ecx
  003ab	e8 00 00 00 00	 call	 ?DXUTDisplayErrorMessage@@YAXJ@Z ; DXUTDisplayErrorMessage
  003b0	83 c4 04	 add	 esp, 4
; Line 2874
  003b3	6a 00		 push	 0
  003b5	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
; Line 2875
  003ba	e9 d2 00 00 00	 jmp	 $LN33@DXUTRender
; Line 2877
  003bf	eb 2d		 jmp	 SHORT $LN9@DXUTRender
$LN12@DXUTRender:
; Line 2881
  003c1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003c6	8b c8		 mov	 ecx, eax
  003c8	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  003cd	89 45 94	 mov	 DWORD PTR _pDeviceSettings$1[ebp], eax
; Line 2882
  003d0	6a 00		 push	 0
  003d2	8b 55 94	 mov	 edx, DWORD PTR _pDeviceSettings$1[ebp]
  003d5	52		 push	 edx
  003d6	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  003db	83 c4 08	 add	 esp, 8
  003de	85 c0		 test	 eax, eax
  003e0	7d 0c		 jge	 SHORT $LN9@DXUTRender
; Line 2884
  003e2	6a 00		 push	 0
  003e4	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
; Line 2885
  003e9	e9 a3 00 00 00	 jmp	 $LN33@DXUTRender
$LN9@DXUTRender:
; Line 2891
  003ee	eb 51		 jmp	 SHORT $LN3@DXUTRender
$LN14@DXUTRender:
; Line 2892
  003f0	81 7d f8 05 00
	7a 88		 cmp	 DWORD PTR _hr$[ebp], -2005270523 ; 887a0005H
  003f7	75 21		 jne	 SHORT $LN7@DXUTRender
; Line 2896
  003f9	e8 00 00 00 00	 call	 ?DXUTHandleDeviceRemoved@@YAJXZ ; DXUTHandleDeviceRemoved
  003fe	85 c0		 test	 eax, eax
  00400	7d 16		 jge	 SHORT $LN6@DXUTRender
; Line 2899
  00402	68 0a 09 04 80	 push	 -2147219190		; 8004090aH
  00407	e8 00 00 00 00	 call	 ?DXUTDisplayErrorMessage@@YAXJ@Z ; DXUTDisplayErrorMessage
  0040c	83 c4 04	 add	 esp, 4
; Line 2900
  0040f	6a 00		 push	 0
  00411	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
; Line 2901
  00416	eb 79		 jmp	 SHORT $LN33@DXUTRender
$LN6@DXUTRender:
; Line 2903
  00418	eb 27		 jmp	 SHORT $LN3@DXUTRender
$LN7@DXUTRender:
; Line 2904
  0041a	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0041e	7c 21		 jl	 SHORT $LN3@DXUTRender
; Line 2906
  00420	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00425	8b c8		 mov	 ecx, eax
  00427	e8 00 00 00 00	 call	 ?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
  0042c	0f b6 c0	 movzx	 eax, al
  0042f	85 c0		 test	 eax, eax
  00431	74 0e		 je	 SHORT $LN3@DXUTRender
; Line 2910
  00433	6a 00		 push	 0
  00435	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0043a	8b c8		 mov	 ecx, eax
  0043c	e8 00 00 00 00	 call	 ?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
$LN3@DXUTRender:
; Line 2915
  00441	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00446	8b c8		 mov	 ecx, eax
  00448	e8 00 00 00 00	 call	 ?GetCurrentFrameNumber@DXUTState@@QAEHXZ ; DXUTState::GetCurrentFrameNumber
  0044d	89 45 90	 mov	 DWORD PTR _nFrame$[ebp], eax
; Line 2916
  00450	8b 4d 90	 mov	 ecx, DWORD PTR _nFrame$[ebp]
  00453	83 c1 01	 add	 ecx, 1
  00456	89 4d 90	 mov	 DWORD PTR _nFrame$[ebp], ecx
; Line 2917
  00459	8b 55 90	 mov	 edx, DWORD PTR _nFrame$[ebp]
  0045c	52		 push	 edx
  0045d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00462	8b c8		 mov	 ecx, eax
  00464	e8 00 00 00 00	 call	 ?SetCurrentFrameNumber@DXUTState@@QAEXH@Z ; DXUTState::SetCurrentFrameNumber
; Line 2920
  00469	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0046e	8b c8		 mov	 ecx, eax
  00470	e8 00 00 00 00	 call	 ?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ ; DXUTState::GetOverrideQuitAfterFrame
  00475	85 c0		 test	 eax, eax
  00477	74 18		 je	 SHORT $LN1@DXUTRender
; Line 2922
  00479	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0047e	8b c8		 mov	 ecx, eax
  00480	e8 00 00 00 00	 call	 ?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ ; DXUTState::GetOverrideQuitAfterFrame
  00485	39 45 90	 cmp	 DWORD PTR _nFrame$[ebp], eax
  00488	7e 07		 jle	 SHORT $LN1@DXUTRender
; Line 2923
  0048a	6a 00		 push	 0
  0048c	e8 00 00 00 00	 call	 ?DXUTShutdown@@YGXH@Z	; DXUTShutdown
$LN1@DXUTRender:
$LN33@DXUTRender:
; Line 2927
  00491	52		 push	 edx
  00492	8b cd		 mov	 ecx, ebp
  00494	50		 push	 eax
  00495	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN42@DXUTRender
  0049b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004a0	58		 pop	 eax
  004a1	5a		 pop	 edx
  004a2	5f		 pop	 edi
  004a3	5e		 pop	 esi
  004a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004a7	33 cd		 xor	 ecx, ebp
  004a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004ae	83 c4 78	 add	 esp, 120		; 00000078H
  004b1	3b ec		 cmp	 ebp, esp
  004b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004b8	8b e5		 mov	 esp, ebp
  004ba	5d		 pop	 ebp
  004bb	c3		 ret	 0
$LN42@DXUTRender:
  004bc	04 00 00 00	 DD	 4
  004c0	00 00 00 00	 DD	 $LN41@DXUTRender
$LN41@DXUTRender:
  004c4	e0 ff ff ff	 DD	 -32			; ffffffe0H
  004c8	08 00 00 00	 DD	 8
  004cc	00 00 00 00	 DD	 $LN37@DXUTRender
  004d0	d0 ff ff ff	 DD	 -48			; ffffffd0H
  004d4	08 00 00 00	 DD	 8
  004d8	00 00 00 00	 DD	 $LN38@DXUTRender
  004dc	c4 ff ff ff	 DD	 -60			; ffffffc4H
  004e0	04 00 00 00	 DD	 4
  004e4	00 00 00 00	 DD	 $LN39@DXUTRender
  004e8	a4 ff ff ff	 DD	 -92			; ffffffa4H
  004ec	10 00 00 00	 DD	 16			; 00000010H
  004f0	00 00 00 00	 DD	 $LN40@DXUTRender
$LN40@DXUTRender:
  004f4	72		 DB	 114			; 00000072H
  004f5	63		 DB	 99			; 00000063H
  004f6	43		 DB	 67			; 00000043H
  004f7	6c		 DB	 108			; 0000006cH
  004f8	69		 DB	 105			; 00000069H
  004f9	65		 DB	 101			; 00000065H
  004fa	6e		 DB	 110			; 0000006eH
  004fb	74		 DB	 116			; 00000074H
  004fc	00		 DB	 0
$LN39@DXUTRender:
  004fd	66		 DB	 102			; 00000066H
  004fe	45		 DB	 69			; 00000045H
  004ff	6c		 DB	 108			; 0000006cH
  00500	61		 DB	 97			; 00000061H
  00501	70		 DB	 112			; 00000070H
  00502	73		 DB	 115			; 00000073H
  00503	65		 DB	 101			; 00000065H
  00504	64		 DB	 100			; 00000064H
  00505	54		 DB	 84			; 00000054H
  00506	69		 DB	 105			; 00000069H
  00507	6d		 DB	 109			; 0000006dH
  00508	65		 DB	 101			; 00000065H
  00509	00		 DB	 0
$LN38@DXUTRender:
  0050a	66		 DB	 102			; 00000066H
  0050b	41		 DB	 65			; 00000041H
  0050c	62		 DB	 98			; 00000062H
  0050d	73		 DB	 115			; 00000073H
  0050e	54		 DB	 84			; 00000054H
  0050f	69		 DB	 105			; 00000069H
  00510	6d		 DB	 109			; 0000006dH
  00511	65		 DB	 101			; 00000065H
  00512	00		 DB	 0
$LN37@DXUTRender:
  00513	66		 DB	 102			; 00000066H
  00514	54		 DB	 84			; 00000054H
  00515	69		 DB	 105			; 00000069H
  00516	6d		 DB	 109			; 0000006dH
  00517	65		 DB	 101			; 00000065H
  00518	00		 DB	 0
?DXUTRender3DEnvironment@@YGXXZ ENDP			; DXUTRender3DEnvironment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv210 = -52						; size = 4
_msg$ = -44						; size = 28
_bGotMsg$ = -9						; size = 1
_hWnd$ = -8						; size = 4
_hr$ = -4						; size = 4
_hAccel$ = 8						; size = 4
?DXUTMainLoop@@YGJPAUHACCEL__@@@Z PROC			; DXUTMainLoop
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 1548
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0000b	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
; Line 1552
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
  00023	0f b6 c0	 movzx	 eax, al
  00026	85 c0		 test	 eax, eax
  00028	75 13		 jne	 SHORT $LN21@DXUTMainLo
  0002a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002f	8b c8		 mov	 ecx, eax
  00031	e8 00 00 00 00	 call	 ?GetInsideMainloop@DXUTState@@QAE_NXZ ; DXUTState::GetInsideMainloop
  00036	0f b6 c8	 movzx	 ecx, al
  00039	85 c9		 test	 ecx, ecx
  0003b	74 4f		 je	 SHORT $LN22@DXUTMainLo
$LN21@DXUTMainLo:
; Line 1554
  0003d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00042	8b c8		 mov	 ecx, eax
  00044	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  00049	85 c0		 test	 eax, eax
  0004b	74 11		 je	 SHORT $LN19@DXUTMainLo
  0004d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00052	8b c8		 mov	 ecx, eax
  00054	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  00059	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0005c	75 0e		 jne	 SHORT $LN20@DXUTMainLo
$LN19@DXUTMainLo:
; Line 1555
  0005e	6a 01		 push	 1
  00060	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
$LN20@DXUTMainLo:
; Line 1556
  0006c	6a 01		 push	 1
  0006e	68 00 00 00 00	 push	 OFFSET $SG151971
  00073	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00078	68 14 06 00 00	 push	 1556			; 00000614H
  0007d	68 00 00 00 00	 push	 OFFSET $SG151972
  00082	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00087	e9 46 02 00 00	 jmp	 $LN23@DXUTMainLo
$LN22@DXUTMainLo:
; Line 1559
  0008c	6a 01		 push	 1
  0008e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ?SetInsideMainloop@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideMainloop
; Line 1563
  0009a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ?GetDeviceCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceCreated
  000a6	0f b6 d0	 movzx	 edx, al
  000a9	85 d2		 test	 edx, edx
  000ab	0f 85 a2 00 00
	00		 jne	 $LN18@DXUTMainLo
; Line 1565
  000b1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ?GetDeviceCreateCalled@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceCreateCalled
  000bd	0f b6 c0	 movzx	 eax, al
  000c0	85 c0		 test	 eax, eax
  000c2	74 39		 je	 SHORT $LN17@DXUTMainLo
; Line 1567
  000c4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000c9	8b c8		 mov	 ecx, eax
  000cb	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  000d0	85 c0		 test	 eax, eax
  000d2	74 11		 je	 SHORT $LN15@DXUTMainLo
  000d4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000d9	8b c8		 mov	 ecx, eax
  000db	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  000e0	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  000e3	75 0e		 jne	 SHORT $LN16@DXUTMainLo
$LN15@DXUTMainLo:
; Line 1568
  000e5	6a 01		 push	 1
  000e7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000ec	8b c8		 mov	 ecx, eax
  000ee	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
$LN16@DXUTMainLo:
; Line 1569
  000f3	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000f8	e9 d5 01 00 00	 jmp	 $LN23@DXUTMainLo
$LN17@DXUTMainLo:
; Line 1572
  000fd	68 58 02 00 00	 push	 600			; 00000258H
  00102	68 20 03 00 00	 push	 800			; 00000320H
  00107	6a 01		 push	 1
  00109	68 00 a0 00 00	 push	 40960			; 0000a000H
  0010e	e8 00 00 00 00	 call	 ?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ; DXUTCreateDevice
  00113	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1573
  00116	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0011a	7d 37		 jge	 SHORT $LN18@DXUTMainLo
; Line 1575
  0011c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00121	8b c8		 mov	 ecx, eax
  00123	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  00128	85 c0		 test	 eax, eax
  0012a	74 11		 je	 SHORT $LN12@DXUTMainLo
  0012c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00131	8b c8		 mov	 ecx, eax
  00133	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  00138	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0013b	75 0e		 jne	 SHORT $LN13@DXUTMainLo
$LN12@DXUTMainLo:
; Line 1576
  0013d	6a 01		 push	 1
  0013f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00144	8b c8		 mov	 ecx, eax
  00146	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
$LN13@DXUTMainLo:
; Line 1577
  0014b	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0014e	e9 7f 01 00 00	 jmp	 $LN23@DXUTMainLo
$LN18@DXUTMainLo:
; Line 1581
  00153	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00158	89 45 f8	 mov	 DWORD PTR _hWnd$[ebp], eax
; Line 1586
  0015b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00160	8b c8		 mov	 ecx, eax
  00162	e8 00 00 00 00	 call	 ?GetDXUTInited@DXUTState@@QAE_NXZ ; DXUTState::GetDXUTInited
  00167	0f b6 c8	 movzx	 ecx, al
  0016a	85 c9		 test	 ecx, ecx
  0016c	74 26		 je	 SHORT $LN10@DXUTMainLo
  0016e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00173	8b c8		 mov	 ecx, eax
  00175	e8 00 00 00 00	 call	 ?GetWindowCreated@DXUTState@@QAE_NXZ ; DXUTState::GetWindowCreated
  0017a	0f b6 d0	 movzx	 edx, al
  0017d	85 d2		 test	 edx, edx
  0017f	74 13		 je	 SHORT $LN10@DXUTMainLo
  00181	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00186	8b c8		 mov	 ecx, eax
  00188	e8 00 00 00 00	 call	 ?GetDeviceCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceCreated
  0018d	0f b6 c0	 movzx	 eax, al
  00190	85 c0		 test	 eax, eax
  00192	75 4f		 jne	 SHORT $LN11@DXUTMainLo
$LN10@DXUTMainLo:
; Line 1588
  00194	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00199	8b c8		 mov	 ecx, eax
  0019b	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  001a0	85 c0		 test	 eax, eax
  001a2	74 11		 je	 SHORT $LN8@DXUTMainLo
  001a4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001a9	8b c8		 mov	 ecx, eax
  001ab	e8 00 00 00 00	 call	 ?GetExitCode@DXUTState@@QAEHXZ ; DXUTState::GetExitCode
  001b0	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  001b3	75 0e		 jne	 SHORT $LN9@DXUTMainLo
$LN8@DXUTMainLo:
; Line 1589
  001b5	6a 01		 push	 1
  001b7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001bc	8b c8		 mov	 ecx, eax
  001be	e8 00 00 00 00	 call	 ?SetExitCode@DXUTState@@QAEXH@Z ; DXUTState::SetExitCode
$LN9@DXUTMainLo:
; Line 1590
  001c3	6a 01		 push	 1
  001c5	68 00 00 00 00	 push	 OFFSET $SG151989
  001ca	68 05 40 00 80	 push	 -2147467259		; 80004005H
  001cf	68 36 06 00 00	 push	 1590			; 00000636H
  001d4	68 00 00 00 00	 push	 OFFSET $SG151990
  001d9	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001de	e9 ef 00 00 00	 jmp	 $LN23@DXUTMainLo
$LN11@DXUTMainLo:
; Line 1596
  001e3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+4], 0
; Line 1597
  001ea	8b f4		 mov	 esi, esp
  001ec	6a 00		 push	 0
  001ee	6a 00		 push	 0
  001f0	6a 00		 push	 0
  001f2	6a 00		 push	 0
  001f4	8d 4d d4	 lea	 ecx, DWORD PTR _msg$[ebp]
  001f7	51		 push	 ecx
  001f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageW@20
  001fe	3b f4		 cmp	 esi, esp
  00200	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@DXUTMainLo:
; Line 1599
  00205	83 7d d8 12	 cmp	 DWORD PTR _msg$[ebp+4], 18 ; 00000012H
  00209	0f 84 9a 00 00
	00		 je	 $LN6@DXUTMainLo
; Line 1602
  0020f	8b f4		 mov	 esi, esp
  00211	6a 01		 push	 1
  00213	6a 00		 push	 0
  00215	6a 00		 push	 0
  00217	6a 00		 push	 0
  00219	8d 55 d4	 lea	 edx, DWORD PTR _msg$[ebp]
  0021c	52		 push	 edx
  0021d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageW@20
  00223	3b f4		 cmp	 esi, esp
  00225	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022a	85 c0		 test	 eax, eax
  0022c	74 09		 je	 SHORT $LN25@DXUTMainLo
  0022e	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR tv210[ebp], 1
  00235	eb 07		 jmp	 SHORT $LN26@DXUTMainLo
$LN25@DXUTMainLo:
  00237	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN26@DXUTMainLo:
  0023e	8a 45 cc	 mov	 al, BYTE PTR tv210[ebp]
  00241	88 45 f7	 mov	 BYTE PTR _bGotMsg$[ebp], al
; Line 1604
  00244	0f b6 4d f7	 movzx	 ecx, BYTE PTR _bGotMsg$[ebp]
  00248	85 c9		 test	 ecx, ecx
  0024a	74 53		 je	 SHORT $LN5@DXUTMainLo
; Line 1608
  0024c	83 7d 08 00	 cmp	 DWORD PTR _hAccel$[ebp], 0
  00250	74 25		 je	 SHORT $LN3@DXUTMainLo
  00252	83 7d f8 00	 cmp	 DWORD PTR _hWnd$[ebp], 0
  00256	74 1f		 je	 SHORT $LN3@DXUTMainLo
  00258	8b f4		 mov	 esi, esp
  0025a	8d 55 d4	 lea	 edx, DWORD PTR _msg$[ebp]
  0025d	52		 push	 edx
  0025e	8b 45 08	 mov	 eax, DWORD PTR _hAccel$[ebp]
  00261	50		 push	 eax
  00262	8b 4d f8	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00265	51		 push	 ecx
  00266	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateAcceleratorW@12
  0026c	3b f4		 cmp	 esi, esp
  0026e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00273	85 c0		 test	 eax, eax
  00275	75 26		 jne	 SHORT $LN4@DXUTMainLo
$LN3@DXUTMainLo:
; Line 1610
  00277	8b f4		 mov	 esi, esp
  00279	8d 55 d4	 lea	 edx, DWORD PTR _msg$[ebp]
  0027c	52		 push	 edx
  0027d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4
  00283	3b f4		 cmp	 esi, esp
  00285	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1611
  0028a	8b f4		 mov	 esi, esp
  0028c	8d 45 d4	 lea	 eax, DWORD PTR _msg$[ebp]
  0028f	50		 push	 eax
  00290	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageW@4
  00296	3b f4		 cmp	 esi, esp
  00298	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@DXUTMainLo:
; Line 1614
  0029d	eb 05		 jmp	 SHORT $LN2@DXUTMainLo
$LN5@DXUTMainLo:
; Line 1617
  0029f	e8 00 00 00 00	 call	 ?DXUTRender3DEnvironment@@YGXXZ ; DXUTRender3DEnvironment
$LN2@DXUTMainLo:
; Line 1619
  002a4	e9 5c ff ff ff	 jmp	 $LN7@DXUTMainLo
$LN6@DXUTMainLo:
; Line 1622
  002a9	83 7d 08 00	 cmp	 DWORD PTR _hAccel$[ebp], 0
  002ad	74 13		 je	 SHORT $LN1@DXUTMainLo
; Line 1623
  002af	8b f4		 mov	 esi, esp
  002b1	8b 4d 08	 mov	 ecx, DWORD PTR _hAccel$[ebp]
  002b4	51		 push	 ecx
  002b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyAcceleratorTable@4
  002bb	3b f4		 cmp	 esi, esp
  002bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@DXUTMainLo:
; Line 1625
  002c2	6a 00		 push	 0
  002c4	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002c9	8b c8		 mov	 ecx, eax
  002cb	e8 00 00 00 00	 call	 ?SetInsideMainloop@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideMainloop
; Line 1627
  002d0	33 c0		 xor	 eax, eax
$LN23@DXUTMainLo:
; Line 1628
  002d2	52		 push	 edx
  002d3	8b cd		 mov	 ecx, ebp
  002d5	50		 push	 eax
  002d6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN29@DXUTMainLo
  002dc	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002e1	58		 pop	 eax
  002e2	5a		 pop	 edx
  002e3	5f		 pop	 edi
  002e4	5e		 pop	 esi
  002e5	83 c4 34	 add	 esp, 52			; 00000034H
  002e8	3b ec		 cmp	 ebp, esp
  002ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ef	8b e5		 mov	 esp, ebp
  002f1	5d		 pop	 ebp
  002f2	c2 04 00	 ret	 4
  002f5	8d 49 00	 npad	 3
$LN29@DXUTMainLo:
  002f8	01 00 00 00	 DD	 1
  002fc	00 00 00 00	 DD	 $LN28@DXUTMainLo
$LN28@DXUTMainLo:
  00300	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00304	1c 00 00 00	 DD	 28			; 0000001cH
  00308	00 00 00 00	 DD	 $LN27@DXUTMainLo
$LN27@DXUTMainLo:
  0030c	6d		 DB	 109			; 0000006dH
  0030d	73		 DB	 115			; 00000073H
  0030e	67		 DB	 103			; 00000067H
  0030f	00		 DB	 0
?DXUTMainLoop@@YGJPAUHACCEL__@@@Z ENDP			; DXUTMainLoop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_pDeviceSettings$ = 8					; size = 4
_bClipWindowToSingleAdapter$ = 12			; size = 1
?DXUTCreateDeviceFromSettings@@YGJPAUDXUTDeviceSettings@@_N@Z PROC ; DXUTCreateDeviceFromSettings
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 1735
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1736
  0000b	83 7d 08 00	 cmp	 DWORD PTR _pDeviceSettings$[ebp], 0
  0000f	75 0a		 jne	 SHORT $LN5@DXUTCreate
; Line 1737
  00011	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00016	e9 df 00 00 00	 jmp	 $LN6@DXUTCreate
$LN5@DXUTCreate:
; Line 1741
  0001b	6a 01		 push	 1
  0001d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00022	8b c8		 mov	 ecx, eax
  00024	e8 00 00 00 00	 call	 ?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceCreateCalled
; Line 1745
  00029	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?GetWindowCreated@DXUTState@@QAE_NXZ ; DXUTState::GetWindowCreated
  00035	0f b6 c0	 movzx	 eax, al
  00038	85 c0		 test	 eax, eax
  0003a	75 45		 jne	 SHORT $LN4@DXUTCreate
; Line 1749
  0003c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ?GetWindowCreateCalled@DXUTState@@QAE_NXZ ; DXUTState::GetWindowCreateCalled
  00048	0f b6 c8	 movzx	 ecx, al
  0004b	85 c9		 test	 ecx, ecx
  0004d	74 0a		 je	 SHORT $LN3@DXUTCreate
; Line 1750
  0004f	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00054	e9 a1 00 00 00	 jmp	 $LN6@DXUTCreate
$LN3@DXUTCreate:
; Line 1754
  00059	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0005e	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00063	6a 00		 push	 0
  00065	6a 00		 push	 0
  00067	6a 00		 push	 0
  00069	68 00 00 00 00	 push	 OFFSET $SG152059
  0006e	e8 00 00 00 00	 call	 ?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
  00073	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1755
  00076	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0007a	7d 05		 jge	 SHORT $LN4@DXUTCreate
; Line 1756
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0007f	eb 79		 jmp	 SHORT $LN6@DXUTCreate
$LN4@DXUTCreate:
; Line 1759
  00081	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 ?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTUpdateDeviceSettingsWithOverrides
  0008a	83 c4 04	 add	 esp, 4
; Line 1761
  0008d	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  00090	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00093	51		 push	 ecx
  00094	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 1762
  000a0	8b 55 08	 mov	 edx, DWORD PTR _pDeviceSettings$[ebp]
  000a3	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
; Line 1763
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _pDeviceSettings$[ebp]
  000b6	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000b9	52		 push	 edx
  000ba	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000bf	8b c8		 mov	 ecx, eax
  000c1	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 1764
  000c6	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000c9	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000cc	51		 push	 ecx
  000cd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
; Line 1768
  000d9	0f b6 55 0c	 movzx	 edx, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
  000dd	52		 push	 edx
  000de	8b 45 08	 mov	 eax, DWORD PTR _pDeviceSettings$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  000e7	83 c4 08	 add	 esp, 8
  000ea	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1769
  000ed	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000f1	7d 05		 jge	 SHORT $LN1@DXUTCreate
; Line 1770
  000f3	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  000f6	eb 02		 jmp	 SHORT $LN6@DXUTCreate
$LN1@DXUTCreate:
; Line 1772
  000f8	33 c0		 xor	 eax, eax
$LN6@DXUTCreate:
; Line 1773
  000fa	83 c4 04	 add	 esp, 4
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 08 00	 ret	 8
?DXUTCreateDeviceFromSettings@@YGJPAUDXUTDeviceSettings@@_N@Z ENDP ; DXUTCreateDeviceFromSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_osv$1 = -404						; size = 284
_deviceSettings$ = -112					; size = 100
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_reqFL$ = 8						; size = 4
_bWindowed$ = 12					; size = 1
_nSuggestedWidth$ = 16					; size = 4
_nSuggestedHeight$ = 20					; size = 4
?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z PROC	; DXUTCreateDevice
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 1638
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 01 00
	00		 sub	 esp, 408		; 00000198H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 68 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-408]
  00011	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 1639
  00027	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1642
  0002e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 20		 je	 SHORT $LN15@DXUTCreate
; Line 1643
  00041	6a 01		 push	 1
  00043	68 00 00 00 00	 push	 OFFSET $SG152013
  00048	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0004d	68 6b 06 00 00	 push	 1643			; 0000066bH
  00052	68 00 00 00 00	 push	 OFFSET $SG152014
  00057	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0005c	e9 39 02 00 00	 jmp	 $LN16@DXUTCreate
$LN15@DXUTCreate:
; Line 1645
  00061	6a 01		 push	 1
  00063	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceCreateCalled
; Line 1649
  0006f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ?GetWindowCreated@DXUTState@@QAE_NXZ ; DXUTState::GetWindowCreated
  0007b	0f b6 c8	 movzx	 ecx, al
  0007e	85 c9		 test	 ecx, ecx
  00080	75 48		 jne	 SHORT $LN14@DXUTCreate
; Line 1653
  00082	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ?GetWindowCreateCalled@DXUTState@@QAE_NXZ ; DXUTState::GetWindowCreateCalled
  0008e	0f b6 d0	 movzx	 edx, al
  00091	85 d2		 test	 edx, edx
  00093	74 0a		 je	 SHORT $LN13@DXUTCreate
; Line 1654
  00095	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  0009a	e9 fb 01 00 00	 jmp	 $LN16@DXUTCreate
$LN13@DXUTCreate:
; Line 1658
  0009f	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000a4	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000a9	6a 00		 push	 0
  000ab	6a 00		 push	 0
  000ad	6a 00		 push	 0
  000af	68 00 00 00 00	 push	 OFFSET $SG152018
  000b4	e8 00 00 00 00	 call	 ?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
  000b9	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1659
  000bc	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c0	7d 08		 jge	 SHORT $LN14@DXUTCreate
; Line 1660
  000c2	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  000c5	e9 d0 01 00 00	 jmp	 $LN16@DXUTCreate
$LN14@DXUTCreate:
; Line 1664
  000ca	8d 45 90	 lea	 eax, DWORD PTR _deviceSettings$[ebp]
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTApplyDefaultDeviceSettings
  000d3	83 c4 04	 add	 esp, 4
; Line 1665
  000d6	8b 4d 08	 mov	 ecx, DWORD PTR _reqFL$[ebp]
  000d9	89 4d 90	 mov	 DWORD PTR _deviceSettings$[ebp], ecx
; Line 1666
  000dc	8b 55 10	 mov	 edx, DWORD PTR _nSuggestedWidth$[ebp]
  000df	89 55 a0	 mov	 DWORD PTR _deviceSettings$[ebp+16], edx
; Line 1667
  000e2	8b 45 14	 mov	 eax, DWORD PTR _nSuggestedHeight$[ebp]
  000e5	89 45 a4	 mov	 DWORD PTR _deviceSettings$[ebp+20], eax
; Line 1668
  000e8	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _bWindowed$[ebp]
  000ec	89 4d d0	 mov	 DWORD PTR _deviceSettings$[ebp+64], ecx
; Line 1670
  000ef	8d 55 90	 lea	 edx, DWORD PTR _deviceSettings$[ebp]
  000f2	52		 push	 edx
  000f3	e8 00 00 00 00	 call	 ?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTUpdateDeviceSettingsWithOverrides
  000f8	83 c4 04	 add	 esp, 4
; Line 1672
  000fb	8b 45 a0	 mov	 eax, DWORD PTR _deviceSettings$[ebp+16]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 1673
  0010b	8b 4d a4	 mov	 ecx, DWORD PTR _deviceSettings$[ebp+20]
  0010e	51		 push	 ecx
  0010f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00114	8b c8		 mov	 ecx, eax
  00116	e8 00 00 00 00	 call	 ?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
; Line 1674
  0011b	8b 55 a0	 mov	 edx, DWORD PTR _deviceSettings$[ebp+16]
  0011e	52		 push	 edx
  0011f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00124	8b c8		 mov	 ecx, eax
  00126	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 1675
  0012b	8b 45 a4	 mov	 eax, DWORD PTR _deviceSettings$[ebp+20]
  0012e	50		 push	 eax
  0012f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00134	8b c8		 mov	 ecx, eax
  00136	e8 00 00 00 00	 call	 ?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
; Line 1679
  0013b	6a 01		 push	 1
  0013d	8d 4d 90	 lea	 ecx, DWORD PTR _deviceSettings$[ebp]
  00140	51		 push	 ecx
  00141	e8 00 00 00 00	 call	 ?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
  00146	83 c4 08	 add	 esp, 8
  00149	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1681
  0014c	81 7d f8 01 09
	04 80		 cmp	 DWORD PTR _hr$[ebp], -2147219199 ; 80040901H
  00153	0f 85 33 01 00
	00		 jne	 $LN11@DXUTCreate
  00159	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0015e	8b c8		 mov	 ecx, eax
  00160	e8 00 00 00 00	 call	 ?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ ; DXUTState::GetMessageWhenD3D11NotAvailable
  00165	0f b6 d0	 movzx	 edx, al
  00168	85 d2		 test	 edx, edx
  0016a	0f 84 1c 01 00
	00		 je	 $LN11@DXUTCreate
; Line 1684
  00170	68 1c 01 00 00	 push	 284			; 0000011cH
  00175	6a 00		 push	 0
  00177	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _osv$1[ebp]
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 _memset
  00183	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1685
  00186	c7 85 6c fe ff
	ff 1c 01 00 00	 mov	 DWORD PTR _osv$1[ebp], 284 ; 0000011cH
; Line 1687
  00190	8b f4		 mov	 esi, esp
  00192	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _osv$1[ebp]
  00198	51		 push	 ecx
  00199	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExW@4
  0019f	3b f4		 cmp	 esi, esp
  001a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1691
  001a6	83 bd 70 fe ff
	ff 06		 cmp	 DWORD PTR _osv$1[ebp+4], 6
  001ad	77 30		 ja	 SHORT $LN9@DXUTCreate
  001af	83 bd 70 fe ff
	ff 06		 cmp	 DWORD PTR _osv$1[ebp+4], 6
  001b6	75 09		 jne	 SHORT $LN8@DXUTCreate
  001b8	83 bd 74 fe ff
	ff 01		 cmp	 DWORD PTR _osv$1[ebp+8], 1
  001bf	73 1e		 jae	 SHORT $LN9@DXUTCreate
$LN8@DXUTCreate:
  001c1	83 bd 70 fe ff
	ff 06		 cmp	 DWORD PTR _osv$1[ebp+4], 6
  001c8	75 37		 jne	 SHORT $LN10@DXUTCreate
  001ca	83 bd 74 fe ff
	ff 00		 cmp	 DWORD PTR _osv$1[ebp+8], 0
  001d1	75 2e		 jne	 SHORT $LN10@DXUTCreate
  001d3	81 bd 78 fe ff
	ff 72 17 00 00	 cmp	 DWORD PTR _osv$1[ebp+12], 6002 ; 00001772H
  001dd	76 22		 jbe	 SHORT $LN10@DXUTCreate
$LN9@DXUTCreate:
; Line 1693
  001df	8b f4		 mov	 esi, esp
  001e1	6a 30		 push	 48			; 00000030H
  001e3	68 00 00 00 00	 push	 OFFSET $SG152032
  001e8	68 00 00 00 00	 push	 OFFSET $SG152033
  001ed	6a 00		 push	 0
  001ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  001f5	3b f4		 cmp	 esi, esp
  001f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001fc	e9 8b 00 00 00	 jmp	 $LN11@DXUTCreate
$LN10@DXUTCreate:
; Line 1697
  00201	83 bd 70 fe ff
	ff 06		 cmp	 DWORD PTR _osv$1[ebp+4], 6
  00208	75 34		 jne	 SHORT $LN6@DXUTCreate
  0020a	83 bd 74 fe ff
	ff 00		 cmp	 DWORD PTR _osv$1[ebp+8], 0
  00211	75 2b		 jne	 SHORT $LN6@DXUTCreate
  00213	81 bd 78 fe ff
	ff 72 17 00 00	 cmp	 DWORD PTR _osv$1[ebp+12], 6002 ; 00001772H
  0021d	75 1f		 jne	 SHORT $LN6@DXUTCreate
; Line 1702
  0021f	8b f4		 mov	 esi, esp
  00221	6a 30		 push	 48			; 00000030H
  00223	68 00 00 00 00	 push	 OFFSET $SG152036
  00228	68 00 00 00 00	 push	 OFFSET $SG152037
  0022d	6a 00		 push	 0
  0022f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  00235	3b f4		 cmp	 esi, esp
  00237	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023c	eb 4e		 jmp	 SHORT $LN11@DXUTCreate
$LN6@DXUTCreate:
; Line 1704
  0023e	83 bd 70 fe ff
	ff 06		 cmp	 DWORD PTR _osv$1[ebp+4], 6
  00245	75 28		 jne	 SHORT $LN4@DXUTCreate
  00247	83 bd 74 fe ff
	ff 00		 cmp	 DWORD PTR _osv$1[ebp+8], 0
  0024e	75 1f		 jne	 SHORT $LN4@DXUTCreate
; Line 1708
  00250	8b f4		 mov	 esi, esp
  00252	6a 30		 push	 48			; 00000030H
  00254	68 00 00 00 00	 push	 OFFSET $SG152040
  00259	68 00 00 00 00	 push	 OFFSET $SG152041
  0025e	6a 00		 push	 0
  00260	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  00266	3b f4		 cmp	 esi, esp
  00268	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1710
  0026d	eb 1d		 jmp	 SHORT $LN11@DXUTCreate
$LN4@DXUTCreate:
; Line 1712
  0026f	8b f4		 mov	 esi, esp
  00271	6a 30		 push	 48			; 00000030H
  00273	68 00 00 00 00	 push	 OFFSET $SG152043
  00278	68 00 00 00 00	 push	 OFFSET $SG152044
  0027d	6a 00		 push	 0
  0027f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxW@16
  00285	3b f4		 cmp	 esi, esp
  00287	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@DXUTCreate:
; Line 1716
  0028c	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00290	7d 05		 jge	 SHORT $LN1@DXUTCreate
; Line 1717
  00292	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00295	eb 03		 jmp	 SHORT $LN16@DXUTCreate
$LN1@DXUTCreate:
; Line 1724
  00297	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN16@DXUTCreate:
; Line 1725
  0029a	52		 push	 edx
  0029b	8b cd		 mov	 ecx, ebp
  0029d	50		 push	 eax
  0029e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN21@DXUTCreate
  002a4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002a9	58		 pop	 eax
  002aa	5a		 pop	 edx
  002ab	5f		 pop	 edi
  002ac	5e		 pop	 esi
  002ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002b0	33 cd		 xor	 ecx, ebp
  002b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b7	81 c4 98 01 00
	00		 add	 esp, 408		; 00000198H
  002bd	3b ec		 cmp	 ebp, esp
  002bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 10 00	 ret	 16			; 00000010H
  002ca	8b ff		 npad	 2
$LN21@DXUTCreate:
  002cc	02 00 00 00	 DD	 2
  002d0	00 00 00 00	 DD	 $LN20@DXUTCreate
$LN20@DXUTCreate:
  002d4	90 ff ff ff	 DD	 -112			; ffffff90H
  002d8	64 00 00 00	 DD	 100			; 00000064H
  002dc	00 00 00 00	 DD	 $LN18@DXUTCreate
  002e0	6c fe ff ff	 DD	 -404			; fffffe6cH
  002e4	1c 01 00 00	 DD	 284			; 0000011cH
  002e8	00 00 00 00	 DD	 $LN19@DXUTCreate
$LN19@DXUTCreate:
  002ec	6f		 DB	 111			; 0000006fH
  002ed	73		 DB	 115			; 00000073H
  002ee	76		 DB	 118			; 00000076H
  002ef	00		 DB	 0
$LN18@DXUTCreate:
  002f0	64		 DB	 100			; 00000064H
  002f1	65		 DB	 101			; 00000065H
  002f2	76		 DB	 118			; 00000076H
  002f3	69		 DB	 105			; 00000069H
  002f4	63		 DB	 99			; 00000063H
  002f5	65		 DB	 101			; 00000065H
  002f6	53		 DB	 83			; 00000053H
  002f7	65		 DB	 101			; 00000065H
  002f8	74		 DB	 116			; 00000074H
  002f9	74		 DB	 116			; 00000074H
  002fa	69		 DB	 105			; 00000069H
  002fb	6e		 DB	 110			; 0000006eH
  002fc	67		 DB	 103			; 00000067H
  002fd	73		 DB	 115			; 00000073H
  002fe	00		 DB	 0
?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ENDP	; DXUTCreateDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv496 = -212						; size = 4
tv478 = -208						; size = 4
tv469 = -204						; size = 4
tv460 = -200						; size = 4
tv435 = -193						; size = 1
tv229 = -192						; size = 4
tv182 = -188						; size = 4
tv178 = -184						; size = 4
tv174 = -180						; size = 4
tv170 = -176						; size = 4
tv166 = -172						; size = 4
tv74 = -168						; size = 4
tv70 = -164						; size = 4
_hMenu$1 = -160						; size = 4
_bTimePaused$2 = -153					; size = 1
_rcCurrentClient$3 = -148				; size = 16
_pSwapChain$4 = -128					; size = 4
_dwFlags$5 = -124					; size = 4
_pCallbackFrameRender$6 = -120				; size = 4
_pDeferred$7 = -116					; size = 4
_pd3dDevice$8 = -112					; size = 4
_fElapsedTime$9 = -108					; size = 4
_fTime$10 = -104					; size = 8
_hr$11 = -96						; size = 4
_nResult$12 = -92					; size = 4
_bNoFurtherProcessing$13 = -81				; size = 1
_pCallbackMsgProc$ = -76				; size = 4
_pCallbackMouse$14 = -72				; size = 4
_bMouseButtons$15 = -68					; size = 4
_bSideButton2$16 = -61					; size = 1
_bSideButton1$17 = -60					; size = 1
_bMiddleButton$18 = -59					; size = 1
_bRightButton$19 = -58					; size = 1
_bLeftButton$20 = -57					; size = 1
_nMouseButtonState$21 = -56				; size = 4
_nMouseWheelDelta$22 = -52				; size = 4
_pt$23 = -44						; size = 8
_yPos$24 = -32						; size = 4
_xPos$25 = -28						; size = 4
_pCallbackKeyboard$26 = -24				; size = 4
_bKeys$27 = -20						; size = 4
_bAltDown$28 = -13					; size = 1
_dwMask$29 = -12					; size = 4
_bKeyDown$30 = -5					; size = 1
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z PROC		; DXUTStaticWndProc
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 1146
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00011	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 1152
  00027	81 7d 0c 00 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 256 ; 00000100H
  0002e	74 1f		 je	 SHORT $LN79@DXUTStatic
  00030	81 7d 0c 04 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 260 ; 00000104H
  00037	74 16		 je	 SHORT $LN79@DXUTStatic
  00039	81 7d 0c 01 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 257 ; 00000101H
  00040	74 0d		 je	 SHORT $LN79@DXUTStatic
  00042	81 7d 0c 05 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 261 ; 00000105H
  00049	0f 85 be 00 00
	00		 jne	 $LN78@DXUTStatic
$LN79@DXUTStatic:
; Line 1154
  0004f	81 7d 0c 00 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 256 ; 00000100H
  00056	74 15		 je	 SHORT $LN83@DXUTStatic
  00058	81 7d 0c 04 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 260 ; 00000104H
  0005f	74 0c		 je	 SHORT $LN83@DXUTStatic
  00061	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
  0006b	eb 0a		 jmp	 SHORT $LN84@DXUTStatic
$LN83@DXUTStatic:
  0006d	c7 85 5c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv70[ebp], 1
$LN84@DXUTStatic:
  00077	8a 85 5c ff ff
	ff		 mov	 al, BYTE PTR tv70[ebp]
  0007d	88 45 fb	 mov	 BYTE PTR _bKeyDown$30[ebp], al
; Line 1155
  00080	c7 45 f4 00 00
	00 20		 mov	 DWORD PTR _dwMask$29[ebp], 536870912 ; 20000000H
; Line 1156
  00087	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0008a	23 4d f4	 and	 ecx, DWORD PTR _dwMask$29[ebp]
  0008d	74 0c		 je	 SHORT $LN85@DXUTStatic
  0008f	c7 85 58 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv74[ebp], 1
  00099	eb 0a		 jmp	 SHORT $LN86@DXUTStatic
$LN85@DXUTStatic:
  0009b	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN86@DXUTStatic:
  000a5	8a 95 58 ff ff
	ff		 mov	 dl, BYTE PTR tv74[ebp]
  000ab	88 55 f3	 mov	 BYTE PTR _bAltDown$28[ebp], dl
; Line 1158
  000ae	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ?GetKeys@DXUTState@@QAEPA_NXZ ; DXUTState::GetKeys
  000ba	89 45 ec	 mov	 DWORD PTR _bKeys$27[ebp], eax
; Line 1159
  000bd	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  000c0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000c5	0f b6 c8	 movzx	 ecx, al
  000c8	8b 55 ec	 mov	 edx, DWORD PTR _bKeys$27[ebp]
  000cb	8a 45 fb	 mov	 al, BYTE PTR _bKeyDown$30[ebp]
  000ce	88 04 0a	 mov	 BYTE PTR [edx+ecx], al
; Line 1161
  000d1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000d6	8b c8		 mov	 ecx, eax
  000d8	e8 00 00 00 00	 call	 ?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ ; DXUTState::GetKeyboardFunc
  000dd	89 45 e8	 mov	 DWORD PTR _pCallbackKeyboard$26[ebp], eax
; Line 1162
  000e0	83 7d e8 00	 cmp	 DWORD PTR _pCallbackKeyboard$26[ebp], 0
  000e4	74 27		 je	 SHORT $LN78@DXUTStatic
; Line 1163
  000e6	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000eb	8b c8		 mov	 ecx, eax
  000ed	e8 00 00 00 00	 call	 ?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetKeyboardFuncUserContext
  000f2	8b f4		 mov	 esi, esp
  000f4	50		 push	 eax
  000f5	0f b6 4d f3	 movzx	 ecx, BYTE PTR _bAltDown$28[ebp]
  000f9	51		 push	 ecx
  000fa	0f b6 55 fb	 movzx	 edx, BYTE PTR _bKeyDown$30[ebp]
  000fe	52		 push	 edx
  000ff	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  00102	50		 push	 eax
  00103	ff 55 e8	 call	 DWORD PTR _pCallbackKeyboard$26[ebp]
  00106	3b f4		 cmp	 esi, esp
  00108	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN78@DXUTStatic:
; Line 1180
  0010d	81 7d 0c 01 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 513 ; 00000201H
  00114	0f 84 94 00 00
	00		 je	 $LN76@DXUTStatic
  0011a	81 7d 0c 02 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 514 ; 00000202H
  00121	0f 84 87 00 00
	00		 je	 $LN76@DXUTStatic
  00127	81 7d 0c 03 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 515 ; 00000203H
  0012e	74 7e		 je	 SHORT $LN76@DXUTStatic
  00130	81 7d 0c 07 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 519 ; 00000207H
  00137	74 75		 je	 SHORT $LN76@DXUTStatic
  00139	81 7d 0c 08 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 520 ; 00000208H
  00140	74 6c		 je	 SHORT $LN76@DXUTStatic
  00142	81 7d 0c 09 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 521 ; 00000209H
  00149	74 63		 je	 SHORT $LN76@DXUTStatic
  0014b	81 7d 0c 04 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 516 ; 00000204H
  00152	74 5a		 je	 SHORT $LN76@DXUTStatic
  00154	81 7d 0c 05 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 517 ; 00000205H
  0015b	74 51		 je	 SHORT $LN76@DXUTStatic
  0015d	81 7d 0c 06 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 518 ; 00000206H
  00164	74 48		 je	 SHORT $LN76@DXUTStatic
  00166	81 7d 0c 0b 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 523 ; 0000020bH
  0016d	74 3f		 je	 SHORT $LN76@DXUTStatic
  0016f	81 7d 0c 0c 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 524 ; 0000020cH
  00176	74 36		 je	 SHORT $LN76@DXUTStatic
  00178	81 7d 0c 0d 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 525 ; 0000020dH
  0017f	74 2d		 je	 SHORT $LN76@DXUTStatic
  00181	81 7d 0c 0a 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 522 ; 0000020aH
  00188	74 24		 je	 SHORT $LN76@DXUTStatic
  0018a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0018f	8b c8		 mov	 ecx, eax
  00191	e8 00 00 00 00	 call	 ?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ ; DXUTState::GetNotifyOnMouseMove
  00196	0f b6 c8	 movzx	 ecx, al
  00199	85 c9		 test	 ecx, ecx
  0019b	0f 84 0f 02 00
	00		 je	 $LN73@DXUTStatic
  001a1	81 7d 0c 00 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 512 ; 00000200H
  001a8	0f 85 02 02 00
	00		 jne	 $LN73@DXUTStatic
$LN76@DXUTStatic:
; Line 1182
  001ae	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  001b1	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  001b7	0f bf c2	 movsx	 eax, dx
  001ba	89 45 e4	 mov	 DWORD PTR _xPos$25[ebp], eax
; Line 1183
  001bd	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  001c0	c1 e9 10	 shr	 ecx, 16			; 00000010H
  001c3	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  001c9	0f bf d1	 movsx	 edx, cx
  001cc	89 55 e0	 mov	 DWORD PTR _yPos$24[ebp], edx
; Line 1185
  001cf	81 7d 0c 0a 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 522 ; 0000020aH
  001d6	75 2f		 jne	 SHORT $LN75@DXUTStatic
; Line 1190
  001d8	8b 45 e4	 mov	 eax, DWORD PTR _xPos$25[ebp]
  001db	89 45 d4	 mov	 DWORD PTR _pt$23[ebp], eax
  001de	8b 4d e0	 mov	 ecx, DWORD PTR _yPos$24[ebp]
  001e1	89 4d d8	 mov	 DWORD PTR _pt$23[ebp+4], ecx
; Line 1191
  001e4	8b f4		 mov	 esi, esp
  001e6	8d 55 d4	 lea	 edx, DWORD PTR _pt$23[ebp]
  001e9	52		 push	 edx
  001ea	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  001ed	50		 push	 eax
  001ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  001f4	3b f4		 cmp	 esi, esp
  001f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1192
  001fb	8b 4d d4	 mov	 ecx, DWORD PTR _pt$23[ebp]
  001fe	89 4d e4	 mov	 DWORD PTR _xPos$25[ebp], ecx
  00201	8b 55 d8	 mov	 edx, DWORD PTR _pt$23[ebp+4]
  00204	89 55 e0	 mov	 DWORD PTR _yPos$24[ebp], edx
$LN75@DXUTStatic:
; Line 1195
  00207	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _nMouseWheelDelta$22[ebp], 0
; Line 1196
  0020e	81 7d 0c 0a 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 522 ; 0000020aH
  00215	75 11		 jne	 SHORT $LN74@DXUTStatic
; Line 1197
  00217	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0021a	c1 e8 10	 shr	 eax, 16			; 00000010H
  0021d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00222	0f bf c8	 movsx	 ecx, ax
  00225	89 4d cc	 mov	 DWORD PTR _nMouseWheelDelta$22[ebp], ecx
$LN74@DXUTStatic:
; Line 1199
  00228	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  0022b	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00231	0f b7 c2	 movzx	 eax, dx
  00234	89 45 c8	 mov	 DWORD PTR _nMouseButtonState$21[ebp], eax
; Line 1200
  00237	8b 4d c8	 mov	 ecx, DWORD PTR _nMouseButtonState$21[ebp]
  0023a	83 e1 01	 and	 ecx, 1
  0023d	74 0c		 je	 SHORT $LN87@DXUTStatic
  0023f	c7 85 54 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv166[ebp], 1
  00249	eb 0a		 jmp	 SHORT $LN88@DXUTStatic
$LN87@DXUTStatic:
  0024b	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
$LN88@DXUTStatic:
  00255	8a 95 54 ff ff
	ff		 mov	 dl, BYTE PTR tv166[ebp]
  0025b	88 55 c7	 mov	 BYTE PTR _bLeftButton$20[ebp], dl
; Line 1201
  0025e	8b 45 c8	 mov	 eax, DWORD PTR _nMouseButtonState$21[ebp]
  00261	83 e0 02	 and	 eax, 2
  00264	74 0c		 je	 SHORT $LN89@DXUTStatic
  00266	c7 85 50 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv170[ebp], 1
  00270	eb 0a		 jmp	 SHORT $LN90@DXUTStatic
$LN89@DXUTStatic:
  00272	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv170[ebp], 0
$LN90@DXUTStatic:
  0027c	8a 8d 50 ff ff
	ff		 mov	 cl, BYTE PTR tv170[ebp]
  00282	88 4d c6	 mov	 BYTE PTR _bRightButton$19[ebp], cl
; Line 1202
  00285	8b 55 c8	 mov	 edx, DWORD PTR _nMouseButtonState$21[ebp]
  00288	83 e2 10	 and	 edx, 16			; 00000010H
  0028b	74 0c		 je	 SHORT $LN91@DXUTStatic
  0028d	c7 85 4c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv174[ebp], 1
  00297	eb 0a		 jmp	 SHORT $LN92@DXUTStatic
$LN91@DXUTStatic:
  00299	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv174[ebp], 0
$LN92@DXUTStatic:
  002a3	8a 85 4c ff ff
	ff		 mov	 al, BYTE PTR tv174[ebp]
  002a9	88 45 c5	 mov	 BYTE PTR _bMiddleButton$18[ebp], al
; Line 1203
  002ac	8b 4d c8	 mov	 ecx, DWORD PTR _nMouseButtonState$21[ebp]
  002af	83 e1 20	 and	 ecx, 32			; 00000020H
  002b2	74 0c		 je	 SHORT $LN93@DXUTStatic
  002b4	c7 85 48 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv178[ebp], 1
  002be	eb 0a		 jmp	 SHORT $LN94@DXUTStatic
$LN93@DXUTStatic:
  002c0	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN94@DXUTStatic:
  002ca	8a 95 48 ff ff
	ff		 mov	 dl, BYTE PTR tv178[ebp]
  002d0	88 55 c4	 mov	 BYTE PTR _bSideButton1$17[ebp], dl
; Line 1204
  002d3	8b 45 c8	 mov	 eax, DWORD PTR _nMouseButtonState$21[ebp]
  002d6	83 e0 40	 and	 eax, 64			; 00000040H
  002d9	74 0c		 je	 SHORT $LN95@DXUTStatic
  002db	c7 85 44 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv182[ebp], 1
  002e5	eb 0a		 jmp	 SHORT $LN96@DXUTStatic
$LN95@DXUTStatic:
  002e7	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN96@DXUTStatic:
  002f1	8a 8d 44 ff ff
	ff		 mov	 cl, BYTE PTR tv182[ebp]
  002f7	88 4d c3	 mov	 BYTE PTR _bSideButton2$16[ebp], cl
; Line 1206
  002fa	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002ff	8b c8		 mov	 ecx, eax
  00301	e8 00 00 00 00	 call	 ?GetMouseButtons@DXUTState@@QAEPA_NXZ ; DXUTState::GetMouseButtons
  00306	89 45 bc	 mov	 DWORD PTR _bMouseButtons$15[ebp], eax
; Line 1207
  00309	ba 01 00 00 00	 mov	 edx, 1
  0030e	6b c2 00	 imul	 eax, edx, 0
  00311	8b 4d bc	 mov	 ecx, DWORD PTR _bMouseButtons$15[ebp]
  00314	8a 55 c7	 mov	 dl, BYTE PTR _bLeftButton$20[ebp]
  00317	88 14 01	 mov	 BYTE PTR [ecx+eax], dl
; Line 1208
  0031a	b8 01 00 00 00	 mov	 eax, 1
  0031f	c1 e0 00	 shl	 eax, 0
  00322	8b 4d bc	 mov	 ecx, DWORD PTR _bMouseButtons$15[ebp]
  00325	8a 55 c5	 mov	 dl, BYTE PTR _bMiddleButton$18[ebp]
  00328	88 14 01	 mov	 BYTE PTR [ecx+eax], dl
; Line 1209
  0032b	b8 01 00 00 00	 mov	 eax, 1
  00330	d1 e0		 shl	 eax, 1
  00332	8b 4d bc	 mov	 ecx, DWORD PTR _bMouseButtons$15[ebp]
  00335	8a 55 c6	 mov	 dl, BYTE PTR _bRightButton$19[ebp]
  00338	88 14 01	 mov	 BYTE PTR [ecx+eax], dl
; Line 1210
  0033b	b8 01 00 00 00	 mov	 eax, 1
  00340	6b c8 03	 imul	 ecx, eax, 3
  00343	8b 55 bc	 mov	 edx, DWORD PTR _bMouseButtons$15[ebp]
  00346	8a 45 c4	 mov	 al, BYTE PTR _bSideButton1$17[ebp]
  00349	88 04 0a	 mov	 BYTE PTR [edx+ecx], al
; Line 1211
  0034c	b9 01 00 00 00	 mov	 ecx, 1
  00351	c1 e1 02	 shl	 ecx, 2
  00354	8b 55 bc	 mov	 edx, DWORD PTR _bMouseButtons$15[ebp]
  00357	8a 45 c3	 mov	 al, BYTE PTR _bSideButton2$16[ebp]
  0035a	88 04 0a	 mov	 BYTE PTR [edx+ecx], al
; Line 1213
  0035d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00362	8b c8		 mov	 ecx, eax
  00364	e8 00 00 00 00	 call	 ?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ ; DXUTState::GetMouseFunc
  00369	89 45 b8	 mov	 DWORD PTR _pCallbackMouse$14[ebp], eax
; Line 1214
  0036c	83 7d b8 00	 cmp	 DWORD PTR _pCallbackMouse$14[ebp], 0
  00370	74 3e		 je	 SHORT $LN73@DXUTStatic
; Line 1216
  00372	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00377	8b c8		 mov	 ecx, eax
  00379	e8 00 00 00 00	 call	 ?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetMouseFuncUserContext
  0037e	8b f4		 mov	 esi, esp
  00380	50		 push	 eax
  00381	8b 4d e0	 mov	 ecx, DWORD PTR _yPos$24[ebp]
  00384	51		 push	 ecx
  00385	8b 55 e4	 mov	 edx, DWORD PTR _xPos$25[ebp]
  00388	52		 push	 edx
  00389	8b 45 cc	 mov	 eax, DWORD PTR _nMouseWheelDelta$22[ebp]
  0038c	50		 push	 eax
  0038d	0f b6 4d c3	 movzx	 ecx, BYTE PTR _bSideButton2$16[ebp]
  00391	51		 push	 ecx
  00392	0f b6 55 c4	 movzx	 edx, BYTE PTR _bSideButton1$17[ebp]
  00396	52		 push	 edx
  00397	0f b6 45 c5	 movzx	 eax, BYTE PTR _bMiddleButton$18[ebp]
  0039b	50		 push	 eax
  0039c	0f b6 4d c6	 movzx	 ecx, BYTE PTR _bRightButton$19[ebp]
  003a0	51		 push	 ecx
  003a1	0f b6 55 c7	 movzx	 edx, BYTE PTR _bLeftButton$20[ebp]
  003a5	52		 push	 edx
  003a6	ff 55 b8	 call	 DWORD PTR _pCallbackMouse$14[ebp]
  003a9	3b f4		 cmp	 esi, esp
  003ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN73@DXUTStatic:
; Line 1223
  003b0	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003b5	8b c8		 mov	 ecx, eax
  003b7	e8 00 00 00 00	 call	 ?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ ; DXUTState::GetWindowMsgFunc
  003bc	89 45 b4	 mov	 DWORD PTR _pCallbackMsgProc$[ebp], eax
; Line 1224
  003bf	83 7d b4 00	 cmp	 DWORD PTR _pCallbackMsgProc$[ebp], 0
  003c3	74 44		 je	 SHORT $LN71@DXUTStatic
; Line 1226
  003c5	c6 45 af 00	 mov	 BYTE PTR _bNoFurtherProcessing$13[ebp], 0
; Line 1228
  003c9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  003ce	8b c8		 mov	 ecx, eax
  003d0	e8 00 00 00 00	 call	 ?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetWindowMsgFuncUserContext
  003d5	8b f4		 mov	 esi, esp
  003d7	50		 push	 eax
  003d8	8d 45 af	 lea	 eax, DWORD PTR _bNoFurtherProcessing$13[ebp]
  003db	50		 push	 eax
  003dc	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  003df	51		 push	 ecx
  003e0	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  003e3	52		 push	 edx
  003e4	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  003e7	50		 push	 eax
  003e8	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  003eb	51		 push	 ecx
  003ec	ff 55 b4	 call	 DWORD PTR _pCallbackMsgProc$[ebp]
  003ef	3b f4		 cmp	 esi, esp
  003f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f6	89 45 a4	 mov	 DWORD PTR _nResult$12[ebp], eax
; Line 1229
  003f9	0f b6 55 af	 movzx	 edx, BYTE PTR _bNoFurtherProcessing$13[ebp]
  003fd	85 d2		 test	 edx, edx
  003ff	74 08		 je	 SHORT $LN71@DXUTStatic
; Line 1230
  00401	8b 45 a4	 mov	 eax, DWORD PTR _nResult$12[ebp]
  00404	e9 03 08 00 00	 jmp	 $LN1@DXUTStatic
$LN71@DXUTStatic:
; Line 1233
  00409	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0040c	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv229[ebp], eax
  00412	81 bd 40 ff ff
	ff 00 01 00 00	 cmp	 DWORD PTR tv229[ebp], 256 ; 00000100H
  0041c	77 43		 ja	 SHORT $LN102@DXUTStatic
  0041e	81 bd 40 ff ff
	ff 00 01 00 00	 cmp	 DWORD PTR tv229[ebp], 256 ; 00000100H
  00428	0f 84 21 06 00
	00		 je	 $LN16@DXUTStatic
  0042e	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv229[ebp]
  00434	83 e9 02	 sub	 ecx, 2
  00437	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv229[ebp], ecx
  0043d	81 bd 40 ff ff
	ff 82 00 00 00	 cmp	 DWORD PTR tv229[ebp], 130 ; 00000082H
  00447	0f 87 5f 07 00
	00		 ja	 $LN69@DXUTStatic
  0044d	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR tv229[ebp]
  00453	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN104@DXUTStatic[edx]
  0045a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN110@DXUTStatic[eax*4]
$LN102@DXUTStatic:
  00461	81 bd 40 ff ff
	ff 12 02 00 00	 cmp	 DWORD PTR tv229[ebp], 530 ; 00000212H
  0046b	77 45		 ja	 SHORT $LN103@DXUTStatic
  0046d	81 bd 40 ff ff
	ff 12 02 00 00	 cmp	 DWORD PTR tv229[ebp], 530 ; 00000212H
  00477	0f 84 d6 04 00
	00		 je	 $LN30@DXUTStatic
  0047d	81 bd 40 ff ff
	ff 12 01 00 00	 cmp	 DWORD PTR tv229[ebp], 274 ; 00000112H
  00487	0f 84 5c 05 00
	00		 je	 $LN21@DXUTStatic
  0048d	81 bd 40 ff ff
	ff 20 01 00 00	 cmp	 DWORD PTR tv229[ebp], 288 ; 00000120H
  00497	0f 84 c4 04 00
	00		 je	 $LN29@DXUTStatic
  0049d	81 bd 40 ff ff
	ff 11 02 00 00	 cmp	 DWORD PTR tv229[ebp], 529 ; 00000211H
  004a7	0f 84 98 04 00
	00		 je	 $LN31@DXUTStatic
  004ad	e9 fa 06 00 00	 jmp	 $LN69@DXUTStatic
$LN103@DXUTStatic:
  004b2	81 bd 40 ff ff
	ff 18 02 00 00	 cmp	 DWORD PTR tv229[ebp], 536 ; 00000218H
  004bc	0f 84 c9 04 00
	00		 je	 $LN26@DXUTStatic
  004c2	81 bd 40 ff ff
	ff 31 02 00 00	 cmp	 DWORD PTR tv229[ebp], 561 ; 00000231H
  004cc	0f 84 e6 02 00
	00		 je	 $LN42@DXUTStatic
  004d2	81 bd 40 ff ff
	ff 32 02 00 00	 cmp	 DWORD PTR tv229[ebp], 562 ; 00000232H
  004dc	0f 84 f2 02 00
	00		 je	 $LN41@DXUTStatic
  004e2	e9 c5 06 00 00	 jmp	 $LN69@DXUTStatic
$LN68@DXUTStatic:
; Line 1239
  004e7	e8 00 00 00 00	 call	 ?DXUTIsRenderingPaused@@YG_NXZ ; DXUTIsRenderingPaused
  004ec	0f b6 c8	 movzx	 ecx, al
  004ef	85 c9		 test	 ecx, ecx
  004f1	0f 84 62 01 00
	00		 je	 $LN59@DXUTStatic
  004f7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  004fc	8b c8		 mov	 ecx, eax
  004fe	e8 00 00 00 00	 call	 ?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsCreated
  00503	0f b6 d0	 movzx	 edx, al
  00506	85 d2		 test	 edx, edx
  00508	0f 84 4b 01 00
	00		 je	 $LN59@DXUTStatic
  0050e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00513	8b c8		 mov	 ecx, eax
  00515	e8 00 00 00 00	 call	 ?GetDeviceObjectsReset@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsReset
  0051a	0f b6 c0	 movzx	 eax, al
  0051d	85 c0		 test	 eax, eax
  0051f	0f 84 34 01 00
	00		 je	 $LN59@DXUTStatic
; Line 1242
  00525	e8 00 00 00 00	 call	 ?DXUTGetTime@@YGNXZ	; DXUTGetTime
  0052a	dd 5d 98	 fstp	 QWORD PTR _fTime$10[ebp]
; Line 1243
  0052d	e8 00 00 00 00	 call	 ?DXUTGetElapsedTime@@YGMXZ ; DXUTGetElapsedTime
  00532	d9 5d 94	 fstp	 DWORD PTR _fElapsedTime$9[ebp]
; Line 1246
  00535	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  0053a	89 45 90	 mov	 DWORD PTR _pd3dDevice$8[ebp], eax
; Line 1247
  0053d	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  00542	89 45 8c	 mov	 DWORD PTR _pDeferred$7[ebp], eax
; Line 1248
  00545	83 7d 90 00	 cmp	 DWORD PTR _pd3dDevice$8[ebp], 0
  00549	0f 84 0a 01 00
	00		 je	 $LN59@DXUTStatic
; Line 1250
  0054f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00554	8b c8		 mov	 ecx, eax
  00556	e8 00 00 00 00	 call	 ?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ; DXUTState::GetD3D11FrameRenderFunc
  0055b	89 45 88	 mov	 DWORD PTR _pCallbackFrameRender$6[ebp], eax
; Line 1252
  0055e	83 7d 88 00	 cmp	 DWORD PTR _pCallbackFrameRender$6[ebp], 0
  00562	74 4c		 je	 SHORT $LN65@DXUTStatic
  00564	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00569	8b c8		 mov	 ecx, eax
  0056b	e8 00 00 00 00	 call	 ?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
  00570	0f b6 c8	 movzx	 ecx, al
  00573	85 c9		 test	 ecx, ecx
  00575	75 39		 jne	 SHORT $LN65@DXUTStatic
; Line 1255
  00577	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0057c	8b c8		 mov	 ecx, eax
  0057e	e8 00 00 00 00	 call	 ?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11FrameRenderFuncUserContext
  00583	8b f4		 mov	 esi, esp
  00585	50		 push	 eax
  00586	51		 push	 ecx
  00587	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fElapsedTime$9[ebp]
  0058c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00591	83 ec 08	 sub	 esp, 8
  00594	f2 0f 10 45 98	 movsd	 xmm0, QWORD PTR _fTime$10[ebp]
  00599	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0059e	8b 55 8c	 mov	 edx, DWORD PTR _pDeferred$7[ebp]
  005a1	52		 push	 edx
  005a2	8b 45 90	 mov	 eax, DWORD PTR _pd3dDevice$8[ebp]
  005a5	50		 push	 eax
  005a6	ff 55 88	 call	 DWORD PTR _pCallbackFrameRender$6[ebp]
  005a9	3b f4		 cmp	 esi, esp
  005ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN65@DXUTStatic:
; Line 1258
  005b0	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _dwFlags$5[ebp], 0
; Line 1259
  005b7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005bc	8b c8		 mov	 ecx, eax
  005be	e8 00 00 00 00	 call	 ?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
  005c3	0f b6 c8	 movzx	 ecx, al
  005c6	85 c9		 test	 ecx, ecx
  005c8	74 09		 je	 SHORT $LN64@DXUTStatic
; Line 1260
  005ca	c7 45 84 01 00
	00 00		 mov	 DWORD PTR _dwFlags$5[ebp], 1
; Line 1261
  005d1	eb 12		 jmp	 SHORT $LN63@DXUTStatic
$LN64@DXUTStatic:
; Line 1262
  005d3	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005d8	8b c8		 mov	 ecx, eax
  005da	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  005df	8b 50 54	 mov	 edx, DWORD PTR [eax+84]
  005e2	89 55 84	 mov	 DWORD PTR _dwFlags$5[ebp], edx
$LN63@DXUTStatic:
; Line 1264
  005e5	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  005ea	89 45 80	 mov	 DWORD PTR _pSwapChain$4[ebp], eax
; Line 1265
  005ed	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  005f2	8b c8		 mov	 ecx, eax
  005f4	e8 00 00 00 00	 call	 ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
  005f9	8b f4		 mov	 esi, esp
  005fb	8b 40 54	 mov	 eax, DWORD PTR [eax+84]
  005fe	50		 push	 eax
  005ff	6a 00		 push	 0
  00601	8b 4d 80	 mov	 ecx, DWORD PTR _pSwapChain$4[ebp]
  00604	8b 11		 mov	 edx, DWORD PTR [ecx]
  00606	8b 45 80	 mov	 eax, DWORD PTR _pSwapChain$4[ebp]
  00609	50		 push	 eax
  0060a	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0060d	ff d1		 call	 ecx
  0060f	3b f4		 cmp	 esi, esp
  00611	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00616	89 45 a0	 mov	 DWORD PTR _hr$11[ebp], eax
; Line 1266
  00619	81 7d a0 01 00
	7a 08		 cmp	 DWORD PTR _hr$11[ebp], 142213121 ; 087a0001H
  00620	75 10		 jne	 SHORT $LN62@DXUTStatic
; Line 1270
  00622	6a 01		 push	 1
  00624	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00629	8b c8		 mov	 ecx, eax
  0062b	e8 00 00 00 00	 call	 ?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
  00630	eb 27		 jmp	 SHORT $LN59@DXUTStatic
$LN62@DXUTStatic:
; Line 1272
  00632	83 7d a0 00	 cmp	 DWORD PTR _hr$11[ebp], 0
  00636	7c 21		 jl	 SHORT $LN59@DXUTStatic
; Line 1274
  00638	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0063d	8b c8		 mov	 ecx, eax
  0063f	e8 00 00 00 00	 call	 ?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
  00644	0f b6 d0	 movzx	 edx, al
  00647	85 d2		 test	 edx, edx
  00649	74 0e		 je	 SHORT $LN59@DXUTStatic
; Line 1278
  0064b	6a 00		 push	 0
  0064d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00652	8b c8		 mov	 ecx, eax
  00654	e8 00 00 00 00	 call	 ?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
$LN59@DXUTStatic:
; Line 1284
  00659	e9 4e 05 00 00	 jmp	 $LN69@DXUTStatic
$LN58@DXUTStatic:
; Line 1289
  0065e	83 7d 10 01	 cmp	 DWORD PTR _wParam$[ebp], 1
  00662	75 2a		 jne	 SHORT $LN57@DXUTStatic
; Line 1291
  00664	6a 01		 push	 1
  00666	6a 01		 push	 1
  00668	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1293
  0066d	6a 01		 push	 1
  0066f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00674	8b c8		 mov	 ecx, eax
  00676	e8 00 00 00 00	 call	 ?SetMinimized@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimized
; Line 1294
  0067b	6a 00		 push	 0
  0067d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00682	8b c8		 mov	 ecx, eax
  00684	e8 00 00 00 00	 call	 ?SetMaximized@DXUTState@@QAEX_N@Z ; DXUTState::SetMaximized
; Line 1296
  00689	e9 0c 01 00 00	 jmp	 $LN44@DXUTStatic
$LN57@DXUTStatic:
; Line 1299
  0068e	8b f4		 mov	 esi, esp
  00690	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _rcCurrentClient$3[ebp]
  00696	50		 push	 eax
  00697	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  0069c	50		 push	 eax
  0069d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  006a3	3b f4		 cmp	 esi, esp
  006a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1300
  006aa	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR _rcCurrentClient$3[ebp+4], 0
  006b1	75 0e		 jne	 SHORT $LN55@DXUTStatic
  006b3	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _rcCurrentClient$3[ebp+12], 0
  006ba	75 05		 jne	 SHORT $LN55@DXUTStatic
  006bc	e9 d9 00 00 00	 jmp	 $LN44@DXUTStatic
$LN55@DXUTStatic:
; Line 1307
  006c1	83 7d 10 02	 cmp	 DWORD PTR _wParam$[ebp], 2
  006c5	75 47		 jne	 SHORT $LN53@DXUTStatic
; Line 1309
  006c7	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  006cc	8b c8		 mov	 ecx, eax
  006ce	e8 00 00 00 00	 call	 ?GetMinimized@DXUTState@@QAE_NXZ ; DXUTState::GetMinimized
  006d3	0f b6 c8	 movzx	 ecx, al
  006d6	85 c9		 test	 ecx, ecx
  006d8	74 09		 je	 SHORT $LN52@DXUTStatic
; Line 1310
  006da	6a 00		 push	 0
  006dc	6a 00		 push	 0
  006de	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
$LN52@DXUTStatic:
; Line 1311
  006e3	6a 00		 push	 0
  006e5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  006ea	8b c8		 mov	 ecx, eax
  006ec	e8 00 00 00 00	 call	 ?SetMinimized@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimized
; Line 1312
  006f1	6a 01		 push	 1
  006f3	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  006f8	8b c8		 mov	 ecx, eax
  006fa	e8 00 00 00 00	 call	 ?SetMaximized@DXUTState@@QAEX_N@Z ; DXUTState::SetMaximized
; Line 1313
  006ff	e8 00 00 00 00	 call	 ?DXUTCheckForWindowSizeChange@@YAXXZ ; DXUTCheckForWindowSizeChange
; Line 1314
  00704	e8 00 00 00 00	 call	 ?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
  00709	e9 8c 00 00 00	 jmp	 $LN44@DXUTStatic
$LN53@DXUTStatic:
; Line 1316
  0070e	83 7d 10 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  00712	0f 85 82 00 00
	00		 jne	 $LN44@DXUTStatic
; Line 1319
  00718	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0071d	8b c8		 mov	 ecx, eax
  0071f	e8 00 00 00 00	 call	 ?GetMaximized@DXUTState@@QAE_NXZ ; DXUTState::GetMaximized
  00724	0f b6 d0	 movzx	 edx, al
  00727	85 d2		 test	 edx, edx
  00729	74 1a		 je	 SHORT $LN49@DXUTStatic
; Line 1321
  0072b	6a 00		 push	 0
  0072d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00732	8b c8		 mov	 ecx, eax
  00734	e8 00 00 00 00	 call	 ?SetMaximized@DXUTState@@QAEX_N@Z ; DXUTState::SetMaximized
; Line 1322
  00739	e8 00 00 00 00	 call	 ?DXUTCheckForWindowSizeChange@@YAXXZ ; DXUTCheckForWindowSizeChange
; Line 1323
  0073e	e8 00 00 00 00	 call	 ?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
  00743	eb 55		 jmp	 SHORT $LN44@DXUTStatic
$LN49@DXUTStatic:
; Line 1325
  00745	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0074a	8b c8		 mov	 ecx, eax
  0074c	e8 00 00 00 00	 call	 ?GetMinimized@DXUTState@@QAE_NXZ ; DXUTState::GetMinimized
  00751	0f b6 c0	 movzx	 eax, al
  00754	85 c0		 test	 eax, eax
  00756	74 23		 je	 SHORT $LN47@DXUTStatic
; Line 1327
  00758	6a 00		 push	 0
  0075a	6a 00		 push	 0
  0075c	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1328
  00761	6a 00		 push	 0
  00763	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00768	8b c8		 mov	 ecx, eax
  0076a	e8 00 00 00 00	 call	 ?SetMinimized@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimized
; Line 1329
  0076f	e8 00 00 00 00	 call	 ?DXUTCheckForWindowSizeChange@@YAXXZ ; DXUTCheckForWindowSizeChange
; Line 1330
  00774	e8 00 00 00 00	 call	 ?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
  00779	eb 1f		 jmp	 SHORT $LN44@DXUTStatic
$LN47@DXUTStatic:
; Line 1332
  0077b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00780	8b c8		 mov	 ecx, eax
  00782	e8 00 00 00 00	 call	 ?GetInSizeMove@DXUTState@@QAE_NXZ ; DXUTState::GetInSizeMove
  00787	0f b6 c8	 movzx	 ecx, al
  0078a	85 c9		 test	 ecx, ecx
  0078c	74 02		 je	 SHORT $LN45@DXUTStatic
; Line 1339
  0078e	eb 0a		 jmp	 SHORT $LN44@DXUTStatic
$LN45@DXUTStatic:
; Line 1343
  00790	e8 00 00 00 00	 call	 ?DXUTCheckForWindowSizeChange@@YAXXZ ; DXUTCheckForWindowSizeChange
; Line 1344
  00795	e8 00 00 00 00	 call	 ?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
$LN44@DXUTStatic:
; Line 1348
  0079a	e9 0d 04 00 00	 jmp	 $LN69@DXUTStatic
$LN43@DXUTStatic:
; Line 1351
  0079f	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  007a2	c7 42 18 c8 00
	00 00		 mov	 DWORD PTR [edx+24], 200	; 000000c8H
; Line 1352
  007a9	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  007ac	c7 40 1c c8 00
	00 00		 mov	 DWORD PTR [eax+28], 200	; 000000c8H
; Line 1353
  007b3	e9 f4 03 00 00	 jmp	 $LN69@DXUTStatic
$LN42@DXUTStatic:
; Line 1357
  007b8	6a 01		 push	 1
  007ba	6a 01		 push	 1
  007bc	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1358
  007c1	6a 01		 push	 1
  007c3	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  007c8	8b c8		 mov	 ecx, eax
  007ca	e8 00 00 00 00	 call	 ?SetInSizeMove@DXUTState@@QAEX_N@Z ; DXUTState::SetInSizeMove
; Line 1359
  007cf	e9 d8 03 00 00	 jmp	 $LN69@DXUTStatic
$LN41@DXUTStatic:
; Line 1362
  007d4	6a 00		 push	 0
  007d6	6a 00		 push	 0
  007d8	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1363
  007dd	e8 00 00 00 00	 call	 ?DXUTCheckForWindowSizeChange@@YAXXZ ; DXUTCheckForWindowSizeChange
; Line 1364
  007e2	e8 00 00 00 00	 call	 ?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
; Line 1365
  007e7	6a 00		 push	 0
  007e9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  007ee	8b c8		 mov	 ecx, eax
  007f0	e8 00 00 00 00	 call	 ?SetInSizeMove@DXUTState@@QAEX_N@Z ; DXUTState::SetInSizeMove
; Line 1366
  007f5	e9 b2 03 00 00	 jmp	 $LN69@DXUTStatic
$LN40@DXUTStatic:
; Line 1369
  007fa	e8 00 00 00 00	 call	 ?DXUTIsActive@@YG_NXZ	; DXUTIsActive
  007ff	0f b6 c8	 movzx	 ecx, al
  00802	85 c9		 test	 ecx, ecx
  00804	74 3a		 je	 SHORT $LN39@DXUTStatic
  00806	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  0080b	0f b6 d0	 movzx	 edx, al
  0080e	85 d2		 test	 edx, edx
  00810	75 2e		 jne	 SHORT $LN39@DXUTStatic
; Line 1371
  00812	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00817	8b c8		 mov	 ecx, eax
  00819	e8 00 00 00 00	 call	 ?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ ; DXUTState::GetShowCursorWhenFullScreen
  0081e	0f b6 c0	 movzx	 eax, al
  00821	85 c0		 test	 eax, eax
  00823	75 11		 jne	 SHORT $LN38@DXUTStatic
; Line 1372
  00825	8b f4		 mov	 esi, esp
  00827	6a 00		 push	 0
  00829	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
  0082f	3b f4		 cmp	 esi, esp
  00831	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN38@DXUTStatic:
; Line 1374
  00836	b8 01 00 00 00	 mov	 eax, 1
  0083b	e9 cc 03 00 00	 jmp	 $LN1@DXUTStatic
$LN39@DXUTStatic:
; Line 1376
  00840	e9 67 03 00 00	 jmp	 $LN69@DXUTStatic
$LN37@DXUTStatic:
; Line 1379
  00845	83 7d 10 01	 cmp	 DWORD PTR _wParam$[ebp], 1
  00849	0f 85 92 00 00
	00		 jne	 $LN36@DXUTStatic
  0084f	e8 00 00 00 00	 call	 ?DXUTIsActive@@YG_NXZ	; DXUTIsActive
  00854	0f b6 c8	 movzx	 ecx, al
  00857	85 c9		 test	 ecx, ecx
  00859	0f 85 82 00 00
	00		 jne	 $LN36@DXUTStatic
; Line 1381
  0085f	6a 01		 push	 1
  00861	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00866	8b c8		 mov	 ecx, eax
  00868	e8 00 00 00 00	 call	 ?SetActive@DXUTState@@QAEX_N@Z ; DXUTState::SetActive
; Line 1384
  0086d	6a 01		 push	 1
  0086f	e8 00 00 00 00	 call	 ?DXUTEnableXInput@@YAX_N@Z ; DXUTEnableXInput
  00874	83 c4 04	 add	 esp, 4
; Line 1389
  00877	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0087c	8b c8		 mov	 ecx, eax
  0087e	e8 00 00 00 00	 call	 ?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetMinimizedWhileFullscreen
  00883	0f b6 d0	 movzx	 edx, al
  00886	85 d2		 test	 edx, edx
  00888	74 13		 je	 SHORT $LN35@DXUTStatic
; Line 1391
  0088a	6a 00		 push	 0
  0088c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00891	8b c8		 mov	 ecx, eax
  00893	e8 00 00 00 00	 call	 ?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimizedWhileFullscreen
; Line 1393
  00898	e8 00 00 00 00	 call	 ?DXUTToggleFullScreen@@YGJXZ ; DXUTToggleFullScreen
$LN35@DXUTStatic:
; Line 1399
  0089d	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  008a2	0f b6 c0	 movzx	 eax, al
  008a5	85 c0		 test	 eax, eax
  008a7	74 14		 je	 SHORT $LN97@DXUTStatic
  008a9	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  008ae	8b c8		 mov	 ecx, eax
  008b0	e8 00 00 00 00	 call	 ?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
  008b5	88 85 3f ff ff
	ff		 mov	 BYTE PTR tv435[ebp], al
  008bb	eb 12		 jmp	 SHORT $LN98@DXUTStatic
$LN97@DXUTStatic:
  008bd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  008c2	8b c8		 mov	 ecx, eax
  008c4	e8 00 00 00 00	 call	 ?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
  008c9	88 85 3f ff ff
	ff		 mov	 BYTE PTR tv435[ebp], al
$LN98@DXUTStatic:
  008cf	0f b6 8d 3f ff
	ff ff		 movzx	 ecx, BYTE PTR tv435[ebp]
  008d6	51		 push	 ecx
  008d7	e8 00 00 00 00	 call	 ?DXUTAllowShortcutKeys@@YAX_N@Z ; DXUTAllowShortcutKeys
  008dc	83 c4 04	 add	 esp, 4
  008df	eb 5f		 jmp	 SHORT $LN33@DXUTStatic
$LN36@DXUTStatic:
; Line 1402
  008e1	83 7d 10 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  008e5	75 59		 jne	 SHORT $LN33@DXUTStatic
  008e7	e8 00 00 00 00	 call	 ?DXUTIsActive@@YG_NXZ	; DXUTIsActive
  008ec	0f b6 d0	 movzx	 edx, al
  008ef	85 d2		 test	 edx, edx
  008f1	74 4d		 je	 SHORT $LN33@DXUTStatic
; Line 1404
  008f3	6a 00		 push	 0
  008f5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  008fa	8b c8		 mov	 ecx, eax
  008fc	e8 00 00 00 00	 call	 ?SetActive@DXUTState@@QAEX_N@Z ; DXUTState::SetActive
; Line 1407
  00901	6a 00		 push	 0
  00903	e8 00 00 00 00	 call	 ?DXUTEnableXInput@@YAX_N@Z ; DXUTEnableXInput
  00908	83 c4 04	 add	 esp, 4
; Line 1409
  0090b	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00910	0f b6 c0	 movzx	 eax, al
  00913	85 c0		 test	 eax, eax
  00915	75 1f		 jne	 SHORT $LN32@DXUTStatic
; Line 1412
  00917	8b f4		 mov	 esi, esp
  00919	6a 00		 push	 0
  0091b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4
  00921	3b f4		 cmp	 esi, esp
  00923	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1413
  00928	6a 01		 push	 1
  0092a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0092f	8b c8		 mov	 ecx, eax
  00931	e8 00 00 00 00	 call	 ?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimizedWhileFullscreen
$LN32@DXUTStatic:
; Line 1422
  00936	6a 01		 push	 1
  00938	e8 00 00 00 00	 call	 ?DXUTAllowShortcutKeys@@YAX_N@Z ; DXUTAllowShortcutKeys
  0093d	83 c4 04	 add	 esp, 4
$LN33@DXUTStatic:
; Line 1424
  00940	e9 67 02 00 00	 jmp	 $LN69@DXUTStatic
$LN31@DXUTStatic:
; Line 1428
  00945	6a 01		 push	 1
  00947	6a 01		 push	 1
  00949	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1429
  0094e	e9 59 02 00 00	 jmp	 $LN69@DXUTStatic
$LN30@DXUTStatic:
; Line 1432
  00953	6a 00		 push	 0
  00955	6a 00		 push	 0
  00957	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1433
  0095c	e9 4b 02 00 00	 jmp	 $LN69@DXUTStatic
$LN29@DXUTStatic:
; Line 1438
  00961	b8 00 00 01 00	 mov	 eax, 65536		; 00010000H
  00966	e9 a1 02 00 00	 jmp	 $LN1@DXUTStatic
; Line 1439
  0096b	e9 3c 02 00 00	 jmp	 $LN69@DXUTStatic
$LN28@DXUTStatic:
; Line 1443
  00970	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00975	0f b6 c8	 movzx	 ecx, al
  00978	85 c9		 test	 ecx, ecx
  0097a	75 0a		 jne	 SHORT $LN27@DXUTStatic
; Line 1444
  0097c	b8 01 00 00 00	 mov	 eax, 1
  00981	e9 86 02 00 00	 jmp	 $LN1@DXUTStatic
$LN27@DXUTStatic:
; Line 1445
  00986	e9 21 02 00 00	 jmp	 $LN69@DXUTStatic
$LN26@DXUTStatic:
; Line 1448
  0098b	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  0098e	89 95 38 ff ff
	ff		 mov	 DWORD PTR tv460[ebp], edx
  00994	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR tv460[ebp], 0
  0099b	74 0b		 je	 SHORT $LN23@DXUTStatic
  0099d	83 bd 38 ff ff
	ff 07		 cmp	 DWORD PTR tv460[ebp], 7
  009a4	74 0c		 je	 SHORT $LN22@DXUTStatic
  009a6	eb 3c		 jmp	 SHORT $LN24@DXUTStatic
$LN23@DXUTStatic:
; Line 1455
  009a8	b8 01 00 00 00	 mov	 eax, 1
  009ad	e9 5a 02 00 00	 jmp	 $LN1@DXUTStatic
$LN22@DXUTStatic:
; Line 1465
  009b2	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  009b7	8b c8		 mov	 ecx, eax
  009b9	e8 00 00 00 00	 call	 ?Reset@CDXUTTimer@@QAEXXZ ; CDXUTTimer::Reset
; Line 1466
  009be	83 ec 08	 sub	 esp, 8
  009c1	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  009c9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009ce	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  009d3	8b c8		 mov	 ecx, eax
  009d5	e8 00 00 00 00	 call	 ?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z ; DXUTState::SetLastStatsUpdateTime
; Line 1467
  009da	b8 01 00 00 00	 mov	 eax, 1
  009df	e9 28 02 00 00	 jmp	 $LN1@DXUTStatic
$LN24@DXUTStatic:
; Line 1469
  009e4	e9 c3 01 00 00	 jmp	 $LN69@DXUTStatic
$LN21@DXUTStatic:
; Line 1473
  009e9	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  009ec	25 f0 ff 00 00	 and	 eax, 65520		; 0000fff0H
  009f1	89 85 34 ff ff
	ff		 mov	 DWORD PTR tv469[ebp], eax
  009f7	81 bd 34 ff ff
	ff 30 f0 00 00	 cmp	 DWORD PTR tv469[ebp], 61488 ; 0000f030H
  00a01	77 26		 ja	 SHORT $LN99@DXUTStatic
  00a03	81 bd 34 ff ff
	ff 30 f0 00 00	 cmp	 DWORD PTR tv469[ebp], 61488 ; 0000f030H
  00a0d	74 28		 je	 SHORT $LN18@DXUTStatic
  00a0f	81 bd 34 ff ff
	ff 00 f0 00 00	 cmp	 DWORD PTR tv469[ebp], 61440 ; 0000f000H
  00a19	74 1c		 je	 SHORT $LN18@DXUTStatic
  00a1b	81 bd 34 ff ff
	ff 10 f0 00 00	 cmp	 DWORD PTR tv469[ebp], 61456 ; 0000f010H
  00a25	74 10		 je	 SHORT $LN18@DXUTStatic
  00a27	eb 21		 jmp	 SHORT $LN19@DXUTStatic
$LN99@DXUTStatic:
  00a29	81 bd 34 ff ff
	ff 00 f1 00 00	 cmp	 DWORD PTR tv469[ebp], 61696 ; 0000f100H
  00a33	74 02		 je	 SHORT $LN18@DXUTStatic
  00a35	eb 13		 jmp	 SHORT $LN19@DXUTStatic
$LN18@DXUTStatic:
; Line 1479
  00a37	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00a3c	0f b6 c8	 movzx	 ecx, al
  00a3f	85 c9		 test	 ecx, ecx
  00a41	75 07		 jne	 SHORT $LN17@DXUTStatic
; Line 1480
  00a43	33 c0		 xor	 eax, eax
  00a45	e9 c2 01 00 00	 jmp	 $LN1@DXUTStatic
$LN17@DXUTStatic:
$LN19@DXUTStatic:
; Line 1483
  00a4a	e9 5d 01 00 00	 jmp	 $LN69@DXUTStatic
$LN16@DXUTStatic:
; Line 1487
  00a4f	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00a52	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv478[ebp], edx
  00a58	83 bd 30 ff ff
	ff 13		 cmp	 DWORD PTR tv478[ebp], 19 ; 00000013H
  00a5f	74 3c		 je	 SHORT $LN11@DXUTStatic
  00a61	83 bd 30 ff ff
	ff 1b		 cmp	 DWORD PTR tv478[ebp], 27 ; 0000001bH
  00a68	74 05		 je	 SHORT $LN13@DXUTStatic
  00a6a	e9 98 00 00 00	 jmp	 $LN14@DXUTStatic
$LN13@DXUTStatic:
; Line 1491
  00a6f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00a74	8b c8		 mov	 ecx, eax
  00a76	e8 00 00 00 00	 call	 ?GetHandleEscape@DXUTState@@QAE_NXZ ; DXUTState::GetHandleEscape
  00a7b	0f b6 c0	 movzx	 eax, al
  00a7e	85 c0		 test	 eax, eax
  00a80	74 19		 je	 SHORT $LN12@DXUTStatic
; Line 1492
  00a82	8b f4		 mov	 esi, esp
  00a84	6a 00		 push	 0
  00a86	6a 00		 push	 0
  00a88	6a 10		 push	 16			; 00000010H
  00a8a	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00a8d	51		 push	 ecx
  00a8e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageW@16
  00a94	3b f4		 cmp	 esi, esp
  00a96	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN12@DXUTStatic:
; Line 1493
  00a9b	eb 6a		 jmp	 SHORT $LN14@DXUTStatic
$LN11@DXUTStatic:
; Line 1498
  00a9d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00aa2	8b c8		 mov	 ecx, eax
  00aa4	e8 00 00 00 00	 call	 ?GetHandlePause@DXUTState@@QAE_NXZ ; DXUTState::GetHandlePause
  00aa9	0f b6 d0	 movzx	 edx, al
  00aac	85 d2		 test	 edx, edx
  00aae	74 57		 je	 SHORT $LN8@DXUTStatic
; Line 1500
  00ab0	e8 00 00 00 00	 call	 ?DXUTIsTimePaused@@YG_NXZ ; DXUTIsTimePaused
  00ab5	88 85 67 ff ff
	ff		 mov	 BYTE PTR _bTimePaused$2[ebp], al
; Line 1501
  00abb	0f b6 85 67 ff
	ff ff		 movzx	 eax, BYTE PTR _bTimePaused$2[ebp]
  00ac2	85 c0		 test	 eax, eax
  00ac4	75 0c		 jne	 SHORT $LN100@DXUTStatic
  00ac6	c7 85 2c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv496[ebp], 1
  00ad0	eb 0a		 jmp	 SHORT $LN101@DXUTStatic
$LN100@DXUTStatic:
  00ad2	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv496[ebp], 0
$LN101@DXUTStatic:
  00adc	8a 8d 2c ff ff
	ff		 mov	 cl, BYTE PTR tv496[ebp]
  00ae2	88 8d 67 ff ff
	ff		 mov	 BYTE PTR _bTimePaused$2[ebp], cl
; Line 1502
  00ae8	0f b6 95 67 ff
	ff ff		 movzx	 edx, BYTE PTR _bTimePaused$2[ebp]
  00aef	85 d2		 test	 edx, edx
  00af1	74 0b		 je	 SHORT $LN9@DXUTStatic
; Line 1503
  00af3	6a 00		 push	 0
  00af5	6a 01		 push	 1
  00af7	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
; Line 1504
  00afc	eb 09		 jmp	 SHORT $LN8@DXUTStatic
$LN9@DXUTStatic:
; Line 1505
  00afe	6a 00		 push	 0
  00b00	6a 00		 push	 0
  00b02	e8 00 00 00 00	 call	 ?DXUTPause@@YGX_N0@Z	; DXUTPause
$LN8@DXUTStatic:
$LN14@DXUTStatic:
; Line 1510
  00b07	e9 a0 00 00 00	 jmp	 $LN69@DXUTStatic
$LN7@DXUTStatic:
; Line 1516
  00b0c	8b f4		 mov	 esi, esp
  00b0e	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00b11	50		 push	 eax
  00b12	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMenu@4
  00b18	3b f4		 cmp	 esi, esp
  00b1a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b1f	89 85 60 ff ff
	ff		 mov	 DWORD PTR _hMenu$1[ebp], eax
; Line 1517
  00b25	83 bd 60 ff ff
	ff 00		 cmp	 DWORD PTR _hMenu$1[ebp], 0
  00b2c	74 16		 je	 SHORT $LN6@DXUTStatic
; Line 1518
  00b2e	8b f4		 mov	 esi, esp
  00b30	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _hMenu$1[ebp]
  00b36	51		 push	 ecx
  00b37	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyMenu@4
  00b3d	3b f4		 cmp	 esi, esp
  00b3f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@DXUTStatic:
; Line 1519
  00b44	8b f4		 mov	 esi, esp
  00b46	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00b49	52		 push	 edx
  00b4a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
  00b50	3b f4		 cmp	 esi, esp
  00b52	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1520
  00b57	8b f4		 mov	 esi, esp
  00b59	6a 00		 push	 0
  00b5b	68 00 00 00 00	 push	 OFFSET $SG151955
  00b60	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnregisterClassW@8
  00b66	3b f4		 cmp	 esi, esp
  00b68	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1521
  00b6d	6a 00		 push	 0
  00b6f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00b74	8b c8		 mov	 ecx, eax
  00b76	e8 00 00 00 00	 call	 ?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDFocus
; Line 1522
  00b7b	6a 00		 push	 0
  00b7d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00b82	8b c8		 mov	 ecx, eax
  00b84	e8 00 00 00 00	 call	 ?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
; Line 1523
  00b89	6a 00		 push	 0
  00b8b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00b90	8b c8		 mov	 ecx, eax
  00b92	e8 00 00 00 00	 call	 ?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
; Line 1524
  00b97	33 c0		 xor	 eax, eax
  00b99	eb 71		 jmp	 SHORT $LN1@DXUTStatic
$LN5@DXUTStatic:
; Line 1528
  00b9b	8b f4		 mov	 esi, esp
  00b9d	6a 00		 push	 0
  00b9f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
  00ba5	3b f4		 cmp	 esi, esp
  00ba7	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN69@DXUTStatic:
; Line 1536
  00bac	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00bb1	8b c8		 mov	 ecx, eax
  00bb3	e8 00 00 00 00	 call	 ?GetCallDefWindowProc@DXUTState@@QAE_NXZ ; DXUTState::GetCallDefWindowProc
  00bb8	0f b6 c0	 movzx	 eax, al
  00bbb	85 c0		 test	 eax, eax
  00bbd	74 28		 je	 SHORT $LN3@DXUTStatic
  00bbf	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00bc4	8b c8		 mov	 ecx, eax
  00bc6	e8 00 00 00 00	 call	 ?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ ; DXUTState::GetMenu
  00bcb	85 c0		 test	 eax, eax
  00bcd	75 1e		 jne	 SHORT $LN4@DXUTStatic
  00bcf	81 7d 0c 04 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 260 ; 00000104H
  00bd6	74 09		 je	 SHORT $LN2@DXUTStatic
  00bd8	81 7d 0c 05 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 261 ; 00000105H
  00bdf	75 0c		 jne	 SHORT $LN4@DXUTStatic
$LN2@DXUTStatic:
  00be1	83 7d 10 79	 cmp	 DWORD PTR _wParam$[ebp], 121 ; 00000079H
  00be5	75 06		 jne	 SHORT $LN4@DXUTStatic
$LN3@DXUTStatic:
; Line 1537
  00be7	33 c0		 xor	 eax, eax
  00be9	eb 21		 jmp	 SHORT $LN1@DXUTStatic
; Line 1538
  00beb	eb 1f		 jmp	 SHORT $LN1@DXUTStatic
$LN4@DXUTStatic:
; Line 1539
  00bed	8b f4		 mov	 esi, esp
  00bef	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00bf2	51		 push	 ecx
  00bf3	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00bf6	52		 push	 edx
  00bf7	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  00bfa	50		 push	 eax
  00bfb	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00bfe	51		 push	 ecx
  00bff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcW@16
  00c05	3b f4		 cmp	 esi, esp
  00c07	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@DXUTStatic:
; Line 1540
  00c0c	52		 push	 edx
  00c0d	8b cd		 mov	 ecx, ebp
  00c0f	50		 push	 eax
  00c10	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN109@DXUTStatic
  00c16	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00c1b	58		 pop	 eax
  00c1c	5a		 pop	 edx
  00c1d	5f		 pop	 edi
  00c1e	5e		 pop	 esi
  00c1f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c22	33 cd		 xor	 ecx, ebp
  00c24	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c29	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  00c2f	3b ec		 cmp	 ebp, esp
  00c31	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c36	8b e5		 mov	 esp, ebp
  00c38	5d		 pop	 ebp
  00c39	c2 10 00	 ret	 16			; 00000010H
$LN109@DXUTStatic:
  00c3c	03 00 00 00	 DD	 3
  00c40	00 00 00 00	 DD	 $LN108@DXUTStatic
$LN108@DXUTStatic:
  00c44	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00c48	08 00 00 00	 DD	 8
  00c4c	00 00 00 00	 DD	 $LN105@DXUTStatic
  00c50	af ff ff ff	 DD	 -81			; ffffffafH
  00c54	01 00 00 00	 DD	 1
  00c58	00 00 00 00	 DD	 $LN106@DXUTStatic
  00c5c	6c ff ff ff	 DD	 -148			; ffffff6cH
  00c60	10 00 00 00	 DD	 16			; 00000010H
  00c64	00 00 00 00	 DD	 $LN107@DXUTStatic
$LN107@DXUTStatic:
  00c68	72		 DB	 114			; 00000072H
  00c69	63		 DB	 99			; 00000063H
  00c6a	43		 DB	 67			; 00000043H
  00c6b	75		 DB	 117			; 00000075H
  00c6c	72		 DB	 114			; 00000072H
  00c6d	72		 DB	 114			; 00000072H
  00c6e	65		 DB	 101			; 00000065H
  00c6f	6e		 DB	 110			; 0000006eH
  00c70	74		 DB	 116			; 00000074H
  00c71	43		 DB	 67			; 00000043H
  00c72	6c		 DB	 108			; 0000006cH
  00c73	69		 DB	 105			; 00000069H
  00c74	65		 DB	 101			; 00000065H
  00c75	6e		 DB	 110			; 0000006eH
  00c76	74		 DB	 116			; 00000074H
  00c77	00		 DB	 0
$LN106@DXUTStatic:
  00c78	62		 DB	 98			; 00000062H
  00c79	4e		 DB	 78			; 0000004eH
  00c7a	6f		 DB	 111			; 0000006fH
  00c7b	46		 DB	 70			; 00000046H
  00c7c	75		 DB	 117			; 00000075H
  00c7d	72		 DB	 114			; 00000072H
  00c7e	74		 DB	 116			; 00000074H
  00c7f	68		 DB	 104			; 00000068H
  00c80	65		 DB	 101			; 00000065H
  00c81	72		 DB	 114			; 00000072H
  00c82	50		 DB	 80			; 00000050H
  00c83	72		 DB	 114			; 00000072H
  00c84	6f		 DB	 111			; 0000006fH
  00c85	63		 DB	 99			; 00000063H
  00c86	65		 DB	 101			; 00000065H
  00c87	73		 DB	 115			; 00000073H
  00c88	73		 DB	 115			; 00000073H
  00c89	69		 DB	 105			; 00000069H
  00c8a	6e		 DB	 110			; 0000006eH
  00c8b	67		 DB	 103			; 00000067H
  00c8c	00		 DB	 0
$LN105@DXUTStatic:
  00c8d	70		 DB	 112			; 00000070H
  00c8e	74		 DB	 116			; 00000074H
  00c8f	00		 DB	 0
$LN110@DXUTStatic:
  00c90	00 00 00 00	 DD	 $LN5@DXUTStatic
  00c94	00 00 00 00	 DD	 $LN58@DXUTStatic
  00c98	00 00 00 00	 DD	 $LN68@DXUTStatic
  00c9c	00 00 00 00	 DD	 $LN7@DXUTStatic
  00ca0	00 00 00 00	 DD	 $LN37@DXUTStatic
  00ca4	00 00 00 00	 DD	 $LN40@DXUTStatic
  00ca8	00 00 00 00	 DD	 $LN43@DXUTStatic
  00cac	00 00 00 00	 DD	 $LN28@DXUTStatic
  00cb0	00 00 00 00	 DD	 $LN69@DXUTStatic
$LN104@DXUTStatic:
  00cb4	00		 DB	 0
  00cb5	08		 DB	 8
  00cb6	08		 DB	 8
  00cb7	01		 DB	 1
  00cb8	08		 DB	 8
  00cb9	08		 DB	 8
  00cba	08		 DB	 8
  00cbb	08		 DB	 8
  00cbc	08		 DB	 8
  00cbd	08		 DB	 8
  00cbe	08		 DB	 8
  00cbf	08		 DB	 8
  00cc0	08		 DB	 8
  00cc1	02		 DB	 2
  00cc2	03		 DB	 3
  00cc3	08		 DB	 8
  00cc4	08		 DB	 8
  00cc5	08		 DB	 8
  00cc6	08		 DB	 8
  00cc7	08		 DB	 8
  00cc8	08		 DB	 8
  00cc9	08		 DB	 8
  00cca	08		 DB	 8
  00ccb	08		 DB	 8
  00ccc	08		 DB	 8
  00ccd	08		 DB	 8
  00cce	04		 DB	 4
  00ccf	08		 DB	 8
  00cd0	08		 DB	 8
  00cd1	08		 DB	 8
  00cd2	05		 DB	 5
  00cd3	08		 DB	 8
  00cd4	08		 DB	 8
  00cd5	08		 DB	 8
  00cd6	06		 DB	 6
  00cd7	08		 DB	 8
  00cd8	08		 DB	 8
  00cd9	08		 DB	 8
  00cda	08		 DB	 8
  00cdb	08		 DB	 8
  00cdc	08		 DB	 8
  00cdd	08		 DB	 8
  00cde	08		 DB	 8
  00cdf	08		 DB	 8
  00ce0	08		 DB	 8
  00ce1	08		 DB	 8
  00ce2	08		 DB	 8
  00ce3	08		 DB	 8
  00ce4	08		 DB	 8
  00ce5	08		 DB	 8
  00ce6	08		 DB	 8
  00ce7	08		 DB	 8
  00ce8	08		 DB	 8
  00ce9	08		 DB	 8
  00cea	08		 DB	 8
  00ceb	08		 DB	 8
  00cec	08		 DB	 8
  00ced	08		 DB	 8
  00cee	08		 DB	 8
  00cef	08		 DB	 8
  00cf0	08		 DB	 8
  00cf1	08		 DB	 8
  00cf2	08		 DB	 8
  00cf3	08		 DB	 8
  00cf4	08		 DB	 8
  00cf5	08		 DB	 8
  00cf6	08		 DB	 8
  00cf7	08		 DB	 8
  00cf8	08		 DB	 8
  00cf9	08		 DB	 8
  00cfa	08		 DB	 8
  00cfb	08		 DB	 8
  00cfc	08		 DB	 8
  00cfd	08		 DB	 8
  00cfe	08		 DB	 8
  00cff	08		 DB	 8
  00d00	08		 DB	 8
  00d01	08		 DB	 8
  00d02	08		 DB	 8
  00d03	08		 DB	 8
  00d04	08		 DB	 8
  00d05	08		 DB	 8
  00d06	08		 DB	 8
  00d07	08		 DB	 8
  00d08	08		 DB	 8
  00d09	08		 DB	 8
  00d0a	08		 DB	 8
  00d0b	08		 DB	 8
  00d0c	08		 DB	 8
  00d0d	08		 DB	 8
  00d0e	08		 DB	 8
  00d0f	08		 DB	 8
  00d10	08		 DB	 8
  00d11	08		 DB	 8
  00d12	08		 DB	 8
  00d13	08		 DB	 8
  00d14	08		 DB	 8
  00d15	08		 DB	 8
  00d16	08		 DB	 8
  00d17	08		 DB	 8
  00d18	08		 DB	 8
  00d19	08		 DB	 8
  00d1a	08		 DB	 8
  00d1b	08		 DB	 8
  00d1c	08		 DB	 8
  00d1d	08		 DB	 8
  00d1e	08		 DB	 8
  00d1f	08		 DB	 8
  00d20	08		 DB	 8
  00d21	08		 DB	 8
  00d22	08		 DB	 8
  00d23	08		 DB	 8
  00d24	08		 DB	 8
  00d25	08		 DB	 8
  00d26	08		 DB	 8
  00d27	08		 DB	 8
  00d28	08		 DB	 8
  00d29	08		 DB	 8
  00d2a	08		 DB	 8
  00d2b	08		 DB	 8
  00d2c	08		 DB	 8
  00d2d	08		 DB	 8
  00d2e	08		 DB	 8
  00d2f	08		 DB	 8
  00d30	08		 DB	 8
  00d31	08		 DB	 8
  00d32	08		 DB	 8
  00d33	08		 DB	 8
  00d34	08		 DB	 8
  00d35	08		 DB	 8
  00d36	07		 DB	 7
?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z ENDP		; DXUTStaticWndProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hInstance$ = -20					; size = 4
_strCachedWindowTitle$ = -16				; size = 4
_dwError$1 = -12					; size = 4
_nResult$2 = -8						; size = 4
_hr$ = -4						; size = 4
_hWndFocus$ = 8						; size = 4
_hWndDeviceFullScreen$ = 12				; size = 4
_hWndDeviceWindowed$ = 16				; size = 4
_bHandleMessages$ = 20					; size = 1
?DXUTSetWindow@@YGJPAUHWND__@@00_N@Z PROC		; DXUTSetWindow
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 1085
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 1089
  0001b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00020	8b c8		 mov	 ecx, eax
  00022	e8 00 00 00 00	 call	 ?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
  00027	0f b6 c0	 movzx	 eax, al
  0002a	85 c0		 test	 eax, eax
  0002c	74 20		 je	 SHORT $LN8@DXUTSetWin
; Line 1090
  0002e	6a 01		 push	 1
  00030	68 00 00 00 00	 push	 OFFSET $SG151781
  00035	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0003a	68 42 04 00 00	 push	 1090			; 00000442H
  0003f	68 00 00 00 00	 push	 OFFSET $SG151782
  00044	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00049	e9 a8 01 00 00	 jmp	 $LN9@DXUTSetWin
$LN8@DXUTSetWin:
; Line 1092
  0004e	6a 01		 push	 1
  00050	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00055	8b c8		 mov	 ecx, eax
  00057	e8 00 00 00 00	 call	 ?SetWindowCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreateCalled
; Line 1097
  0005c	83 7d 08 00	 cmp	 DWORD PTR _hWndFocus$[ebp], 0
  00060	74 0c		 je	 SHORT $LN6@DXUTSetWin
  00062	83 7d 0c 00	 cmp	 DWORD PTR _hWndDeviceFullScreen$[ebp], 0
  00066	74 06		 je	 SHORT $LN6@DXUTSetWin
  00068	83 7d 10 00	 cmp	 DWORD PTR _hWndDeviceWindowed$[ebp], 0
  0006c	75 20		 jne	 SHORT $LN7@DXUTSetWin
$LN6@DXUTSetWin:
; Line 1098
  0006e	6a 01		 push	 1
  00070	68 00 00 00 00	 push	 OFFSET $SG151787
  00075	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0007a	68 4a 04 00 00	 push	 1098			; 0000044aH
  0007f	68 00 00 00 00	 push	 OFFSET $SG151788
  00084	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00089	e9 68 01 00 00	 jmp	 $LN9@DXUTSetWin
$LN7@DXUTSetWin:
; Line 1101
  0008e	0f b6 4d 14	 movzx	 ecx, BYTE PTR _bHandleMessages$[ebp]
  00092	85 c9		 test	 ecx, ecx
  00094	74 5d		 je	 SHORT $LN5@DXUTSetWin
; Line 1104
  00096	8b f4		 mov	 esi, esp
  00098	68 00 00 00 00	 push	 OFFSET ?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z ; DXUTStaticWndProc
  0009d	6a fc		 push	 -4			; fffffffcH
  0009f	8b 55 08	 mov	 edx, DWORD PTR _hWndFocus$[ebp]
  000a2	52		 push	 edx
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongW@12
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	89 45 f8	 mov	 DWORD PTR _nResult$2[ebp], eax
; Line 1106
  000b3	8b f4		 mov	 esi, esp
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	89 45 f4	 mov	 DWORD PTR _dwError$1[ebp], eax
; Line 1107
  000c5	83 7d f8 00	 cmp	 DWORD PTR _nResult$2[ebp], 0
  000c9	75 28		 jne	 SHORT $LN5@DXUTSetWin
; Line 1108
  000cb	6a 01		 push	 1
  000cd	68 00 00 00 00	 push	 OFFSET $SG151795
  000d2	8b 45 f4	 mov	 eax, DWORD PTR _dwError$1[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  000db	83 c4 04	 add	 esp, 4
  000de	50		 push	 eax
  000df	68 54 04 00 00	 push	 1108			; 00000454H
  000e4	68 00 00 00 00	 push	 OFFSET $SG151796
  000e9	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000ee	e9 03 01 00 00	 jmp	 $LN9@DXUTSetWin
$LN5@DXUTSetWin:
; Line 1111
  000f3	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000f8	8b c8		 mov	 ecx, eax
  000fa	e8 00 00 00 00	 call	 ?GetDXUTInited@DXUTState@@QAE_NXZ ; DXUTState::GetDXUTInited
  000ff	0f b6 c8	 movzx	 ecx, al
  00102	85 c9		 test	 ecx, ecx
  00104	75 3b		 jne	 SHORT $LN3@DXUTSetWin
; Line 1115
  00106	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0010b	8b c8		 mov	 ecx, eax
  0010d	e8 00 00 00 00	 call	 ?GetDXUTInitCalled@DXUTState@@QAE_NXZ ; DXUTState::GetDXUTInitCalled
  00112	0f b6 d0	 movzx	 edx, al
  00115	85 d2		 test	 edx, edx
  00117	74 0a		 je	 SHORT $LN2@DXUTSetWin
; Line 1116
  00119	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  0011e	e9 d3 00 00 00	 jmp	 $LN9@DXUTSetWin
$LN2@DXUTSetWin:
; Line 1120
  00123	6a 00		 push	 0
  00125	6a 00		 push	 0
  00127	6a 01		 push	 1
  00129	6a 01		 push	 1
  0012b	e8 00 00 00 00	 call	 ?DXUTInit@@YGJ_N0PA_W0@Z ; DXUTInit
  00130	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1121
  00133	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00137	7d 08		 jge	 SHORT $LN3@DXUTSetWin
; Line 1122
  00139	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0013c	e9 b5 00 00 00	 jmp	 $LN9@DXUTSetWin
$LN3@DXUTSetWin:
; Line 1125
  00141	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00146	8b c8		 mov	 ecx, eax
  00148	e8 00 00 00 00	 call	 ?GetWindowTitle@DXUTState@@QAEPA_WXZ ; DXUTState::GetWindowTitle
  0014d	89 45 f0	 mov	 DWORD PTR _strCachedWindowTitle$[ebp], eax
; Line 1126
  00150	8b f4		 mov	 esi, esp
  00152	68 ff 00 00 00	 push	 255			; 000000ffH
  00157	8b 45 f0	 mov	 eax, DWORD PTR _strCachedWindowTitle$[ebp]
  0015a	50		 push	 eax
  0015b	8b 4d 08	 mov	 ecx, DWORD PTR _hWndFocus$[ebp]
  0015e	51		 push	 ecx
  0015f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowTextW@12
  00165	3b f4		 cmp	 esi, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1127
  0016c	ba 02 00 00 00	 mov	 edx, 2
  00171	69 c2 ff 00 00
	00		 imul	 eax, edx, 255
  00177	33 c9		 xor	 ecx, ecx
  00179	8b 55 f0	 mov	 edx, DWORD PTR _strCachedWindowTitle$[ebp]
  0017c	66 89 0c 02	 mov	 WORD PTR [edx+eax], cx
; Line 1129
  00180	8b f4		 mov	 esi, esp
  00182	6a fa		 push	 -6			; fffffffaH
  00184	8b 45 08	 mov	 eax, DWORD PTR _hWndFocus$[ebp]
  00187	50		 push	 eax
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  0018e	3b f4		 cmp	 esi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00195	89 45 ec	 mov	 DWORD PTR _hInstance$[ebp], eax
; Line 1130
  00198	8b 4d ec	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  0019b	51		 push	 ecx
  0019c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001a1	8b c8		 mov	 ecx, eax
  001a3	e8 00 00 00 00	 call	 ?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z ; DXUTState::SetHInstance
; Line 1131
  001a8	6a 00		 push	 0
  001aa	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001af	8b c8		 mov	 ecx, eax
  001b1	e8 00 00 00 00	 call	 ?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
; Line 1132
  001b6	6a 01		 push	 1
  001b8	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001bd	8b c8		 mov	 ecx, eax
  001bf	e8 00 00 00 00	 call	 ?SetWindowCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreated
; Line 1133
  001c4	8b 55 08	 mov	 edx, DWORD PTR _hWndFocus$[ebp]
  001c7	52		 push	 edx
  001c8	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001cd	8b c8		 mov	 ecx, eax
  001cf	e8 00 00 00 00	 call	 ?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDFocus
; Line 1134
  001d4	8b 45 0c	 mov	 eax, DWORD PTR _hWndDeviceFullScreen$[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001dd	8b c8		 mov	 ecx, eax
  001df	e8 00 00 00 00	 call	 ?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
; Line 1135
  001e4	8b 4d 10	 mov	 ecx, DWORD PTR _hWndDeviceWindowed$[ebp]
  001e7	51		 push	 ecx
  001e8	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001ed	8b c8		 mov	 ecx, eax
  001ef	e8 00 00 00 00	 call	 ?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
; Line 1137
  001f4	33 c0		 xor	 eax, eax
$LN9@DXUTSetWin:
; Line 1138
  001f6	5e		 pop	 esi
  001f7	83 c4 14	 add	 esp, 20			; 00000014H
  001fa	3b ec		 cmp	 ebp, esp
  001fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00201	8b e5		 mov	 esp, ebp
  00203	5d		 pop	 ebp
  00204	c2 10 00	 ret	 16			; 00000010H
?DXUTSetWindow@@YGJPAUHWND__@@00_N@Z ENDP		; DXUTSetWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv236 = -633						; size = 1
_dwError$1 = -632					; size = 4
_hWnd$2 = -628						; size = 4
_strCachedWindowTitle$3 = -624				; size = 4
_rc$4 = -616						; size = 16
_nDefaultHeight$5 = -596				; size = 4
_nDefaultWidth$6 = -592					; size = 4
_dwError$7 = -588					; size = 4
_wndClass$8 = -580					; size = 40
_szExePath$9 = -532					; size = 520
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_strWindowTitle$ = 8					; size = 4
_hInstance$ = 12					; size = 4
_hIcon$ = 16						; size = 4
_hMenu$ = 20						; size = 4
_x$ = 24						; size = 4
_y$ = 28						; size = 4
?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z PROC ; DXUTCreateWindow
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 979
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 7c 02 00
	00		 sub	 esp, 636		; 0000027cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 84 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-636]
  00011	b9 9f 00 00 00	 mov	 ecx, 159		; 0000009fH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 983
  00027	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002c	8b c8		 mov	 ecx, eax
  0002e	e8 00 00 00 00	 call	 ?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 20		 je	 SHORT $LN15@DXUTCreate
; Line 984
  0003a	6a 01		 push	 1
  0003c	68 00 00 00 00	 push	 OFFSET $SG151728
  00041	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00046	68 d8 03 00 00	 push	 984			; 000003d8H
  0004b	68 00 00 00 00	 push	 OFFSET $SG151729
  00050	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00055	e9 fc 03 00 00	 jmp	 $LN16@DXUTCreate
$LN15@DXUTCreate:
; Line 986
  0005a	6a 01		 push	 1
  0005c	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00061	8b c8		 mov	 ecx, eax
  00063	e8 00 00 00 00	 call	 ?SetWindowCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreateCalled
; Line 988
  00068	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ?GetDXUTInited@DXUTState@@QAE_NXZ ; DXUTState::GetDXUTInited
  00074	0f b6 c8	 movzx	 ecx, al
  00077	85 c9		 test	 ecx, ecx
  00079	75 3b		 jne	 SHORT $LN14@DXUTCreate
; Line 992
  0007b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ?GetDXUTInitCalled@DXUTState@@QAE_NXZ ; DXUTState::GetDXUTInitCalled
  00087	0f b6 d0	 movzx	 edx, al
  0008a	85 d2		 test	 edx, edx
  0008c	74 0a		 je	 SHORT $LN13@DXUTCreate
; Line 993
  0008e	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00093	e9 be 03 00 00	 jmp	 $LN16@DXUTCreate
$LN13@DXUTCreate:
; Line 997
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	6a 01		 push	 1
  0009e	6a 01		 push	 1
  000a0	e8 00 00 00 00	 call	 ?DXUTInit@@YGJ_N0PA_W0@Z ; DXUTInit
  000a5	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 998
  000a8	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ac	7d 08		 jge	 SHORT $LN14@DXUTCreate
; Line 999
  000ae	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  000b1	e9 a0 03 00 00	 jmp	 $LN16@DXUTCreate
$LN14@DXUTCreate:
; Line 1002
  000b6	e8 00 00 00 00	 call	 ?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ ; DXUTGetHWNDFocus
  000bb	85 c0		 test	 eax, eax
  000bd	0f 85 91 03 00
	00		 jne	 $LN11@DXUTCreate
; Line 1004
  000c3	83 7d 0c 00	 cmp	 DWORD PTR _hInstance$[ebp], 0
  000c7	75 14		 jne	 SHORT $LN10@DXUTCreate
; Line 1005
  000c9	8b f4		 mov	 esi, esp
  000cb	6a 00		 push	 0
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	89 45 0c	 mov	 DWORD PTR _hInstance$[ebp], eax
$LN10@DXUTCreate:
; Line 1006
  000dd	8b 45 0c	 mov	 eax, DWORD PTR _hInstance$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000e6	8b c8		 mov	 ecx, eax
  000e8	e8 00 00 00 00	 call	 ?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z ; DXUTState::SetHInstance
; Line 1009
  000ed	8b f4		 mov	 esi, esp
  000ef	68 04 01 00 00	 push	 260			; 00000104H
  000f4	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _szExePath$9[ebp]
  000fa	51		 push	 ecx
  000fb	6a 00		 push	 0
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameW@12
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1010
  0010a	83 7d 10 00	 cmp	 DWORD PTR _hIcon$[ebp], 0
  0010e	75 1f		 jne	 SHORT $LN9@DXUTCreate
; Line 1011
  00110	8b f4		 mov	 esi, esp
  00112	6a 00		 push	 0
  00114	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _szExePath$9[ebp]
  0011a	52		 push	 edx
  0011b	8b 45 0c	 mov	 eax, DWORD PTR _hInstance$[ebp]
  0011e	50		 push	 eax
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExtractIconW@12
  00125	3b f4		 cmp	 esi, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012c	89 45 10	 mov	 DWORD PTR _hIcon$[ebp], eax
$LN9@DXUTCreate:
; Line 1015
  0012f	c7 85 bc fd ff
	ff 08 00 00 00	 mov	 DWORD PTR _wndClass$8[ebp], 8
; Line 1016
  00139	c7 85 c0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _wndClass$8[ebp+4], OFFSET ?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z ; DXUTStaticWndProc
; Line 1017
  00143	c7 85 c4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _wndClass$8[ebp+8], 0
; Line 1018
  0014d	c7 85 c8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _wndClass$8[ebp+12], 0
; Line 1019
  00157	8b 4d 0c	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  0015a	89 8d cc fd ff
	ff		 mov	 DWORD PTR _wndClass$8[ebp+16], ecx
; Line 1020
  00160	8b 55 10	 mov	 edx, DWORD PTR _hIcon$[ebp]
  00163	89 95 d0 fd ff
	ff		 mov	 DWORD PTR _wndClass$8[ebp+20], edx
; Line 1021
  00169	8b f4		 mov	 esi, esp
  0016b	68 00 7f 00 00	 push	 32512			; 00007f00H
  00170	6a 00		 push	 0
  00172	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorW@8
  00178	3b f4		 cmp	 esi, esp
  0017a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017f	89 85 d4 fd ff
	ff		 mov	 DWORD PTR _wndClass$8[ebp+24], eax
; Line 1022
  00185	8b f4		 mov	 esi, esp
  00187	6a 04		 push	 4
  00189	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  0018f	3b f4		 cmp	 esi, esp
  00191	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00196	89 85 d8 fd ff
	ff		 mov	 DWORD PTR _wndClass$8[ebp+28], eax
; Line 1023
  0019c	c7 85 dc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _wndClass$8[ebp+32], 0
; Line 1024
  001a6	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _wndClass$8[ebp+36], OFFSET $SG151745
; Line 1026
  001b0	8b f4		 mov	 esi, esp
  001b2	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _wndClass$8[ebp]
  001b8	50		 push	 eax
  001b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassW@4
  001bf	3b f4		 cmp	 esi, esp
  001c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c6	0f b7 c8	 movzx	 ecx, ax
  001c9	85 c9		 test	 ecx, ecx
  001cb	75 4c		 jne	 SHORT $LN8@DXUTCreate
; Line 1028
  001cd	8b f4		 mov	 esi, esp
  001cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001d5	3b f4		 cmp	 esi, esp
  001d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001dc	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _dwError$7[ebp], eax
; Line 1029
  001e2	81 bd b4 fd ff
	ff 82 05 00 00	 cmp	 DWORD PTR _dwError$7[ebp], 1410 ; 00000582H
  001ec	74 2b		 je	 SHORT $LN8@DXUTCreate
; Line 1030
  001ee	6a 01		 push	 1
  001f0	68 00 00 00 00	 push	 OFFSET $SG151750
  001f5	8b 95 b4 fd ff
	ff		 mov	 edx, DWORD PTR _dwError$7[ebp]
  001fb	52		 push	 edx
  001fc	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00201	83 c4 04	 add	 esp, 4
  00204	50		 push	 eax
  00205	68 06 04 00 00	 push	 1030			; 00000406H
  0020a	68 00 00 00 00	 push	 OFFSET $SG151751
  0020f	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00214	e9 3d 02 00 00	 jmp	 $LN16@DXUTCreate
$LN8@DXUTCreate:
; Line 1034
  00219	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0021e	8b c8		 mov	 ecx, eax
  00220	e8 00 00 00 00	 call	 ?GetOverrideStartX@DXUTState@@QAEHXZ ; DXUTState::GetOverrideStartX
  00225	83 f8 ff	 cmp	 eax, -1
  00228	74 0f		 je	 SHORT $LN6@DXUTCreate
; Line 1035
  0022a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0022f	8b c8		 mov	 ecx, eax
  00231	e8 00 00 00 00	 call	 ?GetOverrideStartX@DXUTState@@QAEHXZ ; DXUTState::GetOverrideStartX
  00236	89 45 18	 mov	 DWORD PTR _x$[ebp], eax
$LN6@DXUTCreate:
; Line 1036
  00239	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0023e	8b c8		 mov	 ecx, eax
  00240	e8 00 00 00 00	 call	 ?GetOverrideStartY@DXUTState@@QAEHXZ ; DXUTState::GetOverrideStartY
  00245	83 f8 ff	 cmp	 eax, -1
  00248	74 0f		 je	 SHORT $LN5@DXUTCreate
; Line 1037
  0024a	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0024f	8b c8		 mov	 ecx, eax
  00251	e8 00 00 00 00	 call	 ?GetOverrideStartY@DXUTState@@QAEHXZ ; DXUTState::GetOverrideStartY
  00256	89 45 1c	 mov	 DWORD PTR _y$[ebp], eax
$LN5@DXUTCreate:
; Line 1039
  00259	6a 00		 push	 0
  0025b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00260	8b c8		 mov	 ecx, eax
  00262	e8 00 00 00 00	 call	 ?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
; Line 1040
  00267	81 7d 18 00 00
	00 80		 cmp	 DWORD PTR _x$[ebp], -2147483648 ; 80000000H
  0026e	75 17		 jne	 SHORT $LN4@DXUTCreate
  00270	81 7d 1c 00 00
	00 80		 cmp	 DWORD PTR _y$[ebp], -2147483648 ; 80000000H
  00277	75 0e		 jne	 SHORT $LN4@DXUTCreate
; Line 1041
  00279	6a 01		 push	 1
  0027b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00280	8b c8		 mov	 ecx, eax
  00282	e8 00 00 00 00	 call	 ?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
$LN4@DXUTCreate:
; Line 1044
  00287	c7 85 b0 fd ff
	ff 20 03 00 00	 mov	 DWORD PTR _nDefaultWidth$6[ebp], 800 ; 00000320H
; Line 1045
  00291	c7 85 ac fd ff
	ff 58 02 00 00	 mov	 DWORD PTR _nDefaultHeight$5[ebp], 600 ; 00000258H
; Line 1046
  0029b	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002a0	8b c8		 mov	 ecx, eax
  002a2	e8 00 00 00 00	 call	 ?GetOverrideWidth@DXUTState@@QAEHXZ ; DXUTState::GetOverrideWidth
  002a7	85 c0		 test	 eax, eax
  002a9	74 12		 je	 SHORT $LN3@DXUTCreate
; Line 1047
  002ab	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002b0	8b c8		 mov	 ecx, eax
  002b2	e8 00 00 00 00	 call	 ?GetOverrideWidth@DXUTState@@QAEHXZ ; DXUTState::GetOverrideWidth
  002b7	89 85 b0 fd ff
	ff		 mov	 DWORD PTR _nDefaultWidth$6[ebp], eax
$LN3@DXUTCreate:
; Line 1048
  002bd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002c2	8b c8		 mov	 ecx, eax
  002c4	e8 00 00 00 00	 call	 ?GetOverrideHeight@DXUTState@@QAEHXZ ; DXUTState::GetOverrideHeight
  002c9	85 c0		 test	 eax, eax
  002cb	74 12		 je	 SHORT $LN2@DXUTCreate
; Line 1049
  002cd	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  002d2	8b c8		 mov	 ecx, eax
  002d4	e8 00 00 00 00	 call	 ?GetOverrideHeight@DXUTState@@QAEHXZ ; DXUTState::GetOverrideHeight
  002d9	89 85 ac fd ff
	ff		 mov	 DWORD PTR _nDefaultHeight$5[ebp], eax
$LN2@DXUTCreate:
; Line 1052
  002df	8b f4		 mov	 esi, esp
  002e1	8b 85 ac fd ff
	ff		 mov	 eax, DWORD PTR _nDefaultHeight$5[ebp]
  002e7	50		 push	 eax
  002e8	8b 8d b0 fd ff
	ff		 mov	 ecx, DWORD PTR _nDefaultWidth$6[ebp]
  002ee	51		 push	 ecx
  002ef	6a 00		 push	 0
  002f1	6a 00		 push	 0
  002f3	8d 95 98 fd ff
	ff		 lea	 edx, DWORD PTR _rc$4[ebp]
  002f9	52		 push	 edx
  002fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00300	3b f4		 cmp	 esi, esp
  00302	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1053
  00307	83 7d 14 00	 cmp	 DWORD PTR _hMenu$[ebp], 0
  0030b	74 09		 je	 SHORT $LN18@DXUTCreate
  0030d	c6 85 87 fd ff
	ff 01		 mov	 BYTE PTR tv236[ebp], 1
  00314	eb 07		 jmp	 SHORT $LN19@DXUTCreate
$LN18@DXUTCreate:
  00316	c6 85 87 fd ff
	ff 00		 mov	 BYTE PTR tv236[ebp], 0
$LN19@DXUTCreate:
  0031d	0f b6 85 87 fd
	ff ff		 movzx	 eax, BYTE PTR tv236[ebp]
  00324	8b f4		 mov	 esi, esp
  00326	50		 push	 eax
  00327	68 00 00 cf 00	 push	 13565952		; 00cf0000H
  0032c	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR _rc$4[ebp]
  00332	51		 push	 ecx
  00333	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AdjustWindowRect@12
  00339	3b f4		 cmp	 esi, esp
  0033b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1055
  00340	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00345	8b c8		 mov	 ecx, eax
  00347	e8 00 00 00 00	 call	 ?GetWindowTitle@DXUTState@@QAEPA_WXZ ; DXUTState::GetWindowTitle
  0034c	89 85 90 fd ff
	ff		 mov	 DWORD PTR _strCachedWindowTitle$3[ebp], eax
; Line 1056
  00352	8b f4		 mov	 esi, esp
  00354	8b 55 08	 mov	 edx, DWORD PTR _strWindowTitle$[ebp]
  00357	52		 push	 edx
  00358	68 00 01 00 00	 push	 256			; 00000100H
  0035d	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR _strCachedWindowTitle$3[ebp]
  00363	50		 push	 eax
  00364	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0036a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0036d	3b f4		 cmp	 esi, esp
  0036f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1061
  00374	8b f4		 mov	 esi, esp
  00376	6a 00		 push	 0
  00378	8b 4d 0c	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  0037b	51		 push	 ecx
  0037c	8b 55 14	 mov	 edx, DWORD PTR _hMenu$[ebp]
  0037f	52		 push	 edx
  00380	6a 00		 push	 0
  00382	8b 85 a4 fd ff
	ff		 mov	 eax, DWORD PTR _rc$4[ebp+12]
  00388	2b 85 9c fd ff
	ff		 sub	 eax, DWORD PTR _rc$4[ebp+4]
  0038e	50		 push	 eax
  0038f	8b 8d a0 fd ff
	ff		 mov	 ecx, DWORD PTR _rc$4[ebp+8]
  00395	2b 8d 98 fd ff
	ff		 sub	 ecx, DWORD PTR _rc$4[ebp]
  0039b	51		 push	 ecx
  0039c	8b 55 1c	 mov	 edx, DWORD PTR _y$[ebp]
  0039f	52		 push	 edx
  003a0	8b 45 18	 mov	 eax, DWORD PTR _x$[ebp]
  003a3	50		 push	 eax
  003a4	68 00 00 cf 00	 push	 13565952		; 00cf0000H
  003a9	8b 4d 08	 mov	 ecx, DWORD PTR _strWindowTitle$[ebp]
  003ac	51		 push	 ecx
  003ad	68 00 00 00 00	 push	 OFFSET $SG151764
  003b2	6a 00		 push	 0
  003b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  003ba	3b f4		 cmp	 esi, esp
  003bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003c1	89 85 8c fd ff
	ff		 mov	 DWORD PTR _hWnd$2[ebp], eax
; Line 1062
  003c7	83 bd 8c fd ff
	ff 00		 cmp	 DWORD PTR _hWnd$2[ebp], 0
  003ce	75 3d		 jne	 SHORT $LN1@DXUTCreate
; Line 1064
  003d0	8b f4		 mov	 esi, esp
  003d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  003d8	3b f4		 cmp	 esi, esp
  003da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003df	89 85 88 fd ff
	ff		 mov	 DWORD PTR _dwError$1[ebp], eax
; Line 1065
  003e5	6a 01		 push	 1
  003e7	68 00 00 00 00	 push	 OFFSET $SG151768
  003ec	8b 95 88 fd ff
	ff		 mov	 edx, DWORD PTR _dwError$1[ebp]
  003f2	52		 push	 edx
  003f3	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  003f8	83 c4 04	 add	 esp, 4
  003fb	50		 push	 eax
  003fc	68 29 04 00 00	 push	 1065			; 00000429H
  00401	68 00 00 00 00	 push	 OFFSET $SG151769
  00406	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0040b	eb 49		 jmp	 SHORT $LN16@DXUTCreate
$LN1@DXUTCreate:
; Line 1068
  0040d	6a 01		 push	 1
  0040f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00414	8b c8		 mov	 ecx, eax
  00416	e8 00 00 00 00	 call	 ?SetWindowCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreated
; Line 1069
  0041b	8b 85 8c fd ff
	ff		 mov	 eax, DWORD PTR _hWnd$2[ebp]
  00421	50		 push	 eax
  00422	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00427	8b c8		 mov	 ecx, eax
  00429	e8 00 00 00 00	 call	 ?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDFocus
; Line 1070
  0042e	8b 8d 8c fd ff
	ff		 mov	 ecx, DWORD PTR _hWnd$2[ebp]
  00434	51		 push	 ecx
  00435	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0043a	8b c8		 mov	 ecx, eax
  0043c	e8 00 00 00 00	 call	 ?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
; Line 1071
  00441	8b 95 8c fd ff
	ff		 mov	 edx, DWORD PTR _hWnd$2[ebp]
  00447	52		 push	 edx
  00448	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0044d	8b c8		 mov	 ecx, eax
  0044f	e8 00 00 00 00	 call	 ?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
$LN11@DXUTCreate:
; Line 1074
  00454	33 c0		 xor	 eax, eax
$LN16@DXUTCreate:
; Line 1075
  00456	52		 push	 edx
  00457	8b cd		 mov	 ecx, ebp
  00459	50		 push	 eax
  0045a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN24@DXUTCreate
  00460	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00465	58		 pop	 eax
  00466	5a		 pop	 edx
  00467	5f		 pop	 edi
  00468	5e		 pop	 esi
  00469	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0046c	33 cd		 xor	 ecx, ebp
  0046e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00473	81 c4 7c 02 00
	00		 add	 esp, 636		; 0000027cH
  00479	3b ec		 cmp	 ebp, esp
  0047b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00480	8b e5		 mov	 esp, ebp
  00482	5d		 pop	 ebp
  00483	c2 18 00	 ret	 24			; 00000018H
  00486	8b ff		 npad	 2
$LN24@DXUTCreate:
  00488	03 00 00 00	 DD	 3
  0048c	00 00 00 00	 DD	 $LN23@DXUTCreate
$LN23@DXUTCreate:
  00490	ec fd ff ff	 DD	 -532			; fffffdecH
  00494	08 02 00 00	 DD	 520			; 00000208H
  00498	00 00 00 00	 DD	 $LN20@DXUTCreate
  0049c	bc fd ff ff	 DD	 -580			; fffffdbcH
  004a0	28 00 00 00	 DD	 40			; 00000028H
  004a4	00 00 00 00	 DD	 $LN21@DXUTCreate
  004a8	98 fd ff ff	 DD	 -616			; fffffd98H
  004ac	10 00 00 00	 DD	 16			; 00000010H
  004b0	00 00 00 00	 DD	 $LN22@DXUTCreate
$LN22@DXUTCreate:
  004b4	72		 DB	 114			; 00000072H
  004b5	63		 DB	 99			; 00000063H
  004b6	00		 DB	 0
$LN21@DXUTCreate:
  004b7	77		 DB	 119			; 00000077H
  004b8	6e		 DB	 110			; 0000006eH
  004b9	64		 DB	 100			; 00000064H
  004ba	43		 DB	 67			; 00000043H
  004bb	6c		 DB	 108			; 0000006cH
  004bc	61		 DB	 97			; 00000061H
  004bd	73		 DB	 115			; 00000073H
  004be	73		 DB	 115			; 00000073H
  004bf	00		 DB	 0
$LN20@DXUTCreate:
  004c0	73		 DB	 115			; 00000073H
  004c1	7a		 DB	 122			; 0000007aH
  004c2	45		 DB	 69			; 00000045H
  004c3	78		 DB	 120			; 00000078H
  004c4	65		 DB	 101			; 00000065H
  004c5	50		 DB	 80			; 00000050H
  004c6	61		 DB	 97			; 00000061H
  004c7	74		 DB	 116			; 00000074H
  004c8	68		 DB	 104			; 00000068H
  004c9	00		 DB	 0
?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ENDP ; DXUTCreateWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fk$ = -68						; size = 24
_tk$ = -36						; size = 8
_sk$ = -20						; size = 8
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_bParseCommandLine$ = 8					; size = 1
_bShowMsgBoxOnError$ = 12				; size = 1
_strExtraCommandLineParams$ = 16			; size = 4
_bThreadSafeDXUT$ = 20					; size = 1
?DXUTInit@@YGJ_N0PA_W0@Z PROC				; DXUTInit
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 658
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b8	 lea	 edi, DWORD PTR [ebp-72]
  0000b	b9 12 00 00 00	 mov	 ecx, 18			; 00000012H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 659
  00021	8a 45 14	 mov	 al, BYTE PTR _bThreadSafeDXUT$[ebp]
  00024	a2 00 00 00 00	 mov	 BYTE PTR ?g_bThreadSafe@@3_NA, al ; g_bThreadSafe
; Line 661
  00029	8b f4		 mov	 esi, esp
  0002b	6a 00		 push	 0
  0002d	6a 00		 push	 0
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoInitializeEx@8
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 662
  0003f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00043	7d 08		 jge	 SHORT $LN6@DXUTInit
; Line 663
  00045	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  00048	e9 8f 01 00 00	 jmp	 $LN7@DXUTInit
$LN6@DXUTInit:
; Line 665
  0004d	6a 01		 push	 1
  0004f	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ?SetDXUTInitCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetDXUTInitCalled
; Line 668
  0005b	8b f4		 mov	 esi, esp
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitCommonControls@0
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 671
  0006a	c7 45 ec 08 00
	00 00		 mov	 DWORD PTR _sk$[ebp], 8
  00071	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _sk$[ebp+4], 0
; Line 672
  00078	8b f4		 mov	 esi, esp
  0007a	6a 00		 push	 0
  0007c	8d 4d ec	 lea	 ecx, DWORD PTR _sk$[ebp]
  0007f	51		 push	 ecx
  00080	6a 08		 push	 8
  00082	6a 3a		 push	 58			; 0000003aH
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	85 c0		 test	 eax, eax
  00093	75 08		 jne	 SHORT $LN5@DXUTInit
; Line 673
  00095	33 d2		 xor	 edx, edx
  00097	89 55 ec	 mov	 DWORD PTR _sk$[ebp], edx
  0009a	89 55 f0	 mov	 DWORD PTR _sk$[ebp+4], edx
$LN5@DXUTInit:
; Line 674
  0009d	8b 45 f0	 mov	 eax, DWORD PTR _sk$[ebp+4]
  000a0	50		 push	 eax
  000a1	8b 4d ec	 mov	 ecx, DWORD PTR _sk$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000aa	8b c8		 mov	 ecx, eax
  000ac	e8 00 00 00 00	 call	 ?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z ; DXUTState::SetStartupStickyKeys
; Line 676
  000b1	c7 45 dc 08 00
	00 00		 mov	 DWORD PTR _tk$[ebp], 8
  000b8	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _tk$[ebp+4], 0
; Line 677
  000bf	8b f4		 mov	 esi, esp
  000c1	6a 00		 push	 0
  000c3	8d 55 dc	 lea	 edx, DWORD PTR _tk$[ebp]
  000c6	52		 push	 edx
  000c7	6a 08		 push	 8
  000c9	6a 34		 push	 52			; 00000034H
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  000d1	3b f4		 cmp	 esi, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	85 c0		 test	 eax, eax
  000da	75 08		 jne	 SHORT $LN4@DXUTInit
; Line 678
  000dc	33 c0		 xor	 eax, eax
  000de	89 45 dc	 mov	 DWORD PTR _tk$[ebp], eax
  000e1	89 45 e0	 mov	 DWORD PTR _tk$[ebp+4], eax
$LN4@DXUTInit:
; Line 679
  000e4	8b 4d e0	 mov	 ecx, DWORD PTR _tk$[ebp+4]
  000e7	51		 push	 ecx
  000e8	8b 55 dc	 mov	 edx, DWORD PTR _tk$[ebp]
  000eb	52		 push	 edx
  000ec	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  000f1	8b c8		 mov	 ecx, eax
  000f3	e8 00 00 00 00	 call	 ?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z ; DXUTState::SetStartupToggleKeys
; Line 681
  000f8	c7 45 bc 18 00
	00 00		 mov	 DWORD PTR _fk$[ebp], 24	; 00000018H
  000ff	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _fk$[ebp+4], 0
  00106	33 c0		 xor	 eax, eax
  00108	89 45 c4	 mov	 DWORD PTR _fk$[ebp+8], eax
  0010b	89 45 c8	 mov	 DWORD PTR _fk$[ebp+12], eax
  0010e	89 45 cc	 mov	 DWORD PTR _fk$[ebp+16], eax
  00111	89 45 d0	 mov	 DWORD PTR _fk$[ebp+20], eax
; Line 682
  00114	8b f4		 mov	 esi, esp
  00116	6a 00		 push	 0
  00118	8d 4d bc	 lea	 ecx, DWORD PTR _fk$[ebp]
  0011b	51		 push	 ecx
  0011c	6a 18		 push	 24			; 00000018H
  0011e	6a 32		 push	 50			; 00000032H
  00120	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  00126	3b f4		 cmp	 esi, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	85 c0		 test	 eax, eax
  0012f	75 14		 jne	 SHORT $LN3@DXUTInit
; Line 683
  00131	33 d2		 xor	 edx, edx
  00133	89 55 bc	 mov	 DWORD PTR _fk$[ebp], edx
  00136	89 55 c0	 mov	 DWORD PTR _fk$[ebp+4], edx
  00139	89 55 c4	 mov	 DWORD PTR _fk$[ebp+8], edx
  0013c	89 55 c8	 mov	 DWORD PTR _fk$[ebp+12], edx
  0013f	89 55 cc	 mov	 DWORD PTR _fk$[ebp+16], edx
  00142	89 55 d0	 mov	 DWORD PTR _fk$[ebp+20], edx
$LN3@DXUTInit:
; Line 684
  00145	83 ec 18	 sub	 esp, 24			; 00000018H
  00148	8b c4		 mov	 eax, esp
  0014a	8b 4d bc	 mov	 ecx, DWORD PTR _fk$[ebp]
  0014d	89 08		 mov	 DWORD PTR [eax], ecx
  0014f	8b 55 c0	 mov	 edx, DWORD PTR _fk$[ebp+4]
  00152	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00155	8b 4d c4	 mov	 ecx, DWORD PTR _fk$[ebp+8]
  00158	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0015b	8b 55 c8	 mov	 edx, DWORD PTR _fk$[ebp+12]
  0015e	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00161	8b 4d cc	 mov	 ecx, DWORD PTR _fk$[ebp+16]
  00164	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00167	8b 55 d0	 mov	 edx, DWORD PTR _fk$[ebp+20]
  0016a	89 50 14	 mov	 DWORD PTR [eax+20], edx
  0016d	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00172	8b c8		 mov	 ecx, eax
  00174	e8 00 00 00 00	 call	 ?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z ; DXUTState::SetStartupFilterKeys
; Line 686
  00179	0f b6 45 0c	 movzx	 eax, BYTE PTR _bShowMsgBoxOnError$[ebp]
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  00183	8b c8		 mov	 ecx, eax
  00185	e8 00 00 00 00	 call	 ?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z ; DXUTState::SetShowMsgBoxOnError
; Line 688
  0018a	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bParseCommandLine$[ebp]
  0018e	85 c9		 test	 ecx, ecx
  00190	74 1a		 je	 SHORT $LN2@DXUTInit
; Line 689
  00192	6a 01		 push	 1
  00194	8b f4		 mov	 esi, esp
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCommandLineW@0
  0019c	3b f4		 cmp	 esi, esp
  0019e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a3	50		 push	 eax
  001a4	e8 00 00 00 00	 call	 ?DXUTParseCommandLine@@YAXPA_W_N@Z ; DXUTParseCommandLine
  001a9	83 c4 08	 add	 esp, 8
$LN2@DXUTInit:
; Line 690
  001ac	83 7d 10 00	 cmp	 DWORD PTR _strExtraCommandLineParams$[ebp], 0
  001b0	74 0e		 je	 SHORT $LN1@DXUTInit
; Line 691
  001b2	6a 00		 push	 0
  001b4	8b 55 10	 mov	 edx, DWORD PTR _strExtraCommandLineParams$[ebp]
  001b7	52		 push	 edx
  001b8	e8 00 00 00 00	 call	 ?DXUTParseCommandLine@@YAXPA_W_N@Z ; DXUTParseCommandLine
  001bd	83 c4 08	 add	 esp, 8
$LN1@DXUTInit:
; Line 694
  001c0	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  001c5	8b c8		 mov	 ecx, eax
  001c7	e8 00 00 00 00	 call	 ?Reset@CDXUTTimer@@QAEXXZ ; CDXUTTimer::Reset
; Line 696
  001cc	6a 01		 push	 1
  001ce	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  001d3	8b c8		 mov	 ecx, eax
  001d5	e8 00 00 00 00	 call	 ?SetDXUTInited@DXUTState@@QAEX_N@Z ; DXUTState::SetDXUTInited
; Line 698
  001da	33 c0		 xor	 eax, eax
$LN7@DXUTInit:
; Line 699
  001dc	52		 push	 edx
  001dd	8b cd		 mov	 ecx, ebp
  001df	50		 push	 eax
  001e0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@DXUTInit
  001e6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001eb	58		 pop	 eax
  001ec	5a		 pop	 edx
  001ed	5f		 pop	 edi
  001ee	5e		 pop	 esi
  001ef	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f2	33 cd		 xor	 ecx, ebp
  001f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f9	83 c4 48	 add	 esp, 72			; 00000048H
  001fc	3b ec		 cmp	 ebp, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c2 10 00	 ret	 16			; 00000010H
  00209	8d 49 00	 npad	 3
$LN13@DXUTInit:
  0020c	03 00 00 00	 DD	 3
  00210	00 00 00 00	 DD	 $LN12@DXUTInit
$LN12@DXUTInit:
  00214	ec ff ff ff	 DD	 -20			; ffffffecH
  00218	08 00 00 00	 DD	 8
  0021c	00 00 00 00	 DD	 $LN9@DXUTInit
  00220	dc ff ff ff	 DD	 -36			; ffffffdcH
  00224	08 00 00 00	 DD	 8
  00228	00 00 00 00	 DD	 $LN10@DXUTInit
  0022c	bc ff ff ff	 DD	 -68			; ffffffbcH
  00230	18 00 00 00	 DD	 24			; 00000018H
  00234	00 00 00 00	 DD	 $LN11@DXUTInit
$LN11@DXUTInit:
  00238	66		 DB	 102			; 00000066H
  00239	6b		 DB	 107			; 0000006bH
  0023a	00		 DB	 0
$LN10@DXUTInit:
  0023b	74		 DB	 116			; 00000074H
  0023c	6b		 DB	 107			; 0000006bH
  0023d	00		 DB	 0
$LN9@DXUTInit:
  0023e	73		 DB	 115			; 00000073H
  0023f	6b		 DB	 107			; 0000006bH
  00240	00		 DB	 0
?DXUTInit@@YGJ_N0PA_W0@Z ENDP				; DXUTInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z PROC ; DXUTSetCallbackD3D11DeviceDestroyed
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 625
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11DeviceDestroyedFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z ENDP ; DXUTSetCallbackD3D11DeviceDestroyed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z PROC ; DXUTSetCallbackD3D11SwapChainReleasing
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 624
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11SwapChainReleasingFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z ENDP ; DXUTSetCallbackD3D11SwapChainReleasing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z PROC ; DXUTSetCallbackD3D11FrameRender
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 623
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z ; DXUTState::SetD3D11FrameRenderFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11FrameRenderFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z ENDP ; DXUTSetCallbackD3D11FrameRender
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z PROC ; DXUTSetCallbackD3D11SwapChainResized
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11SwapChainResizedFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainResizedFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z ENDP ; DXUTSetCallbackD3D11SwapChainResized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z PROC ; DXUTSetCallbackD3D11DeviceCreated
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11DeviceCreatedFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceCreatedFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z ENDP ; DXUTSetCallbackD3D11DeviceCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z PROC ; DXUTSetCallbackD3D11DeviceAcceptable
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 620
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z ; DXUTState::SetIsD3D11DeviceAcceptableFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z ENDP ; DXUTSetCallbackD3D11DeviceAcceptable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackDeviceRemoved@@YGXP6G_NPAX@Z0@Z PROC	; DXUTSetCallbackDeviceRemoved
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 613
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z ; DXUTState::SetDeviceRemovedFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetDeviceRemovedFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackDeviceRemoved@@YGXP6G_NPAX@Z0@Z ENDP	; DXUTSetCallbackDeviceRemoved
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z PROC ; DXUTSetCallbackDeviceChanging
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z ; DXUTState::SetModifyDeviceSettingsFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetModifyDeviceSettingsFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z ENDP ; DXUTSetCallbackDeviceChanging
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z PROC ; DXUTSetCallbackMsgProc
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 617
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z ; DXUTState::SetWindowMsgFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetWindowMsgFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z ENDP ; DXUTSetCallbackMsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_bIncludeMouseMove$ = 12				; size = 1
_pUserContext$ = 16					; size = 4
?DXUTSetCallbackMouse@@YGXP6GX_N0000HHHPAX@Z01@Z PROC	; DXUTSetCallbackMouse
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 616
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z ; DXUTState::SetMouseFunc
  00013	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _bIncludeMouseMove$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z ; DXUTState::SetNotifyOnMouseMove
  00024	8b 55 10	 mov	 edx, DWORD PTR _pUserContext$[ebp]
  00027	52		 push	 edx
  00028	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetMouseFuncUserContext
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	5d		 pop	 ebp
  0003c	c2 0c 00	 ret	 12			; 0000000cH
?DXUTSetCallbackMouse@@YGXP6GX_N0000HHHPAX@Z01@Z ENDP	; DXUTSetCallbackMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackKeyboard@@YGXP6GXI_N0PAX@Z1@Z PROC	; DXUTSetCallbackKeyboard
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 615
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z ; DXUTState::SetKeyboardFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetKeyboardFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackKeyboard@@YGXP6GXI_N0PAX@Z1@Z ENDP	; DXUTSetCallbackKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackFrameMove@@YGXP6GXNMPAX@Z0@Z PROC	; DXUTSetCallbackFrameMove
; File d:\engine class\assignment 1\new scratch\dxut\core\dxut.cpp
; Line 614
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _pCallback$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0000c	8b c8		 mov	 ecx, eax
  0000e	e8 00 00 00 00	 call	 ?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z ; DXUTState::SetFrameMoveFunc
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserContext$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?GetDXUTState@@YAAAVDXUTState@@XZ ; GetDXUTState
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetFrameMoveFuncUserContext
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?DXUTSetCallbackFrameMove@@YGXP6GXNMPAX@Z0@Z ENDP	; DXUTSetCallbackFrameMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001e	74 67		 je	 SHORT $LN5@Orphan_me
; Line 196
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	83 c2 04	 add	 edx, 4
  00028	89 55 f8	 mov	 DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
  0002b	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0002e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00031	74 17		 je	 SHORT $LN2@Orphan_me
  00033	8b 4d f8	 mov	 ecx, DWORD PTR __Pnext$1[ebp]
  00036	8b 11		 mov	 edx, DWORD PTR [ecx]
  00038	3b 55 fc	 cmp	 edx, DWORD PTR _this$[ebp]
  0003b	74 0d		 je	 SHORT $LN2@Orphan_me
; Line 198
  0003d	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	83 c1 04	 add	 ecx, 4
  00045	89 4d f8	 mov	 DWORD PTR __Pnext$1[ebp], ecx
  00048	eb e1		 jmp	 SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
  0004a	8b 55 f8	 mov	 edx, DWORD PTR __Pnext$1[ebp]
  0004d	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00050	75 21		 jne	 SHORT $LN1@Orphan_me
; Line 201
  00052	8b f4		 mov	 esi, esp
  00054	68 c9 00 00 00	 push	 201			; 000000c9H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Orphan_me:
; Line 202
  00073	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007c	89 10		 mov	 DWORD PTR [eax], edx
; Line 203
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
  00087	5e		 pop	 esi
  00088	83 c4 08	 add	 esp, 8
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4
; Line 189
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 183
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	75 09		 jne	 SHORT $LN3@Getcont
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
  00026	eb 0a		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	8b 02		 mov	 eax, DWORD PTR [edx]
  0002f	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
$LN4@Getcont:
  00032	8b 45 f8	 mov	 eax, DWORD PTR tv68[ebp]
; Line 184
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 178
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 179
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -40						; size = 4
__Parent_proxy$3 = -32					; size = 4
__Lock$4 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001d	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00020	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00023	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00026	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00029	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c5		 xor	 eax, ebp
  00039	50		 push	 eax
  0003a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00043	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 149
  00046	83 7d 08 00	 cmp	 DWORD PTR __Parent$[ebp], 0
  0004a	75 3e		 jne	 SHORT $LN3@Adopt
; Line 152
  0004c	8b f4		 mov	 esi, esp
  0004e	6a 03		 push	 3
  00050	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
  0006f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00076	8b f4		 mov	 esi, esp
  00078	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 156
  00088	eb 6b		 jmp	 SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
  0008a	8b 45 08	 mov	 eax, DWORD PTR __Parent$[ebp]
  0008d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008f	89 4d e0	 mov	 DWORD PTR __Parent_proxy$3[ebp], ecx
; Line 161
  00092	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00095	8b 02		 mov	 eax, DWORD PTR [edx]
  00097	3b 45 e0	 cmp	 eax, DWORD PTR __Parent_proxy$3[ebp]
  0009a	74 59		 je	 SHORT $LN4@Adopt
; Line 163
  0009c	8b f4		 mov	 esi, esp
  0009e	6a 03		 push	 3
  000a0	8d 4d d8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
  000bf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	8b 55 e0	 mov	 edx, DWORD PTR __Parent_proxy$3[ebp]
  000c5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c8	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 166
  000cb	8b 4d e0	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  000ce	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000d1	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 167
  000d4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 4d e0	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  000da	89 08		 mov	 DWORD PTR [eax], ecx
; Line 168
  000dc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e3	8b f4		 mov	 esi, esp
  000e5	8d 4d d8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  000e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ee	3b f4		 cmp	 esi, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@Adopt:
; Line 174
  000f5	52		 push	 edx
  000f6	8b cd		 mov	 ecx, ebp
  000f8	50		 push	 eax
  000f9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@Adopt
  000ff	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00104	58		 pop	 eax
  00105	5a		 pop	 edx
  00106	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00109	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00110	59		 pop	 ecx
  00111	5e		 pop	 esi
  00112	83 c4 2c	 add	 esp, 44			; 0000002cH
  00115	3b ec		 cmp	 ebp, esp
  00117	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c2 04 00	 ret	 4
  00122	8b ff		 npad	 2
$LN12@Adopt:
  00124	02 00 00 00	 DD	 2
  00128	00 00 00 00	 DD	 $LN11@Adopt
$LN11@Adopt:
  0012c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00130	04 00 00 00	 DD	 4
  00134	00 00 00 00	 DD	 $LN8@Adopt
  00138	d8 ff ff ff	 DD	 -40			; ffffffd8H
  0013c	04 00 00 00	 DD	 4
  00140	00 00 00 00	 DD	 $LN9@Adopt
$LN9@Adopt:
  00144	5f		 DB	 95			; 0000005fH
  00145	4c		 DB	 76			; 0000004cH
  00146	6f		 DB	 111			; 0000006fH
  00147	63		 DB	 99			; 00000063H
  00148	6b		 DB	 107			; 0000006bH
  00149	00		 DB	 0
$LN8@Adopt:
  0014a	5f		 DB	 95			; 0000005fH
  0014b	4c		 DB	 76			; 0000004cH
  0014c	6f		 DB	 111			; 0000006fH
  0014d	63		 DB	 99			; 00000063H
  0014e	6b		 DB	 107			; 0000006bH
  0014f	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d d8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 142
  0001b	8b f4		 mov	 esi, esp
  0001d	6a 03		 push	 3
  0001f	8d 4d f4	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 143
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
  00037	8b f4		 mov	 esi, esp
  00039	8d 4d f4	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	52		 push	 edx
  0004a	8b cd		 mov	 ecx, ebp
  0004c	50		 push	 eax
  0004d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iterator_b
  00053	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00058	58		 pop	 eax
  00059	5a		 pop	 edx
  0005a	5e		 pop	 esi
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
  00069	8d 49 00	 npad	 3
$LN5@Iterator_b:
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@Iterator_b
$LN4@Iterator_b:
  00074	f4 ff ff ff	 DD	 -12			; fffffff4H
  00078	04 00 00 00	 DD	 4
  0007c	00 00 00 00	 DD	 $LN3@Iterator_b
$LN3@Iterator_b:
  00080	5f		 DB	 95			; 0000005fH
  00081	4c		 DB	 76			; 0000004cH
  00082	6f		 DB	 111			; 0000006fH
  00083	63		 DB	 99			; 00000063H
  00084	6b		 DB	 107			; 0000006bH
  00085	00		 DB	 0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 115
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 69
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1736
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTwoPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1735
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMTwoPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMReciprocalPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPi@DirectX@@YAXXZ PROC				; DirectX::`dynamic initializer for 'g_XMPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1733
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMPi@DirectX@@YAXXZ ENDP				; DirectX::`dynamic initializer for 'g_XMPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMHalfPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMHalfPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMHalfPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1732
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMHalfPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMHalfPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativePi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativePi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMNegativePi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1731
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0000b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00012	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B, xmm0
  0001a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  00022	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00029	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  00039	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00040	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  00050	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00057	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??__Eg_XMNegativePi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMNegativePi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1730
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0000b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00012	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  0001a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  00022	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00029	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  00039	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00040	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  00050	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00057	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPiConstants0@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPiConstants0@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMPiConstants0'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1705
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMPiConstants0@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMPiConstants0''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1703
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0000b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _|
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_|	PROC						; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\d3d11sdklayers.h
; Line 137
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  00006	0b 45 0c	 or	 eax, DWORD PTR _b$[ebp]
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
_|	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 557
  00004	8b f4		 mov	 esi, esp
  00006	83 ec 08	 sub	 esp, 8
  00009	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR __Y$[ebp]
  0000e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00013	83 ec 08	 sub	 esp, 8
  00016	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR __X$[ebp]
  0001b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___hypot
  00026	83 c4 10	 add	 esp, 16			; 00000010H
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 558
  00030	5e		 pop	 esi
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
_hypot	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
; Line 105
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
; Line 103
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; Line 26297
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000f	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  00011	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00014	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  00017	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001c	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00022	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00028	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  0002e	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
END
