; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\New Scratch\DXUT\Core\DXUTmisc.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@H$0A@@std@@2HB	; std::integral_constant<int,0>::value
PUBLIC	_GUID_ContainerFormatBmp
PUBLIC	__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
_BSS	SEGMENT
_s_hModD3D9 DD	01H DUP (?)
_s_DynamicD3DPERF_BeginEvent DD 01H DUP (?)
_s_DynamicD3DPERF_EndEvent DD 01H DUP (?)
_s_DynamicD3DPERF_SetMarker DD 01H DUP (?)
_s_DynamicD3DPERF_SetRegion DD 01H DUP (?)
_s_DynamicD3DPERF_QueryRepeatFrame DD 01H DUP (?)
_s_DynamicD3DPERF_SetOptions DD 01H DUP (?)
_s_DynamicD3DPERF_GetStatus DD 01H DUP (?)
_s_hModDXGI DD	01H DUP (?)
_s_hModDXGIDebug DD 01H DUP (?)
_s_DynamicCreateDXGIFactory DD 01H DUP (?)
_s_DynamicDXGIGetDebugInterface DD 01H DUP (?)
_s_hModD3D11 DD	01H DUP (?)
_s_DynamicD3D11CreateDevice DD 01H DUP (?)
_BSS	ENDS
;	COMDAT __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
CONST	SEGMENT
__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c DD 06f15aaf2H
	DW	0d208H
	DW	04e89H
	DB	09aH
	DB	0b4H
	DB	048H
	DB	095H
	DB	035H
	DB	0d3H
	DB	04fH
	DB	09cH
CONST	ENDS
;	COMDAT _GUID_ContainerFormatBmp
CONST	SEGMENT
_GUID_ContainerFormatBmp DD 0af1d87eH
	DW	0fcfeH
	DW	04188H
	DB	0bdH
	DB	0ebH
	DB	0a7H
	DB	090H
	DB	064H
	DB	071H
	DB	0cbH
	DB	0e3H
CONST	ENDS
CONST	SEGMENT
$SG152576 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'M', 00H, 'I', 00H, 'N', 00H, 'M', 00H, 'A', 00H, 'X', 00H, 'I'
	DB	00H, 'N', 00H, 'F', 00H, 'O', 00H, 00H, 00H
	ORG $+2
$SG152578 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 'I', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 00H
	DB	00H
	ORG $+2
$SG152580 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'C', 00H, 'O', 00H
	DB	'N', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'S', 00H, 'E', 00H, 'B'
	DB	00H, 'K', 00H, 'G', 00H, 'N', 00H, 'D', 00H, 00H, 00H
$SG152582 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'E', 00H, 'X', 00H
	DB	'T', 00H, 'D', 00H, 'L', 00H, 'G', 00H, 'C', 00H, 'T', 00H, 'L'
	DB	00H, 00H, 00H
$SG152584 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'P', 00H, 'O', 00H
	DB	'O', 00H, 'L', 00H, 'E', 00H, 'R', 00H, 'S', 00H, 'T', 00H, 'A'
	DB	00H, 'T', 00H, 'U', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152586 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'R', 00H, 'A', 00H
	DB	'W', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'M', 00H, 00H, 00H
$SG152588 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'E', 00H, 'A', 00H
	DB	'S', 00H, 'U', 00H, 'R', 00H, 'E', 00H, 'I', 00H, 'T', 00H, 'E'
	DB	00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152590 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'L', 00H
	DB	'E', 00H, 'T', 00H, 'E', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'M'
	DB	00H, 00H, 00H
$SG152592 DB	'W', 00H, 'M', 00H, '_', 00H, 'V', 00H, 'K', 00H, 'E', 00H
	DB	'Y', 00H, 'T', 00H, 'O', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'M'
	DB	00H, 00H, 00H
$SG152594 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'H', 00H, 'A', 00H
	DB	'R', 00H, 'T', 00H, 'O', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'M'
	DB	00H, 00H, 00H
$SG152596 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H
	DB	'F', 00H, 'O', 00H, 'N', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152598 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'F', 00H, 'O', 00H, 'N', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152600 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H
	DB	'H', 00H, 'O', 00H, 'T', 00H, 'K', 00H, 'E', 00H, 'Y', 00H, 00H
	DB	00H
	ORG $+2
$SG152602 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'H', 00H, 'O', 00H, 'T', 00H, 'K', 00H, 'E', 00H, 'Y', 00H, 00H
	DB	00H
	ORG $+2
$SG152604 DB	'W', 00H, 'M', 00H, '_', 00H, 'Q', 00H, 'U', 00H, 'E', 00H
	DB	'R', 00H, 'Y', 00H, 'D', 00H, 'R', 00H, 'A', 00H, 'G', 00H, 'I'
	DB	00H, 'C', 00H, 'O', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152606 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'P', 00H, 'A', 00H, 'R', 00H, 'E', 00H, 'I', 00H, 'T', 00H, 'E'
	DB	00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152608 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'O', 00H, 'B', 00H, 'J', 00H, 'E', 00H, 'C', 00H, 'T', 00H, 00H
	DB	00H
	ORG $+2
$SG152610 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'P', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'G'
	DB	00H, 00H, 00H
$SG152612 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'M', 00H, 'N', 00H, 'O', 00H, 'T', 00H, 'I', 00H, 'F', 00H, 'Y'
	DB	00H, 00H, 00H
$SG152614 DB	'W', 00H, 'M', 00H, '_', 00H, 'W', 00H, 'I', 00H, 'N', 00H
	DB	'D', 00H, 'O', 00H, 'W', 00H, 'P', 00H, 'O', 00H, 'S', 00H, 'C'
	DB	00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'I', 00H, 'N', 00H
	DB	'G', 00H, 00H, 00H
	ORG $+2
$SG152616 DB	'W', 00H, 'M', 00H, '_', 00H, 'W', 00H, 'I', 00H, 'N', 00H
	DB	'D', 00H, 'O', 00H, 'W', 00H, 'P', 00H, 'O', 00H, 'S', 00H, 'C'
	DB	00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, 'D', 00H
	DB	00H, 00H
$SG152618 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'O', 00H, 'W', 00H
	DB	'E', 00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG152620 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'P', 00H
	DB	'Y', 00H, 'D', 00H, 'A', 00H, 'T', 00H, 'A', 00H, 00H, 00H
$SG152622 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'A', 00H, 'N', 00H
	DB	'C', 00H, 'E', 00H, 'L', 00H, 'J', 00H, 'O', 00H, 'U', 00H, 'R'
	DB	00H, 'N', 00H, 'A', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG152624 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'O', 00H, 'T', 00H
	DB	'I', 00H, 'F', 00H, 'Y', 00H, 00H, 00H
$SG152626 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'P', 00H
	DB	'U', 00H, 'T', 00H, 'L', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'C'
	DB	00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, 'R', 00H
	DB	'E', 00H, 'Q', 00H, 'U', 00H, 'E', 00H, 'S', 00H, 'T', 00H, 00H
	DB	00H
$SG152628 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'P', 00H
	DB	'U', 00H, 'T', 00H, 'L', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'C'
	DB	00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152630 DB	'W', 00H, 'M', 00H, '_', 00H, 'T', 00H, 'C', 00H, 'A', 00H
	DB	'R', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG152632 DB	'W', 00H, 'M', 00H, '_', 00H, 'H', 00H, 'E', 00H, 'L', 00H
	DB	'P', 00H, 00H, 00H
$SG152634 DB	'W', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H
	DB	'R', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E'
	DB	00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG152636 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'O', 00H, 'T', 00H
	DB	'I', 00H, 'F', 00H, 'Y', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 'A', 00H, 'T', 00H, 00H, 00H
$SG152638 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'N', 00H
	DB	'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 'M', 00H, 'E', 00H, 'N'
	DB	00H, 'U', 00H, 00H, 00H
	ORG $+2
$SG152640 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'Y', 00H
	DB	'L', 00H, 'E', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G'
	DB	00H, 'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG152642 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'Y', 00H
	DB	'L', 00H, 'E', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G'
	DB	00H, 'E', 00H, 'D', 00H, 00H, 00H
$SG152644 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'I', 00H, 'S', 00H
	DB	'P', 00H, 'L', 00H, 'A', 00H, 'Y', 00H, 'C', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'G', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152646 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'I', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152648 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H
	DB	'I', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152650 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'C', 00H
	DB	'R', 00H, 'E', 00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
$SG152652 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'D', 00H
	DB	'E', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'O', 00H, 'Y', 00H, 00H
	DB	00H
	ORG $+2
$SG152654 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'C', 00H
	DB	'A', 00H, 'L', 00H, 'C', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E'
	DB	00H, 00H, 00H
$SG152656 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'H', 00H
	DB	'I', 00H, 'T', 00H, 'T', 00H, 'E', 00H, 'S', 00H, 'T', 00H, 00H
	DB	00H
	ORG $+2
$SG152658 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'P', 00H
	DB	'A', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152660 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'A', 00H
	DB	'C', 00H, 'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E'
	DB	00H, 00H, 00H
$SG152662 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'D', 00H, 'L', 00H, 'G', 00H, 'C', 00H, 'O', 00H, 'D', 00H, 'E'
	DB	00H, 00H, 00H
$SG152664 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'Y', 00H, 'N', 00H
	DB	'C', 00H, 'P', 00H, 'A', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H
	DB	00H
	ORG $+2
$SG152666 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'M', 00H
	DB	'O', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'M', 00H, 'O', 00H, 'V'
	DB	00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152668 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'L', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'O', 00H, 'W', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152670 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'L', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U'
	DB	00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152672 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'L', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'B', 00H, 'L', 00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152674 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'R', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'O', 00H, 'W', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152676 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'R', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U'
	DB	00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152678 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'R', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'B', 00H, 'L', 00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152680 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'M', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'O', 00H, 'W', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152682 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'M', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U'
	DB	00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152684 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'M', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'B', 00H, 'L', 00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152686 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'X', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'O', 00H, 'W', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152688 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'X', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U'
	DB	00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152690 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'X', 00H
	DB	'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D'
	DB	00H, 'B', 00H, 'L', 00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152692 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'P', 00H
	DB	'U', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152694 DB	'W', 00H, 'M', 00H, '_', 00H, 'K', 00H, 'E', 00H, 'Y', 00H
	DB	'D', 00H, 'O', 00H, 'W', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152696 DB	'W', 00H, 'M', 00H, '_', 00H, 'K', 00H, 'E', 00H, 'Y', 00H
	DB	'U', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152698 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'H', 00H, 'A', 00H
	DB	'R', 00H, 00H, 00H
$SG152700 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'A', 00H
	DB	'D', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'R', 00H, 00H, 00H
$SG152702 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'Y', 00H, 'S', 00H
	DB	'K', 00H, 'E', 00H, 'Y', 00H, 'D', 00H, 'O', 00H, 'W', 00H, 'N'
	DB	00H, 00H, 00H
$SG152704 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'Y', 00H, 'S', 00H
	DB	'K', 00H, 'E', 00H, 'Y', 00H, 'U', 00H, 'P', 00H, 00H, 00H
$SG152706 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'Y', 00H, 'S', 00H
	DB	'C', 00H, 'H', 00H, 'A', 00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG152708 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'Y', 00H, 'S', 00H
	DB	'D', 00H, 'E', 00H, 'A', 00H, 'D', 00H, 'C', 00H, 'H', 00H, 'A'
	DB	00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG152710 DB	'W', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'I', 00H
	DB	'C', 00H, 'H', 00H, 'A', 00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG152712 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'R', 00H, 'T', 00H, 'C'
	DB	00H, 'O', 00H, 'M', 00H, 'P', 00H, 'O', 00H, 'S', 00H, 'I', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 00H, 00H
$SG152714 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'E', 00H, 'N', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M'
	DB	00H, 'P', 00H, 'O', 00H, 'S', 00H, 'I', 00H, 'T', 00H, 'I', 00H
	DB	'O', 00H, 'N', 00H, 00H, 00H
$SG152716 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'O', 00H, 'S'
	DB	00H, 'I', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152718 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'I', 00H
	DB	'T', 00H, 'D', 00H, 'I', 00H, 'A', 00H, 'L', 00H, 'O', 00H, 'G'
	DB	00H, 00H, 00H
$SG152720 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'M', 00H, 'A', 00H, 'N', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG152722 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'Y', 00H, 'S', 00H
	DB	'C', 00H, 'O', 00H, 'M', 00H, 'M', 00H, 'A', 00H, 'N', 00H, 'D'
	DB	00H, 00H, 00H
$SG152724 DB	'W', 00H, 'M', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M', 00H
	DB	'E', 00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG152726 DB	'W', 00H, 'M', 00H, '_', 00H, 'H', 00H, 'S', 00H, 'C', 00H
	DB	'R', 00H, 'O', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG152728 DB	'W', 00H, 'M', 00H, '_', 00H, 'V', 00H, 'S', 00H, 'C', 00H
	DB	'R', 00H, 'O', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG152730 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'I', 00H
	DB	'T', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U', 00H, 00H, 00H
$SG152732 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'I', 00H
	DB	'T', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U', 00H, 'P', 00H, 'O'
	DB	00H, 'P', 00H, 'U', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152734 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'E', 00H, 'N', 00H
	DB	'U', 00H, 'S', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'C', 00H, 'T'
	DB	00H, 00H, 00H
$SG152736 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'E', 00H, 'N', 00H
	DB	'U', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'R', 00H, 00H, 00H
$SG152738 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'T', 00H
	DB	'E', 00H, 'R', 00H, 'I', 00H, 'D', 00H, 'L', 00H, 'E', 00H, 00H
	DB	00H
	ORG $+2
$SG152740 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'E', 00H, 'N', 00H
	DB	'U', 00H, 'R', 00H, 'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O'
	DB	00H, 'N', 00H, 'U', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152742 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'E', 00H, 'N', 00H
	DB	'U', 00H, 'D', 00H, 'R', 00H, 'A', 00H, 'G', 00H, 00H, 00H
$SG152744 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'E', 00H, 'N', 00H
	DB	'U', 00H, 'G', 00H, 'E', 00H, 'T', 00H, 'O', 00H, 'B', 00H, 'J'
	DB	00H, 'E', 00H, 'C', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152746 DB	'W', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'I', 00H
	DB	'N', 00H, 'I', 00H, 'T', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U'
	DB	00H, 'P', 00H, 'O', 00H, 'P', 00H, 'U', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152748 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'E', 00H, 'N', 00H
	DB	'U', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'M', 00H, 'A', 00H, 'N'
	DB	00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG152750 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'H', 00H, 'A', 00H
	DB	'N', 00H, 'G', 00H, 'E', 00H, 'U', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152752 DB	'W', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'P', 00H, 'D', 00H
	DB	'A', 00H, 'T', 00H, 'E', 00H, 'U', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152754 DB	'W', 00H, 'M', 00H, '_', 00H, 'Q', 00H, 'U', 00H, 'E', 00H
	DB	'R', 00H, 'Y', 00H, 'U', 00H, 'I', 00H, 'S', 00H, 'T', 00H, 'A'
	DB	00H, 'T', 00H, 'E', 00H, 00H, 00H
$SG152756 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'T', 00H, 'L', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 'S'
	DB	00H, 'G', 00H, 'B', 00H, 'O', 00H, 'X', 00H, 00H, 00H
$SG152758 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'T', 00H, 'L', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'E', 00H, 'D'
	DB	00H, 'I', 00H, 'T', 00H, 00H, 00H
$SG152760 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'T', 00H, 'L', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'L', 00H, 'I'
	DB	00H, 'S', 00H, 'T', 00H, 'B', 00H, 'O', 00H, 'X', 00H, 00H, 00H
	ORG $+2
$SG152762 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'T', 00H, 'L', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'B', 00H, 'T'
	DB	00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152764 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'T', 00H, 'L', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'D', 00H, 'L'
	DB	00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG152766 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'T', 00H, 'L', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'S', 00H, 'C'
	DB	00H, 'R', 00H, 'O', 00H, 'L', 00H, 'L', 00H, 'B', 00H, 'A', 00H
	DB	'R', 00H, 00H, 00H
	ORG $+2
$SG152768 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'T', 00H, 'L', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'S', 00H, 'T'
	DB	00H, 'A', 00H, 'T', 00H, 'I', 00H, 'C', 00H, 00H, 00H
$SG152770 DB	'M', 00H, 'N', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'H', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U', 00H, 00H, 00H
$SG152772 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'M', 00H, 'O', 00H, 'V', 00H, 'E', 00H, 00H
	DB	00H
	ORG $+2
$SG152774 DB	'W', 00H, 'M', 00H, '_', 00H, 'L', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'O', 00H, 'W'
	DB	00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152776 DB	'W', 00H, 'M', 00H, '_', 00H, 'L', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U', 00H, 'P', 00H, 00H
	DB	00H
	ORG $+2
$SG152778 DB	'W', 00H, 'M', 00H, '_', 00H, 'L', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'B', 00H, 'L'
	DB	00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152780 DB	'W', 00H, 'M', 00H, '_', 00H, 'R', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'O', 00H, 'W'
	DB	00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152782 DB	'W', 00H, 'M', 00H, '_', 00H, 'R', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U', 00H, 'P', 00H, 00H
	DB	00H
	ORG $+2
$SG152784 DB	'W', 00H, 'M', 00H, '_', 00H, 'R', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'B', 00H, 'L'
	DB	00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152786 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'O', 00H, 'W'
	DB	00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152788 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U', 00H, 'P', 00H, 00H
	DB	00H
	ORG $+2
$SG152790 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'B', 00H, 'L'
	DB	00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152792 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'W', 00H, 'H', 00H, 'E', 00H, 'E', 00H, 'L'
	DB	00H, 00H, 00H
$SG152794 DB	'W', 00H, 'M', 00H, '_', 00H, 'X', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'O', 00H, 'W'
	DB	00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152796 DB	'W', 00H, 'M', 00H, '_', 00H, 'X', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'U', 00H, 'P', 00H, 00H
	DB	00H
	ORG $+2
$SG152798 DB	'W', 00H, 'M', 00H, '_', 00H, 'X', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 'D', 00H, 'B', 00H, 'L'
	DB	00H, 'C', 00H, 'L', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG152800 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'R', 00H
	DB	'E', 00H, 'N', 00H, 'T', 00H, 'N', 00H, 'O', 00H, 'T', 00H, 'I'
	DB	00H, 'F', 00H, 'Y', 00H, 00H, 00H
$SG152802 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'T', 00H
	DB	'E', 00H, 'R', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'O', 00H, 'O', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152804 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'X', 00H, 'I', 00H
	DB	'T', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'O'
	DB	00H, 'O', 00H, 'P', 00H, 00H, 00H
$SG152806 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'E', 00H, 'X', 00H
	DB	'T', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U', 00H, 00H, 00H
$SG152808 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H
	DB	'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H
$SG152810 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'A', 00H, 'P', 00H
	DB	'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, 'C', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'G', 00H, 'E', 00H, 'D', 00H, 00H, 00H
$SG152812 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'V', 00H
	DB	'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H
$SG152814 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'O', 00H, 'W', 00H
	DB	'E', 00H, 'R', 00H, 'B', 00H, 'R', 00H, 'O', 00H, 'A', 00H, 'D'
	DB	00H, 'C', 00H, 'A', 00H, 'S', 00H, 'T', 00H, 00H, 00H
$SG152816 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'V', 00H
	DB	'I', 00H, 'C', 00H, 'E', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N'
	DB	00H, 'G', 00H, 'E', 00H, 00H, 00H
$SG152818 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'C', 00H, 'R', 00H, 'E', 00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H
	DB	00H
	ORG $+2
$SG152820 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'D', 00H, 'E', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'O', 00H, 'Y'
	DB	00H, 00H, 00H
$SG152822 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V', 00H, 'A', 00H, 'T'
	DB	00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152824 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'R', 00H, 'E', 00H, 'S', 00H, 'T', 00H, 'O', 00H, 'R', 00H, 'E'
	DB	00H, 00H, 00H
$SG152826 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'N', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152828 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'M', 00H, 'A', 00H, 'X', 00H, 'I', 00H, 'M', 00H, 'I', 00H, 'Z'
	DB	00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152830 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'T', 00H, 'I', 00H, 'L', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152832 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'C', 00H, 'A', 00H, 'S', 00H, 'C', 00H, 'A', 00H, 'D', 00H, 'E'
	DB	00H, 00H, 00H
$SG152834 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'I', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'A', 00H, 'R', 00H, 'R'
	DB	00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, 00H, 00H
$SG152836 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'G', 00H, 'E', 00H, 'T', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I'
	DB	00H, 'V', 00H, 'E', 00H, 00H, 00H
$SG152838 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'S', 00H, 'E', 00H, 'T', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U'
	DB	00H, 00H, 00H
$SG152840 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'T', 00H
	DB	'E', 00H, 'R', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, 'M'
	DB	00H, 'O', 00H, 'V', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152842 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'X', 00H, 'I', 00H
	DB	'T', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, 'M', 00H, 'O'
	DB	00H, 'V', 00H, 'E', 00H, 00H, 00H
$SG152844 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'R', 00H, 'O', 00H
	DB	'P', 00H, 'F', 00H, 'I', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 00H
	DB	00H
	ORG $+2
$SG152846 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'D', 00H, 'I', 00H
	DB	'R', 00H, 'E', 00H, 'F', 00H, 'R', 00H, 'E', 00H, 'S', 00H, 'H'
	DB	00H, 'M', 00H, 'E', 00H, 'N', 00H, 'U', 00H, 00H, 00H
$SG152848 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'E', 00H, 'T', 00H, 'C', 00H, 'O', 00H, 'N'
	DB	00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 00H, 00H
$SG152850 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'N', 00H, 'O', 00H, 'T', 00H, 'I', 00H, 'F', 00H, 'Y'
	DB	00H, 00H, 00H
$SG152852 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'C', 00H, 'O', 00H, 'N', 00H, 'T', 00H, 'R', 00H, 'O'
	DB	00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG152854 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'O', 00H, 'S'
	DB	00H, 'I', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 'F', 00H
	DB	'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG152856 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'C', 00H, 'T'
	DB	00H, 00H, 00H
$SG152858 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'R', 00H, 00H, 00H
$SG152860 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'R', 00H, 'E', 00H, 'Q', 00H, 'U', 00H, 'E', 00H, 'S'
	DB	00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152862 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'K', 00H, 'E', 00H, 'Y', 00H, 'D', 00H, 'O', 00H, 'W'
	DB	00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152864 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'K', 00H, 'E', 00H, 'Y', 00H, 'U', 00H, 'P', 00H, 00H
	DB	00H
	ORG $+2
$SG152866 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'H', 00H, 'O', 00H, 'V', 00H, 'E', 00H, 'R'
	DB	00H, 00H, 00H
$SG152868 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'A', 00H, 'V', 00H, 'E'
	DB	00H, 00H, 00H
$SG152870 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'M', 00H
	DB	'O', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'H', 00H, 'O', 00H, 'V'
	DB	00H, 'E', 00H, 'R', 00H, 00H, 00H
$SG152872 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'C', 00H, 'M', 00H
	DB	'O', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'A'
	DB	00H, 'V', 00H, 'E', 00H, 00H, 00H
$SG152874 DB	'W', 00H, 'M', 00H, '_', 00H, 'W', 00H, 'T', 00H, 'S', 00H
	DB	'S', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 'I', 00H, 'O', 00H, 'N'
	DB	00H, '_', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H
	DB	'E', 00H, 00H, 00H
	ORG $+2
$SG152876 DB	'W', 00H, 'M', 00H, '_', 00H, 'T', 00H, 'A', 00H, 'B', 00H
	DB	'L', 00H, 'E', 00H, 'T', 00H, '_', 00H, 'F', 00H, 'I', 00H, 'R'
	DB	00H, 'S', 00H, 'T', 00H, 00H, 00H
$SG152878 DB	'W', 00H, 'M', 00H, '_', 00H, 'T', 00H, 'A', 00H, 'B', 00H
	DB	'L', 00H, 'E', 00H, 'T', 00H, '_', 00H, 'L', 00H, 'A', 00H, 'S'
	DB	00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152880 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'U', 00H, 'T', 00H
	DB	00H, 00H
	ORG $+2
$SG152882 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'P', 00H
	DB	'Y', 00H, 00H, 00H
$SG152884 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'S', 00H
	DB	'T', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152886 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'L', 00H, 'E', 00H
	DB	'A', 00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG152888 DB	'W', 00H, 'M', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'D', 00H
	DB	'O', 00H, 00H, 00H
$SG152890 DB	'W', 00H, 'M', 00H, '_', 00H, 'R', 00H, 'E', 00H, 'N', 00H
	DB	'D', 00H, 'E', 00H, 'R', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 'A', 00H, 'T', 00H, 00H, 00H
$SG152892 DB	'W', 00H, 'M', 00H, '_', 00H, 'R', 00H, 'E', 00H, 'N', 00H
	DB	'D', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'L', 00H, 'L', 00H, 'F'
	DB	00H, 'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, 'S', 00H
	DB	00H, 00H
$SG152894 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H
	DB	'T', 00H, 'R', 00H, 'O', 00H, 'Y', 00H, 'C', 00H, 'L', 00H, 'I'
	DB	00H, 'P', 00H, 'B', 00H, 'O', 00H, 'A', 00H, 'R', 00H, 'D', 00H
	DB	00H, 00H
$SG152896 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'R', 00H, 'A', 00H
	DB	'W', 00H, 'C', 00H, 'L', 00H, 'I', 00H, 'P', 00H, 'B', 00H, 'O'
	DB	00H, 'A', 00H, 'R', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG152898 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 'C', 00H, 'L', 00H, 'I', 00H, 'P', 00H, 'B'
	DB	00H, 'O', 00H, 'A', 00H, 'R', 00H, 'D', 00H, 00H, 00H
$SG152900 DB	'W', 00H, 'M', 00H, '_', 00H, 'V', 00H, 'S', 00H, 'C', 00H
	DB	'R', 00H, 'O', 00H, 'L', 00H, 'L', 00H, 'C', 00H, 'L', 00H, 'I'
	DB	00H, 'P', 00H, 'B', 00H, 'O', 00H, 'A', 00H, 'R', 00H, 'D', 00H
	DB	00H, 00H
$SG152902 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H
	DB	'E', 00H, 'C', 00H, 'L', 00H, 'I', 00H, 'P', 00H, 'B', 00H, 'O'
	DB	00H, 'A', 00H, 'R', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG152904 DB	'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'S', 00H, 'K', 00H
	DB	'C', 00H, 'B', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 'A'
	DB	00H, 'T', 00H, 'N', 00H, 'A', 00H, 'M', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152906 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'H', 00H, 'A', 00H
	DB	'N', 00H, 'G', 00H, 'E', 00H, 'C', 00H, 'B', 00H, 'C', 00H, 'H'
	DB	00H, 'A', 00H, 'I', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152908 DB	'W', 00H, 'M', 00H, '_', 00H, 'H', 00H, 'S', 00H, 'C', 00H
	DB	'R', 00H, 'O', 00H, 'L', 00H, 'L', 00H, 'C', 00H, 'L', 00H, 'I'
	DB	00H, 'P', 00H, 'B', 00H, 'O', 00H, 'A', 00H, 'R', 00H, 'D', 00H
	DB	00H, 00H
$SG152910 DB	'W', 00H, 'M', 00H, '_', 00H, 'Q', 00H, 'U', 00H, 'E', 00H
	DB	'R', 00H, 'Y', 00H, 'N', 00H, 'E', 00H, 'W', 00H, 'P', 00H, 'A'
	DB	00H, 'L', 00H, 'E', 00H, 'T', 00H, 'T', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152912 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'L', 00H
	DB	'E', 00H, 'T', 00H, 'T', 00H, 'E', 00H, 'I', 00H, 'S', 00H, 'C'
	DB	00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'I', 00H, 'N', 00H
	DB	'G', 00H, 00H, 00H
	ORG $+2
$SG152914 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'L', 00H
	DB	'E', 00H, 'T', 00H, 'T', 00H, 'E', 00H, 'C', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'G', 00H, 'E', 00H, 'D', 00H, 00H, 00H
$SG152916 DB	'W', 00H, 'M', 00H, '_', 00H, 'H', 00H, 'O', 00H, 'T', 00H
	DB	'K', 00H, 'E', 00H, 'Y', 00H, 00H, 00H
$SG152918 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'R', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152920 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'R', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 'C', 00H, 'L', 00H, 'I', 00H, 'E', 00H, 'N'
	DB	00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152922 DB	'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'P', 00H, 'P', 00H
	DB	'C', 00H, 'O', 00H, 'M', 00H, 'M', 00H, 'A', 00H, 'N', 00H, 'D'
	DB	00H, 00H, 00H
$SG152924 DB	'W', 00H, 'M', 00H, '_', 00H, 'T', 00H, 'H', 00H, 'E', 00H
	DB	'M', 00H, 'E', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G'
	DB	00H, 'E', 00H, 'D', 00H, 00H, 00H
$SG152926 DB	'W', 00H, 'M', 00H, '_', 00H, 'H', 00H, 'A', 00H, 'N', 00H
	DB	'D', 00H, 'H', 00H, 'E', 00H, 'L', 00H, 'D', 00H, 'F', 00H, 'I'
	DB	00H, 'R', 00H, 'S', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152928 DB	'W', 00H, 'M', 00H, '_', 00H, 'H', 00H, 'A', 00H, 'N', 00H
	DB	'D', 00H, 'H', 00H, 'E', 00H, 'L', 00H, 'D', 00H, 'L', 00H, 'A'
	DB	00H, 'S', 00H, 'T', 00H, 00H, 00H
$SG152930 DB	'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'F', 00H, 'X', 00H
	DB	'F', 00H, 'I', 00H, 'R', 00H, 'S', 00H, 'T', 00H, 00H, 00H
$SG152932 DB	'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'F', 00H, 'X', 00H
	DB	'L', 00H, 'A', 00H, 'S', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152934 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'E', 00H, 'N', 00H
	DB	'W', 00H, 'I', 00H, 'N', 00H, 'F', 00H, 'I', 00H, 'R', 00H, 'S'
	DB	00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152936 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'E', 00H, 'N', 00H
	DB	'W', 00H, 'I', 00H, 'N', 00H, 'L', 00H, 'A', 00H, 'S', 00H, 'T'
	DB	00H, 00H, 00H
$SG152938 DB	'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'P', 00H, 'P', 00H
	DB	00H, 00H
	ORG $+2
$SG152940 DB	'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H, 'w', 00H
	DB	'n', 00H, 00H, 00H
$SG152960 DB	'U', 00H, 'S', 00H, 'E', 00H, 'R', 00H, '3', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG152963 DB	'GetMonitorInfoW', 00H
$SG152979 DB	'U', 00H, 'S', 00H, 'E', 00H, 'R', 00H, '3', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG152982 DB	'MonitorFromWindow', 00H
	ORG $+2
$SG152996 DB	'U', 00H, 'S', 00H, 'E', 00H, 'R', 00H, '3', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG152999 DB	'MonitorFromRect', 00H
$SG153018 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'm', 00H, 'i', 00H
	DB	's', 00H, 'c', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG153019 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG153043 DB	'*', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H
	DB	'*', 00H, 00H, 00H
$SG153072 DB	'x', 00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'9', 00H, '_', 00H, '1', 00H, '_', 00H, '0', 00H, '.', 00H, 'd'
	DB	00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG153075 DB	'XInputGetState', 00H
	ORG $+1
$SG153077 DB	'XInputGetCapabilities', 00H
	ORG $+2
$SG152081 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'm', 00H, 'i', 00H
	DB	's', 00H, 'c', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+6
$SG152082 DB	'p', 00H, 'f', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H, 'f', 00H, 'A'
	DB	00H, 'b', 00H, 's', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 't', 00H
	DB	'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'p', 00H, 'f', 00H, 'E', 00H, 'l', 00H
	DB	'a', 00H, 'p', 00H, 's', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG153107 DB	'x', 00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'9', 00H, '_', 00H, '1', 00H, '_', 00H, '0', 00H, '.', 00H, 'd'
	DB	00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG153110 DB	'XInputEnable', 00H
	ORG $+3
$SG153118 DB	'x', 00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'9', 00H, '_', 00H, '1', 00H, '_', 00H, '0', 00H, '.', 00H, 'd'
	DB	00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG153121 DB	'XInputSetState', 00H
	ORG $+5
$SG152132 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, 'A', 00H, '3', 00H, '2', 00H, '_', 00H, 'T'
	DB	00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H
	DB	'S', 00H, 00H, 00H
$SG152134 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, 'A', 00H, '3', 00H, '2', 00H, '_', 00H, 'F'
	DB	00H, 'L', 00H, 'O', 00H, 'A', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152136 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, 'A', 00H, '3', 00H, '2', 00H, '_', 00H, 'U'
	DB	00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152138 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, 'A', 00H, '3', 00H, '2', 00H, '_', 00H, 'S'
	DB	00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152140 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E'
	DB	00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152142 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'O', 00H, 'A'
	DB	00H, 'T', 00H, 00H, 00H
$SG152144 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T'
	DB	00H, 00H, 00H
	ORG $+2
$SG152146 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, 'B', 00H
	DB	'3', 00H, '2', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'N', 00H, 'T'
	DB	00H, 00H, 00H
	ORG $+6
$SG152148 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, 'B', 00H
	DB	'1', 00H, '6', 00H, 'A', 00H, '1', 00H, '6', 00H, '_', 00H, 'T'
	DB	00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H
	DB	'S', 00H, 00H, 00H
$SG152150 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, 'B', 00H
	DB	'1', 00H, '6', 00H, 'A', 00H, '1', 00H, '6', 00H, '_', 00H, 'F'
	DB	00H, 'L', 00H, 'O', 00H, 'A', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152152 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, 'B', 00H
	DB	'1', 00H, '6', 00H, 'A', 00H, '1', 00H, '6', 00H, '_', 00H, 'U'
	DB	00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152154 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, 'B', 00H
	DB	'1', 00H, '6', 00H, 'A', 00H, '1', 00H, '6', 00H, '_', 00H, 'U'
	DB	00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152156 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, 'B', 00H
	DB	'1', 00H, '6', 00H, 'A', 00H, '1', 00H, '6', 00H, '_', 00H, 'S'
	DB	00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152158 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, 'B', 00H
	DB	'1', 00H, '6', 00H, 'A', 00H, '1', 00H, '6', 00H, '_', 00H, 'S'
	DB	00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152160 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, '_', 00H
	DB	'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S'
	DB	00H, 'S', 00H, 00H, 00H
$SG152162 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, '_', 00H
	DB	'F', 00H, 'L', 00H, 'O', 00H, 'A', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152164 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, '_', 00H
	DB	'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152166 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '3', 00H, '2', 00H, '_', 00H
	DB	'S', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152168 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, 'G', 00H, '8', 00H, 'X', 00H, '2', 00H
	DB	'4', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L'
	DB	00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+4
$SG152170 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'D'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'O', 00H
	DB	'A', 00H, 'T', 00H, '_', 00H, 'S', 00H, '8', 00H, 'X', 00H, '2'
	DB	00H, '4', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	00H, 00H
	ORG $+6
$SG152172 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'O', 00H
	DB	'A', 00H, 'T', 00H, '_', 00H, 'X', 00H, '8', 00H, 'X', 00H, '2'
	DB	00H, '4', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H
	DB	'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+6
$SG152174 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'X'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, '_', 00H, 'G'
	DB	00H, '8', 00H, 'X', 00H, '2', 00H, '4', 00H, '_', 00H, 'U', 00H
	DB	'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152176 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '0', 00H, 'G', 00H, '1', 00H, '0', 00H, 'B', 00H
	DB	'1', 00H, '0', 00H, 'A', 00H, '2', 00H, '_', 00H, 'T', 00H, 'Y'
	DB	00H, 'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H
	DB	00H, 00H
	ORG $+2
$SG152178 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '0', 00H, 'G', 00H, '1', 00H, '0', 00H, 'B', 00H
	DB	'1', 00H, '0', 00H, 'A', 00H, '2', 00H, '_', 00H, 'U', 00H, 'N'
	DB	00H, 'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
$SG152180 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '0', 00H, 'G', 00H, '1', 00H, '0', 00H, 'B', 00H
	DB	'1', 00H, '0', 00H, 'A', 00H, '2', 00H, '_', 00H, 'U', 00H, 'I'
	DB	00H, 'N', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152182 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '1', 00H, 'G', 00H, '1', 00H, '1', 00H, 'B', 00H
	DB	'1', 00H, '0', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'O', 00H, 'A'
	DB	00H, 'T', 00H, 00H, 00H
$SG152184 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'B', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L'
	DB	00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
$SG152186 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'B', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 00H, 00H
	ORG $+2
$SG152188 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'B', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, '_', 00H, 'S', 00H, 'R', 00H, 'G', 00H, 'B', 00H, 00H, 00H
$SG152190 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'B', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H
	DB	00H
$SG152192 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'B', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'S', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 00H, 00H
	ORG $+2
$SG152194 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'B', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H
	DB	00H
$SG152196 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, '_', 00H
	DB	'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S'
	DB	00H, 'S', 00H, 00H, 00H
$SG152198 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, '_', 00H
	DB	'F', 00H, 'L', 00H, 'O', 00H, 'A', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152200 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, '_', 00H
	DB	'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152202 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, '_', 00H
	DB	'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152204 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, '_', 00H
	DB	'S', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152206 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, 'G', 00H, '1', 00H, '6', 00H, '_', 00H
	DB	'S', 00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
$SG152208 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152210 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'D'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'O', 00H
	DB	'A', 00H, 'T', 00H, 00H, 00H
$SG152212 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'O', 00H
	DB	'A', 00H, 'T', 00H, 00H, 00H
$SG152214 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, 00H, 00H
	ORG $+2
$SG152216 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '3', 00H, '2', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, 00H, 00H
	ORG $+2
$SG152218 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '2', 00H, '4', 00H, 'G', 00H, '8', 00H, '_', 00H, 'T', 00H
	DB	'Y', 00H, 'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S'
	DB	00H, 00H, 00H
	ORG $+2
$SG152220 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'D'
	DB	00H, '2', 00H, '4', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, '_', 00H, 'S', 00H, '8', 00H, '_', 00H, 'U'
	DB	00H, 'I', 00H, 'N', 00H, 'T', 00H, 00H, 00H
	ORG $+4
$SG152222 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '2', 00H, '4', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, '_', 00H, 'X', 00H, '8', 00H, '_', 00H, 'T'
	DB	00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H
	DB	'S', 00H, 00H, 00H
	ORG $+4
$SG152224 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'X'
	DB	00H, '2', 00H, '4', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, '_', 00H, 'G'
	DB	00H, '8', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	00H, 00H
	ORG $+2
$SG152226 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, '_', 00H, 'T', 00H, 'Y', 00H
	DB	'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H
	DB	00H
$SG152228 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, '_', 00H, 'U', 00H, 'N', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152230 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, '_', 00H, 'U', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 00H, 00H
$SG152232 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, '_', 00H, 'S', 00H, 'N', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152234 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, '_', 00H, 'S', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 00H, 00H
$SG152236 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152238 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'O', 00H
	DB	'A', 00H, 'T', 00H, 00H, 00H
$SG152240 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'D'
	DB	00H, '1', 00H, '6', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152242 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152244 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, 00H, 00H
	ORG $+2
$SG152246 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, '_', 00H, 'S', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152248 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '6', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'N', 00H
	DB	'T', 00H, 00H, 00H
	ORG $+2
$SG152250 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H
	DB	'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
$SG152252 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H
	DB	'M', 00H, 00H, 00H
	ORG $+2
$SG152254 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, '_', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	00H, 00H
$SG152256 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, '_', 00H, 'S', 00H, 'N', 00H, 'O', 00H, 'R', 00H
	DB	'M', 00H, 00H, 00H
	ORG $+2
$SG152258 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'N', 00H, 'T', 00H
	DB	00H, 00H
$SG152260 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'A'
	DB	00H, '8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H
	DB	'M', 00H, 00H, 00H
	ORG $+2
$SG152262 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H
	DB	'M', 00H, 00H, 00H
	ORG $+2
$SG152264 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '9', 00H, 'G', 00H, '9', 00H, 'B', 00H, '9', 00H, 'E', 00H
	DB	'5', 00H, '_', 00H, 'S', 00H, 'H', 00H, 'A', 00H, 'R', 00H, 'E'
	DB	00H, 'D', 00H, 'E', 00H, 'X', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152266 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, '_', 00H, 'B', 00H, '8', 00H
	DB	'G', 00H, '8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R'
	DB	00H, 'M', 00H, 00H, 00H
$SG152268 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'G'
	DB	00H, '8', 00H, 'R', 00H, '8', 00H, '_', 00H, 'G', 00H, '8', 00H
	DB	'B', 00H, '8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R'
	DB	00H, 'M', 00H, 00H, 00H
$SG152270 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '1', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152272 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '1', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152274 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '1', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'R', 00H, 'G', 00H, 'B'
	DB	00H, 00H, 00H
	ORG $+2
$SG152276 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '2', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152278 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '2', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152280 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '2', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'R', 00H, 'G', 00H, 'B'
	DB	00H, 00H, 00H
	ORG $+2
$SG152282 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '3', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152284 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '3', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152286 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '3', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'R', 00H, 'G', 00H, 'B'
	DB	00H, 00H, 00H
	ORG $+2
$SG152288 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '4', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152290 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '4', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152292 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '4', 00H, '_', 00H, 'S', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152294 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '5', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152296 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '5', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152298 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '5', 00H, '_', 00H, 'S', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152300 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '5', 00H, 'G', 00H, '6', 00H, 'R', 00H, '5', 00H, '_', 00H
	DB	'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 00H, 00H
	ORG $+2
$SG152302 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '5', 00H, 'G', 00H, '5', 00H, 'R', 00H, '5', 00H, 'A', 00H
	DB	'1', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 00H, 00H
	ORG $+2
$SG152304 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'R', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 00H, 00H
	ORG $+2
$SG152306 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'R', 00H, '8', 00H, 'X', 00H
	DB	'8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 00H, 00H
	ORG $+2
$SG152308 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'R'
	DB	00H, '1', 00H, '0', 00H, 'G', 00H, '1', 00H, '0', 00H, 'B', 00H
	DB	'1', 00H, '0', 00H, '_', 00H, 'X', 00H, 'R', 00H, '_', 00H, 'B'
	DB	00H, 'I', 00H, 'A', 00H, 'S', 00H, '_', 00H, 'A', 00H, '2', 00H
	DB	'_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M', 00H, 00H
	DB	00H
	ORG $+2
$SG152310 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'R', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L'
	DB	00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+4
$SG152312 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'R', 00H, '8', 00H, 'A', 00H
	DB	'8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, '_', 00H, 'S', 00H, 'R', 00H, 'G', 00H, 'B', 00H, 00H, 00H
$SG152314 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'R', 00H, '8', 00H, 'X', 00H
	DB	'8', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H, 'E', 00H, 'L'
	DB	00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+4
$SG152316 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '8', 00H, 'G', 00H, '8', 00H, 'R', 00H, '8', 00H, 'X', 00H
	DB	'8', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, '_', 00H, 'S', 00H, 'R', 00H, 'G', 00H, 'B', 00H, 00H, 00H
$SG152318 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '6', 00H, 'H', 00H, '_', 00H, 'T', 00H, 'Y', 00H
	DB	'P', 00H, 'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H
	DB	00H
$SG152320 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '6', 00H, 'H', 00H, '_', 00H, 'U', 00H, 'F', 00H
	DB	'1', 00H, '6', 00H, 00H, 00H
$SG152322 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '6', 00H, 'H', 00H, '_', 00H, 'S', 00H, 'F', 00H
	DB	'1', 00H, '6', 00H, 00H, 00H
$SG152324 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '7', 00H, '_', 00H, 'T', 00H, 'Y', 00H, 'P', 00H
	DB	'E', 00H, 'L', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 00H, 00H
	ORG $+2
$SG152326 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '7', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, 00H, 00H
$SG152328 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, 'C', 00H, '7', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H
	DB	'R', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'R', 00H, 'G', 00H, 'B'
	DB	00H, 00H, 00H
	ORG $+2
$SG152330 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 'B'
	DB	00H, '4', 00H, 'G', 00H, '4', 00H, 'R', 00H, '4', 00H, 'A', 00H
	DB	'4', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'O', 00H, 'R', 00H, 'M'
	DB	00H, 00H, 00H
	ORG $+2
$SG152332 DB	'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H, 'w', 00H
	DB	'n', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG152335 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 00H
	DB	00H
	ORG $+2
$SG152337 DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'F', 00H
	DB	'O', 00H, 'R', 00H, 'M', 00H, 'A', 00H, 'T', 00H, '_', 00H, 00H
	DB	00H
	ORG $+2
$SG152404 DB	'd', 00H, '3', 00H, 'd', 00H, '9', 00H, '.', 00H, 'd', 00H
	DB	'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG152407 DB	'D3DPERF_BeginEvent', 00H
	ORG $+1
$SG152409 DB	'D3DPERF_EndEvent', 00H
	ORG $+3
$SG152411 DB	'D3DPERF_SetMarker', 00H
	ORG $+2
$SG152413 DB	'D3DPERF_SetRegion', 00H
	ORG $+2
$SG152415 DB	'D3DPERF_QueryRepeatFrame', 00H
	ORG $+3
$SG152417 DB	'D3DPERF_SetOptions', 00H
	ORG $+1
$SG152419 DB	'D3DPERF_GetStatus', 00H
	ORG $+2
$SG152423 DB	'd', 00H, '3', 00H, 'd', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG152426 DB	'D3D11CreateDevice', 00H
	ORG $+2
$SG152428 DB	'd', 00H, 'x', 00H, 'g', 00H, 'i', 00H, '.', 00H, 'd', 00H
	DB	'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG152431 DB	'CreateDXGIFactory1', 00H
	ORG $+1
$SG152433 DB	'd', 00H, 'x', 00H, 'g', 00H, 'i', 00H, 'd', 00H, 'e', 00H
	DB	'b', 00H, 'u', 00H, 'g', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H
$SG152436 DB	'DXGIGetDebugInterface', 00H
	ORG $+2
$SG152512 DB	'W', 00H, 'M', 00H, '_', 00H, 'N', 00H, 'U', 00H, 'L', 00H
	DB	'L', 00H, 00H, 00H
$SG152514 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'R', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
$SG152516 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H
	DB	'T', 00H, 'R', 00H, 'O', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG152518 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'V', 00H
	DB	'E', 00H, 00H, 00H
$SG152520 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H
	DB	'E', 00H, 00H, 00H
$SG152522 DB	'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H, 'T', 00H
	DB	'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
$SG152524 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H
	DB	'F', 00H, 'O', 00H, 'C', 00H, 'U', 00H, 'S', 00H, 00H, 00H
$SG152526 DB	'W', 00H, 'M', 00H, '_', 00H, 'K', 00H, 'I', 00H, 'L', 00H
	DB	'L', 00H, 'F', 00H, 'O', 00H, 'C', 00H, 'U', 00H, 'S', 00H, 00H
	DB	00H
	ORG $+2
$SG152528 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H
	DB	'B', 00H, 'L', 00H, 'E', 00H, 00H, 00H
$SG152530 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H
	DB	'R', 00H, 'E', 00H, 'D', 00H, 'R', 00H, 'A', 00H, 'W', 00H, 00H
	DB	00H
	ORG $+2
$SG152532 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H
	DB	'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152534 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152536 DB	'W', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'E', 00H, 'T', 00H
	DB	'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 'L', 00H, 'E', 00H, 'N'
	DB	00H, 'G', 00H, 'T', 00H, 'H', 00H, 00H, 00H
	ORG $+2
$SG152538 DB	'W', 00H, 'M', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'I', 00H
	DB	'N', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG152540 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'L', 00H, 'O', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152542 DB	'W', 00H, 'M', 00H, '_', 00H, 'Q', 00H, 'U', 00H, 'E', 00H
	DB	'R', 00H, 'Y', 00H, 'E', 00H, 'N', 00H, 'D', 00H, 'S', 00H, 'E'
	DB	00H, 'S', 00H, 'S', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 00H, 00H
	ORG $+2
$SG152544 DB	'W', 00H, 'M', 00H, '_', 00H, 'Q', 00H, 'U', 00H, 'E', 00H
	DB	'R', 00H, 'Y', 00H, 'O', 00H, 'P', 00H, 'E', 00H, 'N', 00H, 00H
	DB	00H
	ORG $+2
$SG152546 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'D', 00H
	DB	'S', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 'I', 00H, 'O', 00H, 'N'
	DB	00H, 00H, 00H
$SG152548 DB	'W', 00H, 'M', 00H, '_', 00H, 'Q', 00H, 'U', 00H, 'I', 00H
	DB	'T', 00H, 00H, 00H
$SG152550 DB	'W', 00H, 'M', 00H, '_', 00H, 'E', 00H, 'R', 00H, 'A', 00H
	DB	'S', 00H, 'E', 00H, 'B', 00H, 'K', 00H, 'G', 00H, 'N', 00H, 'D'
	DB	00H, 00H, 00H
$SG152552 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'Y', 00H, 'S', 00H
	DB	'C', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'R', 00H, 'C', 00H, 'H'
	DB	00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, 00H, 00H
$SG152554 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'H', 00H, 'O', 00H
	DB	'W', 00H, 'W', 00H, 'I', 00H, 'N', 00H, 'D', 00H, 'O', 00H, 'W'
	DB	00H, 00H, 00H
$SG152556 DB	'W', 00H, 'M', 00H, '_', 00H, 'W', 00H, 'I', 00H, 'N', 00H
	DB	'I', 00H, 'N', 00H, 'I', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N'
	DB	00H, 'G', 00H, 'E', 00H, 00H, 00H
$SG152558 DB	'W', 00H, 'M', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'V', 00H
	DB	'M', 00H, 'O', 00H, 'D', 00H, 'E', 00H, 'C', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'G', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152560 DB	'W', 00H, 'M', 00H, '_', 00H, 'A', 00H, 'C', 00H, 'T', 00H
	DB	'I', 00H, 'V', 00H, 'A', 00H, 'T', 00H, 'E', 00H, 'A', 00H, 'P'
	DB	00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG152562 DB	'W', 00H, 'M', 00H, '_', 00H, 'F', 00H, 'O', 00H, 'N', 00H
	DB	'T', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E'
	DB	00H, 00H, 00H
$SG152564 DB	'W', 00H, 'M', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M', 00H
	DB	'E', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E'
	DB	00H, 00H, 00H
$SG152566 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'A', 00H, 'N', 00H
	DB	'C', 00H, 'E', 00H, 'L', 00H, 'M', 00H, 'O', 00H, 'D', 00H, 'E'
	DB	00H, 00H, 00H
$SG152568 DB	'W', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H
	DB	'C', 00H, 'U', 00H, 'R', 00H, 'S', 00H, 'O', 00H, 'R', 00H, 00H
	DB	00H
	ORG $+2
$SG152570 DB	'W', 00H, 'M', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'U', 00H
	DB	'S', 00H, 'E', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152572 DB	'W', 00H, 'M', 00H, '_', 00H, 'C', 00H, 'H', 00H, 'I', 00H
	DB	'L', 00H, 'D', 00H, 'A', 00H, 'C', 00H, 'T', 00H, 'I', 00H, 'V'
	DB	00H, 'A', 00H, 'T', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG152574 DB	'W', 00H, 'M', 00H, '_', 00H, 'Q', 00H, 'U', 00H, 'E', 00H
	DB	'U', 00H, 'E', 00H, 'S', 00H, 'Y', 00H, 'N', 00H, 'C', 00H, 00H
	DB	00H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@H$0A@@std@@2HB
CONST	SEGMENT
?value@?$integral_constant@H$0A@@std@@2HB DD 00H	; std::integral_constant<int,0>::value
CONST	ENDS
PUBLIC	?wcsstr@@YAPA_WPA_WPB_W@Z			; wcsstr
PUBLIC	?DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z ; DXUTGetGamepadState
PUBLIC	?DXUTStopRumbleOnAllControllers@@YAJXZ		; DXUTStopRumbleOnAllControllers
PUBLIC	?DXUTEnableXInput@@YAX_N@Z			; DXUTEnableXInput
PUBLIC	?DXUTSnapD3D11Screenshot@@YAJPB_W_N@Z		; DXUTSnapD3D11Screenshot
PUBLIC	??0CDXUTTimer@@QAE@XZ				; CDXUTTimer::CDXUTTimer
PUBLIC	?Reset@CDXUTTimer@@QAEXXZ			; CDXUTTimer::Reset
PUBLIC	?Start@CDXUTTimer@@QAEXXZ			; CDXUTTimer::Start
PUBLIC	?Stop@CDXUTTimer@@QAEXXZ			; CDXUTTimer::Stop
PUBLIC	?Advance@CDXUTTimer@@QAEXXZ			; CDXUTTimer::Advance
PUBLIC	?GetAbsoluteTime@CDXUTTimer@@QBENXZ		; CDXUTTimer::GetAbsoluteTime
PUBLIC	?GetTime@CDXUTTimer@@QBENXZ			; CDXUTTimer::GetTime
PUBLIC	?GetElapsedTime@CDXUTTimer@@QAEMXZ		; CDXUTTimer::GetElapsedTime
PUBLIC	?GetTimeValues@CDXUTTimer@@QAEXPAN0PAM@Z	; CDXUTTimer::GetTimeValues
PUBLIC	?LimitThreadAffinityToCurrentProc@CDXUTTimer@@QAEXXZ ; CDXUTTimer::LimitThreadAffinityToCurrentProc
PUBLIC	?GetAdjustedCurrentTime@CDXUTTimer@@IBE?AT_LARGE_INTEGER@@XZ ; CDXUTTimer::GetAdjustedCurrentTime
PUBLIC	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ	; DXUTGetGlobalTimer
PUBLIC	?DXUTDXGIFormatToString@@YGPB_WW4DXGI_FORMAT@@_N@Z ; DXUTDXGIFormatToString
PUBLIC	?DXUTOutputDebugStringW@@YAXPB_WZZ		; DXUTOutputDebugStringW
PUBLIC	?DXUTOutputDebugStringA@@YAXPBDZZ		; DXUTOutputDebugStringA
PUBLIC	?DXUTTrace@@YGJPBDKJPB_W_N@Z			; DXUTTrace
PUBLIC	?DXUTTraceWindowsMessage@@YGPB_WI@Z		; DXUTTraceWindowsMessage
PUBLIC	?DXUT_Dynamic_D3DPERF_BeginEvent@@YGHKPB_W@Z	; DXUT_Dynamic_D3DPERF_BeginEvent
PUBLIC	?DXUT_Dynamic_D3DPERF_EndEvent@@YGHXZ		; DXUT_Dynamic_D3DPERF_EndEvent
PUBLIC	?DXUT_Dynamic_D3DPERF_SetMarker@@YGXKPB_W@Z	; DXUT_Dynamic_D3DPERF_SetMarker
PUBLIC	?DXUT_Dynamic_D3DPERF_SetRegion@@YGXKPB_W@Z	; DXUT_Dynamic_D3DPERF_SetRegion
PUBLIC	?DXUT_Dynamic_D3DPERF_QueryRepeatFrame@@YGHXZ	; DXUT_Dynamic_D3DPERF_QueryRepeatFrame
PUBLIC	?DXUT_Dynamic_D3DPERF_SetOptions@@YGXK@Z	; DXUT_Dynamic_D3DPERF_SetOptions
PUBLIC	?DXUT_Dynamic_D3DPERF_GetStatus@@YGKXZ		; DXUT_Dynamic_D3DPERF_GetStatus
PUBLIC	?DXUT_Dynamic_CreateDXGIFactory1@@YGJABU_GUID@@PAPAX@Z ; DXUT_Dynamic_CreateDXGIFactory1
PUBLIC	?DXUT_Dynamic_DXGIGetDebugInterface@@YGJABU_GUID@@PAPAX@Z ; DXUT_Dynamic_DXGIGetDebugInterface
PUBLIC	?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z ; DXUT_Dynamic_D3D11CreateDevice
PUBLIC	?DXUT_EnsureD3D11APIs@@YA_NXZ			; DXUT_EnsureD3D11APIs
PUBLIC	?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ; DXUTMonitorFromWindow
PUBLIC	?DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z ; DXUTMonitorFromRect
PUBLIC	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
PUBLIC	?DXUTGetDesktopResolution@@YGXIPAI0@Z		; DXUTGetDesktopResolution
PUBLIC	?MAKE_SRGB@@YA?AW4DXGI_FORMAT@@W41@@Z		; MAKE_SRGB
PUBLIC	?MAKE_TYPELESS@@YA?AW4DXGI_FORMAT@@W41@@Z	; MAKE_TYPELESS
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	??0?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ; std::_Func_class<void,IPropertyBag2 *>::_Func_class<void,IPropertyBag2 *>
PUBLIC	?_Reset@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Reset
PUBLIC	?_Set@?$_Func_class@XPAUIPropertyBag2@@@std@@AAEXPAV?$_Func_base@XPAUIPropertyBag2@@@2@@Z ; std::_Func_class<void,IPropertyBag2 *>::_Set
PUBLIC	??0?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@$$T@Z ; std::function<void __cdecl(IPropertyBag2 *)>::function<void __cdecl(IPropertyBag2 *)>
PUBLIC	??$wcscpy_s@$0BAE@@@YAHAAY0BAE@_WPB_W@Z		; wcscpy_s<260>
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@46fffe00
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcsstr:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__OutputDebugStringW@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__QueryPerformanceCounter@4:PROC
EXTRN	__imp__QueryPerformanceFrequency@4:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__GetCurrentThread@0:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryExW@12:PROC
EXTRN	__imp__GetProcessAffinityMask@12:PROC
EXTRN	__imp__SetThreadAffinityMask@8:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__EnumDisplaySettingsW@12:PROC
EXTRN	__imp__SystemParametersInfoA@16:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp__sprintf_s:PROC
EXTRN	__imp__vswprintf_s:PROC
EXTRN	_DXTraceW@20:PROC
EXTRN	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ:PROC ; DXUTGetDXGISwapChain
EXTRN	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ:PROC ; DXUTGetD3D11DeviceContext
EXTRN	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ:PROC ; DXUTGetDeviceSettings
EXTRN	?DXUTIsInGammaCorrectMode@@YG_NXZ:PROC		; DXUTIsInGammaCorrectMode
EXTRN	?DXUTGetShowMsgBoxOnError@@YG_NXZ:PROC		; DXUTGetShowMsgBoxOnError
EXTRN	?GetOutputInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumOutputInfo@@II@Z:PROC ; CD3D11Enumeration::GetOutputInfo
EXTRN	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z:PROC ; DXUTGetD3D11Enumeration
EXTRN	?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z:PROC ; DirectX::SaveDDSTextureToFile
EXTRN	?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z:PROC ; DirectX::SaveWICTextureToFile
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__alldiv:PROC
EXTRN	__ltod3:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_ignore	DB	01H DUP (?)
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?timer@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4V2@A
_BSS	SEGMENT
?timer@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4V2@A DB 028H DUP (?) ; `DXUTGetGlobalTimer'::`2'::timer
_BSS	ENDS
;	COMDAT ?$S1@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4IA
_BSS	SEGMENT
?$S1@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4IA DD 01H DUP (?) ; `DXUTGetGlobalTimer'::`2'::$S1
_BSS	ENDS
;	COMDAT ?s_bInited@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4_NA
_BSS	SEGMENT
?s_bInited@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4_NA DB 01H DUP (?) ; `DXUTGetMonitorInfo'::`2'::s_bInited
_BSS	ENDS
;	COMDAT ?s_pFnGetMonitorInfo@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4P6GH01@ZA
_BSS	SEGMENT
?s_pFnGetMonitorInfo@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4P6GH01@ZA DD 01H DUP (?) ; `DXUTGetMonitorInfo'::`2'::s_pFnGetMonitorInfo
_BSS	ENDS
;	COMDAT ?s_bInited@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4_NA
_BSS	SEGMENT
?s_bInited@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4_NA DB 01H DUP (?) ; `DXUTMonitorFromWindow'::`2'::s_bInited
_BSS	ENDS
;	COMDAT ?s_pFnGetMonitorFromWindow@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4P6GPAU2@0K@ZA
_BSS	SEGMENT
?s_pFnGetMonitorFromWindow@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4P6GPAU2@0K@ZA DD 01H DUP (?) ; `DXUTMonitorFromWindow'::`2'::s_pFnGetMonitorFromWindow
_BSS	ENDS
;	COMDAT ?s_bInited@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4_NA
_BSS	SEGMENT
?s_bInited@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4_NA DB 01H DUP (?) ; `DXUTMonitorFromRect'::`2'::s_bInited
_BSS	ENDS
;	COMDAT ?s_pFnGetMonitorFromRect@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4P6GPAU2@0K@ZA
_BSS	SEGMENT
?s_pFnGetMonitorFromRect@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4P6GPAU2@0K@ZA DD 01H DUP (?) ; `DXUTMonitorFromRect'::`2'::s_pFnGetMonitorFromRect
_BSS	ENDS
;	COMDAT ?s_pXInputGetState@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKPAU_XINPUT_STATE@@@ZA
_BSS	SEGMENT
?s_pXInputGetState@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKPAU_XINPUT_STATE@@@ZA DD 01H DUP (?) ; `DXUTGetGamepadState'::`4'::s_pXInputGetState
_BSS	ENDS
;	COMDAT ?s_pXInputGetCapabilities@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKKPAU_XINPUT_CAPABILITIES@@@ZA
_BSS	SEGMENT
?s_pXInputGetCapabilities@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKKPAU_XINPUT_CAPABILITIES@@@ZA DD 01H DUP (?) ; `DXUTGetGamepadState'::`4'::s_pXInputGetCapabilities
_BSS	ENDS
;	COMDAT ?s_pXInputEnable@?1??DXUTEnableXInput@@YAX_N@Z@4P6GXH@ZA
_BSS	SEGMENT
?s_pXInputEnable@?1??DXUTEnableXInput@@YAX_N@Z@4P6GXH@ZA DD 01H DUP (?) ; `DXUTEnableXInput'::`2'::s_pXInputEnable
_BSS	ENDS
;	COMDAT ?s_pXInputSetState@?1??DXUTStopRumbleOnAllControllers@@YAJXZ@4P6GKKPAU_XINPUT_VIBRATION@@@ZA
_BSS	SEGMENT
?s_pXInputSetState@?1??DXUTStopRumbleOnAllControllers@@YAJXZ@4P6GKKPAU_XINPUT_VIBRATION@@@ZA DD 01H DUP (?) ; `DXUTStopRumbleOnAllControllers'::`2'::s_pXInputSetState
_BSS	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@46fffe00
CONST	SEGMENT
__real@46fffe00 DD 046fffe00r			; 32767
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
xdata$x	SEGMENT
__unwindtable$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ$0
__ehfuncinfo$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$wcscpy_s@$0BAE@@@YAHAAY0BAE@_WPB_W@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$wcscpy_s@$0BAE@@@YAHAAY0BAE@_WPB_W@Z PROC		; wcscpy_s<260>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string.h
; Line 293
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Source$[ebp]
  00009	50		 push	 eax
  0000a	68 04 01 00 00	 push	 260			; 00000104H
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00012	51		 push	 ecx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5e		 pop	 esi
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$wcscpy_s@$0BAE@@@YAHAAY0BAE@_WPB_W@Z ENDP		; wcscpy_s<260>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv92 = -4						; size = 4
?DXUT_EnsureD3D9APIs@@YA_NXZ PROC			; DXUT_EnsureD3D9APIs
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 414
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 417
  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModD3D9, 0
  00013	74 07		 je	 SHORT $LN2@DXUT_Ensur
; Line 418
  00015	b0 01		 mov	 al, 1
  00017	e9 26 01 00 00	 jmp	 $LN3@DXUT_Ensur
$LN2@DXUT_Ensur:
; Line 421
  0001c	8b f4		 mov	 esi, esp
  0001e	68 00 08 00 00	 push	 2048			; 00000800H
  00023	6a 00		 push	 0
  00025	68 00 00 00 00	 push	 OFFSET $SG152404
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	a3 00 00 00 00	 mov	 DWORD PTR _s_hModD3D9, eax
; Line 422
  0003c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModD3D9, 0
  00043	0f 84 dd 00 00
	00		 je	 $LN1@DXUT_Ensur
; Line 425
  00049	8b f4		 mov	 esi, esp
  0004b	68 00 00 00 00	 push	 OFFSET $SG152407
  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_hModD3D9
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3DPERF_BeginEvent, eax
; Line 426
  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET $SG152409
  0006f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_hModD3D9
  00075	51		 push	 ecx
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0007c	3b f4		 cmp	 esi, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3DPERF_EndEvent, eax
; Line 427
  00088	8b f4		 mov	 esi, esp
  0008a	68 00 00 00 00	 push	 OFFSET $SG152411
  0008f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_hModD3D9
  00095	52		 push	 edx
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0009c	3b f4		 cmp	 esi, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3DPERF_SetMarker, eax
; Line 428
  000a8	8b f4		 mov	 esi, esp
  000aa	68 00 00 00 00	 push	 OFFSET $SG152413
  000af	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_hModD3D9
  000b4	50		 push	 eax
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3DPERF_SetRegion, eax
; Line 429
  000c7	8b f4		 mov	 esi, esp
  000c9	68 00 00 00 00	 push	 OFFSET $SG152415
  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_hModD3D9
  000d4	51		 push	 ecx
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3DPERF_QueryRepeatFrame, eax
; Line 430
  000e7	8b f4		 mov	 esi, esp
  000e9	68 00 00 00 00	 push	 OFFSET $SG152417
  000ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_hModD3D9
  000f4	52		 push	 edx
  000f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000fb	3b f4		 cmp	 esi, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3DPERF_SetOptions, eax
; Line 431
  00107	8b f4		 mov	 esi, esp
  00109	68 00 00 00 00	 push	 OFFSET $SG152419
  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_hModD3D9
  00113	50		 push	 eax
  00114	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0011a	3b f4		 cmp	 esi, esp
  0011c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00121	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3DPERF_GetStatus, eax
$LN1@DXUT_Ensur:
; Line 434
  00126	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModD3D9, 0
  0012d	74 09		 je	 SHORT $LN5@DXUT_Ensur
  0012f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv92[ebp], 1
  00136	eb 07		 jmp	 SHORT $LN6@DXUT_Ensur
$LN5@DXUT_Ensur:
  00138	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN6@DXUT_Ensur:
  0013f	8a 45 fc	 mov	 al, BYTE PTR tv92[ebp]
$LN3@DXUT_Ensur:
; Line 435
  00142	5e		 pop	 esi
  00143	83 c4 04	 add	 esp, 4
  00146	3b ec		 cmp	 ebp, esp
  00148	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c3		 ret	 0
?DXUT_EnsureD3D9APIs@@YA_NXZ ENDP			; DXUT_EnsureD3D9APIs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@$$T@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@$$T@Z PROC ; std::function<void __cdecl(IPropertyBag2 *)>::function<void __cdecl(IPropertyBag2 *)>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 561
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ; std::_Func_class<void,IPropertyBag2 *>::_Func_class<void,IPropertyBag2 *>
; Line 563
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Reset@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Reset
; Line 564
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
??0?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@$$T@Z ENDP ; std::function<void __cdecl(IPropertyBag2 *)>::function<void __cdecl(IPropertyBag2 *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Set@?$_Func_class@XPAUIPropertyBag2@@@std@@AAEXPAV?$_Func_base@XPAUIPropertyBag2@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Set@?$_Func_class@XPAUIPropertyBag2@@@std@@AAEXPAV?$_Func_base@XPAUIPropertyBag2@@@2@@Z PROC ; std::_Func_class<void,IPropertyBag2 *>::_Set, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 510
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 511
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00014	89 48 10	 mov	 DWORD PTR [eax+16], ecx
; Line 512
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?_Set@?$_Func_class@XPAUIPropertyBag2@@@std@@AAEXPAV?$_Func_base@XPAUIPropertyBag2@@@2@@Z ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reset@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Reset@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ PROC ; std::_Func_class<void,IPropertyBag2 *>::_Reset, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 330
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 331
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPAUIPropertyBag2@@@std@@AAEXPAV?$_Func_base@XPAUIPropertyBag2@@@2@@Z ; std::_Func_class<void,IPropertyBag2 *>::_Set
; Line 332
  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?_Reset@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ PROC	; std::_Func_class<void,IPropertyBag2 *>::_Func_class<void,IPropertyBag2 *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 308
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
; Line 309
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ENDP	; std::_Func_class<void,IPropertyBag2 *>::_Func_class<void,IPropertyBag2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET _ignore
  00008	e8 00 00 00 00	 call	 ??0_Ignore@std@@QAE@XZ	; std::_Ignore::_Ignore
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 51
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_format$ = 8						; size = 4
?MAKE_TYPELESS@@YA?AW4DXGI_FORMAT@@W41@@Z PROC		; MAKE_TYPELESS
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 1137
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1138
  0000b	8b 45 08	 mov	 eax, DWORD PTR _format$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00014	83 e9 02	 sub	 ecx, 2
  00017	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  0001a	83 7d fc 61	 cmp	 DWORD PTR tv64[ebp], 97	; 00000061H
  0001e	0f 87 a3 00 00
	00		 ja	 $LN1@MAKE_TYPEL
  00024	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  00027	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN26@MAKE_TYPEL[edx]
  0002e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN27@MAKE_TYPEL[eax*4]
$LN21@MAKE_TYPEL:
; Line 1143
  00035	b8 01 00 00 00	 mov	 eax, 1
  0003a	e9 8b 00 00 00	 jmp	 $LN24@MAKE_TYPEL
$LN20@MAKE_TYPEL:
; Line 1148
  0003f	b8 05 00 00 00	 mov	 eax, 5
  00044	e9 81 00 00 00	 jmp	 $LN24@MAKE_TYPEL
$LN19@MAKE_TYPEL:
; Line 1155
  00049	b8 09 00 00 00	 mov	 eax, 9
  0004e	eb 7a		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN18@MAKE_TYPEL:
; Line 1160
  00050	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH
  00055	eb 73		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN17@MAKE_TYPEL:
; Line 1164
  00057	b8 17 00 00 00	 mov	 eax, 23			; 00000017H
  0005c	eb 6c		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN16@MAKE_TYPEL:
; Line 1171
  0005e	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH
  00063	eb 65		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN15@MAKE_TYPEL:
; Line 1178
  00065	b8 21 00 00 00	 mov	 eax, 33			; 00000021H
  0006a	eb 5e		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN14@MAKE_TYPEL:
; Line 1184
  0006c	b8 27 00 00 00	 mov	 eax, 39			; 00000027H
  00071	eb 57		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN13@MAKE_TYPEL:
; Line 1190
  00073	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  00078	eb 50		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN12@MAKE_TYPEL:
; Line 1198
  0007a	b8 35 00 00 00	 mov	 eax, 53			; 00000035H
  0007f	eb 49		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN11@MAKE_TYPEL:
; Line 1205
  00081	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  00086	eb 42		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN10@MAKE_TYPEL:
; Line 1209
  00088	b8 46 00 00 00	 mov	 eax, 70			; 00000046H
  0008d	eb 3b		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN9@MAKE_TYPEL:
; Line 1213
  0008f	b8 49 00 00 00	 mov	 eax, 73			; 00000049H
  00094	eb 34		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN8@MAKE_TYPEL:
; Line 1217
  00096	b8 4c 00 00 00	 mov	 eax, 76			; 0000004cH
  0009b	eb 2d		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN7@MAKE_TYPEL:
; Line 1221
  0009d	b8 4f 00 00 00	 mov	 eax, 79			; 0000004fH
  000a2	eb 26		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN6@MAKE_TYPEL:
; Line 1225
  000a4	b8 52 00 00 00	 mov	 eax, 82			; 00000052H
  000a9	eb 1f		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN5@MAKE_TYPEL:
; Line 1229
  000ab	b8 5a 00 00 00	 mov	 eax, 90			; 0000005aH
  000b0	eb 18		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN4@MAKE_TYPEL:
; Line 1233
  000b2	b8 5c 00 00 00	 mov	 eax, 92			; 0000005cH
  000b7	eb 11		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN3@MAKE_TYPEL:
; Line 1237
  000b9	b8 5e 00 00 00	 mov	 eax, 94			; 0000005eH
  000be	eb 0a		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN2@MAKE_TYPEL:
; Line 1241
  000c0	b8 61 00 00 00	 mov	 eax, 97			; 00000061H
  000c5	eb 03		 jmp	 SHORT $LN24@MAKE_TYPEL
$LN1@MAKE_TYPEL:
; Line 1244
  000c7	8b 45 08	 mov	 eax, DWORD PTR _format$[ebp]
$LN24@MAKE_TYPEL:
; Line 1246
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
  000ce	8b ff		 npad	 2
$LN27@MAKE_TYPEL:
  000d0	00 00 00 00	 DD	 $LN21@MAKE_TYPEL
  000d4	00 00 00 00	 DD	 $LN20@MAKE_TYPEL
  000d8	00 00 00 00	 DD	 $LN19@MAKE_TYPEL
  000dc	00 00 00 00	 DD	 $LN18@MAKE_TYPEL
  000e0	00 00 00 00	 DD	 $LN17@MAKE_TYPEL
  000e4	00 00 00 00	 DD	 $LN16@MAKE_TYPEL
  000e8	00 00 00 00	 DD	 $LN15@MAKE_TYPEL
  000ec	00 00 00 00	 DD	 $LN14@MAKE_TYPEL
  000f0	00 00 00 00	 DD	 $LN13@MAKE_TYPEL
  000f4	00 00 00 00	 DD	 $LN12@MAKE_TYPEL
  000f8	00 00 00 00	 DD	 $LN11@MAKE_TYPEL
  000fc	00 00 00 00	 DD	 $LN10@MAKE_TYPEL
  00100	00 00 00 00	 DD	 $LN9@MAKE_TYPEL
  00104	00 00 00 00	 DD	 $LN8@MAKE_TYPEL
  00108	00 00 00 00	 DD	 $LN7@MAKE_TYPEL
  0010c	00 00 00 00	 DD	 $LN6@MAKE_TYPEL
  00110	00 00 00 00	 DD	 $LN5@MAKE_TYPEL
  00114	00 00 00 00	 DD	 $LN4@MAKE_TYPEL
  00118	00 00 00 00	 DD	 $LN3@MAKE_TYPEL
  0011c	00 00 00 00	 DD	 $LN2@MAKE_TYPEL
  00120	00 00 00 00	 DD	 $LN1@MAKE_TYPEL
$LN26@MAKE_TYPEL:
  00124	00		 DB	 0
  00125	00		 DB	 0
  00126	00		 DB	 0
  00127	14		 DB	 20			; 00000014H
  00128	01		 DB	 1
  00129	01		 DB	 1
  0012a	01		 DB	 1
  0012b	14		 DB	 20			; 00000014H
  0012c	02		 DB	 2
  0012d	02		 DB	 2
  0012e	02		 DB	 2
  0012f	02		 DB	 2
  00130	02		 DB	 2
  00131	14		 DB	 20			; 00000014H
  00132	03		 DB	 3
  00133	03		 DB	 3
  00134	03		 DB	 3
  00135	14		 DB	 20			; 00000014H
  00136	14		 DB	 20			; 00000014H
  00137	14		 DB	 20			; 00000014H
  00138	14		 DB	 20			; 00000014H
  00139	14		 DB	 20			; 00000014H
  0013a	04		 DB	 4
  0013b	04		 DB	 4
  0013c	14		 DB	 20			; 00000014H
  0013d	14		 DB	 20			; 00000014H
  0013e	05		 DB	 5
  0013f	05		 DB	 5
  00140	05		 DB	 5
  00141	05		 DB	 5
  00142	05		 DB	 5
  00143	14		 DB	 20			; 00000014H
  00144	06		 DB	 6
  00145	06		 DB	 6
  00146	06		 DB	 6
  00147	06		 DB	 6
  00148	06		 DB	 6
  00149	14		 DB	 20			; 00000014H
  0014a	07		 DB	 7
  0014b	07		 DB	 7
  0014c	07		 DB	 7
  0014d	07		 DB	 7
  0014e	14		 DB	 20			; 00000014H
  0014f	14		 DB	 20			; 00000014H
  00150	14		 DB	 20			; 00000014H
  00151	14		 DB	 20			; 00000014H
  00152	14		 DB	 20			; 00000014H
  00153	08		 DB	 8
  00154	08		 DB	 8
  00155	08		 DB	 8
  00156	08		 DB	 8
  00157	14		 DB	 20			; 00000014H
  00158	09		 DB	 9
  00159	09		 DB	 9
  0015a	09		 DB	 9
  0015b	09		 DB	 9
  0015c	09		 DB	 9
  0015d	09		 DB	 9
  0015e	14		 DB	 20			; 00000014H
  0015f	0a		 DB	 10			; 0000000aH
  00160	0a		 DB	 10			; 0000000aH
  00161	0a		 DB	 10			; 0000000aH
  00162	0a		 DB	 10			; 0000000aH
  00163	0a		 DB	 10			; 0000000aH
  00164	14		 DB	 20			; 00000014H
  00165	14		 DB	 20			; 00000014H
  00166	14		 DB	 20			; 00000014H
  00167	14		 DB	 20			; 00000014H
  00168	14		 DB	 20			; 00000014H
  00169	0b		 DB	 11			; 0000000bH
  0016a	0b		 DB	 11			; 0000000bH
  0016b	14		 DB	 20			; 00000014H
  0016c	0c		 DB	 12			; 0000000cH
  0016d	0c		 DB	 12			; 0000000cH
  0016e	14		 DB	 20			; 00000014H
  0016f	0d		 DB	 13			; 0000000dH
  00170	0d		 DB	 13			; 0000000dH
  00171	14		 DB	 20			; 00000014H
  00172	0e		 DB	 14			; 0000000eH
  00173	0e		 DB	 14			; 0000000eH
  00174	14		 DB	 20			; 00000014H
  00175	0f		 DB	 15			; 0000000fH
  00176	0f		 DB	 15			; 0000000fH
  00177	14		 DB	 20			; 00000014H
  00178	14		 DB	 20			; 00000014H
  00179	10		 DB	 16			; 00000010H
  0017a	11		 DB	 17			; 00000011H
  0017b	14		 DB	 20			; 00000014H
  0017c	14		 DB	 20			; 00000014H
  0017d	10		 DB	 16			; 00000010H
  0017e	14		 DB	 20			; 00000014H
  0017f	11		 DB	 17			; 00000011H
  00180	14		 DB	 20			; 00000014H
  00181	12		 DB	 18			; 00000012H
  00182	12		 DB	 18			; 00000012H
  00183	14		 DB	 20			; 00000014H
  00184	13		 DB	 19			; 00000013H
  00185	13		 DB	 19			; 00000013H
?MAKE_TYPELESS@@YA?AW4DXGI_FORMAT@@W41@@Z ENDP		; MAKE_TYPELESS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -4						; size = 4
_format$ = 8						; size = 4
?MAKE_SRGB@@YA?AW4DXGI_FORMAT@@W41@@Z PROC		; MAKE_SRGB
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 1094
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1095
  0000b	e8 00 00 00 00	 call	 ?DXUTIsInGammaCorrectMode@@YG_NXZ ; DXUTIsInGammaCorrectMode
  00010	0f b6 c0	 movzx	 eax, al
  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $LN10@MAKE_SRGB
; Line 1096
  00017	8b 45 08	 mov	 eax, DWORD PTR _format$[ebp]
  0001a	eb 5a		 jmp	 SHORT $LN11@MAKE_SRGB
$LN10@MAKE_SRGB:
; Line 1098
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _format$[ebp]
  0001f	89 4d fc	 mov	 DWORD PTR tv67[ebp], ecx
  00022	8b 55 fc	 mov	 edx, DWORD PTR tv67[ebp]
  00025	83 ea 1b	 sub	 edx, 27			; 0000001bH
  00028	89 55 fc	 mov	 DWORD PTR tv67[ebp], edx
  0002b	83 7d fc 47	 cmp	 DWORD PTR tv67[ebp], 71	; 00000047H
  0002f	77 42		 ja	 SHORT $LN8@MAKE_SRGB
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv67[ebp]
  00034	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN13@MAKE_SRGB[eax]
  0003b	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN14@MAKE_SRGB[ecx*4]
$LN7@MAKE_SRGB:
; Line 1105
  00042	b8 1d 00 00 00	 mov	 eax, 29			; 0000001dH
  00047	eb 2d		 jmp	 SHORT $LN11@MAKE_SRGB
$LN6@MAKE_SRGB:
; Line 1109
  00049	b8 48 00 00 00	 mov	 eax, 72			; 00000048H
  0004e	eb 26		 jmp	 SHORT $LN11@MAKE_SRGB
$LN5@MAKE_SRGB:
; Line 1113
  00050	b8 4b 00 00 00	 mov	 eax, 75			; 0000004bH
  00055	eb 1f		 jmp	 SHORT $LN11@MAKE_SRGB
$LN4@MAKE_SRGB:
; Line 1117
  00057	b8 4e 00 00 00	 mov	 eax, 78			; 0000004eH
  0005c	eb 18		 jmp	 SHORT $LN11@MAKE_SRGB
$LN3@MAKE_SRGB:
; Line 1121
  0005e	b8 5b 00 00 00	 mov	 eax, 91			; 0000005bH
  00063	eb 11		 jmp	 SHORT $LN11@MAKE_SRGB
$LN2@MAKE_SRGB:
; Line 1125
  00065	b8 5d 00 00 00	 mov	 eax, 93			; 0000005dH
  0006a	eb 0a		 jmp	 SHORT $LN11@MAKE_SRGB
$LN1@MAKE_SRGB:
; Line 1129
  0006c	b8 63 00 00 00	 mov	 eax, 99			; 00000063H
  00071	eb 03		 jmp	 SHORT $LN11@MAKE_SRGB
$LN8@MAKE_SRGB:
; Line 1132
  00073	8b 45 08	 mov	 eax, DWORD PTR _format$[ebp]
$LN11@MAKE_SRGB:
; Line 1133
  00076	83 c4 04	 add	 esp, 4
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
$LN14@MAKE_SRGB:
  00084	00 00 00 00	 DD	 $LN7@MAKE_SRGB
  00088	00 00 00 00	 DD	 $LN6@MAKE_SRGB
  0008c	00 00 00 00	 DD	 $LN5@MAKE_SRGB
  00090	00 00 00 00	 DD	 $LN4@MAKE_SRGB
  00094	00 00 00 00	 DD	 $LN3@MAKE_SRGB
  00098	00 00 00 00	 DD	 $LN2@MAKE_SRGB
  0009c	00 00 00 00	 DD	 $LN1@MAKE_SRGB
  000a0	00 00 00 00	 DD	 $LN8@MAKE_SRGB
$LN13@MAKE_SRGB:
  000a4	00		 DB	 0
  000a5	00		 DB	 0
  000a6	07		 DB	 7
  000a7	00		 DB	 0
  000a8	00		 DB	 0
  000a9	00		 DB	 0
  000aa	07		 DB	 7
  000ab	07		 DB	 7
  000ac	07		 DB	 7
  000ad	07		 DB	 7
  000ae	07		 DB	 7
  000af	07		 DB	 7
  000b0	07		 DB	 7
  000b1	07		 DB	 7
  000b2	07		 DB	 7
  000b3	07		 DB	 7
  000b4	07		 DB	 7
  000b5	07		 DB	 7
  000b6	07		 DB	 7
  000b7	07		 DB	 7
  000b8	07		 DB	 7
  000b9	07		 DB	 7
  000ba	07		 DB	 7
  000bb	07		 DB	 7
  000bc	07		 DB	 7
  000bd	07		 DB	 7
  000be	07		 DB	 7
  000bf	07		 DB	 7
  000c0	07		 DB	 7
  000c1	07		 DB	 7
  000c2	07		 DB	 7
  000c3	07		 DB	 7
  000c4	07		 DB	 7
  000c5	07		 DB	 7
  000c6	07		 DB	 7
  000c7	07		 DB	 7
  000c8	07		 DB	 7
  000c9	07		 DB	 7
  000ca	07		 DB	 7
  000cb	07		 DB	 7
  000cc	07		 DB	 7
  000cd	07		 DB	 7
  000ce	07		 DB	 7
  000cf	01		 DB	 1
  000d0	01		 DB	 1
  000d1	07		 DB	 7
  000d2	02		 DB	 2
  000d3	02		 DB	 2
  000d4	07		 DB	 7
  000d5	03		 DB	 3
  000d6	03		 DB	 3
  000d7	07		 DB	 7
  000d8	07		 DB	 7
  000d9	07		 DB	 7
  000da	07		 DB	 7
  000db	07		 DB	 7
  000dc	07		 DB	 7
  000dd	07		 DB	 7
  000de	07		 DB	 7
  000df	07		 DB	 7
  000e0	04		 DB	 4
  000e1	05		 DB	 5
  000e2	07		 DB	 7
  000e3	04		 DB	 4
  000e4	07		 DB	 7
  000e5	05		 DB	 5
  000e6	07		 DB	 7
  000e7	07		 DB	 7
  000e8	07		 DB	 7
  000e9	07		 DB	 7
  000ea	06		 DB	 6
  000eb	06		 DB	 6
?MAKE_SRGB@@YA?AW4DXGI_FORMAT@@W41@@Z ENDP		; MAKE_SRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -1068						; size = 100
_pOutputInfo$ = -968					; size = 4
_pd3dEnum$ = -964					; size = 4
_devMode$ = -956					; size = 220
_strDeviceName$ = -728					; size = 512
$T2 = -212						; size = 100
_DeviceSettings$ = -108					; size = 100
__$ArrayPad$ = -4					; size = 4
_AdapterOrdinal$ = 8					; size = 4
_pWidth$ = 12						; size = 4
_pHeight$ = 16						; size = 4
?DXUTGetDesktopResolution@@YGXIPAI0@Z PROC		; DXUTGetDesktopResolution
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 876
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 04 00
	00		 sub	 esp, 1068		; 0000042cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd d4 fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1068]
  00011	b9 0b 01 00 00	 mov	 ecx, 267		; 0000010bH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 877
  00027	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
  00033	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00038	8b f0		 mov	 esi, eax
  0003a	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR $T2[ebp]
  00040	f3 a5		 rep movsd
  00042	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00047	8d b5 2c ff ff
	ff		 lea	 esi, DWORD PTR $T2[ebp]
  0004d	8d 7d 94	 lea	 edi, DWORD PTR _DeviceSettings$[ebp]
  00050	f3 a5		 rep movsd
; Line 879
  00052	33 c9		 xor	 ecx, ecx
  00054	66 89 8d 28 fd
	ff ff		 mov	 WORD PTR _strDeviceName$[ebp], cx
  0005b	68 fe 01 00 00	 push	 510			; 000001feH
  00060	6a 00		 push	 0
  00062	8d 95 2a fd ff
	ff		 lea	 edx, DWORD PTR _strDeviceName$[ebp+2]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 _memset
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 881
  00071	68 dc 00 00 00	 push	 220			; 000000dcH
  00076	6a 00		 push	 0
  00078	8d 85 44 fc ff
	ff		 lea	 eax, DWORD PTR _devMode$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 _memset
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 882
  00087	b9 dc 00 00 00	 mov	 ecx, 220		; 000000dcH
  0008c	66 89 8d 88 fc
	ff ff		 mov	 WORD PTR _devMode$[ebp+68], cx
; Line 884
  00093	6a 00		 push	 0
  00095	6a 01		 push	 1
  00097	6a 00		 push	 0
  00099	e8 00 00 00 00	 call	 ?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
  0009e	89 85 3c fc ff
	ff		 mov	 DWORD PTR _pd3dEnum$[ebp], eax
; Line 885
  000a4	83 bd 3c fc ff
	ff 00		 cmp	 DWORD PTR _pd3dEnum$[ebp], 0
  000ab	75 21		 jne	 SHORT $LN6@DXUTGetDes
  000ad	8b f4		 mov	 esi, esp
  000af	68 75 03 00 00	 push	 885			; 00000375H
  000b4	68 00 00 00 00	 push	 OFFSET $SG153018
  000b9	68 00 00 00 00	 push	 OFFSET $SG153019
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@DXUTGetDes:
; Line 887
  000ce	8b 45 a0	 mov	 eax, DWORD PTR _DeviceSettings$[ebp+12]
  000d1	50		 push	 eax
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _AdapterOrdinal$[ebp]
  000d5	51		 push	 ecx
  000d6	8b 8d 3c fc ff
	ff		 mov	 ecx, DWORD PTR _pd3dEnum$[ebp]
  000dc	e8 00 00 00 00	 call	 ?GetOutputInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumOutputInfo@@II@Z ; CD3D11Enumeration::GetOutputInfo
  000e1	89 85 38 fc ff
	ff		 mov	 DWORD PTR _pOutputInfo$[ebp], eax
; Line 888
  000e7	83 bd 38 fc ff
	ff 00		 cmp	 DWORD PTR _pOutputInfo$[ebp], 0
  000ee	74 28		 je	 SHORT $LN3@DXUTGetDes
; Line 890
  000f0	8b 95 38 fc ff
	ff		 mov	 edx, DWORD PTR _pOutputInfo$[ebp]
  000f6	83 c2 0c	 add	 edx, 12			; 0000000cH
  000f9	8b f4		 mov	 esi, esp
  000fb	52		 push	 edx
  000fc	68 00 01 00 00	 push	 256			; 00000100H
  00101	8d 85 28 fd ff
	ff		 lea	 eax, DWORD PTR _strDeviceName$[ebp]
  00107	50		 push	 eax
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0010e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00111	3b f4		 cmp	 esi, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@DXUTGetDes:
; Line 893
  00118	8b f4		 mov	 esi, esp
  0011a	8d 8d 44 fc ff
	ff		 lea	 ecx, DWORD PTR _devMode$[ebp]
  00120	51		 push	 ecx
  00121	6a fe		 push	 -2			; fffffffeH
  00123	8d 95 28 fd ff
	ff		 lea	 edx, DWORD PTR _strDeviceName$[ebp]
  00129	52		 push	 edx
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnumDisplaySettingsW@12
  00130	3b f4		 cmp	 esi, esp
  00132	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 895
  00137	83 7d 0c 00	 cmp	 DWORD PTR _pWidth$[ebp], 0
  0013b	74 0b		 je	 SHORT $LN2@DXUTGetDes
; Line 896
  0013d	8b 45 0c	 mov	 eax, DWORD PTR _pWidth$[ebp]
  00140	8b 8d f0 fc ff
	ff		 mov	 ecx, DWORD PTR _devMode$[ebp+172]
  00146	89 08		 mov	 DWORD PTR [eax], ecx
$LN2@DXUTGetDes:
; Line 897
  00148	83 7d 10 00	 cmp	 DWORD PTR _pHeight$[ebp], 0
  0014c	74 0b		 je	 SHORT $LN4@DXUTGetDes
; Line 898
  0014e	8b 55 10	 mov	 edx, DWORD PTR _pHeight$[ebp]
  00151	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR _devMode$[ebp+176]
  00157	89 02		 mov	 DWORD PTR [edx], eax
$LN4@DXUTGetDes:
; Line 899
  00159	52		 push	 edx
  0015a	8b cd		 mov	 ecx, ebp
  0015c	50		 push	 eax
  0015d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@DXUTGetDes
  00163	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00168	58		 pop	 eax
  00169	5a		 pop	 edx
  0016a	5f		 pop	 edi
  0016b	5e		 pop	 esi
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016f	33 cd		 xor	 ecx, ebp
  00171	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00176	81 c4 2c 04 00
	00		 add	 esp, 1068		; 0000042cH
  0017c	3b ec		 cmp	 ebp, esp
  0017e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00183	8b e5		 mov	 esp, ebp
  00185	5d		 pop	 ebp
  00186	c2 0c 00	 ret	 12			; 0000000cH
  00189	8d 49 00	 npad	 3
$LN11@DXUTGetDes:
  0018c	03 00 00 00	 DD	 3
  00190	00 00 00 00	 DD	 $LN10@DXUTGetDes
$LN10@DXUTGetDes:
  00194	94 ff ff ff	 DD	 -108			; ffffff94H
  00198	64 00 00 00	 DD	 100			; 00000064H
  0019c	00 00 00 00	 DD	 $LN7@DXUTGetDes
  001a0	28 fd ff ff	 DD	 -728			; fffffd28H
  001a4	00 02 00 00	 DD	 512			; 00000200H
  001a8	00 00 00 00	 DD	 $LN8@DXUTGetDes
  001ac	44 fc ff ff	 DD	 -956			; fffffc44H
  001b0	dc 00 00 00	 DD	 220			; 000000dcH
  001b4	00 00 00 00	 DD	 $LN9@DXUTGetDes
$LN9@DXUTGetDes:
  001b8	64		 DB	 100			; 00000064H
  001b9	65		 DB	 101			; 00000065H
  001ba	76		 DB	 118			; 00000076H
  001bb	4d		 DB	 77			; 0000004dH
  001bc	6f		 DB	 111			; 0000006fH
  001bd	64		 DB	 100			; 00000064H
  001be	65		 DB	 101			; 00000065H
  001bf	00		 DB	 0
$LN8@DXUTGetDes:
  001c0	73		 DB	 115			; 00000073H
  001c1	74		 DB	 116			; 00000074H
  001c2	72		 DB	 114			; 00000072H
  001c3	44		 DB	 68			; 00000044H
  001c4	65		 DB	 101			; 00000065H
  001c5	76		 DB	 118			; 00000076H
  001c6	69		 DB	 105			; 00000069H
  001c7	63		 DB	 99			; 00000063H
  001c8	65		 DB	 101			; 00000065H
  001c9	4e		 DB	 78			; 0000004eH
  001ca	61		 DB	 97			; 00000061H
  001cb	6d		 DB	 109			; 0000006dH
  001cc	65		 DB	 101			; 00000065H
  001cd	00		 DB	 0
$LN7@DXUTGetDes:
  001ce	44		 DB	 68			; 00000044H
  001cf	65		 DB	 101			; 00000065H
  001d0	76		 DB	 118			; 00000076H
  001d1	69		 DB	 105			; 00000069H
  001d2	63		 DB	 99			; 00000063H
  001d3	65		 DB	 101			; 00000065H
  001d4	53		 DB	 83			; 00000053H
  001d5	65		 DB	 101			; 00000065H
  001d6	74		 DB	 116			; 00000074H
  001d7	74		 DB	 116			; 00000074H
  001d8	69		 DB	 105			; 00000069H
  001d9	6e		 DB	 110			; 0000006eH
  001da	67		 DB	 103			; 00000067H
  001db	73		 DB	 115			; 00000073H
  001dc	00		 DB	 0
?DXUTGetDesktopResolution@@YGXIPAI0@Z ENDP		; DXUTGetDesktopResolution
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rcWork$ = -28						; size = 16
_hUser32$1 = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_hMonitor$ = 8						; size = 4
_lpMonitorInfo$ = 12					; size = 4
?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z PROC ; DXUTGetMonitorInfo
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 799
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 802
  0002e	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?s_bInited@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4_NA
  00035	85 c0		 test	 eax, eax
  00037	75 41		 jne	 SHORT $LN4@DXUTGetMon
; Line 804
  00039	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?s_bInited@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4_NA, 1
; Line 805
  00040	8b f4		 mov	 esi, esp
  00042	68 00 00 00 00	 push	 OFFSET $SG152960
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _hUser32$1[ebp], eax
; Line 806
  00057	83 7d f8 00	 cmp	 DWORD PTR _hUser32$1[ebp], 0
  0005b	74 1d		 je	 SHORT $LN4@DXUTGetMon
; Line 808
  0005d	8b f4		 mov	 esi, esp
  0005f	68 00 00 00 00	 push	 OFFSET $SG152963
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _hUser32$1[ebp]
  00067	51		 push	 ecx
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	a3 00 00 00 00	 mov	 DWORD PTR ?s_pFnGetMonitorInfo@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4P6GH01@ZA, eax
$LN4@DXUTGetMon:
; Line 812
  0007a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pFnGetMonitorInfo@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4P6GH01@ZA, 0
  00081	74 1c		 je	 SHORT $LN2@DXUTGetMon
; Line 813
  00083	8b f4		 mov	 esi, esp
  00085	8b 55 0c	 mov	 edx, DWORD PTR _lpMonitorInfo$[ebp]
  00088	52		 push	 edx
  00089	8b 45 08	 mov	 eax, DWORD PTR _hMonitor$[ebp]
  0008c	50		 push	 eax
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR ?s_pFnGetMonitorInfo@?1??DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z@4P6GH01@ZA
  00093	3b f4		 cmp	 esi, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	e9 b2 00 00 00	 jmp	 $LN5@DXUTGetMon
$LN2@DXUTGetMon:
; Line 817
  0009f	81 7d 08 42 00
	34 12		 cmp	 DWORD PTR _hMonitor$[ebp], 305397826 ; 12340042H
  000a6	0f 85 a3 00 00
	00		 jne	 $LN1@DXUTGetMon
  000ac	83 7d 0c 00	 cmp	 DWORD PTR _lpMonitorInfo$[ebp], 0
  000b0	0f 84 99 00 00
	00		 je	 $LN1@DXUTGetMon
  000b6	8b 4d 0c	 mov	 ecx, DWORD PTR _lpMonitorInfo$[ebp]
  000b9	83 39 28	 cmp	 DWORD PTR [ecx], 40	; 00000028H
  000bc	0f 82 8d 00 00
	00		 jb	 $LN1@DXUTGetMon
  000c2	8b f4		 mov	 esi, esp
  000c4	6a 00		 push	 0
  000c6	8d 55 e4	 lea	 edx, DWORD PTR _rcWork$[ebp]
  000c9	52		 push	 edx
  000ca	6a 00		 push	 0
  000cc	6a 30		 push	 48			; 00000030H
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoA@16
  000d4	3b f4		 cmp	 esi, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000db	85 c0		 test	 eax, eax
  000dd	74 70		 je	 SHORT $LN1@DXUTGetMon
; Line 819
  000df	8b 45 0c	 mov	 eax, DWORD PTR _lpMonitorInfo$[ebp]
  000e2	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 820
  000e9	8b 4d 0c	 mov	 ecx, DWORD PTR _lpMonitorInfo$[ebp]
  000ec	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 821
  000f3	8b f4		 mov	 esi, esp
  000f5	6a 00		 push	 0
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  000fd	3b f4		 cmp	 esi, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b 55 0c	 mov	 edx, DWORD PTR _lpMonitorInfo$[ebp]
  00107	89 42 0c	 mov	 DWORD PTR [edx+12], eax
; Line 822
  0010a	8b f4		 mov	 esi, esp
  0010c	6a 01		 push	 1
  0010e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  00114	3b f4		 cmp	 esi, esp
  00116	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011b	8b 4d 0c	 mov	 ecx, DWORD PTR _lpMonitorInfo$[ebp]
  0011e	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 823
  00121	8b 55 0c	 mov	 edx, DWORD PTR _lpMonitorInfo$[ebp]
  00124	83 c2 14	 add	 edx, 20			; 00000014H
  00127	8b 45 e4	 mov	 eax, DWORD PTR _rcWork$[ebp]
  0012a	89 02		 mov	 DWORD PTR [edx], eax
  0012c	8b 4d e8	 mov	 ecx, DWORD PTR _rcWork$[ebp+4]
  0012f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00132	8b 45 ec	 mov	 eax, DWORD PTR _rcWork$[ebp+8]
  00135	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00138	8b 4d f0	 mov	 ecx, DWORD PTR _rcWork$[ebp+12]
  0013b	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
; Line 824
  0013e	8b 55 0c	 mov	 edx, DWORD PTR _lpMonitorInfo$[ebp]
  00141	c7 42 24 01 00
	00 00		 mov	 DWORD PTR [edx+36], 1
; Line 825
  00148	b8 01 00 00 00	 mov	 eax, 1
  0014d	eb 02		 jmp	 SHORT $LN5@DXUTGetMon
$LN1@DXUTGetMon:
; Line 827
  0014f	33 c0		 xor	 eax, eax
$LN5@DXUTGetMon:
; Line 828
  00151	52		 push	 edx
  00152	8b cd		 mov	 ecx, ebp
  00154	50		 push	 eax
  00155	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@DXUTGetMon
  0015b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00160	58		 pop	 eax
  00161	5a		 pop	 edx
  00162	5e		 pop	 esi
  00163	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00166	33 cd		 xor	 ecx, ebp
  00168	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016d	83 c4 20	 add	 esp, 32			; 00000020H
  00170	3b ec		 cmp	 ebp, esp
  00172	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00177	8b e5		 mov	 esp, ebp
  00179	5d		 pop	 ebp
  0017a	c2 08 00	 ret	 8
  0017d	8d 49 00	 npad	 3
$LN9@DXUTGetMon:
  00180	01 00 00 00	 DD	 1
  00184	00 00 00 00	 DD	 $LN8@DXUTGetMon
$LN8@DXUTGetMon:
  00188	e4 ff ff ff	 DD	 -28			; ffffffe4H
  0018c	10 00 00 00	 DD	 16			; 00000010H
  00190	00 00 00 00	 DD	 $LN7@DXUTGetMon
$LN7@DXUTGetMon:
  00194	72		 DB	 114			; 00000072H
  00195	63		 DB	 99			; 00000063H
  00196	57		 DB	 87			; 00000057H
  00197	6f		 DB	 111			; 0000006fH
  00198	72		 DB	 114			; 00000072H
  00199	6b		 DB	 107			; 0000006bH
  0019a	00		 DB	 0
?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ENDP ; DXUTGetMonitorInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hUser32$1 = -4						; size = 4
_lprcScreenCoords$ = 8					; size = 4
_dwFlags$ = 12						; size = 4
?DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z PROC ; DXUTMonitorFromRect
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 853
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 856
  0000c	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?s_bInited@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4_NA
  00013	85 c0		 test	 eax, eax
  00015	75 41		 jne	 SHORT $LN4@DXUTMonito
; Line 858
  00017	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?s_bInited@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4_NA, 1
; Line 859
  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET $SG152996
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	89 45 fc	 mov	 DWORD PTR _hUser32$1[ebp], eax
; Line 860
  00035	83 7d fc 00	 cmp	 DWORD PTR _hUser32$1[ebp], 0
  00039	74 1d		 je	 SHORT $LN4@DXUTMonito
  0003b	8b f4		 mov	 esi, esp
  0003d	68 00 00 00 00	 push	 OFFSET $SG152999
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _hUser32$1[ebp]
  00045	51		 push	 ecx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?s_pFnGetMonitorFromRect@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4P6GPAU2@0K@ZA, eax
$LN4@DXUTMonito:
; Line 863
  00058	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pFnGetMonitorFromRect@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4P6GPAU2@0K@ZA, 0
  0005f	74 1b		 je	 SHORT $LN2@DXUTMonito
; Line 864
  00061	8b f4		 mov	 esi, esp
  00063	8b 55 0c	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  00066	52		 push	 edx
  00067	8b 45 08	 mov	 eax, DWORD PTR _lprcScreenCoords$[ebp]
  0006a	50		 push	 eax
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR ?s_pFnGetMonitorFromRect@?1??DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z@4P6GPAU2@0K@ZA
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	eb 07		 jmp	 SHORT $LN5@DXUTMonito
; Line 865
  0007a	eb 05		 jmp	 SHORT $LN5@DXUTMonito
$LN2@DXUTMonito:
; Line 866
  0007c	b8 42 00 34 12	 mov	 eax, 305397826		; 12340042H
$LN5@DXUTMonito:
; Line 867
  00081	5e		 pop	 esi
  00082	83 c4 04	 add	 esp, 4
  00085	3b ec		 cmp	 ebp, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 08 00	 ret	 8
?DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z ENDP ; DXUTMonitorFromRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hUser32$1 = -4						; size = 4
_hWnd$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z PROC ; DXUTMonitorFromWindow
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 833
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 836
  0000c	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?s_bInited@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4_NA
  00013	85 c0		 test	 eax, eax
  00015	75 41		 jne	 SHORT $LN4@DXUTMonito
; Line 838
  00017	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?s_bInited@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4_NA, 1
; Line 839
  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET $SG152979
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	89 45 fc	 mov	 DWORD PTR _hUser32$1[ebp], eax
; Line 840
  00035	83 7d fc 00	 cmp	 DWORD PTR _hUser32$1[ebp], 0
  00039	74 1d		 je	 SHORT $LN4@DXUTMonito
; Line 841
  0003b	8b f4		 mov	 esi, esp
  0003d	68 00 00 00 00	 push	 OFFSET $SG152982
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _hUser32$1[ebp]
  00045	51		 push	 ecx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?s_pFnGetMonitorFromWindow@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4P6GPAU2@0K@ZA, eax
$LN4@DXUTMonito:
; Line 844
  00058	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pFnGetMonitorFromWindow@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4P6GPAU2@0K@ZA, 0
  0005f	74 1b		 je	 SHORT $LN2@DXUTMonito
; Line 845
  00061	8b f4		 mov	 esi, esp
  00063	8b 55 0c	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  00066	52		 push	 edx
  00067	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0006a	50		 push	 eax
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR ?s_pFnGetMonitorFromWindow@?1??DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z@4P6GPAU2@0K@ZA
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	eb 07		 jmp	 SHORT $LN5@DXUTMonito
; Line 846
  0007a	eb 05		 jmp	 SHORT $LN5@DXUTMonito
$LN2@DXUTMonito:
; Line 847
  0007c	b8 42 00 34 12	 mov	 eax, 305397826		; 12340042H
$LN5@DXUTMonito:
; Line 848
  00081	5e		 pop	 esi
  00082	83 c4 04	 add	 esp, 4
  00085	3b ec		 cmp	 ebp, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 08 00	 ret	 8
?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ENDP ; DXUTMonitorFromWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv129 = -8						; size = 4
tv94 = -4						; size = 4
?DXUT_EnsureD3D11APIs@@YA_NXZ PROC			; DXUT_EnsureD3D11APIs
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 438
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 441
  00015	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModD3D11, 0
  0001c	74 10		 je	 SHORT $LN6@DXUT_Ensur
  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModDXGI, 0
  00025	74 07		 je	 SHORT $LN6@DXUT_Ensur
; Line 442
  00027	b0 01		 mov	 al, 1
  00029	e9 33 01 00 00	 jmp	 $LN7@DXUT_Ensur
$LN6@DXUT_Ensur:
; Line 445
  0002e	8b f4		 mov	 esi, esp
  00030	68 00 08 00 00	 push	 2048			; 00000800H
  00035	6a 00		 push	 0
  00037	68 00 00 00 00	 push	 OFFSET $SG152423
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	a3 00 00 00 00	 mov	 DWORD PTR _s_hModD3D11, eax
; Line 446
  0004e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModD3D11, 0
  00055	74 1f		 je	 SHORT $LN5@DXUT_Ensur
; Line 448
  00057	8b f4		 mov	 esi, esp
  00059	68 00 00 00 00	 push	 OFFSET $SG152426
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_hModD3D11
  00063	50		 push	 eax
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicD3D11CreateDevice, eax
$LN5@DXUT_Ensur:
; Line 451
  00076	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicCreateDXGIFactory, 0
  0007d	0f 85 c2 00 00
	00		 jne	 $LN4@DXUT_Ensur
; Line 453
  00083	8b f4		 mov	 esi, esp
  00085	68 00 08 00 00	 push	 2048			; 00000800H
  0008a	6a 00		 push	 0
  0008c	68 00 00 00 00	 push	 OFFSET $SG152428
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  00097	3b f4		 cmp	 esi, esp
  00099	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009e	a3 00 00 00 00	 mov	 DWORD PTR _s_hModDXGI, eax
; Line 454
  000a3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModDXGI, 0
  000aa	74 20		 je	 SHORT $LN3@DXUT_Ensur
; Line 456
  000ac	8b f4		 mov	 esi, esp
  000ae	68 00 00 00 00	 push	 OFFSET $SG152431
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_hModDXGI
  000b9	51		 push	 ecx
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicCreateDXGIFactory, eax
$LN3@DXUT_Ensur:
; Line 459
  000cc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicDXGIGetDebugInterface, 0
  000d3	75 49		 jne	 SHORT $LN2@DXUT_Ensur
; Line 461
  000d5	8b f4		 mov	 esi, esp
  000d7	68 00 08 00 00	 push	 2048			; 00000800H
  000dc	6a 00		 push	 0
  000de	68 00 00 00 00	 push	 OFFSET $SG152433
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	a3 00 00 00 00	 mov	 DWORD PTR _s_hModDXGIDebug, eax
; Line 462
  000f5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModDXGIDebug, 0
  000fc	74 20		 je	 SHORT $LN2@DXUT_Ensur
; Line 464
  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET $SG152436
  00105	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_hModDXGIDebug
  0010b	52		 push	 edx
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00112	3b f4		 cmp	 esi, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00119	a3 00 00 00 00	 mov	 DWORD PTR _s_DynamicDXGIGetDebugInterface, eax
$LN2@DXUT_Ensur:
; Line 468
  0011e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModDXGI, 0
  00125	74 12		 je	 SHORT $LN9@DXUT_Ensur
  00127	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModD3D11, 0
  0012e	74 09		 je	 SHORT $LN9@DXUT_Ensur
  00130	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv94[ebp], 1
  00137	eb 07		 jmp	 SHORT $LN10@DXUT_Ensur
$LN9@DXUT_Ensur:
  00139	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN10@DXUT_Ensur:
  00140	8a 45 fc	 mov	 al, BYTE PTR tv94[ebp]
  00143	eb 1c		 jmp	 SHORT $LN7@DXUT_Ensur
$LN4@DXUT_Ensur:
; Line 471
  00145	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_hModD3D11, 0
  0014c	74 09		 je	 SHORT $LN11@DXUT_Ensur
  0014e	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv129[ebp], 1
  00155	eb 07		 jmp	 SHORT $LN12@DXUT_Ensur
$LN11@DXUT_Ensur:
  00157	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN12@DXUT_Ensur:
  0015e	8a 45 f8	 mov	 al, BYTE PTR tv129[ebp]
$LN7@DXUT_Ensur:
; Line 472
  00161	5e		 pop	 esi
  00162	83 c4 08	 add	 esp, 8
  00165	3b ec		 cmp	 ebp, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c3		 ret	 0
?DXUT_EnsureD3D11APIs@@YA_NXZ ENDP			; DXUT_EnsureD3D11APIs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pAdapter$ = 8						; size = 4
_DriverType$ = 12					; size = 4
_Software$ = 16						; size = 4
_Flags$ = 20						; size = 4
_pFeatureLevels$ = 24					; size = 4
_FeatureLevels$ = 28					; size = 4
_SDKVersion$ = 32					; size = 4
_ppDevice$ = 36						; size = 4
_pFeatureLevel$ = 40					; size = 4
_ppImmediateContext$ = 44				; size = 4
?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z PROC ; DXUT_Dynamic_D3D11CreateDevice
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 553
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 554
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D11APIs@@YA_NXZ ; DXUT_EnsureD3D11APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 44		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3D11CreateDevice, 0
  00017	74 3b		 je	 SHORT $LN2@DXUT_Dynam
; Line 556
  00019	8b f4		 mov	 esi, esp
  0001b	8b 4d 2c	 mov	 ecx, DWORD PTR _ppImmediateContext$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 28	 mov	 edx, DWORD PTR _pFeatureLevel$[ebp]
  00022	52		 push	 edx
  00023	8b 45 24	 mov	 eax, DWORD PTR _ppDevice$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 20	 mov	 ecx, DWORD PTR _SDKVersion$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 1c	 mov	 edx, DWORD PTR _FeatureLevels$[ebp]
  0002e	52		 push	 edx
  0002f	8b 45 18	 mov	 eax, DWORD PTR _pFeatureLevels$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 14	 mov	 ecx, DWORD PTR _Flags$[ebp]
  00036	51		 push	 ecx
  00037	8b 55 10	 mov	 edx, DWORD PTR _Software$[ebp]
  0003a	52		 push	 edx
  0003b	8b 45 0c	 mov	 eax, DWORD PTR _DriverType$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _pAdapter$[ebp]
  00042	51		 push	 ecx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3D11CreateDevice
  00049	3b f4		 cmp	 esi, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	eb 07		 jmp	 SHORT $LN3@DXUT_Dynam
; Line 557
  00052	eb 05		 jmp	 SHORT $LN3@DXUT_Dynam
$LN2@DXUT_Dynam:
; Line 558
  00054	b8 01 09 04 80	 mov	 eax, -2147219199	; 80040901H
$LN3@DXUT_Dynam:
; Line 559
  00059	5e		 pop	 esi
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	5d		 pop	 ebp
  00062	c2 28 00	 ret	 40			; 00000028H
?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z ENDP ; DXUT_Dynamic_D3D11CreateDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rInterface$ = 8					; size = 4
_ppOut$ = 12						; size = 4
?DXUT_Dynamic_DXGIGetDebugInterface@@YGJABU_GUID@@PAPAX@Z PROC ; DXUT_Dynamic_DXGIGetDebugInterface
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 535
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 536
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D11APIs@@YA_NXZ ; DXUT_EnsureD3D11APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 24		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicDXGIGetDebugInterface, 0
  00017	74 1b		 je	 SHORT $LN2@DXUT_Dynam
; Line 537
  00019	8b f4		 mov	 esi, esp
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _ppOut$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR _rInterface$[ebp]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicDXGIGetDebugInterface
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	eb 07		 jmp	 SHORT $LN3@DXUT_Dynam
; Line 538
  00032	eb 05		 jmp	 SHORT $LN3@DXUT_Dynam
$LN2@DXUT_Dynam:
; Line 539
  00034	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H
$LN3@DXUT_Dynam:
; Line 540
  00039	5e		 pop	 esi
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?DXUT_Dynamic_DXGIGetDebugInterface@@YGJABU_GUID@@PAPAX@Z ENDP ; DXUT_Dynamic_DXGIGetDebugInterface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rInterface$ = 8					; size = 4
_ppOut$ = 12						; size = 4
?DXUT_Dynamic_CreateDXGIFactory1@@YGJABU_GUID@@PAPAX@Z PROC ; DXUT_Dynamic_CreateDXGIFactory1
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 526
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 527
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D11APIs@@YA_NXZ ; DXUT_EnsureD3D11APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 24		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicCreateDXGIFactory, 0
  00017	74 1b		 je	 SHORT $LN2@DXUT_Dynam
; Line 528
  00019	8b f4		 mov	 esi, esp
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _ppOut$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR _rInterface$[ebp]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicCreateDXGIFactory
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	eb 07		 jmp	 SHORT $LN3@DXUT_Dynam
; Line 529
  00032	eb 05		 jmp	 SHORT $LN3@DXUT_Dynam
$LN2@DXUT_Dynam:
; Line 530
  00034	b8 01 09 04 80	 mov	 eax, -2147219199	; 80040901H
$LN3@DXUT_Dynam:
; Line 531
  00039	5e		 pop	 esi
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?DXUT_Dynamic_CreateDXGIFactory1@@YGJABU_GUID@@PAPAX@Z ENDP ; DXUT_Dynamic_CreateDXGIFactory1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUT_Dynamic_D3DPERF_GetStatus@@YGKXZ PROC		; DXUT_Dynamic_D3DPERF_GetStatus
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 518
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D9APIs@@YA_NXZ ; DXUT_EnsureD3D9APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 1c		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3DPERF_GetStatus, 0
  00017	74 13		 je	 SHORT $LN2@DXUT_Dynam
; Line 519
  00019	8b f4		 mov	 esi, esp
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3DPERF_GetStatus
  00021	3b f4		 cmp	 esi, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	eb 04		 jmp	 SHORT $LN3@DXUT_Dynam
; Line 520
  0002a	eb 02		 jmp	 SHORT $LN3@DXUT_Dynam
$LN2@DXUT_Dynam:
; Line 521
  0002c	33 c0		 xor	 eax, eax
$LN3@DXUT_Dynam:
; Line 522
  0002e	5e		 pop	 esi
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?DXUT_Dynamic_D3DPERF_GetStatus@@YGKXZ ENDP		; DXUT_Dynamic_D3DPERF_GetStatus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_dwOptions$ = 8						; size = 4
?DXUT_Dynamic_D3DPERF_SetOptions@@YGXK@Z PROC		; DXUT_Dynamic_D3DPERF_SetOptions
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 511
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 512
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D9APIs@@YA_NXZ ; DXUT_EnsureD3D9APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 1c		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3DPERF_SetOptions, 0
  00017	74 13		 je	 SHORT $LN2@DXUT_Dynam
; Line 513
  00019	8b f4		 mov	 esi, esp
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _dwOptions$[ebp]
  0001e	51		 push	 ecx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3DPERF_SetOptions
  00025	3b f4		 cmp	 esi, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUT_Dynam:
; Line 514
  0002c	5e		 pop	 esi
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?DXUT_Dynamic_D3DPERF_SetOptions@@YGXK@Z ENDP		; DXUT_Dynamic_D3DPERF_SetOptions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUT_Dynamic_D3DPERF_QueryRepeatFrame@@YGHXZ PROC	; DXUT_Dynamic_D3DPERF_QueryRepeatFrame
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 503
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 504
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D9APIs@@YA_NXZ ; DXUT_EnsureD3D9APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 1c		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3DPERF_QueryRepeatFrame, 0
  00017	74 13		 je	 SHORT $LN2@DXUT_Dynam
; Line 505
  00019	8b f4		 mov	 esi, esp
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3DPERF_QueryRepeatFrame
  00021	3b f4		 cmp	 esi, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	eb 04		 jmp	 SHORT $LN3@DXUT_Dynam
; Line 506
  0002a	eb 02		 jmp	 SHORT $LN3@DXUT_Dynam
$LN2@DXUT_Dynam:
; Line 507
  0002c	33 c0		 xor	 eax, eax
$LN3@DXUT_Dynam:
; Line 508
  0002e	5e		 pop	 esi
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?DXUT_Dynamic_D3DPERF_QueryRepeatFrame@@YGHXZ ENDP	; DXUT_Dynamic_D3DPERF_QueryRepeatFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_col$ = 8						; size = 4
_wszName$ = 12						; size = 4
?DXUT_Dynamic_D3DPERF_SetRegion@@YGXKPB_W@Z PROC	; DXUT_Dynamic_D3DPERF_SetRegion
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 497
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 498
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D9APIs@@YA_NXZ ; DXUT_EnsureD3D9APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 20		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3DPERF_SetRegion, 0
  00017	74 17		 je	 SHORT $LN2@DXUT_Dynam
; Line 499
  00019	8b f4		 mov	 esi, esp
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _wszName$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR _col$[ebp]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3DPERF_SetRegion
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUT_Dynam:
; Line 500
  00030	5e		 pop	 esi
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?DXUT_Dynamic_D3DPERF_SetRegion@@YGXKPB_W@Z ENDP	; DXUT_Dynamic_D3DPERF_SetRegion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_col$ = 8						; size = 4
_wszName$ = 12						; size = 4
?DXUT_Dynamic_D3DPERF_SetMarker@@YGXKPB_W@Z PROC	; DXUT_Dynamic_D3DPERF_SetMarker
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 491
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 492
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D9APIs@@YA_NXZ ; DXUT_EnsureD3D9APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 20		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3DPERF_SetMarker, 0
  00017	74 17		 je	 SHORT $LN2@DXUT_Dynam
; Line 493
  00019	8b f4		 mov	 esi, esp
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _wszName$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR _col$[ebp]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3DPERF_SetMarker
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUT_Dynam:
; Line 494
  00030	5e		 pop	 esi
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?DXUT_Dynamic_D3DPERF_SetMarker@@YGXKPB_W@Z ENDP	; DXUT_Dynamic_D3DPERF_SetMarker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUT_Dynamic_D3DPERF_EndEvent@@YGHXZ PROC		; DXUT_Dynamic_D3DPERF_EndEvent
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 483
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 484
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D9APIs@@YA_NXZ ; DXUT_EnsureD3D9APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 1c		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3DPERF_EndEvent, 0
  00017	74 13		 je	 SHORT $LN2@DXUT_Dynam
; Line 485
  00019	8b f4		 mov	 esi, esp
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3DPERF_EndEvent
  00021	3b f4		 cmp	 esi, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	eb 05		 jmp	 SHORT $LN3@DXUT_Dynam
; Line 486
  0002a	eb 03		 jmp	 SHORT $LN3@DXUT_Dynam
$LN2@DXUT_Dynam:
; Line 487
  0002c	83 c8 ff	 or	 eax, -1
$LN3@DXUT_Dynam:
; Line 488
  0002f	5e		 pop	 esi
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?DXUT_Dynamic_D3DPERF_EndEvent@@YGHXZ ENDP		; DXUT_Dynamic_D3DPERF_EndEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_col$ = 8						; size = 4
_wszName$ = 12						; size = 4
?DXUT_Dynamic_D3DPERF_BeginEvent@@YGHKPB_W@Z PROC	; DXUT_Dynamic_D3DPERF_BeginEvent
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 475
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 476
  00004	e8 00 00 00 00	 call	 ?DXUT_EnsureD3D9APIs@@YA_NXZ ; DXUT_EnsureD3D9APIs
  00009	0f b6 c0	 movzx	 eax, al
  0000c	85 c0		 test	 eax, eax
  0000e	74 24		 je	 SHORT $LN2@DXUT_Dynam
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_DynamicD3DPERF_BeginEvent, 0
  00017	74 1b		 je	 SHORT $LN2@DXUT_Dynam
; Line 477
  00019	8b f4		 mov	 esi, esp
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _wszName$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR _col$[ebp]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR _s_DynamicD3DPERF_BeginEvent
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	eb 05		 jmp	 SHORT $LN3@DXUT_Dynam
; Line 478
  00032	eb 03		 jmp	 SHORT $LN3@DXUT_Dynam
$LN2@DXUT_Dynam:
; Line 479
  00034	83 c8 ff	 or	 eax, -1
$LN3@DXUT_Dynam:
; Line 480
  00037	5e		 pop	 esi
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?DXUT_Dynamic_D3DPERF_BeginEvent@@YGHKPB_W@Z ENDP	; DXUT_Dynamic_D3DPERF_BeginEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_uMsg$ = 8						; size = 4
?DXUTTraceWindowsMessage@@YGPB_WI@Z PROC		; DXUTTraceWindowsMessage
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 566
  0000b	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00011	81 7d fc ff 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 255 ; 000000ffH
  00018	77 2b		 ja	 SHORT $LN220@DXUTTraceW
  0001a	81 7d fc ff 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 255 ; 000000ffH
  00021	0f 84 64 04 00
	00		 je	 $LN125@DXUTTraceW
  00027	81 7d fc ad 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 173 ; 000000adH
  0002e	0f 87 f9 08 00
	00		 ja	 $LN1@DXUTTraceW
  00034	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00037	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN224@DXUTTraceW[ecx]
  0003e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN228@DXUTTraceW[edx*4]
$LN220@DXUTTraceW:
  00045	81 7d fc 00 02
	00 00		 cmp	 DWORD PTR tv64[ebp], 512 ; 00000200H
  0004c	77 36		 ja	 SHORT $LN221@DXUTTraceW
  0004e	81 7d fc 00 02
	00 00		 cmp	 DWORD PTR tv64[ebp], 512 ; 00000200H
  00055	0f 84 c0 05 00
	00		 je	 $LN85@DXUTTraceW
  0005b	8b 45 fc	 mov	 eax, DWORD PTR tv64[ebp]
  0005e	2d 00 01 00 00	 sub	 eax, 256		; 00000100H
  00063	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00066	81 7d fc e1 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 225 ; 000000e1H
  0006d	0f 87 ba 08 00
	00		 ja	 $LN1@DXUTTraceW
  00073	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00076	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN225@DXUTTraceW[ecx]
  0007d	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN229@DXUTTraceW[edx*4]
$LN221@DXUTTraceW:
  00084	81 7d fc 00 03
	00 00		 cmp	 DWORD PTR tv64[ebp], 768 ; 00000300H
  0008b	77 36		 ja	 SHORT $LN222@DXUTTraceW
  0008d	81 7d fc 00 03
	00 00		 cmp	 DWORD PTR tv64[ebp], 768 ; 00000300H
  00094	0f 84 9d 07 00
	00		 je	 $LN31@DXUTTraceW
  0009a	8b 45 fc	 mov	 eax, DWORD PTR tv64[ebp]
  0009d	2d 01 02 00 00	 sub	 eax, 513		; 00000201H
  000a2	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  000a5	81 7d fc de 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 222 ; 000000deH
  000ac	0f 87 7b 08 00
	00		 ja	 $LN1@DXUTTraceW
  000b2	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  000b5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN226@DXUTTraceW[ecx]
  000bc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN230@DXUTTraceW[edx*4]
$LN222@DXUTTraceW:
  000c3	81 7d fc 00 80
	00 00		 cmp	 DWORD PTR tv64[ebp], 32768 ; 00008000H
  000ca	77 36		 ja	 SHORT $LN223@DXUTTraceW
  000cc	81 7d fc 00 80
	00 00		 cmp	 DWORD PTR tv64[ebp], 32768 ; 00008000H
  000d3	0f 84 4d 08 00
	00		 je	 $LN2@DXUTTraceW
  000d9	8b 45 fc	 mov	 eax, DWORD PTR tv64[ebp]
  000dc	2d 01 03 00 00	 sub	 eax, 769		; 00000301H
  000e1	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  000e4	81 7d fc 8e 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 142 ; 0000008eH
  000eb	0f 87 3c 08 00
	00		 ja	 $LN1@DXUTTraceW
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  000f4	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN227@DXUTTraceW[ecx]
  000fb	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN231@DXUTTraceW[edx*4]
$LN223@DXUTTraceW:
  00102	e9 26 08 00 00	 jmp	 $LN1@DXUTTraceW
$LN215@DXUTTraceW:
; Line 568
  00107	b8 00 00 00 00	 mov	 eax, OFFSET $SG152512
  0010c	e9 21 08 00 00	 jmp	 $LN218@DXUTTraceW
$LN214@DXUTTraceW:
; Line 569
  00111	b8 00 00 00 00	 mov	 eax, OFFSET $SG152514
  00116	e9 17 08 00 00	 jmp	 $LN218@DXUTTraceW
$LN213@DXUTTraceW:
; Line 570
  0011b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152516
  00120	e9 0d 08 00 00	 jmp	 $LN218@DXUTTraceW
$LN212@DXUTTraceW:
; Line 571
  00125	b8 00 00 00 00	 mov	 eax, OFFSET $SG152518
  0012a	e9 03 08 00 00	 jmp	 $LN218@DXUTTraceW
$LN211@DXUTTraceW:
; Line 572
  0012f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152520
  00134	e9 f9 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN210@DXUTTraceW:
; Line 573
  00139	b8 00 00 00 00	 mov	 eax, OFFSET $SG152522
  0013e	e9 ef 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN209@DXUTTraceW:
; Line 574
  00143	b8 00 00 00 00	 mov	 eax, OFFSET $SG152524
  00148	e9 e5 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN208@DXUTTraceW:
; Line 575
  0014d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152526
  00152	e9 db 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN207@DXUTTraceW:
; Line 576
  00157	b8 00 00 00 00	 mov	 eax, OFFSET $SG152528
  0015c	e9 d1 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN206@DXUTTraceW:
; Line 577
  00161	b8 00 00 00 00	 mov	 eax, OFFSET $SG152530
  00166	e9 c7 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN205@DXUTTraceW:
; Line 578
  0016b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152532
  00170	e9 bd 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN204@DXUTTraceW:
; Line 579
  00175	b8 00 00 00 00	 mov	 eax, OFFSET $SG152534
  0017a	e9 b3 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN203@DXUTTraceW:
; Line 580
  0017f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152536
  00184	e9 a9 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN202@DXUTTraceW:
; Line 581
  00189	b8 00 00 00 00	 mov	 eax, OFFSET $SG152538
  0018e	e9 9f 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN201@DXUTTraceW:
; Line 582
  00193	b8 00 00 00 00	 mov	 eax, OFFSET $SG152540
  00198	e9 95 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN200@DXUTTraceW:
; Line 583
  0019d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152542
  001a2	e9 8b 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN199@DXUTTraceW:
; Line 584
  001a7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152544
  001ac	e9 81 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN198@DXUTTraceW:
; Line 585
  001b1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152546
  001b6	e9 77 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN197@DXUTTraceW:
; Line 586
  001bb	b8 00 00 00 00	 mov	 eax, OFFSET $SG152548
  001c0	e9 6d 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN196@DXUTTraceW:
; Line 587
  001c5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152550
  001ca	e9 63 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN195@DXUTTraceW:
; Line 588
  001cf	b8 00 00 00 00	 mov	 eax, OFFSET $SG152552
  001d4	e9 59 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN194@DXUTTraceW:
; Line 589
  001d9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152554
  001de	e9 4f 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN193@DXUTTraceW:
; Line 590
  001e3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152556
  001e8	e9 45 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN192@DXUTTraceW:
; Line 591
  001ed	b8 00 00 00 00	 mov	 eax, OFFSET $SG152558
  001f2	e9 3b 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN191@DXUTTraceW:
; Line 592
  001f7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152560
  001fc	e9 31 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN190@DXUTTraceW:
; Line 593
  00201	b8 00 00 00 00	 mov	 eax, OFFSET $SG152562
  00206	e9 27 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN189@DXUTTraceW:
; Line 594
  0020b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152564
  00210	e9 1d 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN188@DXUTTraceW:
; Line 595
  00215	b8 00 00 00 00	 mov	 eax, OFFSET $SG152566
  0021a	e9 13 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN187@DXUTTraceW:
; Line 596
  0021f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152568
  00224	e9 09 07 00 00	 jmp	 $LN218@DXUTTraceW
$LN186@DXUTTraceW:
; Line 597
  00229	b8 00 00 00 00	 mov	 eax, OFFSET $SG152570
  0022e	e9 ff 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN185@DXUTTraceW:
; Line 598
  00233	b8 00 00 00 00	 mov	 eax, OFFSET $SG152572
  00238	e9 f5 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN184@DXUTTraceW:
; Line 599
  0023d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152574
  00242	e9 eb 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN183@DXUTTraceW:
; Line 600
  00247	b8 00 00 00 00	 mov	 eax, OFFSET $SG152576
  0024c	e9 e1 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN182@DXUTTraceW:
; Line 601
  00251	b8 00 00 00 00	 mov	 eax, OFFSET $SG152578
  00256	e9 d7 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN181@DXUTTraceW:
; Line 602
  0025b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152580
  00260	e9 cd 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN180@DXUTTraceW:
; Line 603
  00265	b8 00 00 00 00	 mov	 eax, OFFSET $SG152582
  0026a	e9 c3 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN179@DXUTTraceW:
; Line 604
  0026f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152584
  00274	e9 b9 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN178@DXUTTraceW:
; Line 605
  00279	b8 00 00 00 00	 mov	 eax, OFFSET $SG152586
  0027e	e9 af 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN177@DXUTTraceW:
; Line 606
  00283	b8 00 00 00 00	 mov	 eax, OFFSET $SG152588
  00288	e9 a5 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN176@DXUTTraceW:
; Line 607
  0028d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152590
  00292	e9 9b 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN175@DXUTTraceW:
; Line 608
  00297	b8 00 00 00 00	 mov	 eax, OFFSET $SG152592
  0029c	e9 91 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN174@DXUTTraceW:
; Line 609
  002a1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152594
  002a6	e9 87 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN173@DXUTTraceW:
; Line 610
  002ab	b8 00 00 00 00	 mov	 eax, OFFSET $SG152596
  002b0	e9 7d 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN172@DXUTTraceW:
; Line 611
  002b5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152598
  002ba	e9 73 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN171@DXUTTraceW:
; Line 612
  002bf	b8 00 00 00 00	 mov	 eax, OFFSET $SG152600
  002c4	e9 69 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN170@DXUTTraceW:
; Line 613
  002c9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152602
  002ce	e9 5f 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN169@DXUTTraceW:
; Line 614
  002d3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152604
  002d8	e9 55 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN168@DXUTTraceW:
; Line 615
  002dd	b8 00 00 00 00	 mov	 eax, OFFSET $SG152606
  002e2	e9 4b 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN167@DXUTTraceW:
; Line 616
  002e7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152608
  002ec	e9 41 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN166@DXUTTraceW:
; Line 617
  002f1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152610
  002f6	e9 37 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN165@DXUTTraceW:
; Line 618
  002fb	b8 00 00 00 00	 mov	 eax, OFFSET $SG152612
  00300	e9 2d 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN164@DXUTTraceW:
; Line 619
  00305	b8 00 00 00 00	 mov	 eax, OFFSET $SG152614
  0030a	e9 23 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN163@DXUTTraceW:
; Line 620
  0030f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152616
  00314	e9 19 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN162@DXUTTraceW:
; Line 621
  00319	b8 00 00 00 00	 mov	 eax, OFFSET $SG152618
  0031e	e9 0f 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN161@DXUTTraceW:
; Line 622
  00323	b8 00 00 00 00	 mov	 eax, OFFSET $SG152620
  00328	e9 05 06 00 00	 jmp	 $LN218@DXUTTraceW
$LN160@DXUTTraceW:
; Line 623
  0032d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152622
  00332	e9 fb 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN159@DXUTTraceW:
; Line 624
  00337	b8 00 00 00 00	 mov	 eax, OFFSET $SG152624
  0033c	e9 f1 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN158@DXUTTraceW:
; Line 625
  00341	b8 00 00 00 00	 mov	 eax, OFFSET $SG152626
  00346	e9 e7 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN157@DXUTTraceW:
; Line 626
  0034b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152628
  00350	e9 dd 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN156@DXUTTraceW:
; Line 627
  00355	b8 00 00 00 00	 mov	 eax, OFFSET $SG152630
  0035a	e9 d3 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN155@DXUTTraceW:
; Line 628
  0035f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152632
  00364	e9 c9 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN154@DXUTTraceW:
; Line 629
  00369	b8 00 00 00 00	 mov	 eax, OFFSET $SG152634
  0036e	e9 bf 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN153@DXUTTraceW:
; Line 630
  00373	b8 00 00 00 00	 mov	 eax, OFFSET $SG152636
  00378	e9 b5 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN152@DXUTTraceW:
; Line 631
  0037d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152638
  00382	e9 ab 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN151@DXUTTraceW:
; Line 632
  00387	b8 00 00 00 00	 mov	 eax, OFFSET $SG152640
  0038c	e9 a1 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN150@DXUTTraceW:
; Line 633
  00391	b8 00 00 00 00	 mov	 eax, OFFSET $SG152642
  00396	e9 97 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN149@DXUTTraceW:
; Line 634
  0039b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152644
  003a0	e9 8d 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN148@DXUTTraceW:
; Line 635
  003a5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152646
  003aa	e9 83 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN147@DXUTTraceW:
; Line 636
  003af	b8 00 00 00 00	 mov	 eax, OFFSET $SG152648
  003b4	e9 79 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN146@DXUTTraceW:
; Line 637
  003b9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152650
  003be	e9 6f 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN145@DXUTTraceW:
; Line 638
  003c3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152652
  003c8	e9 65 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN144@DXUTTraceW:
; Line 639
  003cd	b8 00 00 00 00	 mov	 eax, OFFSET $SG152654
  003d2	e9 5b 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN143@DXUTTraceW:
; Line 640
  003d7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152656
  003dc	e9 51 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN142@DXUTTraceW:
; Line 641
  003e1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152658
  003e6	e9 47 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN141@DXUTTraceW:
; Line 642
  003eb	b8 00 00 00 00	 mov	 eax, OFFSET $SG152660
  003f0	e9 3d 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN140@DXUTTraceW:
; Line 643
  003f5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152662
  003fa	e9 33 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN139@DXUTTraceW:
; Line 644
  003ff	b8 00 00 00 00	 mov	 eax, OFFSET $SG152664
  00404	e9 29 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN138@DXUTTraceW:
; Line 645
  00409	b8 00 00 00 00	 mov	 eax, OFFSET $SG152666
  0040e	e9 1f 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN137@DXUTTraceW:
; Line 646
  00413	b8 00 00 00 00	 mov	 eax, OFFSET $SG152668
  00418	e9 15 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN136@DXUTTraceW:
; Line 647
  0041d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152670
  00422	e9 0b 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN135@DXUTTraceW:
; Line 648
  00427	b8 00 00 00 00	 mov	 eax, OFFSET $SG152672
  0042c	e9 01 05 00 00	 jmp	 $LN218@DXUTTraceW
$LN134@DXUTTraceW:
; Line 649
  00431	b8 00 00 00 00	 mov	 eax, OFFSET $SG152674
  00436	e9 f7 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN133@DXUTTraceW:
; Line 650
  0043b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152676
  00440	e9 ed 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN132@DXUTTraceW:
; Line 651
  00445	b8 00 00 00 00	 mov	 eax, OFFSET $SG152678
  0044a	e9 e3 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN131@DXUTTraceW:
; Line 652
  0044f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152680
  00454	e9 d9 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN130@DXUTTraceW:
; Line 653
  00459	b8 00 00 00 00	 mov	 eax, OFFSET $SG152682
  0045e	e9 cf 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN129@DXUTTraceW:
; Line 654
  00463	b8 00 00 00 00	 mov	 eax, OFFSET $SG152684
  00468	e9 c5 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN128@DXUTTraceW:
; Line 655
  0046d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152686
  00472	e9 bb 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN127@DXUTTraceW:
; Line 656
  00477	b8 00 00 00 00	 mov	 eax, OFFSET $SG152688
  0047c	e9 b1 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN126@DXUTTraceW:
; Line 657
  00481	b8 00 00 00 00	 mov	 eax, OFFSET $SG152690
  00486	e9 a7 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN125@DXUTTraceW:
; Line 658
  0048b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152692
  00490	e9 9d 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN124@DXUTTraceW:
; Line 659
  00495	b8 00 00 00 00	 mov	 eax, OFFSET $SG152694
  0049a	e9 93 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN123@DXUTTraceW:
; Line 660
  0049f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152696
  004a4	e9 89 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN122@DXUTTraceW:
; Line 661
  004a9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152698
  004ae	e9 7f 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN121@DXUTTraceW:
; Line 662
  004b3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152700
  004b8	e9 75 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN120@DXUTTraceW:
; Line 663
  004bd	b8 00 00 00 00	 mov	 eax, OFFSET $SG152702
  004c2	e9 6b 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN119@DXUTTraceW:
; Line 664
  004c7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152704
  004cc	e9 61 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN118@DXUTTraceW:
; Line 665
  004d1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152706
  004d6	e9 57 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN117@DXUTTraceW:
; Line 666
  004db	b8 00 00 00 00	 mov	 eax, OFFSET $SG152708
  004e0	e9 4d 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN116@DXUTTraceW:
; Line 667
  004e5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152710
  004ea	e9 43 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN115@DXUTTraceW:
; Line 668
  004ef	b8 00 00 00 00	 mov	 eax, OFFSET $SG152712
  004f4	e9 39 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN114@DXUTTraceW:
; Line 669
  004f9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152714
  004fe	e9 2f 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN113@DXUTTraceW:
; Line 670
  00503	b8 00 00 00 00	 mov	 eax, OFFSET $SG152716
  00508	e9 25 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN112@DXUTTraceW:
; Line 671
  0050d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152718
  00512	e9 1b 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN111@DXUTTraceW:
; Line 672
  00517	b8 00 00 00 00	 mov	 eax, OFFSET $SG152720
  0051c	e9 11 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN110@DXUTTraceW:
; Line 673
  00521	b8 00 00 00 00	 mov	 eax, OFFSET $SG152722
  00526	e9 07 04 00 00	 jmp	 $LN218@DXUTTraceW
$LN109@DXUTTraceW:
; Line 674
  0052b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152724
  00530	e9 fd 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN108@DXUTTraceW:
; Line 675
  00535	b8 00 00 00 00	 mov	 eax, OFFSET $SG152726
  0053a	e9 f3 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN107@DXUTTraceW:
; Line 676
  0053f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152728
  00544	e9 e9 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN106@DXUTTraceW:
; Line 677
  00549	b8 00 00 00 00	 mov	 eax, OFFSET $SG152730
  0054e	e9 df 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN105@DXUTTraceW:
; Line 678
  00553	b8 00 00 00 00	 mov	 eax, OFFSET $SG152732
  00558	e9 d5 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN104@DXUTTraceW:
; Line 679
  0055d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152734
  00562	e9 cb 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN103@DXUTTraceW:
; Line 680
  00567	b8 00 00 00 00	 mov	 eax, OFFSET $SG152736
  0056c	e9 c1 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN102@DXUTTraceW:
; Line 681
  00571	b8 00 00 00 00	 mov	 eax, OFFSET $SG152738
  00576	e9 b7 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN101@DXUTTraceW:
; Line 682
  0057b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152740
  00580	e9 ad 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN100@DXUTTraceW:
; Line 683
  00585	b8 00 00 00 00	 mov	 eax, OFFSET $SG152742
  0058a	e9 a3 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN99@DXUTTraceW:
; Line 684
  0058f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152744
  00594	e9 99 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN98@DXUTTraceW:
; Line 685
  00599	b8 00 00 00 00	 mov	 eax, OFFSET $SG152746
  0059e	e9 8f 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN97@DXUTTraceW:
; Line 686
  005a3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152748
  005a8	e9 85 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN96@DXUTTraceW:
; Line 687
  005ad	b8 00 00 00 00	 mov	 eax, OFFSET $SG152750
  005b2	e9 7b 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN95@DXUTTraceW:
; Line 688
  005b7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152752
  005bc	e9 71 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN94@DXUTTraceW:
; Line 689
  005c1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152754
  005c6	e9 67 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN93@DXUTTraceW:
; Line 690
  005cb	b8 00 00 00 00	 mov	 eax, OFFSET $SG152756
  005d0	e9 5d 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN92@DXUTTraceW:
; Line 691
  005d5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152758
  005da	e9 53 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN91@DXUTTraceW:
; Line 692
  005df	b8 00 00 00 00	 mov	 eax, OFFSET $SG152760
  005e4	e9 49 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN90@DXUTTraceW:
; Line 693
  005e9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152762
  005ee	e9 3f 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN89@DXUTTraceW:
; Line 694
  005f3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152764
  005f8	e9 35 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN88@DXUTTraceW:
; Line 695
  005fd	b8 00 00 00 00	 mov	 eax, OFFSET $SG152766
  00602	e9 2b 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN87@DXUTTraceW:
; Line 696
  00607	b8 00 00 00 00	 mov	 eax, OFFSET $SG152768
  0060c	e9 21 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN86@DXUTTraceW:
; Line 697
  00611	b8 00 00 00 00	 mov	 eax, OFFSET $SG152770
  00616	e9 17 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN85@DXUTTraceW:
; Line 698
  0061b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152772
  00620	e9 0d 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN84@DXUTTraceW:
; Line 699
  00625	b8 00 00 00 00	 mov	 eax, OFFSET $SG152774
  0062a	e9 03 03 00 00	 jmp	 $LN218@DXUTTraceW
$LN83@DXUTTraceW:
; Line 700
  0062f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152776
  00634	e9 f9 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN82@DXUTTraceW:
; Line 701
  00639	b8 00 00 00 00	 mov	 eax, OFFSET $SG152778
  0063e	e9 ef 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN81@DXUTTraceW:
; Line 702
  00643	b8 00 00 00 00	 mov	 eax, OFFSET $SG152780
  00648	e9 e5 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN80@DXUTTraceW:
; Line 703
  0064d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152782
  00652	e9 db 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN79@DXUTTraceW:
; Line 704
  00657	b8 00 00 00 00	 mov	 eax, OFFSET $SG152784
  0065c	e9 d1 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN78@DXUTTraceW:
; Line 705
  00661	b8 00 00 00 00	 mov	 eax, OFFSET $SG152786
  00666	e9 c7 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN77@DXUTTraceW:
; Line 706
  0066b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152788
  00670	e9 bd 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN76@DXUTTraceW:
; Line 707
  00675	b8 00 00 00 00	 mov	 eax, OFFSET $SG152790
  0067a	e9 b3 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN75@DXUTTraceW:
; Line 708
  0067f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152792
  00684	e9 a9 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN74@DXUTTraceW:
; Line 709
  00689	b8 00 00 00 00	 mov	 eax, OFFSET $SG152794
  0068e	e9 9f 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN73@DXUTTraceW:
; Line 710
  00693	b8 00 00 00 00	 mov	 eax, OFFSET $SG152796
  00698	e9 95 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN72@DXUTTraceW:
; Line 711
  0069d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152798
  006a2	e9 8b 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN71@DXUTTraceW:
; Line 712
  006a7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152800
  006ac	e9 81 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN70@DXUTTraceW:
; Line 713
  006b1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152802
  006b6	e9 77 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN69@DXUTTraceW:
; Line 714
  006bb	b8 00 00 00 00	 mov	 eax, OFFSET $SG152804
  006c0	e9 6d 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN68@DXUTTraceW:
; Line 715
  006c5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152806
  006ca	e9 63 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN67@DXUTTraceW:
; Line 716
  006cf	b8 00 00 00 00	 mov	 eax, OFFSET $SG152808
  006d4	e9 59 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN66@DXUTTraceW:
; Line 717
  006d9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152810
  006de	e9 4f 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN65@DXUTTraceW:
; Line 718
  006e3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152812
  006e8	e9 45 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN64@DXUTTraceW:
; Line 719
  006ed	b8 00 00 00 00	 mov	 eax, OFFSET $SG152814
  006f2	e9 3b 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN63@DXUTTraceW:
; Line 720
  006f7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152816
  006fc	e9 31 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN62@DXUTTraceW:
; Line 721
  00701	b8 00 00 00 00	 mov	 eax, OFFSET $SG152818
  00706	e9 27 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN61@DXUTTraceW:
; Line 722
  0070b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152820
  00710	e9 1d 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN60@DXUTTraceW:
; Line 723
  00715	b8 00 00 00 00	 mov	 eax, OFFSET $SG152822
  0071a	e9 13 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN59@DXUTTraceW:
; Line 724
  0071f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152824
  00724	e9 09 02 00 00	 jmp	 $LN218@DXUTTraceW
$LN58@DXUTTraceW:
; Line 725
  00729	b8 00 00 00 00	 mov	 eax, OFFSET $SG152826
  0072e	e9 ff 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN57@DXUTTraceW:
; Line 726
  00733	b8 00 00 00 00	 mov	 eax, OFFSET $SG152828
  00738	e9 f5 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN56@DXUTTraceW:
; Line 727
  0073d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152830
  00742	e9 eb 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN55@DXUTTraceW:
; Line 728
  00747	b8 00 00 00 00	 mov	 eax, OFFSET $SG152832
  0074c	e9 e1 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN54@DXUTTraceW:
; Line 729
  00751	b8 00 00 00 00	 mov	 eax, OFFSET $SG152834
  00756	e9 d7 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN53@DXUTTraceW:
; Line 730
  0075b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152836
  00760	e9 cd 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN52@DXUTTraceW:
; Line 731
  00765	b8 00 00 00 00	 mov	 eax, OFFSET $SG152838
  0076a	e9 c3 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN51@DXUTTraceW:
; Line 732
  0076f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152840
  00774	e9 b9 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN50@DXUTTraceW:
; Line 733
  00779	b8 00 00 00 00	 mov	 eax, OFFSET $SG152842
  0077e	e9 af 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN49@DXUTTraceW:
; Line 734
  00783	b8 00 00 00 00	 mov	 eax, OFFSET $SG152844
  00788	e9 a5 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN48@DXUTTraceW:
; Line 735
  0078d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152846
  00792	e9 9b 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN47@DXUTTraceW:
; Line 736
  00797	b8 00 00 00 00	 mov	 eax, OFFSET $SG152848
  0079c	e9 91 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN46@DXUTTraceW:
; Line 737
  007a1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152850
  007a6	e9 87 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN45@DXUTTraceW:
; Line 738
  007ab	b8 00 00 00 00	 mov	 eax, OFFSET $SG152852
  007b0	e9 7d 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN44@DXUTTraceW:
; Line 739
  007b5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152854
  007ba	e9 73 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN43@DXUTTraceW:
; Line 740
  007bf	b8 00 00 00 00	 mov	 eax, OFFSET $SG152856
  007c4	e9 69 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN42@DXUTTraceW:
; Line 741
  007c9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152858
  007ce	e9 5f 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN41@DXUTTraceW:
; Line 742
  007d3	b8 00 00 00 00	 mov	 eax, OFFSET $SG152860
  007d8	e9 55 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN40@DXUTTraceW:
; Line 743
  007dd	b8 00 00 00 00	 mov	 eax, OFFSET $SG152862
  007e2	e9 4b 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN39@DXUTTraceW:
; Line 744
  007e7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152864
  007ec	e9 41 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN38@DXUTTraceW:
; Line 745
  007f1	b8 00 00 00 00	 mov	 eax, OFFSET $SG152866
  007f6	e9 37 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN37@DXUTTraceW:
; Line 746
  007fb	b8 00 00 00 00	 mov	 eax, OFFSET $SG152868
  00800	e9 2d 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN36@DXUTTraceW:
; Line 747
  00805	b8 00 00 00 00	 mov	 eax, OFFSET $SG152870
  0080a	e9 23 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN35@DXUTTraceW:
; Line 748
  0080f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152872
  00814	e9 19 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN34@DXUTTraceW:
; Line 749
  00819	b8 00 00 00 00	 mov	 eax, OFFSET $SG152874
  0081e	e9 0f 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN33@DXUTTraceW:
; Line 750
  00823	b8 00 00 00 00	 mov	 eax, OFFSET $SG152876
  00828	e9 05 01 00 00	 jmp	 $LN218@DXUTTraceW
$LN32@DXUTTraceW:
; Line 751
  0082d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152878
  00832	e9 fb 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN31@DXUTTraceW:
; Line 752
  00837	b8 00 00 00 00	 mov	 eax, OFFSET $SG152880
  0083c	e9 f1 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN30@DXUTTraceW:
; Line 753
  00841	b8 00 00 00 00	 mov	 eax, OFFSET $SG152882
  00846	e9 e7 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN29@DXUTTraceW:
; Line 754
  0084b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152884
  00850	e9 dd 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN28@DXUTTraceW:
; Line 755
  00855	b8 00 00 00 00	 mov	 eax, OFFSET $SG152886
  0085a	e9 d3 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN27@DXUTTraceW:
; Line 756
  0085f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152888
  00864	e9 c9 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN26@DXUTTraceW:
; Line 757
  00869	b8 00 00 00 00	 mov	 eax, OFFSET $SG152890
  0086e	e9 bf 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN25@DXUTTraceW:
; Line 758
  00873	b8 00 00 00 00	 mov	 eax, OFFSET $SG152892
  00878	e9 b5 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN24@DXUTTraceW:
; Line 759
  0087d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152894
  00882	e9 ab 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN23@DXUTTraceW:
; Line 760
  00887	b8 00 00 00 00	 mov	 eax, OFFSET $SG152896
  0088c	e9 a1 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN22@DXUTTraceW:
; Line 761
  00891	b8 00 00 00 00	 mov	 eax, OFFSET $SG152898
  00896	e9 97 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN21@DXUTTraceW:
; Line 762
  0089b	b8 00 00 00 00	 mov	 eax, OFFSET $SG152900
  008a0	e9 8d 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN20@DXUTTraceW:
; Line 763
  008a5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152902
  008aa	e9 83 00 00 00	 jmp	 $LN218@DXUTTraceW
$LN19@DXUTTraceW:
; Line 764
  008af	b8 00 00 00 00	 mov	 eax, OFFSET $SG152904
  008b4	eb 7c		 jmp	 SHORT $LN218@DXUTTraceW
$LN18@DXUTTraceW:
; Line 765
  008b6	b8 00 00 00 00	 mov	 eax, OFFSET $SG152906
  008bb	eb 75		 jmp	 SHORT $LN218@DXUTTraceW
$LN17@DXUTTraceW:
; Line 766
  008bd	b8 00 00 00 00	 mov	 eax, OFFSET $SG152908
  008c2	eb 6e		 jmp	 SHORT $LN218@DXUTTraceW
$LN16@DXUTTraceW:
; Line 767
  008c4	b8 00 00 00 00	 mov	 eax, OFFSET $SG152910
  008c9	eb 67		 jmp	 SHORT $LN218@DXUTTraceW
$LN15@DXUTTraceW:
; Line 768
  008cb	b8 00 00 00 00	 mov	 eax, OFFSET $SG152912
  008d0	eb 60		 jmp	 SHORT $LN218@DXUTTraceW
$LN14@DXUTTraceW:
; Line 769
  008d2	b8 00 00 00 00	 mov	 eax, OFFSET $SG152914
  008d7	eb 59		 jmp	 SHORT $LN218@DXUTTraceW
$LN13@DXUTTraceW:
; Line 770
  008d9	b8 00 00 00 00	 mov	 eax, OFFSET $SG152916
  008de	eb 52		 jmp	 SHORT $LN218@DXUTTraceW
$LN12@DXUTTraceW:
; Line 771
  008e0	b8 00 00 00 00	 mov	 eax, OFFSET $SG152918
  008e5	eb 4b		 jmp	 SHORT $LN218@DXUTTraceW
$LN11@DXUTTraceW:
; Line 772
  008e7	b8 00 00 00 00	 mov	 eax, OFFSET $SG152920
  008ec	eb 44		 jmp	 SHORT $LN218@DXUTTraceW
$LN10@DXUTTraceW:
; Line 773
  008ee	b8 00 00 00 00	 mov	 eax, OFFSET $SG152922
  008f3	eb 3d		 jmp	 SHORT $LN218@DXUTTraceW
$LN9@DXUTTraceW:
; Line 774
  008f5	b8 00 00 00 00	 mov	 eax, OFFSET $SG152924
  008fa	eb 36		 jmp	 SHORT $LN218@DXUTTraceW
$LN8@DXUTTraceW:
; Line 775
  008fc	b8 00 00 00 00	 mov	 eax, OFFSET $SG152926
  00901	eb 2f		 jmp	 SHORT $LN218@DXUTTraceW
$LN7@DXUTTraceW:
; Line 776
  00903	b8 00 00 00 00	 mov	 eax, OFFSET $SG152928
  00908	eb 28		 jmp	 SHORT $LN218@DXUTTraceW
$LN6@DXUTTraceW:
; Line 777
  0090a	b8 00 00 00 00	 mov	 eax, OFFSET $SG152930
  0090f	eb 21		 jmp	 SHORT $LN218@DXUTTraceW
$LN5@DXUTTraceW:
; Line 778
  00911	b8 00 00 00 00	 mov	 eax, OFFSET $SG152932
  00916	eb 1a		 jmp	 SHORT $LN218@DXUTTraceW
$LN4@DXUTTraceW:
; Line 779
  00918	b8 00 00 00 00	 mov	 eax, OFFSET $SG152934
  0091d	eb 13		 jmp	 SHORT $LN218@DXUTTraceW
$LN3@DXUTTraceW:
; Line 780
  0091f	b8 00 00 00 00	 mov	 eax, OFFSET $SG152936
  00924	eb 0c		 jmp	 SHORT $LN218@DXUTTraceW
$LN2@DXUTTraceW:
; Line 781
  00926	b8 00 00 00 00	 mov	 eax, OFFSET $SG152938
  0092b	eb 05		 jmp	 SHORT $LN218@DXUTTraceW
$LN1@DXUTTraceW:
; Line 783
  0092d	b8 00 00 00 00	 mov	 eax, OFFSET $SG152940
$LN218@DXUTTraceW:
; Line 785
  00932	8b e5		 mov	 esp, ebp
  00934	5d		 pop	 ebp
  00935	c2 04 00	 ret	 4
$LN228@DXUTTraceW:
  00938	00 00 00 00	 DD	 $LN215@DXUTTraceW
  0093c	00 00 00 00	 DD	 $LN214@DXUTTraceW
  00940	00 00 00 00	 DD	 $LN213@DXUTTraceW
  00944	00 00 00 00	 DD	 $LN212@DXUTTraceW
  00948	00 00 00 00	 DD	 $LN211@DXUTTraceW
  0094c	00 00 00 00	 DD	 $LN210@DXUTTraceW
  00950	00 00 00 00	 DD	 $LN209@DXUTTraceW
  00954	00 00 00 00	 DD	 $LN208@DXUTTraceW
  00958	00 00 00 00	 DD	 $LN207@DXUTTraceW
  0095c	00 00 00 00	 DD	 $LN206@DXUTTraceW
  00960	00 00 00 00	 DD	 $LN205@DXUTTraceW
  00964	00 00 00 00	 DD	 $LN204@DXUTTraceW
  00968	00 00 00 00	 DD	 $LN203@DXUTTraceW
  0096c	00 00 00 00	 DD	 $LN202@DXUTTraceW
  00970	00 00 00 00	 DD	 $LN201@DXUTTraceW
  00974	00 00 00 00	 DD	 $LN200@DXUTTraceW
  00978	00 00 00 00	 DD	 $LN197@DXUTTraceW
  0097c	00 00 00 00	 DD	 $LN199@DXUTTraceW
  00980	00 00 00 00	 DD	 $LN196@DXUTTraceW
  00984	00 00 00 00	 DD	 $LN195@DXUTTraceW
  00988	00 00 00 00	 DD	 $LN198@DXUTTraceW
  0098c	00 00 00 00	 DD	 $LN194@DXUTTraceW
  00990	00 00 00 00	 DD	 $LN193@DXUTTraceW
  00994	00 00 00 00	 DD	 $LN192@DXUTTraceW
  00998	00 00 00 00	 DD	 $LN191@DXUTTraceW
  0099c	00 00 00 00	 DD	 $LN190@DXUTTraceW
  009a0	00 00 00 00	 DD	 $LN189@DXUTTraceW
  009a4	00 00 00 00	 DD	 $LN188@DXUTTraceW
  009a8	00 00 00 00	 DD	 $LN187@DXUTTraceW
  009ac	00 00 00 00	 DD	 $LN186@DXUTTraceW
  009b0	00 00 00 00	 DD	 $LN185@DXUTTraceW
  009b4	00 00 00 00	 DD	 $LN184@DXUTTraceW
  009b8	00 00 00 00	 DD	 $LN183@DXUTTraceW
  009bc	00 00 00 00	 DD	 $LN182@DXUTTraceW
  009c0	00 00 00 00	 DD	 $LN181@DXUTTraceW
  009c4	00 00 00 00	 DD	 $LN180@DXUTTraceW
  009c8	00 00 00 00	 DD	 $LN179@DXUTTraceW
  009cc	00 00 00 00	 DD	 $LN178@DXUTTraceW
  009d0	00 00 00 00	 DD	 $LN177@DXUTTraceW
  009d4	00 00 00 00	 DD	 $LN176@DXUTTraceW
  009d8	00 00 00 00	 DD	 $LN175@DXUTTraceW
  009dc	00 00 00 00	 DD	 $LN174@DXUTTraceW
  009e0	00 00 00 00	 DD	 $LN173@DXUTTraceW
  009e4	00 00 00 00	 DD	 $LN172@DXUTTraceW
  009e8	00 00 00 00	 DD	 $LN171@DXUTTraceW
  009ec	00 00 00 00	 DD	 $LN170@DXUTTraceW
  009f0	00 00 00 00	 DD	 $LN169@DXUTTraceW
  009f4	00 00 00 00	 DD	 $LN168@DXUTTraceW
  009f8	00 00 00 00	 DD	 $LN167@DXUTTraceW
  009fc	00 00 00 00	 DD	 $LN166@DXUTTraceW
  00a00	00 00 00 00	 DD	 $LN165@DXUTTraceW
  00a04	00 00 00 00	 DD	 $LN164@DXUTTraceW
  00a08	00 00 00 00	 DD	 $LN163@DXUTTraceW
  00a0c	00 00 00 00	 DD	 $LN162@DXUTTraceW
  00a10	00 00 00 00	 DD	 $LN161@DXUTTraceW
  00a14	00 00 00 00	 DD	 $LN160@DXUTTraceW
  00a18	00 00 00 00	 DD	 $LN159@DXUTTraceW
  00a1c	00 00 00 00	 DD	 $LN158@DXUTTraceW
  00a20	00 00 00 00	 DD	 $LN157@DXUTTraceW
  00a24	00 00 00 00	 DD	 $LN156@DXUTTraceW
  00a28	00 00 00 00	 DD	 $LN155@DXUTTraceW
  00a2c	00 00 00 00	 DD	 $LN154@DXUTTraceW
  00a30	00 00 00 00	 DD	 $LN153@DXUTTraceW
  00a34	00 00 00 00	 DD	 $LN152@DXUTTraceW
  00a38	00 00 00 00	 DD	 $LN151@DXUTTraceW
  00a3c	00 00 00 00	 DD	 $LN150@DXUTTraceW
  00a40	00 00 00 00	 DD	 $LN149@DXUTTraceW
  00a44	00 00 00 00	 DD	 $LN148@DXUTTraceW
  00a48	00 00 00 00	 DD	 $LN147@DXUTTraceW
  00a4c	00 00 00 00	 DD	 $LN146@DXUTTraceW
  00a50	00 00 00 00	 DD	 $LN145@DXUTTraceW
  00a54	00 00 00 00	 DD	 $LN144@DXUTTraceW
  00a58	00 00 00 00	 DD	 $LN143@DXUTTraceW
  00a5c	00 00 00 00	 DD	 $LN142@DXUTTraceW
  00a60	00 00 00 00	 DD	 $LN141@DXUTTraceW
  00a64	00 00 00 00	 DD	 $LN140@DXUTTraceW
  00a68	00 00 00 00	 DD	 $LN139@DXUTTraceW
  00a6c	00 00 00 00	 DD	 $LN138@DXUTTraceW
  00a70	00 00 00 00	 DD	 $LN137@DXUTTraceW
  00a74	00 00 00 00	 DD	 $LN136@DXUTTraceW
  00a78	00 00 00 00	 DD	 $LN135@DXUTTraceW
  00a7c	00 00 00 00	 DD	 $LN134@DXUTTraceW
  00a80	00 00 00 00	 DD	 $LN133@DXUTTraceW
  00a84	00 00 00 00	 DD	 $LN132@DXUTTraceW
  00a88	00 00 00 00	 DD	 $LN131@DXUTTraceW
  00a8c	00 00 00 00	 DD	 $LN130@DXUTTraceW
  00a90	00 00 00 00	 DD	 $LN129@DXUTTraceW
  00a94	00 00 00 00	 DD	 $LN128@DXUTTraceW
  00a98	00 00 00 00	 DD	 $LN127@DXUTTraceW
  00a9c	00 00 00 00	 DD	 $LN126@DXUTTraceW
  00aa0	00 00 00 00	 DD	 $LN1@DXUTTraceW
$LN224@DXUTTraceW:
  00aa4	00		 DB	 0
  00aa5	01		 DB	 1
  00aa6	02		 DB	 2
  00aa7	03		 DB	 3
  00aa8	5a		 DB	 90			; 0000005aH
  00aa9	04		 DB	 4
  00aaa	05		 DB	 5
  00aab	06		 DB	 6
  00aac	07		 DB	 7
  00aad	5a		 DB	 90			; 0000005aH
  00aae	08		 DB	 8
  00aaf	09		 DB	 9
  00ab0	0a		 DB	 10			; 0000000aH
  00ab1	0b		 DB	 11			; 0000000bH
  00ab2	0c		 DB	 12			; 0000000cH
  00ab3	0d		 DB	 13			; 0000000dH
  00ab4	0e		 DB	 14			; 0000000eH
  00ab5	0f		 DB	 15			; 0000000fH
  00ab6	10		 DB	 16			; 00000010H
  00ab7	11		 DB	 17			; 00000011H
  00ab8	12		 DB	 18			; 00000012H
  00ab9	13		 DB	 19			; 00000013H
  00aba	14		 DB	 20			; 00000014H
  00abb	5a		 DB	 90			; 0000005aH
  00abc	15		 DB	 21			; 00000015H
  00abd	5a		 DB	 90			; 0000005aH
  00abe	16		 DB	 22			; 00000016H
  00abf	17		 DB	 23			; 00000017H
  00ac0	18		 DB	 24			; 00000018H
  00ac1	19		 DB	 25			; 00000019H
  00ac2	1a		 DB	 26			; 0000001aH
  00ac3	1b		 DB	 27			; 0000001bH
  00ac4	1c		 DB	 28			; 0000001cH
  00ac5	1d		 DB	 29			; 0000001dH
  00ac6	1e		 DB	 30			; 0000001eH
  00ac7	1f		 DB	 31			; 0000001fH
  00ac8	20		 DB	 32			; 00000020H
  00ac9	5a		 DB	 90			; 0000005aH
  00aca	21		 DB	 33			; 00000021H
  00acb	22		 DB	 34			; 00000022H
  00acc	23		 DB	 35			; 00000023H
  00acd	5a		 DB	 90			; 0000005aH
  00ace	24		 DB	 36			; 00000024H
  00acf	25		 DB	 37			; 00000025H
  00ad0	26		 DB	 38			; 00000026H
  00ad1	27		 DB	 39			; 00000027H
  00ad2	28		 DB	 40			; 00000028H
  00ad3	29		 DB	 41			; 00000029H
  00ad4	2a		 DB	 42			; 0000002aH
  00ad5	2b		 DB	 43			; 0000002bH
  00ad6	2c		 DB	 44			; 0000002cH
  00ad7	2d		 DB	 45			; 0000002dH
  00ad8	5a		 DB	 90			; 0000005aH
  00ad9	5a		 DB	 90			; 0000005aH
  00ada	5a		 DB	 90			; 0000005aH
  00adb	2e		 DB	 46			; 0000002eH
  00adc	5a		 DB	 90			; 0000005aH
  00add	2f		 DB	 47			; 0000002fH
  00ade	5a		 DB	 90			; 0000005aH
  00adf	5a		 DB	 90			; 0000005aH
  00ae0	5a		 DB	 90			; 0000005aH
  00ae1	30		 DB	 48			; 00000030H
  00ae2	5a		 DB	 90			; 0000005aH
  00ae3	5a		 DB	 90			; 0000005aH
  00ae4	5a		 DB	 90			; 0000005aH
  00ae5	31		 DB	 49			; 00000031H
  00ae6	5a		 DB	 90			; 0000005aH
  00ae7	5a		 DB	 90			; 0000005aH
  00ae8	32		 DB	 50			; 00000032H
  00ae9	5a		 DB	 90			; 0000005aH
  00aea	33		 DB	 51			; 00000033H
  00aeb	34		 DB	 52			; 00000034H
  00aec	35		 DB	 53			; 00000035H
  00aed	5a		 DB	 90			; 0000005aH
  00aee	36		 DB	 54			; 00000036H
  00aef	37		 DB	 55			; 00000037H
  00af0	5a		 DB	 90			; 0000005aH
  00af1	5a		 DB	 90			; 0000005aH
  00af2	38		 DB	 56			; 00000038H
  00af3	5a		 DB	 90			; 0000005aH
  00af4	39		 DB	 57			; 00000039H
  00af5	3a		 DB	 58			; 0000003aH
  00af6	3b		 DB	 59			; 0000003bH
  00af7	3c		 DB	 60			; 0000003cH
  00af8	3d		 DB	 61			; 0000003dH
  00af9	3e		 DB	 62			; 0000003eH
  00afa	5a		 DB	 90			; 0000005aH
  00afb	5a		 DB	 90			; 0000005aH
  00afc	5a		 DB	 90			; 0000005aH
  00afd	5a		 DB	 90			; 0000005aH
  00afe	5a		 DB	 90			; 0000005aH
  00aff	5a		 DB	 90			; 0000005aH
  00b00	5a		 DB	 90			; 0000005aH
  00b01	5a		 DB	 90			; 0000005aH
  00b02	5a		 DB	 90			; 0000005aH
  00b03	5a		 DB	 90			; 0000005aH
  00b04	5a		 DB	 90			; 0000005aH
  00b05	5a		 DB	 90			; 0000005aH
  00b06	5a		 DB	 90			; 0000005aH
  00b07	5a		 DB	 90			; 0000005aH
  00b08	5a		 DB	 90			; 0000005aH
  00b09	5a		 DB	 90			; 0000005aH
  00b0a	5a		 DB	 90			; 0000005aH
  00b0b	5a		 DB	 90			; 0000005aH
  00b0c	5a		 DB	 90			; 0000005aH
  00b0d	5a		 DB	 90			; 0000005aH
  00b0e	5a		 DB	 90			; 0000005aH
  00b0f	5a		 DB	 90			; 0000005aH
  00b10	5a		 DB	 90			; 0000005aH
  00b11	5a		 DB	 90			; 0000005aH
  00b12	5a		 DB	 90			; 0000005aH
  00b13	5a		 DB	 90			; 0000005aH
  00b14	5a		 DB	 90			; 0000005aH
  00b15	5a		 DB	 90			; 0000005aH
  00b16	5a		 DB	 90			; 0000005aH
  00b17	5a		 DB	 90			; 0000005aH
  00b18	5a		 DB	 90			; 0000005aH
  00b19	5a		 DB	 90			; 0000005aH
  00b1a	5a		 DB	 90			; 0000005aH
  00b1b	5a		 DB	 90			; 0000005aH
  00b1c	5a		 DB	 90			; 0000005aH
  00b1d	5a		 DB	 90			; 0000005aH
  00b1e	5a		 DB	 90			; 0000005aH
  00b1f	3f		 DB	 63			; 0000003fH
  00b20	40		 DB	 64			; 00000040H
  00b21	41		 DB	 65			; 00000041H
  00b22	42		 DB	 66			; 00000042H
  00b23	43		 DB	 67			; 00000043H
  00b24	44		 DB	 68			; 00000044H
  00b25	45		 DB	 69			; 00000045H
  00b26	46		 DB	 70			; 00000046H
  00b27	47		 DB	 71			; 00000047H
  00b28	48		 DB	 72			; 00000048H
  00b29	49		 DB	 73			; 00000049H
  00b2a	4a		 DB	 74			; 0000004aH
  00b2b	4b		 DB	 75			; 0000004bH
  00b2c	4c		 DB	 76			; 0000004cH
  00b2d	5a		 DB	 90			; 0000005aH
  00b2e	5a		 DB	 90			; 0000005aH
  00b2f	5a		 DB	 90			; 0000005aH
  00b30	5a		 DB	 90			; 0000005aH
  00b31	5a		 DB	 90			; 0000005aH
  00b32	5a		 DB	 90			; 0000005aH
  00b33	5a		 DB	 90			; 0000005aH
  00b34	5a		 DB	 90			; 0000005aH
  00b35	5a		 DB	 90			; 0000005aH
  00b36	5a		 DB	 90			; 0000005aH
  00b37	5a		 DB	 90			; 0000005aH
  00b38	5a		 DB	 90			; 0000005aH
  00b39	5a		 DB	 90			; 0000005aH
  00b3a	5a		 DB	 90			; 0000005aH
  00b3b	5a		 DB	 90			; 0000005aH
  00b3c	5a		 DB	 90			; 0000005aH
  00b3d	5a		 DB	 90			; 0000005aH
  00b3e	5a		 DB	 90			; 0000005aH
  00b3f	5a		 DB	 90			; 0000005aH
  00b40	5a		 DB	 90			; 0000005aH
  00b41	5a		 DB	 90			; 0000005aH
  00b42	5a		 DB	 90			; 0000005aH
  00b43	5a		 DB	 90			; 0000005aH
  00b44	4d		 DB	 77			; 0000004dH
  00b45	4e		 DB	 78			; 0000004eH
  00b46	4f		 DB	 79			; 0000004fH
  00b47	50		 DB	 80			; 00000050H
  00b48	51		 DB	 81			; 00000051H
  00b49	52		 DB	 82			; 00000052H
  00b4a	53		 DB	 83			; 00000053H
  00b4b	54		 DB	 84			; 00000054H
  00b4c	55		 DB	 85			; 00000055H
  00b4d	56		 DB	 86			; 00000056H
  00b4e	5a		 DB	 90			; 0000005aH
  00b4f	57		 DB	 87			; 00000057H
  00b50	58		 DB	 88			; 00000058H
  00b51	59		 DB	 89			; 00000059H
  00b52	8b ff		 npad	 2
$LN229@DXUTTraceW:
  00b54	00 00 00 00	 DD	 $LN124@DXUTTraceW
  00b58	00 00 00 00	 DD	 $LN123@DXUTTraceW
  00b5c	00 00 00 00	 DD	 $LN122@DXUTTraceW
  00b60	00 00 00 00	 DD	 $LN121@DXUTTraceW
  00b64	00 00 00 00	 DD	 $LN120@DXUTTraceW
  00b68	00 00 00 00	 DD	 $LN119@DXUTTraceW
  00b6c	00 00 00 00	 DD	 $LN118@DXUTTraceW
  00b70	00 00 00 00	 DD	 $LN117@DXUTTraceW
  00b74	00 00 00 00	 DD	 $LN116@DXUTTraceW
  00b78	00 00 00 00	 DD	 $LN115@DXUTTraceW
  00b7c	00 00 00 00	 DD	 $LN114@DXUTTraceW
  00b80	00 00 00 00	 DD	 $LN113@DXUTTraceW
  00b84	00 00 00 00	 DD	 $LN112@DXUTTraceW
  00b88	00 00 00 00	 DD	 $LN111@DXUTTraceW
  00b8c	00 00 00 00	 DD	 $LN110@DXUTTraceW
  00b90	00 00 00 00	 DD	 $LN109@DXUTTraceW
  00b94	00 00 00 00	 DD	 $LN108@DXUTTraceW
  00b98	00 00 00 00	 DD	 $LN107@DXUTTraceW
  00b9c	00 00 00 00	 DD	 $LN106@DXUTTraceW
  00ba0	00 00 00 00	 DD	 $LN105@DXUTTraceW
  00ba4	00 00 00 00	 DD	 $LN104@DXUTTraceW
  00ba8	00 00 00 00	 DD	 $LN103@DXUTTraceW
  00bac	00 00 00 00	 DD	 $LN102@DXUTTraceW
  00bb0	00 00 00 00	 DD	 $LN101@DXUTTraceW
  00bb4	00 00 00 00	 DD	 $LN100@DXUTTraceW
  00bb8	00 00 00 00	 DD	 $LN99@DXUTTraceW
  00bbc	00 00 00 00	 DD	 $LN98@DXUTTraceW
  00bc0	00 00 00 00	 DD	 $LN97@DXUTTraceW
  00bc4	00 00 00 00	 DD	 $LN96@DXUTTraceW
  00bc8	00 00 00 00	 DD	 $LN95@DXUTTraceW
  00bcc	00 00 00 00	 DD	 $LN94@DXUTTraceW
  00bd0	00 00 00 00	 DD	 $LN93@DXUTTraceW
  00bd4	00 00 00 00	 DD	 $LN92@DXUTTraceW
  00bd8	00 00 00 00	 DD	 $LN91@DXUTTraceW
  00bdc	00 00 00 00	 DD	 $LN90@DXUTTraceW
  00be0	00 00 00 00	 DD	 $LN89@DXUTTraceW
  00be4	00 00 00 00	 DD	 $LN88@DXUTTraceW
  00be8	00 00 00 00	 DD	 $LN87@DXUTTraceW
  00bec	00 00 00 00	 DD	 $LN86@DXUTTraceW
  00bf0	00 00 00 00	 DD	 $LN1@DXUTTraceW
$LN225@DXUTTraceW:
  00bf4	00		 DB	 0
  00bf5	01		 DB	 1
  00bf6	02		 DB	 2
  00bf7	03		 DB	 3
  00bf8	04		 DB	 4
  00bf9	05		 DB	 5
  00bfa	06		 DB	 6
  00bfb	07		 DB	 7
  00bfc	27		 DB	 39			; 00000027H
  00bfd	08		 DB	 8
  00bfe	27		 DB	 39			; 00000027H
  00bff	27		 DB	 39			; 00000027H
  00c00	27		 DB	 39			; 00000027H
  00c01	09		 DB	 9
  00c02	0a		 DB	 10			; 0000000aH
  00c03	0b		 DB	 11			; 0000000bH
  00c04	0c		 DB	 12			; 0000000cH
  00c05	0d		 DB	 13			; 0000000dH
  00c06	0e		 DB	 14			; 0000000eH
  00c07	0f		 DB	 15			; 0000000fH
  00c08	10		 DB	 16			; 00000010H
  00c09	11		 DB	 17			; 00000011H
  00c0a	12		 DB	 18			; 00000012H
  00c0b	13		 DB	 19			; 00000013H
  00c0c	27		 DB	 39			; 00000027H
  00c0d	27		 DB	 39			; 00000027H
  00c0e	27		 DB	 39			; 00000027H
  00c0f	27		 DB	 39			; 00000027H
  00c10	27		 DB	 39			; 00000027H
  00c11	27		 DB	 39			; 00000027H
  00c12	27		 DB	 39			; 00000027H
  00c13	14		 DB	 20			; 00000014H
  00c14	15		 DB	 21			; 00000015H
  00c15	16		 DB	 22			; 00000016H
  00c16	17		 DB	 23			; 00000017H
  00c17	18		 DB	 24			; 00000018H
  00c18	19		 DB	 25			; 00000019H
  00c19	1a		 DB	 26			; 0000001aH
  00c1a	1b		 DB	 27			; 0000001bH
  00c1b	1c		 DB	 28			; 0000001cH
  00c1c	1d		 DB	 29			; 0000001dH
  00c1d	1e		 DB	 30			; 0000001eH
  00c1e	27		 DB	 39			; 00000027H
  00c1f	27		 DB	 39			; 00000027H
  00c20	27		 DB	 39			; 00000027H
  00c21	27		 DB	 39			; 00000027H
  00c22	27		 DB	 39			; 00000027H
  00c23	27		 DB	 39			; 00000027H
  00c24	27		 DB	 39			; 00000027H
  00c25	27		 DB	 39			; 00000027H
  00c26	1f		 DB	 31			; 0000001fH
  00c27	20		 DB	 32			; 00000020H
  00c28	21		 DB	 33			; 00000021H
  00c29	22		 DB	 34			; 00000022H
  00c2a	23		 DB	 35			; 00000023H
  00c2b	24		 DB	 36			; 00000024H
  00c2c	25		 DB	 37			; 00000025H
  00c2d	27		 DB	 39			; 00000027H
  00c2e	27		 DB	 39			; 00000027H
  00c2f	27		 DB	 39			; 00000027H
  00c30	27		 DB	 39			; 00000027H
  00c31	27		 DB	 39			; 00000027H
  00c32	27		 DB	 39			; 00000027H
  00c33	27		 DB	 39			; 00000027H
  00c34	27		 DB	 39			; 00000027H
  00c35	27		 DB	 39			; 00000027H
  00c36	27		 DB	 39			; 00000027H
  00c37	27		 DB	 39			; 00000027H
  00c38	27		 DB	 39			; 00000027H
  00c39	27		 DB	 39			; 00000027H
  00c3a	27		 DB	 39			; 00000027H
  00c3b	27		 DB	 39			; 00000027H
  00c3c	27		 DB	 39			; 00000027H
  00c3d	27		 DB	 39			; 00000027H
  00c3e	27		 DB	 39			; 00000027H
  00c3f	27		 DB	 39			; 00000027H
  00c40	27		 DB	 39			; 00000027H
  00c41	27		 DB	 39			; 00000027H
  00c42	27		 DB	 39			; 00000027H
  00c43	27		 DB	 39			; 00000027H
  00c44	27		 DB	 39			; 00000027H
  00c45	27		 DB	 39			; 00000027H
  00c46	27		 DB	 39			; 00000027H
  00c47	27		 DB	 39			; 00000027H
  00c48	27		 DB	 39			; 00000027H
  00c49	27		 DB	 39			; 00000027H
  00c4a	27		 DB	 39			; 00000027H
  00c4b	27		 DB	 39			; 00000027H
  00c4c	27		 DB	 39			; 00000027H
  00c4d	27		 DB	 39			; 00000027H
  00c4e	27		 DB	 39			; 00000027H
  00c4f	27		 DB	 39			; 00000027H
  00c50	27		 DB	 39			; 00000027H
  00c51	27		 DB	 39			; 00000027H
  00c52	27		 DB	 39			; 00000027H
  00c53	27		 DB	 39			; 00000027H
  00c54	27		 DB	 39			; 00000027H
  00c55	27		 DB	 39			; 00000027H
  00c56	27		 DB	 39			; 00000027H
  00c57	27		 DB	 39			; 00000027H
  00c58	27		 DB	 39			; 00000027H
  00c59	27		 DB	 39			; 00000027H
  00c5a	27		 DB	 39			; 00000027H
  00c5b	27		 DB	 39			; 00000027H
  00c5c	27		 DB	 39			; 00000027H
  00c5d	27		 DB	 39			; 00000027H
  00c5e	27		 DB	 39			; 00000027H
  00c5f	27		 DB	 39			; 00000027H
  00c60	27		 DB	 39			; 00000027H
  00c61	27		 DB	 39			; 00000027H
  00c62	27		 DB	 39			; 00000027H
  00c63	27		 DB	 39			; 00000027H
  00c64	27		 DB	 39			; 00000027H
  00c65	27		 DB	 39			; 00000027H
  00c66	27		 DB	 39			; 00000027H
  00c67	27		 DB	 39			; 00000027H
  00c68	27		 DB	 39			; 00000027H
  00c69	27		 DB	 39			; 00000027H
  00c6a	27		 DB	 39			; 00000027H
  00c6b	27		 DB	 39			; 00000027H
  00c6c	27		 DB	 39			; 00000027H
  00c6d	27		 DB	 39			; 00000027H
  00c6e	27		 DB	 39			; 00000027H
  00c6f	27		 DB	 39			; 00000027H
  00c70	27		 DB	 39			; 00000027H
  00c71	27		 DB	 39			; 00000027H
  00c72	27		 DB	 39			; 00000027H
  00c73	27		 DB	 39			; 00000027H
  00c74	27		 DB	 39			; 00000027H
  00c75	27		 DB	 39			; 00000027H
  00c76	27		 DB	 39			; 00000027H
  00c77	27		 DB	 39			; 00000027H
  00c78	27		 DB	 39			; 00000027H
  00c79	27		 DB	 39			; 00000027H
  00c7a	27		 DB	 39			; 00000027H
  00c7b	27		 DB	 39			; 00000027H
  00c7c	27		 DB	 39			; 00000027H
  00c7d	27		 DB	 39			; 00000027H
  00c7e	27		 DB	 39			; 00000027H
  00c7f	27		 DB	 39			; 00000027H
  00c80	27		 DB	 39			; 00000027H
  00c81	27		 DB	 39			; 00000027H
  00c82	27		 DB	 39			; 00000027H
  00c83	27		 DB	 39			; 00000027H
  00c84	27		 DB	 39			; 00000027H
  00c85	27		 DB	 39			; 00000027H
  00c86	27		 DB	 39			; 00000027H
  00c87	27		 DB	 39			; 00000027H
  00c88	27		 DB	 39			; 00000027H
  00c89	27		 DB	 39			; 00000027H
  00c8a	27		 DB	 39			; 00000027H
  00c8b	27		 DB	 39			; 00000027H
  00c8c	27		 DB	 39			; 00000027H
  00c8d	27		 DB	 39			; 00000027H
  00c8e	27		 DB	 39			; 00000027H
  00c8f	27		 DB	 39			; 00000027H
  00c90	27		 DB	 39			; 00000027H
  00c91	27		 DB	 39			; 00000027H
  00c92	27		 DB	 39			; 00000027H
  00c93	27		 DB	 39			; 00000027H
  00c94	27		 DB	 39			; 00000027H
  00c95	27		 DB	 39			; 00000027H
  00c96	27		 DB	 39			; 00000027H
  00c97	27		 DB	 39			; 00000027H
  00c98	27		 DB	 39			; 00000027H
  00c99	27		 DB	 39			; 00000027H
  00c9a	27		 DB	 39			; 00000027H
  00c9b	27		 DB	 39			; 00000027H
  00c9c	27		 DB	 39			; 00000027H
  00c9d	27		 DB	 39			; 00000027H
  00c9e	27		 DB	 39			; 00000027H
  00c9f	27		 DB	 39			; 00000027H
  00ca0	27		 DB	 39			; 00000027H
  00ca1	27		 DB	 39			; 00000027H
  00ca2	27		 DB	 39			; 00000027H
  00ca3	27		 DB	 39			; 00000027H
  00ca4	27		 DB	 39			; 00000027H
  00ca5	27		 DB	 39			; 00000027H
  00ca6	27		 DB	 39			; 00000027H
  00ca7	27		 DB	 39			; 00000027H
  00ca8	27		 DB	 39			; 00000027H
  00ca9	27		 DB	 39			; 00000027H
  00caa	27		 DB	 39			; 00000027H
  00cab	27		 DB	 39			; 00000027H
  00cac	27		 DB	 39			; 00000027H
  00cad	27		 DB	 39			; 00000027H
  00cae	27		 DB	 39			; 00000027H
  00caf	27		 DB	 39			; 00000027H
  00cb0	27		 DB	 39			; 00000027H
  00cb1	27		 DB	 39			; 00000027H
  00cb2	27		 DB	 39			; 00000027H
  00cb3	27		 DB	 39			; 00000027H
  00cb4	27		 DB	 39			; 00000027H
  00cb5	27		 DB	 39			; 00000027H
  00cb6	27		 DB	 39			; 00000027H
  00cb7	27		 DB	 39			; 00000027H
  00cb8	27		 DB	 39			; 00000027H
  00cb9	27		 DB	 39			; 00000027H
  00cba	27		 DB	 39			; 00000027H
  00cbb	27		 DB	 39			; 00000027H
  00cbc	27		 DB	 39			; 00000027H
  00cbd	27		 DB	 39			; 00000027H
  00cbe	27		 DB	 39			; 00000027H
  00cbf	27		 DB	 39			; 00000027H
  00cc0	27		 DB	 39			; 00000027H
  00cc1	27		 DB	 39			; 00000027H
  00cc2	27		 DB	 39			; 00000027H
  00cc3	27		 DB	 39			; 00000027H
  00cc4	27		 DB	 39			; 00000027H
  00cc5	27		 DB	 39			; 00000027H
  00cc6	27		 DB	 39			; 00000027H
  00cc7	27		 DB	 39			; 00000027H
  00cc8	27		 DB	 39			; 00000027H
  00cc9	27		 DB	 39			; 00000027H
  00cca	27		 DB	 39			; 00000027H
  00ccb	27		 DB	 39			; 00000027H
  00ccc	27		 DB	 39			; 00000027H
  00ccd	27		 DB	 39			; 00000027H
  00cce	27		 DB	 39			; 00000027H
  00ccf	27		 DB	 39			; 00000027H
  00cd0	27		 DB	 39			; 00000027H
  00cd1	27		 DB	 39			; 00000027H
  00cd2	27		 DB	 39			; 00000027H
  00cd3	27		 DB	 39			; 00000027H
  00cd4	27		 DB	 39			; 00000027H
  00cd5	26		 DB	 38			; 00000026H
  00cd6	8b ff		 npad	 2
$LN230@DXUTTraceW:
  00cd8	00 00 00 00	 DD	 $LN84@DXUTTraceW
  00cdc	00 00 00 00	 DD	 $LN83@DXUTTraceW
  00ce0	00 00 00 00	 DD	 $LN82@DXUTTraceW
  00ce4	00 00 00 00	 DD	 $LN81@DXUTTraceW
  00ce8	00 00 00 00	 DD	 $LN80@DXUTTraceW
  00cec	00 00 00 00	 DD	 $LN79@DXUTTraceW
  00cf0	00 00 00 00	 DD	 $LN78@DXUTTraceW
  00cf4	00 00 00 00	 DD	 $LN77@DXUTTraceW
  00cf8	00 00 00 00	 DD	 $LN76@DXUTTraceW
  00cfc	00 00 00 00	 DD	 $LN75@DXUTTraceW
  00d00	00 00 00 00	 DD	 $LN74@DXUTTraceW
  00d04	00 00 00 00	 DD	 $LN73@DXUTTraceW
  00d08	00 00 00 00	 DD	 $LN72@DXUTTraceW
  00d0c	00 00 00 00	 DD	 $LN71@DXUTTraceW
  00d10	00 00 00 00	 DD	 $LN70@DXUTTraceW
  00d14	00 00 00 00	 DD	 $LN69@DXUTTraceW
  00d18	00 00 00 00	 DD	 $LN68@DXUTTraceW
  00d1c	00 00 00 00	 DD	 $LN67@DXUTTraceW
  00d20	00 00 00 00	 DD	 $LN66@DXUTTraceW
  00d24	00 00 00 00	 DD	 $LN65@DXUTTraceW
  00d28	00 00 00 00	 DD	 $LN64@DXUTTraceW
  00d2c	00 00 00 00	 DD	 $LN63@DXUTTraceW
  00d30	00 00 00 00	 DD	 $LN62@DXUTTraceW
  00d34	00 00 00 00	 DD	 $LN61@DXUTTraceW
  00d38	00 00 00 00	 DD	 $LN60@DXUTTraceW
  00d3c	00 00 00 00	 DD	 $LN59@DXUTTraceW
  00d40	00 00 00 00	 DD	 $LN58@DXUTTraceW
  00d44	00 00 00 00	 DD	 $LN57@DXUTTraceW
  00d48	00 00 00 00	 DD	 $LN56@DXUTTraceW
  00d4c	00 00 00 00	 DD	 $LN55@DXUTTraceW
  00d50	00 00 00 00	 DD	 $LN54@DXUTTraceW
  00d54	00 00 00 00	 DD	 $LN53@DXUTTraceW
  00d58	00 00 00 00	 DD	 $LN52@DXUTTraceW
  00d5c	00 00 00 00	 DD	 $LN51@DXUTTraceW
  00d60	00 00 00 00	 DD	 $LN50@DXUTTraceW
  00d64	00 00 00 00	 DD	 $LN49@DXUTTraceW
  00d68	00 00 00 00	 DD	 $LN48@DXUTTraceW
  00d6c	00 00 00 00	 DD	 $LN47@DXUTTraceW
  00d70	00 00 00 00	 DD	 $LN46@DXUTTraceW
  00d74	00 00 00 00	 DD	 $LN45@DXUTTraceW
  00d78	00 00 00 00	 DD	 $LN44@DXUTTraceW
  00d7c	00 00 00 00	 DD	 $LN43@DXUTTraceW
  00d80	00 00 00 00	 DD	 $LN42@DXUTTraceW
  00d84	00 00 00 00	 DD	 $LN41@DXUTTraceW
  00d88	00 00 00 00	 DD	 $LN40@DXUTTraceW
  00d8c	00 00 00 00	 DD	 $LN39@DXUTTraceW
  00d90	00 00 00 00	 DD	 $LN36@DXUTTraceW
  00d94	00 00 00 00	 DD	 $LN38@DXUTTraceW
  00d98	00 00 00 00	 DD	 $LN35@DXUTTraceW
  00d9c	00 00 00 00	 DD	 $LN37@DXUTTraceW
  00da0	00 00 00 00	 DD	 $LN34@DXUTTraceW
  00da4	00 00 00 00	 DD	 $LN33@DXUTTraceW
  00da8	00 00 00 00	 DD	 $LN32@DXUTTraceW
  00dac	00 00 00 00	 DD	 $LN1@DXUTTraceW
$LN226@DXUTTraceW:
  00db0	00		 DB	 0
  00db1	01		 DB	 1
  00db2	02		 DB	 2
  00db3	03		 DB	 3
  00db4	04		 DB	 4
  00db5	05		 DB	 5
  00db6	06		 DB	 6
  00db7	07		 DB	 7
  00db8	08		 DB	 8
  00db9	09		 DB	 9
  00dba	0a		 DB	 10			; 0000000aH
  00dbb	0b		 DB	 11			; 0000000bH
  00dbc	0c		 DB	 12			; 0000000cH
  00dbd	35		 DB	 53			; 00000035H
  00dbe	35		 DB	 53			; 00000035H
  00dbf	0d		 DB	 13			; 0000000dH
  00dc0	0e		 DB	 14			; 0000000eH
  00dc1	0f		 DB	 15			; 0000000fH
  00dc2	10		 DB	 16			; 00000010H
  00dc3	11		 DB	 17			; 00000011H
  00dc4	12		 DB	 18			; 00000012H
  00dc5	13		 DB	 19			; 00000013H
  00dc6	35		 DB	 53			; 00000035H
  00dc7	14		 DB	 20			; 00000014H
  00dc8	15		 DB	 21			; 00000015H
  00dc9	35		 DB	 53			; 00000035H
  00dca	35		 DB	 53			; 00000035H
  00dcb	35		 DB	 53			; 00000035H
  00dcc	35		 DB	 53			; 00000035H
  00dcd	35		 DB	 53			; 00000035H
  00dce	35		 DB	 53			; 00000035H
  00dcf	16		 DB	 22			; 00000016H
  00dd0	17		 DB	 23			; 00000017H
  00dd1	18		 DB	 24			; 00000018H
  00dd2	19		 DB	 25			; 00000019H
  00dd3	1a		 DB	 26			; 0000001aH
  00dd4	1b		 DB	 27			; 0000001bH
  00dd5	1c		 DB	 28			; 0000001cH
  00dd6	1d		 DB	 29			; 0000001dH
  00dd7	1e		 DB	 30			; 0000001eH
  00dd8	1f		 DB	 31			; 0000001fH
  00dd9	35		 DB	 53			; 00000035H
  00dda	35		 DB	 53			; 00000035H
  00ddb	35		 DB	 53			; 00000035H
  00ddc	35		 DB	 53			; 00000035H
  00ddd	35		 DB	 53			; 00000035H
  00dde	35		 DB	 53			; 00000035H
  00ddf	20		 DB	 32			; 00000020H
  00de0	21		 DB	 33			; 00000021H
  00de1	22		 DB	 34			; 00000022H
  00de2	23		 DB	 35			; 00000023H
  00de3	24		 DB	 36			; 00000024H
  00de4	35		 DB	 53			; 00000035H
  00de5	35		 DB	 53			; 00000035H
  00de6	35		 DB	 53			; 00000035H
  00de7	35		 DB	 53			; 00000035H
  00de8	35		 DB	 53			; 00000035H
  00de9	35		 DB	 53			; 00000035H
  00dea	35		 DB	 53			; 00000035H
  00deb	35		 DB	 53			; 00000035H
  00dec	35		 DB	 53			; 00000035H
  00ded	35		 DB	 53			; 00000035H
  00dee	35		 DB	 53			; 00000035H
  00def	35		 DB	 53			; 00000035H
  00df0	35		 DB	 53			; 00000035H
  00df1	35		 DB	 53			; 00000035H
  00df2	35		 DB	 53			; 00000035H
  00df3	35		 DB	 53			; 00000035H
  00df4	35		 DB	 53			; 00000035H
  00df5	35		 DB	 53			; 00000035H
  00df6	35		 DB	 53			; 00000035H
  00df7	35		 DB	 53			; 00000035H
  00df8	35		 DB	 53			; 00000035H
  00df9	35		 DB	 53			; 00000035H
  00dfa	35		 DB	 53			; 00000035H
  00dfb	35		 DB	 53			; 00000035H
  00dfc	35		 DB	 53			; 00000035H
  00dfd	35		 DB	 53			; 00000035H
  00dfe	35		 DB	 53			; 00000035H
  00dff	35		 DB	 53			; 00000035H
  00e00	35		 DB	 53			; 00000035H
  00e01	35		 DB	 53			; 00000035H
  00e02	35		 DB	 53			; 00000035H
  00e03	35		 DB	 53			; 00000035H
  00e04	35		 DB	 53			; 00000035H
  00e05	35		 DB	 53			; 00000035H
  00e06	35		 DB	 53			; 00000035H
  00e07	35		 DB	 53			; 00000035H
  00e08	35		 DB	 53			; 00000035H
  00e09	35		 DB	 53			; 00000035H
  00e0a	35		 DB	 53			; 00000035H
  00e0b	35		 DB	 53			; 00000035H
  00e0c	35		 DB	 53			; 00000035H
  00e0d	35		 DB	 53			; 00000035H
  00e0e	35		 DB	 53			; 00000035H
  00e0f	35		 DB	 53			; 00000035H
  00e10	35		 DB	 53			; 00000035H
  00e11	35		 DB	 53			; 00000035H
  00e12	35		 DB	 53			; 00000035H
  00e13	35		 DB	 53			; 00000035H
  00e14	35		 DB	 53			; 00000035H
  00e15	35		 DB	 53			; 00000035H
  00e16	35		 DB	 53			; 00000035H
  00e17	35		 DB	 53			; 00000035H
  00e18	35		 DB	 53			; 00000035H
  00e19	35		 DB	 53			; 00000035H
  00e1a	35		 DB	 53			; 00000035H
  00e1b	35		 DB	 53			; 00000035H
  00e1c	35		 DB	 53			; 00000035H
  00e1d	35		 DB	 53			; 00000035H
  00e1e	35		 DB	 53			; 00000035H
  00e1f	35		 DB	 53			; 00000035H
  00e20	35		 DB	 53			; 00000035H
  00e21	35		 DB	 53			; 00000035H
  00e22	35		 DB	 53			; 00000035H
  00e23	35		 DB	 53			; 00000035H
  00e24	35		 DB	 53			; 00000035H
  00e25	35		 DB	 53			; 00000035H
  00e26	35		 DB	 53			; 00000035H
  00e27	35		 DB	 53			; 00000035H
  00e28	35		 DB	 53			; 00000035H
  00e29	35		 DB	 53			; 00000035H
  00e2a	35		 DB	 53			; 00000035H
  00e2b	35		 DB	 53			; 00000035H
  00e2c	35		 DB	 53			; 00000035H
  00e2d	35		 DB	 53			; 00000035H
  00e2e	35		 DB	 53			; 00000035H
  00e2f	35		 DB	 53			; 00000035H
  00e30	25		 DB	 37			; 00000025H
  00e31	26		 DB	 38			; 00000026H
  00e32	27		 DB	 39			; 00000027H
  00e33	28		 DB	 40			; 00000028H
  00e34	29		 DB	 41			; 00000029H
  00e35	2a		 DB	 42			; 0000002aH
  00e36	35		 DB	 53			; 00000035H
  00e37	2b		 DB	 43			; 0000002bH
  00e38	35		 DB	 53			; 00000035H
  00e39	35		 DB	 53			; 00000035H
  00e3a	35		 DB	 53			; 00000035H
  00e3b	35		 DB	 53			; 00000035H
  00e3c	35		 DB	 53			; 00000035H
  00e3d	35		 DB	 53			; 00000035H
  00e3e	35		 DB	 53			; 00000035H
  00e3f	2c		 DB	 44			; 0000002cH
  00e40	2d		 DB	 45			; 0000002dH
  00e41	35		 DB	 53			; 00000035H
  00e42	35		 DB	 53			; 00000035H
  00e43	35		 DB	 53			; 00000035H
  00e44	35		 DB	 53			; 00000035H
  00e45	35		 DB	 53			; 00000035H
  00e46	35		 DB	 53			; 00000035H
  00e47	35		 DB	 53			; 00000035H
  00e48	35		 DB	 53			; 00000035H
  00e49	35		 DB	 53			; 00000035H
  00e4a	35		 DB	 53			; 00000035H
  00e4b	35		 DB	 53			; 00000035H
  00e4c	35		 DB	 53			; 00000035H
  00e4d	35		 DB	 53			; 00000035H
  00e4e	35		 DB	 53			; 00000035H
  00e4f	2e		 DB	 46			; 0000002eH
  00e50	2f		 DB	 47			; 0000002fH
  00e51	30		 DB	 48			; 00000030H
  00e52	31		 DB	 49			; 00000031H
  00e53	35		 DB	 53			; 00000035H
  00e54	35		 DB	 53			; 00000035H
  00e55	35		 DB	 53			; 00000035H
  00e56	35		 DB	 53			; 00000035H
  00e57	35		 DB	 53			; 00000035H
  00e58	35		 DB	 53			; 00000035H
  00e59	35		 DB	 53			; 00000035H
  00e5a	35		 DB	 53			; 00000035H
  00e5b	35		 DB	 53			; 00000035H
  00e5c	35		 DB	 53			; 00000035H
  00e5d	35		 DB	 53			; 00000035H
  00e5e	35		 DB	 53			; 00000035H
  00e5f	35		 DB	 53			; 00000035H
  00e60	32		 DB	 50			; 00000032H
  00e61	35		 DB	 53			; 00000035H
  00e62	35		 DB	 53			; 00000035H
  00e63	35		 DB	 53			; 00000035H
  00e64	35		 DB	 53			; 00000035H
  00e65	35		 DB	 53			; 00000035H
  00e66	35		 DB	 53			; 00000035H
  00e67	35		 DB	 53			; 00000035H
  00e68	35		 DB	 53			; 00000035H
  00e69	35		 DB	 53			; 00000035H
  00e6a	35		 DB	 53			; 00000035H
  00e6b	35		 DB	 53			; 00000035H
  00e6c	35		 DB	 53			; 00000035H
  00e6d	35		 DB	 53			; 00000035H
  00e6e	35		 DB	 53			; 00000035H
  00e6f	33		 DB	 51			; 00000033H
  00e70	35		 DB	 53			; 00000035H
  00e71	35		 DB	 53			; 00000035H
  00e72	35		 DB	 53			; 00000035H
  00e73	35		 DB	 53			; 00000035H
  00e74	35		 DB	 53			; 00000035H
  00e75	35		 DB	 53			; 00000035H
  00e76	35		 DB	 53			; 00000035H
  00e77	35		 DB	 53			; 00000035H
  00e78	35		 DB	 53			; 00000035H
  00e79	35		 DB	 53			; 00000035H
  00e7a	35		 DB	 53			; 00000035H
  00e7b	35		 DB	 53			; 00000035H
  00e7c	35		 DB	 53			; 00000035H
  00e7d	35		 DB	 53			; 00000035H
  00e7e	35		 DB	 53			; 00000035H
  00e7f	35		 DB	 53			; 00000035H
  00e80	35		 DB	 53			; 00000035H
  00e81	35		 DB	 53			; 00000035H
  00e82	35		 DB	 53			; 00000035H
  00e83	35		 DB	 53			; 00000035H
  00e84	35		 DB	 53			; 00000035H
  00e85	35		 DB	 53			; 00000035H
  00e86	35		 DB	 53			; 00000035H
  00e87	35		 DB	 53			; 00000035H
  00e88	35		 DB	 53			; 00000035H
  00e89	35		 DB	 53			; 00000035H
  00e8a	35		 DB	 53			; 00000035H
  00e8b	35		 DB	 53			; 00000035H
  00e8c	35		 DB	 53			; 00000035H
  00e8d	35		 DB	 53			; 00000035H
  00e8e	34		 DB	 52			; 00000034H
  00e8f	90		 npad	 1
$LN231@DXUTTraceW:
  00e90	00 00 00 00	 DD	 $LN30@DXUTTraceW
  00e94	00 00 00 00	 DD	 $LN29@DXUTTraceW
  00e98	00 00 00 00	 DD	 $LN28@DXUTTraceW
  00e9c	00 00 00 00	 DD	 $LN27@DXUTTraceW
  00ea0	00 00 00 00	 DD	 $LN26@DXUTTraceW
  00ea4	00 00 00 00	 DD	 $LN25@DXUTTraceW
  00ea8	00 00 00 00	 DD	 $LN24@DXUTTraceW
  00eac	00 00 00 00	 DD	 $LN23@DXUTTraceW
  00eb0	00 00 00 00	 DD	 $LN22@DXUTTraceW
  00eb4	00 00 00 00	 DD	 $LN21@DXUTTraceW
  00eb8	00 00 00 00	 DD	 $LN20@DXUTTraceW
  00ebc	00 00 00 00	 DD	 $LN19@DXUTTraceW
  00ec0	00 00 00 00	 DD	 $LN18@DXUTTraceW
  00ec4	00 00 00 00	 DD	 $LN17@DXUTTraceW
  00ec8	00 00 00 00	 DD	 $LN16@DXUTTraceW
  00ecc	00 00 00 00	 DD	 $LN15@DXUTTraceW
  00ed0	00 00 00 00	 DD	 $LN14@DXUTTraceW
  00ed4	00 00 00 00	 DD	 $LN13@DXUTTraceW
  00ed8	00 00 00 00	 DD	 $LN12@DXUTTraceW
  00edc	00 00 00 00	 DD	 $LN11@DXUTTraceW
  00ee0	00 00 00 00	 DD	 $LN10@DXUTTraceW
  00ee4	00 00 00 00	 DD	 $LN9@DXUTTraceW
  00ee8	00 00 00 00	 DD	 $LN8@DXUTTraceW
  00eec	00 00 00 00	 DD	 $LN7@DXUTTraceW
  00ef0	00 00 00 00	 DD	 $LN6@DXUTTraceW
  00ef4	00 00 00 00	 DD	 $LN5@DXUTTraceW
  00ef8	00 00 00 00	 DD	 $LN4@DXUTTraceW
  00efc	00 00 00 00	 DD	 $LN3@DXUTTraceW
  00f00	00 00 00 00	 DD	 $LN1@DXUTTraceW
$LN227@DXUTTraceW:
  00f04	00		 DB	 0
  00f05	01		 DB	 1
  00f06	02		 DB	 2
  00f07	03		 DB	 3
  00f08	04		 DB	 4
  00f09	05		 DB	 5
  00f0a	06		 DB	 6
  00f0b	07		 DB	 7
  00f0c	08		 DB	 8
  00f0d	09		 DB	 9
  00f0e	0a		 DB	 10			; 0000000aH
  00f0f	0b		 DB	 11			; 0000000bH
  00f10	0c		 DB	 12			; 0000000cH
  00f11	0d		 DB	 13			; 0000000dH
  00f12	0e		 DB	 14			; 0000000eH
  00f13	0f		 DB	 15			; 0000000fH
  00f14	10		 DB	 16			; 00000010H
  00f15	11		 DB	 17			; 00000011H
  00f16	1c		 DB	 28			; 0000001cH
  00f17	1c		 DB	 28			; 0000001cH
  00f18	1c		 DB	 28			; 0000001cH
  00f19	1c		 DB	 28			; 0000001cH
  00f1a	12		 DB	 18			; 00000012H
  00f1b	13		 DB	 19			; 00000013H
  00f1c	14		 DB	 20			; 00000014H
  00f1d	15		 DB	 21			; 00000015H
  00f1e	1c		 DB	 28			; 0000001cH
  00f1f	1c		 DB	 28			; 0000001cH
  00f20	1c		 DB	 28			; 0000001cH
  00f21	1c		 DB	 28			; 0000001cH
  00f22	1c		 DB	 28			; 0000001cH
  00f23	1c		 DB	 28			; 0000001cH
  00f24	1c		 DB	 28			; 0000001cH
  00f25	1c		 DB	 28			; 0000001cH
  00f26	1c		 DB	 28			; 0000001cH
  00f27	1c		 DB	 28			; 0000001cH
  00f28	1c		 DB	 28			; 0000001cH
  00f29	1c		 DB	 28			; 0000001cH
  00f2a	1c		 DB	 28			; 0000001cH
  00f2b	1c		 DB	 28			; 0000001cH
  00f2c	1c		 DB	 28			; 0000001cH
  00f2d	1c		 DB	 28			; 0000001cH
  00f2e	1c		 DB	 28			; 0000001cH
  00f2f	1c		 DB	 28			; 0000001cH
  00f30	1c		 DB	 28			; 0000001cH
  00f31	1c		 DB	 28			; 0000001cH
  00f32	1c		 DB	 28			; 0000001cH
  00f33	1c		 DB	 28			; 0000001cH
  00f34	1c		 DB	 28			; 0000001cH
  00f35	1c		 DB	 28			; 0000001cH
  00f36	1c		 DB	 28			; 0000001cH
  00f37	1c		 DB	 28			; 0000001cH
  00f38	1c		 DB	 28			; 0000001cH
  00f39	1c		 DB	 28			; 0000001cH
  00f3a	1c		 DB	 28			; 0000001cH
  00f3b	1c		 DB	 28			; 0000001cH
  00f3c	1c		 DB	 28			; 0000001cH
  00f3d	1c		 DB	 28			; 0000001cH
  00f3e	1c		 DB	 28			; 0000001cH
  00f3f	1c		 DB	 28			; 0000001cH
  00f40	1c		 DB	 28			; 0000001cH
  00f41	1c		 DB	 28			; 0000001cH
  00f42	1c		 DB	 28			; 0000001cH
  00f43	1c		 DB	 28			; 0000001cH
  00f44	1c		 DB	 28			; 0000001cH
  00f45	1c		 DB	 28			; 0000001cH
  00f46	1c		 DB	 28			; 0000001cH
  00f47	1c		 DB	 28			; 0000001cH
  00f48	1c		 DB	 28			; 0000001cH
  00f49	1c		 DB	 28			; 0000001cH
  00f4a	1c		 DB	 28			; 0000001cH
  00f4b	1c		 DB	 28			; 0000001cH
  00f4c	1c		 DB	 28			; 0000001cH
  00f4d	1c		 DB	 28			; 0000001cH
  00f4e	1c		 DB	 28			; 0000001cH
  00f4f	1c		 DB	 28			; 0000001cH
  00f50	1c		 DB	 28			; 0000001cH
  00f51	1c		 DB	 28			; 0000001cH
  00f52	1c		 DB	 28			; 0000001cH
  00f53	1c		 DB	 28			; 0000001cH
  00f54	1c		 DB	 28			; 0000001cH
  00f55	1c		 DB	 28			; 0000001cH
  00f56	1c		 DB	 28			; 0000001cH
  00f57	1c		 DB	 28			; 0000001cH
  00f58	1c		 DB	 28			; 0000001cH
  00f59	1c		 DB	 28			; 0000001cH
  00f5a	1c		 DB	 28			; 0000001cH
  00f5b	16		 DB	 22			; 00000016H
  00f5c	1c		 DB	 28			; 0000001cH
  00f5d	1c		 DB	 28			; 0000001cH
  00f5e	1c		 DB	 28			; 0000001cH
  00f5f	1c		 DB	 28			; 0000001cH
  00f60	1c		 DB	 28			; 0000001cH
  00f61	1c		 DB	 28			; 0000001cH
  00f62	17		 DB	 23			; 00000017H
  00f63	18		 DB	 24			; 00000018H
  00f64	1c		 DB	 28			; 0000001cH
  00f65	1c		 DB	 28			; 0000001cH
  00f66	1c		 DB	 28			; 0000001cH
  00f67	1c		 DB	 28			; 0000001cH
  00f68	1c		 DB	 28			; 0000001cH
  00f69	1c		 DB	 28			; 0000001cH
  00f6a	1c		 DB	 28			; 0000001cH
  00f6b	1c		 DB	 28			; 0000001cH
  00f6c	1c		 DB	 28			; 0000001cH
  00f6d	1c		 DB	 28			; 0000001cH
  00f6e	1c		 DB	 28			; 0000001cH
  00f6f	1c		 DB	 28			; 0000001cH
  00f70	1c		 DB	 28			; 0000001cH
  00f71	1c		 DB	 28			; 0000001cH
  00f72	1c		 DB	 28			; 0000001cH
  00f73	1c		 DB	 28			; 0000001cH
  00f74	1c		 DB	 28			; 0000001cH
  00f75	1c		 DB	 28			; 0000001cH
  00f76	1c		 DB	 28			; 0000001cH
  00f77	1c		 DB	 28			; 0000001cH
  00f78	1c		 DB	 28			; 0000001cH
  00f79	1c		 DB	 28			; 0000001cH
  00f7a	1c		 DB	 28			; 0000001cH
  00f7b	1c		 DB	 28			; 0000001cH
  00f7c	1c		 DB	 28			; 0000001cH
  00f7d	1c		 DB	 28			; 0000001cH
  00f7e	1c		 DB	 28			; 0000001cH
  00f7f	1c		 DB	 28			; 0000001cH
  00f80	1c		 DB	 28			; 0000001cH
  00f81	1c		 DB	 28			; 0000001cH
  00f82	19		 DB	 25			; 00000019H
  00f83	1a		 DB	 26			; 0000001aH
  00f84	1c		 DB	 28			; 0000001cH
  00f85	1c		 DB	 28			; 0000001cH
  00f86	1c		 DB	 28			; 0000001cH
  00f87	1c		 DB	 28			; 0000001cH
  00f88	1c		 DB	 28			; 0000001cH
  00f89	1c		 DB	 28			; 0000001cH
  00f8a	1c		 DB	 28			; 0000001cH
  00f8b	1c		 DB	 28			; 0000001cH
  00f8c	1c		 DB	 28			; 0000001cH
  00f8d	1c		 DB	 28			; 0000001cH
  00f8e	1c		 DB	 28			; 0000001cH
  00f8f	1c		 DB	 28			; 0000001cH
  00f90	1c		 DB	 28			; 0000001cH
  00f91	1c		 DB	 28			; 0000001cH
  00f92	1b		 DB	 27			; 0000001bH
?DXUTTraceWindowsMessage@@YGPB_WI@Z ENDP		; DXUTTraceWindowsMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_result$ = -540						; size = 4
_buff$ = -532						; size = 520
_bShowMsgBoxOnError$ = -5				; size = 1
__$ArrayPad$ = -4					; size = 4
_strFile$ = 8						; size = 4
_dwLine$ = 12						; size = 4
_hr$ = 16						; size = 4
_strMsg$ = 20						; size = 4
_bPopMsgBox$ = 24					; size = 1
?DXUTTrace@@YGJPBDKJPB_W_N@Z PROC			; DXUTTrace
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 908
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd e4 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-540]
  00011	b9 87 00 00 00	 mov	 ecx, 135		; 00000087H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 909
  00027	e8 00 00 00 00	 call	 ?DXUTGetShowMsgBoxOnError@@YG_NXZ ; DXUTGetShowMsgBoxOnError
  0002c	88 45 fb	 mov	 BYTE PTR _bShowMsgBoxOnError$[ebp], al
; Line 910
  0002f	0f b6 45 18	 movzx	 eax, BYTE PTR _bPopMsgBox$[ebp]
  00033	85 c0		 test	 eax, eax
  00035	74 0c		 je	 SHORT $LN2@DXUTTrace
  00037	0f b6 4d fb	 movzx	 ecx, BYTE PTR _bShowMsgBoxOnError$[ebp]
  0003b	85 c9		 test	 ecx, ecx
  0003d	75 04		 jne	 SHORT $LN2@DXUTTrace
; Line 911
  0003f	c6 45 18 00	 mov	 BYTE PTR _bPopMsgBox$[ebp], 0
$LN2@DXUTTrace:
; Line 919
  00043	8b f4		 mov	 esi, esp
  00045	68 04 01 00 00	 push	 260			; 00000104H
  0004a	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _buff$[ebp]
  00050	52		 push	 edx
  00051	6a ff		 push	 -1
  00053	8b 45 08	 mov	 eax, DWORD PTR _strFile$[ebp]
  00056	50		 push	 eax
  00057	6a 01		 push	 1
  00059	6a 00		 push	 0
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _result$[ebp], eax
; Line 920
  0006e	83 bd e4 fd ff
	ff 00		 cmp	 DWORD PTR _result$[ebp], 0
  00075	75 14		 jne	 SHORT $LN1@DXUTTrace
; Line 922
  00077	68 00 00 00 00	 push	 OFFSET $SG153043
  0007c	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _buff$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ??$wcscpy_s@$0BAE@@@YAHAAY0BAE@_WPB_W@Z ; wcscpy_s<260>
  00088	83 c4 08	 add	 esp, 8
$LN1@DXUTTrace:
; Line 925
  0008b	0f b6 55 18	 movzx	 edx, BYTE PTR _bPopMsgBox$[ebp]
  0008f	52		 push	 edx
  00090	8b 45 14	 mov	 eax, DWORD PTR _strMsg$[ebp]
  00093	50		 push	 eax
  00094	8b 4d 10	 mov	 ecx, DWORD PTR _hr$[ebp]
  00097	51		 push	 ecx
  00098	8b 55 0c	 mov	 edx, DWORD PTR _dwLine$[ebp]
  0009b	52		 push	 edx
  0009c	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _buff$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 _DXTraceW@20
; Line 926
  000a8	52		 push	 edx
  000a9	8b cd		 mov	 ecx, ebp
  000ab	50		 push	 eax
  000ac	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@DXUTTrace
  000b2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b7	58		 pop	 eax
  000b8	5a		 pop	 edx
  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000be	33 cd		 xor	 ecx, ebp
  000c0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c5	81 c4 1c 02 00
	00		 add	 esp, 540		; 0000021cH
  000cb	3b ec		 cmp	 ebp, esp
  000cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 14 00	 ret	 20			; 00000014H
$LN7@DXUTTrace:
  000d8	01 00 00 00	 DD	 1
  000dc	00 00 00 00	 DD	 $LN6@DXUTTrace
$LN6@DXUTTrace:
  000e0	ec fd ff ff	 DD	 -532			; fffffdecH
  000e4	08 02 00 00	 DD	 520			; 00000208H
  000e8	00 00 00 00	 DD	 $LN5@DXUTTrace
$LN5@DXUTTrace:
  000ec	62		 DB	 98			; 00000062H
  000ed	75		 DB	 117			; 00000075H
  000ee	66		 DB	 102			; 00000066H
  000ef	66		 DB	 102			; 00000066H
  000f0	00		 DB	 0
?DXUTTrace@@YGJPBDKJPB_W_N@Z ENDP			; DXUTTrace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -532						; size = 4
_args$ = -528						; size = 4
_strBuffer$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
_strMsg$ = 8						; size = 4
?DXUTOutputDebugStringA@@YAXPBDZZ PROC			; DXUTOutputDebugStringA
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 363
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 02 00
	00		 sub	 esp, 532		; 00000214H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd ec fd ff
	ff		 lea	 edi, DWORD PTR [ebp-532]
  00011	b9 85 00 00 00	 mov	 ecx, 133		; 00000085H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 368
  00027	8d 45 0c	 lea	 eax, DWORD PTR _strMsg$[ebp+4]
  0002a	89 85 f0 fd ff
	ff		 mov	 DWORD PTR _args$[ebp], eax
; Line 369
  00030	8b f4		 mov	 esi, esp
  00032	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _args$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 08	 mov	 edx, DWORD PTR _strMsg$[ebp]
  0003c	52		 push	 edx
  0003d	68 00 02 00 00	 push	 512			; 00000200H
  00042	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _strBuffer$[ebp]
  00048	50		 push	 eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf_s
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 370
  00059	b9 01 00 00 00	 mov	 ecx, 1
  0005e	69 d1 ff 01 00
	00		 imul	 edx, ecx, 511
  00064	89 95 ec fd ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0006a	81 bd ec fd ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  00074	73 02		 jae	 SHORT $LN3@DXUTOutput
  00076	eb 05		 jmp	 SHORT $LN4@DXUTOutput
$LN3@DXUTOutput:
  00078	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN4@DXUTOutput:
  0007d	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00083	c6 84 05 f8 fd
	ff ff 00	 mov	 BYTE PTR _strBuffer$[ebp+eax], 0
; Line 371
  0008b	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _args$[ebp], 0
; Line 373
  00095	8b f4		 mov	 esi, esp
  00097	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _strBuffer$[ebp]
  0009d	51		 push	 ecx
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTOutput:
; Line 377
  000ab	52		 push	 edx
  000ac	8b cd		 mov	 ecx, ebp
  000ae	50		 push	 eax
  000af	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@DXUTOutput
  000b5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ba	58		 pop	 eax
  000bb	5a		 pop	 edx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c1	33 cd		 xor	 ecx, ebp
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	81 c4 14 02 00
	00		 add	 esp, 532		; 00000214H
  000ce	3b ec		 cmp	 ebp, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
  000d9	8d 49 00	 npad	 3
$LN7@DXUTOutput:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN6@DXUTOutput
$LN6@DXUTOutput:
  000e4	f8 fd ff ff	 DD	 -520			; fffffdf8H
  000e8	00 02 00 00	 DD	 512			; 00000200H
  000ec	00 00 00 00	 DD	 $LN5@DXUTOutput
$LN5@DXUTOutput:
  000f0	73		 DB	 115			; 00000073H
  000f1	74		 DB	 116			; 00000074H
  000f2	72		 DB	 114			; 00000072H
  000f3	42		 DB	 66			; 00000042H
  000f4	75		 DB	 117			; 00000075H
  000f5	66		 DB	 102			; 00000066H
  000f6	66		 DB	 102			; 00000066H
  000f7	65		 DB	 101			; 00000065H
  000f8	72		 DB	 114			; 00000072H
  000f9	00		 DB	 0
?DXUTOutputDebugStringA@@YAXPBDZZ ENDP			; DXUTOutputDebugStringA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -1044						; size = 4
_args$ = -1040						; size = 4
_strBuffer$ = -1032					; size = 1024
__$ArrayPad$ = -4					; size = 4
_strMsg$ = 8						; size = 4
?DXUTOutputDebugStringW@@YAXPB_WZZ PROC			; DXUTOutputDebugStringW
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 341
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 04 00
	00		 sub	 esp, 1044		; 00000414H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd ec fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1044]
  00011	b9 05 01 00 00	 mov	 ecx, 261		; 00000105H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 346
  00027	8d 45 0c	 lea	 eax, DWORD PTR _strMsg$[ebp+4]
  0002a	89 85 f0 fb ff
	ff		 mov	 DWORD PTR _args$[ebp], eax
; Line 347
  00030	8b f4		 mov	 esi, esp
  00032	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR _args$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 08	 mov	 edx, DWORD PTR _strMsg$[ebp]
  0003c	52		 push	 edx
  0003d	68 00 02 00 00	 push	 512			; 00000200H
  00042	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _strBuffer$[ebp]
  00048	50		 push	 eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vswprintf_s
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 348
  00059	b9 02 00 00 00	 mov	 ecx, 2
  0005e	69 d1 ff 01 00
	00		 imul	 edx, ecx, 511
  00064	89 95 ec fb ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0006a	81 bd ec fb ff
	ff 00 04 00 00	 cmp	 DWORD PTR $T1[ebp], 1024 ; 00000400H
  00074	73 02		 jae	 SHORT $LN3@DXUTOutput
  00076	eb 05		 jmp	 SHORT $LN4@DXUTOutput
$LN3@DXUTOutput:
  00078	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN4@DXUTOutput:
  0007d	33 c0		 xor	 eax, eax
  0007f	8b 8d ec fb ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00085	66 89 84 0d f8
	fb ff ff	 mov	 WORD PTR _strBuffer$[ebp+ecx], ax
; Line 349
  0008d	c7 85 f0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _args$[ebp], 0
; Line 351
  00097	8b f4		 mov	 esi, esp
  00099	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _strBuffer$[ebp]
  0009f	52		 push	 edx
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringW@4
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUTOutput:
; Line 355
  000ad	52		 push	 edx
  000ae	8b cd		 mov	 ecx, ebp
  000b0	50		 push	 eax
  000b1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@DXUTOutput
  000b7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bc	58		 pop	 eax
  000bd	5a		 pop	 edx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c3	33 cd		 xor	 ecx, ebp
  000c5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ca	81 c4 14 04 00
	00		 add	 esp, 1044		; 00000414H
  000d0	3b ec		 cmp	 ebp, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
  000db	90		 npad	 1
$LN7@DXUTOutput:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN6@DXUTOutput
$LN6@DXUTOutput:
  000e4	f8 fb ff ff	 DD	 -1032			; fffffbf8H
  000e8	00 04 00 00	 DD	 1024			; 00000400H
  000ec	00 00 00 00	 DD	 $LN5@DXUTOutput
$LN5@DXUTOutput:
  000f0	73		 DB	 115			; 00000073H
  000f1	74		 DB	 116			; 00000074H
  000f2	72		 DB	 114			; 00000072H
  000f3	42		 DB	 66			; 00000042H
  000f4	75		 DB	 117			; 00000075H
  000f5	66		 DB	 102			; 00000066H
  000f6	66		 DB	 102			; 00000066H
  000f7	65		 DB	 101			; 00000065H
  000f8	72		 DB	 114			; 00000072H
  000f9	00		 DB	 0
?DXUTOutputDebugStringW@@YAXPB_WZZ ENDP			; DXUTOutputDebugStringW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -24						; size = 4
tv91 = -18						; size = 2
tv88 = -16						; size = 4
tv85 = -12						; size = 4
tv64 = -8						; size = 4
_pstr$ = -4						; size = 4
_format$ = 8						; size = 4
_bWithPrefix$ = 12					; size = 1
?DXUTDXGIFormatToString@@YGPB_WW4DXGI_FORMAT@@_N@Z PROC	; DXUTDXGIFormatToString
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 215
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 216
  0001d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], 0
; Line 217
  00024	8b 45 08	 mov	 eax, DWORD PTR _format$[ebp]
  00027	89 45 f8	 mov	 DWORD PTR tv64[ebp], eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR tv64[ebp]
  0002d	83 e9 01	 sub	 ecx, 1
  00030	89 4d f8	 mov	 DWORD PTR tv64[ebp], ecx
  00033	83 7d f8 72	 cmp	 DWORD PTR tv64[ebp], 114 ; 00000072H
  00037	0f 87 90 04 00
	00		 ja	 $LN4@DXUTDXGIFo
  0003d	8b 55 f8	 mov	 edx, DWORD PTR tv64[ebp]
  00040	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN110@DXUTDXGIFo[edx*4]
$LN104@DXUTDXGIFo:
; Line 219
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152132
  0004e	e9 81 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN103@DXUTDXGIFo:
; Line 220
  00053	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152134
  0005a	e9 75 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN102@DXUTDXGIFo:
; Line 221
  0005f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152136
  00066	e9 69 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN101@DXUTDXGIFo:
; Line 222
  0006b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152138
  00072	e9 5d 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN100@DXUTDXGIFo:
; Line 223
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152140
  0007e	e9 51 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN99@DXUTDXGIFo:
; Line 224
  00083	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152142
  0008a	e9 45 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN98@DXUTDXGIFo:
; Line 225
  0008f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152144
  00096	e9 39 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN97@DXUTDXGIFo:
; Line 226
  0009b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152146
  000a2	e9 2d 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN96@DXUTDXGIFo:
; Line 227
  000a7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152148
  000ae	e9 21 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN95@DXUTDXGIFo:
; Line 228
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152150
  000ba	e9 15 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN94@DXUTDXGIFo:
; Line 229
  000bf	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152152
  000c6	e9 09 04 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN93@DXUTDXGIFo:
; Line 230
  000cb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152154
  000d2	e9 fd 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN92@DXUTDXGIFo:
; Line 231
  000d7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152156
  000de	e9 f1 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN91@DXUTDXGIFo:
; Line 232
  000e3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152158
  000ea	e9 e5 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN90@DXUTDXGIFo:
; Line 233
  000ef	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152160
  000f6	e9 d9 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN89@DXUTDXGIFo:
; Line 234
  000fb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152162
  00102	e9 cd 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN88@DXUTDXGIFo:
; Line 235
  00107	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152164
  0010e	e9 c1 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN87@DXUTDXGIFo:
; Line 236
  00113	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152166
  0011a	e9 b5 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN86@DXUTDXGIFo:
; Line 237
  0011f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152168
  00126	e9 a9 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN85@DXUTDXGIFo:
; Line 238
  0012b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152170
  00132	e9 9d 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN84@DXUTDXGIFo:
; Line 239
  00137	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152172
  0013e	e9 91 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN83@DXUTDXGIFo:
; Line 240
  00143	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152174
  0014a	e9 85 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN82@DXUTDXGIFo:
; Line 241
  0014f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152176
  00156	e9 79 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN81@DXUTDXGIFo:
; Line 242
  0015b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152178
  00162	e9 6d 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN80@DXUTDXGIFo:
; Line 243
  00167	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152180
  0016e	e9 61 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN79@DXUTDXGIFo:
; Line 244
  00173	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152182
  0017a	e9 55 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN78@DXUTDXGIFo:
; Line 245
  0017f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152184
  00186	e9 49 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN77@DXUTDXGIFo:
; Line 246
  0018b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152186
  00192	e9 3d 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN76@DXUTDXGIFo:
; Line 247
  00197	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152188
  0019e	e9 31 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN75@DXUTDXGIFo:
; Line 248
  001a3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152190
  001aa	e9 25 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN74@DXUTDXGIFo:
; Line 249
  001af	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152192
  001b6	e9 19 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN73@DXUTDXGIFo:
; Line 250
  001bb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152194
  001c2	e9 0d 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN72@DXUTDXGIFo:
; Line 251
  001c7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152196
  001ce	e9 01 03 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN71@DXUTDXGIFo:
; Line 252
  001d3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152198
  001da	e9 f5 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN70@DXUTDXGIFo:
; Line 253
  001df	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152200
  001e6	e9 e9 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN69@DXUTDXGIFo:
; Line 254
  001eb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152202
  001f2	e9 dd 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN68@DXUTDXGIFo:
; Line 255
  001f7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152204
  001fe	e9 d1 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN67@DXUTDXGIFo:
; Line 256
  00203	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152206
  0020a	e9 c5 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN66@DXUTDXGIFo:
; Line 257
  0020f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152208
  00216	e9 b9 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN65@DXUTDXGIFo:
; Line 258
  0021b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152210
  00222	e9 ad 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN64@DXUTDXGIFo:
; Line 259
  00227	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152212
  0022e	e9 a1 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN63@DXUTDXGIFo:
; Line 260
  00233	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152214
  0023a	e9 95 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN62@DXUTDXGIFo:
; Line 261
  0023f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152216
  00246	e9 89 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN61@DXUTDXGIFo:
; Line 262
  0024b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152218
  00252	e9 7d 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN60@DXUTDXGIFo:
; Line 263
  00257	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152220
  0025e	e9 71 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN59@DXUTDXGIFo:
; Line 264
  00263	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152222
  0026a	e9 65 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN58@DXUTDXGIFo:
; Line 265
  0026f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152224
  00276	e9 59 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN57@DXUTDXGIFo:
; Line 266
  0027b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152226
  00282	e9 4d 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN56@DXUTDXGIFo:
; Line 267
  00287	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152228
  0028e	e9 41 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN55@DXUTDXGIFo:
; Line 268
  00293	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152230
  0029a	e9 35 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN54@DXUTDXGIFo:
; Line 269
  0029f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152232
  002a6	e9 29 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN53@DXUTDXGIFo:
; Line 270
  002ab	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152234
  002b2	e9 1d 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN52@DXUTDXGIFo:
; Line 271
  002b7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152236
  002be	e9 11 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN51@DXUTDXGIFo:
; Line 272
  002c3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152238
  002ca	e9 05 02 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN50@DXUTDXGIFo:
; Line 273
  002cf	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152240
  002d6	e9 f9 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN49@DXUTDXGIFo:
; Line 274
  002db	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152242
  002e2	e9 ed 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN48@DXUTDXGIFo:
; Line 275
  002e7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152244
  002ee	e9 e1 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN47@DXUTDXGIFo:
; Line 276
  002f3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152246
  002fa	e9 d5 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN46@DXUTDXGIFo:
; Line 277
  002ff	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152248
  00306	e9 c9 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN45@DXUTDXGIFo:
; Line 278
  0030b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152250
  00312	e9 bd 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN44@DXUTDXGIFo:
; Line 279
  00317	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152252
  0031e	e9 b1 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN43@DXUTDXGIFo:
; Line 280
  00323	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152254
  0032a	e9 a5 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN42@DXUTDXGIFo:
; Line 281
  0032f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152256
  00336	e9 99 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN41@DXUTDXGIFo:
; Line 282
  0033b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152258
  00342	e9 8d 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN40@DXUTDXGIFo:
; Line 283
  00347	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152260
  0034e	e9 81 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN39@DXUTDXGIFo:
; Line 284
  00353	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152262
  0035a	e9 75 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN38@DXUTDXGIFo:
; Line 285
  0035f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152264
  00366	e9 69 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN37@DXUTDXGIFo:
; Line 286
  0036b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152266
  00372	e9 5d 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN36@DXUTDXGIFo:
; Line 287
  00377	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152268
  0037e	e9 51 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN35@DXUTDXGIFo:
; Line 288
  00383	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152270
  0038a	e9 45 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN34@DXUTDXGIFo:
; Line 289
  0038f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152272
  00396	e9 39 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN33@DXUTDXGIFo:
; Line 290
  0039b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152274
  003a2	e9 2d 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN32@DXUTDXGIFo:
; Line 291
  003a7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152276
  003ae	e9 21 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN31@DXUTDXGIFo:
; Line 292
  003b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152278
  003ba	e9 15 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN30@DXUTDXGIFo:
; Line 293
  003bf	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152280
  003c6	e9 09 01 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN29@DXUTDXGIFo:
; Line 294
  003cb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152282
  003d2	e9 fd 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN28@DXUTDXGIFo:
; Line 295
  003d7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152284
  003de	e9 f1 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN27@DXUTDXGIFo:
; Line 296
  003e3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152286
  003ea	e9 e5 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN26@DXUTDXGIFo:
; Line 297
  003ef	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152288
  003f6	e9 d9 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN25@DXUTDXGIFo:
; Line 298
  003fb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152290
  00402	e9 cd 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN24@DXUTDXGIFo:
; Line 299
  00407	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152292
  0040e	e9 c1 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN23@DXUTDXGIFo:
; Line 300
  00413	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152294
  0041a	e9 b5 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN22@DXUTDXGIFo:
; Line 301
  0041f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152296
  00426	e9 a9 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN21@DXUTDXGIFo:
; Line 302
  0042b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152298
  00432	e9 9d 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN20@DXUTDXGIFo:
; Line 303
  00437	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152300
  0043e	e9 91 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN19@DXUTDXGIFo:
; Line 304
  00443	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152302
  0044a	e9 85 00 00 00	 jmp	 $LN105@DXUTDXGIFo
$LN18@DXUTDXGIFo:
; Line 305
  0044f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152304
  00456	eb 7c		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN17@DXUTDXGIFo:
; Line 308
  00458	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152306
  0045f	eb 73		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN16@DXUTDXGIFo:
; Line 309
  00461	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152308
  00468	eb 6a		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN15@DXUTDXGIFo:
; Line 310
  0046a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152310
  00471	eb 61		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN14@DXUTDXGIFo:
; Line 311
  00473	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152312
  0047a	eb 58		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN13@DXUTDXGIFo:
; Line 312
  0047c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152314
  00483	eb 4f		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN12@DXUTDXGIFo:
; Line 313
  00485	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152316
  0048c	eb 46		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN11@DXUTDXGIFo:
; Line 314
  0048e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152318
  00495	eb 3d		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN10@DXUTDXGIFo:
; Line 315
  00497	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152320
  0049e	eb 34		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN9@DXUTDXGIFo:
; Line 316
  004a0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152322
  004a7	eb 2b		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN8@DXUTDXGIFo:
; Line 317
  004a9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152324
  004b0	eb 22		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN7@DXUTDXGIFo:
; Line 318
  004b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152326
  004b9	eb 19		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN6@DXUTDXGIFo:
; Line 319
  004bb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152328
  004c2	eb 10		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN5@DXUTDXGIFo:
; Line 322
  004c4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152330
  004cb	eb 07		 jmp	 SHORT $LN105@DXUTDXGIFo
$LN4@DXUTDXGIFo:
; Line 325
  004cd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pstr$[ebp], OFFSET $SG152332
$LN105@DXUTDXGIFo:
; Line 327
  004d4	0f b6 45 0c	 movzx	 eax, BYTE PTR _bWithPrefix$[ebp]
  004d8	85 c0		 test	 eax, eax
  004da	75 15		 jne	 SHORT $LN2@DXUTDXGIFo
  004dc	68 00 00 00 00	 push	 OFFSET $SG152335
  004e1	8b 4d fc	 mov	 ecx, DWORD PTR _pstr$[ebp]
  004e4	51		 push	 ecx
  004e5	e8 00 00 00 00	 call	 ?wcsstr@@YAPA_WPA_WPB_W@Z ; wcsstr
  004ea	83 c4 08	 add	 esp, 8
  004ed	85 c0		 test	 eax, eax
  004ef	75 07		 jne	 SHORT $LN3@DXUTDXGIFo
$LN2@DXUTDXGIFo:
; Line 328
  004f1	8b 45 fc	 mov	 eax, DWORD PTR _pstr$[ebp]
  004f4	eb 3b		 jmp	 SHORT $LN107@DXUTDXGIFo
; Line 329
  004f6	eb 39		 jmp	 SHORT $LN107@DXUTDXGIFo
$LN3@DXUTDXGIFo:
; Line 330
  004f8	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], OFFSET $SG152337
  004ff	8b 55 f4	 mov	 edx, DWORD PTR tv85[ebp]
  00502	83 c2 02	 add	 edx, 2
  00505	89 55 f0	 mov	 DWORD PTR tv88[ebp], edx
$LL109@DXUTDXGIFo:
  00508	8b 45 f4	 mov	 eax, DWORD PTR tv85[ebp]
  0050b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0050e	66 89 4d ee	 mov	 WORD PTR tv91[ebp], cx
  00512	83 45 f4 02	 add	 DWORD PTR tv85[ebp], 2
  00516	66 83 7d ee 00	 cmp	 WORD PTR tv91[ebp], 0
  0051b	75 eb		 jne	 SHORT $LL109@DXUTDXGIFo
  0051d	8b 55 f4	 mov	 edx, DWORD PTR tv85[ebp]
  00520	2b 55 f0	 sub	 edx, DWORD PTR tv88[ebp]
  00523	d1 fa		 sar	 edx, 1
  00525	89 55 e8	 mov	 DWORD PTR tv75[ebp], edx
  00528	8b 45 e8	 mov	 eax, DWORD PTR tv75[ebp]
  0052b	8b 4d fc	 mov	 ecx, DWORD PTR _pstr$[ebp]
  0052e	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
$LN107@DXUTDXGIFo:
; Line 331
  00531	83 c4 18	 add	 esp, 24			; 00000018H
  00534	3b ec		 cmp	 ebp, esp
  00536	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0053b	8b e5		 mov	 esp, ebp
  0053d	5d		 pop	 ebp
  0053e	c2 08 00	 ret	 8
  00541	8d 49 00	 npad	 3
$LN110@DXUTDXGIFo:
  00544	00 00 00 00	 DD	 $LN104@DXUTDXGIFo
  00548	00 00 00 00	 DD	 $LN103@DXUTDXGIFo
  0054c	00 00 00 00	 DD	 $LN102@DXUTDXGIFo
  00550	00 00 00 00	 DD	 $LN101@DXUTDXGIFo
  00554	00 00 00 00	 DD	 $LN100@DXUTDXGIFo
  00558	00 00 00 00	 DD	 $LN99@DXUTDXGIFo
  0055c	00 00 00 00	 DD	 $LN98@DXUTDXGIFo
  00560	00 00 00 00	 DD	 $LN97@DXUTDXGIFo
  00564	00 00 00 00	 DD	 $LN96@DXUTDXGIFo
  00568	00 00 00 00	 DD	 $LN95@DXUTDXGIFo
  0056c	00 00 00 00	 DD	 $LN94@DXUTDXGIFo
  00570	00 00 00 00	 DD	 $LN93@DXUTDXGIFo
  00574	00 00 00 00	 DD	 $LN92@DXUTDXGIFo
  00578	00 00 00 00	 DD	 $LN91@DXUTDXGIFo
  0057c	00 00 00 00	 DD	 $LN90@DXUTDXGIFo
  00580	00 00 00 00	 DD	 $LN89@DXUTDXGIFo
  00584	00 00 00 00	 DD	 $LN88@DXUTDXGIFo
  00588	00 00 00 00	 DD	 $LN87@DXUTDXGIFo
  0058c	00 00 00 00	 DD	 $LN86@DXUTDXGIFo
  00590	00 00 00 00	 DD	 $LN85@DXUTDXGIFo
  00594	00 00 00 00	 DD	 $LN84@DXUTDXGIFo
  00598	00 00 00 00	 DD	 $LN83@DXUTDXGIFo
  0059c	00 00 00 00	 DD	 $LN82@DXUTDXGIFo
  005a0	00 00 00 00	 DD	 $LN81@DXUTDXGIFo
  005a4	00 00 00 00	 DD	 $LN80@DXUTDXGIFo
  005a8	00 00 00 00	 DD	 $LN79@DXUTDXGIFo
  005ac	00 00 00 00	 DD	 $LN78@DXUTDXGIFo
  005b0	00 00 00 00	 DD	 $LN77@DXUTDXGIFo
  005b4	00 00 00 00	 DD	 $LN76@DXUTDXGIFo
  005b8	00 00 00 00	 DD	 $LN75@DXUTDXGIFo
  005bc	00 00 00 00	 DD	 $LN74@DXUTDXGIFo
  005c0	00 00 00 00	 DD	 $LN73@DXUTDXGIFo
  005c4	00 00 00 00	 DD	 $LN72@DXUTDXGIFo
  005c8	00 00 00 00	 DD	 $LN71@DXUTDXGIFo
  005cc	00 00 00 00	 DD	 $LN70@DXUTDXGIFo
  005d0	00 00 00 00	 DD	 $LN69@DXUTDXGIFo
  005d4	00 00 00 00	 DD	 $LN68@DXUTDXGIFo
  005d8	00 00 00 00	 DD	 $LN67@DXUTDXGIFo
  005dc	00 00 00 00	 DD	 $LN66@DXUTDXGIFo
  005e0	00 00 00 00	 DD	 $LN65@DXUTDXGIFo
  005e4	00 00 00 00	 DD	 $LN64@DXUTDXGIFo
  005e8	00 00 00 00	 DD	 $LN63@DXUTDXGIFo
  005ec	00 00 00 00	 DD	 $LN62@DXUTDXGIFo
  005f0	00 00 00 00	 DD	 $LN61@DXUTDXGIFo
  005f4	00 00 00 00	 DD	 $LN60@DXUTDXGIFo
  005f8	00 00 00 00	 DD	 $LN59@DXUTDXGIFo
  005fc	00 00 00 00	 DD	 $LN58@DXUTDXGIFo
  00600	00 00 00 00	 DD	 $LN57@DXUTDXGIFo
  00604	00 00 00 00	 DD	 $LN56@DXUTDXGIFo
  00608	00 00 00 00	 DD	 $LN55@DXUTDXGIFo
  0060c	00 00 00 00	 DD	 $LN54@DXUTDXGIFo
  00610	00 00 00 00	 DD	 $LN53@DXUTDXGIFo
  00614	00 00 00 00	 DD	 $LN52@DXUTDXGIFo
  00618	00 00 00 00	 DD	 $LN51@DXUTDXGIFo
  0061c	00 00 00 00	 DD	 $LN50@DXUTDXGIFo
  00620	00 00 00 00	 DD	 $LN49@DXUTDXGIFo
  00624	00 00 00 00	 DD	 $LN48@DXUTDXGIFo
  00628	00 00 00 00	 DD	 $LN47@DXUTDXGIFo
  0062c	00 00 00 00	 DD	 $LN46@DXUTDXGIFo
  00630	00 00 00 00	 DD	 $LN45@DXUTDXGIFo
  00634	00 00 00 00	 DD	 $LN44@DXUTDXGIFo
  00638	00 00 00 00	 DD	 $LN43@DXUTDXGIFo
  0063c	00 00 00 00	 DD	 $LN42@DXUTDXGIFo
  00640	00 00 00 00	 DD	 $LN41@DXUTDXGIFo
  00644	00 00 00 00	 DD	 $LN40@DXUTDXGIFo
  00648	00 00 00 00	 DD	 $LN39@DXUTDXGIFo
  0064c	00 00 00 00	 DD	 $LN38@DXUTDXGIFo
  00650	00 00 00 00	 DD	 $LN37@DXUTDXGIFo
  00654	00 00 00 00	 DD	 $LN36@DXUTDXGIFo
  00658	00 00 00 00	 DD	 $LN35@DXUTDXGIFo
  0065c	00 00 00 00	 DD	 $LN34@DXUTDXGIFo
  00660	00 00 00 00	 DD	 $LN33@DXUTDXGIFo
  00664	00 00 00 00	 DD	 $LN32@DXUTDXGIFo
  00668	00 00 00 00	 DD	 $LN31@DXUTDXGIFo
  0066c	00 00 00 00	 DD	 $LN30@DXUTDXGIFo
  00670	00 00 00 00	 DD	 $LN29@DXUTDXGIFo
  00674	00 00 00 00	 DD	 $LN28@DXUTDXGIFo
  00678	00 00 00 00	 DD	 $LN27@DXUTDXGIFo
  0067c	00 00 00 00	 DD	 $LN26@DXUTDXGIFo
  00680	00 00 00 00	 DD	 $LN25@DXUTDXGIFo
  00684	00 00 00 00	 DD	 $LN24@DXUTDXGIFo
  00688	00 00 00 00	 DD	 $LN23@DXUTDXGIFo
  0068c	00 00 00 00	 DD	 $LN22@DXUTDXGIFo
  00690	00 00 00 00	 DD	 $LN21@DXUTDXGIFo
  00694	00 00 00 00	 DD	 $LN20@DXUTDXGIFo
  00698	00 00 00 00	 DD	 $LN19@DXUTDXGIFo
  0069c	00 00 00 00	 DD	 $LN18@DXUTDXGIFo
  006a0	00 00 00 00	 DD	 $LN17@DXUTDXGIFo
  006a4	00 00 00 00	 DD	 $LN16@DXUTDXGIFo
  006a8	00 00 00 00	 DD	 $LN15@DXUTDXGIFo
  006ac	00 00 00 00	 DD	 $LN14@DXUTDXGIFo
  006b0	00 00 00 00	 DD	 $LN13@DXUTDXGIFo
  006b4	00 00 00 00	 DD	 $LN12@DXUTDXGIFo
  006b8	00 00 00 00	 DD	 $LN11@DXUTDXGIFo
  006bc	00 00 00 00	 DD	 $LN10@DXUTDXGIFo
  006c0	00 00 00 00	 DD	 $LN9@DXUTDXGIFo
  006c4	00 00 00 00	 DD	 $LN8@DXUTDXGIFo
  006c8	00 00 00 00	 DD	 $LN7@DXUTDXGIFo
  006cc	00 00 00 00	 DD	 $LN6@DXUTDXGIFo
  006d0	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006d4	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006d8	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006dc	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006e0	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006e4	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006e8	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006ec	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006f0	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006f4	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006f8	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  006fc	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  00700	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  00704	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  00708	00 00 00 00	 DD	 $LN4@DXUTDXGIFo
  0070c	00 00 00 00	 DD	 $LN5@DXUTDXGIFo
?DXUTDXGIFormatToString@@YGPB_WW4DXGI_FORMAT@@_N@Z ENDP	; DXUTDXGIFormatToString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ PROC		; DXUTGetGlobalTimer
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 24
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 26
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4IA
  00027	83 e0 01	 and	 eax, 1
  0002a	75 27		 jne	 SHORT $LN1@DXUTGetGlo
  0002c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?$S1@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4IA
  00032	83 c9 01	 or	 ecx, 1
  00035	89 0d 00 00 00
	00		 mov	 DWORD PTR ?$S1@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4IA, ecx
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	b9 00 00 00 00	 mov	 ecx, OFFSET ?timer@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4V2@A
  00047	e8 00 00 00 00	 call	 ??0CDXUTTimer@@QAE@XZ	; CDXUTTimer::CDXUTTimer
  0004c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
$LN1@DXUTGetGlo:
; Line 27
  00053	b8 00 00 00 00	 mov	 eax, OFFSET ?timer@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4V2@A
; Line 28
  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ$0:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4IA
  00005	83 e0 fe	 and	 eax, -2			; fffffffeH
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?1??DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ@4IA, eax
  0000d	c3		 ret	 0
__ehhandler$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ENDP		; DXUTGetGlobalTimer
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -24						; size = 4
_qwTime$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetAdjustedCurrentTime@CDXUTTimer@@IBE?AT_LARGE_INTEGER@@XZ PROC ; CDXUTTimer::GetAdjustedCurrentTime
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 166
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 168
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	89 45 e8	 mov	 DWORD PTR tv69[ebp], eax
  00027	8b 4d e8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 55 e8	 mov	 edx, DWORD PTR tv69[ebp]
  0002d	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00030	0b 42 14	 or	 eax, DWORD PTR [edx+20]
  00033	74 11		 je	 SHORT $LN2@GetAdjuste
; Line 169
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0003b	89 55 f0	 mov	 DWORD PTR _qwTime$[ebp], edx
  0003e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00041	89 45 f4	 mov	 DWORD PTR _qwTime$[ebp+4], eax
; Line 170
  00044	eb 13		 jmp	 SHORT $LN1@GetAdjuste
$LN2@GetAdjuste:
; Line 171
  00046	8b f4		 mov	 esi, esp
  00048	8d 4d f0	 lea	 ecx, DWORD PTR _qwTime$[ebp]
  0004b	51		 push	 ecx
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceCounter@4
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@GetAdjuste:
; Line 172
  00059	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _qwTime$[ebp]
  0005f	89 02		 mov	 DWORD PTR [edx], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _qwTime$[ebp+4]
  00064	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00067	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 173
  0006a	52		 push	 edx
  0006b	8b cd		 mov	 ecx, ebp
  0006d	50		 push	 eax
  0006e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@GetAdjuste
  00074	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00079	58		 pop	 eax
  0007a	5a		 pop	 edx
  0007b	5e		 pop	 esi
  0007c	83 c4 18	 add	 esp, 24			; 00000018H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
$LN7@GetAdjuste:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN6@GetAdjuste
$LN6@GetAdjuste:
  00094	f0 ff ff ff	 DD	 -16			; fffffff0H
  00098	08 00 00 00	 DD	 8
  0009c	00 00 00 00	 DD	 $LN5@GetAdjuste
$LN5@GetAdjuste:
  000a0	71		 DB	 113			; 00000071H
  000a1	77		 DB	 119			; 00000077H
  000a2	54		 DB	 84			; 00000054H
  000a3	69		 DB	 105			; 00000069H
  000a4	6d		 DB	 109			; 0000006dH
  000a5	65		 DB	 101			; 00000065H
  000a6	00		 DB	 0
?GetAdjustedCurrentTime@CDXUTTimer@@IBE?AT_LARGE_INTEGER@@XZ ENDP ; CDXUTTimer::GetAdjustedCurrentTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hCurrentThread$1 = -40					; size = 4
_dwAffinityMask$2 = -36					; size = 4
_dwSystemAffinityMask$ = -28				; size = 4
_dwProcessAffinityMask$ = -16				; size = 4
_hCurrentProcess$ = -8					; size = 4
_this$ = -4						; size = 4
?LimitThreadAffinityToCurrentProc@CDXUTTimer@@QAEXXZ PROC ; CDXUTTimer::LimitThreadAffinityToCurrentProc
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 182
  0001c	8b f4		 mov	 esi, esp
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcess@0
  00024	3b f4		 cmp	 esi, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	89 45 f8	 mov	 DWORD PTR _hCurrentProcess$[ebp], eax
; Line 185
  0002e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dwProcessAffinityMask$[ebp], 0
; Line 186
  00035	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dwSystemAffinityMask$[ebp], 0
; Line 189
  0003c	8b f4		 mov	 esi, esp
  0003e	8d 45 e4	 lea	 eax, DWORD PTR _dwSystemAffinityMask$[ebp]
  00041	50		 push	 eax
  00042	8d 4d f0	 lea	 ecx, DWORD PTR _dwProcessAffinityMask$[ebp]
  00045	51		 push	 ecx
  00046	8b 55 f8	 mov	 edx, DWORD PTR _hCurrentProcess$[ebp]
  00049	52		 push	 edx
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessAffinityMask@12
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	85 c0		 test	 eax, eax
  00059	74 56		 je	 SHORT $LN2@LimitThrea
  0005b	83 7d f0 00	 cmp	 DWORD PTR _dwProcessAffinityMask$[ebp], 0
  0005f	74 50		 je	 SHORT $LN2@LimitThrea
; Line 192
  00061	8b 45 f0	 mov	 eax, DWORD PTR _dwProcessAffinityMask$[ebp]
  00064	f7 d0		 not	 eax
  00066	83 c0 01	 add	 eax, 1
  00069	23 45 f0	 and	 eax, DWORD PTR _dwProcessAffinityMask$[ebp]
  0006c	89 45 dc	 mov	 DWORD PTR _dwAffinityMask$2[ebp], eax
; Line 196
  0006f	8b f4		 mov	 esi, esp
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThread@0
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	89 45 d8	 mov	 DWORD PTR _hCurrentThread$1[ebp], eax
; Line 197
  00081	83 7d d8 ff	 cmp	 DWORD PTR _hCurrentThread$1[ebp], -1
  00085	74 2a		 je	 SHORT $LN2@LimitThrea
; Line 199
  00087	8b f4		 mov	 esi, esp
  00089	8b 4d dc	 mov	 ecx, DWORD PTR _dwAffinityMask$2[ebp]
  0008c	51		 push	 ecx
  0008d	8b 55 d8	 mov	 edx, DWORD PTR _hCurrentThread$1[ebp]
  00090	52		 push	 edx
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetThreadAffinityMask@8
  00097	3b f4		 cmp	 esi, esp
  00099	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 200
  0009e	8b f4		 mov	 esi, esp
  000a0	8b 45 d8	 mov	 eax, DWORD PTR _hCurrentThread$1[ebp]
  000a3	50		 push	 eax
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  000aa	3b f4		 cmp	 esi, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@LimitThrea:
; Line 204
  000b1	8b f4		 mov	 esi, esp
  000b3	8b 4d f8	 mov	 ecx, DWORD PTR _hCurrentProcess$[ebp]
  000b6	51		 push	 ecx
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  000bd	3b f4		 cmp	 esi, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 205
  000c4	52		 push	 edx
  000c5	8b cd		 mov	 ecx, ebp
  000c7	50		 push	 eax
  000c8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@LimitThrea
  000ce	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d3	58		 pop	 eax
  000d4	5a		 pop	 edx
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	83 c4 28	 add	 esp, 40			; 00000028H
  000da	3b ec		 cmp	 ebp, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c3		 ret	 0
  000e5	8d 49 00	 npad	 3
$LN8@LimitThrea:
  000e8	02 00 00 00	 DD	 2
  000ec	00 00 00 00	 DD	 $LN7@LimitThrea
$LN7@LimitThrea:
  000f0	f0 ff ff ff	 DD	 -16			; fffffff0H
  000f4	04 00 00 00	 DD	 4
  000f8	00 00 00 00	 DD	 $LN5@LimitThrea
  000fc	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00100	04 00 00 00	 DD	 4
  00104	00 00 00 00	 DD	 $LN6@LimitThrea
$LN6@LimitThrea:
  00108	64		 DB	 100			; 00000064H
  00109	77		 DB	 119			; 00000077H
  0010a	53		 DB	 83			; 00000053H
  0010b	79		 DB	 121			; 00000079H
  0010c	73		 DB	 115			; 00000073H
  0010d	74		 DB	 116			; 00000074H
  0010e	65		 DB	 101			; 00000065H
  0010f	6d		 DB	 109			; 0000006dH
  00110	41		 DB	 65			; 00000041H
  00111	66		 DB	 102			; 00000066H
  00112	66		 DB	 102			; 00000066H
  00113	69		 DB	 105			; 00000069H
  00114	6e		 DB	 110			; 0000006eH
  00115	69		 DB	 105			; 00000069H
  00116	74		 DB	 116			; 00000074H
  00117	79		 DB	 121			; 00000079H
  00118	4d		 DB	 77			; 0000004dH
  00119	61		 DB	 97			; 00000061H
  0011a	73		 DB	 115			; 00000073H
  0011b	6b		 DB	 107			; 0000006bH
  0011c	00		 DB	 0
$LN5@LimitThrea:
  0011d	64		 DB	 100			; 00000064H
  0011e	77		 DB	 119			; 00000077H
  0011f	50		 DB	 80			; 00000050H
  00120	72		 DB	 114			; 00000072H
  00121	6f		 DB	 111			; 0000006fH
  00122	63		 DB	 99			; 00000063H
  00123	65		 DB	 101			; 00000065H
  00124	73		 DB	 115			; 00000073H
  00125	73		 DB	 115			; 00000073H
  00126	41		 DB	 65			; 00000041H
  00127	66		 DB	 102			; 00000066H
  00128	66		 DB	 102			; 00000066H
  00129	69		 DB	 105			; 00000069H
  0012a	6e		 DB	 110			; 0000006eH
  0012b	69		 DB	 105			; 00000069H
  0012c	74		 DB	 116			; 00000074H
  0012d	79		 DB	 121			; 00000079H
  0012e	4d		 DB	 77			; 0000004dH
  0012f	61		 DB	 97			; 00000061H
  00130	73		 DB	 115			; 00000073H
  00131	6b		 DB	 107			; 0000006bH
  00132	00		 DB	 0
?LimitThreadAffinityToCurrentProc@CDXUTTimer@@QAEXXZ ENDP ; CDXUTTimer::LimitThreadAffinityToCurrentProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv191 = -48						; size = 8
tv189 = -40						; size = 8
tv187 = -32						; size = 8
_fElapsedTime$ = -24					; size = 4
_qwTime$ = -16						; size = 8
_this$ = -4						; size = 4
_pfTime$ = 8						; size = 4
_pfAbsoluteTime$ = 12					; size = 4
_pfElapsedTime$ = 16					; size = 4
?GetTimeValues@CDXUTTimer@@QAEXPAN0PAM@Z PROC		; CDXUTTimer::GetTimeValues
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 122
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 123
  0001c	83 7d 08 00	 cmp	 DWORD PTR _pfTime$[ebp], 0
  00020	74 0c		 je	 SHORT $LN4@GetTimeVal
  00022	83 7d 0c 00	 cmp	 DWORD PTR _pfAbsoluteTime$[ebp], 0
  00026	74 06		 je	 SHORT $LN4@GetTimeVal
  00028	83 7d 10 00	 cmp	 DWORD PTR _pfElapsedTime$[ebp], 0
  0002c	75 1e		 jne	 SHORT $LN5@GetTimeVal
$LN4@GetTimeVal:
  0002e	8b f4		 mov	 esi, esp
  00030	6a 7b		 push	 123			; 0000007bH
  00032	68 00 00 00 00	 push	 OFFSET $SG152081
  00037	68 00 00 00 00	 push	 OFFSET $SG152082
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@GetTimeVal:
; Line 125
  0004c	8d 4d f0	 lea	 ecx, DWORD PTR _qwTime$[ebp]
  0004f	51		 push	 ecx
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?GetAdjustedCurrentTime@CDXUTTimer@@IBE?AT_LARGE_INTEGER@@XZ ; CDXUTTimer::GetAdjustedCurrentTime
; Line 127
  00058	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _qwTime$[ebp]
  0005e	2b 4a 18	 sub	 ecx, DWORD PTR [edx+24]
  00061	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$[ebp+4]
  00064	1b 42 1c	 sbb	 eax, DWORD PTR [edx+28]
  00067	8b d0		 mov	 edx, eax
  00069	e8 00 00 00 00	 call	 __ltod3
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00074	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00077	8b c8		 mov	 ecx, eax
  00079	f2 0f 11 45 e0	 movsd	 QWORD PTR tv187[ebp], xmm0
  0007e	e8 00 00 00 00	 call	 __ltod3
  00083	f2 0f 10 4d e0	 movsd	 xmm1, QWORD PTR tv187[ebp]
  00088	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0008c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00090	f3 0f 11 45 e8	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; Line 128
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 55 f0	 mov	 edx, DWORD PTR _qwTime$[ebp]
  0009b	89 51 18	 mov	 DWORD PTR [ecx+24], edx
  0009e	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$[ebp+4]
  000a1	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 137
  000a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000ac	0f 2f 45 e8	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000b0	76 0d		 jbe	 SHORT $LN1@GetTimeVal
; Line 138
  000b2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000ba	f3 0f 11 45 e8	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
$LN1@GetTimeVal:
; Line 140
  000bf	8b 55 f4	 mov	 edx, DWORD PTR _qwTime$[ebp+4]
  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _qwTime$[ebp]
  000c5	e8 00 00 00 00	 call	 __ltod3
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000d0	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000d3	8b c8		 mov	 ecx, eax
  000d5	f2 0f 11 45 d8	 movsd	 QWORD PTR tv189[ebp], xmm0
  000da	e8 00 00 00 00	 call	 __ltod3
  000df	f2 0f 10 4d d8	 movsd	 xmm1, QWORD PTR tv189[ebp]
  000e4	f2 0f 5e c8	 divsd	 xmm1, xmm0
  000e8	8b 4d 0c	 mov	 ecx, DWORD PTR _pfAbsoluteTime$[ebp]
  000eb	f2 0f 11 09	 movsd	 QWORD PTR [ecx], xmm1
; Line 141
  000ef	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f2	8b 4d f0	 mov	 ecx, DWORD PTR _qwTime$[ebp]
  000f5	2b 4a 20	 sub	 ecx, DWORD PTR [edx+32]
  000f8	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$[ebp+4]
  000fb	1b 42 24	 sbb	 eax, DWORD PTR [edx+36]
  000fe	8b d0		 mov	 edx, eax
  00100	e8 00 00 00 00	 call	 __ltod3
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0010b	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0010e	8b c8		 mov	 ecx, eax
  00110	f2 0f 11 45 d0	 movsd	 QWORD PTR tv191[ebp], xmm0
  00115	e8 00 00 00 00	 call	 __ltod3
  0011a	f2 0f 10 4d d0	 movsd	 xmm1, QWORD PTR tv191[ebp]
  0011f	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _pfTime$[ebp]
  00126	f2 0f 11 09	 movsd	 QWORD PTR [ecx], xmm1
; Line 142
  0012a	8b 55 10	 mov	 edx, DWORD PTR _pfElapsedTime$[ebp]
  0012d	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00132	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0
; Line 143
  00136	52		 push	 edx
  00137	8b cd		 mov	 ecx, ebp
  00139	50		 push	 eax
  0013a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@GetTimeVal
  00140	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00145	58		 pop	 eax
  00146	5a		 pop	 edx
  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	83 c4 30	 add	 esp, 48			; 00000030H
  0014c	3b ec		 cmp	 ebp, esp
  0014e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 0c 00	 ret	 12			; 0000000cH
  00159	8d 49 00	 npad	 3
$LN8@GetTimeVal:
  0015c	01 00 00 00	 DD	 1
  00160	00 00 00 00	 DD	 $LN7@GetTimeVal
$LN7@GetTimeVal:
  00164	f0 ff ff ff	 DD	 -16			; fffffff0H
  00168	08 00 00 00	 DD	 8
  0016c	00 00 00 00	 DD	 $LN6@GetTimeVal
$LN6@GetTimeVal:
  00170	71		 DB	 113			; 00000071H
  00171	77		 DB	 119			; 00000077H
  00172	54		 DB	 84			; 00000054H
  00173	69		 DB	 105			; 00000069H
  00174	6d		 DB	 109			; 0000006dH
  00175	65		 DB	 101			; 00000065H
  00176	00		 DB	 0
?GetTimeValues@CDXUTTimer@@QAEXPAN0PAM@Z ENDP		; CDXUTTimer::GetTimeValues
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv136 = -40						; size = 4
tv140 = -36						; size = 8
_fElapsedTime$ = -28					; size = 8
_qwTime$ = -16						; size = 8
_this$ = -4						; size = 4
?GetElapsedTime@CDXUTTimer@@QAEMXZ PROC			; CDXUTTimer::GetElapsedTime
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 149
  0001b	8d 45 f0	 lea	 eax, DWORD PTR _qwTime$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?GetAdjustedCurrentTime@CDXUTTimer@@IBE?AT_LARGE_INTEGER@@XZ ; CDXUTTimer::GetAdjustedCurrentTime
; Line 151
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 45 f0	 mov	 eax, DWORD PTR _qwTime$[ebp]
  0002d	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  00030	8b 55 f4	 mov	 edx, DWORD PTR _qwTime$[ebp+4]
  00033	1b 51 1c	 sbb	 edx, DWORD PTR [ecx+28]
  00036	8b c8		 mov	 ecx, eax
  00038	e8 00 00 00 00	 call	 __ltod3
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00043	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00046	8b c8		 mov	 ecx, eax
  00048	f2 0f 11 45 dc	 movsd	 QWORD PTR tv140[ebp], xmm0
  0004d	e8 00 00 00 00	 call	 __ltod3
  00052	f2 0f 10 4d dc	 movsd	 xmm1, QWORD PTR tv140[ebp]
  00057	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0005b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0005f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00063	f2 0f 11 45 e4	 movsd	 QWORD PTR _fElapsedTime$[ebp], xmm0
; Line 152
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 55 f0	 mov	 edx, DWORD PTR _qwTime$[ebp]
  0006e	89 51 18	 mov	 DWORD PTR [ecx+24], edx
  00071	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$[ebp+4]
  00074	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 155
  00077	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  0007f	66 0f 2f 45 e4	 comisd	 xmm0, QWORD PTR _fElapsedTime$[ebp]
  00084	76 0d		 jbe	 SHORT $LN1@GetElapsed
; Line 156
  00086	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  0008e	f2 0f 11 45 e4	 movsd	 QWORD PTR _fElapsedTime$[ebp], xmm0
$LN1@GetElapsed:
; Line 158
  00093	f2 0f 5a 45 e4	 cvtsd2ss xmm0, QWORD PTR _fElapsedTime$[ebp]
  00098	f3 0f 11 45 d8	 movss	 DWORD PTR tv136[ebp], xmm0
  0009d	d9 45 d8	 fld	 DWORD PTR tv136[ebp]
; Line 159
  000a0	52		 push	 edx
  000a1	8b cd		 mov	 ecx, ebp
  000a3	50		 push	 eax
  000a4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetElapsed
  000aa	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000af	58		 pop	 eax
  000b0	5a		 pop	 edx
  000b1	5f		 pop	 edi
  000b2	83 c4 28	 add	 esp, 40			; 00000028H
  000b5	3b ec		 cmp	 ebp, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
$LN6@GetElapsed:
  000c0	01 00 00 00	 DD	 1
  000c4	00 00 00 00	 DD	 $LN5@GetElapsed
$LN5@GetElapsed:
  000c8	f0 ff ff ff	 DD	 -16			; fffffff0H
  000cc	08 00 00 00	 DD	 8
  000d0	00 00 00 00	 DD	 $LN4@GetElapsed
$LN4@GetElapsed:
  000d4	71		 DB	 113			; 00000071H
  000d5	77		 DB	 119			; 00000077H
  000d6	54		 DB	 84			; 00000054H
  000d7	69		 DB	 105			; 00000069H
  000d8	6d		 DB	 109			; 0000006dH
  000d9	65		 DB	 101			; 00000065H
  000da	00		 DB	 0
?GetElapsedTime@CDXUTTimer@@QAEMXZ ENDP			; CDXUTTimer::GetElapsedTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv93 = -36						; size = 8
_fAppTime$ = -28					; size = 8
_qwTime$ = -16						; size = 8
_this$ = -4						; size = 4
?GetTime@CDXUTTimer@@QBENXZ PROC			; CDXUTTimer::GetTime
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 110
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00011	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00014	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00017	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00020	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00023	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00026	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 111
  00029	8d 45 f0	 lea	 eax, DWORD PTR _qwTime$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?GetAdjustedCurrentTime@CDXUTTimer@@IBE?AT_LARGE_INTEGER@@XZ ; CDXUTTimer::GetAdjustedCurrentTime
; Line 113
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	8b 45 f0	 mov	 eax, DWORD PTR _qwTime$[ebp]
  0003b	2b 41 20	 sub	 eax, DWORD PTR [ecx+32]
  0003e	8b 55 f4	 mov	 edx, DWORD PTR _qwTime$[ebp+4]
  00041	1b 51 24	 sbb	 edx, DWORD PTR [ecx+36]
  00044	8b c8		 mov	 ecx, eax
  00046	e8 00 00 00 00	 call	 __ltod3
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00051	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00054	8b c8		 mov	 ecx, eax
  00056	f2 0f 11 45 dc	 movsd	 QWORD PTR tv93[ebp], xmm0
  0005b	e8 00 00 00 00	 call	 __ltod3
  00060	f2 0f 10 4d dc	 movsd	 xmm1, QWORD PTR tv93[ebp]
  00065	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00069	f2 0f 11 4d e4	 movsd	 QWORD PTR _fAppTime$[ebp], xmm1
; Line 115
  0006e	dd 45 e4	 fld	 QWORD PTR _fAppTime$[ebp]
; Line 116
  00071	52		 push	 edx
  00072	8b cd		 mov	 ecx, ebp
  00074	50		 push	 eax
  00075	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@GetTime
  0007b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00080	58		 pop	 eax
  00081	5a		 pop	 edx
  00082	83 c4 24	 add	 esp, 36			; 00000024H
  00085	3b ec		 cmp	 ebp, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN5@GetTime:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@GetTime
$LN4@GetTime:
  00098	f0 ff ff ff	 DD	 -16			; fffffff0H
  0009c	08 00 00 00	 DD	 8
  000a0	00 00 00 00	 DD	 $LN3@GetTime
$LN3@GetTime:
  000a4	71		 DB	 113			; 00000071H
  000a5	77		 DB	 119			; 00000077H
  000a6	54		 DB	 84			; 00000054H
  000a7	69		 DB	 105			; 00000069H
  000a8	6d		 DB	 109			; 0000006dH
  000a9	65		 DB	 101			; 00000065H
  000aa	00		 DB	 0
?GetTime@CDXUTTimer@@QBENXZ ENDP			; CDXUTTimer::GetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv89 = -36						; size = 8
_fTime$ = -28						; size = 8
_qwTime$ = -16						; size = 8
_this$ = -4						; size = 4
?GetAbsoluteTime@CDXUTTimer@@QBENXZ PROC		; CDXUTTimer::GetAbsoluteTime
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 98
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _qwTime$[ebp], 0
  00031	33 c0		 xor	 eax, eax
  00033	89 45 f4	 mov	 DWORD PTR _qwTime$[ebp+4], eax
; Line 100
  00036	8b f4		 mov	 esi, esp
  00038	8d 4d f0	 lea	 ecx, DWORD PTR _qwTime$[ebp]
  0003b	51		 push	 ecx
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceCounter@4
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00049	8b 55 f4	 mov	 edx, DWORD PTR _qwTime$[ebp+4]
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _qwTime$[ebp]
  0004f	e8 00 00 00 00	 call	 __ltod3
  00054	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005a	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  0005d	f2 0f 11 45 dc	 movsd	 QWORD PTR tv89[ebp], xmm0
  00062	e8 00 00 00 00	 call	 __ltod3
  00067	f2 0f 10 4d dc	 movsd	 xmm1, QWORD PTR tv89[ebp]
  0006c	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00070	f2 0f 11 4d e4	 movsd	 QWORD PTR _fTime$[ebp], xmm1
; Line 104
  00075	dd 45 e4	 fld	 QWORD PTR _fTime$[ebp]
; Line 105
  00078	52		 push	 edx
  00079	8b cd		 mov	 ecx, ebp
  0007b	50		 push	 eax
  0007c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@GetAbsolut
  00082	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00087	58		 pop	 eax
  00088	5a		 pop	 edx
  00089	5e		 pop	 esi
  0008a	83 c4 24	 add	 esp, 36			; 00000024H
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
$LN5@GetAbsolut:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@GetAbsolut
$LN4@GetAbsolut:
  000a0	f0 ff ff ff	 DD	 -16			; fffffff0H
  000a4	08 00 00 00	 DD	 8
  000a8	00 00 00 00	 DD	 $LN3@GetAbsolut
$LN3@GetAbsolut:
  000ac	71		 DB	 113			; 00000071H
  000ad	77		 DB	 119			; 00000077H
  000ae	54		 DB	 84			; 00000054H
  000af	69		 DB	 105			; 00000069H
  000b0	6d		 DB	 109			; 0000006dH
  000b1	65		 DB	 101			; 00000065H
  000b2	00		 DB	 0
?GetAbsoluteTime@CDXUTTimer@@QBENXZ ENDP		; CDXUTTimer::GetAbsoluteTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Advance@CDXUTTimer@@QAEXXZ PROC			; CDXUTTimer::Advance
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 91
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 92
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	6a 00		 push	 0
  00013	6a 0a		 push	 10			; 0000000aH
  00015	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00018	51		 push	 ecx
  00019	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __alldiv
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	03 41 10	 add	 eax, DWORD PTR [ecx+16]
  00028	13 51 14	 adc	 edx, DWORD PTR [ecx+20]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00031	89 51 14	 mov	 DWORD PTR [ecx+20], edx
; Line 93
  00034	83 c4 04	 add	 esp, 4
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?Advance@CDXUTTimer@@QAEXXZ ENDP			; CDXUTTimer::Advance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_qwTime$1 = -16						; size = 8
_this$ = -4						; size = 4
?Stop@CDXUTTimer@@QAEXXZ PROC				; CDXUTTimer::Stop
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 77
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 78
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00025	85 c9		 test	 ecx, ecx
  00027	75 44		 jne	 SHORT $LN2@Stop
; Line 80
  00029	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _qwTime$1[ebp], 0
  00030	33 d2		 xor	 edx, edx
  00032	89 55 f4	 mov	 DWORD PTR _qwTime$1[ebp+4], edx
; Line 81
  00035	8b f4		 mov	 esi, esp
  00037	8d 45 f0	 lea	 eax, DWORD PTR _qwTime$1[ebp]
  0003a	50		 push	 eax
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceCounter@4
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 82
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 55 f0	 mov	 edx, DWORD PTR _qwTime$1[ebp]
  0004e	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  00051	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$1[ebp+4]
  00054	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; Line 83
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 55 f0	 mov	 edx, DWORD PTR _qwTime$1[ebp]
  0005d	89 51 18	 mov	 DWORD PTR [ecx+24], edx
  00060	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$1[ebp+4]
  00063	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 84
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	c6 41 01 01	 mov	 BYTE PTR [ecx+1], 1
$LN2@Stop:
; Line 86
  0006d	52		 push	 edx
  0006e	8b cd		 mov	 ecx, ebp
  00070	50		 push	 eax
  00071	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@Stop
  00077	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007c	58		 pop	 eax
  0007d	5a		 pop	 edx
  0007e	5e		 pop	 esi
  0007f	83 c4 14	 add	 esp, 20			; 00000014H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
  0008d	8d 49 00	 npad	 3
$LN6@Stop:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN5@Stop
$LN5@Stop:
  00098	f0 ff ff ff	 DD	 -16			; fffffff0H
  0009c	08 00 00 00	 DD	 8
  000a0	00 00 00 00	 DD	 $LN4@Stop
$LN4@Stop:
  000a4	71		 DB	 113			; 00000071H
  000a5	77		 DB	 119			; 00000077H
  000a6	54		 DB	 84			; 00000054H
  000a7	69		 DB	 105			; 00000069H
  000a8	6d		 DB	 109			; 0000006dH
  000a9	65		 DB	 101			; 00000065H
  000aa	00		 DB	 0
?Stop@CDXUTTimer@@QAEXXZ ENDP				; CDXUTTimer::Stop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_qwTime$ = -16						; size = 8
_this$ = -4						; size = 4
?Start@CDXUTTimer@@QAEXXZ PROC				; CDXUTTimer::Start
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 62
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 64
  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _qwTime$[ebp], 0
  00025	33 c0		 xor	 eax, eax
  00027	89 45 f4	 mov	 DWORD PTR _qwTime$[ebp+4], eax
; Line 65
  0002a	8b f4		 mov	 esi, esp
  0002c	8d 4d f0	 lea	 ecx, DWORD PTR _qwTime$[ebp]
  0002f	51		 push	 ecx
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceCounter@4
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 67
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00040	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  00044	85 c0		 test	 eax, eax
  00046	74 21		 je	 SHORT $LN1@Start
; Line 68
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 55 f0	 mov	 edx, DWORD PTR _qwTime$[ebp]
  0004e	2b 51 10	 sub	 edx, DWORD PTR [ecx+16]
  00051	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$[ebp+4]
  00054	1b 41 14	 sbb	 eax, DWORD PTR [ecx+20]
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	03 51 20	 add	 edx, DWORD PTR [ecx+32]
  0005d	13 41 24	 adc	 eax, DWORD PTR [ecx+36]
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	89 51 20	 mov	 DWORD PTR [ecx+32], edx
  00066	89 41 24	 mov	 DWORD PTR [ecx+36], eax
$LN1@Start:
; Line 69
  00069	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0
  00073	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
; Line 70
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _qwTime$[ebp]
  00080	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR _qwTime$[ebp+4]
  00086	89 50 1c	 mov	 DWORD PTR [eax+28], edx
; Line 71
  00089	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	c6 40 01 00	 mov	 BYTE PTR [eax+1], 0
; Line 72
  00090	52		 push	 edx
  00091	8b cd		 mov	 ecx, ebp
  00093	50		 push	 eax
  00094	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@Start
  0009a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009f	58		 pop	 eax
  000a0	5a		 pop	 edx
  000a1	5e		 pop	 esi
  000a2	83 c4 14	 add	 esp, 20			; 00000014H
  000a5	3b ec		 cmp	 ebp, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
$LN6@Start:
  000b0	01 00 00 00	 DD	 1
  000b4	00 00 00 00	 DD	 $LN5@Start
$LN5@Start:
  000b8	f0 ff ff ff	 DD	 -16			; fffffff0H
  000bc	08 00 00 00	 DD	 8
  000c0	00 00 00 00	 DD	 $LN4@Start
$LN4@Start:
  000c4	71		 DB	 113			; 00000071H
  000c5	77		 DB	 119			; 00000077H
  000c6	54		 DB	 84			; 00000054H
  000c7	69		 DB	 105			; 00000069H
  000c8	6d		 DB	 109			; 0000006dH
  000c9	65		 DB	 101			; 00000065H
  000ca	00		 DB	 0
?Start@CDXUTTimer@@QAEXXZ ENDP				; CDXUTTimer::Start
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_qwTime$ = -16						; size = 8
_this$ = -4						; size = 4
?Reset@CDXUTTimer@@QAEXXZ PROC				; CDXUTTimer::Reset
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 50
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 51
  0001d	8d 45 f0	 lea	 eax, DWORD PTR _qwTime$[ebp]
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?GetAdjustedCurrentTime@CDXUTTimer@@IBE?AT_LARGE_INTEGER@@XZ ; CDXUTTimer::GetAdjustedCurrentTime
; Line 53
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 f0	 mov	 edx, DWORD PTR _qwTime$[ebp]
  0002f	89 51 20	 mov	 DWORD PTR [ecx+32], edx
  00032	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$[ebp+4]
  00035	89 41 24	 mov	 DWORD PTR [ecx+36], eax
; Line 54
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 55 f0	 mov	 edx, DWORD PTR _qwTime$[ebp]
  0003e	89 51 18	 mov	 DWORD PTR [ecx+24], edx
  00041	8b 45 f4	 mov	 eax, DWORD PTR _qwTime$[ebp+4]
  00044	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 55
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00051	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
; Line 56
  00058	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005b	c6 42 01 00	 mov	 BYTE PTR [edx+1], 0
; Line 57
  0005f	52		 push	 edx
  00060	8b cd		 mov	 ecx, ebp
  00062	50		 push	 eax
  00063	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Reset
  00069	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006e	58		 pop	 eax
  0006f	5a		 pop	 edx
  00070	83 c4 14	 add	 esp, 20			; 00000014H
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
  0007e	8b ff		 npad	 2
$LN5@Reset:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Reset
$LN4@Reset:
  00088	f0 ff ff ff	 DD	 -16			; fffffff0H
  0008c	08 00 00 00	 DD	 8
  00090	00 00 00 00	 DD	 $LN3@Reset
$LN3@Reset:
  00094	71		 DB	 113			; 00000071H
  00095	77		 DB	 119			; 00000077H
  00096	54		 DB	 84			; 00000054H
  00097	69		 DB	 105			; 00000069H
  00098	6d		 DB	 109			; 0000006dH
  00099	65		 DB	 101			; 00000065H
  0009a	00		 DB	 0
?Reset@CDXUTTimer@@QAEXXZ ENDP				; CDXUTTimer::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_qwTicksPerSec$ = -16					; size = 8
_this$ = -4						; size = 4
??0CDXUTTimer@@QAE@XZ PROC				; CDXUTTimer::CDXUTTimer
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 33
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 34
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c6 40 01 01	 mov	 BYTE PTR [eax+1], 1
; Line 35
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0002f	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
; Line 37
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0
  00040	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
; Line 38
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  00051	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
; Line 39
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00062	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
; Line 42
  00069	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _qwTicksPerSec$[ebp], 0
  00070	33 d2		 xor	 edx, edx
  00072	89 55 f4	 mov	 DWORD PTR _qwTicksPerSec$[ebp+4], edx
; Line 43
  00075	8b f4		 mov	 esi, esp
  00077	8d 45 f0	 lea	 eax, DWORD PTR _qwTicksPerSec$[ebp]
  0007a	50		 push	 eax
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceFrequency@4
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 44
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 55 f0	 mov	 edx, DWORD PTR _qwTicksPerSec$[ebp]
  0008e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00091	8b 45 f4	 mov	 eax, DWORD PTR _qwTicksPerSec$[ebp+4]
  00094	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 45
  00097	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	52		 push	 edx
  0009b	8b cd		 mov	 ecx, ebp
  0009d	50		 push	 eax
  0009e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@CDXUTTimer
  000a4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a9	58		 pop	 eax
  000aa	5a		 pop	 edx
  000ab	5e		 pop	 esi
  000ac	83 c4 14	 add	 esp, 20			; 00000014H
  000af	3b ec		 cmp	 ebp, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
  000ba	8b ff		 npad	 2
$LN5@CDXUTTimer:
  000bc	01 00 00 00	 DD	 1
  000c0	00 00 00 00	 DD	 $LN4@CDXUTTimer
$LN4@CDXUTTimer:
  000c4	f0 ff ff ff	 DD	 -16			; fffffff0H
  000c8	08 00 00 00	 DD	 8
  000cc	00 00 00 00	 DD	 $LN3@CDXUTTimer
$LN3@CDXUTTimer:
  000d0	71		 DB	 113			; 00000071H
  000d1	77		 DB	 119			; 00000077H
  000d2	54		 DB	 84			; 00000054H
  000d3	69		 DB	 105			; 00000069H
  000d4	63		 DB	 99			; 00000063H
  000d5	6b		 DB	 107			; 0000006bH
  000d6	73		 DB	 115			; 00000073H
  000d7	50		 DB	 80			; 00000050H
  000d8	65		 DB	 101			; 00000065H
  000d9	72		 DB	 114			; 00000072H
  000da	53		 DB	 83			; 00000053H
  000db	65		 DB	 101			; 00000065H
  000dc	63		 DB	 99			; 00000063H
  000dd	00		 DB	 0
??0CDXUTTimer@@QAE@XZ ENDP				; CDXUTTimer::CDXUTTimer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv160 = -36						; size = 4
tv159 = -32						; size = 4
$T1 = -28						; size = 4
_dc$ = -24						; size = 4
_hr$ = -20						; size = 4
_pBackBuffer$ = -12					; size = 4
_pSwap$ = -4						; size = 4
_szFileName$ = 8					; size = 4
_usedds$ = 12						; size = 1
?DXUTSnapD3D11Screenshot@@YAJPB_W_N@Z PROC		; DXUTSnapD3D11Screenshot
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 1250
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 1251
  00027	e8 00 00 00 00	 call	 ?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
  0002c	89 45 fc	 mov	 DWORD PTR _pSwap$[ebp], eax
; Line 1253
  0002f	83 7d fc 00	 cmp	 DWORD PTR _pSwap$[ebp], 0
  00033	75 0a		 jne	 SHORT $LN7@DXUTSnapD3
; Line 1254
  00035	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  0003a	e9 ea 00 00 00	 jmp	 $LN8@DXUTSnapD3
$LN7@DXUTSnapD3:
; Line 1257
  0003f	8b f4		 mov	 esi, esp
  00041	8d 45 f4	 lea	 eax, DWORD PTR _pBackBuffer$[ebp]
  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
  0004a	6a 00		 push	 0
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _pSwap$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 fc	 mov	 eax, DWORD PTR _pSwap$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 24	 mov	 ecx, DWORD PTR [edx+36]
  00058	ff d1		 call	 ecx
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1258
  00064	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00068	74 08		 je	 SHORT $LN6@DXUTSnapD3
; Line 1259
  0006a	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  0006d	e9 b7 00 00 00	 jmp	 $LN8@DXUTSnapD3
$LN6@DXUTSnapD3:
; Line 1261
  00072	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  00077	89 45 e8	 mov	 DWORD PTR _dc$[ebp], eax
; Line 1262
  0007a	83 7d e8 00	 cmp	 DWORD PTR _dc$[ebp], 0
  0007e	75 2b		 jne	 SHORT $LN5@DXUTSnapD3
; Line 1263
  00080	83 7d f4 00	 cmp	 DWORD PTR _pBackBuffer$[ebp], 0
  00084	74 1e		 je	 SHORT $LN4@DXUTSnapD3
  00086	8b 55 f4	 mov	 edx, DWORD PTR _pBackBuffer$[ebp]
  00089	8b 02		 mov	 eax, DWORD PTR [edx]
  0008b	8b f4		 mov	 esi, esp
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR _pBackBuffer$[ebp]
  00090	51		 push	 ecx
  00091	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00094	ff d2		 call	 edx
  00096	3b f4		 cmp	 esi, esp
  00098	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pBackBuffer$[ebp], 0
$LN4@DXUTSnapD3:
; Line 1264
  000a4	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000a9	eb 7e		 jmp	 SHORT $LN8@DXUTSnapD3
$LN5@DXUTSnapD3:
; Line 1267
  000ab	0f b6 45 0c	 movzx	 eax, BYTE PTR _usedds$[ebp]
  000af	85 c0		 test	 eax, eax
  000b1	74 19		 je	 SHORT $LN3@DXUTSnapD3
; Line 1269
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _szFileName$[ebp]
  000b6	51		 push	 ecx
  000b7	8b 55 f4	 mov	 edx, DWORD PTR _pBackBuffer$[ebp]
  000ba	52		 push	 edx
  000bb	8b 45 e8	 mov	 eax, DWORD PTR _dc$[ebp]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z ; DirectX::SaveDDSTextureToFile
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c7	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1271
  000ca	eb 36		 jmp	 SHORT $LN2@DXUTSnapD3
$LN3@DXUTSnapD3:
; Line 1273
  000cc	83 ec 18	 sub	 esp, 24			; 00000018H
  000cf	8b cc		 mov	 ecx, esp
  000d1	89 65 e4	 mov	 DWORD PTR $T1[ebp], esp
  000d4	6a 00		 push	 0
  000d6	e8 00 00 00 00	 call	 ??0?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@$$T@Z ; std::function<void __cdecl(IPropertyBag2 *)>::function<void __cdecl(IPropertyBag2 *)>
  000db	89 45 e0	 mov	 DWORD PTR tv159[ebp], eax
  000de	6a 00		 push	 0
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR _szFileName$[ebp]
  000e3	51		 push	 ecx
  000e4	68 00 00 00 00	 push	 OFFSET _GUID_ContainerFormatBmp
  000e9	8b 55 f4	 mov	 edx, DWORD PTR _pBackBuffer$[ebp]
  000ec	52		 push	 edx
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _dc$[ebp]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z ; DirectX::SaveWICTextureToFile
  000f6	83 c4 2c	 add	 esp, 44			; 0000002cH
  000f9	89 45 dc	 mov	 DWORD PTR tv160[ebp], eax
  000fc	8b 4d dc	 mov	 ecx, DWORD PTR tv160[ebp]
  000ff	89 4d ec	 mov	 DWORD PTR _hr$[ebp], ecx
$LN2@DXUTSnapD3:
; Line 1276
  00102	83 7d f4 00	 cmp	 DWORD PTR _pBackBuffer$[ebp], 0
  00106	74 1e		 je	 SHORT $LN1@DXUTSnapD3
  00108	8b 55 f4	 mov	 edx, DWORD PTR _pBackBuffer$[ebp]
  0010b	8b 02		 mov	 eax, DWORD PTR [edx]
  0010d	8b f4		 mov	 esi, esp
  0010f	8b 4d f4	 mov	 ecx, DWORD PTR _pBackBuffer$[ebp]
  00112	51		 push	 ecx
  00113	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00116	ff d2		 call	 edx
  00118	3b f4		 cmp	 esi, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pBackBuffer$[ebp], 0
$LN1@DXUTSnapD3:
; Line 1278
  00126	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
$LN8@DXUTSnapD3:
; Line 1280
  00129	52		 push	 edx
  0012a	8b cd		 mov	 ecx, ebp
  0012c	50		 push	 eax
  0012d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@DXUTSnapD3
  00133	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00138	58		 pop	 eax
  00139	5a		 pop	 edx
  0013a	5e		 pop	 esi
  0013b	83 c4 24	 add	 esp, 36			; 00000024H
  0013e	3b ec		 cmp	 ebp, esp
  00140	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c3		 ret	 0
  00149	8d 49 00	 npad	 3
$LN13@DXUTSnapD3:
  0014c	01 00 00 00	 DD	 1
  00150	00 00 00 00	 DD	 $LN12@DXUTSnapD3
$LN12@DXUTSnapD3:
  00154	f4 ff ff ff	 DD	 -12			; fffffff4H
  00158	04 00 00 00	 DD	 4
  0015c	00 00 00 00	 DD	 $LN11@DXUTSnapD3
$LN11@DXUTSnapD3:
  00160	70		 DB	 112			; 00000070H
  00161	42		 DB	 66			; 00000042H
  00162	61		 DB	 97			; 00000061H
  00163	63		 DB	 99			; 00000063H
  00164	6b		 DB	 107			; 0000006bH
  00165	42		 DB	 66			; 00000042H
  00166	75		 DB	 117			; 00000075H
  00167	66		 DB	 102			; 00000066H
  00168	66		 DB	 102			; 00000066H
  00169	65		 DB	 101			; 00000065H
  0016a	72		 DB	 114			; 00000072H
  0016b	00		 DB	 0
?DXUTSnapD3D11Screenshot@@YAJPB_W_N@Z ENDP		; DXUTSnapD3D11Screenshot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hInst$1 = -4						; size = 4
_bEnable$ = 8						; size = 1
?DXUTEnableXInput@@YAX_N@Z PROC				; DXUTEnableXInput
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 1051
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1053
  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputEnable@?1??DXUTEnableXInput@@YAX_N@Z@4P6GXH@ZA, 0
  00013	75 41		 jne	 SHORT $LN3@DXUTEnable
; Line 1055
  00015	8b f4		 mov	 esi, esp
  00017	68 00 08 00 00	 push	 2048			; 00000800H
  0001c	6a 00		 push	 0
  0001e	68 00 00 00 00	 push	 OFFSET $SG153107
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	89 45 fc	 mov	 DWORD PTR _hInst$1[ebp], eax
; Line 1056
  00033	83 7d fc 00	 cmp	 DWORD PTR _hInst$1[ebp], 0
  00037	74 1d		 je	 SHORT $LN3@DXUTEnable
; Line 1057
  00039	8b f4		 mov	 esi, esp
  0003b	68 00 00 00 00	 push	 OFFSET $SG153110
  00040	8b 45 fc	 mov	 eax, DWORD PTR _hInst$1[ebp]
  00043	50		 push	 eax
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	a3 00 00 00 00	 mov	 DWORD PTR ?s_pXInputEnable@?1??DXUTEnableXInput@@YAX_N@Z@4P6GXH@ZA, eax
$LN3@DXUTEnable:
; Line 1060
  00056	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputEnable@?1??DXUTEnableXInput@@YAX_N@Z@4P6GXH@ZA, 0
  0005d	74 14		 je	 SHORT $LN4@DXUTEnable
; Line 1061
  0005f	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bEnable$[ebp]
  00063	8b f4		 mov	 esi, esp
  00065	51		 push	 ecx
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR ?s_pXInputEnable@?1??DXUTEnableXInput@@YAX_N@Z@4P6GXH@ZA
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@DXUTEnable:
; Line 1062
  00073	5e		 pop	 esi
  00074	83 c4 04	 add	 esp, 4
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
?DXUTEnableXInput@@YAX_N@Z ENDP				; DXUTEnableXInput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_iUserIndex$1 = -20					; size = 4
_vibration$ = -12					; size = 4
_hInst$2 = -4						; size = 4
?DXUTStopRumbleOnAllControllers@@YAJXZ PROC		; DXUTStopRumbleOnAllControllers
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 1070
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 1072
  0001b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputSetState@?1??DXUTStopRumbleOnAllControllers@@YAJXZ@4P6GKKPAU_XINPUT_VIBRATION@@@ZA, 0
  00022	75 41		 jne	 SHORT $LN6@DXUTStopRu
; Line 1074
  00024	8b f4		 mov	 esi, esp
  00026	68 00 08 00 00	 push	 2048			; 00000800H
  0002b	6a 00		 push	 0
  0002d	68 00 00 00 00	 push	 OFFSET $SG153118
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	89 45 fc	 mov	 DWORD PTR _hInst$2[ebp], eax
; Line 1075
  00042	83 7d fc 00	 cmp	 DWORD PTR _hInst$2[ebp], 0
  00046	74 1d		 je	 SHORT $LN6@DXUTStopRu
; Line 1076
  00048	8b f4		 mov	 esi, esp
  0004a	68 00 00 00 00	 push	 OFFSET $SG153121
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _hInst$2[ebp]
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?s_pXInputSetState@?1??DXUTStopRumbleOnAllControllers@@YAJXZ@4P6GKKPAU_XINPUT_VIBRATION@@@ZA, eax
$LN6@DXUTStopRu:
; Line 1078
  00065	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputSetState@?1??DXUTStopRumbleOnAllControllers@@YAJXZ@4P6GKKPAU_XINPUT_VIBRATION@@@ZA, 0
  0006c	75 07		 jne	 SHORT $LN4@DXUTStopRu
; Line 1079
  0006e	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00073	eb 3f		 jmp	 SHORT $LN7@DXUTStopRu
$LN4@DXUTStopRu:
; Line 1082
  00075	33 c9		 xor	 ecx, ecx
  00077	66 89 4d f4	 mov	 WORD PTR _vibration$[ebp], cx
; Line 1083
  0007b	33 d2		 xor	 edx, edx
  0007d	66 89 55 f6	 mov	 WORD PTR _vibration$[ebp+2], dx
; Line 1084
  00081	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iUserIndex$1[ebp], 0
  00088	eb 09		 jmp	 SHORT $LN3@DXUTStopRu
$LN2@DXUTStopRu:
  0008a	8b 45 ec	 mov	 eax, DWORD PTR _iUserIndex$1[ebp]
  0008d	83 c0 01	 add	 eax, 1
  00090	89 45 ec	 mov	 DWORD PTR _iUserIndex$1[ebp], eax
$LN3@DXUTStopRu:
  00093	83 7d ec 04	 cmp	 DWORD PTR _iUserIndex$1[ebp], 4
  00097	7d 19		 jge	 SHORT $LN1@DXUTStopRu
; Line 1085
  00099	8b f4		 mov	 esi, esp
  0009b	8d 4d f4	 lea	 ecx, DWORD PTR _vibration$[ebp]
  0009e	51		 push	 ecx
  0009f	8b 55 ec	 mov	 edx, DWORD PTR _iUserIndex$1[ebp]
  000a2	52		 push	 edx
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR ?s_pXInputSetState@?1??DXUTStopRumbleOnAllControllers@@YAJXZ@4P6GKKPAU_XINPUT_VIBRATION@@@ZA
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	eb d8		 jmp	 SHORT $LN2@DXUTStopRu
$LN1@DXUTStopRu:
; Line 1087
  000b2	33 c0		 xor	 eax, eax
$LN7@DXUTStopRu:
; Line 1088
  000b4	52		 push	 edx
  000b5	8b cd		 mov	 ecx, ebp
  000b7	50		 push	 eax
  000b8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@DXUTStopRu
  000be	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c3	58		 pop	 eax
  000c4	5a		 pop	 edx
  000c5	5e		 pop	 esi
  000c6	83 c4 14	 add	 esp, 20			; 00000014H
  000c9	3b ec		 cmp	 ebp, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
$LN11@DXUTStopRu:
  000d4	01 00 00 00	 DD	 1
  000d8	00 00 00 00	 DD	 $LN10@DXUTStopRu
$LN10@DXUTStopRu:
  000dc	f4 ff ff ff	 DD	 -12			; fffffff4H
  000e0	04 00 00 00	 DD	 4
  000e4	00 00 00 00	 DD	 $LN9@DXUTStopRu
$LN9@DXUTStopRu:
  000e8	76		 DB	 118			; 00000076H
  000e9	69		 DB	 105			; 00000069H
  000ea	62		 DB	 98			; 00000062H
  000eb	72		 DB	 114			; 00000072H
  000ec	61		 DB	 97			; 00000061H
  000ed	74		 DB	 116			; 00000074H
  000ee	69		 DB	 105			; 00000069H
  000ef	6f		 DB	 111			; 0000006fH
  000f0	6e		 DB	 110			; 0000006eH
  000f1	00		 DB	 0
?DXUTStopRumbleOnAllControllers@@YAJXZ ENDP		; DXUTStopRumbleOnAllControllers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv275 = -80						; size = 4
tv272 = -76						; size = 4
tv266 = -72						; size = 4
tv260 = -68						; size = 4
tv257 = -64						; size = 4
tv251 = -60						; size = 4
tv133 = -56						; size = 4
tv94 = -52						; size = 4
tv87 = -48						; size = 4
_bPressed$ = -41					; size = 1
_bWasConnected$ = -40					; size = 4
_dwResult$ = -36					; size = 4
_InputState$ = -28					; size = 16
_hInst$1 = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwPort$ = 8						; size = 4
_pGamePad$ = 12						; size = 4
_bThumbstickDeadZone$ = 16				; size = 1
_bSnapThumbstickToCardinals$ = 20			; size = 1
?DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z PROC	; DXUTGetGamepadState
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.cpp
; Line 940
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000b	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 941
  00021	83 7d 08 04	 cmp	 DWORD PTR _dwPort$[ebp], 4
  00025	73 06		 jae	 SHORT $LN17@DXUTGetGam
  00027	83 7d 0c 00	 cmp	 DWORD PTR _pGamePad$[ebp], 0
  0002b	75 0a		 jne	 SHORT $LN18@DXUTGetGam
$LN17@DXUTGetGam:
; Line 942
  0002d	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00032	e9 44 04 00 00	 jmp	 $LN19@DXUTGetGam
$LN18@DXUTGetGam:
; Line 946
  00037	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputGetState@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKPAU_XINPUT_STATE@@@ZA, 0
  0003e	74 09		 je	 SHORT $LN15@DXUTGetGam
  00040	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputGetCapabilities@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKKPAU_XINPUT_CAPABILITIES@@@ZA, 0
  00047	75 5e		 jne	 SHORT $LN14@DXUTGetGam
$LN15@DXUTGetGam:
; Line 948
  00049	8b f4		 mov	 esi, esp
  0004b	68 00 08 00 00	 push	 2048			; 00000800H
  00050	6a 00		 push	 0
  00052	68 00 00 00 00	 push	 OFFSET $SG153072
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExW@12
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	89 45 f8	 mov	 DWORD PTR _hInst$1[ebp], eax
; Line 949
  00067	83 7d f8 00	 cmp	 DWORD PTR _hInst$1[ebp], 0
  0006b	74 3a		 je	 SHORT $LN14@DXUTGetGam
; Line 951
  0006d	8b f4		 mov	 esi, esp
  0006f	68 00 00 00 00	 push	 OFFSET $SG153075
  00074	8b 45 f8	 mov	 eax, DWORD PTR _hInst$1[ebp]
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	a3 00 00 00 00	 mov	 DWORD PTR ?s_pXInputGetState@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKPAU_XINPUT_STATE@@@ZA, eax
; Line 952
  0008a	8b f4		 mov	 esi, esp
  0008c	68 00 00 00 00	 push	 OFFSET $SG153077
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _hInst$1[ebp]
  00094	51		 push	 ecx
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	a3 00 00 00 00	 mov	 DWORD PTR ?s_pXInputGetCapabilities@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKKPAU_XINPUT_CAPABILITIES@@@ZA, eax
$LN14@DXUTGetGam:
; Line 955
  000a7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputGetState@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKPAU_XINPUT_STATE@@@ZA, 0
  000ae	75 0a		 jne	 SHORT $LN13@DXUTGetGam
; Line 956
  000b0	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000b5	e9 c1 03 00 00	 jmp	 $LN19@DXUTGetGam
$LN13@DXUTGetGam:
; Line 959
  000ba	8b f4		 mov	 esi, esp
  000bc	8d 55 e4	 lea	 edx, DWORD PTR _InputState$[ebp]
  000bf	52		 push	 edx
  000c0	8b 45 08	 mov	 eax, DWORD PTR _dwPort$[ebp]
  000c3	50		 push	 eax
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR ?s_pXInputGetState@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKPAU_XINPUT_STATE@@@ZA
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	89 45 dc	 mov	 DWORD PTR _dwResult$[ebp], eax
; Line 962
  000d4	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  000d7	0f b6 51 20	 movzx	 edx, BYTE PTR [ecx+32]
  000db	89 55 d8	 mov	 DWORD PTR _bWasConnected$[ebp], edx
; Line 963
  000de	83 7d dc 00	 cmp	 DWORD PTR _dwResult$[ebp], 0
  000e2	75 09		 jne	 SHORT $LN21@DXUTGetGam
  000e4	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR tv87[ebp], 1
  000eb	eb 07		 jmp	 SHORT $LN22@DXUTGetGam
$LN21@DXUTGetGam:
  000ed	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN22@DXUTGetGam:
  000f4	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  000f7	8a 4d d0	 mov	 cl, BYTE PTR tv87[ebp]
  000fa	88 48 20	 mov	 BYTE PTR [eax+32], cl
; Line 964
  000fd	83 7d d8 00	 cmp	 DWORD PTR _bWasConnected$[ebp], 0
  00101	74 14		 je	 SHORT $LN23@DXUTGetGam
  00103	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00106	0f b6 42 20	 movzx	 eax, BYTE PTR [edx+32]
  0010a	85 c0		 test	 eax, eax
  0010c	75 09		 jne	 SHORT $LN23@DXUTGetGam
  0010e	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR tv94[ebp], 1
  00115	eb 07		 jmp	 SHORT $LN24@DXUTGetGam
$LN23@DXUTGetGam:
  00117	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN24@DXUTGetGam:
  0011e	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00121	8a 55 cc	 mov	 dl, BYTE PTR tv94[ebp]
  00124	88 51 22	 mov	 BYTE PTR [ecx+34], dl
; Line 965
  00127	83 7d d8 00	 cmp	 DWORD PTR _bWasConnected$[ebp], 0
  0012b	75 14		 jne	 SHORT $LN25@DXUTGetGam
  0012d	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00130	0f b6 48 20	 movzx	 ecx, BYTE PTR [eax+32]
  00134	85 c9		 test	 ecx, ecx
  00136	74 09		 je	 SHORT $LN25@DXUTGetGam
  00138	c7 45 c8 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  0013f	eb 07		 jmp	 SHORT $LN26@DXUTGetGam
$LN25@DXUTGetGam:
  00141	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN26@DXUTGetGam:
  00148	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  0014b	8a 45 c8	 mov	 al, BYTE PTR tv133[ebp]
  0014e	88 42 21	 mov	 BYTE PTR [edx+33], al
; Line 968
  00151	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00154	0f b6 51 20	 movzx	 edx, BYTE PTR [ecx+32]
  00158	85 d2		 test	 edx, edx
  0015a	75 07		 jne	 SHORT $LN12@DXUTGetGam
; Line 969
  0015c	33 c0		 xor	 eax, eax
  0015e	e9 18 03 00 00	 jmp	 $LN19@DXUTGetGam
$LN12@DXUTGetGam:
; Line 972
  00163	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00166	0f b6 48 21	 movzx	 ecx, BYTE PTR [eax+33]
  0016a	85 c9		 test	 ecx, ecx
  0016c	74 43		 je	 SHORT $LN10@DXUTGetGam
; Line 974
  0016e	6a 3c		 push	 60			; 0000003cH
  00170	6a 00		 push	 0
  00172	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00175	52		 push	 edx
  00176	e8 00 00 00 00	 call	 _memset
  0017b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 975
  0017e	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00181	c6 40 20 01	 mov	 BYTE PTR [eax+32], 1
; Line 976
  00185	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00188	c6 41 21 01	 mov	 BYTE PTR [ecx+33], 1
; Line 977
  0018c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pXInputGetCapabilities@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKKPAU_XINPUT_CAPABILITIES@@@ZA, 0
  00193	74 1c		 je	 SHORT $LN10@DXUTGetGam
; Line 978
  00195	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00198	83 c2 0c	 add	 edx, 12			; 0000000cH
  0019b	8b f4		 mov	 esi, esp
  0019d	52		 push	 edx
  0019e	6a 01		 push	 1
  001a0	8b 45 08	 mov	 eax, DWORD PTR _dwPort$[ebp]
  001a3	50		 push	 eax
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR ?s_pXInputGetCapabilities@?3??DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z@4P6GKKKPAU_XINPUT_CAPABILITIES@@@ZA
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN10@DXUTGetGam:
; Line 982
  001b1	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  001b4	8b 55 e8	 mov	 edx, DWORD PTR _InputState$[ebp+4]
  001b7	89 11		 mov	 DWORD PTR [ecx], edx
  001b9	8b 45 ec	 mov	 eax, DWORD PTR _InputState$[ebp+8]
  001bc	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  001bf	8b 55 f0	 mov	 edx, DWORD PTR _InputState$[ebp+12]
  001c2	89 51 08	 mov	 DWORD PTR [ecx+8], edx
; Line 984
  001c5	0f b6 45 14	 movzx	 eax, BYTE PTR _bSnapThumbstickToCardinals$[ebp]
  001c9	85 c0		 test	 eax, eax
  001cb	0f 84 a1 00 00
	00		 je	 $LN9@DXUTGetGam
; Line 988
  001d1	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  001d4	0f bf 51 04	 movsx	 edx, WORD PTR [ecx+4]
  001d8	81 fa a9 1e 00
	00		 cmp	 edx, 7849		; 00001ea9H
  001de	7d 18		 jge	 SHORT $LN8@DXUTGetGam
  001e0	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  001e3	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  001e7	81 f9 57 e1 ff
	ff		 cmp	 ecx, -7849		; ffffe157H
  001ed	7e 09		 jle	 SHORT $LN8@DXUTGetGam
; Line 989
  001ef	33 d2		 xor	 edx, edx
  001f1	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  001f4	66 89 50 04	 mov	 WORD PTR [eax+4], dx
$LN8@DXUTGetGam:
; Line 991
  001f8	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  001fb	0f bf 51 06	 movsx	 edx, WORD PTR [ecx+6]
  001ff	81 fa a9 1e 00
	00		 cmp	 edx, 7849		; 00001ea9H
  00205	7d 18		 jge	 SHORT $LN7@DXUTGetGam
  00207	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  0020a	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  0020e	81 f9 57 e1 ff
	ff		 cmp	 ecx, -7849		; ffffe157H
  00214	7e 09		 jle	 SHORT $LN7@DXUTGetGam
; Line 992
  00216	33 d2		 xor	 edx, edx
  00218	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  0021b	66 89 50 06	 mov	 WORD PTR [eax+6], dx
$LN7@DXUTGetGam:
; Line 994
  0021f	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00222	0f bf 51 08	 movsx	 edx, WORD PTR [ecx+8]
  00226	81 fa f1 21 00
	00		 cmp	 edx, 8689		; 000021f1H
  0022c	7d 18		 jge	 SHORT $LN6@DXUTGetGam
  0022e	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00231	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  00235	81 f9 0f de ff
	ff		 cmp	 ecx, -8689		; ffffde0fH
  0023b	7e 09		 jle	 SHORT $LN6@DXUTGetGam
; Line 995
  0023d	33 d2		 xor	 edx, edx
  0023f	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00242	66 89 50 08	 mov	 WORD PTR [eax+8], dx
$LN6@DXUTGetGam:
; Line 997
  00246	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00249	0f bf 51 0a	 movsx	 edx, WORD PTR [ecx+10]
  0024d	81 fa f1 21 00
	00		 cmp	 edx, 8689		; 000021f1H
  00253	7d 18		 jge	 SHORT $LN5@DXUTGetGam
  00255	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00258	0f bf 48 0a	 movsx	 ecx, WORD PTR [eax+10]
  0025c	81 f9 0f de ff
	ff		 cmp	 ecx, -8689		; ffffde0fH
  00262	7e 09		 jle	 SHORT $LN5@DXUTGetGam
; Line 998
  00264	33 d2		 xor	 edx, edx
  00266	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00269	66 89 50 0a	 mov	 WORD PTR [eax+10], dx
$LN5@DXUTGetGam:
; Line 999
  0026d	e9 a4 00 00 00	 jmp	 $LN1@DXUTGetGam
$LN9@DXUTGetGam:
; Line 1000
  00272	0f b6 4d 10	 movzx	 ecx, BYTE PTR _bThumbstickDeadZone$[ebp]
  00276	85 c9		 test	 ecx, ecx
  00278	0f 84 98 00 00
	00		 je	 $LN1@DXUTGetGam
; Line 1006
  0027e	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00281	0f bf 42 04	 movsx	 eax, WORD PTR [edx+4]
  00285	3d a9 1e 00 00	 cmp	 eax, 7849		; 00001ea9H
  0028a	7d 3e		 jge	 SHORT $LN2@DXUTGetGam
  0028c	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  0028f	0f bf 51 04	 movsx	 edx, WORD PTR [ecx+4]
  00293	81 fa 57 e1 ff
	ff		 cmp	 edx, -7849		; ffffe157H
  00299	7e 2f		 jle	 SHORT $LN2@DXUTGetGam
  0029b	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  0029e	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  002a2	81 f9 a9 1e 00
	00		 cmp	 ecx, 7849		; 00001ea9H
  002a8	7d 20		 jge	 SHORT $LN2@DXUTGetGam
  002aa	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  002ad	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  002b1	3d 57 e1 ff ff	 cmp	 eax, -7849		; ffffe157H
  002b6	7e 12		 jle	 SHORT $LN2@DXUTGetGam
; Line 1008
  002b8	33 c9		 xor	 ecx, ecx
  002ba	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  002bd	66 89 4a 04	 mov	 WORD PTR [edx+4], cx
; Line 1009
  002c1	33 c0		 xor	 eax, eax
  002c3	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  002c6	66 89 41 06	 mov	 WORD PTR [ecx+6], ax
$LN2@DXUTGetGam:
; Line 1014
  002ca	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  002cd	0f bf 42 08	 movsx	 eax, WORD PTR [edx+8]
  002d1	3d f1 21 00 00	 cmp	 eax, 8689		; 000021f1H
  002d6	7d 3e		 jge	 SHORT $LN1@DXUTGetGam
  002d8	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  002db	0f bf 51 08	 movsx	 edx, WORD PTR [ecx+8]
  002df	81 fa 0f de ff
	ff		 cmp	 edx, -8689		; ffffde0fH
  002e5	7e 2f		 jle	 SHORT $LN1@DXUTGetGam
  002e7	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  002ea	0f bf 48 0a	 movsx	 ecx, WORD PTR [eax+10]
  002ee	81 f9 f1 21 00
	00		 cmp	 ecx, 8689		; 000021f1H
  002f4	7d 20		 jge	 SHORT $LN1@DXUTGetGam
  002f6	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  002f9	0f bf 42 0a	 movsx	 eax, WORD PTR [edx+10]
  002fd	3d 0f de ff ff	 cmp	 eax, -8689		; ffffde0fH
  00302	7e 12		 jle	 SHORT $LN1@DXUTGetGam
; Line 1016
  00304	33 c9		 xor	 ecx, ecx
  00306	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00309	66 89 4a 08	 mov	 WORD PTR [edx+8], cx
; Line 1017
  0030d	33 c0		 xor	 eax, eax
  0030f	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00312	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax
$LN1@DXUTGetGam:
; Line 1022
  00316	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00319	0f bf 42 04	 movsx	 eax, WORD PTR [edx+4]
  0031d	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00321	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46fffe00
  00329	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  0032c	f3 0f 11 41 2c	 movss	 DWORD PTR [ecx+44], xmm0
; Line 1023
  00331	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00334	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  00338	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0033c	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46fffe00
  00344	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00347	f3 0f 11 41 30	 movss	 DWORD PTR [ecx+48], xmm0
; Line 1024
  0034c	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  0034f	0f bf 42 08	 movsx	 eax, WORD PTR [edx+8]
  00353	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00357	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46fffe00
  0035f	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00362	f3 0f 11 41 24	 movss	 DWORD PTR [ecx+36], xmm0
; Line 1025
  00367	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  0036a	0f bf 42 0a	 movsx	 eax, WORD PTR [edx+10]
  0036e	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00372	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46fffe00
  0037a	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  0037d	f3 0f 11 41 28	 movss	 DWORD PTR [ecx+40], xmm0
; Line 1029
  00382	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00385	0f b7 42 38	 movzx	 eax, WORD PTR [edx+56]
  00389	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  0038c	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0038f	33 c2		 xor	 eax, edx
  00391	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00394	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00397	23 c2		 and	 eax, edx
  00399	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  0039c	66 89 41 34	 mov	 WORD PTR [ecx+52], ax
; Line 1030
  003a0	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  003a3	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  003a6	66 8b 08	 mov	 cx, WORD PTR [eax]
  003a9	66 89 4a 38	 mov	 WORD PTR [edx+56], cx
; Line 1033
  003ad	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  003b0	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  003b4	83 f8 1e	 cmp	 eax, 30			; 0000001eH
  003b7	7e 09		 jle	 SHORT $LN27@DXUTGetGam
  003b9	c7 45 c4 01 00
	00 00		 mov	 DWORD PTR tv251[ebp], 1
  003c0	eb 07		 jmp	 SHORT $LN28@DXUTGetGam
$LN27@DXUTGetGam:
  003c2	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN28@DXUTGetGam:
  003c9	8a 4d c4	 mov	 cl, BYTE PTR tv251[ebp]
  003cc	88 4d d7	 mov	 BYTE PTR _bPressed$[ebp], cl
; Line 1034
  003cf	0f b6 55 d7	 movzx	 edx, BYTE PTR _bPressed$[ebp]
  003d3	85 d2		 test	 edx, edx
  003d5	74 23		 je	 SHORT $LN31@DXUTGetGam
  003d7	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  003da	0f b6 48 3a	 movzx	 ecx, BYTE PTR [eax+58]
  003de	85 c9		 test	 ecx, ecx
  003e0	75 09		 jne	 SHORT $LN29@DXUTGetGam
  003e2	c7 45 c0 01 00
	00 00		 mov	 DWORD PTR tv257[ebp], 1
  003e9	eb 07		 jmp	 SHORT $LN30@DXUTGetGam
$LN29@DXUTGetGam:
  003eb	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR tv257[ebp], 0
$LN30@DXUTGetGam:
  003f2	8b 55 c0	 mov	 edx, DWORD PTR tv257[ebp]
  003f5	89 55 bc	 mov	 DWORD PTR tv260[ebp], edx
  003f8	eb 07		 jmp	 SHORT $LN32@DXUTGetGam
$LN31@DXUTGetGam:
  003fa	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv260[ebp], 0
$LN32@DXUTGetGam:
  00401	8b 45 0c	 mov	 eax, DWORD PTR _pGamePad$[ebp]
  00404	8a 4d bc	 mov	 cl, BYTE PTR tv260[ebp]
  00407	88 48 36	 mov	 BYTE PTR [eax+54], cl
; Line 1035
  0040a	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  0040d	8a 45 d7	 mov	 al, BYTE PTR _bPressed$[ebp]
  00410	88 42 3a	 mov	 BYTE PTR [edx+58], al
; Line 1038
  00413	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00416	0f b6 51 03	 movzx	 edx, BYTE PTR [ecx+3]
  0041a	83 fa 1e	 cmp	 edx, 30			; 0000001eH
  0041d	7e 09		 jle	 SHORT $LN33@DXUTGetGam
  0041f	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv266[ebp], 1
  00426	eb 07		 jmp	 SHORT $LN34@DXUTGetGam
$LN33@DXUTGetGam:
  00428	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv266[ebp], 0
$LN34@DXUTGetGam:
  0042f	8a 45 b8	 mov	 al, BYTE PTR tv266[ebp]
  00432	88 45 d7	 mov	 BYTE PTR _bPressed$[ebp], al
; Line 1039
  00435	0f b6 4d d7	 movzx	 ecx, BYTE PTR _bPressed$[ebp]
  00439	85 c9		 test	 ecx, ecx
  0043b	74 23		 je	 SHORT $LN37@DXUTGetGam
  0043d	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  00440	0f b6 42 3b	 movzx	 eax, BYTE PTR [edx+59]
  00444	85 c0		 test	 eax, eax
  00446	75 09		 jne	 SHORT $LN35@DXUTGetGam
  00448	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv272[ebp], 1
  0044f	eb 07		 jmp	 SHORT $LN36@DXUTGetGam
$LN35@DXUTGetGam:
  00451	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv272[ebp], 0
$LN36@DXUTGetGam:
  00458	8b 4d b4	 mov	 ecx, DWORD PTR tv272[ebp]
  0045b	89 4d b0	 mov	 DWORD PTR tv275[ebp], ecx
  0045e	eb 07		 jmp	 SHORT $LN38@DXUTGetGam
$LN37@DXUTGetGam:
  00460	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv275[ebp], 0
$LN38@DXUTGetGam:
  00467	8b 55 0c	 mov	 edx, DWORD PTR _pGamePad$[ebp]
  0046a	8a 45 b0	 mov	 al, BYTE PTR tv275[ebp]
  0046d	88 42 37	 mov	 BYTE PTR [edx+55], al
; Line 1040
  00470	8b 4d 0c	 mov	 ecx, DWORD PTR _pGamePad$[ebp]
  00473	8a 55 d7	 mov	 dl, BYTE PTR _bPressed$[ebp]
  00476	88 51 3b	 mov	 BYTE PTR [ecx+59], dl
; Line 1042
  00479	33 c0		 xor	 eax, eax
$LN19@DXUTGetGam:
; Line 1043
  0047b	52		 push	 edx
  0047c	8b cd		 mov	 ecx, ebp
  0047e	50		 push	 eax
  0047f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN41@DXUTGetGam
  00485	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0048a	58		 pop	 eax
  0048b	5a		 pop	 edx
  0048c	5f		 pop	 edi
  0048d	5e		 pop	 esi
  0048e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00491	33 cd		 xor	 ecx, ebp
  00493	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00498	83 c4 50	 add	 esp, 80			; 00000050H
  0049b	3b ec		 cmp	 ebp, esp
  0049d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a2	8b e5		 mov	 esp, ebp
  004a4	5d		 pop	 ebp
  004a5	c3		 ret	 0
  004a6	8b ff		 npad	 2
$LN41@DXUTGetGam:
  004a8	01 00 00 00	 DD	 1
  004ac	00 00 00 00	 DD	 $LN40@DXUTGetGam
$LN40@DXUTGetGam:
  004b0	e4 ff ff ff	 DD	 -28			; ffffffe4H
  004b4	10 00 00 00	 DD	 16			; 00000010H
  004b8	00 00 00 00	 DD	 $LN39@DXUTGetGam
$LN39@DXUTGetGam:
  004bc	49		 DB	 73			; 00000049H
  004bd	6e		 DB	 110			; 0000006eH
  004be	70		 DB	 112			; 00000070H
  004bf	75		 DB	 117			; 00000075H
  004c0	74		 DB	 116			; 00000074H
  004c1	53		 DB	 83			; 00000053H
  004c2	74		 DB	 116			; 00000074H
  004c3	61		 DB	 97			; 00000061H
  004c4	74		 DB	 116			; 00000074H
  004c5	65		 DB	 101			; 00000065H
  004c6	00		 DB	 0
?DXUTGetGamepadState@@YAJKPAUDXUT_GAMEPAD@@_N1@Z ENDP	; DXUTGetGamepadState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?wcsstr@@YAPA_WPA_WPB_W@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__SubStr$ = 12						; size = 4
?wcsstr@@YAPA_WPA_WPB_W@Z PROC				; wcsstr, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string.h
; Line 391
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR __SubStr$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Str$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcsstr
  00014	83 c4 08	 add	 esp, 8
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	5e		 pop	 esi
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?wcsstr@@YAPA_WPA_WPB_W@Z ENDP				; wcsstr
_TEXT	ENDS
END
