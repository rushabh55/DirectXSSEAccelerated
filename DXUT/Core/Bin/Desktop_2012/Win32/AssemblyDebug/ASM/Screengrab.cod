; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\New Scratch\DXUT\Core\Screengrab.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_GUID_ContainerFormatBmp
PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
PUBLIC	?value@?$integral_constant@H$0A@@std@@2HB	; std::integral_constant<int,0>::value
PUBLIC	__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
PUBLIC	___pobjectentryfirst
PUBLIC	___pobjectentrymid
PUBLIC	___pobjectentrylast
PUBLIC	__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
PUBLIC	?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA ; Microsoft::WRL::Details::ModuleBase::moduleLock_
PUBLIC	?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC ; Microsoft::WRL::Details::ModuleBase::objectCount_
PUBLIC	?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A ; Microsoft::WRL::Details::ModuleBase::module_
PUBLIC	?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<3>::value
PUBLIC	__GUID_00000003_0000_0000_c000_000000000046
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
PUBLIC	?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<4>::value
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<6>::value
PUBLIC	?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<13>::value
PUBLIC	?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<1>::value
PUBLIC	?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<2>::value
PUBLIC	__GUID_00000037_0000_0000_c000_000000000046
PUBLIC	_CLSID_WICImagingFactory
_BSS	SEGMENT
_g_WIC2	DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA
_BSS	SEGMENT
?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::moduleLock_
_BSS	ENDS
;	COMDAT ?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC
_BSS	SEGMENT
?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::objectCount_
_BSS	ENDS
;	COMDAT ?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A
_BSS	SEGMENT
?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::module_
_BSS	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT __GUID_00000037_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000037_0000_0000_c000_000000000046 DD 037H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB DD 02H ; Microsoft::WRL::RuntimeClassFlags<2>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB DD 01H ; Microsoft::WRL::RuntimeClassFlags<1>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB DD 0dH ; Microsoft::WRL::RuntimeClassFlags<13>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB DD 06H ; Microsoft::WRL::RuntimeClassFlags<6>::value
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB DD 04H ; Microsoft::WRL::RuntimeClassFlags<4>::value
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB
CONST	SEGMENT
?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB DD 00H ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
CONST	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000003_0000_0000_c000_000000000046 DD 03H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB DD 03H ; Microsoft::WRL::RuntimeClassFlags<3>::value
CONST	ENDS
;	COMDAT __GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
CONST	SEGMENT
__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90 DD 094ea2b94H
	DW	0e9ccH
	DW	049e0H
	DB	0c0H
	DB	0ffH
	DB	0eeH
	DB	064H
	DB	0caH
	DB	08fH
	DB	05bH
	DB	090H
CONST	ENDS
;	COMDAT ___pobjectentrylast
minATL$__z	SEGMENT
___pobjectentrylast DD 00H
minATL$__z	ENDS
;	COMDAT ___pobjectentrymid
minATL$__m	SEGMENT
___pobjectentrymid DD 00H
minATL$__m	ENDS
;	COMDAT ___pobjectentryfirst
minATL$__a	SEGMENT
___pobjectentryfirst DD 00H
minATL$__a	ENDS
;	COMDAT __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
CONST	SEGMENT
__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70 DD 0ec5ec8a9H
	DW	0c395H
	DW	04314H
	DB	09cH
	DB	077H
	DB	054H
	DB	0d7H
	DB	0a9H
	DB	035H
	DB	0ffH
	DB	070H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@H$0A@@std@@2HB
CONST	SEGMENT
?value@?$integral_constant@H$0A@@std@@2HB DD 00H	; std::integral_constant<int,0>::value
CONST	ENDS
CONST	SEGMENT
$SG158859 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG158860 DB	'p', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG159002 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG159003 DB	'p', 00H, 'T', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 00H, 00H
$SG159025 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG159026 DB	'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG159042 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG159043 DB	'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG160180 DB	'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	'V', 00H, '5', 00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, '3', 00H, '2', 00H, 'b', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'G', 00H, 'R', 00H, 'A', 00H, 00H, 00H
$SG160350 DB	'DirectXTK', 00H
	ORG $+2
$SG160368 DB	'/', 00H, 't', 00H, 'E', 00H, 'X', 00H, 't', 00H, '/', 00H
	DB	'{', 00H, 's', 00H, 't', 00H, 'r', 00H, '=', 00H, 'S', 00H, 'o'
	DB	00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'}', 00H, 00H, 00H
	ORG $+2
$SG160371 DB	'/', 00H, 's', 00H, 'R', 00H, 'G', 00H, 'B', 00H, '/', 00H
	DB	'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H
$SG160374 DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'.', 00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG160377 DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'.', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '.'
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 'S', 00H
	DB	'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
_DDSPF_DXT1 DD	020H
	DD	04H
	DD	031545844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_DXT3 DD	020H
	DD	04H
	DD	033545844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_DXT5 DD	020H
	DD	04H
	DD	035545844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC4_UNORM DD 020H
	DD	04H
	DD	055344342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC4_SNORM DD 020H
	DD	04H
	DD	053344342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC5_UNORM DD 020H
	DD	04H
	DD	055354342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC5_SNORM DD 020H
	DD	04H
	DD	053354342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_R8G8_B8G8 DD 020H
	DD	04H
	DD	047424752H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_G8R8_G8B8 DD 020H
	DD	04H
	DD	042475247H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_YUY2 DD	020H
	DD	04H
	DD	032595559H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_A8R8G8B8 DD 020H
	DD	041H
	DD	00H
	DD	020H
	DD	0ff0000H
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
_DDSPF_X8R8G8B8 DD 020H
	DD	040H
	DD	00H
	DD	020H
	DD	0ff0000H
	DD	0ff00H
	DD	0ffH
	DD	00H
_DDSPF_A8B8G8R8 DD 020H
	DD	041H
	DD	00H
	DD	020H
	DD	0ffH
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
_DDSPF_G16R16 DD 020H
	DD	040H
	DD	00H
	DD	020H
	DD	0ffffH
	DD	0ffff0000H
	DD	00H
	DD	00H
_DDSPF_R5G6B5 DD 020H
	DD	040H
	DD	00H
	DD	010H
	DD	0f800H
	DD	07e0H
	DD	01fH
	DD	00H
_DDSPF_A1R5G5B5 DD 020H
	DD	041H
	DD	00H
	DD	010H
	DD	07c00H
	DD	03e0H
	DD	01fH
	DD	08000H
_DDSPF_A4R4G4B4 DD 020H
	DD	041H
	DD	00H
	DD	010H
	DD	0f00H
	DD	0f0H
	DD	0fH
	DD	0f000H
_DDSPF_L8 DD	020H
	DD	020000H
	DD	00H
	DD	08H
	DD	0ffH
	DD	00H
	DD	00H
	DD	00H
_DDSPF_L16 DD	020H
	DD	020000H
	DD	00H
	DD	010H
	DD	0ffffH
	DD	00H
	DD	00H
	DD	00H
_DDSPF_A8L8 DD	020H
	DD	020001H
	DD	00H
	DD	010H
	DD	0ffH
	DD	00H
	DD	00H
	DD	0ff00H
_DDSPF_A8 DD	020H
	DD	02H
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffH
_DDSPF_DX10 DD	020H
	DD	04H
	DD	030315844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
CONST	SEGMENT
__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c DD 06f15aaf2H
	DW	0d208H
	DW	04e89H
	DB	09aH
	DB	0b4H
	DB	048H
	DB	095H
	DB	035H
	DB	0d3H
	DB	04fH
	DB	09cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
;	COMDAT _GUID_ContainerFormatBmp
CONST	SEGMENT
_GUID_ContainerFormatBmp DD 0af1d87eH
	DW	0fcfeH
	DW	04188H
	DB	0bdH
	DB	0ebH
	DB	0a7H
	DB	090H
	DB	064H
	DB	071H
	DB	0cbH
	DB	0e3H
CONST	ENDS
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	_PropVariantInit
PUBLIC	?D3D11CalcSubresource@@YAIIII@Z			; D3D11CalcSubresource
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z ; DirectX::SaveDDSTextureToFile
PUBLIC	??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z ; std::_Func_class<void,IPropertyBag2 *>::operator()
PUBLIC	?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Empty
PUBLIC	??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>
PUBLIC	?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
PUBLIC	?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Local
PUBLIC	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
PUBLIC	??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool
PUBLIC	?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z ; DirectX::SaveWICTextureToFile
PUBLIC	??Rhandle_closer@@QAEXPAX@Z			; handle_closer::operator()
PUBLIC	?safe_handle@@YAPAXPAX@Z			; safe_handle
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
PUBLIC	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
PUBLIC	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
PUBLIC	??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=
PUBLIC	?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap
PUBLIC	??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
PUBLIC	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
PUBLIC	??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
PUBLIC	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
PUBLIC	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf
PUBLIC	??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter
PUBLIC	??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z ; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>
PUBLIC	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ	; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
PUBLIC	?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ; std::unique_ptr<void,handle_closer>::get
PUBLIC	??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ	; std::unique_ptr<void,handle_closer>::operator bool
PUBLIC	??0?$default_delete@$$BY0A@E@std@@QAE@XZ	; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
PUBLIC	??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z	; std::default_delete<unsigned char [0]>::operator()
PUBLIC	??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
PUBLIC	??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
PUBLIC	??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
PUBLIC	?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
PUBLIC	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
PUBLIC	?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
PUBLIC	??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>
PUBLIC	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
PUBLIC	??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>
PUBLIC	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
PUBLIC	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease
PUBLIC	??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>
PUBLIC	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
PUBLIC	?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
PUBLIC	??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>
PUBLIC	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
PUBLIC	??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>
PUBLIC	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
PUBLIC	?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::Get
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
PUBLIC	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
PUBLIC	?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get
PUBLIC	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
PUBLIC	??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z ; std::forward<IPropertyBag2 *>
PUBLIC	??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z	; std::_Debug_lt<unsigned int const &,unsigned int const &>
PUBLIC	??$forward@ABI@std@@YAABIABI@Z			; std::forward<unsigned int const &>
PUBLIC	??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
PUBLIC	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z		; std::less<void>::operator()<unsigned int const &,unsigned int const &>
PUBLIC	??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@4052000000000000
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__memcpy_s:PROC
EXTRN	__imp__CreateFileW@28:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_?_Xbad_function_call@std@@YAXXZ:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcmp:PROC
EXTRN	_memset:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_ignore	DB	01H DUP (?)
__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
_BSS	SEGMENT
?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A DD 01H DUP (?) ; `_GetWIC'::`2'::s_Factory
_BSS	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@4052000000000000
CONST	SEGMENT
__real@4052000000000000 DQ 04052000000000000r	; 72
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H, 'g'
	DB	00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$2
__unwindtable$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$2
__ehfuncinfo$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$8
xdata$x	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?RABIABI@?$less@X@std@@QBE_NABI0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?RABIABI@?$less@X@std@@QBE_NABI0@Z PROC		; std::less<void>::operator()<unsigned int const &,unsigned int const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 263
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 268
  00017	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00021	73 09		 jae	 SHORT $LN3@operator
  00023	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  0002a	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN4@operator:
  00033	8a 45 f8	 mov	 al, BYTE PTR tv65[ebp]
; Line 269
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
??$?RABIABI@?$less@X@std@@QBE_NABI0@Z ENDP		; std::less<void>::operator()<unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 520
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 521
  00004	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  0001a	83 c4 04	 add	 esp, 4
  0001d	50		 push	 eax
  0001e	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  00021	e8 00 00 00 00	 call	 ??$?RABIABI@?$less@X@std@@QBE_NABI0@Z ; std::less<void>::operator()<unsigned int const &,unsigned int const &>
  00026	0f b6 d0	 movzx	 edx, al
  00029	85 d2		 test	 edx, edx
  0002b	75 06		 jne	 SHORT $LN3@Debug_lt_p
; Line 522
  0002d	32 c0		 xor	 al, al
  0002f	eb 4c		 jmp	 SHORT $LN4@Debug_lt_p
  00031	eb 48		 jmp	 SHORT $LN2@Debug_lt_p
$LN3@Debug_lt_p:
; Line 523
  00033	8b 45 0c	 mov	 eax, DWORD PTR __Left$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  0003c	83 c4 04	 add	 esp, 4
  0003f	50		 push	 eax
  00040	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  00050	e8 00 00 00 00	 call	 ??$?RABIABI@?$less@X@std@@QBE_NABI0@Z ; std::less<void>::operator()<unsigned int const &,unsigned int const &>
  00055	0f b6 d0	 movzx	 edx, al
  00058	85 d2		 test	 edx, edx
  0005a	74 1f		 je	 SHORT $LN2@Debug_lt_p
; Line 524
  0005c	8b f4		 mov	 esi, esp
  0005e	8b 45 18	 mov	 eax, DWORD PTR __Line$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 14	 mov	 ecx, DWORD PTR __File$[ebp]
  00065	51		 push	 ecx
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
  00074	3b f4		 cmp	 esi, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_lt_p:
; Line 525
  0007b	b0 01		 mov	 al, 1
$LN4@Debug_lt_p:
; Line 526
  0007d	5e		 pop	 esi
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABI@std@@YAABIABI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABI@std@@YAABIABI@Z PROC			; std::forward<unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABI@std@@YAABIABI@Z ENDP			; std::forward<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z PROC		; std::_Debug_lt<unsigned int const &,unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 534
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00017	52		 push	 edx
  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  0002e	83 c4 04	 add	 esp, 4
  00031	50		 push	 eax
  00032	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
  0003c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 535
  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ENDP		; std::_Debug_lt<unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z PROC ; std::forward<IPropertyBag2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z ENDP ; std::forward<IPropertyBag2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmap>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmap>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4121
  00014	68 19 10 00 00	 push	 4121			; 00001019H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ; std::_Debug_lt<unsigned int const &,unsigned int const &>
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	0f b6 d0	 movzx	 edx, al
  00031	85 d2		 test	 edx, edx
  00033	74 08		 je	 SHORT $LN3@min
  00035	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00038	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0003b	eb 06		 jmp	 SHORT $LN4@min
$LN3@min:
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00040	89 4d f8	 mov	 DWORD PTR tv71[ebp], ecx
$LN4@min:
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv71[ebp]
  00046	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
; Line 4122
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1627
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1628
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 15		 je	 SHORT $LN2@Delete
; Line 1629
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	52		 push	 edx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ; std::default_delete<unsigned char [0]>::operator()
$LN2@Delete:
; Line 1630
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1594
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1595
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 09		 je	 SHORT $LN3@operator
  0001f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv70[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@operator:
  0002f	8a 45 f8	 mov	 al, BYTE PTR tv70[ebp]
; Line 1596
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1589
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1590
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1591
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1580
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
; Line 1581
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1518
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
; Line 1521
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1312
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1313
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1314
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1295
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$default_delete@$$BY0A@E@std@@QAE@XZ ; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001c	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1296
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z PROC	; std::default_delete<unsigned char [0]>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1217
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1220
  00017	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0001d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00026	83 c4 04	 add	 esp, 4
; Line 1221
  00029	83 c4 08	 add	 esp, 8
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ENDP	; std::default_delete<unsigned char [0]>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$default_delete@$$BY0A@E@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@$$BY0A@E@std@@QAE@XZ PROC		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1211
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$default_delete@$$BY0A@E@std@@QAE@XZ ENDP		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ PROC	; std::unique_ptr<void,handle_closer>::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1467
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1468
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 09		 je	 SHORT $LN3@operator
  0001f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv70[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@operator:
  0002f	8a 45 f8	 mov	 al, BYTE PTR tv70[ebp]
; Line 1469
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ ENDP	; std::unique_ptr<void,handle_closer>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ PROC	; std::unique_ptr<void,handle_closer>::get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1462
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1463
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1464
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ENDP	; std::unique_ptr<void,handle_closer>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ PROC	; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1446
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1447
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 15		 je	 SHORT $LN2@unique_ptr
; Line 1448
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	52		 push	 edx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ??Rhandle_closer@@QAEXPAX@Z ; handle_closer::operator()
$LN2@unique_ptr:
; Line 1449
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ENDP	; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z PROC	; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1365
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>
; Line 1368
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z ENDP	; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ PROC ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1312
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1313
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1314
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ ENDP ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1295
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1296
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -4						; size = 4
?_GetWIC@@YAPAUIWICImagingFactory@@XZ PROC		; _GetWIC
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 672
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 675
  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
  00013	74 07		 je	 SHORT $LN2@GetWIC
; Line 676
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
  0001a	eb 3e		 jmp	 SHORT $LN3@GetWIC
$LN2@GetWIC:
; Line 715
  0001c	8b f4		 mov	 esi, esp
  0001e	68 00 00 00 00	 push	 OFFSET ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
  00023	68 00 00 00 00	 push	 OFFSET __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
  00028	6a 01		 push	 1
  0002a	6a 00		 push	 0
  0002c	68 00 00 00 00	 push	 OFFSET _CLSID_WICImagingFactory
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 717
  00041	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00045	7d 0e		 jge	 SHORT $LN1@GetWIC
; Line 719
  00047	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
; Line 720
  00051	33 c0		 xor	 eax, eax
  00053	eb 05		 jmp	 SHORT $LN3@GetWIC
$LN1@GetWIC:
; Line 724
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
$LN3@GetWIC:
; Line 725
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?_GetWIC@@YAPAUIWICImagingFactory@@XZ ENDP		; _GetWIC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 315
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 316
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  0001f	85 c0		 test	 eax, eax
  00021	74 09		 je	 SHORT $LN3@
  00023	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
  0002a	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  0002c	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv67[ebp], -1
$LN4@:
  00033	8b 45 f8	 mov	 eax, DWORD PTR tv67[ebp]
; Line 317
  00036	83 c4 08	 add	 esp, 8
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z
_TEXT	SEGMENT
_tmp$ = -8						; size = 4
_this$ = -4						; size = 4
_r$ = 8							; size = 4
?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 307
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 308
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _tmp$[ebp], ecx
; Line 309
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 45 08	 mov	 eax, DWORD PTR _r$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 310
  00029	8b 55 08	 mov	 edx, DWORD PTR _r$[ebp]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _tmp$[ebp]
  0002f	89 02		 mov	 DWORD PTR [edx], eax
; Line 311
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 269
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 270
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _other$[ebp]
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00021	74 1f		 je	 SHORT $LN1@operator
; Line 272
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _other$[ebp]
  0002a	51		 push	 ecx
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap
  0003a	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003d	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
$LN1@operator:
; Line 274
  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 275
  00045	83 c4 08	 add	 esp, 8
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _other$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
; Line 210
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef
; Line 211
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 171
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 172
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 1b		 je	 SHORT $LN2@InternalAd
; Line 174
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00029	ff d0		 call	 eax
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@InternalAd:
; Line 176
  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv297 = -140						; size = 4
tv243 = -136						; size = 4
tv196 = -132						; size = 4
tv169 = -128						; size = 4
tv135 = -124						; size = 4
$T2 = -120						; size = 4
$T3 = -116						; size = 4
$T4 = -112						; size = 4
$T5 = -108						; size = 4
$T6 = -104						; size = 4
$T7 = -100						; size = 4
$T8 = -96						; size = 4
_index$9 = -92						; size = 4
_level$10 = -88						; size = 4
_item$11 = -84						; size = 4
_support$12 = -76					; size = 4
_fmt$13 = -68						; size = 4
_pTemp$14 = -60						; size = 4
_d3dDevice$ = -48					; size = 4
_hr$ = -40						; size = 4
_pTexture$ = -32					; size = 4
_resType$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pContext$ = 8						; size = 4
_pSource$ = 12						; size = 4
_desc$ = 16						; size = 4
_pStaging$ = 20						; size = 4
?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z PROC ; CaptureTexture
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 575
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd 74 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-140]
  0001f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 576
  0003c	83 7d 08 00	 cmp	 DWORD PTR _pContext$[ebp], 0
  00040	74 06		 je	 SHORT $LN18@CaptureTex
  00042	83 7d 0c 00	 cmp	 DWORD PTR _pSource$[ebp], 0
  00046	75 0a		 jne	 SHORT $LN19@CaptureTex
$LN18@CaptureTex:
; Line 577
  00048	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0004d	e9 7a 05 00 00	 jmp	 $LN20@CaptureTex
$LN19@CaptureTex:
; Line 579
  00052	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _resType$[ebp], 0
; Line 580
  00059	8b f4		 mov	 esi, esp
  0005b	8d 45 ec	 lea	 eax, DWORD PTR _resType$[ebp]
  0005e	50		 push	 eax
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _pSource$[ebp]
  00062	8b 11		 mov	 edx, DWORD PTR [ecx]
  00064	8b 45 0c	 mov	 eax, DWORD PTR _pSource$[ebp]
  00067	50		 push	 eax
  00068	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  0006b	ff d1		 call	 ecx
  0006d	3b f4		 cmp	 esi, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 582
  00074	83 7d ec 03	 cmp	 DWORD PTR _resType$[ebp], 3
  00078	74 0f		 je	 SHORT $LN17@CaptureTex
; Line 583
  0007a	6a 32		 push	 50			; 00000032H
  0007c	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00081	83 c4 04	 add	 esp, 4
  00084	e9 43 05 00 00	 jmp	 $LN20@CaptureTex
$LN17@CaptureTex:
; Line 585
  00089	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  0008c	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
  00091	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 586
  00098	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  0009b	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
  000a0	8b f4		 mov	 esi, esp
  000a2	50		 push	 eax
  000a3	68 00 00 00 00	 push	 OFFSET __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
  000a8	8b 55 0c	 mov	 edx, DWORD PTR _pSource$[ebp]
  000ab	8b 02		 mov	 eax, DWORD PTR [edx]
  000ad	8b 4d 0c	 mov	 ecx, DWORD PTR _pSource$[ebp]
  000b0	51		 push	 ecx
  000b1	8b 10		 mov	 edx, DWORD PTR [eax]
  000b3	ff d2		 call	 edx
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 587
  000bf	83 7d d8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c3	7d 1d		 jge	 SHORT $LN16@CaptureTex
; Line 588
  000c5	8b 45 d8	 mov	 eax, DWORD PTR _hr$[ebp]
  000c8	89 45 a0	 mov	 DWORD PTR $T8[ebp], eax
  000cb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d2	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  000d5	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  000da	8b 45 a0	 mov	 eax, DWORD PTR $T8[ebp]
  000dd	e9 ea 04 00 00	 jmp	 $LN20@CaptureTex
$LN16@CaptureTex:
; Line 590
  000e2	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  000e5	e8 00 00 00 00	 call	 ??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
  000ea	83 f8 ff	 cmp	 eax, -1
  000ed	75 21		 jne	 SHORT $LN22@CaptureTex
  000ef	8b f4		 mov	 esi, esp
  000f1	68 4e 02 00 00	 push	 590			; 0000024eH
  000f6	68 00 00 00 00	 push	 OFFSET $SG158859
  000fb	68 00 00 00 00	 push	 OFFSET $SG158860
  00100	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00106	83 c4 0c	 add	 esp, 12			; 0000000cH
  00109	3b f4		 cmp	 esi, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN22@CaptureTex:
; Line 592
  00110	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  00113	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->
  00118	89 45 84	 mov	 DWORD PTR tv135[ebp], eax
  0011b	8b f4		 mov	 esi, esp
  0011d	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  00120	52		 push	 edx
  00121	8b 45 84	 mov	 eax, DWORD PTR tv135[ebp]
  00124	50		 push	 eax
  00125	8b 4d 84	 mov	 ecx, DWORD PTR tv135[ebp]
  00128	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012a	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0012d	ff d0		 call	 eax
  0012f	3b f4		 cmp	 esi, esp
  00131	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 594
  00136	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  00139	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
  0013e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; Line 595
  00142	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  00145	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf
  0014a	8b f4		 mov	 esi, esp
  0014c	50		 push	 eax
  0014d	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00150	8b 11		 mov	 edx, DWORD PTR [ecx]
  00152	8b 45 08	 mov	 eax, DWORD PTR _pContext$[ebp]
  00155	50		 push	 eax
  00156	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00159	ff d1		 call	 ecx
  0015b	3b f4		 cmp	 esi, esp
  0015d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 597
  00162	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  00165	83 7a 14 01	 cmp	 DWORD PTR [edx+20], 1
  00169	0f 86 25 03 00
	00		 jbe	 $LN15@CaptureTex
; Line 600
  0016f	8b 45 10	 mov	 eax, DWORD PTR _desc$[ebp]
  00172	c7 40 14 01 00
	00 00		 mov	 DWORD PTR [eax+20], 1
; Line 601
  00179	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  0017c	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 603
  00183	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  00186	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
  0018b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; Line 604
  0018f	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  00192	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
  00197	89 45 80	 mov	 DWORD PTR tv169[ebp], eax
  0019a	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  0019d	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
  001a2	8b f4		 mov	 esi, esp
  001a4	50		 push	 eax
  001a5	6a 00		 push	 0
  001a7	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  001aa	52		 push	 edx
  001ab	8b 45 80	 mov	 eax, DWORD PTR tv169[ebp]
  001ae	50		 push	 eax
  001af	8b 4d 80	 mov	 ecx, DWORD PTR tv169[ebp]
  001b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b4	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  001b7	ff d0		 call	 eax
  001b9	3b f4		 cmp	 esi, esp
  001bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c0	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 605
  001c3	83 7d d8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001c7	7d 35		 jge	 SHORT $LN14@CaptureTex
; Line 606
  001c9	8b 4d d8	 mov	 ecx, DWORD PTR _hr$[ebp]
  001cc	89 4d 9c	 mov	 DWORD PTR $T7[ebp], ecx
  001cf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001d3	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  001d6	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  001db	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001df	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  001e2	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
  001e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001ee	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  001f1	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  001f6	8b 45 9c	 mov	 eax, DWORD PTR $T7[ebp]
  001f9	e9 ce 03 00 00	 jmp	 $LN20@CaptureTex
$LN14@CaptureTex:
; Line 608
  001fe	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  00201	e8 00 00 00 00	 call	 ??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
  00206	83 f8 ff	 cmp	 eax, -1
  00209	75 21		 jne	 SHORT $LN23@CaptureTex
  0020b	8b f4		 mov	 esi, esp
  0020d	68 60 02 00 00	 push	 608			; 00000260H
  00212	68 00 00 00 00	 push	 OFFSET $SG159002
  00217	68 00 00 00 00	 push	 OFFSET $SG159003
  0021c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00222	83 c4 0c	 add	 esp, 12			; 0000000cH
  00225	3b f4		 cmp	 esi, esp
  00227	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN23@CaptureTex:
; Line 610
  0022c	8b 45 10	 mov	 eax, DWORD PTR _desc$[ebp]
  0022f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00232	51		 push	 ecx
  00233	e8 00 00 00 00	 call	 ?EnsureNotTypeless@@YA?AW4DXGI_FORMAT@@W41@@Z ; EnsureNotTypeless
  00238	83 c4 04	 add	 esp, 4
  0023b	89 45 bc	 mov	 DWORD PTR _fmt$13[ebp], eax
; Line 612
  0023e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _support$12[ebp], 0
; Line 613
  00245	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  00248	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
  0024d	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv196[ebp], eax
  00253	8b f4		 mov	 esi, esp
  00255	8d 55 b4	 lea	 edx, DWORD PTR _support$12[ebp]
  00258	52		 push	 edx
  00259	8b 45 bc	 mov	 eax, DWORD PTR _fmt$13[ebp]
  0025c	50		 push	 eax
  0025d	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv196[ebp]
  00263	51		 push	 ecx
  00264	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv196[ebp]
  0026a	8b 02		 mov	 eax, DWORD PTR [edx]
  0026c	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  0026f	ff d1		 call	 ecx
  00271	3b f4		 cmp	 esi, esp
  00273	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00278	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 614
  0027b	83 7d d8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0027f	7d 35		 jge	 SHORT $LN13@CaptureTex
; Line 615
  00281	8b 55 d8	 mov	 edx, DWORD PTR _hr$[ebp]
  00284	89 55 98	 mov	 DWORD PTR $T6[ebp], edx
  00287	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0028b	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  0028e	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00293	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00297	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  0029a	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
  0029f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002a6	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  002a9	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  002ae	8b 45 98	 mov	 eax, DWORD PTR $T6[ebp]
  002b1	e9 16 03 00 00	 jmp	 $LN20@CaptureTex
$LN13@CaptureTex:
; Line 617
  002b6	8b 45 b4	 mov	 eax, DWORD PTR _support$12[ebp]
  002b9	25 00 00 04 00	 and	 eax, 262144		; 00040000H
  002be	75 36		 jne	 SHORT $LN12@CaptureTex
; Line 618
  002c0	c7 45 94 05 40
	00 80		 mov	 DWORD PTR $T5[ebp], -2147467259 ; 80004005H
  002c7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  002cb	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  002ce	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  002d3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002d7	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  002da	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
  002df	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002e6	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  002e9	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  002ee	8b 45 94	 mov	 eax, DWORD PTR $T5[ebp]
  002f1	e9 d6 02 00 00	 jmp	 $LN20@CaptureTex
$LN12@CaptureTex:
; Line 620
  002f6	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _item$11[ebp], 0
  002fd	eb 09		 jmp	 SHORT $LN11@CaptureTex
$LN10@CaptureTex:
  002ff	8b 4d ac	 mov	 ecx, DWORD PTR _item$11[ebp]
  00302	83 c1 01	 add	 ecx, 1
  00305	89 4d ac	 mov	 DWORD PTR _item$11[ebp], ecx
$LN11@CaptureTex:
  00308	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  0030b	8b 45 ac	 mov	 eax, DWORD PTR _item$11[ebp]
  0030e	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  00311	73 71		 jae	 SHORT $LN9@CaptureTex
; Line 622
  00313	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _level$10[ebp], 0
  0031a	eb 09		 jmp	 SHORT $LN8@CaptureTex
$LN7@CaptureTex:
  0031c	8b 4d a8	 mov	 ecx, DWORD PTR _level$10[ebp]
  0031f	83 c1 01	 add	 ecx, 1
  00322	89 4d a8	 mov	 DWORD PTR _level$10[ebp], ecx
$LN8@CaptureTex:
  00325	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  00328	8b 45 a8	 mov	 eax, DWORD PTR _level$10[ebp]
  0032b	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0032e	73 4f		 jae	 SHORT $LN6@CaptureTex
; Line 624
  00330	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  00333	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00336	52		 push	 edx
  00337	8b 45 ac	 mov	 eax, DWORD PTR _item$11[ebp]
  0033a	50		 push	 eax
  0033b	8b 4d a8	 mov	 ecx, DWORD PTR _level$10[ebp]
  0033e	51		 push	 ecx
  0033f	e8 00 00 00 00	 call	 ?D3D11CalcSubresource@@YAIIII@Z ; D3D11CalcSubresource
  00344	83 c4 0c	 add	 esp, 12			; 0000000cH
  00347	89 45 a4	 mov	 DWORD PTR _index$9[ebp], eax
; Line 625
  0034a	8b f4		 mov	 esi, esp
  0034c	8b 55 bc	 mov	 edx, DWORD PTR _fmt$13[ebp]
  0034f	52		 push	 edx
  00350	8b 45 a4	 mov	 eax, DWORD PTR _index$9[ebp]
  00353	50		 push	 eax
  00354	8b 4d 0c	 mov	 ecx, DWORD PTR _pSource$[ebp]
  00357	51		 push	 ecx
  00358	8b 55 a4	 mov	 edx, DWORD PTR _index$9[ebp]
  0035b	52		 push	 edx
  0035c	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  0035f	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  00364	50		 push	 eax
  00365	8b 45 08	 mov	 eax, DWORD PTR _pContext$[ebp]
  00368	8b 08		 mov	 ecx, DWORD PTR [eax]
  0036a	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  0036d	52		 push	 edx
  0036e	8b 81 e4 00 00
	00		 mov	 eax, DWORD PTR [ecx+228]
  00374	ff d0		 call	 eax
  00376	3b f4		 cmp	 esi, esp
  00378	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 626
  0037d	eb 9d		 jmp	 SHORT $LN7@CaptureTex
$LN6@CaptureTex:
; Line 627
  0037f	e9 7b ff ff ff	 jmp	 $LN10@CaptureTex
$LN9@CaptureTex:
; Line 629
  00384	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  00387	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
; Line 630
  0038e	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  00391	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00394	83 e0 04	 and	 eax, 4
  00397	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  0039a	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 631
  0039d	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  003a0	c7 42 24 00 00
	02 00		 mov	 DWORD PTR [edx+36], 131072 ; 00020000H
; Line 632
  003a7	8b 45 10	 mov	 eax, DWORD PTR _desc$[ebp]
  003aa	c7 40 1c 03 00
	00 00		 mov	 DWORD PTR [eax+28], 3
; Line 634
  003b1	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  003b4	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
  003b9	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv243[ebp], eax
  003bf	8b 4d 14	 mov	 ecx, DWORD PTR _pStaging$[ebp]
  003c2	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
  003c7	8b f4		 mov	 esi, esp
  003c9	50		 push	 eax
  003ca	6a 00		 push	 0
  003cc	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  003cf	51		 push	 ecx
  003d0	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv243[ebp]
  003d6	52		 push	 edx
  003d7	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv243[ebp]
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  003e2	ff d2		 call	 edx
  003e4	3b f4		 cmp	 esi, esp
  003e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003eb	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 635
  003ee	83 7d d8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  003f2	7d 35		 jge	 SHORT $LN5@CaptureTex
; Line 636
  003f4	8b 45 d8	 mov	 eax, DWORD PTR _hr$[ebp]
  003f7	89 45 90	 mov	 DWORD PTR $T4[ebp], eax
  003fa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  003fe	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  00401	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00406	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0040a	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  0040d	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
  00412	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00419	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  0041c	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00421	8b 45 90	 mov	 eax, DWORD PTR $T4[ebp]
  00424	e9 a3 01 00 00	 jmp	 $LN20@CaptureTex
$LN5@CaptureTex:
; Line 638
  00429	8b 4d 14	 mov	 ecx, DWORD PTR _pStaging$[ebp]
  0042c	e8 00 00 00 00	 call	 ??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
  00431	83 f8 ff	 cmp	 eax, -1
  00434	75 21		 jne	 SHORT $LN24@CaptureTex
  00436	8b f4		 mov	 esi, esp
  00438	68 7e 02 00 00	 push	 638			; 0000027eH
  0043d	68 00 00 00 00	 push	 OFFSET $SG159025
  00442	68 00 00 00 00	 push	 OFFSET $SG159026
  00447	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0044d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00450	3b f4		 cmp	 esi, esp
  00452	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN24@CaptureTex:
; Line 640
  00457	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  0045a	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  0045f	8b f4		 mov	 esi, esp
  00461	50		 push	 eax
  00462	8b 4d 14	 mov	 ecx, DWORD PTR _pStaging$[ebp]
  00465	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  0046a	50		 push	 eax
  0046b	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  0046e	8b 02		 mov	 eax, DWORD PTR [edx]
  00470	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00473	51		 push	 ecx
  00474	8b 90 bc 00 00
	00		 mov	 edx, DWORD PTR [eax+188]
  0047a	ff d2		 call	 edx
  0047c	3b f4		 cmp	 esi, esp
  0047e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 641
  00483	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00487	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  0048a	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0048f	e9 13 01 00 00	 jmp	 $LN4@CaptureTex
$LN15@CaptureTex:
; Line 642
  00494	8b 45 10	 mov	 eax, DWORD PTR _desc$[ebp]
  00497	83 78 1c 03	 cmp	 DWORD PTR [eax+28], 3
  0049b	75 1f		 jne	 SHORT $LN3@CaptureTex
  0049d	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  004a0	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  004a3	81 e2 00 00 02
	00		 and	 edx, 131072		; 00020000H
  004a9	74 11		 je	 SHORT $LN3@CaptureTex
; Line 645
  004ab	8d 45 e0	 lea	 eax, DWORD PTR _pTexture$[ebp]
  004ae	50		 push	 eax
  004af	8b 4d 14	 mov	 ecx, DWORD PTR _pStaging$[ebp]
  004b2	e8 00 00 00 00	 call	 ??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=
; Line 647
  004b7	e9 eb 00 00 00	 jmp	 $LN4@CaptureTex
$LN3@CaptureTex:
; Line 650
  004bc	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  004bf	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
; Line 651
  004c6	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  004c9	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  004cc	83 e0 04	 and	 eax, 4
  004cf	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  004d2	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 652
  004d5	8b 55 10	 mov	 edx, DWORD PTR _desc$[ebp]
  004d8	c7 42 24 00 00
	02 00		 mov	 DWORD PTR [edx+36], 131072 ; 00020000H
; Line 653
  004df	8b 45 10	 mov	 eax, DWORD PTR _desc$[ebp]
  004e2	c7 40 1c 03 00
	00 00		 mov	 DWORD PTR [eax+28], 3
; Line 655
  004e9	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  004ec	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
  004f1	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv297[ebp], eax
  004f7	8b 4d 14	 mov	 ecx, DWORD PTR _pStaging$[ebp]
  004fa	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
  004ff	8b f4		 mov	 esi, esp
  00501	50		 push	 eax
  00502	6a 00		 push	 0
  00504	8b 4d 10	 mov	 ecx, DWORD PTR _desc$[ebp]
  00507	51		 push	 ecx
  00508	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv297[ebp]
  0050e	52		 push	 edx
  0050f	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv297[ebp]
  00515	8b 08		 mov	 ecx, DWORD PTR [eax]
  00517	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0051a	ff d2		 call	 edx
  0051c	3b f4		 cmp	 esi, esp
  0051e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00523	89 45 d8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 656
  00526	83 7d d8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0052a	7d 26		 jge	 SHORT $LN1@CaptureTex
; Line 657
  0052c	8b 45 d8	 mov	 eax, DWORD PTR _hr$[ebp]
  0052f	89 45 8c	 mov	 DWORD PTR $T3[ebp], eax
  00532	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00536	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  00539	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
  0053e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00545	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  00548	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0054d	8b 45 8c	 mov	 eax, DWORD PTR $T3[ebp]
  00550	eb 7a		 jmp	 SHORT $LN20@CaptureTex
$LN1@CaptureTex:
; Line 659
  00552	8b 4d 14	 mov	 ecx, DWORD PTR _pStaging$[ebp]
  00555	e8 00 00 00 00	 call	 ??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
  0055a	83 f8 ff	 cmp	 eax, -1
  0055d	75 21		 jne	 SHORT $LN25@CaptureTex
  0055f	8b f4		 mov	 esi, esp
  00561	68 93 02 00 00	 push	 659			; 00000293H
  00566	68 00 00 00 00	 push	 OFFSET $SG159042
  0056b	68 00 00 00 00	 push	 OFFSET $SG159043
  00570	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00576	83 c4 0c	 add	 esp, 12			; 0000000cH
  00579	3b f4		 cmp	 esi, esp
  0057b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN25@CaptureTex:
; Line 661
  00580	8b f4		 mov	 esi, esp
  00582	8b 55 0c	 mov	 edx, DWORD PTR _pSource$[ebp]
  00585	52		 push	 edx
  00586	8b 4d 14	 mov	 ecx, DWORD PTR _pStaging$[ebp]
  00589	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  0058e	50		 push	 eax
  0058f	8b 45 08	 mov	 eax, DWORD PTR _pContext$[ebp]
  00592	8b 08		 mov	 ecx, DWORD PTR [eax]
  00594	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  00597	52		 push	 edx
  00598	8b 81 bc 00 00
	00		 mov	 eax, DWORD PTR [ecx+188]
  0059e	ff d0		 call	 eax
  005a0	3b f4		 cmp	 esi, esp
  005a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@CaptureTex:
; Line 664
  005a7	c7 45 88 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  005ae	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  005b2	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  005b5	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
  005ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005c1	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  005c4	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  005c9	8b 45 88	 mov	 eax, DWORD PTR $T2[ebp]
$LN20@CaptureTex:
; Line 665
  005cc	52		 push	 edx
  005cd	8b cd		 mov	 ecx, ebp
  005cf	50		 push	 eax
  005d0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN36@CaptureTex
  005d6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  005db	58		 pop	 eax
  005dc	5a		 pop	 edx
  005dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  005e7	59		 pop	 ecx
  005e8	5f		 pop	 edi
  005e9	5e		 pop	 esi
  005ea	81 c4 8c 00 00
	00		 add	 esp, 140		; 0000008cH
  005f0	3b ec		 cmp	 ebp, esp
  005f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f7	8b e5		 mov	 esp, ebp
  005f9	5d		 pop	 ebp
  005fa	c3		 ret	 0
  005fb	90		 npad	 1
$LN36@CaptureTex:
  005fc	05 00 00 00	 DD	 5
  00600	00 00 00 00	 DD	 $LN35@CaptureTex
$LN35@CaptureTex:
  00604	ec ff ff ff	 DD	 -20			; ffffffecH
  00608	04 00 00 00	 DD	 4
  0060c	00 00 00 00	 DD	 $LN29@CaptureTex
  00610	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00614	04 00 00 00	 DD	 4
  00618	00 00 00 00	 DD	 $LN30@CaptureTex
  0061c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00620	04 00 00 00	 DD	 4
  00624	00 00 00 00	 DD	 $LN31@CaptureTex
  00628	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0062c	04 00 00 00	 DD	 4
  00630	00 00 00 00	 DD	 $LN32@CaptureTex
  00634	b4 ff ff ff	 DD	 -76			; ffffffb4H
  00638	04 00 00 00	 DD	 4
  0063c	00 00 00 00	 DD	 $LN33@CaptureTex
$LN33@CaptureTex:
  00640	73		 DB	 115			; 00000073H
  00641	75		 DB	 117			; 00000075H
  00642	70		 DB	 112			; 00000070H
  00643	70		 DB	 112			; 00000070H
  00644	6f		 DB	 111			; 0000006fH
  00645	72		 DB	 114			; 00000072H
  00646	74		 DB	 116			; 00000074H
  00647	00		 DB	 0
$LN32@CaptureTex:
  00648	70		 DB	 112			; 00000070H
  00649	54		 DB	 84			; 00000054H
  0064a	65		 DB	 101			; 00000065H
  0064b	6d		 DB	 109			; 0000006dH
  0064c	70		 DB	 112			; 00000070H
  0064d	00		 DB	 0
$LN31@CaptureTex:
  0064e	64		 DB	 100			; 00000064H
  0064f	33		 DB	 51			; 00000033H
  00650	64		 DB	 100			; 00000064H
  00651	44		 DB	 68			; 00000044H
  00652	65		 DB	 101			; 00000065H
  00653	76		 DB	 118			; 00000076H
  00654	69		 DB	 105			; 00000069H
  00655	63		 DB	 99			; 00000063H
  00656	65		 DB	 101			; 00000065H
  00657	00		 DB	 0
$LN30@CaptureTex:
  00658	70		 DB	 112			; 00000070H
  00659	54		 DB	 84			; 00000054H
  0065a	65		 DB	 101			; 00000065H
  0065b	78		 DB	 120			; 00000078H
  0065c	74		 DB	 116			; 00000074H
  0065d	75		 DB	 117			; 00000075H
  0065e	72		 DB	 114			; 00000072H
  0065f	65		 DB	 101			; 00000065H
  00660	00		 DB	 0
$LN29@CaptureTex:
  00661	72		 DB	 114			; 00000072H
  00662	65		 DB	 101			; 00000065H
  00663	73		 DB	 115			; 00000073H
  00664	54		 DB	 84			; 00000054H
  00665	79		 DB	 121			; 00000079H
  00666	70		 DB	 112			; 00000070H
  00667	65		 DB	 101			; 00000065H
  00668	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _pTexture$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$1:
  00008	8d 4d d0	 lea	 ecx, DWORD PTR _d3dDevice$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$2:
  00010	8d 4d c4	 lea	 ecx, DWORD PTR _pTemp$14[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__ehhandler$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 8a 74 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-140]
  00025	33 c8		 xor	 ecx, eax
  00027	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z ENDP ; CaptureTexture
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_fmt$ = 8						; size = 4
?EnsureNotTypeless@@YA?AW4DXGI_FORMAT@@W41@@Z PROC	; EnsureNotTypeless
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 542
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 544
  0000b	8b 45 08	 mov	 eax, DWORD PTR _fmt$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00014	83 e9 01	 sub	 ecx, 1
  00017	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  0001a	83 7d fc 60	 cmp	 DWORD PTR tv64[ebp], 96	; 00000060H
  0001e	0f 87 99 00 00
	00		 ja	 $LN1@EnsureNotT
  00024	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  00027	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN25@EnsureNotT[edx]
  0002e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN26@EnsureNotT[eax*4]
$LN20@EnsureNotT:
; Line 546
  00035	b8 02 00 00 00	 mov	 eax, 2
  0003a	e9 81 00 00 00	 jmp	 $LN23@EnsureNotT
$LN19@EnsureNotT:
; Line 547
  0003f	b8 06 00 00 00	 mov	 eax, 6
  00044	eb 7a		 jmp	 SHORT $LN23@EnsureNotT
$LN18@EnsureNotT:
; Line 548
  00046	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  0004b	eb 73		 jmp	 SHORT $LN23@EnsureNotT
$LN17@EnsureNotT:
; Line 549
  0004d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00052	eb 6c		 jmp	 SHORT $LN23@EnsureNotT
$LN16@EnsureNotT:
; Line 550
  00054	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00059	eb 65		 jmp	 SHORT $LN23@EnsureNotT
$LN15@EnsureNotT:
; Line 551
  0005b	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH
  00060	eb 5e		 jmp	 SHORT $LN23@EnsureNotT
$LN14@EnsureNotT:
; Line 552
  00062	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  00067	eb 57		 jmp	 SHORT $LN23@EnsureNotT
$LN13@EnsureNotT:
; Line 553
  00069	b8 29 00 00 00	 mov	 eax, 41			; 00000029H
  0006e	eb 50		 jmp	 SHORT $LN23@EnsureNotT
$LN12@EnsureNotT:
; Line 554
  00070	b8 31 00 00 00	 mov	 eax, 49			; 00000031H
  00075	eb 49		 jmp	 SHORT $LN23@EnsureNotT
$LN11@EnsureNotT:
; Line 555
  00077	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  0007c	eb 42		 jmp	 SHORT $LN23@EnsureNotT
$LN10@EnsureNotT:
; Line 556
  0007e	b8 3d 00 00 00	 mov	 eax, 61			; 0000003dH
  00083	eb 3b		 jmp	 SHORT $LN23@EnsureNotT
$LN9@EnsureNotT:
; Line 557
  00085	b8 47 00 00 00	 mov	 eax, 71			; 00000047H
  0008a	eb 34		 jmp	 SHORT $LN23@EnsureNotT
$LN8@EnsureNotT:
; Line 558
  0008c	b8 4a 00 00 00	 mov	 eax, 74			; 0000004aH
  00091	eb 2d		 jmp	 SHORT $LN23@EnsureNotT
$LN7@EnsureNotT:
; Line 559
  00093	b8 4d 00 00 00	 mov	 eax, 77			; 0000004dH
  00098	eb 26		 jmp	 SHORT $LN23@EnsureNotT
$LN6@EnsureNotT:
; Line 560
  0009a	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  0009f	eb 1f		 jmp	 SHORT $LN23@EnsureNotT
$LN5@EnsureNotT:
; Line 561
  000a1	b8 53 00 00 00	 mov	 eax, 83			; 00000053H
  000a6	eb 18		 jmp	 SHORT $LN23@EnsureNotT
$LN4@EnsureNotT:
; Line 562
  000a8	b8 57 00 00 00	 mov	 eax, 87			; 00000057H
  000ad	eb 11		 jmp	 SHORT $LN23@EnsureNotT
$LN3@EnsureNotT:
; Line 563
  000af	b8 58 00 00 00	 mov	 eax, 88			; 00000058H
  000b4	eb 0a		 jmp	 SHORT $LN23@EnsureNotT
$LN2@EnsureNotT:
; Line 564
  000b6	b8 62 00 00 00	 mov	 eax, 98			; 00000062H
  000bb	eb 03		 jmp	 SHORT $LN23@EnsureNotT
$LN1@EnsureNotT:
; Line 565
  000bd	8b 45 08	 mov	 eax, DWORD PTR _fmt$[ebp]
$LN23@EnsureNotT:
; Line 567
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
$LN26@EnsureNotT:
  000c4	00 00 00 00	 DD	 $LN20@EnsureNotT
  000c8	00 00 00 00	 DD	 $LN19@EnsureNotT
  000cc	00 00 00 00	 DD	 $LN18@EnsureNotT
  000d0	00 00 00 00	 DD	 $LN17@EnsureNotT
  000d4	00 00 00 00	 DD	 $LN16@EnsureNotT
  000d8	00 00 00 00	 DD	 $LN15@EnsureNotT
  000dc	00 00 00 00	 DD	 $LN14@EnsureNotT
  000e0	00 00 00 00	 DD	 $LN13@EnsureNotT
  000e4	00 00 00 00	 DD	 $LN12@EnsureNotT
  000e8	00 00 00 00	 DD	 $LN11@EnsureNotT
  000ec	00 00 00 00	 DD	 $LN10@EnsureNotT
  000f0	00 00 00 00	 DD	 $LN9@EnsureNotT
  000f4	00 00 00 00	 DD	 $LN8@EnsureNotT
  000f8	00 00 00 00	 DD	 $LN7@EnsureNotT
  000fc	00 00 00 00	 DD	 $LN6@EnsureNotT
  00100	00 00 00 00	 DD	 $LN5@EnsureNotT
  00104	00 00 00 00	 DD	 $LN4@EnsureNotT
  00108	00 00 00 00	 DD	 $LN3@EnsureNotT
  0010c	00 00 00 00	 DD	 $LN2@EnsureNotT
  00110	00 00 00 00	 DD	 $LN1@EnsureNotT
$LN25@EnsureNotT:
  00114	00		 DB	 0
  00115	13		 DB	 19			; 00000013H
  00116	13		 DB	 19			; 00000013H
  00117	13		 DB	 19			; 00000013H
  00118	01		 DB	 1
  00119	13		 DB	 19			; 00000013H
  0011a	13		 DB	 19			; 00000013H
  0011b	13		 DB	 19			; 00000013H
  0011c	02		 DB	 2
  0011d	13		 DB	 19			; 00000013H
  0011e	13		 DB	 19			; 00000013H
  0011f	13		 DB	 19			; 00000013H
  00120	13		 DB	 19			; 00000013H
  00121	13		 DB	 19			; 00000013H
  00122	03		 DB	 3
  00123	13		 DB	 19			; 00000013H
  00124	13		 DB	 19			; 00000013H
  00125	13		 DB	 19			; 00000013H
  00126	13		 DB	 19			; 00000013H
  00127	13		 DB	 19			; 00000013H
  00128	13		 DB	 19			; 00000013H
  00129	13		 DB	 19			; 00000013H
  0012a	04		 DB	 4
  0012b	13		 DB	 19			; 00000013H
  0012c	13		 DB	 19			; 00000013H
  0012d	13		 DB	 19			; 00000013H
  0012e	05		 DB	 5
  0012f	13		 DB	 19			; 00000013H
  00130	13		 DB	 19			; 00000013H
  00131	13		 DB	 19			; 00000013H
  00132	13		 DB	 19			; 00000013H
  00133	13		 DB	 19			; 00000013H
  00134	06		 DB	 6
  00135	13		 DB	 19			; 00000013H
  00136	13		 DB	 19			; 00000013H
  00137	13		 DB	 19			; 00000013H
  00138	13		 DB	 19			; 00000013H
  00139	13		 DB	 19			; 00000013H
  0013a	07		 DB	 7
  0013b	13		 DB	 19			; 00000013H
  0013c	13		 DB	 19			; 00000013H
  0013d	13		 DB	 19			; 00000013H
  0013e	13		 DB	 19			; 00000013H
  0013f	13		 DB	 19			; 00000013H
  00140	13		 DB	 19			; 00000013H
  00141	13		 DB	 19			; 00000013H
  00142	13		 DB	 19			; 00000013H
  00143	08		 DB	 8
  00144	13		 DB	 19			; 00000013H
  00145	13		 DB	 19			; 00000013H
  00146	13		 DB	 19			; 00000013H
  00147	13		 DB	 19			; 00000013H
  00148	09		 DB	 9
  00149	13		 DB	 19			; 00000013H
  0014a	13		 DB	 19			; 00000013H
  0014b	13		 DB	 19			; 00000013H
  0014c	13		 DB	 19			; 00000013H
  0014d	13		 DB	 19			; 00000013H
  0014e	13		 DB	 19			; 00000013H
  0014f	0a		 DB	 10			; 0000000aH
  00150	13		 DB	 19			; 00000013H
  00151	13		 DB	 19			; 00000013H
  00152	13		 DB	 19			; 00000013H
  00153	13		 DB	 19			; 00000013H
  00154	13		 DB	 19			; 00000013H
  00155	13		 DB	 19			; 00000013H
  00156	13		 DB	 19			; 00000013H
  00157	13		 DB	 19			; 00000013H
  00158	13		 DB	 19			; 00000013H
  00159	0b		 DB	 11			; 0000000bH
  0015a	13		 DB	 19			; 00000013H
  0015b	13		 DB	 19			; 00000013H
  0015c	0c		 DB	 12			; 0000000cH
  0015d	13		 DB	 19			; 00000013H
  0015e	13		 DB	 19			; 00000013H
  0015f	0d		 DB	 13			; 0000000dH
  00160	13		 DB	 19			; 00000013H
  00161	13		 DB	 19			; 00000013H
  00162	0e		 DB	 14			; 0000000eH
  00163	13		 DB	 19			; 00000013H
  00164	13		 DB	 19			; 00000013H
  00165	0f		 DB	 15			; 0000000fH
  00166	13		 DB	 19			; 00000013H
  00167	13		 DB	 19			; 00000013H
  00168	13		 DB	 19			; 00000013H
  00169	13		 DB	 19			; 00000013H
  0016a	13		 DB	 19			; 00000013H
  0016b	13		 DB	 19			; 00000013H
  0016c	13		 DB	 19			; 00000013H
  0016d	10		 DB	 16			; 00000010H
  0016e	13		 DB	 19			; 00000013H
  0016f	11		 DB	 17			; 00000011H
  00170	13		 DB	 19			; 00000013H
  00171	13		 DB	 19			; 00000013H
  00172	13		 DB	 19			; 00000013H
  00173	13		 DB	 19			; 00000013H
  00174	12		 DB	 18			; 00000012H
?EnsureNotTypeless@@YA?AW4DXGI_FORMAT@@W41@@Z ENDP	; EnsureNotTypeless
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4087
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4088
  00014	68 f8 0f 00 00	 push	 4088			; 00000ff8H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ; std::_Debug_lt<unsigned int const &,unsigned int const &>
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	0f b6 d0	 movzx	 edx, al
  00031	85 d2		 test	 edx, edx
  00033	74 08		 je	 SHORT $LN3@max
  00035	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00038	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0003b	eb 06		 jmp	 SHORT $LN4@max
$LN3@max:
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00040	89 4d f8	 mov	 DWORD PTR tv71[ebp], ecx
$LN4@max:
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv71[ebp]
  00046	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
; Line 4089
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -52						; size = 4
$T1 = -48						; size = 4
$T2 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
_bpp$5 = -32						; size = 4
_numBlocksHigh$6 = -28					; size = 4
_numBlocksWide$7 = -24					; size = 4
_bpe$ = -20						; size = 4
_planar$ = -15						; size = 1
_packed$ = -14						; size = 1
_bc$ = -13						; size = 1
_numRows$ = -12						; size = 4
_rowBytes$ = -8						; size = 4
_numBytes$ = -4						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
_fmt$ = 16						; size = 4
_outNumBytes$ = 20					; size = 4
_outRowBytes$ = 24					; size = 4
_outNumRows$ = 28					; size = 4
?GetSurfaceInfo@@YAXIIW4DXGI_FORMAT@@PAI11@Z PROC	; GetSurfaceInfo
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 406
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	57		 push	 edi
  00007	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0000a	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
; Line 407
  00016	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _numBytes$[ebp], 0
; Line 408
  0001d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _rowBytes$[ebp], 0
; Line 409
  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _numRows$[ebp], 0
; Line 411
  0002b	c6 45 f3 00	 mov	 BYTE PTR _bc$[ebp], 0
; Line 412
  0002f	c6 45 f2 00	 mov	 BYTE PTR _packed$[ebp], 0
; Line 413
  00033	c6 45 f1 00	 mov	 BYTE PTR _planar$[ebp], 0
; Line 414
  00037	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _bpe$[ebp], 0
; Line 415
  0003e	8b 45 10	 mov	 eax, DWORD PTR _fmt$[ebp]
  00041	89 45 cc	 mov	 DWORD PTR tv64[ebp], eax
  00044	8b 4d cc	 mov	 ecx, DWORD PTR tv64[ebp]
  00047	83 e9 44	 sub	 ecx, 68			; 00000044H
  0004a	89 4d cc	 mov	 DWORD PTR tv64[ebp], ecx
  0004d	83 7d cc 29	 cmp	 DWORD PTR tv64[ebp], 41	; 00000029H
  00051	77 5d		 ja	 SHORT $LN20@GetSurface
  00053	8b 55 cc	 mov	 edx, DWORD PTR tv64[ebp]
  00056	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN24@GetSurface[edx]
  0005d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN25@GetSurface[eax*4]
$LN19@GetSurface:
; Line 423
  00064	c6 45 f3 01	 mov	 BYTE PTR _bc$[ebp], 1
; Line 424
  00068	c7 45 ec 08 00
	00 00		 mov	 DWORD PTR _bpe$[ebp], 8
; Line 425
  0006f	eb 3f		 jmp	 SHORT $LN20@GetSurface
$LN18@GetSurface:
; Line 442
  00071	c6 45 f3 01	 mov	 BYTE PTR _bc$[ebp], 1
; Line 443
  00075	c7 45 ec 10 00
	00 00		 mov	 DWORD PTR _bpe$[ebp], 16 ; 00000010H
; Line 444
  0007c	eb 32		 jmp	 SHORT $LN20@GetSurface
$LN17@GetSurface:
; Line 449
  0007e	c6 45 f2 01	 mov	 BYTE PTR _packed$[ebp], 1
; Line 450
  00082	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR _bpe$[ebp], 4
; Line 451
  00089	eb 25		 jmp	 SHORT $LN20@GetSurface
$LN16@GetSurface:
; Line 455
  0008b	c6 45 f2 01	 mov	 BYTE PTR _packed$[ebp], 1
; Line 456
  0008f	c7 45 ec 08 00
	00 00		 mov	 DWORD PTR _bpe$[ebp], 8
; Line 457
  00096	eb 18		 jmp	 SHORT $LN20@GetSurface
$LN15@GetSurface:
; Line 461
  00098	c6 45 f1 01	 mov	 BYTE PTR _planar$[ebp], 1
; Line 462
  0009c	c7 45 ec 02 00
	00 00		 mov	 DWORD PTR _bpe$[ebp], 2
; Line 463
  000a3	eb 0b		 jmp	 SHORT $LN20@GetSurface
$LN14@GetSurface:
; Line 467
  000a5	c6 45 f1 01	 mov	 BYTE PTR _planar$[ebp], 1
; Line 468
  000a9	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR _bpe$[ebp], 4
$LN20@GetSurface:
; Line 483
  000b0	0f b6 4d f3	 movzx	 ecx, BYTE PTR _bc$[ebp]
  000b4	85 c9		 test	 ecx, ecx
  000b6	0f 84 89 00 00
	00		 je	 $LN13@GetSurface
; Line 485
  000bc	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _numBlocksWide$7[ebp], 0
; Line 486
  000c3	83 7d 08 00	 cmp	 DWORD PTR _width$[ebp], 0
  000c7	76 28		 jbe	 SHORT $LN12@GetSurface
; Line 488
  000c9	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]
  000cc	83 c2 03	 add	 edx, 3
  000cf	c1 ea 02	 shr	 edx, 2
  000d2	89 55 dc	 mov	 DWORD PTR $T4[ebp], edx
  000d5	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR $T3[ebp], 1
  000dc	8d 45 dc	 lea	 eax, DWORD PTR $T4[ebp]
  000df	50		 push	 eax
  000e0	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ??$max@I@std@@YAABIABI0@Z ; std::max<unsigned int>
  000e9	83 c4 08	 add	 esp, 8
  000ec	8b 10		 mov	 edx, DWORD PTR [eax]
  000ee	89 55 e8	 mov	 DWORD PTR _numBlocksWide$7[ebp], edx
$LN12@GetSurface:
; Line 490
  000f1	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _numBlocksHigh$6[ebp], 0
; Line 491
  000f8	83 7d 0c 00	 cmp	 DWORD PTR _height$[ebp], 0
  000fc	76 28		 jbe	 SHORT $LN11@GetSurface
; Line 493
  000fe	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  00101	83 c0 03	 add	 eax, 3
  00104	c1 e8 02	 shr	 eax, 2
  00107	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  0010a	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR $T1[ebp], 1
  00111	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp]
  00114	51		 push	 ecx
  00115	8d 55 d0	 lea	 edx, DWORD PTR $T1[ebp]
  00118	52		 push	 edx
  00119	e8 00 00 00 00	 call	 ??$max@I@std@@YAABIABI0@Z ; std::max<unsigned int>
  0011e	83 c4 08	 add	 esp, 8
  00121	8b 00		 mov	 eax, DWORD PTR [eax]
  00123	89 45 e4	 mov	 DWORD PTR _numBlocksHigh$6[ebp], eax
$LN11@GetSurface:
; Line 495
  00126	8b 4d e8	 mov	 ecx, DWORD PTR _numBlocksWide$7[ebp]
  00129	0f af 4d ec	 imul	 ecx, DWORD PTR _bpe$[ebp]
  0012d	89 4d f8	 mov	 DWORD PTR _rowBytes$[ebp], ecx
; Line 496
  00130	8b 55 e4	 mov	 edx, DWORD PTR _numBlocksHigh$6[ebp]
  00133	89 55 f4	 mov	 DWORD PTR _numRows$[ebp], edx
; Line 497
  00136	8b 45 f8	 mov	 eax, DWORD PTR _rowBytes$[ebp]
  00139	0f af 45 e4	 imul	 eax, DWORD PTR _numBlocksHigh$6[ebp]
  0013d	89 45 fc	 mov	 DWORD PTR _numBytes$[ebp], eax
  00140	e9 c3 00 00 00	 jmp	 $LN10@GetSurface
$LN13@GetSurface:
; Line 499
  00145	0f b6 4d f2	 movzx	 ecx, BYTE PTR _packed$[ebp]
  00149	85 c9		 test	 ecx, ecx
  0014b	74 24		 je	 SHORT $LN9@GetSurface
; Line 501
  0014d	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]
  00150	83 c2 01	 add	 edx, 1
  00153	d1 ea		 shr	 edx, 1
  00155	0f af 55 ec	 imul	 edx, DWORD PTR _bpe$[ebp]
  00159	89 55 f8	 mov	 DWORD PTR _rowBytes$[ebp], edx
; Line 502
  0015c	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  0015f	89 45 f4	 mov	 DWORD PTR _numRows$[ebp], eax
; Line 503
  00162	8b 4d f8	 mov	 ecx, DWORD PTR _rowBytes$[ebp]
  00165	0f af 4d 0c	 imul	 ecx, DWORD PTR _height$[ebp]
  00169	89 4d fc	 mov	 DWORD PTR _numBytes$[ebp], ecx
  0016c	e9 97 00 00 00	 jmp	 $LN10@GetSurface
$LN9@GetSurface:
; Line 505
  00171	83 7d 10 6e	 cmp	 DWORD PTR _fmt$[ebp], 110 ; 0000006eH
  00175	75 23		 jne	 SHORT $LN7@GetSurface
; Line 507
  00177	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]
  0017a	83 c2 03	 add	 edx, 3
  0017d	c1 ea 02	 shr	 edx, 2
  00180	c1 e2 02	 shl	 edx, 2
  00183	89 55 f8	 mov	 DWORD PTR _rowBytes$[ebp], edx
; Line 508
  00186	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  00189	d1 e0		 shl	 eax, 1
  0018b	89 45 f4	 mov	 DWORD PTR _numRows$[ebp], eax
; Line 509
  0018e	8b 4d f8	 mov	 ecx, DWORD PTR _rowBytes$[ebp]
  00191	0f af 4d f4	 imul	 ecx, DWORD PTR _numRows$[ebp]
  00195	89 4d fc	 mov	 DWORD PTR _numBytes$[ebp], ecx
  00198	eb 6e		 jmp	 SHORT $LN10@GetSurface
$LN7@GetSurface:
; Line 511
  0019a	0f b6 55 f1	 movzx	 edx, BYTE PTR _planar$[ebp]
  0019e	85 d2		 test	 edx, edx
  001a0	74 37		 je	 SHORT $LN5@GetSurface
; Line 513
  001a2	8b 45 08	 mov	 eax, DWORD PTR _width$[ebp]
  001a5	83 c0 01	 add	 eax, 1
  001a8	d1 e8		 shr	 eax, 1
  001aa	0f af 45 ec	 imul	 eax, DWORD PTR _bpe$[ebp]
  001ae	89 45 f8	 mov	 DWORD PTR _rowBytes$[ebp], eax
; Line 514
  001b1	8b 4d f8	 mov	 ecx, DWORD PTR _rowBytes$[ebp]
  001b4	0f af 4d 0c	 imul	 ecx, DWORD PTR _height$[ebp]
  001b8	8b 55 f8	 mov	 edx, DWORD PTR _rowBytes$[ebp]
  001bb	0f af 55 0c	 imul	 edx, DWORD PTR _height$[ebp]
  001bf	83 c2 01	 add	 edx, 1
  001c2	d1 ea		 shr	 edx, 1
  001c4	03 ca		 add	 ecx, edx
  001c6	89 4d fc	 mov	 DWORD PTR _numBytes$[ebp], ecx
; Line 515
  001c9	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  001cc	83 c0 01	 add	 eax, 1
  001cf	d1 e8		 shr	 eax, 1
  001d1	03 45 0c	 add	 eax, DWORD PTR _height$[ebp]
  001d4	89 45 f4	 mov	 DWORD PTR _numRows$[ebp], eax
; Line 517
  001d7	eb 2f		 jmp	 SHORT $LN10@GetSurface
$LN5@GetSurface:
; Line 519
  001d9	8b 4d 10	 mov	 ecx, DWORD PTR _fmt$[ebp]
  001dc	51		 push	 ecx
  001dd	e8 00 00 00 00	 call	 ?BitsPerPixel@@YAIW4DXGI_FORMAT@@@Z ; BitsPerPixel
  001e2	83 c4 04	 add	 esp, 4
  001e5	89 45 e0	 mov	 DWORD PTR _bpp$5[ebp], eax
; Line 520
  001e8	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]
  001eb	0f af 55 e0	 imul	 edx, DWORD PTR _bpp$5[ebp]
  001ef	83 c2 07	 add	 edx, 7
  001f2	c1 ea 03	 shr	 edx, 3
  001f5	89 55 f8	 mov	 DWORD PTR _rowBytes$[ebp], edx
; Line 521
  001f8	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  001fb	89 45 f4	 mov	 DWORD PTR _numRows$[ebp], eax
; Line 522
  001fe	8b 4d f8	 mov	 ecx, DWORD PTR _rowBytes$[ebp]
  00201	0f af 4d 0c	 imul	 ecx, DWORD PTR _height$[ebp]
  00205	89 4d fc	 mov	 DWORD PTR _numBytes$[ebp], ecx
$LN10@GetSurface:
; Line 525
  00208	83 7d 14 00	 cmp	 DWORD PTR _outNumBytes$[ebp], 0
  0020c	74 08		 je	 SHORT $LN3@GetSurface
; Line 527
  0020e	8b 55 14	 mov	 edx, DWORD PTR _outNumBytes$[ebp]
  00211	8b 45 fc	 mov	 eax, DWORD PTR _numBytes$[ebp]
  00214	89 02		 mov	 DWORD PTR [edx], eax
$LN3@GetSurface:
; Line 529
  00216	83 7d 18 00	 cmp	 DWORD PTR _outRowBytes$[ebp], 0
  0021a	74 08		 je	 SHORT $LN2@GetSurface
; Line 531
  0021c	8b 4d 18	 mov	 ecx, DWORD PTR _outRowBytes$[ebp]
  0021f	8b 55 f8	 mov	 edx, DWORD PTR _rowBytes$[ebp]
  00222	89 11		 mov	 DWORD PTR [ecx], edx
$LN2@GetSurface:
; Line 533
  00224	83 7d 1c 00	 cmp	 DWORD PTR _outNumRows$[ebp], 0
  00228	74 08		 je	 SHORT $LN22@GetSurface
; Line 535
  0022a	8b 45 1c	 mov	 eax, DWORD PTR _outNumRows$[ebp]
  0022d	8b 4d f4	 mov	 ecx, DWORD PTR _numRows$[ebp]
  00230	89 08		 mov	 DWORD PTR [eax], ecx
$LN22@GetSurface:
; Line 537
  00232	5f		 pop	 edi
  00233	83 c4 34	 add	 esp, 52			; 00000034H
  00236	3b ec		 cmp	 ebp, esp
  00238	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023d	8b e5		 mov	 esp, ebp
  0023f	5d		 pop	 ebp
  00240	c3		 ret	 0
  00241	8d 49 00	 npad	 3
$LN25@GetSurface:
  00244	00 00 00 00	 DD	 $LN17@GetSurface
  00248	00 00 00 00	 DD	 $LN19@GetSurface
  0024c	00 00 00 00	 DD	 $LN18@GetSurface
  00250	00 00 00 00	 DD	 $LN15@GetSurface
  00254	00 00 00 00	 DD	 $LN14@GetSurface
  00258	00 00 00 00	 DD	 $LN16@GetSurface
  0025c	00 00 00 00	 DD	 $LN20@GetSurface
$LN24@GetSurface:
  00260	00		 DB	 0
  00261	00		 DB	 0
  00262	01		 DB	 1
  00263	01		 DB	 1
  00264	01		 DB	 1
  00265	02		 DB	 2
  00266	02		 DB	 2
  00267	02		 DB	 2
  00268	02		 DB	 2
  00269	02		 DB	 2
  0026a	02		 DB	 2
  0026b	01		 DB	 1
  0026c	01		 DB	 1
  0026d	01		 DB	 1
  0026e	02		 DB	 2
  0026f	02		 DB	 2
  00270	02		 DB	 2
  00271	06		 DB	 6
  00272	06		 DB	 6
  00273	06		 DB	 6
  00274	06		 DB	 6
  00275	06		 DB	 6
  00276	06		 DB	 6
  00277	06		 DB	 6
  00278	06		 DB	 6
  00279	06		 DB	 6
  0027a	02		 DB	 2
  0027b	02		 DB	 2
  0027c	02		 DB	 2
  0027d	02		 DB	 2
  0027e	02		 DB	 2
  0027f	02		 DB	 2
  00280	06		 DB	 6
  00281	06		 DB	 6
  00282	06		 DB	 6
  00283	03		 DB	 3
  00284	04		 DB	 4
  00285	04		 DB	 4
  00286	03		 DB	 3
  00287	00		 DB	 0
  00288	05		 DB	 5
  00289	05		 DB	 5
?GetSurfaceInfo@@YAXIIW4DXGI_FORMAT@@PAI11@Z ENDP	; GetSurfaceInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_fmt$ = 8						; size = 4
?IsCompressed@@YA_NW4DXGI_FORMAT@@@Z PROC		; IsCompressed
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 365
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 366
  0000b	8b 45 08	 mov	 eax, DWORD PTR _fmt$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00014	83 e9 46	 sub	 ecx, 70			; 00000046H
  00017	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  0001a	83 7d fc 1d	 cmp	 DWORD PTR tv64[ebp], 29	; 0000001dH
  0001e	77 15		 ja	 SHORT $LN1@IsCompress
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  00023	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN7@IsCompress[edx]
  0002a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN8@IsCompress[eax*4]
$LN2@IsCompress:
; Line 389
  00031	b0 01		 mov	 al, 1
  00033	eb 02		 jmp	 SHORT $LN5@IsCompress
$LN1@IsCompress:
; Line 392
  00035	32 c0		 xor	 al, al
$LN5@IsCompress:
; Line 394
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN8@IsCompress:
  0003c	00 00 00 00	 DD	 $LN2@IsCompress
  00040	00 00 00 00	 DD	 $LN1@IsCompress
$LN7@IsCompress:
  00044	00		 DB	 0
  00045	00		 DB	 0
  00046	00		 DB	 0
  00047	00		 DB	 0
  00048	00		 DB	 0
  00049	00		 DB	 0
  0004a	00		 DB	 0
  0004b	00		 DB	 0
  0004c	00		 DB	 0
  0004d	00		 DB	 0
  0004e	00		 DB	 0
  0004f	00		 DB	 0
  00050	00		 DB	 0
  00051	00		 DB	 0
  00052	00		 DB	 0
  00053	01		 DB	 1
  00054	01		 DB	 1
  00055	01		 DB	 1
  00056	01		 DB	 1
  00057	01		 DB	 1
  00058	01		 DB	 1
  00059	01		 DB	 1
  0005a	01		 DB	 1
  0005b	01		 DB	 1
  0005c	00		 DB	 0
  0005d	00		 DB	 0
  0005e	00		 DB	 0
  0005f	00		 DB	 0
  00060	00		 DB	 0
  00061	00		 DB	 0
?IsCompressed@@YA_NW4DXGI_FORMAT@@@Z ENDP		; IsCompressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_fmt$ = 8						; size = 4
?BitsPerPixel@@YAIW4DXGI_FORMAT@@@Z PROC		; BitsPerPixel
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 202
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 203
  0000b	8b 45 08	 mov	 eax, DWORD PTR _fmt$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00014	83 e9 01	 sub	 ecx, 1
  00017	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  0001a	83 7d fc 72	 cmp	 DWORD PTR tv64[ebp], 114 ; 00000072H
  0001e	77 5e		 ja	 SHORT $LN1@BitsPerPix
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  00023	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN17@BitsPerPix[edx]
  0002a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN18@BitsPerPix[eax*4]
$LN12@BitsPerPix:
; Line 209
  00031	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  00036	eb 48		 jmp	 SHORT $LN15@BitsPerPix
$LN11@BitsPerPix:
; Line 215
  00038	b8 60 00 00 00	 mov	 eax, 96			; 00000060H
  0003d	eb 41		 jmp	 SHORT $LN15@BitsPerPix
$LN10@BitsPerPix:
; Line 234
  0003f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00044	eb 3a		 jmp	 SHORT $LN15@BitsPerPix
$LN9@BitsPerPix:
; Line 274
  00046	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0004b	eb 33		 jmp	 SHORT $LN15@BitsPerPix
$LN8@BitsPerPix:
; Line 278
  0004d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00052	eb 2c		 jmp	 SHORT $LN15@BitsPerPix
$LN7@BitsPerPix:
; Line 296
  00054	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00059	eb 25		 jmp	 SHORT $LN15@BitsPerPix
$LN6@BitsPerPix:
; Line 301
  0005b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00060	eb 1e		 jmp	 SHORT $LN15@BitsPerPix
$LN5@BitsPerPix:
; Line 312
  00062	b8 08 00 00 00	 mov	 eax, 8
  00067	eb 17		 jmp	 SHORT $LN15@BitsPerPix
$LN4@BitsPerPix:
; Line 315
  00069	b8 01 00 00 00	 mov	 eax, 1
  0006e	eb 10		 jmp	 SHORT $LN15@BitsPerPix
$LN3@BitsPerPix:
; Line 323
  00070	b8 04 00 00 00	 mov	 eax, 4
  00075	eb 09		 jmp	 SHORT $LN15@BitsPerPix
$LN2@BitsPerPix:
; Line 340
  00077	b8 08 00 00 00	 mov	 eax, 8
  0007c	eb 02		 jmp	 SHORT $LN15@BitsPerPix
$LN1@BitsPerPix:
; Line 356
  0007e	33 c0		 xor	 eax, eax
$LN15@BitsPerPix:
; Line 358
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
$LN18@BitsPerPix:
  00084	00 00 00 00	 DD	 $LN12@BitsPerPix
  00088	00 00 00 00	 DD	 $LN11@BitsPerPix
  0008c	00 00 00 00	 DD	 $LN10@BitsPerPix
  00090	00 00 00 00	 DD	 $LN9@BitsPerPix
  00094	00 00 00 00	 DD	 $LN7@BitsPerPix
  00098	00 00 00 00	 DD	 $LN5@BitsPerPix
  0009c	00 00 00 00	 DD	 $LN4@BitsPerPix
  000a0	00 00 00 00	 DD	 $LN3@BitsPerPix
  000a4	00 00 00 00	 DD	 $LN2@BitsPerPix
  000a8	00 00 00 00	 DD	 $LN6@BitsPerPix
  000ac	00 00 00 00	 DD	 $LN8@BitsPerPix
$LN17@BitsPerPix:
  000b0	00		 DB	 0
  000b1	00		 DB	 0
  000b2	00		 DB	 0
  000b3	00		 DB	 0
  000b4	01		 DB	 1
  000b5	01		 DB	 1
  000b6	01		 DB	 1
  000b7	01		 DB	 1
  000b8	02		 DB	 2
  000b9	02		 DB	 2
  000ba	02		 DB	 2
  000bb	02		 DB	 2
  000bc	02		 DB	 2
  000bd	02		 DB	 2
  000be	02		 DB	 2
  000bf	02		 DB	 2
  000c0	02		 DB	 2
  000c1	02		 DB	 2
  000c2	02		 DB	 2
  000c3	02		 DB	 2
  000c4	02		 DB	 2
  000c5	02		 DB	 2
  000c6	03		 DB	 3
  000c7	03		 DB	 3
  000c8	03		 DB	 3
  000c9	03		 DB	 3
  000ca	03		 DB	 3
  000cb	03		 DB	 3
  000cc	03		 DB	 3
  000cd	03		 DB	 3
  000ce	03		 DB	 3
  000cf	03		 DB	 3
  000d0	03		 DB	 3
  000d1	03		 DB	 3
  000d2	03		 DB	 3
  000d3	03		 DB	 3
  000d4	03		 DB	 3
  000d5	03		 DB	 3
  000d6	03		 DB	 3
  000d7	03		 DB	 3
  000d8	03		 DB	 3
  000d9	03		 DB	 3
  000da	03		 DB	 3
  000db	03		 DB	 3
  000dc	03		 DB	 3
  000dd	03		 DB	 3
  000de	03		 DB	 3
  000df	04		 DB	 4
  000e0	04		 DB	 4
  000e1	04		 DB	 4
  000e2	04		 DB	 4
  000e3	04		 DB	 4
  000e4	04		 DB	 4
  000e5	04		 DB	 4
  000e6	04		 DB	 4
  000e7	04		 DB	 4
  000e8	04		 DB	 4
  000e9	04		 DB	 4
  000ea	04		 DB	 4
  000eb	05		 DB	 5
  000ec	05		 DB	 5
  000ed	05		 DB	 5
  000ee	05		 DB	 5
  000ef	05		 DB	 5
  000f0	05		 DB	 5
  000f1	06		 DB	 6
  000f2	03		 DB	 3
  000f3	03		 DB	 3
  000f4	03		 DB	 3
  000f5	07		 DB	 7
  000f6	07		 DB	 7
  000f7	07		 DB	 7
  000f8	08		 DB	 8
  000f9	08		 DB	 8
  000fa	08		 DB	 8
  000fb	08		 DB	 8
  000fc	08		 DB	 8
  000fd	08		 DB	 8
  000fe	07		 DB	 7
  000ff	07		 DB	 7
  00100	07		 DB	 7
  00101	08		 DB	 8
  00102	08		 DB	 8
  00103	08		 DB	 8
  00104	04		 DB	 4
  00105	04		 DB	 4
  00106	03		 DB	 3
  00107	03		 DB	 3
  00108	03		 DB	 3
  00109	03		 DB	 3
  0010a	03		 DB	 3
  0010b	03		 DB	 3
  0010c	03		 DB	 3
  0010d	08		 DB	 8
  0010e	08		 DB	 8
  0010f	08		 DB	 8
  00110	08		 DB	 8
  00111	08		 DB	 8
  00112	08		 DB	 8
  00113	03		 DB	 3
  00114	03		 DB	 3
  00115	02		 DB	 2
  00116	09		 DB	 9
  00117	0a		 DB	 10			; 0000000aH
  00118	0a		 DB	 10			; 0000000aH
  00119	09		 DB	 9
  0011a	03		 DB	 3
  0011b	02		 DB	 2
  0011c	02		 DB	 2
  0011d	09		 DB	 9
  0011e	05		 DB	 5
  0011f	05		 DB	 5
  00120	05		 DB	 5
  00121	04		 DB	 4
  00122	04		 DB	 4
?BitsPerPixel@@YAIW4DXGI_FORMAT@@@Z ENDP		; BitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?safe_handle@@YAPAXPAX@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_h$ = 8							; size = 4
?safe_handle@@YAPAXPAX@Z PROC				; safe_handle, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	83 7d 08 ff	 cmp	 DWORD PTR _h$[ebp], -1
  0000f	75 09		 jne	 SHORT $LN3@safe_handl
  00011	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
  00018	eb 06		 jmp	 SHORT $LN4@safe_handl
$LN3@safe_handl:
  0001a	8b 45 08	 mov	 eax, DWORD PTR _h$[ebp]
  0001d	89 45 fc	 mov	 DWORD PTR tv65[ebp], eax
$LN4@safe_handl:
  00020	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?safe_handle@@YAPAXPAX@Z ENDP				; safe_handle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Rhandle_closer@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??Rhandle_closer@@QAEXPAX@Z PROC			; handle_closer::operator(), COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 191
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	83 7d 08 00	 cmp	 DWORD PTR _h$[ebp], 0
  00013	74 13		 je	 SHORT $LN2@operator
  00015	8b f4		 mov	 esi, esp
  00017	8b 45 08	 mov	 eax, DWORD PTR _h$[ebp]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00021	3b f4		 cmp	 esi, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
  00028	5e		 pop	 esi
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??Rhandle_closer@@QAEXPAX@Z ENDP			; handle_closer::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv631 = -544						; size = 4
tv619 = -540						; size = 4
tv591 = -536						; size = 4
tv528 = -532						; size = 4
tv493 = -528						; size = 4
tv433 = -524						; size = 4
tv408 = -520						; size = 4
tv394 = -516						; size = 4
tv382 = -512						; size = 4
tv368 = -508						; size = 4
tv359 = -504						; size = 4
tv346 = -500						; size = 4
tv334 = -496						; size = 4
tv323 = -492						; size = 4
tv313 = -488						; size = 4
tv304 = -484						; size = 4
tv290 = -480						; size = 4
tv275 = -476						; size = 4
tv218 = -472						; size = 4
tv204 = -468						; size = 4
tv188 = -464						; size = 4
tv162 = -460						; size = 4
tv135 = -456						; size = 4
tv78 = -452						; size = 4
$T2 = -448						; size = 4
$T3 = -444						; size = 4
$T4 = -440						; size = 4
$T5 = -436						; size = 4
$T6 = -432						; size = 4
$T7 = -428						; size = 4
$T8 = -424						; size = 4
$T9 = -420						; size = 4
$T10 = -416						; size = 4
$T11 = -412						; size = 4
$T12 = -408						; size = 4
$T13 = -404						; size = 4
$T14 = -400						; size = 4
$T15 = -396						; size = 4
$T16 = -392						; size = 4
$T17 = -388						; size = 4
$T18 = -384						; size = 4
$T19 = -380						; size = 4
$T20 = -376						; size = 4
$T21 = -372						; size = 4
$T22 = -368						; size = 4
$T23 = -364						; size = 4
$T24 = -360						; size = 4
_rect$25 = -352						; size = 16
_FC$26 = -328						; size = 4
_source$27 = -316					; size = 4
_mapped$ = -304						; size = 12
_value$28 = -284					; size = 16
_metawriter$ = -260					; size = 4
_targetGuid$ = -248					; size = 16
_varValue$29 = -224					; size = 16
_option$30 = -200					; size = 32
_props$ = -160						; size = 4
_frame$ = -148						; size = 4
_encoder$ = -136					; size = 4
_stream$ = -124						; size = 4
_pWIC$ = -116						; size = 4
_sRGB$ = -109						; size = 1
_pfGuid$ = -104						; size = 16
_hr$ = -84						; size = 4
_pStaging$ = -76					; size = 4
_desc$ = -64						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pContext$ = 8						; size = 4
_pSource$ = 12						; size = 4
_guidContainerFormat$ = 16				; size = 4
_fileName$ = 20						; size = 4
_targetFormat$ = 24					; size = 4
_setCustomProps$ = 28					; size = 24
?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z PROC ; DirectX::SaveWICTextureToFile
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 888
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 14 02 00
	00		 sub	 esp, 532		; 00000214H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd e0 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-544]
  0001f	b9 85 00 00 00	 mov	 ecx, 133		; 00000085H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 889
  00046	83 7d 14 00	 cmp	 DWORD PTR _fileName$[ebp], 0
  0004a	75 24		 jne	 SHORT $LN60@SaveWICTex
; Line 890
  0004c	c7 85 98 fe ff
	ff 57 00 07 80	 mov	 DWORD PTR $T24[ebp], -2147024809 ; 80070057H
  00056	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005d	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00060	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00065	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR $T24[ebp]
  0006b	e9 3b 16 00 00	 jmp	 $LN61@SaveWICTex
$LN60@SaveWICTex:
; Line 892
  00070	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _desc$[ebp], 0
  00077	33 c0		 xor	 eax, eax
  00079	89 45 c4	 mov	 DWORD PTR _desc$[ebp+4], eax
  0007c	89 45 c8	 mov	 DWORD PTR _desc$[ebp+8], eax
  0007f	89 45 cc	 mov	 DWORD PTR _desc$[ebp+12], eax
  00082	89 45 d0	 mov	 DWORD PTR _desc$[ebp+16], eax
  00085	89 45 d4	 mov	 DWORD PTR _desc$[ebp+20], eax
  00088	89 45 d8	 mov	 DWORD PTR _desc$[ebp+24], eax
  0008b	89 45 dc	 mov	 DWORD PTR _desc$[ebp+28], eax
  0008e	89 45 e0	 mov	 DWORD PTR _desc$[ebp+32], eax
  00091	89 45 e4	 mov	 DWORD PTR _desc$[ebp+36], eax
  00094	89 45 e8	 mov	 DWORD PTR _desc$[ebp+40], eax
; Line 893
  00097	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0009a	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
  0009f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; Line 894
  000a3	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  000a6	51		 push	 ecx
  000a7	8d 55 c0	 lea	 edx, DWORD PTR _desc$[ebp]
  000aa	52		 push	 edx
  000ab	8b 45 0c	 mov	 eax, DWORD PTR _pSource$[ebp]
  000ae	50		 push	 eax
  000af	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  000b2	51		 push	 ecx
  000b3	e8 00 00 00 00	 call	 ?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z ; CaptureTexture
  000b8	83 c4 10	 add	 esp, 16			; 00000010H
  000bb	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 895
  000be	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c2	7d 2f		 jge	 SHORT $LN59@SaveWICTex
; Line 896
  000c4	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  000c7	89 95 94 fe ff
	ff		 mov	 DWORD PTR $T23[ebp], edx
  000cd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000d1	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  000d4	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  000d9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e0	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  000e3	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  000e8	8b 85 94 fe ff
	ff		 mov	 eax, DWORD PTR $T23[ebp]
  000ee	e9 b8 15 00 00	 jmp	 $LN61@SaveWICTex
$LN59@SaveWICTex:
; Line 900
  000f3	c6 45 93 00	 mov	 BYTE PTR _sRGB$[ebp], 0
; Line 901
  000f7	8b 45 d0	 mov	 eax, DWORD PTR _desc$[ebp+16]
  000fa	89 85 3c fe ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  00100	8b 8d 3c fe ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  00106	83 e9 02	 sub	 ecx, 2
  00109	89 8d 3c fe ff
	ff		 mov	 DWORD PTR tv78[ebp], ecx
  0010f	83 bd 3c fe ff
	ff 5b		 cmp	 DWORD PTR tv78[ebp], 91	; 0000005bH
  00116	0f 87 e4 02 00
	00		 ja	 $LN38@SaveWICTex
  0011c	8b 95 3c fe ff
	ff		 mov	 edx, DWORD PTR tv78[ebp]
  00122	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN72@SaveWICTex[edx]
  00129	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN93@SaveWICTex[eax*4]
$LN56@SaveWICTex:
; Line 903
  00130	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  00136	89 4d 98	 mov	 DWORD PTR _pfGuid$[ebp], ecx
  00139	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  0013f	89 55 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], edx
  00142	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  00147	89 45 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], eax
  0014a	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  00150	89 4d a4	 mov	 DWORD PTR _pfGuid$[ebp+12], ecx
  00153	e9 de 02 00 00	 jmp	 $LN57@SaveWICTex
$LN55@SaveWICTex:
; Line 904
  00158	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  0015e	89 55 98	 mov	 DWORD PTR _pfGuid$[ebp], edx
  00161	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  00166	89 45 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], eax
  00169	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  0016f	89 4d a0	 mov	 DWORD PTR _pfGuid$[ebp+8], ecx
  00172	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  00178	89 55 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], edx
  0017b	e9 b6 02 00 00	 jmp	 $LN57@SaveWICTex
$LN54@SaveWICTex:
; Line 905
  00180	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  00185	89 45 98	 mov	 DWORD PTR _pfGuid$[ebp], eax
  00188	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  0018e	89 4d 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], ecx
  00191	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  00197	89 55 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], edx
  0019a	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  0019f	89 45 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], eax
  001a2	e9 8f 02 00 00	 jmp	 $LN57@SaveWICTex
$LN53@SaveWICTex:
; Line 906
  001a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR
  001ad	89 4d 98	 mov	 DWORD PTR _pfGuid$[ebp], ecx
  001b0	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+4
  001b6	89 55 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], edx
  001b9	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+8
  001be	89 45 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], eax
  001c1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+12
  001c7	89 4d a4	 mov	 DWORD PTR _pfGuid$[ebp+12], ecx
  001ca	e9 67 02 00 00	 jmp	 $LN57@SaveWICTex
$LN52@SaveWICTex:
; Line 907
  001cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102
  001d5	89 55 98	 mov	 DWORD PTR _pfGuid$[ebp], edx
  001d8	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+4
  001dd	89 45 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], eax
  001e0	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+8
  001e6	89 4d a0	 mov	 DWORD PTR _pfGuid$[ebp+8], ecx
  001e9	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+12
  001ef	89 55 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], edx
  001f2	e9 3f 02 00 00	 jmp	 $LN57@SaveWICTex
$LN51@SaveWICTex:
; Line 908
  001f7	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551
  001fc	89 45 98	 mov	 DWORD PTR _pfGuid$[ebp], eax
  001ff	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+4
  00205	89 4d 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], ecx
  00208	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+8
  0020e	89 55 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], edx
  00211	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+12
  00216	89 45 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], eax
  00219	e9 18 02 00 00	 jmp	 $LN57@SaveWICTex
$LN50@SaveWICTex:
; Line 909
  0021e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565
  00224	89 4d 98	 mov	 DWORD PTR _pfGuid$[ebp], ecx
  00227	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+4
  0022d	89 55 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], edx
  00230	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565+8
  00235	89 45 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], eax
  00238	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+12
  0023e	89 4d a4	 mov	 DWORD PTR _pfGuid$[ebp+12], ecx
  00241	e9 f0 01 00 00	 jmp	 $LN57@SaveWICTex
$LN49@SaveWICTex:
; Line 910
  00246	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat
  0024c	89 55 98	 mov	 DWORD PTR _pfGuid$[ebp], edx
  0024f	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+4
  00254	89 45 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], eax
  00257	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+8
  0025d	89 4d a0	 mov	 DWORD PTR _pfGuid$[ebp+8], ecx
  00260	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+12
  00266	89 55 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], edx
  00269	e9 c8 01 00 00	 jmp	 $LN57@SaveWICTex
$LN48@SaveWICTex:
; Line 911
  0026e	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf
  00273	89 45 98	 mov	 DWORD PTR _pfGuid$[ebp], eax
  00276	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+4
  0027c	89 4d 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], ecx
  0027f	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+8
  00285	89 55 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], edx
  00288	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+12
  0028d	89 45 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], eax
  00290	e9 a1 01 00 00	 jmp	 $LN57@SaveWICTex
$LN47@SaveWICTex:
; Line 912
  00295	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppGray
  0029b	89 4d 98	 mov	 DWORD PTR _pfGuid$[ebp], ecx
  0029e	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGray+4
  002a4	89 55 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], edx
  002a7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGray+8
  002ac	89 45 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], eax
  002af	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppGray+12
  002b5	89 4d a4	 mov	 DWORD PTR _pfGuid$[ebp+12], ecx
  002b8	e9 79 01 00 00	 jmp	 $LN57@SaveWICTex
$LN46@SaveWICTex:
; Line 913
  002bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray
  002c3	89 55 98	 mov	 DWORD PTR _pfGuid$[ebp], edx
  002c6	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppGray+4
  002cb	89 45 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], eax
  002ce	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+8
  002d4	89 4d a0	 mov	 DWORD PTR _pfGuid$[ebp+8], ecx
  002d7	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
  002dd	89 55 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], edx
  002e0	e9 51 01 00 00	 jmp	 $LN57@SaveWICTex
$LN45@SaveWICTex:
; Line 914
  002e5	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppAlpha
  002ea	89 45 98	 mov	 DWORD PTR _pfGuid$[ebp], eax
  002ed	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+4
  002f3	89 4d 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], ecx
  002f6	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+8
  002fc	89 55 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], edx
  002ff	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppAlpha+12
  00304	89 45 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], eax
  00307	e9 2a 01 00 00	 jmp	 $LN57@SaveWICTex
$LN44@SaveWICTex:
; Line 917
  0030c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  00312	89 4d 98	 mov	 DWORD PTR _pfGuid$[ebp], ecx
  00315	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  0031b	89 55 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], edx
  0031e	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  00323	89 45 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], eax
  00326	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  0032c	89 4d a4	 mov	 DWORD PTR _pfGuid$[ebp+12], ecx
; Line 918
  0032f	e9 02 01 00 00	 jmp	 $LN57@SaveWICTex
$LN43@SaveWICTex:
; Line 921
  00334	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  0033a	89 55 98	 mov	 DWORD PTR _pfGuid$[ebp], edx
  0033d	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  00342	89 45 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], eax
  00345	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  0034b	89 4d a0	 mov	 DWORD PTR _pfGuid$[ebp+8], ecx
  0034e	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  00354	89 55 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], edx
; Line 922
  00357	c6 45 93 01	 mov	 BYTE PTR _sRGB$[ebp], 1
; Line 923
  0035b	e9 d6 00 00 00	 jmp	 $LN57@SaveWICTex
$LN42@SaveWICTex:
; Line 926
  00360	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA
  00365	89 45 98	 mov	 DWORD PTR _pfGuid$[ebp], eax
  00368	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+4
  0036e	89 4d 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], ecx
  00371	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+8
  00377	89 55 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], edx
  0037a	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA+12
  0037f	89 45 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], eax
; Line 927
  00382	e9 af 00 00 00	 jmp	 $LN57@SaveWICTex
$LN41@SaveWICTex:
; Line 930
  00387	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA
  0038d	89 4d 98	 mov	 DWORD PTR _pfGuid$[ebp], ecx
  00390	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+4
  00396	89 55 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], edx
  00399	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA+8
  0039e	89 45 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], eax
  003a1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+12
  003a7	89 4d a4	 mov	 DWORD PTR _pfGuid$[ebp+12], ecx
; Line 931
  003aa	c6 45 93 01	 mov	 BYTE PTR _sRGB$[ebp], 1
; Line 932
  003ae	e9 83 00 00 00	 jmp	 $LN57@SaveWICTex
$LN40@SaveWICTex:
; Line 935
  003b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGR
  003b9	89 55 98	 mov	 DWORD PTR _pfGuid$[ebp], edx
  003bc	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGR+4
  003c1	89 45 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], eax
  003c4	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR+8
  003ca	89 4d a0	 mov	 DWORD PTR _pfGuid$[ebp+8], ecx
  003cd	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGR+12
  003d3	89 55 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], edx
; Line 936
  003d6	eb 5e		 jmp	 SHORT $LN57@SaveWICTex
$LN39@SaveWICTex:
; Line 939
  003d8	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGR
  003dd	89 45 98	 mov	 DWORD PTR _pfGuid$[ebp], eax
  003e0	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR+4
  003e6	89 4d 9c	 mov	 DWORD PTR _pfGuid$[ebp+4], ecx
  003e9	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGR+8
  003ef	89 55 a0	 mov	 DWORD PTR _pfGuid$[ebp+8], edx
  003f2	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGR+12
  003f7	89 45 a4	 mov	 DWORD PTR _pfGuid$[ebp+12], eax
; Line 940
  003fa	c6 45 93 01	 mov	 BYTE PTR _sRGB$[ebp], 1
; Line 941
  003fe	eb 36		 jmp	 SHORT $LN57@SaveWICTex
$LN38@SaveWICTex:
; Line 944
  00400	6a 32		 push	 50			; 00000032H
  00402	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00407	83 c4 04	 add	 esp, 4
  0040a	89 85 90 fe ff
	ff		 mov	 DWORD PTR $T22[ebp], eax
  00410	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00414	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00417	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0041c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00423	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00426	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  0042b	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR $T22[ebp]
  00431	e9 75 12 00 00	 jmp	 $LN61@SaveWICTex
$LN57@SaveWICTex:
; Line 947
  00436	e8 00 00 00 00	 call	 ?_GetWIC@@YAPAUIWICImagingFactory@@XZ ; _GetWIC
  0043b	89 45 8c	 mov	 DWORD PTR _pWIC$[ebp], eax
; Line 948
  0043e	83 7d 8c 00	 cmp	 DWORD PTR _pWIC$[ebp], 0
  00442	75 30		 jne	 SHORT $LN37@SaveWICTex
; Line 949
  00444	c7 85 8c fe ff
	ff 02 40 00 80	 mov	 DWORD PTR $T21[ebp], -2147467262 ; 80004002H
  0044e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00452	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00455	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0045a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00461	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00464	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00469	8b 85 8c fe ff
	ff		 mov	 eax, DWORD PTR $T21[ebp]
  0046f	e9 37 12 00 00	 jmp	 $LN61@SaveWICTex
$LN37@SaveWICTex:
; Line 951
  00474	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00477	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
  0047c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; Line 952
  00480	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00483	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
  00488	8b f4		 mov	 esi, esp
  0048a	50		 push	 eax
  0048b	8b 4d 8c	 mov	 ecx, DWORD PTR _pWIC$[ebp]
  0048e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00490	8b 45 8c	 mov	 eax, DWORD PTR _pWIC$[ebp]
  00493	50		 push	 eax
  00494	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  00497	ff d1		 call	 ecx
  00499	3b f4		 cmp	 esi, esp
  0049b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a0	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 953
  004a3	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  004a7	7d 3b		 jge	 SHORT $LN36@SaveWICTex
; Line 954
  004a9	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  004ac	89 95 88 fe ff
	ff		 mov	 DWORD PTR $T20[ebp], edx
  004b2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  004b6	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  004b9	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  004be	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  004c2	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  004c5	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  004ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004d1	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  004d4	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  004d9	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR $T20[ebp]
  004df	e9 c7 11 00 00	 jmp	 $LN61@SaveWICTex
$LN36@SaveWICTex:
; Line 956
  004e4	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  004e7	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
  004ec	89 85 38 fe ff
	ff		 mov	 DWORD PTR tv135[ebp], eax
  004f2	8b f4		 mov	 esi, esp
  004f4	68 00 00 00 40	 push	 1073741824		; 40000000H
  004f9	8b 45 14	 mov	 eax, DWORD PTR _fileName$[ebp]
  004fc	50		 push	 eax
  004fd	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR tv135[ebp]
  00503	51		 push	 ecx
  00504	8b 95 38 fe ff
	ff		 mov	 edx, DWORD PTR tv135[ebp]
  0050a	8b 02		 mov	 eax, DWORD PTR [edx]
  0050c	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0050f	ff d1		 call	 ecx
  00511	3b f4		 cmp	 esi, esp
  00513	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00518	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 957
  0051b	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0051f	7d 3b		 jge	 SHORT $LN35@SaveWICTex
; Line 958
  00521	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  00524	89 95 84 fe ff
	ff		 mov	 DWORD PTR $T19[ebp], edx
  0052a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0052e	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00531	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00536	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0053a	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0053d	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00542	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00549	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  0054c	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00551	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR $T19[ebp]
  00557	e9 4f 11 00 00	 jmp	 $LN61@SaveWICTex
$LN35@SaveWICTex:
; Line 960
  0055c	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00562	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>
  00567	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; Line 961
  0056b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00571	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf
  00576	8b f4		 mov	 esi, esp
  00578	50		 push	 eax
  00579	6a 00		 push	 0
  0057b	8b 45 10	 mov	 eax, DWORD PTR _guidContainerFormat$[ebp]
  0057e	50		 push	 eax
  0057f	8b 4d 8c	 mov	 ecx, DWORD PTR _pWIC$[ebp]
  00582	8b 11		 mov	 edx, DWORD PTR [ecx]
  00584	8b 45 8c	 mov	 eax, DWORD PTR _pWIC$[ebp]
  00587	50		 push	 eax
  00588	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0058b	ff d1		 call	 ecx
  0058d	3b f4		 cmp	 esi, esp
  0058f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00594	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 962
  00597	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0059b	7d 4a		 jge	 SHORT $LN34@SaveWICTex
; Line 963
  0059d	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  005a0	89 95 80 fe ff
	ff		 mov	 DWORD PTR $T18[ebp], edx
  005a6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  005aa	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  005b0	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  005b5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  005b9	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  005bc	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  005c1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  005c5	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  005c8	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  005cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005d4	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  005d7	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  005dc	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR $T18[ebp]
  005e2	e9 c4 10 00 00	 jmp	 $LN61@SaveWICTex
$LN34@SaveWICTex:
; Line 965
  005e7	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  005ed	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
  005f2	89 85 34 fe ff
	ff		 mov	 DWORD PTR tv162[ebp], eax
  005f8	8b f4		 mov	 esi, esp
  005fa	6a 02		 push	 2
  005fc	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  005ff	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
  00604	50		 push	 eax
  00605	8b 85 34 fe ff
	ff		 mov	 eax, DWORD PTR tv162[ebp]
  0060b	50		 push	 eax
  0060c	8b 8d 34 fe ff
	ff		 mov	 ecx, DWORD PTR tv162[ebp]
  00612	8b 11		 mov	 edx, DWORD PTR [ecx]
  00614	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00617	ff d0		 call	 eax
  00619	3b f4		 cmp	 esi, esp
  0061b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00620	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 966
  00623	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00627	7d 4a		 jge	 SHORT $LN33@SaveWICTex
; Line 967
  00629	8b 4d ac	 mov	 ecx, DWORD PTR _hr$[ebp]
  0062c	89 8d 7c fe ff
	ff		 mov	 DWORD PTR $T17[ebp], ecx
  00632	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00636	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  0063c	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  00641	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00645	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00648	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  0064d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00651	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00654	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00659	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00660	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00663	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00668	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR $T17[ebp]
  0066e	e9 38 10 00 00	 jmp	 $LN61@SaveWICTex
$LN33@SaveWICTex:
; Line 969
  00673	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00679	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>
  0067e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; Line 970
  00682	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00688	e8 00 00 00 00	 call	 ??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>
  0068d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; Line 971
  00691	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00697	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
  0069c	89 85 30 fe ff
	ff		 mov	 DWORD PTR tv188[ebp], eax
  006a2	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  006a8	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf
  006ad	8b f4		 mov	 esi, esp
  006af	50		 push	 eax
  006b0	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  006b6	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf
  006bb	50		 push	 eax
  006bc	8b 95 30 fe ff
	ff		 mov	 edx, DWORD PTR tv188[ebp]
  006c2	52		 push	 edx
  006c3	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR tv188[ebp]
  006c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  006cb	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  006ce	ff d2		 call	 edx
  006d0	3b f4		 cmp	 esi, esp
  006d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006d7	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 972
  006da	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  006de	7d 68		 jge	 SHORT $LN32@SaveWICTex
; Line 973
  006e0	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  006e3	89 85 78 fe ff
	ff		 mov	 DWORD PTR $T16[ebp], eax
  006e9	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  006ed	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  006f3	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  006f8	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  006fc	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00702	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  00707	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0070b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00711	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  00716	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0071a	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  0071d	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00722	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00726	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00729	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0072e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00735	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00738	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  0073d	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR $T16[ebp]
  00743	e9 63 0f 00 00	 jmp	 $LN61@SaveWICTex
$LN32@SaveWICTex:
; Line 975
  00748	83 7d 18 00	 cmp	 DWORD PTR _targetFormat$[ebp], 0
  0074c	0f 84 c9 00 00
	00		 je	 $LN31@SaveWICTex
  00752	6a 10		 push	 16			; 00000010H
  00754	68 00 00 00 00	 push	 OFFSET _GUID_ContainerFormatBmp
  00759	8b 4d 10	 mov	 ecx, DWORD PTR _guidContainerFormat$[ebp]
  0075c	51		 push	 ecx
  0075d	e8 00 00 00 00	 call	 _memcmp
  00762	83 c4 0c	 add	 esp, 12			; 0000000cH
  00765	89 85 2c fe ff
	ff		 mov	 DWORD PTR tv204[ebp], eax
  0076b	83 bd 2c fe ff
	ff 00		 cmp	 DWORD PTR tv204[ebp], 0
  00772	0f 85 a3 00 00
	00		 jne	 $LN31@SaveWICTex
  00778	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR _g_WIC2
  0077f	85 d2		 test	 edx, edx
  00781	0f 84 94 00 00
	00		 je	 $LN31@SaveWICTex
; Line 978
  00787	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _option$30[ebp], 0
  00791	33 c0		 xor	 eax, eax
  00793	89 85 3c ff ff
	ff		 mov	 DWORD PTR _option$30[ebp+4], eax
  00799	89 85 40 ff ff
	ff		 mov	 DWORD PTR _option$30[ebp+8], eax
  0079f	89 85 44 ff ff
	ff		 mov	 DWORD PTR _option$30[ebp+12], eax
  007a5	89 85 48 ff ff
	ff		 mov	 DWORD PTR _option$30[ebp+16], eax
  007ab	89 85 4c ff ff
	ff		 mov	 DWORD PTR _option$30[ebp+20], eax
  007b1	89 85 50 ff ff
	ff		 mov	 DWORD PTR _option$30[ebp+24], eax
  007b7	89 85 54 ff ff
	ff		 mov	 DWORD PTR _option$30[ebp+28], eax
; Line 979
  007bd	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _option$30[ebp+12], OFFSET $SG160180
; Line 982
  007c7	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  007cc	66 89 8d 20 ff
	ff ff		 mov	 WORD PTR _varValue$29[ebp], cx
; Line 983
  007d3	83 ca ff	 or	 edx, -1
  007d6	66 89 95 28 ff
	ff ff		 mov	 WORD PTR _varValue$29[ebp+8], dx
; Line 984
  007dd	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  007e3	e8 00 00 00 00	 call	 ??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->
  007e8	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv218[ebp], eax
  007ee	8b f4		 mov	 esi, esp
  007f0	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _varValue$29[ebp]
  007f6	50		 push	 eax
  007f7	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _option$30[ebp]
  007fd	51		 push	 ecx
  007fe	6a 01		 push	 1
  00800	8b 95 28 fe ff
	ff		 mov	 edx, DWORD PTR tv218[ebp]
  00806	52		 push	 edx
  00807	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv218[ebp]
  0080d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0080f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00812	ff d2		 call	 edx
  00814	3b f4		 cmp	 esi, esp
  00816	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN31@SaveWICTex:
; Line 987
  0081b	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  0081e	e8 00 00 00 00	 call	 ??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool
  00823	0f b6 c0	 movzx	 eax, al
  00826	85 c0		 test	 eax, eax
  00828	74 14		 je	 SHORT $LN30@SaveWICTex
; Line 989
  0082a	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00830	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
  00835	50		 push	 eax
  00836	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00839	e8 00 00 00 00	 call	 ??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z ; std::_Func_class<void,IPropertyBag2 *>::operator()
$LN30@SaveWICTex:
; Line 992
  0083e	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00844	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  00849	89 85 24 fe ff
	ff		 mov	 DWORD PTR tv275[ebp], eax
  0084f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00855	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
  0085a	8b f4		 mov	 esi, esp
  0085c	50		 push	 eax
  0085d	8b 8d 24 fe ff
	ff		 mov	 ecx, DWORD PTR tv275[ebp]
  00863	51		 push	 ecx
  00864	8b 95 24 fe ff
	ff		 mov	 edx, DWORD PTR tv275[ebp]
  0086a	8b 02		 mov	 eax, DWORD PTR [edx]
  0086c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0086f	ff d1		 call	 ecx
  00871	3b f4		 cmp	 esi, esp
  00873	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00878	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 993
  0087b	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0087f	7d 68		 jge	 SHORT $LN29@SaveWICTex
; Line 994
  00881	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  00884	89 95 74 fe ff
	ff		 mov	 DWORD PTR $T15[ebp], edx
  0088a	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0088e	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00894	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  00899	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0089d	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  008a3	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  008a8	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  008ac	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  008b2	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  008b7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  008bb	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  008be	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  008c3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  008c7	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  008ca	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  008cf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008d6	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  008d9	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  008de	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR $T15[ebp]
  008e4	e9 c2 0d 00 00	 jmp	 $LN61@SaveWICTex
$LN29@SaveWICTex:
; Line 996
  008e9	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  008ef	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  008f4	89 85 20 fe ff
	ff		 mov	 DWORD PTR tv290[ebp], eax
  008fa	8b f4		 mov	 esi, esp
  008fc	8b 45 c4	 mov	 eax, DWORD PTR _desc$[ebp+4]
  008ff	50		 push	 eax
  00900	8b 4d c0	 mov	 ecx, DWORD PTR _desc$[ebp]
  00903	51		 push	 ecx
  00904	8b 95 20 fe ff
	ff		 mov	 edx, DWORD PTR tv290[ebp]
  0090a	52		 push	 edx
  0090b	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR tv290[ebp]
  00911	8b 08		 mov	 ecx, DWORD PTR [eax]
  00913	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00916	ff d2		 call	 edx
  00918	3b f4		 cmp	 esi, esp
  0091a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0091f	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 997
  00922	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00926	7d 68		 jge	 SHORT $LN28@SaveWICTex
; Line 998
  00928	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  0092b	89 85 70 fe ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  00931	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00935	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  0093b	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  00940	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00944	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  0094a	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  0094f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00953	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00959	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  0095e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00962	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00965	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  0096a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0096e	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00971	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00976	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0097d	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00980	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00985	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR $T14[ebp]
  0098b	e9 1b 0d 00 00	 jmp	 $LN61@SaveWICTex
$LN28@SaveWICTex:
; Line 1000
  00990	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00996	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  0099b	89 85 1c fe ff
	ff		 mov	 DWORD PTR tv304[ebp], eax
  009a1	8b f4		 mov	 esi, esp
  009a3	83 ec 08	 sub	 esp, 8
  009a6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4052000000000000
  009ae	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009b3	83 ec 08	 sub	 esp, 8
  009b6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4052000000000000
  009be	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009c3	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv304[ebp]
  009c9	51		 push	 ecx
  009ca	8b 95 1c fe ff
	ff		 mov	 edx, DWORD PTR tv304[ebp]
  009d0	8b 02		 mov	 eax, DWORD PTR [edx]
  009d2	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  009d5	ff d1		 call	 ecx
  009d7	3b f4		 cmp	 esi, esp
  009d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009de	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1001
  009e1	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  009e5	7d 68		 jge	 SHORT $LN27@SaveWICTex
; Line 1002
  009e7	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  009ea	89 95 6c fe ff
	ff		 mov	 DWORD PTR $T13[ebp], edx
  009f0	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  009f4	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  009fa	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  009ff	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00a03	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00a09	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  00a0e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a12	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00a18	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  00a1d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a21	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00a24	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00a29	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a2d	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00a30	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00a35	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a3c	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00a3f	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00a44	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  00a4a	e9 5c 0c 00 00	 jmp	 $LN61@SaveWICTex
$LN27@SaveWICTex:
; Line 1006
  00a4f	83 7d 18 00	 cmp	 DWORD PTR _targetFormat$[ebp], 0
  00a53	74 2b		 je	 SHORT $LN26@SaveWICTex
; Line 1008
  00a55	8b 45 18	 mov	 eax, DWORD PTR _targetFormat$[ebp]
  00a58	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a5a	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp], ecx
  00a60	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00a63	89 95 0c ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+4], edx
  00a69	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00a6c	89 8d 10 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+8], ecx
  00a72	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00a75	89 95 14 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+12], edx
; Line 1010
  00a7b	e9 31 01 00 00	 jmp	 $LN23@SaveWICTex
$LN26@SaveWICTex:
; Line 1013
  00a80	8b 45 d0	 mov	 eax, DWORD PTR _desc$[ebp+16]
  00a83	89 85 18 fe ff
	ff		 mov	 DWORD PTR tv313[ebp], eax
  00a89	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR tv313[ebp]
  00a8f	83 e9 0b	 sub	 ecx, 11			; 0000000bH
  00a92	89 8d 18 fe ff
	ff		 mov	 DWORD PTR tv313[ebp], ecx
  00a98	83 bd 18 fe ff
	ff 4b		 cmp	 DWORD PTR tv313[ebp], 75 ; 0000004bH
  00a9f	0f 87 dd 00 00
	00		 ja	 $LN18@SaveWICTex
  00aa5	8b 95 18 fe ff
	ff		 mov	 edx, DWORD PTR tv313[ebp]
  00aab	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN73@SaveWICTex[edx]
  00ab2	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN94@SaveWICTex[eax*4]
$LN22@SaveWICTex:
; Line 1029
  00ab9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppBGR
  00abf	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp], ecx
  00ac5	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat48bppBGR+4
  00acb	89 95 0c ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+4], edx
  00ad1	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppBGR+8
  00ad6	89 85 10 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+8], eax
  00adc	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppBGR+12
  00ae2	89 8d 14 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+12], ecx
  00ae8	e9 c4 00 00 00	 jmp	 $LN23@SaveWICTex
$LN21@SaveWICTex:
; Line 1030
  00aed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGR555
  00af3	89 95 08 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp], edx
  00af9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR555+4
  00afe	89 85 0c ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+4], eax
  00b04	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+8
  00b0a	89 8d 10 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+8], ecx
  00b10	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+12
  00b16	89 95 14 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+12], edx
  00b1c	e9 90 00 00 00	 jmp	 $LN23@SaveWICTex
$LN20@SaveWICTex:
; Line 1031
  00b21	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565
  00b26	89 85 08 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp], eax
  00b2c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+4
  00b32	89 8d 0c ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+4], ecx
  00b38	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+8
  00b3e	89 95 10 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+8], edx
  00b44	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565+12
  00b49	89 85 14 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+12], eax
  00b4f	eb 60		 jmp	 SHORT $LN23@SaveWICTex
$LN19@SaveWICTex:
; Line 1038
  00b51	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
  00b57	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp], ecx
  00b5d	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
  00b63	89 95 0c ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+4], edx
  00b69	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
  00b6e	89 85 10 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+8], eax
  00b74	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
  00b7a	89 8d 14 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+12], ecx
; Line 1039
  00b80	eb 2f		 jmp	 SHORT $LN23@SaveWICTex
$LN18@SaveWICTex:
; Line 1042
  00b82	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat24bppBGR
  00b88	89 95 08 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp], edx
  00b8e	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat24bppBGR+4
  00b93	89 85 0c ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+4], eax
  00b99	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat24bppBGR+8
  00b9f	89 8d 10 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+8], ecx
  00ba5	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat24bppBGR+12
  00bab	89 95 14 ff ff
	ff		 mov	 DWORD PTR _targetGuid$[ebp+12], edx
$LN23@SaveWICTex:
; Line 1047
  00bb1	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00bb7	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  00bbc	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv323[ebp], eax
  00bc2	8b f4		 mov	 esi, esp
  00bc4	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _targetGuid$[ebp]
  00bca	50		 push	 eax
  00bcb	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR tv323[ebp]
  00bd1	51		 push	 ecx
  00bd2	8b 95 14 fe ff
	ff		 mov	 edx, DWORD PTR tv323[ebp]
  00bd8	8b 02		 mov	 eax, DWORD PTR [edx]
  00bda	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00bdd	ff d1		 call	 ecx
  00bdf	3b f4		 cmp	 esi, esp
  00be1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00be6	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1048
  00be9	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00bed	7d 68		 jge	 SHORT $LN17@SaveWICTex
; Line 1049
  00bef	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  00bf2	89 95 68 fe ff
	ff		 mov	 DWORD PTR $T12[ebp], edx
  00bf8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00bfc	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00c02	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  00c07	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00c0b	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00c11	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  00c16	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00c1a	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00c20	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  00c25	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00c29	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00c2c	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00c31	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00c35	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00c38	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00c3d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c44	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00c47	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00c4c	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  00c52	e9 54 0a 00 00	 jmp	 $LN61@SaveWICTex
$LN17@SaveWICTex:
; Line 1051
  00c57	83 7d 18 00	 cmp	 DWORD PTR _targetFormat$[ebp], 0
  00c5b	0f 84 8d 00 00
	00		 je	 $LN16@SaveWICTex
  00c61	6a 10		 push	 16			; 00000010H
  00c63	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _targetGuid$[ebp]
  00c69	50		 push	 eax
  00c6a	8b 4d 18	 mov	 ecx, DWORD PTR _targetFormat$[ebp]
  00c6d	51		 push	 ecx
  00c6e	e8 00 00 00 00	 call	 _memcmp
  00c73	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c76	89 85 10 fe ff
	ff		 mov	 DWORD PTR tv334[ebp], eax
  00c7c	83 bd 10 fe ff
	ff 00		 cmp	 DWORD PTR tv334[ebp], 0
  00c83	74 69		 je	 SHORT $LN16@SaveWICTex
; Line 1054
  00c85	c7 85 64 fe ff
	ff 05 40 00 80	 mov	 DWORD PTR $T11[ebp], -2147467259 ; 80004005H
  00c8f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00c93	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00c99	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  00c9e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00ca2	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00ca8	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  00cad	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00cb1	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00cb7	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  00cbc	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00cc0	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00cc3	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00cc8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ccc	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00ccf	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00cd4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cdb	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00cde	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00ce3	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR $T11[ebp]
  00ce9	e9 bd 09 00 00	 jmp	 $LN61@SaveWICTex
$LN16@SaveWICTex:
; Line 1058
  00cee	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  00cf4	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>
  00cf9	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
; Line 1059
  00cfd	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00d03	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  00d08	89 85 0c fe ff
	ff		 mov	 DWORD PTR tv346[ebp], eax
  00d0e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  00d14	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf
  00d19	8b f4		 mov	 esi, esp
  00d1b	50		 push	 eax
  00d1c	8b 95 0c fe ff
	ff		 mov	 edx, DWORD PTR tv346[ebp]
  00d22	52		 push	 edx
  00d23	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR tv346[ebp]
  00d29	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d2b	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00d2e	ff d2		 call	 edx
  00d30	3b f4		 cmp	 esi, esp
  00d32	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d37	85 c0		 test	 eax, eax
  00d39	0f 8c 73 01 00
	00		 jl	 $LN11@SaveWICTex
; Line 1062
  00d3f	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _value$28[ebp]
  00d45	50		 push	 eax
  00d46	e8 00 00 00 00	 call	 _PropVariantInit
  00d4b	83 c4 04	 add	 esp, 4
; Line 1064
  00d4e	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00d53	66 89 8d e4 fe
	ff ff		 mov	 WORD PTR _value$28[ebp], cx
; Line 1065
  00d5a	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _value$28[ebp+8], OFFSET $SG160350
; Line 1067
  00d64	6a 10		 push	 16			; 00000010H
  00d66	68 00 00 00 00	 push	 OFFSET _GUID_ContainerFormatPng
  00d6b	8b 55 10	 mov	 edx, DWORD PTR _guidContainerFormat$[ebp]
  00d6e	52		 push	 edx
  00d6f	e8 00 00 00 00	 call	 _memcmp
  00d74	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d77	89 85 08 fe ff
	ff		 mov	 DWORD PTR tv359[ebp], eax
  00d7d	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR tv359[ebp], 0
  00d84	0f 85 94 00 00
	00		 jne	 $LN14@SaveWICTex
; Line 1070
  00d8a	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  00d90	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
  00d95	89 85 04 fe ff
	ff		 mov	 DWORD PTR tv368[ebp], eax
  00d9b	8b f4		 mov	 esi, esp
  00d9d	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _value$28[ebp]
  00da3	50		 push	 eax
  00da4	68 00 00 00 00	 push	 OFFSET $SG160368
  00da9	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR tv368[ebp]
  00daf	51		 push	 ecx
  00db0	8b 95 04 fe ff
	ff		 mov	 edx, DWORD PTR tv368[ebp]
  00db6	8b 02		 mov	 eax, DWORD PTR [edx]
  00db8	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00dbb	ff d1		 call	 ecx
  00dbd	3b f4		 cmp	 esi, esp
  00dbf	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1073
  00dc4	0f b6 55 93	 movzx	 edx, BYTE PTR _sRGB$[ebp]
  00dc8	85 d2		 test	 edx, edx
  00dca	74 4d		 je	 SHORT $LN13@SaveWICTex
; Line 1075
  00dcc	b8 11 00 00 00	 mov	 eax, 17			; 00000011H
  00dd1	66 89 85 e4 fe
	ff ff		 mov	 WORD PTR _value$28[ebp], ax
; Line 1076
  00dd8	c6 85 ec fe ff
	ff 00		 mov	 BYTE PTR _value$28[ebp+8], 0
; Line 1077
  00ddf	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  00de5	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
  00dea	89 85 00 fe ff
	ff		 mov	 DWORD PTR tv382[ebp], eax
  00df0	8b f4		 mov	 esi, esp
  00df2	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _value$28[ebp]
  00df8	51		 push	 ecx
  00df9	68 00 00 00 00	 push	 OFFSET $SG160371
  00dfe	8b 95 00 fe ff
	ff		 mov	 edx, DWORD PTR tv382[ebp]
  00e04	52		 push	 edx
  00e05	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR tv382[ebp]
  00e0b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e0d	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00e10	ff d2		 call	 edx
  00e12	3b f4		 cmp	 esi, esp
  00e14	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@SaveWICTex:
; Line 1080
  00e19	e9 94 00 00 00	 jmp	 $LN11@SaveWICTex
$LN14@SaveWICTex:
; Line 1083
  00e1e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  00e24	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
  00e29	89 85 fc fd ff
	ff		 mov	 DWORD PTR tv394[ebp], eax
  00e2f	8b f4		 mov	 esi, esp
  00e31	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _value$28[ebp]
  00e37	50		 push	 eax
  00e38	68 00 00 00 00	 push	 OFFSET $SG160374
  00e3d	8b 8d fc fd ff
	ff		 mov	 ecx, DWORD PTR tv394[ebp]
  00e43	51		 push	 ecx
  00e44	8b 95 fc fd ff
	ff		 mov	 edx, DWORD PTR tv394[ebp]
  00e4a	8b 02		 mov	 eax, DWORD PTR [edx]
  00e4c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00e4f	ff d1		 call	 ecx
  00e51	3b f4		 cmp	 esi, esp
  00e53	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1085
  00e58	0f b6 55 93	 movzx	 edx, BYTE PTR _sRGB$[ebp]
  00e5c	85 d2		 test	 edx, edx
  00e5e	74 52		 je	 SHORT $LN11@SaveWICTex
; Line 1088
  00e60	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  00e65	66 89 85 e4 fe
	ff ff		 mov	 WORD PTR _value$28[ebp], ax
; Line 1089
  00e6c	b9 01 00 00 00	 mov	 ecx, 1
  00e71	66 89 8d ec fe
	ff ff		 mov	 WORD PTR _value$28[ebp+8], cx
; Line 1090
  00e78	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  00e7e	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
  00e83	89 85 f8 fd ff
	ff		 mov	 DWORD PTR tv408[ebp], eax
  00e89	8b f4		 mov	 esi, esp
  00e8b	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _value$28[ebp]
  00e91	52		 push	 edx
  00e92	68 00 00 00 00	 push	 OFFSET $SG160377
  00e97	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR tv408[ebp]
  00e9d	50		 push	 eax
  00e9e	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR tv408[ebp]
  00ea4	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ea6	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00ea9	ff d0		 call	 eax
  00eab	3b f4		 cmp	 esi, esp
  00ead	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@SaveWICTex:
; Line 1096
  00eb2	8b f4		 mov	 esi, esp
  00eb4	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _mapped$[ebp]
  00eba	51		 push	 ecx
  00ebb	6a 00		 push	 0
  00ebd	6a 01		 push	 1
  00ebf	6a 00		 push	 0
  00ec1	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00ec4	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  00ec9	50		 push	 eax
  00eca	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  00ecd	8b 02		 mov	 eax, DWORD PTR [edx]
  00ecf	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00ed2	51		 push	 ecx
  00ed3	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00ed6	ff d2		 call	 edx
  00ed8	3b f4		 cmp	 esi, esp
  00eda	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00edf	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1097
  00ee2	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00ee6	7d 77		 jge	 SHORT $LN10@SaveWICTex
; Line 1098
  00ee8	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  00eeb	89 85 60 fe ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  00ef1	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00ef5	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  00efb	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  00f00	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00f04	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00f0a	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  00f0f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00f13	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00f19	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  00f1e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00f22	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  00f28	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  00f2d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00f31	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00f34	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00f39	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f3d	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00f40	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00f45	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f4c	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00f4f	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  00f54	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  00f5a	e9 4c 07 00 00	 jmp	 $LN61@SaveWICTex
$LN10@SaveWICTex:
; Line 1100
  00f5f	6a 10		 push	 16			; 00000010H
  00f61	8d 4d 98	 lea	 ecx, DWORD PTR _pfGuid$[ebp]
  00f64	51		 push	 ecx
  00f65	8d 95 08 ff ff
	ff		 lea	 edx, DWORD PTR _targetGuid$[ebp]
  00f6b	52		 push	 edx
  00f6c	e8 00 00 00 00	 call	 _memcmp
  00f71	83 c4 0c	 add	 esp, 12			; 0000000cH
  00f74	89 85 f4 fd ff
	ff		 mov	 DWORD PTR tv433[ebp], eax
  00f7a	83 bd f4 fd ff
	ff 00		 cmp	 DWORD PTR tv433[ebp], 0
  00f81	0f 84 6b 04 00
	00		 je	 $LN9@SaveWICTex
; Line 1103
  00f87	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  00f8d	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>
  00f92	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; Line 1106
  00f96	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  00f9c	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf
  00fa1	8b f4		 mov	 esi, esp
  00fa3	50		 push	 eax
  00fa4	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _mapped$[ebp]
  00faa	50		 push	 eax
  00fab	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _mapped$[ebp+4]
  00fb1	0f af 4d c4	 imul	 ecx, DWORD PTR _desc$[ebp+4]
  00fb5	51		 push	 ecx
  00fb6	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _mapped$[ebp+4]
  00fbc	52		 push	 edx
  00fbd	8d 45 98	 lea	 eax, DWORD PTR _pfGuid$[ebp]
  00fc0	50		 push	 eax
  00fc1	8b 4d c4	 mov	 ecx, DWORD PTR _desc$[ebp+4]
  00fc4	51		 push	 ecx
  00fc5	8b 55 c0	 mov	 edx, DWORD PTR _desc$[ebp]
  00fc8	52		 push	 edx
  00fc9	8b 45 8c	 mov	 eax, DWORD PTR _pWIC$[ebp]
  00fcc	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fce	8b 55 8c	 mov	 edx, DWORD PTR _pWIC$[ebp]
  00fd1	52		 push	 edx
  00fd2	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00fd5	ff d0		 call	 eax
  00fd7	3b f4		 cmp	 esi, esp
  00fd9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fde	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1107
  00fe1	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00fe5	0f 8d a8 00 00
	00		 jge	 $LN8@SaveWICTex
; Line 1109
  00feb	8b f4		 mov	 esi, esp
  00fed	6a 00		 push	 0
  00fef	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00ff2	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  00ff7	50		 push	 eax
  00ff8	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00ffb	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ffd	8b 45 08	 mov	 eax, DWORD PTR _pContext$[ebp]
  01000	50		 push	 eax
  01001	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  01004	ff d1		 call	 ecx
  01006	3b f4		 cmp	 esi, esp
  01008	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1110
  0100d	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  01010	89 95 5c fe ff
	ff		 mov	 DWORD PTR $T9[ebp], edx
  01016	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0101a	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  01020	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
  01025	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01029	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  0102f	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  01034	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01038	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  0103e	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  01043	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01047	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  0104d	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  01052	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01056	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  0105c	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  01061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01065	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  01068	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  0106d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01071	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  01074	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  01079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01080	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  01083	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  01088	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  0108e	e9 18 06 00 00	 jmp	 $LN61@SaveWICTex
$LN8@SaveWICTex:
; Line 1113
  01093	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  01099	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
  0109e	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
; Line 1114
  010a2	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  010a8	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
  010ad	8b f4		 mov	 esi, esp
  010af	50		 push	 eax
  010b0	8b 45 8c	 mov	 eax, DWORD PTR _pWIC$[ebp]
  010b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  010b5	8b 55 8c	 mov	 edx, DWORD PTR _pWIC$[ebp]
  010b8	52		 push	 edx
  010b9	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  010bc	ff d0		 call	 eax
  010be	3b f4		 cmp	 esi, esp
  010c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010c5	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1115
  010c8	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  010cc	0f 8d b7 00 00
	00		 jge	 $LN7@SaveWICTex
; Line 1117
  010d2	8b f4		 mov	 esi, esp
  010d4	6a 00		 push	 0
  010d6	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  010d9	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  010de	50		 push	 eax
  010df	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  010e2	8b 11		 mov	 edx, DWORD PTR [ecx]
  010e4	8b 45 08	 mov	 eax, DWORD PTR _pContext$[ebp]
  010e7	50		 push	 eax
  010e8	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  010eb	ff d1		 call	 ecx
  010ed	3b f4		 cmp	 esi, esp
  010ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1118
  010f4	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  010f7	89 95 58 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edx
  010fd	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  01101	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  01107	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  0110c	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  01110	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  01116	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
  0111b	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0111f	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  01125	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  0112a	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0112e	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  01134	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  01139	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0113d	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  01143	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  01148	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0114c	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  01152	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  01157	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0115b	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  0115e	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  01163	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01167	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0116a	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0116f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01176	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  01179	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  0117e	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  01184	e9 22 05 00 00	 jmp	 $LN61@SaveWICTex
$LN7@SaveWICTex:
; Line 1121
  01189	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  0118f	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
  01194	89 85 f0 fd ff
	ff		 mov	 DWORD PTR tv493[ebp], eax
  0119a	8b f4		 mov	 esi, esp
  0119c	6a 00		 push	 0
  0119e	83 ec 08	 sub	 esp, 8
  011a1	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  011a9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  011ae	6a 00		 push	 0
  011b0	6a 00		 push	 0
  011b2	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _targetGuid$[ebp]
  011b8	50		 push	 eax
  011b9	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  011bf	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::Get
  011c4	50		 push	 eax
  011c5	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR tv493[ebp]
  011cb	51		 push	 ecx
  011cc	8b 95 f0 fd ff
	ff		 mov	 edx, DWORD PTR tv493[ebp]
  011d2	8b 02		 mov	 eax, DWORD PTR [edx]
  011d4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  011d7	ff d1		 call	 ecx
  011d9	3b f4		 cmp	 esi, esp
  011db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011e0	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1122
  011e3	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  011e7	0f 8d b7 00 00
	00		 jge	 $LN6@SaveWICTex
; Line 1124
  011ed	8b f4		 mov	 esi, esp
  011ef	6a 00		 push	 0
  011f1	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  011f4	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  011f9	50		 push	 eax
  011fa	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  011fd	8b 02		 mov	 eax, DWORD PTR [edx]
  011ff	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  01202	51		 push	 ecx
  01203	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  01206	ff d2		 call	 edx
  01208	3b f4		 cmp	 esi, esp
  0120a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1125
  0120f	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  01212	89 85 54 fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  01218	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0121c	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  01222	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  01227	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0122b	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  01231	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
  01236	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0123a	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  01240	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  01245	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01249	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  0124f	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  01254	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01258	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  0125e	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  01263	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01267	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  0126d	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  01272	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01276	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  01279	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  0127e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01282	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  01285	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0128a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01291	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  01294	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  01299	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0129f	e9 07 04 00 00	 jmp	 $LN61@SaveWICTex
$LN6@SaveWICTex:
; Line 1128
  012a4	c7 85 a0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _rect$25[ebp], 0
  012ae	c7 85 a4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _rect$25[ebp+4], 0
  012b8	8b 4d c0	 mov	 ecx, DWORD PTR _desc$[ebp]
  012bb	89 8d a8 fe ff
	ff		 mov	 DWORD PTR _rect$25[ebp+8], ecx
  012c1	8b 55 c4	 mov	 edx, DWORD PTR _desc$[ebp+4]
  012c4	89 95 ac fe ff
	ff		 mov	 DWORD PTR _rect$25[ebp+12], edx
; Line 1129
  012ca	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  012d0	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  012d5	89 85 ec fd ff
	ff		 mov	 DWORD PTR tv528[ebp], eax
  012db	8b f4		 mov	 esi, esp
  012dd	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR _rect$25[ebp]
  012e3	50		 push	 eax
  012e4	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  012ea	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get
  012ef	50		 push	 eax
  012f0	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR tv528[ebp]
  012f6	51		 push	 ecx
  012f7	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR tv528[ebp]
  012fd	8b 02		 mov	 eax, DWORD PTR [edx]
  012ff	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01302	ff d1		 call	 ecx
  01304	3b f4		 cmp	 esi, esp
  01306	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0130b	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1130
  0130e	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01312	0f 8d b7 00 00
	00		 jge	 $LN5@SaveWICTex
; Line 1132
  01318	8b f4		 mov	 esi, esp
  0131a	6a 00		 push	 0
  0131c	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0131f	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  01324	50		 push	 eax
  01325	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  01328	8b 02		 mov	 eax, DWORD PTR [edx]
  0132a	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  0132d	51		 push	 ecx
  0132e	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  01331	ff d2		 call	 edx
  01333	3b f4		 cmp	 esi, esp
  01335	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1133
  0133a	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  0133d	89 85 50 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  01343	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  01347	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  0134d	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  01352	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  01356	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  0135c	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
  01361	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01365	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  0136b	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  01370	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01374	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  0137a	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  0137f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01383	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  01389	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  0138e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01392	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  01398	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  0139d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  013a1	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  013a4	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  013a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  013ad	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  013b0	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  013b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013bc	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  013bf	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  013c4	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  013ca	e9 dc 02 00 00	 jmp	 $LN61@SaveWICTex
$LN5@SaveWICTex:
; Line 1135
  013cf	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  013d3	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  013d9	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  013de	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  013e2	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  013e8	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
; Line 1136
  013ed	e9 cb 00 00 00	 jmp	 $LN3@SaveWICTex
$LN9@SaveWICTex:
; Line 1139
  013f2	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  013f8	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  013fd	89 85 e8 fd ff
	ff		 mov	 DWORD PTR tv591[ebp], eax
  01403	8b f4		 mov	 esi, esp
  01405	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR _mapped$[ebp]
  0140b	51		 push	 ecx
  0140c	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _mapped$[ebp+4]
  01412	0f af 55 c4	 imul	 edx, DWORD PTR _desc$[ebp+4]
  01416	52		 push	 edx
  01417	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _mapped$[ebp+4]
  0141d	50		 push	 eax
  0141e	8b 4d c4	 mov	 ecx, DWORD PTR _desc$[ebp+4]
  01421	51		 push	 ecx
  01422	8b 95 e8 fd ff
	ff		 mov	 edx, DWORD PTR tv591[ebp]
  01428	52		 push	 edx
  01429	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR tv591[ebp]
  0142f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01431	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  01434	ff d2		 call	 edx
  01436	3b f4		 cmp	 esi, esp
  01438	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0143d	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1140
  01440	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01444	7d 77		 jge	 SHORT $LN3@SaveWICTex
; Line 1141
  01446	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  01449	89 85 4c fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  0144f	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01453	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  01459	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  0145e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01462	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  01468	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  0146d	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01471	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  01477	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  0147c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01480	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  01486	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  0148b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0148f	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  01492	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  01497	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0149b	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0149e	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  014a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  014aa	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  014ad	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  014b2	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  014b8	e9 ee 01 00 00	 jmp	 $LN61@SaveWICTex
$LN3@SaveWICTex:
; Line 1144
  014bd	8b f4		 mov	 esi, esp
  014bf	6a 00		 push	 0
  014c1	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  014c4	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  014c9	50		 push	 eax
  014ca	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  014cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  014cf	8b 45 08	 mov	 eax, DWORD PTR _pContext$[ebp]
  014d2	50		 push	 eax
  014d3	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  014d6	ff d1		 call	 ecx
  014d8	3b f4		 cmp	 esi, esp
  014da	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1146
  014df	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  014e5	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
  014ea	89 85 e4 fd ff
	ff		 mov	 DWORD PTR tv619[ebp], eax
  014f0	8b 95 e4 fd ff
	ff		 mov	 edx, DWORD PTR tv619[ebp]
  014f6	8b 02		 mov	 eax, DWORD PTR [edx]
  014f8	8b f4		 mov	 esi, esp
  014fa	8b 8d e4 fd ff
	ff		 mov	 ecx, DWORD PTR tv619[ebp]
  01500	51		 push	 ecx
  01501	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  01504	ff d2		 call	 edx
  01506	3b f4		 cmp	 esi, esp
  01508	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0150d	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1147
  01510	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01514	7d 77		 jge	 SHORT $LN2@SaveWICTex
; Line 1148
  01516	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  01519	89 85 48 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0151f	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01523	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  01529	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  0152e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01532	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  01538	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  0153d	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01541	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  01547	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  0154c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01550	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  01556	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  0155b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0155f	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  01562	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  01567	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0156b	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0156e	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  01573	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0157a	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  0157d	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  01582	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  01588	e9 1e 01 00 00	 jmp	 $LN61@SaveWICTex
$LN2@SaveWICTex:
; Line 1150
  0158d	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  01593	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
  01598	89 85 e0 fd ff
	ff		 mov	 DWORD PTR tv631[ebp], eax
  0159e	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv631[ebp]
  015a4	8b 11		 mov	 edx, DWORD PTR [ecx]
  015a6	8b f4		 mov	 esi, esp
  015a8	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv631[ebp]
  015ae	50		 push	 eax
  015af	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  015b2	ff d1		 call	 ecx
  015b4	3b f4		 cmp	 esi, esp
  015b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015bb	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1151
  015be	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  015c2	7d 74		 jge	 SHORT $LN1@SaveWICTex
; Line 1152
  015c4	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  015c7	89 95 44 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], edx
  015cd	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  015d1	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  015d7	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  015dc	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  015e0	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  015e6	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  015eb	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  015ef	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  015f5	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  015fa	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  015fe	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  01604	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  01609	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0160d	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  01610	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  01615	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01619	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0161c	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  01621	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01628	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  0162b	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  01630	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  01636	eb 73		 jmp	 SHORT $LN61@SaveWICTex
$LN1@SaveWICTex:
; Line 1154
  01638	c7 85 40 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  01642	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01646	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  0164c	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
  01651	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01655	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  0165b	e8 00 00 00 00	 call	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
  01660	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01664	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  0166a	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
  0166f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01673	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  01679	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
  0167e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01682	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  01685	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  0168a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0168e	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  01691	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  01696	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0169d	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  016a0	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
  016a5	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN61@SaveWICTex:
; Line 1155
  016ab	52		 push	 edx
  016ac	8b cd		 mov	 ecx, ebp
  016ae	50		 push	 eax
  016af	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN92@SaveWICTex
  016b5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  016ba	58		 pop	 eax
  016bb	5a		 pop	 edx
  016bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  016bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  016c6	59		 pop	 ecx
  016c7	5f		 pop	 edi
  016c8	5e		 pop	 esi
  016c9	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  016cc	33 cd		 xor	 ecx, ebp
  016ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  016d3	81 c4 20 02 00
	00		 add	 esp, 544		; 00000220H
  016d9	3b ec		 cmp	 ebp, esp
  016db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016e0	8b e5		 mov	 esp, ebp
  016e2	5d		 pop	 ebp
  016e3	c3		 ret	 0
$LN92@SaveWICTex:
  016e4	10 00 00 00	 DD	 16			; 00000010H
  016e8	00 00 00 00	 DD	 $LN91@SaveWICTex
$LN91@SaveWICTex:
  016ec	c0 ff ff ff	 DD	 -64			; ffffffc0H
  016f0	2c 00 00 00	 DD	 44			; 0000002cH
  016f4	00 00 00 00	 DD	 $LN74@SaveWICTex
  016f8	b4 ff ff ff	 DD	 -76			; ffffffb4H
  016fc	04 00 00 00	 DD	 4
  01700	00 00 00 00	 DD	 $LN75@SaveWICTex
  01704	98 ff ff ff	 DD	 -104			; ffffff98H
  01708	10 00 00 00	 DD	 16			; 00000010H
  0170c	00 00 00 00	 DD	 $LN76@SaveWICTex
  01710	84 ff ff ff	 DD	 -124			; ffffff84H
  01714	04 00 00 00	 DD	 4
  01718	00 00 00 00	 DD	 $LN77@SaveWICTex
  0171c	78 ff ff ff	 DD	 -136			; ffffff78H
  01720	04 00 00 00	 DD	 4
  01724	00 00 00 00	 DD	 $LN78@SaveWICTex
  01728	6c ff ff ff	 DD	 -148			; ffffff6cH
  0172c	04 00 00 00	 DD	 4
  01730	00 00 00 00	 DD	 $LN79@SaveWICTex
  01734	60 ff ff ff	 DD	 -160			; ffffff60H
  01738	04 00 00 00	 DD	 4
  0173c	00 00 00 00	 DD	 $LN80@SaveWICTex
  01740	38 ff ff ff	 DD	 -200			; ffffff38H
  01744	20 00 00 00	 DD	 32			; 00000020H
  01748	00 00 00 00	 DD	 $LN81@SaveWICTex
  0174c	20 ff ff ff	 DD	 -224			; ffffff20H
  01750	10 00 00 00	 DD	 16			; 00000010H
  01754	00 00 00 00	 DD	 $LN82@SaveWICTex
  01758	08 ff ff ff	 DD	 -248			; ffffff08H
  0175c	10 00 00 00	 DD	 16			; 00000010H
  01760	00 00 00 00	 DD	 $LN83@SaveWICTex
  01764	fc fe ff ff	 DD	 -260			; fffffefcH
  01768	04 00 00 00	 DD	 4
  0176c	00 00 00 00	 DD	 $LN84@SaveWICTex
  01770	e4 fe ff ff	 DD	 -284			; fffffee4H
  01774	10 00 00 00	 DD	 16			; 00000010H
  01778	00 00 00 00	 DD	 $LN85@SaveWICTex
  0177c	d0 fe ff ff	 DD	 -304			; fffffed0H
  01780	0c 00 00 00	 DD	 12			; 0000000cH
  01784	00 00 00 00	 DD	 $LN86@SaveWICTex
  01788	c4 fe ff ff	 DD	 -316			; fffffec4H
  0178c	04 00 00 00	 DD	 4
  01790	00 00 00 00	 DD	 $LN87@SaveWICTex
  01794	b8 fe ff ff	 DD	 -328			; fffffeb8H
  01798	04 00 00 00	 DD	 4
  0179c	00 00 00 00	 DD	 $LN88@SaveWICTex
  017a0	a0 fe ff ff	 DD	 -352			; fffffea0H
  017a4	10 00 00 00	 DD	 16			; 00000010H
  017a8	00 00 00 00	 DD	 $LN89@SaveWICTex
$LN89@SaveWICTex:
  017ac	72		 DB	 114			; 00000072H
  017ad	65		 DB	 101			; 00000065H
  017ae	63		 DB	 99			; 00000063H
  017af	74		 DB	 116			; 00000074H
  017b0	00		 DB	 0
$LN88@SaveWICTex:
  017b1	46		 DB	 70			; 00000046H
  017b2	43		 DB	 67			; 00000043H
  017b3	00		 DB	 0
$LN87@SaveWICTex:
  017b4	73		 DB	 115			; 00000073H
  017b5	6f		 DB	 111			; 0000006fH
  017b6	75		 DB	 117			; 00000075H
  017b7	72		 DB	 114			; 00000072H
  017b8	63		 DB	 99			; 00000063H
  017b9	65		 DB	 101			; 00000065H
  017ba	00		 DB	 0
$LN86@SaveWICTex:
  017bb	6d		 DB	 109			; 0000006dH
  017bc	61		 DB	 97			; 00000061H
  017bd	70		 DB	 112			; 00000070H
  017be	70		 DB	 112			; 00000070H
  017bf	65		 DB	 101			; 00000065H
  017c0	64		 DB	 100			; 00000064H
  017c1	00		 DB	 0
$LN85@SaveWICTex:
  017c2	76		 DB	 118			; 00000076H
  017c3	61		 DB	 97			; 00000061H
  017c4	6c		 DB	 108			; 0000006cH
  017c5	75		 DB	 117			; 00000075H
  017c6	65		 DB	 101			; 00000065H
  017c7	00		 DB	 0
$LN84@SaveWICTex:
  017c8	6d		 DB	 109			; 0000006dH
  017c9	65		 DB	 101			; 00000065H
  017ca	74		 DB	 116			; 00000074H
  017cb	61		 DB	 97			; 00000061H
  017cc	77		 DB	 119			; 00000077H
  017cd	72		 DB	 114			; 00000072H
  017ce	69		 DB	 105			; 00000069H
  017cf	74		 DB	 116			; 00000074H
  017d0	65		 DB	 101			; 00000065H
  017d1	72		 DB	 114			; 00000072H
  017d2	00		 DB	 0
$LN83@SaveWICTex:
  017d3	74		 DB	 116			; 00000074H
  017d4	61		 DB	 97			; 00000061H
  017d5	72		 DB	 114			; 00000072H
  017d6	67		 DB	 103			; 00000067H
  017d7	65		 DB	 101			; 00000065H
  017d8	74		 DB	 116			; 00000074H
  017d9	47		 DB	 71			; 00000047H
  017da	75		 DB	 117			; 00000075H
  017db	69		 DB	 105			; 00000069H
  017dc	64		 DB	 100			; 00000064H
  017dd	00		 DB	 0
$LN82@SaveWICTex:
  017de	76		 DB	 118			; 00000076H
  017df	61		 DB	 97			; 00000061H
  017e0	72		 DB	 114			; 00000072H
  017e1	56		 DB	 86			; 00000056H
  017e2	61		 DB	 97			; 00000061H
  017e3	6c		 DB	 108			; 0000006cH
  017e4	75		 DB	 117			; 00000075H
  017e5	65		 DB	 101			; 00000065H
  017e6	00		 DB	 0
$LN81@SaveWICTex:
  017e7	6f		 DB	 111			; 0000006fH
  017e8	70		 DB	 112			; 00000070H
  017e9	74		 DB	 116			; 00000074H
  017ea	69		 DB	 105			; 00000069H
  017eb	6f		 DB	 111			; 0000006fH
  017ec	6e		 DB	 110			; 0000006eH
  017ed	00		 DB	 0
$LN80@SaveWICTex:
  017ee	70		 DB	 112			; 00000070H
  017ef	72		 DB	 114			; 00000072H
  017f0	6f		 DB	 111			; 0000006fH
  017f1	70		 DB	 112			; 00000070H
  017f2	73		 DB	 115			; 00000073H
  017f3	00		 DB	 0
$LN79@SaveWICTex:
  017f4	66		 DB	 102			; 00000066H
  017f5	72		 DB	 114			; 00000072H
  017f6	61		 DB	 97			; 00000061H
  017f7	6d		 DB	 109			; 0000006dH
  017f8	65		 DB	 101			; 00000065H
  017f9	00		 DB	 0
$LN78@SaveWICTex:
  017fa	65		 DB	 101			; 00000065H
  017fb	6e		 DB	 110			; 0000006eH
  017fc	63		 DB	 99			; 00000063H
  017fd	6f		 DB	 111			; 0000006fH
  017fe	64		 DB	 100			; 00000064H
  017ff	65		 DB	 101			; 00000065H
  01800	72		 DB	 114			; 00000072H
  01801	00		 DB	 0
$LN77@SaveWICTex:
  01802	73		 DB	 115			; 00000073H
  01803	74		 DB	 116			; 00000074H
  01804	72		 DB	 114			; 00000072H
  01805	65		 DB	 101			; 00000065H
  01806	61		 DB	 97			; 00000061H
  01807	6d		 DB	 109			; 0000006dH
  01808	00		 DB	 0
$LN76@SaveWICTex:
  01809	70		 DB	 112			; 00000070H
  0180a	66		 DB	 102			; 00000066H
  0180b	47		 DB	 71			; 00000047H
  0180c	75		 DB	 117			; 00000075H
  0180d	69		 DB	 105			; 00000069H
  0180e	64		 DB	 100			; 00000064H
  0180f	00		 DB	 0
$LN75@SaveWICTex:
  01810	70		 DB	 112			; 00000070H
  01811	53		 DB	 83			; 00000053H
  01812	74		 DB	 116			; 00000074H
  01813	61		 DB	 97			; 00000061H
  01814	67		 DB	 103			; 00000067H
  01815	69		 DB	 105			; 00000069H
  01816	6e		 DB	 110			; 0000006eH
  01817	67		 DB	 103			; 00000067H
  01818	00		 DB	 0
$LN74@SaveWICTex:
  01819	64		 DB	 100			; 00000064H
  0181a	65		 DB	 101			; 00000065H
  0181b	73		 DB	 115			; 00000073H
  0181c	63		 DB	 99			; 00000063H
  0181d	00		 DB	 0
  0181e	8b ff		 npad	 2
$LN93@SaveWICTex:
  01820	00 00 00 00	 DD	 $LN56@SaveWICTex
  01824	00 00 00 00	 DD	 $LN55@SaveWICTex
  01828	00 00 00 00	 DD	 $LN54@SaveWICTex
  0182c	00 00 00 00	 DD	 $LN52@SaveWICTex
  01830	00 00 00 00	 DD	 $LN44@SaveWICTex
  01834	00 00 00 00	 DD	 $LN43@SaveWICTex
  01838	00 00 00 00	 DD	 $LN49@SaveWICTex
  0183c	00 00 00 00	 DD	 $LN48@SaveWICTex
  01840	00 00 00 00	 DD	 $LN47@SaveWICTex
  01844	00 00 00 00	 DD	 $LN46@SaveWICTex
  01848	00 00 00 00	 DD	 $LN45@SaveWICTex
  0184c	00 00 00 00	 DD	 $LN50@SaveWICTex
  01850	00 00 00 00	 DD	 $LN51@SaveWICTex
  01854	00 00 00 00	 DD	 $LN42@SaveWICTex
  01858	00 00 00 00	 DD	 $LN40@SaveWICTex
  0185c	00 00 00 00	 DD	 $LN53@SaveWICTex
  01860	00 00 00 00	 DD	 $LN41@SaveWICTex
  01864	00 00 00 00	 DD	 $LN39@SaveWICTex
  01868	00 00 00 00	 DD	 $LN38@SaveWICTex
$LN72@SaveWICTex:
  0186c	00		 DB	 0
  0186d	12		 DB	 18			; 00000012H
  0186e	12		 DB	 18			; 00000012H
  0186f	12		 DB	 18			; 00000012H
  01870	12		 DB	 18			; 00000012H
  01871	12		 DB	 18			; 00000012H
  01872	12		 DB	 18			; 00000012H
  01873	12		 DB	 18			; 00000012H
  01874	01		 DB	 1
  01875	02		 DB	 2
  01876	12		 DB	 18			; 00000012H
  01877	12		 DB	 18			; 00000012H
  01878	12		 DB	 18			; 00000012H
  01879	12		 DB	 18			; 00000012H
  0187a	12		 DB	 18			; 00000012H
  0187b	12		 DB	 18			; 00000012H
  0187c	12		 DB	 18			; 00000012H
  0187d	12		 DB	 18			; 00000012H
  0187e	12		 DB	 18			; 00000012H
  0187f	12		 DB	 18			; 00000012H
  01880	12		 DB	 18			; 00000012H
  01881	12		 DB	 18			; 00000012H
  01882	03		 DB	 3
  01883	12		 DB	 18			; 00000012H
  01884	12		 DB	 18			; 00000012H
  01885	12		 DB	 18			; 00000012H
  01886	04		 DB	 4
  01887	05		 DB	 5
  01888	12		 DB	 18			; 00000012H
  01889	12		 DB	 18			; 00000012H
  0188a	12		 DB	 18			; 00000012H
  0188b	12		 DB	 18			; 00000012H
  0188c	12		 DB	 18			; 00000012H
  0188d	12		 DB	 18			; 00000012H
  0188e	12		 DB	 18			; 00000012H
  0188f	12		 DB	 18			; 00000012H
  01890	12		 DB	 18			; 00000012H
  01891	12		 DB	 18			; 00000012H
  01892	12		 DB	 18			; 00000012H
  01893	06		 DB	 6
  01894	12		 DB	 18			; 00000012H
  01895	12		 DB	 18			; 00000012H
  01896	12		 DB	 18			; 00000012H
  01897	12		 DB	 18			; 00000012H
  01898	12		 DB	 18			; 00000012H
  01899	12		 DB	 18			; 00000012H
  0189a	12		 DB	 18			; 00000012H
  0189b	12		 DB	 18			; 00000012H
  0189c	12		 DB	 18			; 00000012H
  0189d	12		 DB	 18			; 00000012H
  0189e	12		 DB	 18			; 00000012H
  0189f	12		 DB	 18			; 00000012H
  018a0	07		 DB	 7
  018a1	12		 DB	 18			; 00000012H
  018a2	08		 DB	 8
  018a3	12		 DB	 18			; 00000012H
  018a4	12		 DB	 18			; 00000012H
  018a5	12		 DB	 18			; 00000012H
  018a6	12		 DB	 18			; 00000012H
  018a7	09		 DB	 9
  018a8	12		 DB	 18			; 00000012H
  018a9	12		 DB	 18			; 00000012H
  018aa	12		 DB	 18			; 00000012H
  018ab	0a		 DB	 10			; 0000000aH
  018ac	12		 DB	 18			; 00000012H
  018ad	12		 DB	 18			; 00000012H
  018ae	12		 DB	 18			; 00000012H
  018af	12		 DB	 18			; 00000012H
  018b0	12		 DB	 18			; 00000012H
  018b1	12		 DB	 18			; 00000012H
  018b2	12		 DB	 18			; 00000012H
  018b3	12		 DB	 18			; 00000012H
  018b4	12		 DB	 18			; 00000012H
  018b5	12		 DB	 18			; 00000012H
  018b6	12		 DB	 18			; 00000012H
  018b7	12		 DB	 18			; 00000012H
  018b8	12		 DB	 18			; 00000012H
  018b9	12		 DB	 18			; 00000012H
  018ba	12		 DB	 18			; 00000012H
  018bb	12		 DB	 18			; 00000012H
  018bc	12		 DB	 18			; 00000012H
  018bd	12		 DB	 18			; 00000012H
  018be	12		 DB	 18			; 00000012H
  018bf	0b		 DB	 11			; 0000000bH
  018c0	0c		 DB	 12			; 0000000cH
  018c1	0d		 DB	 13			; 0000000dH
  018c2	0e		 DB	 14			; 0000000eH
  018c3	0f		 DB	 15			; 0000000fH
  018c4	12		 DB	 18			; 00000012H
  018c5	10		 DB	 16			; 00000010H
  018c6	12		 DB	 18			; 00000012H
  018c7	11		 DB	 17			; 00000011H
$LN94@SaveWICTex:
  018c8	00 00 00 00	 DD	 $LN22@SaveWICTex
  018cc	00 00 00 00	 DD	 $LN19@SaveWICTex
  018d0	00 00 00 00	 DD	 $LN20@SaveWICTex
  018d4	00 00 00 00	 DD	 $LN21@SaveWICTex
  018d8	00 00 00 00	 DD	 $LN18@SaveWICTex
$LN73@SaveWICTex:
  018dc	00		 DB	 0
  018dd	04		 DB	 4
  018de	04		 DB	 4
  018df	04		 DB	 4
  018e0	04		 DB	 4
  018e1	04		 DB	 4
  018e2	04		 DB	 4
  018e3	04		 DB	 4
  018e4	04		 DB	 4
  018e5	04		 DB	 4
  018e6	04		 DB	 4
  018e7	04		 DB	 4
  018e8	04		 DB	 4
  018e9	04		 DB	 4
  018ea	04		 DB	 4
  018eb	04		 DB	 4
  018ec	04		 DB	 4
  018ed	04		 DB	 4
  018ee	04		 DB	 4
  018ef	04		 DB	 4
  018f0	04		 DB	 4
  018f1	04		 DB	 4
  018f2	04		 DB	 4
  018f3	04		 DB	 4
  018f4	04		 DB	 4
  018f5	04		 DB	 4
  018f6	04		 DB	 4
  018f7	04		 DB	 4
  018f8	04		 DB	 4
  018f9	04		 DB	 4
  018fa	01		 DB	 1
  018fb	04		 DB	 4
  018fc	04		 DB	 4
  018fd	04		 DB	 4
  018fe	04		 DB	 4
  018ff	04		 DB	 4
  01900	04		 DB	 4
  01901	04		 DB	 4
  01902	04		 DB	 4
  01903	04		 DB	 4
  01904	04		 DB	 4
  01905	04		 DB	 4
  01906	04		 DB	 4
  01907	01		 DB	 1
  01908	04		 DB	 4
  01909	01		 DB	 1
  0190a	04		 DB	 4
  0190b	04		 DB	 4
  0190c	04		 DB	 4
  0190d	04		 DB	 4
  0190e	01		 DB	 1
  0190f	04		 DB	 4
  01910	04		 DB	 4
  01911	04		 DB	 4
  01912	01		 DB	 1
  01913	04		 DB	 4
  01914	04		 DB	 4
  01915	04		 DB	 4
  01916	04		 DB	 4
  01917	04		 DB	 4
  01918	04		 DB	 4
  01919	04		 DB	 4
  0191a	04		 DB	 4
  0191b	04		 DB	 4
  0191c	04		 DB	 4
  0191d	04		 DB	 4
  0191e	04		 DB	 4
  0191f	04		 DB	 4
  01920	04		 DB	 4
  01921	04		 DB	 4
  01922	04		 DB	 4
  01923	04		 DB	 4
  01924	04		 DB	 4
  01925	04		 DB	 4
  01926	02		 DB	 2
  01927	03		 DB	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$0:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _setCustomProps$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$1:
  00008	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$2:
  00010	8d 4d 84	 lea	 ecx, DWORD PTR _stream$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$3:
  00018	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _encoder$[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$4:
  00023	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _frame$[ebp]
  00029	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$5:
  0002e	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _props$[ebp]
  00034	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$6:
  00039	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _metawriter$[ebp]
  0003f	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$7:
  00044	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _source$27[ebp]
  0004a	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$8:
  0004f	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _FC$26[ebp]
  00055	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
__ehhandler$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z:
  0005a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0005e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00061	8b 8a e0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-544]
  00067	33 c8		 xor	 ecx, eax
  00069	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00071	33 c8		 xor	 ecx, eax
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z
  0007d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z ENDP ; DirectX::SaveWICTextureToFile
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ PROC ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 729
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 730
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Empty
  0001f	0f b6 c0	 movzx	 eax, al
  00022	85 c0		 test	 eax, eax
  00024	75 09		 jne	 SHORT $LN3@operator
  00026	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  0002d	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN4@operator:
  00036	8a 45 f8	 mov	 al, BYTE PTR tv72[ebp]
; Line 731
  00039	83 c4 08	 add	 esp, 8
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ ENDP ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ PROC ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 628
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 629
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
; Line 630
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ENDP ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ PROC ; std::_Func_class<void,IPropertyBag2 *>::_Local, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 515
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 516
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	39 41 10	 cmp	 DWORD PTR [ecx+16], eax
  00020	75 09		 jne	 SHORT $LN3@Local
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00029	eb 07		 jmp	 SHORT $LN4@Local
$LN3@Local:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN4@Local:
  00032	8a 45 f8	 mov	 al, BYTE PTR tv67[ebp]
; Line 517
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ
_TEXT	SEGMENT
tv77 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ PROC ; std::_Func_class<void,IPropertyBag2 *>::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 446
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 447
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0001f	74 44		 je	 SHORT $LN2@Tidy
; Line 449
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Local
  00029	0f b6 c8	 movzx	 ecx, al
  0002c	85 c9		 test	 ecx, ecx
  0002e	75 06		 jne	 SHORT $LN4@Tidy
  00030	c6 45 fb 01	 mov	 BYTE PTR tv77[ebp], 1
  00034	eb 04		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00036	c6 45 fb 00	 mov	 BYTE PTR tv77[ebp], 0
$LN5@Tidy:
  0003a	8b f4		 mov	 esi, esp
  0003c	0f b6 55 fb	 movzx	 edx, BYTE PTR tv77[ebp]
  00040	52		 push	 edx
  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00047	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004c	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0004f	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00052	ff d2		 call	 edx
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 450
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN2@Tidy:
; Line 452
  00065	5e		 pop	 esi
  00066	83 c4 08	 add	 esp, 8
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ PROC	; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 324
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 325
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
; Line 326
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ENDP	; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ PROC ; std::_Func_class<void,IPropertyBag2 *>::_Empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 320
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0001e	75 09		 jne	 SHORT $LN3@Empty
  00020	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00027	eb 07		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00029	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@Empty:
  00030	8a 45 f8	 mov	 al, BYTE PTR tv66[ebp]
; Line 321
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z PROC ; std::_Func_class<void,IPropertyBag2 *>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 312
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 313
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00016	75 0f		 jne	 SHORT $LN1@operator
; Line 314
  00018	8b f4		 mov	 esi, esp
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_function_call@std@@YAXXZ
  00020	3b f4		 cmp	 esi, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 315
  00027	8d 4d 08	 lea	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z ; std::forward<IPropertyBag2 *>
  00030	83 c4 04	 add	 esp, 4
  00033	8b f4		 mov	 esi, esp
  00035	50		 push	 eax
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 10		 mov	 edx, DWORD PTR [eax]
  00041	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00044	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00047	ff d0		 call	 eax
  00049	3b f4		 cmp	 esi, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@operator:
; Line 316
  00050	5e		 pop	 esi
  00051	83 c4 04	 add	 esp, 4
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z ENDP ; std::_Func_class<void,IPropertyBag2 *>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv144 = -416						; size = 4
$T2 = -412						; size = 4
$T3 = -408						; size = 4
$T4 = -404						; size = 4
$T5 = -400						; size = 4
$T6 = -396						; size = 4
$T7 = -392						; size = 4
$T8 = -388						; size = 4
$T9 = -384						; size = 4
$T10 = -380						; size = 4
$T11 = -376						; size = 4
$T12 = -372						; size = 4
$T13 = -368						; size = 4
_bytesWritten$ = -360					; size = 4
_h$14 = -352						; size = 4
_msize$ = -348						; size = 4
_dptr$ = -344						; size = 4
_sptr$ = -340						; size = 4
_mapped$ = -332						; size = 12
_pixels$ = -312						; size = 4
_rowCount$ = -300					; size = 4
_slicePitch$ = -288					; size = 4
_rowPitch$ = -276					; size = 4
_extHeader$ = -268					; size = 4
_headerSize$ = -264					; size = 4
_header$ = -260						; size = 4
_fileHeader$ = -252					; size = 148
_MAX_HEADER_SIZE$ = -100				; size = 4
_hFile$ = -92						; size = 4
_hr$ = -84						; size = 4
_pStaging$ = -76					; size = 4
_desc$ = -64						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pContext$ = 8						; size = 4
_pSource$ = 12						; size = 4
_fileName$ = 16						; size = 4
?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z PROC ; DirectX::SaveDDSTextureToFile
; File d:\engine class\assignment 1\new scratch\dxut\core\screengrab.cpp
; Line 732
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 94 01 00
	00		 sub	 esp, 404		; 00000194H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  0001f	b9 65 00 00 00	 mov	 ecx, 101		; 00000065H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 733
  0003f	83 7d 10 00	 cmp	 DWORD PTR _fileName$[ebp], 0
  00043	75 0a		 jne	 SHORT $LN48@SaveDDSTex
; Line 734
  00045	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0004a	e9 0c 0c 00 00	 jmp	 $LN49@SaveDDSTex
$LN48@SaveDDSTex:
; Line 736
  0004f	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _desc$[ebp], 0
  00056	33 c0		 xor	 eax, eax
  00058	89 45 c4	 mov	 DWORD PTR _desc$[ebp+4], eax
  0005b	89 45 c8	 mov	 DWORD PTR _desc$[ebp+8], eax
  0005e	89 45 cc	 mov	 DWORD PTR _desc$[ebp+12], eax
  00061	89 45 d0	 mov	 DWORD PTR _desc$[ebp+16], eax
  00064	89 45 d4	 mov	 DWORD PTR _desc$[ebp+20], eax
  00067	89 45 d8	 mov	 DWORD PTR _desc$[ebp+24], eax
  0006a	89 45 dc	 mov	 DWORD PTR _desc$[ebp+28], eax
  0006d	89 45 e0	 mov	 DWORD PTR _desc$[ebp+32], eax
  00070	89 45 e4	 mov	 DWORD PTR _desc$[ebp+36], eax
  00073	89 45 e8	 mov	 DWORD PTR _desc$[ebp+40], eax
; Line 737
  00076	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00079	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
  0007e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 738
  00085	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00088	51		 push	 ecx
  00089	8d 55 c0	 lea	 edx, DWORD PTR _desc$[ebp]
  0008c	52		 push	 edx
  0008d	8b 45 0c	 mov	 eax, DWORD PTR _pSource$[ebp]
  00090	50		 push	 eax
  00091	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 ?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z ; CaptureTexture
  0009a	83 c4 10	 add	 esp, 16			; 00000010H
  0009d	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 739
  000a0	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000a4	7d 23		 jge	 SHORT $LN47@SaveDDSTex
; Line 740
  000a6	8b 55 ac	 mov	 edx, DWORD PTR _hr$[ebp]
  000a9	89 95 90 fe ff
	ff		 mov	 DWORD PTR $T13[ebp], edx
  000af	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b6	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  000b9	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  000be	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  000c4	e9 92 0b 00 00	 jmp	 $LN49@SaveDDSTex
$LN47@SaveDDSTex:
; Line 746
  000c9	8b f4		 mov	 esi, esp
  000cb	6a 00		 push	 0
  000cd	6a 00		 push	 0
  000cf	6a 02		 push	 2
  000d1	6a 00		 push	 0
  000d3	6a 00		 push	 0
  000d5	68 00 00 00 40	 push	 1073741824		; 40000000H
  000da	8b 45 10	 mov	 eax, DWORD PTR _fileName$[ebp]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileW@28
  000e4	3b f4		 cmp	 esi, esp
  000e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ?safe_handle@@YAPAXPAX@Z ; safe_handle
  000f1	83 c4 04	 add	 esp, 4
  000f4	50		 push	 eax
  000f5	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  000f8	e8 00 00 00 00	 call	 ??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z ; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>
  000fd	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; Line 748
  00101	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00104	e8 00 00 00 00	 call	 ??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ ; std::unique_ptr<void,handle_closer>::operator bool
  00109	0f b6 c8	 movzx	 ecx, al
  0010c	85 c9		 test	 ecx, ecx
  0010e	75 44		 jne	 SHORT $LN46@SaveDDSTex
; Line 749
  00110	8b f4		 mov	 esi, esp
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00118	3b f4		 cmp	 esi, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00125	83 c4 04	 add	 esp, 4
  00128	89 85 8c fe ff
	ff		 mov	 DWORD PTR $T12[ebp], eax
  0012e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00132	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00135	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  0013a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00141	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00144	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00149	8b 85 8c fe ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  0014f	e9 07 0b 00 00	 jmp	 $LN49@SaveDDSTex
$LN46@SaveDDSTex:
; Line 752
  00154	c7 45 9c 94 00
	00 00		 mov	 DWORD PTR _MAX_HEADER_SIZE$[ebp], 148 ; 00000094H
; Line 755
  0015b	ba 01 00 00 00	 mov	 edx, 1
  00160	6b c2 00	 imul	 eax, edx, 0
  00163	c7 84 05 04 ff
	ff ff 44 44 53
	20		 mov	 DWORD PTR _fileHeader$[ebp+eax], 542327876 ; 20534444H
; Line 757
  0016e	b9 01 00 00 00	 mov	 ecx, 1
  00173	6b d1 00	 imul	 edx, ecx, 0
  00176	8d 84 15 08 ff
	ff ff		 lea	 eax, DWORD PTR _fileHeader$[ebp+edx+4]
  0017d	89 85 fc fe ff
	ff		 mov	 DWORD PTR _header$[ebp], eax
; Line 758
  00183	c7 85 f8 fe ff
	ff 80 00 00 00	 mov	 DWORD PTR _headerSize$[ebp], 128 ; 00000080H
; Line 759
  0018d	6a 7c		 push	 124			; 0000007cH
  0018f	6a 00		 push	 0
  00191	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00197	51		 push	 ecx
  00198	e8 00 00 00 00	 call	 _memset
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 760
  001a0	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  001a6	c7 02 7c 00 00
	00		 mov	 DWORD PTR [edx], 124	; 0000007cH
; Line 761
  001ac	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  001b2	c7 40 04 07 10
	02 00		 mov	 DWORD PTR [eax+4], 135175 ; 00021007H
; Line 762
  001b9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  001bf	8b 55 c4	 mov	 edx, DWORD PTR _desc$[ebp+4]
  001c2	89 51 08	 mov	 DWORD PTR [ecx+8], edx
; Line 763
  001c5	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  001cb	8b 4d c0	 mov	 ecx, DWORD PTR _desc$[ebp]
  001ce	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 764
  001d1	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  001d7	c7 42 18 01 00
	00 00		 mov	 DWORD PTR [edx+24], 1
; Line 765
  001de	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  001e4	c7 40 68 00 10
	00 00		 mov	 DWORD PTR [eax+104], 4096 ; 00001000H
; Line 768
  001eb	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _extHeader$[ebp], 0
; Line 769
  001f5	8b 4d d0	 mov	 ecx, DWORD PTR _desc$[ebp+16]
  001f8	89 8d 60 fe ff
	ff		 mov	 DWORD PTR tv144[ebp], ecx
  001fe	8b 95 60 fe ff
	ff		 mov	 edx, DWORD PTR tv144[ebp]
  00204	83 ea 02	 sub	 edx, 2
  00207	89 95 60 fe ff
	ff		 mov	 DWORD PTR tv144[ebp], edx
  0020d	83 bd 60 fe ff
	ff 71		 cmp	 DWORD PTR tv144[ebp], 113 ; 00000071H
  00214	0f 87 1c 05 00
	00		 ja	 $LN13@SaveDDSTex
  0021a	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR tv144[ebp]
  00220	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN54@SaveDDSTex[eax]
  00227	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN68@SaveDDSTex[ecx*4]
$LN43@SaveDDSTex:
; Line 771
  0022e	8b f4		 mov	 esi, esp
  00230	6a 20		 push	 32			; 00000020H
  00232	68 00 00 00 00	 push	 OFFSET _DDSPF_A8B8G8R8
  00237	6a 20		 push	 32			; 00000020H
  00239	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  0023f	83 c2 48	 add	 edx, 72			; 00000048H
  00242	52		 push	 edx
  00243	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00249	83 c4 10	 add	 esp, 16			; 00000010H
  0024c	3b f4		 cmp	 esi, esp
  0024e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00253	e9 5f 05 00 00	 jmp	 $LN44@SaveDDSTex
$LN42@SaveDDSTex:
; Line 772
  00258	8b f4		 mov	 esi, esp
  0025a	6a 20		 push	 32			; 00000020H
  0025c	68 00 00 00 00	 push	 OFFSET _DDSPF_G16R16
  00261	6a 20		 push	 32			; 00000020H
  00263	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  00269	83 c0 48	 add	 eax, 72			; 00000048H
  0026c	50		 push	 eax
  0026d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00273	83 c4 10	 add	 esp, 16			; 00000010H
  00276	3b f4		 cmp	 esi, esp
  00278	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027d	e9 35 05 00 00	 jmp	 $LN44@SaveDDSTex
$LN41@SaveDDSTex:
; Line 773
  00282	8b f4		 mov	 esi, esp
  00284	6a 20		 push	 32			; 00000020H
  00286	68 00 00 00 00	 push	 OFFSET _DDSPF_A8L8
  0028b	6a 20		 push	 32			; 00000020H
  0028d	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00293	83 c1 48	 add	 ecx, 72			; 00000048H
  00296	51		 push	 ecx
  00297	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  0029d	83 c4 10	 add	 esp, 16			; 00000010H
  002a0	3b f4		 cmp	 esi, esp
  002a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a7	e9 0b 05 00 00	 jmp	 $LN44@SaveDDSTex
$LN40@SaveDDSTex:
; Line 774
  002ac	8b f4		 mov	 esi, esp
  002ae	6a 20		 push	 32			; 00000020H
  002b0	68 00 00 00 00	 push	 OFFSET _DDSPF_L16
  002b5	6a 20		 push	 32			; 00000020H
  002b7	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  002bd	83 c2 48	 add	 edx, 72			; 00000048H
  002c0	52		 push	 edx
  002c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  002c7	83 c4 10	 add	 esp, 16			; 00000010H
  002ca	3b f4		 cmp	 esi, esp
  002cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d1	e9 e1 04 00 00	 jmp	 $LN44@SaveDDSTex
$LN39@SaveDDSTex:
; Line 775
  002d6	8b f4		 mov	 esi, esp
  002d8	6a 20		 push	 32			; 00000020H
  002da	68 00 00 00 00	 push	 OFFSET _DDSPF_L8
  002df	6a 20		 push	 32			; 00000020H
  002e1	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  002e7	83 c0 48	 add	 eax, 72			; 00000048H
  002ea	50		 push	 eax
  002eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  002f1	83 c4 10	 add	 esp, 16			; 00000010H
  002f4	3b f4		 cmp	 esi, esp
  002f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fb	e9 b7 04 00 00	 jmp	 $LN44@SaveDDSTex
$LN38@SaveDDSTex:
; Line 776
  00300	8b f4		 mov	 esi, esp
  00302	6a 20		 push	 32			; 00000020H
  00304	68 00 00 00 00	 push	 OFFSET _DDSPF_A8
  00309	6a 20		 push	 32			; 00000020H
  0030b	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00311	83 c1 48	 add	 ecx, 72			; 00000048H
  00314	51		 push	 ecx
  00315	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  0031b	83 c4 10	 add	 esp, 16			; 00000010H
  0031e	3b f4		 cmp	 esi, esp
  00320	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00325	e9 8d 04 00 00	 jmp	 $LN44@SaveDDSTex
$LN37@SaveDDSTex:
; Line 777
  0032a	8b f4		 mov	 esi, esp
  0032c	6a 20		 push	 32			; 00000020H
  0032e	68 00 00 00 00	 push	 OFFSET _DDSPF_R8G8_B8G8
  00333	6a 20		 push	 32			; 00000020H
  00335	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  0033b	83 c2 48	 add	 edx, 72			; 00000048H
  0033e	52		 push	 edx
  0033f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00345	83 c4 10	 add	 esp, 16			; 00000010H
  00348	3b f4		 cmp	 esi, esp
  0034a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034f	e9 63 04 00 00	 jmp	 $LN44@SaveDDSTex
$LN36@SaveDDSTex:
; Line 778
  00354	8b f4		 mov	 esi, esp
  00356	6a 20		 push	 32			; 00000020H
  00358	68 00 00 00 00	 push	 OFFSET _DDSPF_G8R8_G8B8
  0035d	6a 20		 push	 32			; 00000020H
  0035f	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  00365	83 c0 48	 add	 eax, 72			; 00000048H
  00368	50		 push	 eax
  00369	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  0036f	83 c4 10	 add	 esp, 16			; 00000010H
  00372	3b f4		 cmp	 esi, esp
  00374	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00379	e9 39 04 00 00	 jmp	 $LN44@SaveDDSTex
$LN35@SaveDDSTex:
; Line 779
  0037e	8b f4		 mov	 esi, esp
  00380	6a 20		 push	 32			; 00000020H
  00382	68 00 00 00 00	 push	 OFFSET _DDSPF_DXT1
  00387	6a 20		 push	 32			; 00000020H
  00389	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  0038f	83 c1 48	 add	 ecx, 72			; 00000048H
  00392	51		 push	 ecx
  00393	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00399	83 c4 10	 add	 esp, 16			; 00000010H
  0039c	3b f4		 cmp	 esi, esp
  0039e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a3	e9 0f 04 00 00	 jmp	 $LN44@SaveDDSTex
$LN34@SaveDDSTex:
; Line 780
  003a8	8b f4		 mov	 esi, esp
  003aa	6a 20		 push	 32			; 00000020H
  003ac	68 00 00 00 00	 push	 OFFSET _DDSPF_DXT3
  003b1	6a 20		 push	 32			; 00000020H
  003b3	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  003b9	83 c2 48	 add	 edx, 72			; 00000048H
  003bc	52		 push	 edx
  003bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  003c3	83 c4 10	 add	 esp, 16			; 00000010H
  003c6	3b f4		 cmp	 esi, esp
  003c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003cd	e9 e5 03 00 00	 jmp	 $LN44@SaveDDSTex
$LN33@SaveDDSTex:
; Line 781
  003d2	8b f4		 mov	 esi, esp
  003d4	6a 20		 push	 32			; 00000020H
  003d6	68 00 00 00 00	 push	 OFFSET _DDSPF_DXT5
  003db	6a 20		 push	 32			; 00000020H
  003dd	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  003e3	83 c0 48	 add	 eax, 72			; 00000048H
  003e6	50		 push	 eax
  003e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  003ed	83 c4 10	 add	 esp, 16			; 00000010H
  003f0	3b f4		 cmp	 esi, esp
  003f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f7	e9 bb 03 00 00	 jmp	 $LN44@SaveDDSTex
$LN32@SaveDDSTex:
; Line 782
  003fc	8b f4		 mov	 esi, esp
  003fe	6a 20		 push	 32			; 00000020H
  00400	68 00 00 00 00	 push	 OFFSET _DDSPF_BC4_UNORM
  00405	6a 20		 push	 32			; 00000020H
  00407	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  0040d	83 c1 48	 add	 ecx, 72			; 00000048H
  00410	51		 push	 ecx
  00411	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00417	83 c4 10	 add	 esp, 16			; 00000010H
  0041a	3b f4		 cmp	 esi, esp
  0041c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00421	e9 91 03 00 00	 jmp	 $LN44@SaveDDSTex
$LN31@SaveDDSTex:
; Line 783
  00426	8b f4		 mov	 esi, esp
  00428	6a 20		 push	 32			; 00000020H
  0042a	68 00 00 00 00	 push	 OFFSET _DDSPF_BC4_SNORM
  0042f	6a 20		 push	 32			; 00000020H
  00431	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00437	83 c2 48	 add	 edx, 72			; 00000048H
  0043a	52		 push	 edx
  0043b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00441	83 c4 10	 add	 esp, 16			; 00000010H
  00444	3b f4		 cmp	 esi, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	e9 67 03 00 00	 jmp	 $LN44@SaveDDSTex
$LN30@SaveDDSTex:
; Line 784
  00450	8b f4		 mov	 esi, esp
  00452	6a 20		 push	 32			; 00000020H
  00454	68 00 00 00 00	 push	 OFFSET _DDSPF_BC5_UNORM
  00459	6a 20		 push	 32			; 00000020H
  0045b	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  00461	83 c0 48	 add	 eax, 72			; 00000048H
  00464	50		 push	 eax
  00465	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  0046b	83 c4 10	 add	 esp, 16			; 00000010H
  0046e	3b f4		 cmp	 esi, esp
  00470	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00475	e9 3d 03 00 00	 jmp	 $LN44@SaveDDSTex
$LN29@SaveDDSTex:
; Line 785
  0047a	8b f4		 mov	 esi, esp
  0047c	6a 20		 push	 32			; 00000020H
  0047e	68 00 00 00 00	 push	 OFFSET _DDSPF_BC5_SNORM
  00483	6a 20		 push	 32			; 00000020H
  00485	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  0048b	83 c1 48	 add	 ecx, 72			; 00000048H
  0048e	51		 push	 ecx
  0048f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00495	83 c4 10	 add	 esp, 16			; 00000010H
  00498	3b f4		 cmp	 esi, esp
  0049a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0049f	e9 13 03 00 00	 jmp	 $LN44@SaveDDSTex
$LN28@SaveDDSTex:
; Line 786
  004a4	8b f4		 mov	 esi, esp
  004a6	6a 20		 push	 32			; 00000020H
  004a8	68 00 00 00 00	 push	 OFFSET _DDSPF_R5G6B5
  004ad	6a 20		 push	 32			; 00000020H
  004af	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  004b5	83 c2 48	 add	 edx, 72			; 00000048H
  004b8	52		 push	 edx
  004b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  004bf	83 c4 10	 add	 esp, 16			; 00000010H
  004c2	3b f4		 cmp	 esi, esp
  004c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c9	e9 e9 02 00 00	 jmp	 $LN44@SaveDDSTex
$LN27@SaveDDSTex:
; Line 787
  004ce	8b f4		 mov	 esi, esp
  004d0	6a 20		 push	 32			; 00000020H
  004d2	68 00 00 00 00	 push	 OFFSET _DDSPF_A1R5G5B5
  004d7	6a 20		 push	 32			; 00000020H
  004d9	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  004df	83 c0 48	 add	 eax, 72			; 00000048H
  004e2	50		 push	 eax
  004e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  004e9	83 c4 10	 add	 esp, 16			; 00000010H
  004ec	3b f4		 cmp	 esi, esp
  004ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004f3	e9 bf 02 00 00	 jmp	 $LN44@SaveDDSTex
$LN26@SaveDDSTex:
; Line 788
  004f8	8b f4		 mov	 esi, esp
  004fa	6a 20		 push	 32			; 00000020H
  004fc	68 00 00 00 00	 push	 OFFSET _DDSPF_A8R8G8B8
  00501	6a 20		 push	 32			; 00000020H
  00503	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00509	83 c1 48	 add	 ecx, 72			; 00000048H
  0050c	51		 push	 ecx
  0050d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00513	83 c4 10	 add	 esp, 16			; 00000010H
  00516	3b f4		 cmp	 esi, esp
  00518	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0051d	e9 95 02 00 00	 jmp	 $LN44@SaveDDSTex
$LN25@SaveDDSTex:
; Line 789
  00522	8b f4		 mov	 esi, esp
  00524	6a 20		 push	 32			; 00000020H
  00526	68 00 00 00 00	 push	 OFFSET _DDSPF_X8R8G8B8
  0052b	6a 20		 push	 32			; 00000020H
  0052d	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00533	83 c2 48	 add	 edx, 72			; 00000048H
  00536	52		 push	 edx
  00537	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  0053d	83 c4 10	 add	 esp, 16			; 00000010H
  00540	3b f4		 cmp	 esi, esp
  00542	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00547	e9 6b 02 00 00	 jmp	 $LN44@SaveDDSTex
$LN24@SaveDDSTex:
; Line 790
  0054c	8b f4		 mov	 esi, esp
  0054e	6a 20		 push	 32			; 00000020H
  00550	68 00 00 00 00	 push	 OFFSET _DDSPF_YUY2
  00555	6a 20		 push	 32			; 00000020H
  00557	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  0055d	83 c0 48	 add	 eax, 72			; 00000048H
  00560	50		 push	 eax
  00561	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00567	83 c4 10	 add	 esp, 16			; 00000010H
  0056a	3b f4		 cmp	 esi, esp
  0056c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00571	e9 41 02 00 00	 jmp	 $LN44@SaveDDSTex
$LN23@SaveDDSTex:
; Line 791
  00576	8b f4		 mov	 esi, esp
  00578	6a 20		 push	 32			; 00000020H
  0057a	68 00 00 00 00	 push	 OFFSET _DDSPF_A4R4G4B4
  0057f	6a 20		 push	 32			; 00000020H
  00581	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00587	83 c1 48	 add	 ecx, 72			; 00000048H
  0058a	51		 push	 ecx
  0058b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00591	83 c4 10	 add	 esp, 16			; 00000010H
  00594	3b f4		 cmp	 esi, esp
  00596	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0059b	e9 17 02 00 00	 jmp	 $LN44@SaveDDSTex
$LN22@SaveDDSTex:
; Line 794
  005a0	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  005a6	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  005ad	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  005b3	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  005ba	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  005c0	c7 41 50 74 00
	00 00		 mov	 DWORD PTR [ecx+80], 116	; 00000074H
  005c7	e9 eb 01 00 00	 jmp	 $LN44@SaveDDSTex
$LN21@SaveDDSTex:
; Line 795
  005cc	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  005d2	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  005d9	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  005df	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  005e6	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  005ec	c7 41 50 71 00
	00 00		 mov	 DWORD PTR [ecx+80], 113	; 00000071H
  005f3	e9 bf 01 00 00	 jmp	 $LN44@SaveDDSTex
$LN20@SaveDDSTex:
; Line 796
  005f8	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  005fe	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  00605	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  0060b	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  00612	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00618	c7 41 50 24 00
	00 00		 mov	 DWORD PTR [ecx+80], 36	; 00000024H
  0061f	e9 93 01 00 00	 jmp	 $LN44@SaveDDSTex
$LN19@SaveDDSTex:
; Line 797
  00624	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  0062a	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  00631	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  00637	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  0063e	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00644	c7 41 50 6e 00
	00 00		 mov	 DWORD PTR [ecx+80], 110	; 0000006eH
  0064b	e9 67 01 00 00	 jmp	 $LN44@SaveDDSTex
$LN18@SaveDDSTex:
; Line 798
  00650	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00656	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  0065d	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  00663	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  0066a	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  00670	c7 41 50 73 00
	00 00		 mov	 DWORD PTR [ecx+80], 115	; 00000073H
  00677	e9 3b 01 00 00	 jmp	 $LN44@SaveDDSTex
$LN17@SaveDDSTex:
; Line 799
  0067c	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00682	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  00689	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  0068f	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  00696	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  0069c	c7 41 50 70 00
	00 00		 mov	 DWORD PTR [ecx+80], 112	; 00000070H
  006a3	e9 0f 01 00 00	 jmp	 $LN44@SaveDDSTex
$LN16@SaveDDSTex:
; Line 800
  006a8	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  006ae	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  006b5	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  006bb	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  006c2	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  006c8	c7 41 50 72 00
	00 00		 mov	 DWORD PTR [ecx+80], 114	; 00000072H
  006cf	e9 e3 00 00 00	 jmp	 $LN44@SaveDDSTex
$LN15@SaveDDSTex:
; Line 801
  006d4	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  006da	c7 42 48 20 00
	00 00		 mov	 DWORD PTR [edx+72], 32	; 00000020H
  006e1	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  006e7	c7 40 4c 04 00
	00 00		 mov	 DWORD PTR [eax+76], 4
  006ee	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  006f4	c7 41 50 6f 00
	00 00		 mov	 DWORD PTR [ecx+80], 111	; 0000006fH
  006fb	e9 b7 00 00 00	 jmp	 $LN44@SaveDDSTex
$LN14@SaveDDSTex:
; Line 807
  00700	6a 32		 push	 50			; 00000032H
  00702	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00707	83 c4 04	 add	 esp, 4
  0070a	89 85 88 fe ff
	ff		 mov	 DWORD PTR $T11[ebp], eax
  00710	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00714	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00717	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  0071c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00723	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00726	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0072b	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR $T11[ebp]
  00731	e9 25 05 00 00	 jmp	 $LN49@SaveDDSTex
$LN13@SaveDDSTex:
; Line 810
  00736	8b f4		 mov	 esi, esp
  00738	6a 20		 push	 32			; 00000020H
  0073a	68 00 00 00 00	 push	 OFFSET _DDSPF_DX10
  0073f	6a 20		 push	 32			; 00000020H
  00741	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00747	83 c2 48	 add	 edx, 72			; 00000048H
  0074a	52		 push	 edx
  0074b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00751	83 c4 10	 add	 esp, 16			; 00000010H
  00754	3b f4		 cmp	 esi, esp
  00756	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 812
  0075b	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _headerSize$[ebp]
  00761	83 c0 14	 add	 eax, 20			; 00000014H
  00764	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _headerSize$[ebp], eax
; Line 813
  0076a	b9 01 00 00 00	 mov	 ecx, 1
  0076f	6b d1 00	 imul	 edx, ecx, 0
  00772	8d 44 15 84	 lea	 eax, DWORD PTR _fileHeader$[ebp+edx+128]
  00776	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _extHeader$[ebp], eax
; Line 814
  0077c	33 c9		 xor	 ecx, ecx
  0077e	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _extHeader$[ebp]
  00784	89 0a		 mov	 DWORD PTR [edx], ecx
  00786	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00789	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  0078c	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0078f	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
; Line 815
  00792	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _extHeader$[ebp]
  00798	8b 4d d0	 mov	 ecx, DWORD PTR _desc$[ebp+16]
  0079b	89 08		 mov	 DWORD PTR [eax], ecx
; Line 816
  0079d	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _extHeader$[ebp]
  007a3	c7 42 04 03 00
	00 00		 mov	 DWORD PTR [edx+4], 3
; Line 817
  007aa	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _extHeader$[ebp]
  007b0	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [eax+12], 1
$LN44@SaveDDSTex:
; Line 822
  007b7	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _rowCount$[ebp]
  007bd	51		 push	 ecx
  007be	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _rowPitch$[ebp]
  007c4	52		 push	 edx
  007c5	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _slicePitch$[ebp]
  007cb	50		 push	 eax
  007cc	8b 4d d0	 mov	 ecx, DWORD PTR _desc$[ebp+16]
  007cf	51		 push	 ecx
  007d0	8b 55 c4	 mov	 edx, DWORD PTR _desc$[ebp+4]
  007d3	52		 push	 edx
  007d4	8b 45 c0	 mov	 eax, DWORD PTR _desc$[ebp]
  007d7	50		 push	 eax
  007d8	e8 00 00 00 00	 call	 ?GetSurfaceInfo@@YAXIIW4DXGI_FORMAT@@PAI11@Z ; GetSurfaceInfo
  007dd	83 c4 18	 add	 esp, 24			; 00000018H
; Line 824
  007e0	8b 4d d0	 mov	 ecx, DWORD PTR _desc$[ebp+16]
  007e3	51		 push	 ecx
  007e4	e8 00 00 00 00	 call	 ?IsCompressed@@YA_NW4DXGI_FORMAT@@@Z ; IsCompressed
  007e9	83 c4 04	 add	 esp, 4
  007ec	0f b6 d0	 movzx	 edx, al
  007ef	85 d2		 test	 edx, edx
  007f1	74 29		 je	 SHORT $LN12@SaveDDSTex
; Line 826
  007f3	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  007f9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  007fc	81 c9 00 00 08
	00		 or	 ecx, 524288		; 00080000H
  00802	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00808	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
; Line 827
  0080b	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _header$[ebp]
  00811	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _slicePitch$[ebp]
  00817	89 48 10	 mov	 DWORD PTR [eax+16], ecx
; Line 829
  0081a	eb 24		 jmp	 SHORT $LN11@SaveDDSTex
$LN12@SaveDDSTex:
; Line 831
  0081c	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00822	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00825	83 c8 08	 or	 eax, 8
  00828	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _header$[ebp]
  0082e	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 832
  00831	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _header$[ebp]
  00837	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _rowPitch$[ebp]
  0083d	89 42 10	 mov	 DWORD PTR [edx+16], eax
$LN11@SaveDDSTex:
; Line 836
  00840	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00845	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _slicePitch$[ebp]
  0084b	51		 push	 ecx
  0084c	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  00851	83 c4 08	 add	 esp, 8
  00854	89 85 84 fe ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  0085a	8b 95 84 fe ff
	ff		 mov	 edx, DWORD PTR $T10[ebp]
  00860	52		 push	 edx
  00861	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00867	e8 00 00 00 00	 call	 ??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  0086c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; Line 837
  00870	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00876	e8 00 00 00 00	 call	 ??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
  0087b	0f b6 c0	 movzx	 eax, al
  0087e	85 c0		 test	 eax, eax
  00880	75 3f		 jne	 SHORT $LN10@SaveDDSTex
; Line 838
  00882	c7 85 80 fe ff
	ff 0e 00 07 80	 mov	 DWORD PTR $T9[ebp], -2147024882 ; 8007000eH
  0088c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00890	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00896	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  0089b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0089f	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  008a2	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  008a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008ae	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  008b1	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  008b6	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  008bc	e9 9a 03 00 00	 jmp	 $LN49@SaveDDSTex
$LN10@SaveDDSTex:
; Line 841
  008c1	8b f4		 mov	 esi, esp
  008c3	8d 8d b4 fe ff
	ff		 lea	 ecx, DWORD PTR _mapped$[ebp]
  008c9	51		 push	 ecx
  008ca	6a 00		 push	 0
  008cc	6a 01		 push	 1
  008ce	6a 00		 push	 0
  008d0	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  008d3	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  008d8	50		 push	 eax
  008d9	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  008dc	8b 02		 mov	 eax, DWORD PTR [edx]
  008de	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  008e1	51		 push	 ecx
  008e2	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  008e5	ff d2		 call	 edx
  008e7	3b f4		 cmp	 esi, esp
  008e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008ee	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
; Line 842
  008f1	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  008f5	7d 3e		 jge	 SHORT $LN9@SaveDDSTex
; Line 843
  008f7	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]
  008fa	89 85 7c fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00900	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00904	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  0090a	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  0090f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00913	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00916	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  0091b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00922	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00925	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  0092a	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00930	e9 26 03 00 00	 jmp	 $LN49@SaveDDSTex
$LN9@SaveDDSTex:
; Line 845
  00935	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _mapped$[ebp]
  0093b	89 8d ac fe ff
	ff		 mov	 DWORD PTR _sptr$[ebp], ecx
; Line 846
  00941	83 bd ac fe ff
	ff 00		 cmp	 DWORD PTR _sptr$[ebp], 0
  00948	75 61		 jne	 SHORT $LN8@SaveDDSTex
; Line 848
  0094a	8b f4		 mov	 esi, esp
  0094c	6a 00		 push	 0
  0094e	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00951	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  00956	50		 push	 eax
  00957	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  0095a	8b 02		 mov	 eax, DWORD PTR [edx]
  0095c	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  0095f	51		 push	 ecx
  00960	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00963	ff d2		 call	 edx
  00965	3b f4		 cmp	 esi, esp
  00967	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 849
  0096c	c7 85 78 fe ff
	ff 03 40 00 80	 mov	 DWORD PTR $T7[ebp], -2147467261 ; 80004003H
  00976	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0097a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00980	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00985	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00989	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  0098c	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  00991	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00998	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  0099b	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  009a0	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  009a6	e9 b0 02 00 00	 jmp	 $LN49@SaveDDSTex
$LN8@SaveDDSTex:
; Line 852
  009ab	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  009b1	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  009b6	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _dptr$[ebp], eax
; Line 854
  009bc	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _mapped$[ebp+4]
  009c2	50		 push	 eax
  009c3	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _rowPitch$[ebp]
  009c9	51		 push	 ecx
  009ca	e8 00 00 00 00	 call	 ??$min@I@std@@YAABIABI0@Z ; std::min<unsigned int>
  009cf	83 c4 08	 add	 esp, 8
  009d2	8b 10		 mov	 edx, DWORD PTR [eax]
  009d4	89 95 a4 fe ff
	ff		 mov	 DWORD PTR _msize$[ebp], edx
; Line 855
  009da	c7 85 a0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _h$14[ebp], 0
  009e4	eb 0f		 jmp	 SHORT $LN7@SaveDDSTex
$LN6@SaveDDSTex:
  009e6	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR _h$14[ebp]
  009ec	83 c0 01	 add	 eax, 1
  009ef	89 85 a0 fe ff
	ff		 mov	 DWORD PTR _h$14[ebp], eax
$LN7@SaveDDSTex:
  009f5	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _h$14[ebp]
  009fb	3b 8d d4 fe ff
	ff		 cmp	 ecx, DWORD PTR _rowCount$[ebp]
  00a01	73 54		 jae	 SHORT $LN5@SaveDDSTex
; Line 857
  00a03	8b f4		 mov	 esi, esp
  00a05	8b 95 a4 fe ff
	ff		 mov	 edx, DWORD PTR _msize$[ebp]
  00a0b	52		 push	 edx
  00a0c	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _sptr$[ebp]
  00a12	50		 push	 eax
  00a13	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _rowPitch$[ebp]
  00a19	51		 push	 ecx
  00a1a	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _dptr$[ebp]
  00a20	52		 push	 edx
  00a21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memcpy_s
  00a27	83 c4 10	 add	 esp, 16			; 00000010H
  00a2a	3b f4		 cmp	 esi, esp
  00a2c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 858
  00a31	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _sptr$[ebp]
  00a37	03 85 b8 fe ff
	ff		 add	 eax, DWORD PTR _mapped$[ebp+4]
  00a3d	89 85 ac fe ff
	ff		 mov	 DWORD PTR _sptr$[ebp], eax
; Line 859
  00a43	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _dptr$[ebp]
  00a49	03 8d ec fe ff
	ff		 add	 ecx, DWORD PTR _rowPitch$[ebp]
  00a4f	89 8d a8 fe ff
	ff		 mov	 DWORD PTR _dptr$[ebp], ecx
; Line 860
  00a55	eb 8f		 jmp	 SHORT $LN6@SaveDDSTex
$LN5@SaveDDSTex:
; Line 862
  00a57	8b f4		 mov	 esi, esp
  00a59	6a 00		 push	 0
  00a5b	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00a5e	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
  00a63	50		 push	 eax
  00a64	8b 55 08	 mov	 edx, DWORD PTR _pContext$[ebp]
  00a67	8b 02		 mov	 eax, DWORD PTR [edx]
  00a69	8b 4d 08	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00a6c	51		 push	 ecx
  00a6d	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00a70	ff d2		 call	 edx
  00a72	3b f4		 cmp	 esi, esp
  00a74	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 866
  00a79	8b f4		 mov	 esi, esp
  00a7b	6a 00		 push	 0
  00a7d	8d 85 98 fe ff
	ff		 lea	 eax, DWORD PTR _bytesWritten$[ebp]
  00a83	50		 push	 eax
  00a84	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _headerSize$[ebp]
  00a8a	51		 push	 ecx
  00a8b	8d 95 04 ff ff
	ff		 lea	 edx, DWORD PTR _fileHeader$[ebp]
  00a91	52		 push	 edx
  00a92	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00a95	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ; std::unique_ptr<void,handle_closer>::get
  00a9a	50		 push	 eax
  00a9b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WriteFile@20
  00aa1	3b f4		 cmp	 esi, esp
  00aa3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aa8	85 c0		 test	 eax, eax
  00aaa	75 53		 jne	 SHORT $LN4@SaveDDSTex
; Line 867
  00aac	8b f4		 mov	 esi, esp
  00aae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00ab4	3b f4		 cmp	 esi, esp
  00ab6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00abb	50		 push	 eax
  00abc	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00ac1	83 c4 04	 add	 esp, 4
  00ac4	89 85 74 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00aca	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ace	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00ad4	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00ad9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00add	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00ae0	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  00ae5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00aec	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00aef	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00af4	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00afa	e9 5c 01 00 00	 jmp	 $LN49@SaveDDSTex
$LN4@SaveDDSTex:
; Line 869
  00aff	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _bytesWritten$[ebp]
  00b05	3b 85 f8 fe ff
	ff		 cmp	 eax, DWORD PTR _headerSize$[ebp]
  00b0b	74 3f		 je	 SHORT $LN3@SaveDDSTex
; Line 870
  00b0d	c7 85 70 fe ff
	ff 05 40 00 80	 mov	 DWORD PTR $T5[ebp], -2147467259 ; 80004005H
  00b17	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b1b	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00b21	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00b26	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b2a	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00b2d	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  00b32	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b39	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00b3c	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00b41	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00b47	e9 0f 01 00 00	 jmp	 $LN49@SaveDDSTex
$LN3@SaveDDSTex:
; Line 872
  00b4c	8b f4		 mov	 esi, esp
  00b4e	6a 00		 push	 0
  00b50	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _bytesWritten$[ebp]
  00b56	51		 push	 ecx
  00b57	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _slicePitch$[ebp]
  00b5d	52		 push	 edx
  00b5e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00b64	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  00b69	50		 push	 eax
  00b6a	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00b6d	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ; std::unique_ptr<void,handle_closer>::get
  00b72	50		 push	 eax
  00b73	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WriteFile@20
  00b79	3b f4		 cmp	 esi, esp
  00b7b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b80	85 c0		 test	 eax, eax
  00b82	75 53		 jne	 SHORT $LN2@SaveDDSTex
; Line 873
  00b84	8b f4		 mov	 esi, esp
  00b86	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00b8c	3b f4		 cmp	 esi, esp
  00b8e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b93	50		 push	 eax
  00b94	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00b99	83 c4 04	 add	 esp, 4
  00b9c	89 85 6c fe ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00ba2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ba6	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00bac	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00bb1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00bb5	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00bb8	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  00bbd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bc4	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00bc7	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00bcc	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00bd2	e9 84 00 00 00	 jmp	 $LN49@SaveDDSTex
$LN2@SaveDDSTex:
; Line 875
  00bd7	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _bytesWritten$[ebp]
  00bdd	3b 85 e0 fe ff
	ff		 cmp	 eax, DWORD PTR _slicePitch$[ebp]
  00be3	74 3c		 je	 SHORT $LN1@SaveDDSTex
; Line 876
  00be5	c7 85 68 fe ff
	ff 05 40 00 80	 mov	 DWORD PTR $T3[ebp], -2147467259 ; 80004005H
  00bef	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00bf3	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00bf9	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00bfe	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00c02	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00c05	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  00c0a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c11	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00c14	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00c19	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00c1f	eb 3a		 jmp	 SHORT $LN49@SaveDDSTex
$LN1@SaveDDSTex:
; Line 878
  00c21	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  00c2b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00c2f	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00c35	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00c3a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00c3e	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  00c41	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
  00c46	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c4d	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00c50	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
  00c55	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN49@SaveDDSTex:
; Line 879
  00c5b	52		 push	 edx
  00c5c	8b cd		 mov	 ecx, ebp
  00c5e	50		 push	 eax
  00c5f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN67@SaveDDSTex
  00c65	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00c6a	58		 pop	 eax
  00c6b	5a		 pop	 edx
  00c6c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c6f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00c76	59		 pop	 ecx
  00c77	5f		 pop	 edi
  00c78	5e		 pop	 esi
  00c79	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c7c	33 cd		 xor	 ecx, ebp
  00c7e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c83	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00c89	3b ec		 cmp	 ebp, esp
  00c8b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c90	8b e5		 mov	 esp, ebp
  00c92	5d		 pop	 ebp
  00c93	c3		 ret	 0
$LN67@SaveDDSTex:
  00c94	0a 00 00 00	 DD	 10			; 0000000aH
  00c98	00 00 00 00	 DD	 $LN66@SaveDDSTex
$LN66@SaveDDSTex:
  00c9c	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00ca0	2c 00 00 00	 DD	 44			; 0000002cH
  00ca4	00 00 00 00	 DD	 $LN55@SaveDDSTex
  00ca8	b4 ff ff ff	 DD	 -76			; ffffffb4H
  00cac	04 00 00 00	 DD	 4
  00cb0	00 00 00 00	 DD	 $LN56@SaveDDSTex
  00cb4	a4 ff ff ff	 DD	 -92			; ffffffa4H
  00cb8	04 00 00 00	 DD	 4
  00cbc	00 00 00 00	 DD	 $LN57@SaveDDSTex
  00cc0	04 ff ff ff	 DD	 -252			; ffffff04H
  00cc4	94 00 00 00	 DD	 148			; 00000094H
  00cc8	00 00 00 00	 DD	 $LN58@SaveDDSTex
  00ccc	ec fe ff ff	 DD	 -276			; fffffeecH
  00cd0	04 00 00 00	 DD	 4
  00cd4	00 00 00 00	 DD	 $LN59@SaveDDSTex
  00cd8	e0 fe ff ff	 DD	 -288			; fffffee0H
  00cdc	04 00 00 00	 DD	 4
  00ce0	00 00 00 00	 DD	 $LN60@SaveDDSTex
  00ce4	d4 fe ff ff	 DD	 -300			; fffffed4H
  00ce8	04 00 00 00	 DD	 4
  00cec	00 00 00 00	 DD	 $LN61@SaveDDSTex
  00cf0	c8 fe ff ff	 DD	 -312			; fffffec8H
  00cf4	04 00 00 00	 DD	 4
  00cf8	00 00 00 00	 DD	 $LN62@SaveDDSTex
  00cfc	b4 fe ff ff	 DD	 -332			; fffffeb4H
  00d00	0c 00 00 00	 DD	 12			; 0000000cH
  00d04	00 00 00 00	 DD	 $LN63@SaveDDSTex
  00d08	98 fe ff ff	 DD	 -360			; fffffe98H
  00d0c	04 00 00 00	 DD	 4
  00d10	00 00 00 00	 DD	 $LN64@SaveDDSTex
$LN64@SaveDDSTex:
  00d14	62		 DB	 98			; 00000062H
  00d15	79		 DB	 121			; 00000079H
  00d16	74		 DB	 116			; 00000074H
  00d17	65		 DB	 101			; 00000065H
  00d18	73		 DB	 115			; 00000073H
  00d19	57		 DB	 87			; 00000057H
  00d1a	72		 DB	 114			; 00000072H
  00d1b	69		 DB	 105			; 00000069H
  00d1c	74		 DB	 116			; 00000074H
  00d1d	74		 DB	 116			; 00000074H
  00d1e	65		 DB	 101			; 00000065H
  00d1f	6e		 DB	 110			; 0000006eH
  00d20	00		 DB	 0
$LN63@SaveDDSTex:
  00d21	6d		 DB	 109			; 0000006dH
  00d22	61		 DB	 97			; 00000061H
  00d23	70		 DB	 112			; 00000070H
  00d24	70		 DB	 112			; 00000070H
  00d25	65		 DB	 101			; 00000065H
  00d26	64		 DB	 100			; 00000064H
  00d27	00		 DB	 0
$LN62@SaveDDSTex:
  00d28	70		 DB	 112			; 00000070H
  00d29	69		 DB	 105			; 00000069H
  00d2a	78		 DB	 120			; 00000078H
  00d2b	65		 DB	 101			; 00000065H
  00d2c	6c		 DB	 108			; 0000006cH
  00d2d	73		 DB	 115			; 00000073H
  00d2e	00		 DB	 0
$LN61@SaveDDSTex:
  00d2f	72		 DB	 114			; 00000072H
  00d30	6f		 DB	 111			; 0000006fH
  00d31	77		 DB	 119			; 00000077H
  00d32	43		 DB	 67			; 00000043H
  00d33	6f		 DB	 111			; 0000006fH
  00d34	75		 DB	 117			; 00000075H
  00d35	6e		 DB	 110			; 0000006eH
  00d36	74		 DB	 116			; 00000074H
  00d37	00		 DB	 0
$LN60@SaveDDSTex:
  00d38	73		 DB	 115			; 00000073H
  00d39	6c		 DB	 108			; 0000006cH
  00d3a	69		 DB	 105			; 00000069H
  00d3b	63		 DB	 99			; 00000063H
  00d3c	65		 DB	 101			; 00000065H
  00d3d	50		 DB	 80			; 00000050H
  00d3e	69		 DB	 105			; 00000069H
  00d3f	74		 DB	 116			; 00000074H
  00d40	63		 DB	 99			; 00000063H
  00d41	68		 DB	 104			; 00000068H
  00d42	00		 DB	 0
$LN59@SaveDDSTex:
  00d43	72		 DB	 114			; 00000072H
  00d44	6f		 DB	 111			; 0000006fH
  00d45	77		 DB	 119			; 00000077H
  00d46	50		 DB	 80			; 00000050H
  00d47	69		 DB	 105			; 00000069H
  00d48	74		 DB	 116			; 00000074H
  00d49	63		 DB	 99			; 00000063H
  00d4a	68		 DB	 104			; 00000068H
  00d4b	00		 DB	 0
$LN58@SaveDDSTex:
  00d4c	66		 DB	 102			; 00000066H
  00d4d	69		 DB	 105			; 00000069H
  00d4e	6c		 DB	 108			; 0000006cH
  00d4f	65		 DB	 101			; 00000065H
  00d50	48		 DB	 72			; 00000048H
  00d51	65		 DB	 101			; 00000065H
  00d52	61		 DB	 97			; 00000061H
  00d53	64		 DB	 100			; 00000064H
  00d54	65		 DB	 101			; 00000065H
  00d55	72		 DB	 114			; 00000072H
  00d56	00		 DB	 0
$LN57@SaveDDSTex:
  00d57	68		 DB	 104			; 00000068H
  00d58	46		 DB	 70			; 00000046H
  00d59	69		 DB	 105			; 00000069H
  00d5a	6c		 DB	 108			; 0000006cH
  00d5b	65		 DB	 101			; 00000065H
  00d5c	00		 DB	 0
$LN56@SaveDDSTex:
  00d5d	70		 DB	 112			; 00000070H
  00d5e	53		 DB	 83			; 00000053H
  00d5f	74		 DB	 116			; 00000074H
  00d60	61		 DB	 97			; 00000061H
  00d61	67		 DB	 103			; 00000067H
  00d62	69		 DB	 105			; 00000069H
  00d63	6e		 DB	 110			; 0000006eH
  00d64	67		 DB	 103			; 00000067H
  00d65	00		 DB	 0
$LN55@SaveDDSTex:
  00d66	64		 DB	 100			; 00000064H
  00d67	65		 DB	 101			; 00000065H
  00d68	73		 DB	 115			; 00000073H
  00d69	63		 DB	 99			; 00000063H
  00d6a	00		 DB	 0
  00d6b	90		 npad	 1
$LN68@SaveDDSTex:
  00d6c	00 00 00 00	 DD	 $LN22@SaveDDSTex
  00d70	00 00 00 00	 DD	 $LN21@SaveDDSTex
  00d74	00 00 00 00	 DD	 $LN20@SaveDDSTex
  00d78	00 00 00 00	 DD	 $LN19@SaveDDSTex
  00d7c	00 00 00 00	 DD	 $LN18@SaveDDSTex
  00d80	00 00 00 00	 DD	 $LN43@SaveDDSTex
  00d84	00 00 00 00	 DD	 $LN17@SaveDDSTex
  00d88	00 00 00 00	 DD	 $LN42@SaveDDSTex
  00d8c	00 00 00 00	 DD	 $LN16@SaveDDSTex
  00d90	00 00 00 00	 DD	 $LN41@SaveDDSTex
  00d94	00 00 00 00	 DD	 $LN15@SaveDDSTex
  00d98	00 00 00 00	 DD	 $LN40@SaveDDSTex
  00d9c	00 00 00 00	 DD	 $LN39@SaveDDSTex
  00da0	00 00 00 00	 DD	 $LN38@SaveDDSTex
  00da4	00 00 00 00	 DD	 $LN37@SaveDDSTex
  00da8	00 00 00 00	 DD	 $LN36@SaveDDSTex
  00dac	00 00 00 00	 DD	 $LN35@SaveDDSTex
  00db0	00 00 00 00	 DD	 $LN34@SaveDDSTex
  00db4	00 00 00 00	 DD	 $LN33@SaveDDSTex
  00db8	00 00 00 00	 DD	 $LN32@SaveDDSTex
  00dbc	00 00 00 00	 DD	 $LN31@SaveDDSTex
  00dc0	00 00 00 00	 DD	 $LN30@SaveDDSTex
  00dc4	00 00 00 00	 DD	 $LN29@SaveDDSTex
  00dc8	00 00 00 00	 DD	 $LN28@SaveDDSTex
  00dcc	00 00 00 00	 DD	 $LN27@SaveDDSTex
  00dd0	00 00 00 00	 DD	 $LN26@SaveDDSTex
  00dd4	00 00 00 00	 DD	 $LN25@SaveDDSTex
  00dd8	00 00 00 00	 DD	 $LN24@SaveDDSTex
  00ddc	00 00 00 00	 DD	 $LN14@SaveDDSTex
  00de0	00 00 00 00	 DD	 $LN23@SaveDDSTex
  00de4	00 00 00 00	 DD	 $LN13@SaveDDSTex
$LN54@SaveDDSTex:
  00de8	00		 DB	 0
  00de9	1e		 DB	 30			; 0000001eH
  00dea	1e		 DB	 30			; 0000001eH
  00deb	1e		 DB	 30			; 0000001eH
  00dec	1e		 DB	 30			; 0000001eH
  00ded	1e		 DB	 30			; 0000001eH
  00dee	1e		 DB	 30			; 0000001eH
  00def	1e		 DB	 30			; 0000001eH
  00df0	01		 DB	 1
  00df1	02		 DB	 2
  00df2	1e		 DB	 30			; 0000001eH
  00df3	03		 DB	 3
  00df4	1e		 DB	 30			; 0000001eH
  00df5	1e		 DB	 30			; 0000001eH
  00df6	04		 DB	 4
  00df7	1e		 DB	 30			; 0000001eH
  00df8	1e		 DB	 30			; 0000001eH
  00df9	1e		 DB	 30			; 0000001eH
  00dfa	1e		 DB	 30			; 0000001eH
  00dfb	1e		 DB	 30			; 0000001eH
  00dfc	1e		 DB	 30			; 0000001eH
  00dfd	1e		 DB	 30			; 0000001eH
  00dfe	1e		 DB	 30			; 0000001eH
  00dff	1e		 DB	 30			; 0000001eH
  00e00	1e		 DB	 30			; 0000001eH
  00e01	1e		 DB	 30			; 0000001eH
  00e02	05		 DB	 5
  00e03	1e		 DB	 30			; 0000001eH
  00e04	1e		 DB	 30			; 0000001eH
  00e05	1e		 DB	 30			; 0000001eH
  00e06	1e		 DB	 30			; 0000001eH
  00e07	1e		 DB	 30			; 0000001eH
  00e08	06		 DB	 6
  00e09	07		 DB	 7
  00e0a	1e		 DB	 30			; 0000001eH
  00e0b	1e		 DB	 30			; 0000001eH
  00e0c	1e		 DB	 30			; 0000001eH
  00e0d	1e		 DB	 30			; 0000001eH
  00e0e	1e		 DB	 30			; 0000001eH
  00e0f	08		 DB	 8
  00e10	1e		 DB	 30			; 0000001eH
  00e11	1e		 DB	 30			; 0000001eH
  00e12	1e		 DB	 30			; 0000001eH
  00e13	1e		 DB	 30			; 0000001eH
  00e14	1e		 DB	 30			; 0000001eH
  00e15	1e		 DB	 30			; 0000001eH
  00e16	1e		 DB	 30			; 0000001eH
  00e17	09		 DB	 9
  00e18	1e		 DB	 30			; 0000001eH
  00e19	1e		 DB	 30			; 0000001eH
  00e1a	1e		 DB	 30			; 0000001eH
  00e1b	1e		 DB	 30			; 0000001eH
  00e1c	0a		 DB	 10			; 0000000aH
  00e1d	1e		 DB	 30			; 0000001eH
  00e1e	0b		 DB	 11			; 0000000bH
  00e1f	1e		 DB	 30			; 0000001eH
  00e20	1e		 DB	 30			; 0000001eH
  00e21	1e		 DB	 30			; 0000001eH
  00e22	1e		 DB	 30			; 0000001eH
  00e23	0c		 DB	 12			; 0000000cH
  00e24	1e		 DB	 30			; 0000001eH
  00e25	1e		 DB	 30			; 0000001eH
  00e26	1e		 DB	 30			; 0000001eH
  00e27	0d		 DB	 13			; 0000000dH
  00e28	1e		 DB	 30			; 0000001eH
  00e29	1e		 DB	 30			; 0000001eH
  00e2a	0e		 DB	 14			; 0000000eH
  00e2b	0f		 DB	 15			; 0000000fH
  00e2c	1e		 DB	 30			; 0000001eH
  00e2d	10		 DB	 16			; 00000010H
  00e2e	1e		 DB	 30			; 0000001eH
  00e2f	1e		 DB	 30			; 0000001eH
  00e30	11		 DB	 17			; 00000011H
  00e31	1e		 DB	 30			; 0000001eH
  00e32	1e		 DB	 30			; 0000001eH
  00e33	12		 DB	 18			; 00000012H
  00e34	1e		 DB	 30			; 0000001eH
  00e35	1e		 DB	 30			; 0000001eH
  00e36	13		 DB	 19			; 00000013H
  00e37	14		 DB	 20			; 00000014H
  00e38	1e		 DB	 30			; 0000001eH
  00e39	15		 DB	 21			; 00000015H
  00e3a	16		 DB	 22			; 00000016H
  00e3b	17		 DB	 23			; 00000017H
  00e3c	18		 DB	 24			; 00000018H
  00e3d	19		 DB	 25			; 00000019H
  00e3e	1a		 DB	 26			; 0000001aH
  00e3f	1e		 DB	 30			; 0000001eH
  00e40	1e		 DB	 30			; 0000001eH
  00e41	1e		 DB	 30			; 0000001eH
  00e42	1e		 DB	 30			; 0000001eH
  00e43	1e		 DB	 30			; 0000001eH
  00e44	1e		 DB	 30			; 0000001eH
  00e45	1e		 DB	 30			; 0000001eH
  00e46	1e		 DB	 30			; 0000001eH
  00e47	1e		 DB	 30			; 0000001eH
  00e48	1e		 DB	 30			; 0000001eH
  00e49	1e		 DB	 30			; 0000001eH
  00e4a	1e		 DB	 30			; 0000001eH
  00e4b	1e		 DB	 30			; 0000001eH
  00e4c	1e		 DB	 30			; 0000001eH
  00e4d	1e		 DB	 30			; 0000001eH
  00e4e	1e		 DB	 30			; 0000001eH
  00e4f	1e		 DB	 30			; 0000001eH
  00e50	1e		 DB	 30			; 0000001eH
  00e51	1b		 DB	 27			; 0000001bH
  00e52	1e		 DB	 30			; 0000001eH
  00e53	1e		 DB	 30			; 0000001eH
  00e54	1e		 DB	 30			; 0000001eH
  00e55	1c		 DB	 28			; 0000001cH
  00e56	1c		 DB	 28			; 0000001cH
  00e57	1c		 DB	 28			; 0000001cH
  00e58	1c		 DB	 28			; 0000001cH
  00e59	1d		 DB	 29			; 0000001dH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$0:
  00000	8d 4d b4	 lea	 ecx, DWORD PTR _pStaging$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$1:
  00008	8d 4d a4	 lea	 ecx, DWORD PTR _hFile$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$2:
  00010	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _pixels$[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
__ehhandler$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z:
  0001b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00022	8b 8a 60 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-416]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z ENDP ; DirectX::SaveDDSTextureToFile
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET _ignore
  00008	e8 00 00 00 00	 call	 ??0_Ignore@std@@QAE@XZ	; std::_Ignore::_Ignore
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 51
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z PROC	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00011	83 e0 02	 and	 eax, 2
  00014	74 36		 je	 SHORT $LN3@vector
  00016	68 00 00 00 00	 push	 OFFSET ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00021	52		 push	 edx
  00022	6a 04		 push	 4
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR ___flags$[ebp]
  00030	83 e1 01	 and	 ecx, 1
  00033	74 0f		 je	 SHORT $LN2@vector
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	83 ea 04	 sub	 edx, 4
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00041	83 c4 04	 add	 esp, 4
$LN2@vector:
  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	83 e8 04	 sub	 eax, 4
  0004a	eb 1f		 jmp	 SHORT $LN4@vector
$LN3@vector:
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00054	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00057	83 e0 01	 and	 eax, 1
  0005a	74 0c		 je	 SHORT $LN1@vector
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00065	83 c4 04	 add	 esp, 4
$LN1@vector:
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@vector:
  0006b	83 c4 04	 add	 esp, 4
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ENDP	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?D3D11CalcSubresource@@YAIIII@Z
_TEXT	SEGMENT
_MipSlice$ = 8						; size = 4
_ArraySlice$ = 12					; size = 4
_MipLevels$ = 16					; size = 4
?D3D11CalcSubresource@@YAIIII@Z PROC			; D3D11CalcSubresource, COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\d3d11.h
; Line 2165
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _ArraySlice$[ebp]
  00006	0f af 45 10	 imul	 eax, DWORD PTR _MipLevels$[ebp]
  0000a	03 45 08	 add	 eax, DWORD PTR _MipSlice$[ebp]
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?D3D11CalcSubresource@@YAIIII@Z ENDP			; D3D11CalcSubresource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _PropVariantInit
_TEXT	SEGMENT
_pvar$ = 8						; size = 4
_PropVariantInit PROC					; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\propidl.h
; Line 1184
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1185
  00003	33 c0		 xor	 eax, eax
  00005	8b 4d 08	 mov	 ecx, DWORD PTR _pvar$[ebp]
  00008	89 01		 mov	 DWORD PTR [ecx], eax
  0000a	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000d	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00010	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 1186
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
_PropVariantInit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; Line 26297
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000f	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  00011	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00014	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  00017	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001c	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00022	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00028	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  0002e	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
END
