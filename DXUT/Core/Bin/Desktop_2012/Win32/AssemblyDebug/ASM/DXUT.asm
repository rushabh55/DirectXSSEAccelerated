; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\Scratch\DXSSE\DXUT\Core\DXUT.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUhxizgxsUwchhvUwcfgUxlivUyrmUwvhpglkPCABCUdrmDCUzhhvnyobwvyftUwcfgOlyq@DDEBF1AC87424D4D
PUBLIC	_GUID_VendorMicrosoft
PUBLIC	_IID_ID3D10Predicate
PUBLIC	_GUID_VendorMicrosoftBuiltIn
PUBLIC	_CLSID_WICPngDecoder
PUBLIC	_CLSID_WICPngDecoder1
PUBLIC	_CLSID_WICPngDecoder2
PUBLIC	_CLSID_WICBmpDecoder
PUBLIC	_CLSID_WICIcoDecoder
PUBLIC	_CLSID_WICJpegDecoder
PUBLIC	_CLSID_WICGifDecoder
PUBLIC	_CLSID_WICTiffDecoder
PUBLIC	_CLSID_WICWmpDecoder
PUBLIC	_CLSID_WICDdsDecoder
PUBLIC	_CLSID_WICBmpEncoder
PUBLIC	_CLSID_WICPngEncoder
PUBLIC	_CLSID_WICJpegEncoder
PUBLIC	_CLSID_WICGifEncoder
PUBLIC	_CLSID_WICTiffEncoder
PUBLIC	_CLSID_WICWmpEncoder
PUBLIC	_CLSID_WICDdsEncoder
PUBLIC	_GUID_ContainerFormatBmp
PUBLIC	_IID_ID3D11LibraryReflection
PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_ContainerFormatIco
PUBLIC	_GUID_ContainerFormatJpeg
PUBLIC	_GUID_ContainerFormatTiff
PUBLIC	_GUID_ContainerFormatGif
PUBLIC	_GUID_ContainerFormatWmp
PUBLIC	_GUID_ContainerFormatDds
PUBLIC	_CLSID_WICImagingCategories
PUBLIC	_CATID_WICBitmapDecoders
PUBLIC	_CATID_WICBitmapEncoders
PUBLIC	_CATID_WICPixelFormats
PUBLIC	_CATID_WICFormatConverters
PUBLIC	_CATID_WICMetadataReader
PUBLIC	_CATID_WICMetadataWriter
PUBLIC	_CLSID_WICDefaultFormatConverter
PUBLIC	_IID_ID3D11SamplerState
PUBLIC	_CLSID_WICFormatConverterHighColor
PUBLIC	_CLSID_WICFormatConverterNChannel
PUBLIC	_CLSID_WICFormatConverterWMPhoto
PUBLIC	_CLSID_WICPlanarFormatConverter
PUBLIC	_IID_ID3D11FunctionReflection
PUBLIC	_IID_ID3D10EffectShaderResourceVariable
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	_IID_ID3D11VideoDecoder
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	_IID_ID3D10DepthStencilState
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	_GUID_WICPixelFormatDontCare
PUBLIC	_GUID_WICPixelFormat1bppIndexed
PUBLIC	_GUID_WICPixelFormat2bppIndexed
PUBLIC	_GUID_WICPixelFormat4bppIndexed
PUBLIC	_IID_ID3D10InfoQueue
PUBLIC	_GUID_WICPixelFormat8bppIndexed
PUBLIC	_GUID_WICPixelFormatBlackWhite
PUBLIC	_GUID_WICPixelFormat2bppGray
PUBLIC	_IID_ID3D11FunctionParameterReflection
PUBLIC	_GUID_WICPixelFormat4bppGray
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat24bppRGB
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppPBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_IID_ID3D11Module
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	_GUID_WICPixelFormat32bppPRGBA
PUBLIC	_GUID_WICPixelFormat48bppRGB
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat64bppBGRA
PUBLIC	_GUID_WICPixelFormat64bppPRGBA
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	_GUID_WICPixelFormat64bppPBGRA
PUBLIC	_IID_ID3D10Counter
PUBLIC	_GUID_WICPixelFormat16bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppBGR101010
PUBLIC	_GUID_WICPixelFormat48bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat48bppBGRFixedPoint
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	_GUID_WICPixelFormat96bppRGBFixedPoint
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	_IID_ID3D11Asynchronous
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	_GUID_WICPixelFormat128bppPRGBAFloat
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	_GUID_WICPixelFormat128bppRGBFloat
PUBLIC	_GUID_WICPixelFormat32bppCMYK
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	_GUID_WICPixelFormat64bppRGBAFixedPoint
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	_GUID_WICPixelFormat64bppBGRAFixedPoint
PUBLIC	_IID_ID3D11ModuleInstance
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	_IID_ID3D10Device
PUBLIC	_GUID_WICPixelFormat64bppRGBFixedPoint
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegate3
PUBLIC	_GUID_WICPixelFormat128bppRGBAFixedPoint
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMask3
PUBLIC	_GUID_WICPixelFormat128bppRGBFixedPoint
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskX
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskY
PUBLIC	_GUID_WICPixelFormat64bppRGBHalf
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskZ
PUBLIC	_GUID_WICPixelFormat48bppRGBHalf
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskW
PUBLIC	_GUID_WICPixelFormat32bppRGBE
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	_GUID_WICPixelFormat32bppGrayFixedPoint
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	_GUID_WICPixelFormat64bppCMYK
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	_GUID_WICPixelFormat24bpp3Channels
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	_GUID_WICPixelFormat32bpp4Channels
PUBLIC	_IID_ID3D10BlendState
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	_GUID_WICPixelFormat40bpp5Channels
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	_GUID_WICPixelFormat48bpp6Channels
PUBLIC	_GUID_WICPixelFormat56bpp7Channels
PUBLIC	_GUID_WICPixelFormat64bpp8Channels
PUBLIC	_GUID_WICPixelFormat48bpp3Channels
PUBLIC	_IID_ID3D10EffectRenderTargetViewVariable
PUBLIC	_GUID_WICPixelFormat64bpp4Channels
PUBLIC	_GUID_WICPixelFormat80bpp5Channels
PUBLIC	_GUID_WICPixelFormat96bpp6Channels
PUBLIC	_GUID_WICPixelFormat112bpp7Channels
PUBLIC	_GUID_WICPixelFormat128bpp8Channels
PUBLIC	_GUID_WICPixelFormat40bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat80bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat32bpp3ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat40bpp4ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat48bpp5ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat56bpp6ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat64bpp7ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat72bpp8ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat64bpp3ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat80bpp4ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat96bpp5ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat112bpp6ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat128bpp7ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat144bpp8ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat8bppY
PUBLIC	_GUID_WICPixelFormat8bppCb
PUBLIC	_GUID_WICPixelFormat8bppCr
PUBLIC	_GUID_WICPixelFormat16bppCbCr
PUBLIC	_IID_ID3D10RasterizerState
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	_IID_ID3D11ShaderResourceView
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	_IID_ID3D11Linker
PUBLIC	_IID_ID3D11VideoDevice
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	_GUID_DeviceType
PUBLIC	_IID_ID3D11Query
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	_IID_ID3D10Resource
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	_D3D11_CRYPTO_TYPE_AES128_CTR
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	_IID_ID3D11Predicate
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AliceBlue
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AntiqueWhite
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Aqua
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Aquamarine
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?Azure@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Azure
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?Beige@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Beige
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Bisque
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?Black@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Black
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::BlanchedAlmond
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?Blue@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Blue
PUBLIC	?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BlueViolet
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?Brown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Brown
PUBLIC	_IID_ID3D11LinkingNode
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BurlyWood
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::CadetBlue
PUBLIC	?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chartreuse
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chocolate
PUBLIC	?Coral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Coral
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::CornflowerBlue
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipY
PUBLIC	?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Cornsilk
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Crimson
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipW
PUBLIC	?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Cyan
PUBLIC	_IID_ID3D10EffectDepthStencilViewVariable
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkBlue
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkCyan
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkGoldenrod
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGray
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGreen
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkKhaki
PUBLIC	_IID_ID3D10ShaderReflection1
PUBLIC	?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkMagenta
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkOliveGreen
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	_IID_ID3D11FunctionLinkingGraph
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrange
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrchid
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkRed
PUBLIC	?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSalmon
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSeaGreen
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateBlue
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateGray
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkTurquoise
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkViolet
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepPink
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepSkyBlue
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DimGray
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DodgerBlue
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Firebrick
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::FloralWhite
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::ForestGreen
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Fuchsia
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Gainsboro
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GhostWhite
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?Gold@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gold
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Goldenrod
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?Gray@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gray
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?Green@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Green
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GreenYellow
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Honeydew
PUBLIC	?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::HotPink
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::IndianRed
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	_IID_ID3D10Buffer
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Indigo
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Ivory
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Khaki
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Lavender
PUBLIC	?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LavenderBlush
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	_IID_ID3D11Device
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LawnGreen
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LemonChiffon
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightBlue
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCoral
PUBLIC	?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCyan
PUBLIC	?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightGoldenrodYellow
PUBLIC	_IID_ID3D11VideoProcessorEnumerator
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGreen
PUBLIC	?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGray
PUBLIC	?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightPink
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSalmon
PUBLIC	?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSeaGreen
PUBLIC	?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSkyBlue
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSlateGray
PUBLIC	?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSteelBlue
PUBLIC	?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightYellow
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?Lime@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Lime
PUBLIC	?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LimeGreen
PUBLIC	?Linen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Linen
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Magenta
PUBLIC	?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Maroon
PUBLIC	?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumAquamarine
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumBlue
PUBLIC	?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumOrchid
PUBLIC	?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumPurple
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSeaGreen
PUBLIC	?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSlateBlue
PUBLIC	?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSpringGreen
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumTurquoise
PUBLIC	?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumVioletRed
PUBLIC	?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MidnightBlue
PUBLIC	?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MintCream
PUBLIC	?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MistyRose
PUBLIC	?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Moccasin
PUBLIC	?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::NavajoWhite
PUBLIC	?Navy@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Navy
PUBLIC	?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OldLace
PUBLIC	_IID_ID3D10EffectConstantBuffer
PUBLIC	?Olive@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Olive
PUBLIC	?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OliveDrab
PUBLIC	?Orange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orange
PUBLIC	_IID_ID3D11Counter
PUBLIC	?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OrangeRed
PUBLIC	?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orchid
PUBLIC	?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleGoldenrod
PUBLIC	?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PaleGreen
PUBLIC	?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleTurquoise
PUBLIC	?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleVioletRed
PUBLIC	?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PapayaWhip
PUBLIC	?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PeachPuff
PUBLIC	?Peru@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Peru
PUBLIC	?Pink@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Pink
PUBLIC	?Plum@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Plum
PUBLIC	?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PowderBlue
PUBLIC	?Purple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Purple
PUBLIC	?Red@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Red
PUBLIC	?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RosyBrown
PUBLIC	?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RoyalBlue
PUBLIC	?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SaddleBrown
PUBLIC	?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Salmon
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SandyBrown
PUBLIC	?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaGreen
PUBLIC	?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaShell
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Sienna
PUBLIC	?Silver@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Silver
PUBLIC	_IID_ID3D10Texture1D
PUBLIC	?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SkyBlue
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateBlue
PUBLIC	?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateGray
PUBLIC	?Snow@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Snow
PUBLIC	_IID_IDXGIObject
PUBLIC	_IID_ID3D11DeviceChild
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SpringGreen
PUBLIC	?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SteelBlue
PUBLIC	?Tan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Tan
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?Teal@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Teal
PUBLIC	?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Thistle
PUBLIC	?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Tomato
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Transparent
PUBLIC	_IID_ID3D11ClassInstance
PUBLIC	?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Turquoise
PUBLIC	?Violet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Violet
PUBLIC	?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Wheat
PUBLIC	?White@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::White
PUBLIC	?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::WhiteSmoke
PUBLIC	?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Yellow
PUBLIC	?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::YellowGreen
PUBLIC	_IID_ID3D10ShaderReflectionType
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	_DXGI_DEBUG_ALL
PUBLIC	_DXGI_DEBUG_DX
PUBLIC	_DXGI_DEBUG_DXGI
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	_DXGI_DEBUG_APP
PUBLIC	_IID_IDXGIDeviceSubObject
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	_IID_ID3D11ClassLinkage
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	_IID_ID3D10ShaderReflectionVariable
PUBLIC	_IID_IDXGIResource
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	_IID_ID3D11CommandList
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	_IID_ID3D10ShaderReflectionConstantBuffer
PUBLIC	_IID_IDXGIKeyedMutex
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	_IID_ID3D10EffectShaderVariable
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	_IID_ID3D11VideoProcessor
PUBLIC	_IID_IDXGISurface
PUBLIC	_IID_ID3D10ShaderReflection
PUBLIC	_IID_ID3D10Texture2D
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	_IID_IDXGIInfoQueue
PUBLIC	_IID_IDXGISurface1
PUBLIC	_IID_ID3D11RenderTargetView
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	_IID_ID3D11AuthenticatedChannel
PUBLIC	_IID_IDXGIAdapter
PUBLIC	_D3D11_AUTHENTICATED_QUERY_PROTECTION
PUBLIC	_D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE
PUBLIC	_D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE
PUBLIC	_D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION
PUBLIC	_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT
PUBLIC	_IID_ID3D11DepthStencilState
PUBLIC	_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS
PUBLIC	_D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT
PUBLIC	_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT
PUBLIC	_IID_ID3D11BlendState1
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	_IID_IDXGIOutput
PUBLIC	_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID
PUBLIC	_D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES
PUBLIC	_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT
PUBLIC	_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	_D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_PROTECTION
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE
PUBLIC	_D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE
PUBLIC	_IID_ID3D10EffectBlendVariable
PUBLIC	_IID_ID3D11Debug
PUBLIC	_IID_ID3D10Multithread
PUBLIC	_IID_ID3D10Texture3D
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	_IID_IDXGISwapChain
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	_IID_ID3D11SwitchToRef
PUBLIC	_IID_ID3D10View
PUBLIC	_IID_ID3D10Debug
PUBLIC	_IID_ID3D11RasterizerState1
PUBLIC	_IID_IDXGIDebug
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	_IID_IDXGIFactory
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	_IID_ID3DDeviceContextState
PUBLIC	_IID_IDXGIDebug1
PUBLIC	_IID_ID3D10EffectDepthStencilVariable
PUBLIC	_IID_ID3D10SwitchToRef
PUBLIC	_IID_ID3D10StateBlock
PUBLIC	_IID_ID3D11DeviceContext1
PUBLIC	_IID_ID3D11BlendState
PUBLIC	_IID_ID3D11DeviceContext
PUBLIC	?g_cs@@3U_RTL_CRITICAL_SECTION@@A		; g_cs
PUBLIC	_IID_ID3D11TracingDevice
PUBLIC	?g_bThreadSafe@@3_NA				; g_bThreadSafe
PUBLIC	_DXGI_DEBUG_D3D10
PUBLIC	_IID_IDXGIDevice
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	_IID_ID3D11RefTrackingOptions
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	_IID_ID3D11RefDefaultTrackingOptions
PUBLIC	_DXGI_DEBUG_D3D11
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	_IID_ID3D10EffectRasterizerVariable
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	_IID_ID3D11RasterizerState
PUBLIC	_IID_IDXGIFactory1
PUBLIC	_IID_ID3D10EffectType
PUBLIC	_IID_IDXGIAdapter1
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	_IID_IDXGIDevice1
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	_IID_ID3D10Blob
PUBLIC	_IID_ID3D11Resource
PUBLIC	_IID_ID3D10ShaderResourceView
PUBLIC	_IID_ID3D11Device1
PUBLIC	_IID_ID3D10EffectVariable
PUBLIC	?value@?$integral_constant@I$07@std@@2IB	; std::integral_constant<unsigned int,8>::value
PUBLIC	_IID_ID3D10EffectSamplerVariable
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	_IID_IDXGIDisplayControl
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	_IID_ID3DUserDefinedAnnotation
PUBLIC	__GUID_770aae78_f26f_4dba_a829_253c83d1b387
PUBLIC	_IID_ID3D11DepthStencilView
PUBLIC	_IID_ID3D11Buffer
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?value@?$integral_constant@I$03@std@@2IB	; std::integral_constant<unsigned int,4>::value
PUBLIC	_IID_ID3D10EffectScalarVariable
PUBLIC	__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	_IID_IDXGIOutputDuplication
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	_IID_ID3D10EffectPass
PUBLIC	_D3D11_KEY_EXCHANGE_RSAES_OAEP
PUBLIC	_IID_ID3D11CryptoSession
PUBLIC	_IID_ID3D11Texture1D
PUBLIC	_IID_ID3D10RenderTargetView
PUBLIC	_IID_ID3D11InfoQueue
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?value@?$integral_constant@I$01@std@@2IB	; std::integral_constant<unsigned int,2>::value
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	_IID_IDXGISurface2
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	_IID_ID3D10EffectTechnique
PUBLIC	_IID_IDXGIResource1
PUBLIC	?g_pDXUTState@@3PAVDXUTState@@A			; g_pDXUTState
PUBLIC	_IID_ID3D11VideoDecoderOutputView
PUBLIC	_SID_SCommandBarState
PUBLIC	__GUID_79cf2233_7536_4948_9d36_1e4692dc5760
PUBLIC	__GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	_IID_IDXGIDevice2
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	_IID_ID3D10EffectVectorVariable
PUBLIC	_IID_ID3D11Texture2D
PUBLIC	__GUID_77db970f_6276_48ba_ba28_070143b4392c
PUBLIC	_IID_ID3D10Effect
PUBLIC	__GUID_29038f61_3839_4626_91fd_086879011a05
PUBLIC	?value@?$integral_constant@I$00@std@@2IB	; std::integral_constant<unsigned int,1>::value
PUBLIC	_IID_ID3D11VideoProcessorInputView
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	_IID_ID3D10DepthStencilView
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?value@?$_Maximum@$S@std@@2IB			; std::_Maximum<>::value
PUBLIC	_IID_ID3D10VertexShader
PUBLIC	_IID_ID3D10GeometryShader
PUBLIC	_IID_ID3D10EffectPool
PUBLIC	_IID_ID3D10PixelShader
PUBLIC	_IID_ID3D11Texture3D
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	_IID_ID3D11UnorderedAccessView
PUBLIC	_IID_ID3D10InputLayout
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	_IID_IDXGISwapChain1
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	_IID_ID3D11VideoProcessorOutputView
PUBLIC	_IID_ID3D11VertexShader
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	__GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	_IID_ID3D11View
PUBLIC	_IID_ID3D11HullShader
PUBLIC	_IID_ID3D11VideoContext
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	__GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1
PUBLIC	_IID_ID3D11DomainShader
PUBLIC	_IID_ID3D10EffectMatrixVariable
PUBLIC	_IID_ID3D11GeometryShader
PUBLIC	_IID_IDXGIFactory2
PUBLIC	_IID_ID3D11ShaderReflectionType
PUBLIC	_IID_ID3D11PixelShader
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	_IID_ID3D11ComputeShader
PUBLIC	_IID_ID3D10SamplerState
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	_IID_ID3D11InputLayout
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	_IID_ID3D10BlendState1
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2_IDCT
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2_VLD
PUBLIC	_D3D11_DECODER_PROFILE_MPEG1_VLD
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	_D3D11_DECODER_PROFILE_MPEG2and1_VLD
PUBLIC	_IID_ID3D11ShaderReflectionVariable
PUBLIC	_D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_MOCOMP_FGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_IDCT_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_IDCT_FGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_FGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT
PUBLIC	_D3D11_DECODER_PROFILE_WMV8_POSTPROC
PUBLIC	_D3D11_DECODER_PROFILE_WMV8_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_WMV9_POSTPROC
PUBLIC	_D3D11_DECODER_PROFILE_WMV9_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_WMV9_IDCT
PUBLIC	_D3D11_DECODER_PROFILE_VC1_POSTPROC
PUBLIC	_D3D11_DECODER_PROFILE_VC1_MOCOMP
PUBLIC	_D3D11_DECODER_PROFILE_VC1_IDCT
PUBLIC	_D3D11_DECODER_PROFILE_VC1_VLD
PUBLIC	_IID_ID3D11ShaderReflectionConstantBuffer
PUBLIC	_D3D11_DECODER_PROFILE_VC1_D2010
PUBLIC	_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE
PUBLIC	_IID_ID3D10Asynchronous
PUBLIC	_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC
PUBLIC	_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC
PUBLIC	_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN
PUBLIC	_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	_IID_ID3D11ShaderReflection
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	_WKPDID_D3DDebugObjectName
PUBLIC	_IID_ID3D10ShaderResourceView1
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	_IID_ID3D10EffectStringVariable
PUBLIC	_IID_IDXGIAdapter2
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	_IID_ID3D10DeviceChild
PUBLIC	_IID_ID3D10Device1
PUBLIC	_IID_IDXGIOutput1
PUBLIC	_IID_ID3D10Query
PUBLIC	_CLSID_WICImagingFactory
PUBLIC	_CLSID_WICImagingFactory1
PUBLIC	_CLSID_WICImagingFactory2
;	COMDAT ___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUhxizgxsUwchhvUwcfgUxlivUyrmUwvhpglkPCABCUdrmDCUzhhvnyobwvyftUwcfgOlyq@DDEBF1AC87424D4D
_BSS	SEGMENT
___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUhxizgxsUwchhvUwcfgUxlivUyrmUwvhpglkPCABCUdrmDCUzhhvnyobwvyftUwcfgOlyq@DDEBF1AC87424D4D DD 01H DUP (?)
_BSS	ENDS
_BSS	SEGMENT
?g_cs@@3U_RTL_CRITICAL_SECTION@@A DB 018H DUP (?)	; g_cs
?g_pDXUTState@@3PAVDXUTState@@A DD 01H DUP (?)		; g_pDXUTState
_BSS	ENDS
;	COMDAT _CLSID_WICImagingFactory2
CONST	SEGMENT
_CLSID_WICImagingFactory2 DD 0317d06e8H
	DW	05f24H
	DW	0433dH
	DB	0bdH
	DB	0f7H
	DB	079H
	DB	0ceH
	DB	068H
	DB	0d8H
	DB	0abH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory1
CONST	SEGMENT
_CLSID_WICImagingFactory1 DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT _IID_ID3D10Query
CONST	SEGMENT
_IID_ID3D10Query DD 09b7e4c0eH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_IDXGIOutput1
CONST	SEGMENT
_IID_IDXGIOutput1 DD 0cddea8H
	DW	0939bH
	DW	04b83H
	DB	0a3H
	DB	040H
	DB	0a6H
	DB	085H
	DB	022H
	DB	066H
	DB	066H
	DB	0ccH
CONST	ENDS
;	COMDAT _IID_ID3D10Device1
CONST	SEGMENT
_IID_ID3D10Device1 DD 09b7e4c8fH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10DeviceChild
CONST	SEGMENT
_IID_ID3D10DeviceChild DD 09b7e4c00H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT _IID_IDXGIAdapter2
CONST	SEGMENT
_IID_IDXGIAdapter2 DD 0aa1ae0aH
	DW	0fa0eH
	DW	04b84H
	DB	086H
	DB	044H
	DB	0e0H
	DB	05fH
	DB	0f8H
	DB	0e5H
	DB	0acH
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectStringVariable
CONST	SEGMENT
_IID_ID3D10EffectStringVariable DD 071417501H
	DW	08df9H
	DW	04e0aH
	DB	0a7H
	DB	08aH
	DB	025H
	DB	05fH
	DB	097H
	DB	056H
	DB	0baH
	DB	0ffH
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderResourceView1
CONST	SEGMENT
_IID_ID3D10ShaderResourceView1 DD 09b7e4c87H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _WKPDID_D3DDebugObjectName
CONST	SEGMENT
_WKPDID_D3DDebugObjectName DD 0429b8c22H
	DW	09188H
	DW	04b0cH
	DB	087H
	DB	042H
	DB	0acH
	DB	0b0H
	DB	0bfH
	DB	085H
	DB	0c2H
	DB	00H
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflection
CONST	SEGMENT
_IID_ID3D11ShaderReflection DD 08d536ca1H
	DW	0ccaH
	DW	04956H
	DB	0a8H
	DB	037H
	DB	078H
	DB	069H
	DB	063H
	DB	075H
	DB	055H
	DB	084H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10
CONST	SEGMENT
_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10 DD 0107af0e0H
	DW	0ef1aH
	DW	04d19H
	DB	0abH
	DB	0a8H
	DB	067H
	DB	0a1H
	DB	063H
	DB	07H
	DB	03dH
	DB	013H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_HEVC_VLD_MAIN
CONST	SEGMENT
_D3D11_DECODER_PROFILE_HEVC_VLD_MAIN DD 05b11d51bH
	DW	02f4cH
	DW	04452H
	DB	0bcH
	DB	0c3H
	DB	09H
	DB	0f2H
	DB	0a1H
	DB	016H
	DB	0cH
	DB	0c0H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC DD 0ab998b5bH
	DW	04258H
	DW	044a9H
	DB	09fH
	DB	0ebH
	DB	094H
	DB	0e5H
	DB	097H
	DB	0a6H
	DB	0baH
	DB	0aeH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC DD 0ed418a9fH
	DW	010dH
	DW	04edaH
	DB	09aH
	DB	0e3H
	DB	09aH
	DB	065H
	DB	035H
	DB	08dH
	DB	08dH
	DB	02eH
CONST	ENDS
;	COMDAT _IID_ID3D10Asynchronous
CONST	SEGMENT
_IID_ID3D10Asynchronous DD 09b7e4c0dH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE DD 0efd64d74H
	DW	0c9e8H
	DW	041d7H
	DB	0a5H
	DB	0e9H
	DB	0e9H
	DB	0b0H
	DB	0e3H
	DB	09fH
	DB	0a3H
	DB	019H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_D2010
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_D2010 DD 01b81bea4H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionConstantBuffer
CONST	SEGMENT
_IID_ID3D11ShaderReflectionConstantBuffer DD 0eb62d63dH
	DW	093ddH
	DW	04318H
	DB	08aH
	DB	0e8H
	DB	0c6H
	DB	0f8H
	DB	03aH
	DB	0d3H
	DB	071H
	DB	0b8H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_VLD DD 01b81bea3H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_IDCT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_IDCT DD 01b81bea2H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_MOCOMP DD 01b81bea1H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_VC1_POSTPROC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_VC1_POSTPROC DD 01b81bea0H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV9_IDCT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV9_IDCT DD 01b81be94H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV9_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV9_MOCOMP DD 01b81be91H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV9_POSTPROC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV9_POSTPROC DD 01b81be90H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV8_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV8_MOCOMP DD 01b81be81H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_WMV8_POSTPROC
CONST	SEGMENT
_D3D11_DECODER_PROFILE_WMV8_POSTPROC DD 01b81be80H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT DD 0705b9d82H
	DW	076cfH
	DW	049d6H
	DB	0b7H
	DB	0e6H
	DB	0acH
	DB	088H
	DB	072H
	DB	0dbH
	DB	01H
	DB	03cH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT DD 0f9aaccbbH
	DW	0c2b6H
	DW	04cfcH
	DB	087H
	DB	079H
	DB	057H
	DB	07H
	DB	0b1H
	DB	076H
	DB	05H
	DB	052H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT DD 0d79be8daH
	DW	0cf1H
	DW	04c81H
	DB	0b8H
	DB	02aH
	DB	069H
	DB	0a4H
	DB	0e2H
	DB	036H
	DB	0f4H
	DB	03dH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT DD 0d5f04ff9H
	DW	03418H
	DW	045d8H
	DB	095H
	DB	061H
	DB	032H
	DB	0a7H
	DB	06aH
	DB	0aeH
	DB	02dH
	DB	0ddH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_FGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_FGT DD 01b81be69H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_VLD_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_VLD_NOFGT DD 01b81be68H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_IDCT_FGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_IDCT_FGT DD 01b81be67H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_IDCT_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_IDCT_NOFGT DD 01b81be66H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_MOCOMP_FGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_MOCOMP_FGT DD 01b81be65H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT DD 01b81be64H
	DW	0a0c7H
	DW	011d3H
	DB	0b9H
	DB	084H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	02eH
	DB	073H
	DB	0c5H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionVariable
CONST	SEGMENT
_IID_ID3D11ShaderReflectionVariable DD 051f23923H
	DW	0f3e5H
	DW	04bd1H
	DB	091H
	DB	0cbH
	DB	060H
	DB	061H
	DB	077H
	DB	0d8H
	DB	0dbH
	DB	04cH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2and1_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2and1_VLD DD 086695f12H
	DW	0340eH
	DW	04f04H
	DB	09fH
	DB	0d3H
	DB	092H
	DB	053H
	DB	0ddH
	DB	032H
	DB	074H
	DB	060H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG1_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG1_VLD DD 06f3ec719H
	DW	03735H
	DW	042ccH
	DB	080H
	DB	063H
	DB	065H
	DB	0ccH
	DB	03cH
	DB	0b3H
	DB	066H
	DB	016H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2_VLD
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2_VLD DD 0ee27417fH
	DW	05e28H
	DW	04e65H
	DB	0beH
	DB	0eaH
	DB	01dH
	DB	026H
	DB	0b5H
	DB	08H
	DB	0adH
	DB	0c9H
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2_IDCT
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2_IDCT DD 0bf22ad00H
	DW	03eaH
	DW	04690H
	DB	080H
	DB	077H
	DB	047H
	DB	033H
	DB	046H
	DB	020H
	DB	09bH
	DB	07eH
CONST	ENDS
;	COMDAT _D3D11_DECODER_PROFILE_MPEG2_MOCOMP
CONST	SEGMENT
_D3D11_DECODER_PROFILE_MPEG2_MOCOMP DD 0e6a9f44bH
	DW	061b0H
	DW	04563H
	DB	09eH
	DB	0a4H
	DB	063H
	DB	0d2H
	DB	0a3H
	DB	0c6H
	DB	0feH
	DB	066H
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT _IID_ID3D10BlendState1
CONST	SEGMENT
_IID_ID3D10BlendState1 DD 0edad8d99H
	DW	08a35H
	DW	04d6dH
	DB	085H
	DB	066H
	DB	02eH
	DB	0a2H
	DB	076H
	DB	0cdH
	DB	0e1H
	DB	061H
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D11InputLayout
CONST	SEGMENT
_IID_ID3D11InputLayout DD 0e4819ddcH
	DW	04cf0H
	DW	04025H
	DB	0bdH
	DB	026H
	DB	05dH
	DB	0e8H
	DB	02aH
	DB	03eH
	DB	07H
	DB	0b7H
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT _IID_ID3D10SamplerState
CONST	SEGMENT
_IID_ID3D10SamplerState DD 09b7e4c0cH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11ComputeShader
CONST	SEGMENT
_IID_ID3D11ComputeShader DD 04f5b196eH
	DW	0c2bdH
	DW	0495eH
	DB	0bdH
	DB	01H
	DB	01fH
	DB	0deH
	DB	0d3H
	DB	08eH
	DB	049H
	DB	069H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT _IID_ID3D11PixelShader
CONST	SEGMENT
_IID_ID3D11PixelShader DD 0ea82e40dH
	DW	051dcH
	DW	04f33H
	DB	093H
	DB	0d4H
	DB	0dbH
	DB	07cH
	DB	091H
	DB	025H
	DB	0aeH
	DB	08cH
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionType
CONST	SEGMENT
_IID_ID3D11ShaderReflectionType DD 06e6ffa6aH
	DW	09baeH
	DW	04613H
	DB	0a5H
	DB	01eH
	DB	091H
	DB	065H
	DB	02dH
	DB	050H
	DB	08cH
	DB	021H
CONST	ENDS
;	COMDAT _IID_IDXGIFactory2
CONST	SEGMENT
_IID_IDXGIFactory2 DD 050c83a1cH
	DW	0e072H
	DW	04c48H
	DB	087H
	DB	0b0H
	DB	036H
	DB	030H
	DB	0faH
	DB	036H
	DB	0a6H
	DB	0d0H
CONST	ENDS
;	COMDAT _IID_ID3D11GeometryShader
CONST	SEGMENT
_IID_ID3D11GeometryShader DD 038325b96H
	DW	0effbH
	DW	04022H
	DB	0baH
	DB	02H
	DB	02eH
	DB	079H
	DB	05bH
	DB	070H
	DB	027H
	DB	05cH
CONST	ENDS
;	COMDAT _IID_ID3D10EffectMatrixVariable
CONST	SEGMENT
_IID_ID3D10EffectMatrixVariable DD 050666c24H
	DW	0b82fH
	DW	04eedH
	DB	0a1H
	DB	072H
	DB	05bH
	DB	06eH
	DB	07eH
	DB	085H
	DB	022H
	DB	0e0H
CONST	ENDS
;	COMDAT _IID_ID3D11DomainShader
CONST	SEGMENT
_IID_ID3D11DomainShader DD 0f582c508H
	DW	0f36H
	DW	0490cH
	DB	099H
	DB	077H
	DB	031H
	DB	0eeH
	DB	0ceH
	DB	026H
	DB	08cH
	DB	0faH
CONST	ENDS
;	COMDAT __GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1
CONST	SEGMENT
__GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1 DD 0bb2c6faaH
	DW	0b5fbH
	DW	04082H
	DB	08eH
	DB	06bH
	DB	038H
	DB	08bH
	DB	08cH
	DB	0faH
	DB	090H
	DB	0e1H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D11VideoContext
CONST	SEGMENT
_IID_ID3D11VideoContext DD 061f21c45H
	DW	03c0eH
	DW	04a74H
	DB	09cH
	DB	0eaH
	DB	067H
	DB	010H
	DB	0dH
	DB	09aH
	DB	0d5H
	DB	0e4H
CONST	ENDS
;	COMDAT _IID_ID3D11HullShader
CONST	SEGMENT
_IID_ID3D11HullShader DD 08e5c6061H
	DW	0628aH
	DW	04c8eH
	DB	082H
	DB	064H
	DB	0bbH
	DB	0e4H
	DB	05cH
	DB	0b3H
	DB	0d5H
	DB	0ddH
CONST	ENDS
;	COMDAT _IID_ID3D11View
CONST	SEGMENT
_IID_ID3D11View DD 0839d1216H
	DW	0bb2eH
	DW	0412bH
	DB	0b7H
	DB	0f4H
	DB	0a9H
	DB	0dbH
	DB	0ebH
	DB	0e0H
	DB	08eH
	DB	0d1H
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT __GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686
CONST	SEGMENT
__GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686 DD 0a04bfb29H
	DW	08efH
	DW	043d6H
	DB	0a4H
	DB	09cH
	DB	0a9H
	DB	0bdH
	DB	0bdH
	DB	0cbH
	DB	0e6H
	DB	086H
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT _IID_ID3D11VertexShader
CONST	SEGMENT
_IID_ID3D11VertexShader DD 03b301d64H
	DW	0d678H
	DW	04289H
	DB	088H
	DB	097H
	DB	022H
	DB	0f8H
	DB	092H
	DB	08bH
	DB	072H
	DB	0f3H
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessorOutputView
CONST	SEGMENT
_IID_ID3D11VideoProcessorOutputView DD 0a048285eH
	DW	025a9H
	DW	04527H
	DB	0bdH
	DB	093H
	DB	0d6H
	DB	08bH
	DB	068H
	DB	0c4H
	DB	042H
	DB	054H
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT _IID_IDXGISwapChain1
CONST	SEGMENT
_IID_IDXGISwapChain1 DD 0790a45f7H
	DW	0d42H
	DW	04876H
	DB	098H
	DB	03aH
	DB	0aH
	DB	055H
	DB	0cfH
	DB	0e6H
	DB	0f4H
	DB	0aaH
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT _IID_ID3D10InputLayout
CONST	SEGMENT
_IID_ID3D10InputLayout DD 09b7e4c0bH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11UnorderedAccessView
CONST	SEGMENT
_IID_ID3D11UnorderedAccessView DD 028acf509H
	DW	07f5cH
	DW	048f6H
	DB	086H
	DB	011H
	DB	0f3H
	DB	016H
	DB	01H
	DB	0aH
	DB	063H
	DB	080H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT _IID_ID3D11Texture3D
CONST	SEGMENT
_IID_ID3D11Texture3D DD 037e866eH
	DW	0f56dH
	DW	04357H
	DB	0a8H
	DB	0afH
	DB	09dH
	DB	0abH
	DB	0beH
	DB	06eH
	DB	025H
	DB	0eH
CONST	ENDS
;	COMDAT _IID_ID3D10PixelShader
CONST	SEGMENT
_IID_ID3D10PixelShader DD 04968b601H
	DW	09d00H
	DW	04cdeH
	DB	083H
	DB	046H
	DB	08eH
	DB	07fH
	DB	067H
	DB	058H
	DB	019H
	DB	0b6H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectPool
CONST	SEGMENT
_IID_ID3D10EffectPool DD 09537ab04H
	DW	03250H
	DW	0412eH
	DB	082H
	DB	013H
	DB	0fcH
	DB	0d2H
	DB	0f8H
	DB	067H
	DB	079H
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D10GeometryShader
CONST	SEGMENT
_IID_ID3D10GeometryShader DD 06316be88H
	DW	054cdH
	DW	04040H
	DB	0abH
	DB	044H
	DB	020H
	DB	046H
	DB	01bH
	DB	0c8H
	DB	01fH
	DB	068H
CONST	ENDS
;	COMDAT _IID_ID3D10VertexShader
CONST	SEGMENT
_IID_ID3D10VertexShader DD 09b7e4c0aH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?value@?$_Maximum@$S@std@@2IB
CONST	SEGMENT
?value@?$_Maximum@$S@std@@2IB DD 00H			; std::_Maximum<>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT _IID_ID3D10DepthStencilView
CONST	SEGMENT
_IID_ID3D10DepthStencilView DD 09b7e4c09H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessorInputView
CONST	SEGMENT
_IID_ID3D11VideoProcessorInputView DD 011ec5a5fH
	DW	051dcH
	DW	04945H
	DB	0abH
	DB	034H
	DB	06eH
	DB	08cH
	DB	021H
	DB	030H
	DB	0eH
	DB	0a5H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$00@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$00@std@@2IB DD 01H		; std::integral_constant<unsigned int,1>::value
CONST	ENDS
;	COMDAT __GUID_29038f61_3839_4626_91fd_086879011a05
CONST	SEGMENT
__GUID_29038f61_3839_4626_91fd_086879011a05 DD 029038f61H
	DW	03839H
	DW	04626H
	DB	091H
	DB	0fdH
	DB	08H
	DB	068H
	DB	079H
	DB	01H
	DB	01aH
	DB	05H
CONST	ENDS
;	COMDAT _IID_ID3D10Effect
CONST	SEGMENT
_IID_ID3D10Effect DD 051b0ca8bH
	DW	0ec0bH
	DW	04519H
	DB	087H
	DB	0dH
	DB	08eH
	DB	0e1H
	DB	0cbH
	DB	050H
	DB	017H
	DB	0c7H
CONST	ENDS
;	COMDAT __GUID_77db970f_6276_48ba_ba28_070143b4392c
CONST	SEGMENT
__GUID_77db970f_6276_48ba_ba28_070143b4392c DD 077db970fH
	DW	06276H
	DW	048baH
	DB	0baH
	DB	028H
	DB	07H
	DB	01H
	DB	043H
	DB	0b4H
	DB	039H
	DB	02cH
CONST	ENDS
;	COMDAT _IID_ID3D11Texture2D
CONST	SEGMENT
_IID_ID3D11Texture2D DD 06f15aaf2H
	DW	0d208H
	DW	04e89H
	DB	09aH
	DB	0b4H
	DB	048H
	DB	095H
	DB	035H
	DB	0d3H
	DB	04fH
	DB	09cH
CONST	ENDS
;	COMDAT _IID_ID3D10EffectVectorVariable
CONST	SEGMENT
_IID_ID3D10EffectVectorVariable DD 062b98c44H
	DW	01f82H
	DW	04c67H
	DB	0bcH
	DB	0d0H
	DB	072H
	DB	0cfH
	DB	08fH
	DB	021H
	DB	07eH
	DB	081H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT _IID_IDXGIDevice2
CONST	SEGMENT
_IID_IDXGIDevice2 DD 05008617H
	DW	0fbfdH
	DW	04051H
	DB	0a7H
	DB	090H
	DB	014H
	DB	048H
	DB	084H
	DB	0b4H
	DB	0f6H
	DB	0a9H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT __GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6
CONST	SEGMENT
__GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6 DD 06543dbb6H
	DW	01b48H
	DW	042f5H
	DB	0abH
	DB	082H
	DB	0e9H
	DB	07eH
	DB	0c7H
	DB	043H
	DB	026H
	DB	0f6H
CONST	ENDS
;	COMDAT __GUID_79cf2233_7536_4948_9d36_1e4692dc5760
CONST	SEGMENT
__GUID_79cf2233_7536_4948_9d36_1e4692dc5760 DD 079cf2233H
	DW	07536H
	DW	04948H
	DB	09dH
	DB	036H
	DB	01eH
	DB	046H
	DB	092H
	DB	0dcH
	DB	057H
	DB	060H
CONST	ENDS
;	COMDAT _SID_SCommandBarState
CONST	SEGMENT
_SID_SCommandBarState DD 0b99eaa5cH
	DW	03850H
	DW	04400H
	DB	0bcH
	DB	033H
	DB	02cH
	DB	0e5H
	DB	034H
	DB	04H
	DB	08bH
	DB	0f8H
CONST	ENDS
;	COMDAT _IID_ID3D11VideoDecoderOutputView
CONST	SEGMENT
_IID_ID3D11VideoDecoderOutputView DD 0c2931aeaH
	DW	02a85H
	DW	04f20H
	DB	086H
	DB	0fH
	DB	0fbH
	DB	0a1H
	DB	0fdH
	DB	025H
	DB	06eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IDXGIResource1
CONST	SEGMENT
_IID_IDXGIResource1 DD 030961379H
	DW	04609H
	DW	04a41H
	DB	099H
	DB	08eH
	DB	054H
	DB	0feH
	DB	056H
	DB	07eH
	DB	0e0H
	DB	0c1H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectTechnique
CONST	SEGMENT
_IID_ID3D10EffectTechnique DD 0db122ce8H
	DW	0d1c9H
	DW	04292H
	DB	0b2H
	DB	037H
	DB	024H
	DB	0edH
	DB	03dH
	DB	0e8H
	DB	0b1H
	DB	075H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT _IID_IDXGISurface2
CONST	SEGMENT
_IID_IDXGISurface2 DD 0aba496ddH
	DW	0b617H
	DW	04cb8H
	DB	0a8H
	DB	066H
	DB	0bcH
	DB	044H
	DB	0d7H
	DB	0ebH
	DB	01fH
	DB	0a2H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$01@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$01@std@@2IB DD 02H		; std::integral_constant<unsigned int,2>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11InfoQueue
CONST	SEGMENT
_IID_ID3D11InfoQueue DD 06543dbb6H
	DW	01b48H
	DW	042f5H
	DB	0abH
	DB	082H
	DB	0e9H
	DB	07eH
	DB	0c7H
	DB	043H
	DB	026H
	DB	0f6H
CONST	ENDS
;	COMDAT _IID_ID3D10RenderTargetView
CONST	SEGMENT
_IID_ID3D10RenderTargetView DD 09b7e4c08H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11Texture1D
CONST	SEGMENT
_IID_ID3D11Texture1D DD 0f8fb5c27H
	DW	0c6b3H
	DW	04f75H
	DB	0a4H
	DB	0c8H
	DB	043H
	DB	09aH
	DB	0f2H
	DB	0efH
	DB	056H
	DB	04cH
CONST	ENDS
;	COMDAT _IID_ID3D11CryptoSession
CONST	SEGMENT
_IID_ID3D11CryptoSession DD 09b32f9adH
	DW	0bdccH
	DW	040a6H
	DB	0a3H
	DB	09dH
	DB	0d5H
	DB	0c8H
	DB	065H
	DB	084H
	DB	057H
	DB	020H
CONST	ENDS
;	COMDAT _D3D11_KEY_EXCHANGE_RSAES_OAEP
CONST	SEGMENT
_D3D11_KEY_EXCHANGE_RSAES_OAEP DD 0c1949895H
	DW	0d72aH
	DW	04a1dH
	DB	08eH
	DB	05dH
	DB	0edH
	DB	085H
	DB	07dH
	DB	017H
	DB	015H
	DB	020H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectPass
CONST	SEGMENT
_IID_ID3D10EffectPass DD 05cfbeb89H
	DW	01a06H
	DW	046e0H
	DB	0b2H
	DB	082H
	DB	0e3H
	DB	0f9H
	DB	0bfH
	DB	0a3H
	DB	06aH
	DB	054H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT _IID_IDXGIOutputDuplication
CONST	SEGMENT
_IID_IDXGIOutputDuplication DD 0191cfac3H
	DW	0a341H
	DW	0470dH
	DB	0b2H
	DB	06eH
	DB	0a8H
	DB	064H
	DB	0f4H
	DB	028H
	DB	031H
	DB	09cH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
CONST	SEGMENT
__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c DD 06f15aaf2H
	DW	0d208H
	DW	04e89H
	DB	09aH
	DB	0b4H
	DB	048H
	DB	095H
	DB	035H
	DB	0d3H
	DB	04fH
	DB	09cH
CONST	ENDS
;	COMDAT _IID_ID3D10EffectScalarVariable
CONST	SEGMENT
_IID_ID3D10EffectScalarVariable DD 0e48f7bH
	DW	0d2c8H
	DW	049e8H
	DB	0a8H
	DB	06cH
	DB	02H
	DB	02dH
	DB	0eeH
	DB	053H
	DB	043H
	DB	01fH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$03@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$03@std@@2IB DD 04H		; std::integral_constant<unsigned int,4>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11Buffer
CONST	SEGMENT
_IID_ID3D11Buffer DD 048570b85H
	DW	0d1eeH
	DW	04fcdH
	DB	0a2H
	DB	050H
	DB	0ebH
	DB	035H
	DB	07H
	DB	022H
	DB	0b0H
	DB	037H
CONST	ENDS
;	COMDAT _IID_ID3D11DepthStencilView
CONST	SEGMENT
_IID_ID3D11DepthStencilView DD 09fdac92aH
	DW	01876H
	DW	048c3H
	DB	0afH
	DB	0adH
	DB	025H
	DB	0b9H
	DB	04fH
	DB	084H
	DB	0a9H
	DB	0b6H
CONST	ENDS
;	COMDAT __GUID_770aae78_f26f_4dba_a829_253c83d1b387
CONST	SEGMENT
__GUID_770aae78_f26f_4dba_a829_253c83d1b387 DD 0770aae78H
	DW	0f26fH
	DW	04dbaH
	DB	0a8H
	DB	029H
	DB	025H
	DB	03cH
	DB	083H
	DB	0d1H
	DB	0b3H
	DB	087H
CONST	ENDS
;	COMDAT _IID_ID3DUserDefinedAnnotation
CONST	SEGMENT
_IID_ID3DUserDefinedAnnotation DD 0b2daad8bH
	DW	03d4H
	DW	04dbfH
	DB	095H
	DB	0ebH
	DB	032H
	DB	0abH
	DB	04bH
	DB	063H
	DB	0d0H
	DB	0abH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT _IID_IDXGIDisplayControl
CONST	SEGMENT
_IID_IDXGIDisplayControl DD 0ea9dbf1aH
	DW	0c88eH
	DW	04486H
	DB	085H
	DB	04aH
	DB	098H
	DB	0aaH
	DB	01H
	DB	038H
	DB	0f3H
	DB	0cH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D10EffectSamplerVariable
CONST	SEGMENT
_IID_ID3D10EffectSamplerVariable DD 06530d5c7H
	DW	07e9H
	DW	04271H
	DB	0a4H
	DB	018H
	DB	0e7H
	DB	0ceH
	DB	04bH
	DB	0d1H
	DB	0e4H
	DB	080H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$07@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$07@std@@2IB DD 08H		; std::integral_constant<unsigned int,8>::value
CONST	ENDS
;	COMDAT _IID_ID3D10EffectVariable
CONST	SEGMENT
_IID_ID3D10EffectVariable DD 0ae897105H
	DW	0e6H
	DW	045bfH
	DB	0bbH
	DB	08eH
	DB	028H
	DB	01dH
	DB	0d6H
	DB	0dbH
	DB	08eH
	DB	01bH
CONST	ENDS
;	COMDAT _IID_ID3D11Device1
CONST	SEGMENT
_IID_ID3D11Device1 DD 0a04bfb29H
	DW	08efH
	DW	043d6H
	DB	0a4H
	DB	09cH
	DB	0a9H
	DB	0bdH
	DB	0bdH
	DB	0cbH
	DB	0e6H
	DB	086H
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderResourceView
CONST	SEGMENT
_IID_ID3D10ShaderResourceView DD 09b7e4c07H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11Resource
CONST	SEGMENT
_IID_ID3D11Resource DD 0dc8e63f3H
	DW	0d12bH
	DW	04952H
	DB	0b4H
	DB	07bH
	DB	05eH
	DB	045H
	DB	02H
	DB	06aH
	DB	086H
	DB	02dH
CONST	ENDS
;	COMDAT _IID_ID3D10Blob
CONST	SEGMENT
_IID_ID3D10Blob DD 08ba5fb08H
	DW	05195H
	DW	040e2H
	DB	0acH
	DB	058H
	DB	0dH
	DB	098H
	DB	09cH
	DB	03aH
	DB	01H
	DB	02H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT _IID_IDXGIDevice1
CONST	SEGMENT
_IID_IDXGIDevice1 DD 077db970fH
	DW	06276H
	DW	048baH
	DB	0baH
	DB	028H
	DB	07H
	DB	01H
	DB	043H
	DB	0b4H
	DB	039H
	DB	02cH
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGIAdapter1
CONST	SEGMENT
_IID_IDXGIAdapter1 DD 029038f61H
	DW	03839H
	DW	04626H
	DB	091H
	DB	0fdH
	DB	08H
	DB	068H
	DB	079H
	DB	01H
	DB	01aH
	DB	05H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectType
CONST	SEGMENT
_IID_ID3D10EffectType DD 04e9e1ddcH
	DW	0cd9dH
	DW	04772H
	DB	0a8H
	DB	037H
	DB	00H
	DB	018H
	DB	0bH
	DB	09bH
	DB	088H
	DB	0fdH
CONST	ENDS
;	COMDAT _IID_IDXGIFactory1
CONST	SEGMENT
_IID_IDXGIFactory1 DD 0770aae78H
	DW	0f26fH
	DW	04dbaH
	DB	0a8H
	DB	029H
	DB	025H
	DB	03cH
	DB	083H
	DB	0d1H
	DB	0b3H
	DB	087H
CONST	ENDS
;	COMDAT _IID_ID3D11RasterizerState
CONST	SEGMENT
_IID_ID3D11RasterizerState DD 09bb4ab81H
	DW	0ab1aH
	DW	04d8fH
	DB	0b5H
	DB	06H
	DB	0fcH
	DB	04H
	DB	020H
	DB	0bH
	DB	06eH
	DB	0e7H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT _IID_ID3D10EffectRasterizerVariable
CONST	SEGMENT
_IID_ID3D10EffectRasterizerVariable DD 021af9f0eH
	DW	04d94H
	DW	04ea9H
	DB	097H
	DB	085H
	DB	02cH
	DB	0b7H
	DB	06bH
	DB	08cH
	DB	0bH
	DB	034H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT _DXGI_DEBUG_D3D11
CONST	SEGMENT
_DXGI_DEBUG_D3D11 DD 04b99317bH
	DW	0ac39H
	DW	04aa6H
	DB	0bbH
	DB	0bH
	DB	0baH
	DB	0a0H
	DB	047H
	DB	084H
	DB	079H
	DB	08fH
CONST	ENDS
;	COMDAT _IID_ID3D11RefDefaultTrackingOptions
CONST	SEGMENT
_IID_ID3D11RefDefaultTrackingOptions DD 03916615H
	DW	0c644H
	DW	0418cH
	DB	09bH
	DB	0f4H
	DB	075H
	DB	0dbH
	DB	05bH
	DB	0e6H
	DB	03cH
	DB	0a0H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT _IID_ID3D11RefTrackingOptions
CONST	SEGMENT
_IID_ID3D11RefTrackingOptions DD 0193dacdfH
	DW	0db2H
	DW	04c05H
	DB	0a5H
	DB	05cH
	DB	0efH
	DB	06H
	DB	0caH
	DB	0c5H
	DB	06fH
	DB	0d9H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGIDevice
CONST	SEGMENT
_IID_IDXGIDevice DD 054ec77faH
	DW	01377H
	DW	044e6H
	DB	08cH
	DB	032H
	DB	088H
	DB	0fdH
	DB	05fH
	DB	044H
	DB	0c8H
	DB	04cH
CONST	ENDS
;	COMDAT _DXGI_DEBUG_D3D10
CONST	SEGMENT
_DXGI_DEBUG_D3D10 DD 0243b4c52H
	DW	03606H
	DW	04d3aH
	DB	099H
	DB	0d7H
	DB	0a7H
	DB	0e7H
	DB	0b3H
	DB	03eH
	DB	0d7H
	DB	06H
CONST	ENDS
_DATA	SEGMENT
?g_bThreadSafe@@3_NA DB 01H				; g_bThreadSafe
_DATA	ENDS
;	COMDAT _IID_ID3D11TracingDevice
CONST	SEGMENT
_IID_ID3D11TracingDevice DD 01911c771H
	DW	01587H
	DW	0413eH
	DB	0a7H
	DB	0e0H
	DB	0fbH
	DB	026H
	DB	0c3H
	DB	0deH
	DB	02H
	DB	068H
CONST	ENDS
;	COMDAT _IID_ID3D11DeviceContext
CONST	SEGMENT
_IID_ID3D11DeviceContext DD 0c0bfa96cH
	DW	0e089H
	DW	044fbH
	DB	08eH
	DB	0afH
	DB	026H
	DB	0f8H
	DB	079H
	DB	061H
	DB	090H
	DB	0daH
CONST	ENDS
;	COMDAT _IID_ID3D11BlendState
CONST	SEGMENT
_IID_ID3D11BlendState DD 075b68faaH
	DW	0347dH
	DW	04159H
	DB	08fH
	DB	045H
	DB	0a0H
	DB	064H
	DB	0fH
	DB	01H
	DB	0cdH
	DB	09aH
CONST	ENDS
;	COMDAT _IID_ID3D11DeviceContext1
CONST	SEGMENT
_IID_ID3D11DeviceContext1 DD 0bb2c6faaH
	DW	0b5fbH
	DW	04082H
	DB	08eH
	DB	06bH
	DB	038H
	DB	08bH
	DB	08cH
	DB	0faH
	DB	090H
	DB	0e1H
CONST	ENDS
;	COMDAT _IID_ID3D10StateBlock
CONST	SEGMENT
_IID_ID3D10StateBlock DD 0803425aH
	DW	057f5H
	DW	04dd6H
	DB	094H
	DB	065H
	DB	0a8H
	DB	075H
	DB	070H
	DB	083H
	DB	04aH
	DB	08H
CONST	ENDS
;	COMDAT _IID_ID3D10SwitchToRef
CONST	SEGMENT
_IID_ID3D10SwitchToRef DD 09b7e4e02H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectDepthStencilVariable
CONST	SEGMENT
_IID_ID3D10EffectDepthStencilVariable DD 0af482368H
	DW	0330aH
	DW	046a5H
	DB	09aH
	DB	05cH
	DB	01H
	DB	0c7H
	DB	01aH
	DB	0f2H
	DB	04cH
	DB	08dH
CONST	ENDS
;	COMDAT _IID_IDXGIDebug1
CONST	SEGMENT
_IID_IDXGIDebug1 DD 0c5a05f0cH
	DW	016f2H
	DW	04adfH
	DB	09fH
	DB	04dH
	DB	0a8H
	DB	0c4H
	DB	0d5H
	DB	08aH
	DB	0c5H
	DB	050H
CONST	ENDS
;	COMDAT _IID_ID3DDeviceContextState
CONST	SEGMENT
_IID_ID3DDeviceContextState DD 05c1e0d8aH
	DW	07c23H
	DW	048f9H
	DB	08cH
	DB	059H
	DB	0a9H
	DB	029H
	DB	058H
	DB	0ceH
	DB	0ffH
	DB	011H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT _IID_IDXGIFactory
CONST	SEGMENT
_IID_IDXGIFactory DD 07b7166ecH
	DW	021c7H
	DW	044aeH
	DB	0b2H
	DB	01aH
	DB	0c9H
	DB	0aeH
	DB	032H
	DB	01aH
	DB	0e3H
	DB	069H
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGIDebug
CONST	SEGMENT
_IID_IDXGIDebug DD 0119e7452H
	DW	0de9eH
	DW	040feH
	DB	088H
	DB	06H
	DB	088H
	DB	0f9H
	DB	0cH
	DB	012H
	DB	0b4H
	DB	041H
CONST	ENDS
;	COMDAT _IID_ID3D11RasterizerState1
CONST	SEGMENT
_IID_ID3D11RasterizerState1 DD 01217d7a6H
	DW	05039H
	DW	0418cH
	DB	0b0H
	DB	042H
	DB	09cH
	DB	0beH
	DB	025H
	DB	06aH
	DB	0fdH
	DB	06eH
CONST	ENDS
;	COMDAT _IID_ID3D10Debug
CONST	SEGMENT
_IID_ID3D10Debug DD 09b7e4e01H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10View
CONST	SEGMENT
_IID_ID3D10View DD 0c902b03fH
	DW	060a7H
	DW	049baH
	DB	099H
	DB	036H
	DB	02aH
	DB	03aH
	DB	0b3H
	DB	07aH
	DB	07eH
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D11SwitchToRef
CONST	SEGMENT
_IID_ID3D11SwitchToRef DD 01ef337e3H
	DW	058e7H
	DW	04f83H
	DB	0a6H
	DB	092H
	DB	0dbH
	DB	022H
	DB	01fH
	DB	05eH
	DB	0d4H
	DB	07eH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT _IID_IDXGISwapChain
CONST	SEGMENT
_IID_IDXGISwapChain DD 0310d36a0H
	DW	0d2e7H
	DW	04c0aH
	DB	0aaH
	DB	04H
	DB	06aH
	DB	09dH
	DB	023H
	DB	0b8H
	DB	088H
	DB	06aH
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT _IID_ID3D10Texture3D
CONST	SEGMENT
_IID_ID3D10Texture3D DD 09b7e4c05H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10Multithread
CONST	SEGMENT
_IID_ID3D10Multithread DD 09b7e4e00H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D11Debug
CONST	SEGMENT
_IID_ID3D11Debug DD 079cf2233H
	DW	07536H
	DW	04948H
	DB	09dH
	DB	036H
	DB	01eH
	DB	046H
	DB	092H
	DB	0dcH
	DB	057H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectBlendVariable
CONST	SEGMENT
_IID_ID3D10EffectBlendVariable DD 01fcd2294H
	DW	0df6dH
	DW	04eaeH
	DB	086H
	DB	0b3H
	DB	0eH
	DB	091H
	DB	060H
	DB	0cfH
	DB	0b0H
	DB	07bH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE DD 041fff286H
	DW	06ae0H
	DW	04d43H
	DB	09dH
	DB	055H
	DB	0a4H
	DB	06eH
	DB	09eH
	DB	0fdH
	DB	015H
	DB	08aH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE DD 0772d047H
	DW	01b40H
	DW	048e8H
	DB	09cH
	DB	0a6H
	DB	0b5H
	DB	0f5H
	DB	010H
	DB	0deH
	DB	09fH
	DB	01H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION DD 06346cc54H
	DW	02cfcH
	DW	04ad4H
	DB	082H
	DB	024H
	DB	0d1H
	DB	058H
	DB	037H
	DB	0deH
	DB	077H
	DB	00H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_PROTECTION
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_PROTECTION DD 050455658H
	DW	03f47H
	DW	04362H
	DB	0bfH
	DB	099H
	DB	0bfH
	DB	0dfH
	DB	0cdH
	DB	0e9H
	DB	0edH
	DB	029H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE
CONST	SEGMENT
_D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE DD 06114bdbH
	DW	03523H
	DW	0470aH
	DB	08dH
	DB	0caH
	DB	0fbH
	DB	0c2H
	DB	084H
	DB	051H
	DB	054H
	DB	0f0H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE DD 0ec1791c7H
	DW	0dad3H
	DW	04f15H
	DB	09eH
	DB	0c3H
	DB	0faH
	DB	0a9H
	DB	03dH
	DB	060H
	DB	0d4H
	DB	0f0H
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID DD 0f83a5958H
	DW	0e986H
	DW	04bdaH
	DB	0beH
	DB	0b0H
	DB	041H
	DB	01fH
	DB	06aH
	DB	07aH
	DB	01H
	DB	0b7H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT DD 0b30f7066H
	DW	0203cH
	DW	04b07H
	DB	093H
	DB	0fcH
	DB	0ceH
	DB	0aaH
	DB	0fdH
	DB	061H
	DB	024H
	DB	01eH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES DD 06214d9d2H
	DW	0432cH
	DW	04abbH
	DB	09fH
	DB	0ceH
	DB	021H
	DB	06eH
	DB	0eaH
	DB	026H
	DB	09eH
	DB	03bH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_OUTPUT_ID
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID DD 0839ddca3H
	DW	09b4eH
	DW	041e4H
	DB	0b0H
	DB	053H
	DB	089H
	DB	02bH
	DB	0d2H
	DB	0a1H
	DB	01eH
	DB	0e7H
CONST	ENDS
;	COMDAT _IID_IDXGIOutput
CONST	SEGMENT
_IID_IDXGIOutput DD 0ae02eedbH
	DW	0c735H
	DW	04690H
	DB	08dH
	DB	052H
	DB	05aH
	DB	08dH
	DB	0c2H
	DB	02H
	DB	013H
	DB	0aaH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11BlendState1
CONST	SEGMENT
_IID_ID3D11BlendState1 DD 0cc86fabeH
	DW	0da55H
	DW	0401dH
	DB	085H
	DB	0e7H
	DB	0e3H
	DB	0c9H
	DB	0deH
	DB	028H
	DB	077H
	DB	0e9H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT DD 02c042b5eH
	DW	08c07H
	DW	046d5H
	DB	0aaH
	DB	0beH
	DB	08fH
	DB	075H
	DB	0cbH
	DB	0adH
	DB	04cH
	DB	031H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT DD 012f0bd6H
	DW	0e662H
	DW	04474H
	DB	0beH
	DB	0fdH
	DB	0aaH
	DB	053H
	DB	0e5H
	DB	014H
	DB	03cH
	DB	06dH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS DD 0649bbadbH
	DW	0f0f4H
	DW	04639H
	DB	0a1H
	DB	05bH
	DB	024H
	DB	039H
	DB	03fH
	DB	0c3H
	DB	0abH
	DB	0acH
CONST	ENDS
;	COMDAT _IID_ID3D11DepthStencilState
CONST	SEGMENT
_IID_ID3D11DepthStencilState DD 03823efbH
	DW	08d8fH
	DW	04e1cH
	DB	09aH
	DB	0a2H
	DB	0f6H
	DB	04bH
	DB	0b2H
	DB	0cbH
	DB	0fdH
	DB	0f1H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT DD 0db207b3H
	DW	09450H
	DW	046a6H
	DB	082H
	DB	0deH
	DB	01bH
	DB	096H
	DB	0d4H
	DB	04fH
	DB	09cH
	DB	0f2H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION DD 02634499eH
	DW	0d018H
	DW	04d74H
	DB	0acH
	DB	017H
	DB	07fH
	DB	072H
	DB	040H
	DB	059H
	DB	052H
	DB	08dH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE DD 0ec1c539dH
	DW	08cffH
	DW	04e2aH
	DB	0bcH
	DB	0c4H
	DB	0f5H
	DB	069H
	DB	02fH
	DB	099H
	DB	0f4H
	DB	080H
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE DD 0bc1b18a5H
	DW	0b1fbH
	DW	042abH
	DB	0bdH
	DB	094H
	DB	0b5H
	DB	082H
	DB	08bH
	DB	04bH
	DB	0f7H
	DB	0beH
CONST	ENDS
;	COMDAT _D3D11_AUTHENTICATED_QUERY_PROTECTION
CONST	SEGMENT
_D3D11_AUTHENTICATED_QUERY_PROTECTION DD 0a84eb584H
	DW	0c495H
	DW	048aaH
	DB	0b9H
	DB	04dH
	DB	08bH
	DB	0d2H
	DB	0d6H
	DB	0fbH
	DB	0ceH
	DB	05H
CONST	ENDS
;	COMDAT _IID_IDXGIAdapter
CONST	SEGMENT
_IID_IDXGIAdapter DD 02411e7e1H
	DW	012acH
	DW	04ccfH
	DB	0bdH
	DB	014H
	DB	097H
	DB	098H
	DB	0e8H
	DB	053H
	DB	04dH
	DB	0c0H
CONST	ENDS
;	COMDAT _IID_ID3D11AuthenticatedChannel
CONST	SEGMENT
_IID_ID3D11AuthenticatedChannel DD 03015a308H
	DW	0dcbdH
	DW	047aaH
	DB	0a7H
	DB	047H
	DB	019H
	DB	024H
	DB	086H
	DB	0d1H
	DB	04dH
	DB	04aH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT _IID_ID3D11RenderTargetView
CONST	SEGMENT
_IID_ID3D11RenderTargetView DD 0dfdba067H
	DW	0b8dH
	DW	04865H
	DB	087H
	DB	05bH
	DB	0d7H
	DB	0b4H
	DB	051H
	DB	06cH
	DB	0c1H
	DB	064H
CONST	ENDS
;	COMDAT _IID_IDXGISurface1
CONST	SEGMENT
_IID_IDXGISurface1 DD 04ae63092H
	DW	06327H
	DW	04c1bH
	DB	080H
	DB	0aeH
	DB	0bfH
	DB	0e1H
	DB	02eH
	DB	0a3H
	DB	02bH
	DB	086H
CONST	ENDS
;	COMDAT _IID_IDXGIInfoQueue
CONST	SEGMENT
_IID_IDXGIInfoQueue DD 0d67441c7H
	DW	0672aH
	DW	0476fH
	DB	09eH
	DB	082H
	DB	0cdH
	DB	055H
	DB	0b4H
	DB	049H
	DB	049H
	DB	0ceH
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D10Texture2D
CONST	SEGMENT
_IID_ID3D10Texture2D DD 09b7e4c04H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflection
CONST	SEGMENT
_IID_ID3D10ShaderReflection DD 0d40e20b6H
	DW	0f8f7H
	DW	042adH
	DB	0abH
	DB	020H
	DB	04bH
	DB	0afH
	DB	08fH
	DB	015H
	DB	0dfH
	DB	0aaH
CONST	ENDS
;	COMDAT _IID_IDXGISurface
CONST	SEGMENT
_IID_IDXGISurface DD 0cafcb56cH
	DW	06ac3H
	DW	04889H
	DB	0bfH
	DB	047H
	DB	09eH
	DB	023H
	DB	0bbH
	DB	0d2H
	DB	060H
	DB	0ecH
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessor
CONST	SEGMENT
_IID_ID3D11VideoProcessor DD 01d7b0652H
	DW	0185fH
	DW	041c6H
	DB	085H
	DB	0ceH
	DB	0cH
	DB	05bH
	DB	0e3H
	DB	0d4H
	DB	0aeH
	DB	06cH
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT _IID_ID3D10EffectShaderVariable
CONST	SEGMENT
_IID_ID3D10EffectShaderVariable DD 080849279H
	DW	0c799H
	DW	04797H
	DB	08cH
	DB	033H
	DB	04H
	DB	07H
	DB	0a0H
	DB	07dH
	DB	09eH
	DB	06H
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT _IID_IDXGIKeyedMutex
CONST	SEGMENT
_IID_IDXGIKeyedMutex DD 09d8e1289H
	DW	0d7b3H
	DW	0465fH
	DB	081H
	DB	026H
	DB	025H
	DB	0eH
	DB	034H
	DB	09aH
	DB	0f8H
	DB	05dH
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflectionConstantBuffer
CONST	SEGMENT
_IID_ID3D10ShaderReflectionConstantBuffer DD 066c66a94H
	DW	0ddddH
	DW	04b62H
	DB	0a6H
	DB	06aH
	DB	0f0H
	DB	0daH
	DB	033H
	DB	0c2H
	DB	0b4H
	DB	0d0H
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11CommandList
CONST	SEGMENT
_IID_ID3D11CommandList DD 0a24bc4d1H
	DW	0769eH
	DW	043f7H
	DB	080H
	DB	013H
	DB	098H
	DB	0ffH
	DB	056H
	DB	06cH
	DB	018H
	DB	0e2H
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT _IID_IDXGIResource
CONST	SEGMENT
_IID_IDXGIResource DD 035f3ab4H
	DW	0482eH
	DW	04e50H
	DB	0b4H
	DB	01fH
	DB	08aH
	DB	07fH
	DB	08bH
	DB	0d8H
	DB	096H
	DB	0bH
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflectionVariable
CONST	SEGMENT
_IID_ID3D10ShaderReflectionVariable DD 01bf63c95H
	DW	02650H
	DW	0405dH
	DB	099H
	DB	0c1H
	DB	036H
	DB	036H
	DB	0bdH
	DB	01dH
	DB	0a0H
	DB	0a1H
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT _IID_ID3D11ClassLinkage
CONST	SEGMENT
_IID_ID3D11ClassLinkage DD 0ddf57cbaH
	DW	09543H
	DW	046e4H
	DB	0a1H
	DB	02bH
	DB	0f2H
	DB	07H
	DB	0a0H
	DB	0feH
	DB	07fH
	DB	0edH
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT _IID_IDXGIDeviceSubObject
CONST	SEGMENT
_IID_IDXGIDeviceSubObject DD 03d3e0379H
	DW	0f9deH
	DW	04d58H
	DB	0bbH
	DB	06cH
	DB	018H
	DB	0d6H
	DB	029H
	DB	092H
	DB	0f1H
	DB	0a6H
CONST	ENDS
;	COMDAT _DXGI_DEBUG_APP
CONST	SEGMENT
_DXGI_DEBUG_APP DD 06cd6e01H
	DW	04219H
	DW	04ebdH
	DB	087H
	DB	09H
	DB	027H
	DB	0edH
	DB	023H
	DB	036H
	DB	0cH
	DB	062H
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT _DXGI_DEBUG_DXGI
CONST	SEGMENT
_DXGI_DEBUG_DXGI DD 025cddaa4H
	DW	0b1c6H
	DW	047e1H
	DB	0acH
	DB	03eH
	DB	098H
	DB	087H
	DB	05bH
	DB	05aH
	DB	02eH
	DB	02aH
CONST	ENDS
;	COMDAT _DXGI_DEBUG_DX
CONST	SEGMENT
_DXGI_DEBUG_DX DD 035cdd7fcH
	DW	013b2H
	DW	0421dH
	DB	0a5H
	DB	0d7H
	DB	07eH
	DB	044H
	DB	051H
	DB	028H
	DB	07dH
	DB	064H
CONST	ENDS
;	COMDAT _DXGI_DEBUG_ALL
CONST	SEGMENT
_DXGI_DEBUG_ALL DD 0e48ae283H
	DW	0da80H
	DW	0490bH
	DB	087H
	DB	0e6H
	DB	043H
	DB	0e9H
	DB	0a9H
	DB	0cfH
	DB	0daH
	DB	08H
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflectionType
CONST	SEGMENT
_IID_ID3D10ShaderReflectionType DD 0c530ad7dH
	DW	09b16H
	DW	04395H
	DB	0a9H
	DB	079H
	DB	0baH
	DB	02eH
	DB	0cfH
	DB	0f8H
	DB	03aH
	DB	0ddH
CONST	ENDS
;	COMDAT ?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f1a9a9br ; 0.603922 ; DirectX::Colors::YellowGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Yellow
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::WhiteSmoke
	DD	03f75f5f7r			; 0.960784
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?White@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?White@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::White
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Wheat
	DD	03f5edee0r			; 0.870588
	DD	03f33b3b4r			; 0.701961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Violet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Violet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::Violet
	DD	03f028283r			; 0.509804
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e808081r ; 0.25098 ; DirectX::Colors::Turquoise
	DD	03f60e0e2r			; 0.878431
	DD	03f50d0d2r			; 0.815686
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D11ClassInstance
CONST	SEGMENT
_IID_ID3D11ClassInstance DD 0a6cd7faaH
	DW	0b0b7H
	DW	04a2fH
	DB	094H
	DB	036H
	DB	086H
	DB	062H
	DB	0a6H
	DB	057H
	DB	097H
	DB	0cbH
CONST	ENDS
;	COMDAT ?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Transparent
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Tomato
	DD	03ec6c6c8r			; 0.388235
	DD	03e8e8e8fr			; 0.278431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f58d8dar ; 0.847059 ; DirectX::Colors::Thistle
	DD	03f3fbfc0r			; 0.74902
	DD	03f58d8dar			; 0.847059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Teal@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Teal@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Teal
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?Tan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Tan
	DD	03f34b4b5r			; 0.705882
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e8c8c8dr ; 0.27451 ; DirectX::Colors::SteelBlue
	DD	03f028283r			; 0.509804
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::SpringGreen
	DD	03f800000r			; 1
	DD	03efeff00r			; 0.498039
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT _IID_ID3D11DeviceChild
CONST	SEGMENT
_IID_ID3D11DeviceChild DD 01841e5c8H
	DW	016b0H
	DW	0489bH
	DB	0bcH
	DB	0c8H
	DB	044H
	DB	0cfH
	DB	0b0H
	DB	0d5H
	DB	0deH
	DB	0aeH
CONST	ENDS
;	COMDAT _IID_IDXGIObject
CONST	SEGMENT
_IID_IDXGIObject DD 0aec22fb8H
	DW	076f3H
	DW	04639H
	DB	09bH
	DB	0e0H
	DB	028H
	DB	0ebH
	DB	043H
	DB	0a6H
	DB	07aH
	DB	02eH
CONST	ENDS
;	COMDAT ?Snow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Snow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Snow
	DD	03f7afafcr			; 0.980392
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ee0e0e2r ; 0.439216 ; DirectX::Colors::SlateGray
	DD	03f008081r			; 0.501961
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed4d4d6r ; 0.415686 ; DirectX::Colors::SlateBlue
	DD	03eb4b4b5r			; 0.352941
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::SkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f6bebedr			; 0.921569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D10Texture1D
CONST	SEGMENT
_IID_ID3D10Texture1D DD 09b7e4c03H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?Silver@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Silver@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f40c0c2r ; 0.752941 ; DirectX::Colors::Silver
	DD	03f40c0c2r			; 0.752941
	DD	03f40c0c2r			; 0.752941
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f20a0a1r ; 0.627451 ; DirectX::Colors::Sienna
	DD	03ea4a4a5r			; 0.321569
	DD	03e34b4b5r			; 0.176471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::SeaShell
	DD	03f75f5f7r			; 0.960784
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e38b8b9r ; 0.180392 ; DirectX::Colors::SeaGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03eaeaeafr			; 0.341176
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f74f4f6r ; 0.956863 ; DirectX::Colors::SandyBrown
	DD	03f24a4a5r			; 0.643137
	DD	03ec0c0c2r			; 0.376471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Salmon
	DD	03f008081r			; 0.501961
	DD	03ee4e4e6r			; 0.447059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::SaddleBrown
	DD	03e8a8a8br			; 0.270588
	DD	03d989899r			; 0.0745098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e828283r ; 0.254902 ; DirectX::Colors::RoyalBlue
	DD	03ed2d2d4r			; 0.411765
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3cbcbdr ; 0.737255 ; DirectX::Colors::RosyBrown
	DD	03f0f8f90r			; 0.560784
	DD	03f0f8f90r			; 0.560784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Red@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Red@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Red
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Purple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Purple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Purple
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::PowderBlue
	DD	03f60e0e2r			; 0.878431
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Plum@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Plum@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5ddddfr ; 0.866667 ; DirectX::Colors::Plum
	DD	03f20a0a1r			; 0.627451
	DD	03f5ddddfr			; 0.866667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Pink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Pink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Pink
	DD	03f40c0c2r			; 0.752941
	DD	03f4bcbcdr			; 0.796079
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Peru@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Peru@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::Peru
	DD	03f058586r			; 0.521569
	DD	03e7cfcfer			; 0.247059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PeachPuff
	DD	03f5adadcr			; 0.854902
	DD	03f39b9bar			; 0.72549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PapayaWhip
	DD	03f6feff1r			; 0.937255
	DD	03f55d5d7r			; 0.835294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5bdbddr ; 0.858824 ; DirectX::Colors::PaleVioletRed
	DD	03ee0e0e2r			; 0.439216
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2fafb0r ; 0.686275 ; DirectX::Colors::PaleTurquoise
	DD	03f6eeef0r			; 0.933333
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f189899r ; 0.596078 ; DirectX::Colors::PaleGreen
	DD	03f7bfbfdr			; 0.984314
	DD	03f189899r			; 0.596078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::PaleGoldenrod
	DD	03f68e8ear			; 0.909804
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Orchid
	DD	03ee0e0e2r			; 0.439216
	DD	03f56d6d8r			; 0.839216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::OrangeRed
	DD	03e8a8a8br			; 0.270588
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D11Counter
CONST	SEGMENT
_IID_ID3D11Counter DD 06e8c49fbH
	DW	0a371H
	DW	04770H
	DB	0b4H
	DB	040H
	DB	029H
	DB	08H
	DB	060H
	DB	022H
	DB	0b7H
	DB	041H
CONST	ENDS
;	COMDAT ?Orange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Orange
	DD	03f25a5a6r			; 0.647059
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed6d6d8r ; 0.419608 ; DirectX::Colors::OliveDrab
	DD	03f0e8e8fr			; 0.556863
	DD	03e0c8c8dr			; 0.137255
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Olive@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Olive@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Olive
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D10EffectConstantBuffer
CONST	SEGMENT
_IID_ID3D10EffectConstantBuffer DD 056648f4dH
	DW	0cc8bH
	DW	04444H
	DB	0a5H
	DB	0adH
	DB	0b5H
	DB	0a3H
	DB	0d7H
	DB	06eH
	DB	091H
	DB	0b3H
CONST	ENDS
;	COMDAT ?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7dfdffr ; 0.992157 ; DirectX::Colors::OldLace
	DD	03f75f5f7r			; 0.960784
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Navy@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Navy@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Navy
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::NavajoWhite
	DD	03f5edee0r			; 0.870588
	DD	03f2dadaer			; 0.678431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Moccasin
	DD	03f64e4e6r			; 0.894118
	DD	03f35b5b6r			; 0.709804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::MistyRose
	DD	03f64e4e6r			; 0.894118
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::MintCream
	DD	03f800000r			; 1
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03dc8c8car ; 0.0980392 ; DirectX::Colors::MidnightBlue
	DD	03dc8c8car			; 0.0980392
	DD	03ee0e0e2r			; 0.439216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f47c7c9r ; 0.780392 ; DirectX::Colors::MediumVioletRed
	DD	03da8a8a9r			; 0.0823529
	DD	03f058586r			; 0.521569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::MediumTurquoise
	DD	03f51d1d3r			; 0.819608
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumSpringGreen
	DD	03f7afafcr			; 0.980392
	DD	03f1a9a9br			; 0.603922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef6f6f8r ; 0.482353 ; DirectX::Colors::MediumSlateBlue
	DD	03ed0d0d2r			; 0.407843
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e70f0f2r ; 0.235294 ; DirectX::Colors::MediumSeaGreen
	DD	03f33b3b4r			; 0.701961
	DD	03ee2e2e4r			; 0.443137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f139394r ; 0.576471 ; DirectX::Colors::MediumPurple
	DD	03ee0e0e2r			; 0.439216
	DD	03f5bdbddr			; 0.858824
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3ababbr ; 0.729412 ; DirectX::Colors::MediumOrchid
	DD	03eaaaaabr			; 0.333333
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumBlue
	DD	000000000r			; 0
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ecccccer ; 0.4 ; DirectX::Colors::MediumAquamarine
	DD	03f4dcdcfr			; 0.803922
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Maroon
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Magenta
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?Linen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Linen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Linen
	DD	03f70f0f2r			; 0.941177
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e48c8car ; 0.196078 ; DirectX::Colors::LimeGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lime@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lime@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Lime
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightYellow
	DD	03f800000r			; 1
	DD	03f60e0e2r			; 0.878431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::LightSteelBlue
	DD	03f44c4c6r			; 0.768628
	DD	03f5edee0r			; 0.870588
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eeeeef0r ; 0.466667 ; DirectX::Colors::LightSlateGray
	DD	03f088889r			; 0.533333
	DD	03f19999ar			; 0.6
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::LightSkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e008081r ; 0.12549 ; DirectX::Colors::LightSeaGreen
	DD	03f32b2b3r			; 0.698039
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightSalmon
	DD	03f20a0a1r			; 0.627451
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightPink
	DD	03f36b6b7r			; 0.713726
	DD	03f41c1c3r			; 0.756863
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f53d3d5r ; 0.827451 ; DirectX::Colors::LightGray
	DD	03f53d3d5r			; 0.827451
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f109091r ; 0.564706 ; DirectX::Colors::LightGreen
	DD	03f6eeef0r			; 0.933333
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT _IID_ID3D11VideoProcessorEnumerator
CONST	SEGMENT
_IID_ID3D11VideoProcessorEnumerator DD 031627037H
	DW	053abH
	DW	04200H
	DB	090H
	DB	061H
	DB	05H
	DB	0faH
	DB	0a9H
	DB	0abH
	DB	045H
	DB	0f9H
CONST	ENDS
;	COMDAT ?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::LightGoldenrodYellow
	DD	03f7afafcr			; 0.980392
	DD	03f52d2d4r			; 0.823529
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f60e0e2r ; 0.878431 ; DirectX::Colors::LightCyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::LightCoral
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::LightBlue
	DD	03f58d8dar			; 0.847059
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LemonChiffon
	DD	03f7afafcr			; 0.980392
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef8f8far ; 0.486275 ; DirectX::Colors::LawnGreen
	DD	03f7cfcfer			; 0.988235
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT _IID_ID3D11Device
CONST	SEGMENT
_IID_ID3D11Device DD 0db6f6ddbH
	DW	0ac77H
	DW	04e88H
	DB	082H
	DB	053H
	DB	081H
	DB	09dH
	DB	0f9H
	DB	0bbH
	DB	0f1H
	DB	040H
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LavenderBlush
	DD	03f70f0f2r			; 0.941177
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f66e6e8r ; 0.901961 ; DirectX::Colors::Lavender
	DD	03f66e6e8r			; 0.901961
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Khaki
	DD	03f66e6e8r			; 0.901961
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Ivory
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e969697r ; 0.294118 ; DirectX::Colors::Indigo
	DD	000000000r			; 0
	DD	03f028283r			; 0.509804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT _IID_ID3D10Buffer
CONST	SEGMENT
_IID_ID3D10Buffer DD 09b7e4c02H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::IndianRed
	DD	03eb8b8b9r			; 0.360784
	DD	03eb8b8b9r			; 0.360784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-005 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
CONST	ENDS
;	COMDAT ?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::HotPink
	DD	03ed2d2d4r			; 0.411765
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Honeydew
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::GreenYellow
	DD	03f800000r			; 1
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?Green@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Green@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Green
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?Gray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Gray
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Goldenrod
	DD	03f25a5a6r			; 0.647059
	DD	03e008081r			; 0.12549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?Gold@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gold@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Gold
	DD	03f57d7d9r			; 0.843137
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f78f8far ; 0.972549 ; DirectX::Colors::GhostWhite
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Gainsboro
	DD	03f5cdcder			; 0.862745
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Fuchsia
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e088889r ; 0.133333 ; DirectX::Colors::ForestGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::FloralWhite
	DD	03f7afafcr			; 0.980392
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f32b2b3r ; 0.698039 ; DirectX::Colors::Firebrick
	DD	03e088889r			; 0.133333
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03df0f0f2r ; 0.117647 ; DirectX::Colors::DodgerBlue
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed2d2d4r ; 0.411765 ; DirectX::Colors::DimGray
	DD	03ed2d2d4r			; 0.411765
	DD	03ed2d2d4r			; 0.411765
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DeepSkyBlue
	DD	03f3fbfc0r			; 0.74902
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DeepPink
	DD	03da0a0a1r			; 0.0784314
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f149495r ; 0.580392 ; DirectX::Colors::DarkViolet
	DD	000000000r			; 0
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkTurquoise
	DD	03f4eced0r			; 0.807843
	DD	03f51d1d3r			; 0.819608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e3cbcbdr ; 0.184314 ; DirectX::Colors::DarkSlateGray
	DD	03e9e9e9fr			; 0.309804
	DD	03e9e9e9fr			; 0.309804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+009 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
CONST	ENDS
;	COMDAT ?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::DarkSlateBlue
	DD	03e74f4f6r			; 0.239216
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+009 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
CONST	ENDS
;	COMDAT ?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0f8f90r ; 0.560784 ; DirectX::Colors::DarkSeaGreen
	DD	03f3cbcbdr			; 0.737255
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f69e9ebr ; 0.913726 ; DirectX::Colors::DarkSalmon
	DD	03f169697r			; 0.588235
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkRed
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+006
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f19999ar ; 0.6 ; DirectX::Colors::DarkOrchid
	DD	03e48c8car			; 0.196078
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DarkOrange
	DD	03f0c8c8dr			; 0.54902
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionLinkingGraph
CONST	SEGMENT
_IID_ID3D11FunctionLinkingGraph DD 054133220H
	DW	01ce8H
	DW	043d3H
	DB	082H
	DB	036H
	DB	098H
	DB	055H
	DB	0c5H
	DB	0ceH
	DB	0ecH
	DB	0ffH
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-007
	DD	030800000r			; 9.31323e-010
CONST	ENDS
;	COMDAT ?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eaaaaabr ; 0.333333 ; DirectX::Colors::DarkOliveGreen
	DD	03ed6d6d8r			; 0.419608
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkMagenta
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D10ShaderReflection1
CONST	SEGMENT
_IID_ID3D10ShaderReflection1 DD 0c3457783H
	DW	0a846H
	DW	047ceH
	DB	095H
	DB	020H
	DB	0ceH
	DB	0a6H
	DB	0f6H
	DB	06eH
	DB	074H
	DB	047H
CONST	ENDS
;	COMDAT ?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3dbdber ; 0.741176 ; DirectX::Colors::DarkKhaki
	DD	03f37b7b8r			; 0.717647
	DD	03ed6d6d8r			; 0.419608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkGreen
	DD	03ec8c8car			; 0.392157
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f29a9aar ; 0.662745 ; DirectX::Colors::DarkGray
	DD	03f29a9aar			; 0.662745
	DD	03f29a9aar			; 0.662745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f38b8b9r ; 0.721569 ; DirectX::Colors::DarkGoldenrod
	DD	03f068687r			; 0.52549
	DD	03d30b0b1r			; 0.0431373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkCyan
	DD	03f0b8b8cr			; 0.545098
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkBlue
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectDepthStencilViewVariable
CONST	SEGMENT
_IID_ID3D10EffectDepthStencilViewVariable DD 03e02c918H
	DW	0cc79H
	DW	04985H
	DB	0b6H
	DB	022H
	DB	02dH
	DB	092H
	DB	0adH
	DB	070H
	DB	016H
	DB	023H
CONST	ENDS
;	COMDAT ?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Cyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Crimson
	DD	03da0a0a1r			; 0.0784314
	DD	03e70f0f2r			; 0.235294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Cornsilk
	DD	03f78f8far			; 0.972549
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ec8c8car ; 0.392157 ; DirectX::Colors::CornflowerBlue
	DD	03f159596r			; 0.584314
	DD	03f6dedefr			; 0.929412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-005
	DD	037800000r			; 1.52588e-005
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-005
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Coral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Coral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Coral
	DD	03efeff00r			; 0.498039
	DD	03ea0a0a1r			; 0.313726
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Chocolate
	DD	03ed2d2d4r			; 0.411765
	DD	03df0f0f2r			; 0.117647
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Chartreuse
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ebebebfr ; 0.372549 ; DirectX::Colors::CadetBlue
	DD	03f1e9e9fr			; 0.619608
	DD	03f20a0a1r			; 0.627451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5edee0r ; 0.870588 ; DirectX::Colors::BurlyWood
	DD	03f38b8b9r			; 0.721569
	DD	03f078788r			; 0.529412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _IID_ID3D11LinkingNode
CONST	SEGMENT
_IID_ID3D11LinkingNode DD 0d80dd70cH
	DW	08d2fH
	DW	04751H
	DB	094H
	DB	0a1H
	DB	03H
	DB	0c7H
	DB	09bH
	DB	035H
	DB	056H
	DB	0dbH
CONST	ENDS
;	COMDAT ?Brown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Brown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f25a5a6r ; 0.647059 ; DirectX::Colors::Brown
	DD	03e28a8a9r			; 0.164706
	DD	03e28a8a9r			; 0.164706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0a8a8br ; 0.541176 ; DirectX::Colors::BlueViolet
	DD	03e2cacadr			; 0.168627
	DD	03f62e2e4r			; 0.886275
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Blue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Blue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Blue
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::BlanchedAlmond
	DD	03f6bebedr			; 0.921569
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?Black@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Black@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Black
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Bisque
	DD	03f64e4e6r			; 0.894118
	DD	03f44c4c6r			; 0.768628
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Beige@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Beige@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Beige
	DD	03f75f5f7r			; 0.960784
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Azure@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Azure@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Azure
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Aquamarine
	DD	03f800000r			; 1
	DD	03f54d4d6r			; 0.831373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+006 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
CONST	ENDS
;	COMDAT ?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Aqua
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-005
	DD	030000100r			; 4.65675e-010
	DD	030000100r			; 4.65675e-010
CONST	ENDS
;	COMDAT ?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::AntiqueWhite
	DD	03f6bebedr			; 0.921569
	DD	03f57d7d9r			; 0.843137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::AliceBlue
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _IID_ID3D11Predicate
CONST	SEGMENT
_IID_ID3D11Predicate DD 09eb576ddH
	DW	09f77H
	DW	04d86H
	DB	081H
	DB	0aaH
	DB	08bH
	DB	0abH
	DB	05fH
	DB	0e4H
	DB	090H
	DB	0e2H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT _D3D11_CRYPTO_TYPE_AES128_CTR
CONST	SEGMENT
_D3D11_CRYPTO_TYPE_AES128_CTR DD 09b6bd711H
	DW	04f74H
	DW	041c9H
	DB	09eH
	DB	07bH
	DB	0bH
	DB	0e2H
	DB	0d7H
	DB	0d9H
	DB	03bH
	DB	04fH
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-010
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _IID_ID3D10Resource
CONST	SEGMENT
_IID_ID3D10Resource DD 09b7e4c01H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-006
	DD	031004020r			; 1.86629e-009
	DD	02faaaaabr			; 3.10441e-010
CONST	ENDS
;	COMDAT _IID_ID3D11Query
CONST	SEGMENT
_IID_ID3D11Query DD 0d6c00747H
	DW	087b7H
	DW	0425eH
	DB	0b8H
	DB	04dH
	DB	044H
	DB	0d1H
	DB	08H
	DB	056H
	DB	0aH
	DB	0fdH
CONST	ENDS
;	COMDAT _GUID_DeviceType
CONST	SEGMENT
_GUID_DeviceType DD 0d722fb4dH
	DW	07a68H
	DW	0437aH
	DB	0b2H
	DB	0cH
	DB	058H
	DB	04H
	DB	0eeH
	DB	024H
	DB	094H
	DB	0a6H
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT _IID_ID3D11VideoDevice
CONST	SEGMENT
_IID_ID3D11VideoDevice DD 010ec4d5bH
	DW	0975aH
	DW	04689H
	DB	0b9H
	DB	0e4H
	DB	0d0H
	DB	0aaH
	DB	0c3H
	DB	0fH
	DB	0e3H
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D11Linker
CONST	SEGMENT
_IID_ID3D11Linker DD 059a6cd0eH
	DW	0e10dH
	DW	04c1fH
	DB	088H
	DB	0c0H
	DB	063H
	DB	0abH
	DB	0a1H
	DB	0daH
	DB	0f3H
	DB	0eH
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-008 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-005
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-010
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderResourceView
CONST	SEGMENT
_IID_ID3D11ShaderResourceView DD 0b0e06fe0H
	DW	08192H
	DW	04e1aH
	DB	0b1H
	DB	0caH
	DB	036H
	DB	0d7H
	DB	041H
	DB	047H
	DB	010H
	DB	0b2H
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-007 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
CONST	ENDS
;	COMDAT _IID_ID3D10RasterizerState
CONST	SEGMENT
_IID_ID3D10RasterizerState DD 0a2a07292H
	DW	089afH
	DW	04345H
	DB	0beH
	DB	02eH
	DB	0c5H
	DB	03dH
	DB	09fH
	DB	0bbH
	DB	06eH
	DB	09fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppCbCr
CONST	SEGMENT
_GUID_WICPixelFormat16bppCbCr DD 0ff95ba6eH
	DW	011e0H
	DW	04263H
	DB	0bbH
	DB	045H
	DB	01H
	DB	072H
	DB	01fH
	DB	034H
	DB	060H
	DB	0a4H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCr
CONST	SEGMENT
_GUID_WICPixelFormat8bppCr DD 0b8145053H
	DW	02116H
	DW	049f0H
	DB	088H
	DB	035H
	DB	0edH
	DB	084H
	DB	04bH
	DB	020H
	DB	05cH
	DB	051H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCb
CONST	SEGMENT
_GUID_WICPixelFormat8bppCb DD 01339f224H
	DW	06bfeH
	DW	04c3eH
	DB	093H
	DB	02H
	DB	0e4H
	DB	0f3H
	DB	0a6H
	DB	0d0H
	DB	0caH
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppY
CONST	SEGMENT
_GUID_WICPixelFormat8bppY DD 091b4db54H
	DW	02df9H
	DW	042f0H
	DB	0b4H
	DB	049H
	DB	029H
	DB	09H
	DB	0bbH
	DB	03dH
	DB	0f8H
	DB	08eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat144bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat144bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	039H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat128bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	038H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat112bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	037H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat96bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	036H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	035H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	034H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat72bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat72bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	033H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	032H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat56bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	031H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat48bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	030H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat32bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat128bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat112bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat96bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	029H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat80bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	028H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	027H
CONST	ENDS
;	COMDAT _IID_ID3D10EffectRenderTargetViewVariable
CONST	SEGMENT
_IID_ID3D10EffectRenderTargetViewVariable DD 028ca0cc3H
	DW	0c2c9H
	DW	040bbH
	DB	0b5H
	DB	07fH
	DB	067H
	DB	0b7H
	DB	037H
	DB	012H
	DB	02bH
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	026H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	025H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat56bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	024H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	023H
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat40bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	022H
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT _IID_ID3D10BlendState
CONST	SEGMENT
_IID_ID3D10BlendState DD 0edad8d19H
	DW	08a35H
	DW	04d6dH
	DB	085H
	DB	066H
	DB	02eH
	DB	0a2H
	DB	076H
	DB	0cdH
	DB	0e1H
	DB	061H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat32bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	021H
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat24bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	020H
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat64bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03fH
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBE
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBE DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03dH
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03bH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	042H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	041H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01eH
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	040H
CONST	ENDS
;	COMDAT _IID_ID3D10Device
CONST	SEGMENT
_IID_ID3D10Device DD 09b7e4c0fH
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT _IID_ID3D11ModuleInstance
CONST	SEGMENT
_IID_ID3D11ModuleInstance DD 0469e07f7H
	DW	045aH
	DW	048d5H
	DB	0aaH
	DB	012H
	DB	068H
	DB	0a4H
	DB	078H
	DB	0cdH
	DB	0f7H
	DB	05dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRAFixedPoint DD 0356de33cH
	DW	054d2H
	DW	04a23H
	DB	0bbH
	DB	04H
	DB	09bH
	DB	07bH
	DB	0f9H
	DB	0b1H
	DB	0d4H
	DB	02dH
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01dH
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat32bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01bH
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppPRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppPRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01aH
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _IID_ID3D11Asynchronous
CONST	SEGMENT
_IID_ID3D11Asynchronous DD 04b35d0cdH
	DW	01e15H
	DW	04258H
	DB	09cH
	DB	098H
	DB	01bH
	DB	013H
	DB	033H
	DB	0f6H
	DB	0ddH
	DB	03bH
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat96bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	018H
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGRFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGRFixedPoint DD 049ca140eH
	DW	0cab6H
	DW	0493bH
	DB	09dH
	DB	0dfH
	DB	060H
	DB	018H
	DB	07cH
	DB	037H
	DB	053H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	012H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR101010
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR101010 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	014H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	013H
CONST	ENDS
;	COMDAT _IID_ID3D10Counter
CONST	SEGMENT
_IID_ID3D10Counter DD 09b7e4c11H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPBGRA DD 08c518e8eH
	DW	0a4ecH
	DW	0468bH
	DB	0aeH
	DB	070H
	DB	0c9H
	DB	0a3H
	DB	05aH
	DB	09cH
	DB	055H
	DB	030H
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRA DD 01562ff7cH
	DW	0d352H
	DW	046f9H
	DB	097H
	DB	09eH
	DB	042H
	DB	097H
	DB	06bH
	DB	079H
	DB	022H
	DB	046H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	015H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPRGBA DD 03cc4a650H
	DW	0a527H
	DW	04d37H
	DB	0a9H
	DB	016H
	DB	031H
	DB	042H
	DB	0c7H
	DB	0ebH
	DB	0edH
	DB	0baH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _IID_ID3D11Module
CONST	SEGMENT
_IID_ID3D11Module DD 0cac701eeH
	DW	080fcH
	DW	04122H
	DB	082H
	DB	042H
	DB	010H
	DB	0b3H
	DB	09cH
	DB	08cH
	DB	0ecH
	DB	034H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	010H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat24bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppGray
CONST	SEGMENT
_GUID_WICPixelFormat4bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	07H
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionParameterReflection
CONST	SEGMENT
_IID_ID3D11FunctionParameterReflection DD 042757488H
	DW	0334fH
	DW	047feH
	DB	098H
	DB	02eH
	DB	01aH
	DB	065H
	DB	0d0H
	DB	08cH
	DB	0c4H
	DB	062H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppGray
CONST	SEGMENT
_GUID_WICPixelFormat2bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	06H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatBlackWhite
CONST	SEGMENT
_GUID_WICPixelFormatBlackWhite DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	05H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat8bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	04H
CONST	ENDS
;	COMDAT _IID_ID3D10InfoQueue
CONST	SEGMENT
_IID_ID3D10InfoQueue DD 01b940b17H
	DW	02642H
	DW	04d1fH
	DB	0abH
	DB	01fH
	DB	0b9H
	DB	09bH
	DB	0adH
	DB	0cH
	DB	039H
	DB	05fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat4bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat2bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat1bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat1bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatDontCare
CONST	SEGMENT
_GUID_WICPixelFormatDontCare DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	00H
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT _IID_ID3D10DepthStencilState
CONST	SEGMENT
_IID_ID3D10DepthStencilState DD 02b4b1cc8H
	DW	0a4adH
	DW	041f8H
	DB	083H
	DB	022H
	DB	0caH
	DB	086H
	DB	0fcH
	DB	03eH
	DB	0c6H
	DB	075H
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT _IID_ID3D11VideoDecoder
CONST	SEGMENT
_IID_ID3D11VideoDecoder DD 03c9c5b51H
	DW	0995dH
	DW	048d1H
	DB	09bH
	DB	08dH
	DB	0faH
	DB	05cH
	DB	0aeH
	DB	0deH
	DB	0d6H
	DB	05cH
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-005
	DD	03824bec9r			; 3.92783e-005
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-007 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-005
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-008 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-006
CONST	ENDS
;	COMDAT _IID_ID3D10EffectShaderResourceVariable
CONST	SEGMENT
_IID_ID3D10EffectShaderResourceVariable DD 0c0a7157bH
	DW	0d872H
	DW	04b1dH
	DB	080H
	DB	073H
	DB	0efH
	DB	0c2H
	DB	0acH
	DB	0d4H
	DB	0b1H
	DB	0fcH
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionReflection
CONST	SEGMENT
_IID_ID3D11FunctionReflection DD 0207bcecbH
	DW	0d683H
	DW	04a06H
	DB	0a8H
	DB	0a3H
	DB	09bH
	DB	014H
	DB	09bH
	DB	09fH
	DB	073H
	DB	0a4H
CONST	ENDS
;	COMDAT _CLSID_WICPlanarFormatConverter
CONST	SEGMENT
_CLSID_WICPlanarFormatConverter DD 0184132b8H
	DW	032f8H
	DW	04784H
	DB	091H
	DB	031H
	DB	0ddH
	DB	072H
	DB	024H
	DB	0b2H
	DB	034H
	DB	038H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterWMPhoto
CONST	SEGMENT
_CLSID_WICFormatConverterWMPhoto DD 09cb5172bH
	DW	0d600H
	DW	046baH
	DB	0abH
	DB	077H
	DB	077H
	DB	0bbH
	DB	07eH
	DB	03aH
	DB	00H
	DB	0d9H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterNChannel
CONST	SEGMENT
_CLSID_WICFormatConverterNChannel DD 0c17cabb2H
	DW	0d4a3H
	DW	047d7H
	DB	0a5H
	DB	057H
	DB	033H
	DB	09bH
	DB	02eH
	DB	0fbH
	DB	0d4H
	DB	0f1H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterHighColor
CONST	SEGMENT
_CLSID_WICFormatConverterHighColor DD 0ac75d454H
	DW	09f37H
	DW	048f8H
	DB	0b9H
	DB	072H
	DB	04eH
	DB	019H
	DB	0bcH
	DB	085H
	DB	060H
	DB	011H
CONST	ENDS
;	COMDAT _IID_ID3D11SamplerState
CONST	SEGMENT
_IID_ID3D11SamplerState DD 0da6fea51H
	DW	0564cH
	DW	04487H
	DB	098H
	DB	010H
	DB	0f0H
	DB	0d0H
	DB	0f9H
	DB	0b4H
	DB	0e3H
	DB	0a5H
CONST	ENDS
;	COMDAT _CLSID_WICDefaultFormatConverter
CONST	SEGMENT
_CLSID_WICDefaultFormatConverter DD 01a3f11dcH
	DW	0b514H
	DW	04b17H
	DB	08cH
	DB	05fH
	DB	021H
	DB	054H
	DB	051H
	DB	038H
	DB	052H
	DB	0f1H
CONST	ENDS
;	COMDAT _CATID_WICMetadataWriter
CONST	SEGMENT
_CATID_WICMetadataWriter DD 0abe3b9a4H
	DW	0257dH
	DW	04b97H
	DB	0bdH
	DB	01aH
	DB	029H
	DB	04aH
	DB	0f4H
	DB	096H
	DB	022H
	DB	02eH
CONST	ENDS
;	COMDAT _CATID_WICMetadataReader
CONST	SEGMENT
_CATID_WICMetadataReader DD 05af94d8H
	DW	07174H
	DW	04cd2H
	DB	0beH
	DB	04aH
	DB	041H
	DB	024H
	DB	0b8H
	DB	0eH
	DB	0e4H
	DB	0b8H
CONST	ENDS
;	COMDAT _CATID_WICFormatConverters
CONST	SEGMENT
_CATID_WICFormatConverters DD 07835eae8H
	DW	0bf14H
	DW	049d1H
	DB	093H
	DB	0ceH
	DB	053H
	DB	03aH
	DB	040H
	DB	07bH
	DB	022H
	DB	048H
CONST	ENDS
;	COMDAT _CATID_WICPixelFormats
CONST	SEGMENT
_CATID_WICPixelFormats DD 02b46e70fH
	DW	0cda7H
	DW	0473eH
	DB	089H
	DB	0f6H
	DB	0dcH
	DB	096H
	DB	030H
	DB	0a2H
	DB	039H
	DB	0bH
CONST	ENDS
;	COMDAT _CATID_WICBitmapEncoders
CONST	SEGMENT
_CATID_WICBitmapEncoders DD 0ac757296H
	DW	03522H
	DW	04e11H
	DB	098H
	DB	062H
	DB	0c1H
	DB	07bH
	DB	0e5H
	DB	0a1H
	DB	076H
	DB	07eH
CONST	ENDS
;	COMDAT _CATID_WICBitmapDecoders
CONST	SEGMENT
_CATID_WICBitmapDecoders DD 07ed96837H
	DW	096f0H
	DW	04812H
	DB	0b2H
	DB	011H
	DB	0f1H
	DB	03cH
	DB	024H
	DB	011H
	DB	07eH
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_WICImagingCategories
CONST	SEGMENT
_CLSID_WICImagingCategories DD 0fae3d380H
	DW	0fea4H
	DW	04623H
	DB	08cH
	DB	075H
	DB	0c6H
	DB	0b6H
	DB	011H
	DB	010H
	DB	0b6H
	DB	081H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatDds
CONST	SEGMENT
_GUID_ContainerFormatDds DD 09967cb95H
	DW	02e85H
	DW	04ac8H
	DB	08cH
	DB	0a2H
	DB	083H
	DB	0d7H
	DB	0ccH
	DB	0d4H
	DB	025H
	DB	0c9H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatWmp
CONST	SEGMENT
_GUID_ContainerFormatWmp DD 057a37caaH
	DW	0367aH
	DW	04540H
	DB	091H
	DB	06bH
	DB	0f1H
	DB	083H
	DB	0c5H
	DB	09H
	DB	03aH
	DB	04bH
CONST	ENDS
;	COMDAT _GUID_ContainerFormatGif
CONST	SEGMENT
_GUID_ContainerFormatGif DD 01f8a5601H
	DW	07d4dH
	DW	04cbdH
	DB	09cH
	DB	082H
	DB	01bH
	DB	0c8H
	DB	0d4H
	DB	0eeH
	DB	0b9H
	DB	0a5H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatTiff
CONST	SEGMENT
_GUID_ContainerFormatTiff DD 0163bcc30H
	DW	0e2e9H
	DW	04f0bH
	DB	096H
	DB	01dH
	DB	0a3H
	DB	0e9H
	DB	0fdH
	DB	0b7H
	DB	088H
	DB	0a3H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatJpeg
CONST	SEGMENT
_GUID_ContainerFormatJpeg DD 019e4a5aaH
	DW	05662H
	DW	04fc5H
	DB	0a0H
	DB	0c0H
	DB	017H
	DB	058H
	DB	02H
	DB	08eH
	DB	010H
	DB	057H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatIco
CONST	SEGMENT
_GUID_ContainerFormatIco DD 0a3a860c4H
	DW	0338fH
	DW	04c17H
	DB	091H
	DB	09aH
	DB	0fbH
	DB	0a4H
	DB	0b5H
	DB	062H
	DB	08fH
	DB	021H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
;	COMDAT _IID_ID3D11LibraryReflection
CONST	SEGMENT
_IID_ID3D11LibraryReflection DD 054384f1bH
	DW	05b3eH
	DW	04bb7H
	DB	0aeH
	DB	01H
	DB	060H
	DB	0baH
	DB	030H
	DB	097H
	DB	0cbH
	DB	0b6H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatBmp
CONST	SEGMENT
_GUID_ContainerFormatBmp DD 0af1d87eH
	DW	0fcfeH
	DW	04188H
	DB	0bdH
	DB	0ebH
	DB	0a7H
	DB	090H
	DB	064H
	DB	071H
	DB	0cbH
	DB	0e3H
CONST	ENDS
CONST	SEGMENT
$SG152594 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG152595 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'B', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H
	DB	'(', 00H, ')', 00H, '-', 00H, '>', 00H, 'W', 00H, 'i', 00H, 'd'
	DB	00H, 't', 00H, 'h', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'(', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H, ')', 00H, 'r'
	DB	00H, 'c', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '.', 00H, 'r', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't'
	DB	00H, 00H, 00H
$SG152598 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152599 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'B', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'S', 00H, 'u', 00H, 'r', 00H, 'f', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H
	DB	'(', 00H, ')', 00H, '-', 00H, '>', 00H, 'H', 00H, 'e', 00H, 'i'
	DB	00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '(', 00H, 'U', 00H, 'I', 00H, 'N', 00H, 'T', 00H, ')'
	DB	00H, 'r', 00H, 'c', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, '.', 00H, 'b', 00H, 'o', 00H, 't', 00H, 't'
	DB	00H, 'o', 00H, 'm', 00H, 00H, 00H
$SG153632 DB	' ', 00H, '(', 00H, 'M', 00H, 'S', 00H, '%', 00H, 'u', 00H
	DB	',', 00H, ' ', 00H, 'Q', 00H, '%', 00H, 'u', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG153635 DB	'o', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG153636 DB	'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG153656 DB	00H, 00H
	ORG $+2
$SG153637 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, ' ', 00H
	DB	'%', 00H, '%', 00H, 's', 00H, 'V', 00H, 's', 00H, 'y', 00H, 'n'
	DB	00H, 'c', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H, '(', 00H
	DB	'%', 00H, 'u', 00H, 'x', 00H, '%', 00H, 'u', 00H, ')', 00H, ','
	DB	00H, ' ', 00H, '%', 00H, 's', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG153649 DB	'%', 00H, '0', 00H, '.', 00H, '2', 00H, 'f', 00H, ' ', 00H
	DB	'f', 00H, 'p', 00H, 's', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG151611 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'f', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'l'
	DB	00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l', 00H, 00H, 00H
$SG151614 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'1', 00H, '_', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG151617 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'1', 00H, '_', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG153666 DB	'R', 00H, 'E', 00H, 'F', 00H, 'E', 00H, 'R', 00H, 'E', 00H
	DB	'N', 00H, 'C', 00H, 'E', 00H, 00H, 00H
$SG151620 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'0', 00H, '_', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG153669 DB	'H', 00H, 'A', 00H, 'R', 00H, 'D', 00H, 'W', 00H, 'A', 00H
	DB	'R', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG151623 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '1', 00H
	DB	'0', 00H, '_', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG153672 DB	'S', 00H, 'O', 00H, 'F', 00H, 'T', 00H, 'W', 00H, 'A', 00H
	DB	'R', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG151626 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '9', 00H
	DB	'_', 00H, '3', 00H, 00H, 00H
$SG153675 DB	'W', 00H, 'A', 00H, 'R', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG153677 DB	':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG151629 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '9', 00H
	DB	'_', 00H, '2', 00H, 00H, 00H
$SG151632 DB	'D', 00H, '3', 00H, 'D', 00H, '_', 00H, 'F', 00H, 'E', 00H
	DB	'A', 00H, 'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, '_', 00H, 'L'
	DB	00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, '_', 00H, '9', 00H
	DB	'_', 00H, '1', 00H, 00H, 00H
$SG151634 DB	'a', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG153684 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153685 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG151638 DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG151640 DB	'o', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG151644 DB	'f', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 's', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG151646 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'h', 00H
	DB	'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG153695 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '9', 00H
	DB	'.', 00H, '1', 00H, ')', 00H, 00H, 00H
$SG151648 DB	's', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	's', 00H, 'h', 00H, 'o', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'i'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG153697 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '9', 00H
	DB	'.', 00H, '2', 00H, ')', 00H, 00H, 00H
$SG151650 DB	'%', 00H, 's', 00H, '.', 00H, 'b', 00H, 'm', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG153699 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '9', 00H
	DB	'.', 00H, '3', 00H, ')', 00H, 00H, 00H
$SG151652 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG153701 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'0', 00H, '.', 00H, '0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG151654 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'w', 00H
	DB	'a', 00H, 'r', 00H, 'p', 00H, 00H, 00H
$SG153703 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'0', 00H, '.', 00H, '1', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG151656 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'v', 00H
	DB	's', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG153705 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'1', 00H, '.', 00H, '0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG153707 DB	' ', 00H, '(', 00H, 'F', 00H, 'L', 00H, ' ', 00H, '1', 00H
	DB	'1', 00H, '.', 00H, '1', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG151660 DB	'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG152686 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152687 DB	'p', 00H, 'I', 00H, 'm', 00H, 'm', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'x', 00H, 't', 00H, 00H, 00H
$SG151664 DB	'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG151668 DB	's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'x', 00H
	DB	00H, 00H
	ORG $+2
$SG151672 DB	's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG151676 DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	'n', 00H, 't', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG151682 DB	'q', 00H, 'u', 00H, 'i', 00H, 't', 00H, 'a', 00H, 'f', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG151686 DB	'n', 00H, 'o', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H
	DB	'r', 00H, 'm', 00H, 's', 00H, 'g', 00H, 'b', 00H, 'o', 00H, 'x'
	DB	00H, 'e', 00H, 's', 00H, 00H, 00H
$SG152711 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'l', 00H
	DB	'e', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'p', 00H, '3', 00H, 'D'
	DB	00H, 'E', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 'r', 00H, 'o', 00H
	DB	'n', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG152712 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151688 DB	'n', 00H, 'o', 00H, 's', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	's', 00H, 00H, 00H
$SG151690 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG151695 DB	'U', 00H, 'n', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 'o', 00H
	DB	'g', 00H, 'n', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, ':', 00H, ' ', 00H
	DB	'%', 00H, 's', 00H, 00H, 00H
$SG151728 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG151729 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151745 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	00H, 00H
$SG151750 DB	'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, 00H, 00H
$SG151751 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151764 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	00H, 00H
$SG151768 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H
	DB	00H
	ORG $+2
$SG151769 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152802 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG152803 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151781 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG151782 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151787 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 00H, 00H
$SG151788 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151795 DB	'S', 00H, 'e', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'o', 00H, 'n', 00H, 'g'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG151796 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151955 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	00H, 00H
$SG152980 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'K', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r'
	DB	00H, 00H, 00H
$SG152981 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151971 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'M', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, 'L', 00H, 'o', 00H, 'o', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG151972 DB	'DXUT.cpp', 00H
	ORG $+3
$SG151989 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'M', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, 'L', 00H, 'o', 00H, 'o', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG151990 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153026 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, '3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG153033 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'e', 00H, 's'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'w', 00H
	DB	'o', 00H, 'r', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'v', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 't', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H
	DB	00H, 00H
$SG152013 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG153035 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, ' ', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, '3', 00H, 'D', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, '.', 00H, 00H, 00H
$SG152014 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153041 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'q', 00H, 'u', 00H
	DB	'i', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'e'
	DB	00H, 'd', 00H, 'i', 00H, 'a', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152018 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG152032 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG153047 DB	'T', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, '3', 00H, 'D', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'h', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'a', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H, 'e', 00H
	DB	'r', 00H, 'o', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'm', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 's', 00H, 'o', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'e', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'd', 00H, '.'
	DB	00H, 00H, 00H
$SG153053 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '3', 00H, 'D', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152036 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG152033 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, '.', 00H, 00H
	DB	00H
	ORG $+2
$SG153059 DB	'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, '3', 00H, 'D', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '.', 00H, 00H, 00H
$SG152040 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG152037 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, ',', 00H, ' '
	DB	00H, 'b', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, 'a', 00H, 'v', 00H, 'a', 00H, 'i', 00H, 'l'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i', 00H, 's'
	DB	00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H
	DB	'.', 00H, 0aH, 00H, 'F', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd'
	DB	00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'i'
	DB	00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H
	DB	't', 00H, ' ', 00H, 'K', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 'l'
	DB	00H, 'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'B', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'A', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '#', 00H
	DB	'9', 00H, '7', 00H, '1', 00H, '6', 00H, '4', 00H, '4', 00H, 0aH
	DB	00H, 'h', 00H, 't', 00H, 't', 00H, 'p', 00H, ':', 00H, '/', 00H
	DB	'/', 00H, 'g', 00H, 'o', 00H, '.', 00H, 'm', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	'.', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '/', 00H, 'f', 00H, 'w'
	DB	00H, 'l', 00H, 'i', 00H, 'n', 00H, 'k', 00H, '/', 00H, '?', 00H
	DB	'L', 00H, 'i', 00H, 'n', 00H, 'k', 00H, 'I', 00H, 'd', 00H, '='
	DB	00H, '1', 00H, '6', 00H, '0', 00H, '1', 00H, '8', 00H, '9', 00H
	DB	00H, 00H
	ORG $+2
$SG152043 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
$SG153065 DB	'A', 00H, 'n', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'c', 00H, 'c', 00H, 'u'
	DB	00H, 'r', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'd'
	DB	00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 00H, 00H
$SG153082 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, ' ', 00H, 'A', 00H
	DB	'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG152041 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, '.', 00H, ' '
	DB	00H, 'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, ' '
	DB	00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.'
	DB	00H, 0aH, 00H, 'F', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H
	DB	'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'K', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 'l', 00H
	DB	'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'B', 00H, 'a'
	DB	00H, 's', 00H, 'e', 00H, ' ', 00H, 'A', 00H, 'r', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '#', 00H, '9'
	DB	00H, '3', 00H, '5', 00H, '7', 00H, '9', 00H, '1', 00H, 0aH, 00H
	DB	'h', 00H, 't', 00H, 't', 00H, 'p', 00H, ':', 00H, '/', 00H, '/'
	DB	00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, '.', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o'
	DB	00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, '.', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '/', 00H, 'k', 00H, 'b', 00H, '/', 00H, '9'
	DB	00H, '3', 00H, '5', 00H, '7', 00H, '9', 00H, '1', 00H, '/', 00H
	DB	00H, 00H
$SG152044 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, '1', 00H, '1', 00H, ' ', 00H, 'i'
	DB	00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'S'
	DB	00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152059 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'3', 00H, 'D', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG152088 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153071 DB	'A', 00H, 'n', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'c', 00H, 'c', 00H, 'u'
	DB	00H, 'r', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'd'
	DB	00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, ' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG152087 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd'
	DB	00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 's', 00H, 00H, 00H
$SG152109 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153077 DB	'T', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, '3', 00H, 'D', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'w', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'd', 00H, '.', 00H
	DB	00H, 00H
	ORG $+2
$SG152108 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd'
	DB	00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 's', 00H, 00H, 00H
$SG153176 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153177 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG153200 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153201 DB	'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG153207 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153208 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG153212 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153213 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'I', 00H, 'm', 00H
	DB	'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG153231 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153230 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 's', 00H, '('
	DB	00H, ' ', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'S', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's'
	DB	00H, '-', 00H, '>', 00H, 'd', 00H, '3', 00H, 'd', 00H, '1', 00H
	DB	'1', 00H, '.', 00H, 's', 00H, 'd', 00H, '.', 00H, 'B', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'C', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 't', 00H, ',', 00H, ' ', 00H, 'W', 00H, 'i'
	DB	00H, 'd', 00H, 't', 00H, 'h', 00H, ',', 00H, ' ', 00H, 'H', 00H
	DB	'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '-'
	DB	00H, '>', 00H, 'd', 00H, '3', 00H, 'd', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, 's', 00H, 'd', 00H, '.', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'D', 00H, 'e', 00H, 's', 00H
	DB	'c', 00H, '.', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, ',', 00H, ' ', 00H, 'F', 00H, 'l', 00H, 'a', 00H
	DB	'g', 00H, 's', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG153238 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, '3', 00H, 'D'
	DB	00H, '1', 00H, '1', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG153239 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153248 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 'C', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	00H, 00H
$SG153249 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153267 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153268 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG152279 DB	'DXUT', 00H
	ORG $+3
$SG153306 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153307 DB	'p', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG152285 DB	'DXUT', 00H
	ORG $+3
$SG152291 DB	'DXUT', 00H
	ORG $+3
_XM_PI	DD	040490fdbr			; 3.14159
_XM_2PI	DD	040c90fdbr			; 6.28319
_XM_1DIVPI DD	03ea2f983r			; 0.31831
_XM_1DIV2PI DD	03e22f983r			; 0.159155
_XM_PIDIV2 DD	03fc90fdbr			; 1.5708
_XM_PIDIV4 DD	03f490fdbr			; 0.785398
$SG152305 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152306 DB	'p', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't'
	DB	00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG152310 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152311 DB	'p', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'F', 00H
	DB	'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
	ORG $+2
$SG152333 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'C', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG152334 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152371 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152370 DB	'p', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, '(', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'T', 00H, 'e'
	DB	00H, 'm', 00H, 'p', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG152378 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152377 DB	'p', 00H, 'T', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 'A', 00H
	DB	'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-'
	DB	00H, '>', 00H, 'Q', 00H, 'u', 00H, 'e', 00H, 'r', 00H, 'y', 00H
	DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, '(', 00H, ' ', 00H, '_', 00H, '_', 00H
	DB	'u', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'o', 00H, 'f', 00H, '('
	DB	00H, ' ', 00H, 'I', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H
	DB	'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, '1', 00H, ' ', 00H, ')', 00H, ',', 00H, ' ', 00H, '(', 00H
	DB	'L', 00H, 'P', 00H, 'V', 00H, 'O', 00H, 'I', 00H, 'D', 00H, '*'
	DB	00H, ')', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'A', 00H, 'd', 00H
	DB	'a', 00H, 'p', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG151355 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG151356 DB	'g', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'X', 00H, 'U', 00H
	DB	'T', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG152383 DB	'p', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'P', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'(', 00H, ' ', 00H, '_', 00H, '_', 00H, 'u', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'o', 00H, 'f', 00H, '(', 00H, ' ', 00H, 'I', 00H
	DB	'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'F', 00H, 'a', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '1', 00H, ' ', 00H
	DB	')', 00H, ',', 00H, ' ', 00H, '(', 00H, 'L', 00H, 'P', 00H, 'V'
	DB	00H, 'O', 00H, 'I', 00H, 'D', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'&', 00H, 'p', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I', 00H, 'F'
	DB	00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	' ', 00H, ')', 00H, 00H, 00H
$SG152384 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152391 DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'C', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG152392 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152402 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'R', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 00H, 00H
$SG152403 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152408 DB	'DXUT Default', 00H
	ORG $+3
$SG152430 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H, 'h', 00H, 'a'
	DB	00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG152431 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152437 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152438 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, '1', 00H, '1', 00H
	DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG152440 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152441 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'I', 00H, 'm', 00H
	DB	'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG152458 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152459 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG152473 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG152474 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152490 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H, '3', 00H, 'D'
	DB	00H, '1', 00H, '1', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG152491 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152504 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, 00H, 00H
	ORG $+2
$SG152505 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152528 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG152529 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG152541 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152540 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'S'
	DB	00H, 'e', 00H, 't', 00H, 'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, '(', 00H, ' ', 00H
	DB	'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG152547 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152546 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'S'
	DB	00H, 'e', 00H, 't', 00H, 'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, '(', 00H, ' ', 00H
	DB	'T', 00H, 'R', 00H, 'U', 00H, 'E', 00H, ',', 00H, ' ', 00H, 'n'
	DB	00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	' ', 00H, ')', 00H, 00H, 00H
$SG152551 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, '(', 00H, ' '
	DB	00H, '&', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 's', 00H, '-', 00H, '>', 00H, 'd', 00H
	DB	'3', 00H, 'd', 00H, '1', 00H, '1', 00H, '.', 00H, 's', 00H, 'd'
	DB	00H, '.', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ' ', 00H, ')'
	DB	00H, 00H, 00H
$SG152552 DB	'DXUT.cpp', 00H
	ORG $+3
$SG152561 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, '(', 00H, ' '
	DB	00H, '&', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 's', 00H, '-', 00H, '>', 00H, 'd', 00H
	DB	'3', 00H, 'd', 00H, '1', 00H, '1', 00H, '.', 00H, 's', 00H, 'd'
	DB	00H, '.', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ' ', 00H, ')'
	DB	00H, 00H, 00H
$SG152562 DB	'DXUT.cpp', 00H
	ORG $+3
$SG153596 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG153597 DB	'p', 00H, 'S', 00H, 'w', 00H, 'a', 00H, 'p', 00H, 'C', 00H
	DB	'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _CLSID_WICDdsEncoder
CONST	SEGMENT
_CLSID_WICDdsEncoder DD 0a61dde94H
	DW	066ceH
	DW	04ac1H
	DB	088H
	DB	01bH
	DB	071H
	DB	068H
	DB	05H
	DB	088H
	DB	089H
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_WICWmpEncoder
CONST	SEGMENT
_CLSID_WICWmpEncoder DD 0ac4ce3cbH
	DW	0e1c1H
	DW	044cdH
	DB	082H
	DB	015H
	DB	05aH
	DB	016H
	DB	065H
	DB	050H
	DB	09eH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICTiffEncoder
CONST	SEGMENT
_CLSID_WICTiffEncoder DD 0131be10H
	DW	02001H
	DW	04c5fH
	DB	0a9H
	DB	0b0H
	DB	0ccH
	DB	088H
	DB	0faH
	DB	0b6H
	DB	04cH
	DB	0e8H
CONST	ENDS
;	COMDAT _CLSID_WICGifEncoder
CONST	SEGMENT
_CLSID_WICGifEncoder DD 0114f5598H
	DW	0b22H
	DW	040a0H
	DB	086H
	DB	0a1H
	DB	0c8H
	DB	03eH
	DB	0a4H
	DB	095H
	DB	0adH
	DB	0bdH
CONST	ENDS
;	COMDAT _CLSID_WICJpegEncoder
CONST	SEGMENT
_CLSID_WICJpegEncoder DD 01a34f5c1H
	DW	04a5aH
	DW	046dcH
	DB	0b6H
	DB	044H
	DB	01fH
	DB	045H
	DB	067H
	DB	0e7H
	DB	0a6H
	DB	076H
CONST	ENDS
;	COMDAT _CLSID_WICPngEncoder
CONST	SEGMENT
_CLSID_WICPngEncoder DD 027949969H
	DW	0876aH
	DW	041d7H
	DB	094H
	DB	047H
	DB	056H
	DB	08fH
	DB	06aH
	DB	035H
	DB	0a4H
	DB	0dcH
CONST	ENDS
;	COMDAT _CLSID_WICBmpEncoder
CONST	SEGMENT
_CLSID_WICBmpEncoder DD 069be8bb4H
	DW	0d66dH
	DW	047c8H
	DB	086H
	DB	05aH
	DB	0edH
	DB	015H
	DB	089H
	DB	043H
	DB	037H
	DB	082H
CONST	ENDS
;	COMDAT _CLSID_WICDdsDecoder
CONST	SEGMENT
_CLSID_WICDdsDecoder DD 09053699fH
	DW	0a341H
	DW	0429dH
	DB	09eH
	DB	090H
	DB	0eeH
	DB	043H
	DB	07cH
	DB	0f8H
	DB	0cH
	DB	073H
CONST	ENDS
;	COMDAT _CLSID_WICWmpDecoder
CONST	SEGMENT
_CLSID_WICWmpDecoder DD 0a26cec36H
	DW	0234cH
	DW	04950H
	DB	0aeH
	DB	016H
	DB	0e3H
	DB	04aH
	DB	0acH
	DB	0e7H
	DB	01dH
	DB	0dH
CONST	ENDS
;	COMDAT _CLSID_WICTiffDecoder
CONST	SEGMENT
_CLSID_WICTiffDecoder DD 0b54e85d9H
	DW	0fe23H
	DW	0499fH
	DB	08bH
	DB	088H
	DB	06aH
	DB	0ceH
	DB	0a7H
	DB	013H
	DB	075H
	DB	02bH
CONST	ENDS
;	COMDAT _CLSID_WICGifDecoder
CONST	SEGMENT
_CLSID_WICGifDecoder DD 0381dda3cH
	DW	09ce9H
	DW	04834H
	DB	0a2H
	DB	03eH
	DB	01fH
	DB	098H
	DB	0f8H
	DB	0fcH
	DB	052H
	DB	0beH
CONST	ENDS
;	COMDAT _CLSID_WICJpegDecoder
CONST	SEGMENT
_CLSID_WICJpegDecoder DD 09456a480H
	DW	0e88bH
	DW	043eaH
	DB	09eH
	DB	073H
	DB	0bH
	DB	02dH
	DB	09bH
	DB	071H
	DB	0b1H
	DB	0caH
CONST	ENDS
;	COMDAT _CLSID_WICIcoDecoder
CONST	SEGMENT
_CLSID_WICIcoDecoder DD 0c61bfcdfH
	DW	02e0fH
	DW	04aadH
	DB	0a8H
	DB	0d7H
	DB	0e0H
	DB	06bH
	DB	0afH
	DB	0ebH
	DB	0cdH
	DB	0feH
CONST	ENDS
;	COMDAT _CLSID_WICBmpDecoder
CONST	SEGMENT
_CLSID_WICBmpDecoder DD 06b462062H
	DW	07cbfH
	DW	0400dH
	DB	09fH
	DB	0dbH
	DB	081H
	DB	03dH
	DB	0d1H
	DB	0fH
	DB	027H
	DB	078H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder2
CONST	SEGMENT
_CLSID_WICPngDecoder2 DD 0e018945bH
	DW	0aa86H
	DW	04008H
	DB	09bH
	DB	0d4H
	DB	067H
	DB	077H
	DB	0a1H
	DB	0e4H
	DB	0cH
	DB	011H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder1
CONST	SEGMENT
_CLSID_WICPngDecoder1 DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder
CONST	SEGMENT
_CLSID_WICPngDecoder DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoftBuiltIn
CONST	SEGMENT
_GUID_VendorMicrosoftBuiltIn DD 0257a30fdH
	DW	06b6H
	DW	0462bH
	DB	0aeH
	DB	0a4H
	DB	063H
	DB	0f7H
	DB	0bH
	DB	086H
	DB	0e5H
	DB	033H
CONST	ENDS
;	COMDAT _IID_ID3D10Predicate
CONST	SEGMENT
_IID_ID3D10Predicate DD 09b7e4c10H
	DW	0342cH
	DW	04106H
	DB	0a1H
	DB	09fH
	DB	04fH
	DB	027H
	DB	04H
	DB	0f6H
	DB	089H
	DB	0f0H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoft
CONST	SEGMENT
_GUID_VendorMicrosoft DD 0f0e749caH
	DW	0edefH
	DW	04589H
	DB	0a7H
	DB	03aH
	DB	0eeH
	DB	0eH
	DB	062H
	DB	06aH
	DB	02aH
	DB	02bH
CONST	ENDS
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	_hypot
PUBLIC	_|
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?DXUTSetCallbackFrameMove@@YGXP6GXNMPAX@Z0@Z	; DXUTSetCallbackFrameMove
PUBLIC	?DXUTSetCallbackKeyboard@@YGXP6GXI_N0PAX@Z1@Z	; DXUTSetCallbackKeyboard
PUBLIC	?DXUTSetCallbackMouse@@YGXP6GX_N0000HHHPAX@Z01@Z ; DXUTSetCallbackMouse
PUBLIC	?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z ; DXUTSetCallbackMsgProc
PUBLIC	?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z ; DXUTSetCallbackDeviceChanging
PUBLIC	?DXUTSetCallbackDeviceRemoved@@YGXP6G_NPAX@Z0@Z	; DXUTSetCallbackDeviceRemoved
PUBLIC	?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z ; DXUTSetCallbackD3D11DeviceAcceptable
PUBLIC	?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z ; DXUTSetCallbackD3D11DeviceCreated
PUBLIC	?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z ; DXUTSetCallbackD3D11SwapChainResized
PUBLIC	?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z ; DXUTSetCallbackD3D11FrameRender
PUBLIC	?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11SwapChainReleasing
PUBLIC	?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11DeviceDestroyed
PUBLIC	?DXUTInit@@YGJ_N0PA_W0@Z			; DXUTInit
PUBLIC	?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
PUBLIC	?DXUTSetWindow@@YGJPAUHWND__@@00_N@Z		; DXUTSetWindow
PUBLIC	?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z		; DXUTStaticWndProc
PUBLIC	?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ; DXUTCreateDevice
PUBLIC	?DXUTCreateDeviceFromSettings@@YGJPAUDXUTDeviceSettings@@_N@Z ; DXUTCreateDeviceFromSettings
PUBLIC	?DXUTMainLoop@@YGJPAUHACCEL__@@@Z		; DXUTMainLoop
PUBLIC	?DXUTRender3DEnvironment@@YGXXZ			; DXUTRender3DEnvironment
PUBLIC	?DXUTToggleFullScreen@@YGJXZ			; DXUTToggleFullScreen
PUBLIC	?DXUTToggleREF@@YGJXZ				; DXUTToggleREF
PUBLIC	?DXUTToggleWARP@@YGJXZ				; DXUTToggleWARP
PUBLIC	?DXUTPause@@YGX_N0@Z				; DXUTPause
PUBLIC	?DXUTSetConstantFrameTime@@YGX_NM@Z		; DXUTSetConstantFrameTime
PUBLIC	?DXUTSetCursorSettings@@YGX_N0@Z		; DXUTSetCursorSettings
PUBLIC	?DXUTSetHotkeyHandling@@YGX_N00@Z		; DXUTSetHotkeyHandling
PUBLIC	?DXUTSetMultimonSettings@@YGX_N@Z		; DXUTSetMultimonSettings
PUBLIC	?DXUTSetShortcutKeySettings@@YGX_N0@Z		; DXUTSetShortcutKeySettings
PUBLIC	?DXUTSetWindowSettings@@YGX_N@Z			; DXUTSetWindowSettings
PUBLIC	?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z		; DXUTSetTimer
PUBLIC	?DXUTKillTimer@@YGJI@Z				; DXUTKillTimer
PUBLIC	?DXUTResetFrameworkState@@YGXXZ			; DXUTResetFrameworkState
PUBLIC	?DXUTShutdown@@YGXH@Z				; DXUTShutdown
PUBLIC	?DXUTSetIsInGammaCorrectMode@@YGX_N@Z		; DXUTSetIsInGammaCorrectMode
PUBLIC	?DXUTGetMSAASwapChainCreated@@YG_NXZ		; DXUTGetMSAASwapChainCreated
PUBLIC	?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ	; DXUTGetDXGIFactory
PUBLIC	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ	; DXUTGetDXGISwapChain
PUBLIC	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
PUBLIC	?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z ; DXUTSetupD3D11Views
PUBLIC	?DXUTGetD3D11DeviceFeatureLevel@@YG?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTGetD3D11DeviceFeatureLevel
PUBLIC	?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ ; DXUTGetD3D11RenderTargetView
PUBLIC	?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ ; DXUTGetD3D11DepthStencilView
PUBLIC	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ	; DXUTGetD3D11Device
PUBLIC	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
PUBLIC	?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ	; DXUTGetD3D11Device1
PUBLIC	?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ ; DXUTGetD3D11DeviceContext1
PUBLIC	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
PUBLIC	?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ		; DXUTGetHINSTANCE
PUBLIC	?DXUTGetHWND@@YGPAUHWND__@@XZ			; DXUTGetHWND
PUBLIC	?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ		; DXUTGetHWNDFocus
PUBLIC	?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ	; DXUTGetHWNDDeviceFullScreen
PUBLIC	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ	; DXUTGetHWNDDeviceWindowed
PUBLIC	?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ	; DXUTGetWindowClientRect
PUBLIC	?DXUTGetWindowWidth@@YGJXZ			; DXUTGetWindowWidth
PUBLIC	?DXUTGetWindowHeight@@YGJXZ			; DXUTGetWindowHeight
PUBLIC	?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRectAtModeChange
PUBLIC	?DXUTGetFullsceenClientRectAtModeChange@@YG?AUtagRECT@@XZ ; DXUTGetFullsceenClientRectAtModeChange
PUBLIC	?DXUTGetTime@@YGNXZ				; DXUTGetTime
PUBLIC	?DXUTGetElapsedTime@@YGMXZ			; DXUTGetElapsedTime
PUBLIC	?DXUTIsWindowed@@YG_NXZ				; DXUTIsWindowed
PUBLIC	?DXUTIsInGammaCorrectMode@@YG_NXZ		; DXUTIsInGammaCorrectMode
PUBLIC	?DXUTGetFPS@@YGMXZ				; DXUTGetFPS
PUBLIC	?DXUTGetWindowTitle@@YGPB_WXZ			; DXUTGetWindowTitle
PUBLIC	?DXUTGetFrameStats@@YGPB_W_N@Z			; DXUTGetFrameStats
PUBLIC	?DXUTGetDeviceStats@@YGPB_WXZ			; DXUTGetDeviceStats
PUBLIC	?DXUTIsVsyncEnabled@@YG_NXZ			; DXUTIsVsyncEnabled
PUBLIC	?DXUTIsRenderingPaused@@YG_NXZ			; DXUTIsRenderingPaused
PUBLIC	?DXUTIsTimePaused@@YG_NXZ			; DXUTIsTimePaused
PUBLIC	?DXUTIsActive@@YG_NXZ				; DXUTIsActive
PUBLIC	?DXUTGetExitCode@@YGHXZ				; DXUTGetExitCode
PUBLIC	?DXUTGetShowMsgBoxOnError@@YG_NXZ		; DXUTGetShowMsgBoxOnError
PUBLIC	?DXUTGetAutomation@@YG_NXZ			; DXUTGetAutomation
PUBLIC	?DXUTIsKeyDown@@YG_NE@Z				; DXUTIsKeyDown
PUBLIC	?DXUTWasKeyPressed@@YG_NE@Z			; DXUTWasKeyPressed
PUBLIC	?DXUTIsMouseButtonDown@@YG_NE@Z			; DXUTIsMouseButtonDown
PUBLIC	?DXUTCreateState@@YGJXZ				; DXUTCreateState
PUBLIC	?DXUTDestroyState@@YGXXZ			; DXUTDestroyState
PUBLIC	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
PUBLIC	?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTApplyDefaultDeviceSettings
PUBLIC	?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetWARPFeaturevel
PUBLIC	?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetREFFeaturevel
PUBLIC	?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin
PUBLIC	?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end
PUBLIC	?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
PUBLIC	?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
PUBLIC	?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty
PUBLIC	?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin
PUBLIC	?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end
PUBLIC	?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
PUBLIC	?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
PUBLIC	?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
PUBLIC	??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[]
PUBLIC	?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size
PUBLIC	??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[]
PUBLIC	?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
PUBLIC	??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??0DXUTLock@@QAE@XZ				; DXUTLock::DXUTLock
PUBLIC	??1DXUTLock@@QAE@XZ				; DXUTLock::~DXUTLock
PUBLIC	??0DXUTState@@QAE@XZ				; DXUTState::DXUTState
PUBLIC	??1DXUTState@@QAE@XZ				; DXUTState::~DXUTState
PUBLIC	?Create@DXUTState@@QAEXXZ			; DXUTState::Create
PUBLIC	?Destroy@DXUTState@@QAEXXZ			; DXUTState::Destroy
PUBLIC	?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
PUBLIC	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
PUBLIC	?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
PUBLIC	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
PUBLIC	?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ; DXUTState::SetDXGIAdapter
PUBLIC	?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ ; DXUTState::GetDXGIAdapter
PUBLIC	?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ; DXUTState::SetDXGIOutputArray
PUBLIC	?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ ; DXUTState::GetDXGIOutputArray
PUBLIC	?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z	; DXUTState::SetDXGIOutputArraySize
PUBLIC	?GetDXGIOutputArraySize@DXUTState@@QAEIXZ	; DXUTState::GetDXGIOutputArraySize
PUBLIC	?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ; DXUTState::SetDXGISwapChain
PUBLIC	?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ; DXUTState::GetDXGISwapChain
PUBLIC	?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
PUBLIC	?SetRenderingOccluded@DXUTState@@QAEX_N@Z	; DXUTState::SetRenderingOccluded
PUBLIC	?GetRenderingOccluded@DXUTState@@QAE_NXZ	; DXUTState::GetRenderingOccluded
PUBLIC	?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z	; DXUTState::SetDoNotStoreBufferSize
PUBLIC	?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ	; DXUTState::GetDoNotStoreBufferSize
PUBLIC	?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ; DXUTState::SetD3D11Device
PUBLIC	?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ ; DXUTState::GetD3D11Device
PUBLIC	?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ; DXUTState::SetD3D11DeviceContext
PUBLIC	?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ ; DXUTState::GetD3D11DeviceContext
PUBLIC	?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetD3D11FeatureLevel
PUBLIC	?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetD3D11FeatureLevel
PUBLIC	?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
PUBLIC	?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ; DXUTState::GetD3D11DepthStencil
PUBLIC	?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
PUBLIC	?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
PUBLIC	?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
PUBLIC	?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
PUBLIC	?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z ; DXUTState::SetD3D11RasterizerState
PUBLIC	?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ; DXUTState::GetD3D11RasterizerState
PUBLIC	?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ; DXUTState::SetD3D11Device1
PUBLIC	?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ ; DXUTState::GetD3D11Device1
PUBLIC	?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ; DXUTState::SetD3D11DeviceContext1
PUBLIC	?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ ; DXUTState::GetD3D11DeviceContext1
PUBLIC	?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z	; DXUTState::SetHWNDFocus
PUBLIC	?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ	; DXUTState::GetHWNDFocus
PUBLIC	?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
PUBLIC	?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceFullScreen
PUBLIC	?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
PUBLIC	?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceWindowed
PUBLIC	?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z ; DXUTState::SetAdapterMonitor
PUBLIC	?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ ; DXUTState::GetAdapterMonitor
PUBLIC	?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ		; DXUTState::GetMenu
PUBLIC	?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
PUBLIC	?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferWidthAtModeChange
PUBLIC	?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
PUBLIC	?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferHeightAtModeChange
PUBLIC	?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
PUBLIC	?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferWidthAtModeChange
PUBLIC	?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
PUBLIC	?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferHeightAtModeChange
PUBLIC	?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ ; DXUTState::GetWindowedPlacement
PUBLIC	?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ	; DXUTState::GetWindowedStyleAtModeChange
PUBLIC	?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ	; DXUTState::GetTopmostWhileWindowed
PUBLIC	?SetMinimized@DXUTState@@QAEX_N@Z		; DXUTState::SetMinimized
PUBLIC	?GetMinimized@DXUTState@@QAE_NXZ		; DXUTState::GetMinimized
PUBLIC	?SetMaximized@DXUTState@@QAEX_N@Z		; DXUTState::SetMaximized
PUBLIC	?GetMaximized@DXUTState@@QAE_NXZ		; DXUTState::GetMaximized
PUBLIC	?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimizedWhileFullscreen
PUBLIC	?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ	; DXUTState::GetMinimizedWhileFullscreen
PUBLIC	?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z	; DXUTState::SetIgnoreSizeChange
PUBLIC	?GetIgnoreSizeChange@DXUTState@@QAE_NXZ		; DXUTState::GetIgnoreSizeChange
PUBLIC	?SetTime@DXUTState@@QAEXN@Z			; DXUTState::SetTime
PUBLIC	?GetTime@DXUTState@@QAENXZ			; DXUTState::GetTime
PUBLIC	?SetAbsoluteTime@DXUTState@@QAEXN@Z		; DXUTState::SetAbsoluteTime
PUBLIC	?GetAbsoluteTime@DXUTState@@QAENXZ		; DXUTState::GetAbsoluteTime
PUBLIC	?SetElapsedTime@DXUTState@@QAEXM@Z		; DXUTState::SetElapsedTime
PUBLIC	?GetElapsedTime@DXUTState@@QAEMXZ		; DXUTState::GetElapsedTime
PUBLIC	?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z	; DXUTState::SetHInstance
PUBLIC	?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ	; DXUTState::GetHInstance
PUBLIC	?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z	; DXUTState::SetLastStatsUpdateTime
PUBLIC	?GetLastStatsUpdateTime@DXUTState@@QAENXZ	; DXUTState::GetLastStatsUpdateTime
PUBLIC	?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z	; DXUTState::SetLastStatsUpdateFrames
PUBLIC	?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ	; DXUTState::GetLastStatsUpdateFrames
PUBLIC	?SetFPS@DXUTState@@QAEXM@Z			; DXUTState::SetFPS
PUBLIC	?GetFPS@DXUTState@@QAEMXZ			; DXUTState::GetFPS
PUBLIC	?SetCurrentFrameNumber@DXUTState@@QAEXH@Z	; DXUTState::SetCurrentFrameNumber
PUBLIC	?GetCurrentFrameNumber@DXUTState@@QAEHXZ	; DXUTState::GetCurrentFrameNumber
PUBLIC	?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z	; DXUTState::SetKeyboardHook
PUBLIC	?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ	; DXUTState::GetKeyboardHook
PUBLIC	?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenFullscreen
PUBLIC	?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
PUBLIC	?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenWindowed
PUBLIC	?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
PUBLIC	?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z	; DXUTState::SetAllowShortcutKeys
PUBLIC	?GetAllowShortcutKeys@DXUTState@@QAE_NXZ	; DXUTState::GetAllowShortcutKeys
PUBLIC	?SetCallDefWindowProc@DXUTState@@QAEX_N@Z	; DXUTState::SetCallDefWindowProc
PUBLIC	?GetCallDefWindowProc@DXUTState@@QAE_NXZ	; DXUTState::GetCallDefWindowProc
PUBLIC	?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z ; DXUTState::SetStartupStickyKeys
PUBLIC	?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ; DXUTState::GetStartupStickyKeys
PUBLIC	?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z ; DXUTState::SetStartupToggleKeys
PUBLIC	?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ; DXUTState::GetStartupToggleKeys
PUBLIC	?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z ; DXUTState::SetStartupFilterKeys
PUBLIC	?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ; DXUTState::GetStartupFilterKeys
PUBLIC	?SetHandleEscape@DXUTState@@QAEX_N@Z		; DXUTState::SetHandleEscape
PUBLIC	?GetHandleEscape@DXUTState@@QAE_NXZ		; DXUTState::GetHandleEscape
PUBLIC	?SetHandleAltEnter@DXUTState@@QAEX_N@Z		; DXUTState::SetHandleAltEnter
PUBLIC	?SetHandlePause@DXUTState@@QAEX_N@Z		; DXUTState::SetHandlePause
PUBLIC	?GetHandlePause@DXUTState@@QAE_NXZ		; DXUTState::GetHandlePause
PUBLIC	?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z	; DXUTState::SetShowMsgBoxOnError
PUBLIC	?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ	; DXUTState::GetShowMsgBoxOnError
PUBLIC	?SetNoStats@DXUTState@@QAEX_N@Z			; DXUTState::SetNoStats
PUBLIC	?GetNoStats@DXUTState@@QAE_NXZ			; DXUTState::GetNoStats
PUBLIC	?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetClipCursorWhenFullScreen
PUBLIC	?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ	; DXUTState::GetClipCursorWhenFullScreen
PUBLIC	?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetShowCursorWhenFullScreen
PUBLIC	?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ	; DXUTState::GetShowCursorWhenFullScreen
PUBLIC	?SetConstantFrameTime@DXUTState@@QAEX_N@Z	; DXUTState::SetConstantFrameTime
PUBLIC	?GetConstantFrameTime@DXUTState@@QAE_NXZ	; DXUTState::GetConstantFrameTime
PUBLIC	?SetTimePerFrame@DXUTState@@QAEXM@Z		; DXUTState::SetTimePerFrame
PUBLIC	?GetTimePerFrame@DXUTState@@QAEMXZ		; DXUTState::GetTimePerFrame
PUBLIC	?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z	; DXUTState::SetAutoChangeAdapter
PUBLIC	?GetAutoChangeAdapter@DXUTState@@QAE_NXZ	; DXUTState::GetAutoChangeAdapter
PUBLIC	?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
PUBLIC	?SetExitCode@DXUTState@@QAEXH@Z			; DXUTState::SetExitCode
PUBLIC	?GetExitCode@DXUTState@@QAEHXZ			; DXUTState::GetExitCode
PUBLIC	?SetDXUTInited@DXUTState@@QAEX_N@Z		; DXUTState::SetDXUTInited
PUBLIC	?GetDXUTInited@DXUTState@@QAE_NXZ		; DXUTState::GetDXUTInited
PUBLIC	?SetWindowCreated@DXUTState@@QAEX_N@Z		; DXUTState::SetWindowCreated
PUBLIC	?GetWindowCreated@DXUTState@@QAE_NXZ		; DXUTState::GetWindowCreated
PUBLIC	?SetDeviceCreated@DXUTState@@QAEX_N@Z		; DXUTState::SetDeviceCreated
PUBLIC	?GetDeviceCreated@DXUTState@@QAE_NXZ		; DXUTState::GetDeviceCreated
PUBLIC	?SetDXUTInitCalled@DXUTState@@QAEX_N@Z		; DXUTState::SetDXUTInitCalled
PUBLIC	?GetDXUTInitCalled@DXUTState@@QAE_NXZ		; DXUTState::GetDXUTInitCalled
PUBLIC	?SetWindowCreateCalled@DXUTState@@QAEX_N@Z	; DXUTState::SetWindowCreateCalled
PUBLIC	?GetWindowCreateCalled@DXUTState@@QAE_NXZ	; DXUTState::GetWindowCreateCalled
PUBLIC	?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceCreateCalled
PUBLIC	?GetDeviceCreateCalled@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceCreateCalled
PUBLIC	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z	; DXUTState::SetInsideDeviceCallback
PUBLIC	?GetInsideDeviceCallback@DXUTState@@QAE_NXZ	; DXUTState::GetInsideDeviceCallback
PUBLIC	?SetInsideMainloop@DXUTState@@QAEX_N@Z		; DXUTState::SetInsideMainloop
PUBLIC	?GetInsideMainloop@DXUTState@@QAE_NXZ		; DXUTState::GetInsideMainloop
PUBLIC	?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceObjectsCreated
PUBLIC	?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceObjectsCreated
PUBLIC	?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceObjectsReset
PUBLIC	?GetDeviceObjectsReset@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceObjectsReset
PUBLIC	?SetActive@DXUTState@@QAEX_N@Z			; DXUTState::SetActive
PUBLIC	?GetActive@DXUTState@@QAE_NXZ			; DXUTState::GetActive
PUBLIC	?SetRenderingPaused@DXUTState@@QAEX_N@Z		; DXUTState::SetRenderingPaused
PUBLIC	?GetRenderingPaused@DXUTState@@QAE_NXZ		; DXUTState::GetRenderingPaused
PUBLIC	?SetTimePaused@DXUTState@@QAEX_N@Z		; DXUTState::SetTimePaused
PUBLIC	?SetPauseRenderingCount@DXUTState@@QAEXH@Z	; DXUTState::SetPauseRenderingCount
PUBLIC	?GetPauseRenderingCount@DXUTState@@QAEHXZ	; DXUTState::GetPauseRenderingCount
PUBLIC	?SetPauseTimeCount@DXUTState@@QAEXH@Z		; DXUTState::SetPauseTimeCount
PUBLIC	?GetPauseTimeCount@DXUTState@@QAEHXZ		; DXUTState::GetPauseTimeCount
PUBLIC	?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z	; DXUTState::SetNotifyOnMouseMove
PUBLIC	?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ	; DXUTState::GetNotifyOnMouseMove
PUBLIC	?SetAutomation@DXUTState@@QAEX_N@Z		; DXUTState::SetAutomation
PUBLIC	?GetAutomation@DXUTState@@QAE_NXZ		; DXUTState::GetAutomation
PUBLIC	?SetInSizeMove@DXUTState@@QAEX_N@Z		; DXUTState::SetInSizeMove
PUBLIC	?GetInSizeMove@DXUTState@@QAE_NXZ		; DXUTState::GetInSizeMove
PUBLIC	?SetTimerLastID@DXUTState@@QAEXI@Z		; DXUTState::SetTimerLastID
PUBLIC	?GetTimerLastID@DXUTState@@QAEIXZ		; DXUTState::GetTimerLastID
PUBLIC	?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ ; DXUTState::GetMessageWhenD3D11NotAvailable
PUBLIC	?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z	; DXUTState::SetAppCalledWasKeyPressed
PUBLIC	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
PUBLIC	?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetOverrideForceFeatureLevel
PUBLIC	?GetScreenShotName@DXUTState@@QAEPA_WXZ		; DXUTState::GetScreenShotName
PUBLIC	?SetSaveScreenShot@DXUTState@@QAEX_N@Z		; DXUTState::SetSaveScreenShot
PUBLIC	?GetSaveScreenShot@DXUTState@@QAE_NXZ		; DXUTState::GetSaveScreenShot
PUBLIC	?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z	; DXUTState::SetExitAfterScreenShot
PUBLIC	?GetExitAfterScreenShot@DXUTState@@QAE_NXZ	; DXUTState::GetExitAfterScreenShot
PUBLIC	?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideAdapterOrdinal
PUBLIC	?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ	; DXUTState::GetOverrideAdapterOrdinal
PUBLIC	?SetOverrideWindowed@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideWindowed
PUBLIC	?GetOverrideWindowed@DXUTState@@QAE_NXZ		; DXUTState::GetOverrideWindowed
PUBLIC	?SetOverrideOutput@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideOutput
PUBLIC	?SetOverrideFullScreen@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideFullScreen
PUBLIC	?GetOverrideFullScreen@DXUTState@@QAE_NXZ	; DXUTState::GetOverrideFullScreen
PUBLIC	?SetOverrideStartX@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideStartX
PUBLIC	?GetOverrideStartX@DXUTState@@QAEHXZ		; DXUTState::GetOverrideStartX
PUBLIC	?SetOverrideStartY@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideStartY
PUBLIC	?GetOverrideStartY@DXUTState@@QAEHXZ		; DXUTState::GetOverrideStartY
PUBLIC	?SetOverrideWidth@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideWidth
PUBLIC	?GetOverrideWidth@DXUTState@@QAEHXZ		; DXUTState::GetOverrideWidth
PUBLIC	?SetOverrideHeight@DXUTState@@QAEXH@Z		; DXUTState::SetOverrideHeight
PUBLIC	?GetOverrideHeight@DXUTState@@QAEHXZ		; DXUTState::GetOverrideHeight
PUBLIC	?SetOverrideForceHAL@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideForceHAL
PUBLIC	?GetOverrideForceHAL@DXUTState@@QAE_NXZ		; DXUTState::GetOverrideForceHAL
PUBLIC	?SetOverrideForceREF@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideForceREF
PUBLIC	?GetOverrideForceREF@DXUTState@@QAE_NXZ		; DXUTState::GetOverrideForceREF
PUBLIC	?SetOverrideForceWARP@DXUTState@@QAEX_N@Z	; DXUTState::SetOverrideForceWARP
PUBLIC	?GetOverrideForceWARP@DXUTState@@QAE_NXZ	; DXUTState::GetOverrideForceWARP
PUBLIC	?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideConstantFrameTime
PUBLIC	?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideConstantFrameTime
PUBLIC	?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z ; DXUTState::SetOverrideConstantTimePerFrame
PUBLIC	?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ ; DXUTState::GetOverrideConstantTimePerFrame
PUBLIC	?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideQuitAfterFrame
PUBLIC	?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ	; DXUTState::GetOverrideQuitAfterFrame
PUBLIC	?SetOverrideForceVsync@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideForceVsync
PUBLIC	?GetOverrideForceVsync@DXUTState@@QAEHXZ	; DXUTState::GetOverrideForceVsync
PUBLIC	?SetReleasingSwapChain@DXUTState@@QAEX_N@Z	; DXUTState::SetReleasingSwapChain
PUBLIC	?GetReleasingSwapChain@DXUTState@@QAE_NXZ	; DXUTState::GetReleasingSwapChain
PUBLIC	?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z	; DXUTState::SetIsInGammaCorrectMode
PUBLIC	?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ	; DXUTState::GetIsInGammaCorrectMode
PUBLIC	?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z ; DXUTState::SetModifyDeviceSettingsFunc
PUBLIC	?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ ; DXUTState::GetModifyDeviceSettingsFunc
PUBLIC	?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z ; DXUTState::SetDeviceRemovedFunc
PUBLIC	?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ ; DXUTState::GetDeviceRemovedFunc
PUBLIC	?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z	; DXUTState::SetFrameMoveFunc
PUBLIC	?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ	; DXUTState::GetFrameMoveFunc
PUBLIC	?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z	; DXUTState::SetKeyboardFunc
PUBLIC	?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ	; DXUTState::GetKeyboardFunc
PUBLIC	?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z ; DXUTState::SetMouseFunc
PUBLIC	?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ ; DXUTState::GetMouseFunc
PUBLIC	?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z ; DXUTState::SetWindowMsgFunc
PUBLIC	?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ ; DXUTState::GetWindowMsgFunc
PUBLIC	?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z ; DXUTState::SetIsD3D11DeviceAcceptableFunc
PUBLIC	?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ ; DXUTState::GetIsD3D11DeviceAcceptableFunc
PUBLIC	?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11DeviceCreatedFunc
PUBLIC	?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11DeviceCreatedFunc
PUBLIC	?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11SwapChainResizedFunc
PUBLIC	?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11SwapChainResizedFunc
PUBLIC	?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11SwapChainReleasingFunc
PUBLIC	?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
PUBLIC	?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11DeviceDestroyedFunc
PUBLIC	?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11DeviceDestroyedFunc
PUBLIC	?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z ; DXUTState::SetD3D11FrameRenderFunc
PUBLIC	?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ; DXUTState::GetD3D11FrameRenderFunc
PUBLIC	?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetModifyDeviceSettingsFuncUserContext
PUBLIC	?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetModifyDeviceSettingsFuncUserContext
PUBLIC	?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetDeviceRemovedFuncUserContext
PUBLIC	?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetDeviceRemovedFuncUserContext
PUBLIC	?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetFrameMoveFuncUserContext
PUBLIC	?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetFrameMoveFuncUserContext
PUBLIC	?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetKeyboardFuncUserContext
PUBLIC	?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ	; DXUTState::GetKeyboardFuncUserContext
PUBLIC	?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z	; DXUTState::SetMouseFuncUserContext
PUBLIC	?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ	; DXUTState::GetMouseFuncUserContext
PUBLIC	?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetWindowMsgFuncUserContext
PUBLIC	?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetWindowMsgFuncUserContext
PUBLIC	?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext
PUBLIC	?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext
PUBLIC	?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceCreatedFuncUserContext
PUBLIC	?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceCreatedFuncUserContext
PUBLIC	?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext
PUBLIC	?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext
PUBLIC	?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainResizedFuncUserContext
PUBLIC	?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
PUBLIC	?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext
PUBLIC	?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext
PUBLIC	?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11FrameRenderFuncUserContext
PUBLIC	?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11FrameRenderFuncUserContext
PUBLIC	?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z ; DXUTState::SetTimerList
PUBLIC	?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
PUBLIC	?GetKeys@DXUTState@@QAEPA_NXZ			; DXUTState::GetKeys
PUBLIC	?GetLastKeys@DXUTState@@QAEPA_NXZ		; DXUTState::GetLastKeys
PUBLIC	?GetMouseButtons@DXUTState@@QAEPA_NXZ		; DXUTState::GetMouseButtons
PUBLIC	?GetStaticFrameStats@DXUTState@@QAEPA_WXZ	; DXUTState::GetStaticFrameStats
PUBLIC	?GetFPSStats@DXUTState@@QAEPA_WXZ		; DXUTState::GetFPSStats
PUBLIC	?GetFrameStats@DXUTState@@QAEPA_WXZ		; DXUTState::GetFrameStats
PUBLIC	?GetDeviceStats@DXUTState@@QAEPA_WXZ		; DXUTState::GetDeviceStats
PUBLIC	?GetWindowTitle@DXUTState@@QAEPA_WXZ		; DXUTState::GetWindowTitle
PUBLIC	??_GDXUTState@@QAEPAXI@Z			; DXUTState::`scalar deleting destructor'
PUBLIC	??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ	; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
PUBLIC	?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::deallocate
PUBLIC	?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::allocate
PUBLIC	?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z ; std::allocator<DXUT_TIMER>::construct
PUBLIC	?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ	; std::allocator<DXUT_TIMER>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::~_Vector_val<std::_Simple_types<DXUT_TIMER> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
PUBLIC	??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
PUBLIC	??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
PUBLIC	?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity
PUBLIC	?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
PUBLIC	?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
PUBLIC	?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
PUBLIC	?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
PUBLIC	?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back
PUBLIC	?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to
PUBLIC	?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside
PUBLIC	?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
PUBLIC	?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy
PUBLIC	?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
PUBLIC	??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::`scalar deleting destructor'
PUBLIC	??0DXUTMemoryHelper@@QAE@XZ			; DXUTMemoryHelper::DXUTMemoryHelper
PUBLIC	??1DXUTMemoryHelper@@QAE@XZ			; DXUTMemoryHelper::~DXUTMemoryHelper
PUBLIC	?GetDXUTState@@YAAAVDXUTState@@XZ		; GetDXUTState
PUBLIC	?DXUTParseCommandLine@@YAXPA_W_N@Z		; DXUTParseCommandLine
PUBLIC	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z		; DXUTIsNextArg
PUBLIC	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z		; DXUTGetCmdParam
PUBLIC	?DXUTAllowShortcutKeys@@YAX_N@Z			; DXUTAllowShortcutKeys
PUBLIC	?DXUTUpdateStaticFrameStats@@YAXXZ		; DXUTUpdateStaticFrameStats
PUBLIC	?DXUTUpdateFrameStats@@YAXXZ			; DXUTUpdateFrameStats
PUBLIC	?DXUTHandleTimers@@YAXXZ			; DXUTHandleTimers
PUBLIC	?DXUTDisplayErrorMessage@@YAXJ@Z		; DXUTDisplayErrorMessage
PUBLIC	?DXUTMapButtonToArrayIndex@@YAHE@Z		; DXUTMapButtonToArrayIndex
PUBLIC	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
PUBLIC	?DXUTDelayLoadDXGI@@YAJXZ			; DXUTDelayLoadDXGI
PUBLIC	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
PUBLIC	?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTUpdateDeviceSettingsWithOverrides
PUBLIC	?DXUTCheckForDXGIFullScreenSwitch@@YAXXZ	; DXUTCheckForDXGIFullScreenSwitch
PUBLIC	?DXUTResizeDXGIBuffers@@YAXIIH@Z		; DXUTResizeDXGIBuffers
PUBLIC	?DXUTCheckForDXGIBufferChange@@YAXXZ		; DXUTCheckForDXGIBufferChange
PUBLIC	?DXUTCheckForWindowSizeChange@@YAXXZ		; DXUTCheckForWindowSizeChange
PUBLIC	?DXUTCheckForWindowChangingMonitors@@YAXXZ	; DXUTCheckForWindowChangingMonitors
PUBLIC	?DXUTCleanup3DEnvironment@@YAX_N@Z		; DXUTCleanup3DEnvironment
PUBLIC	?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
PUBLIC	?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetAdapterOrdinalFromMonitor
PUBLIC	?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetOutputOrdinalFromMonitor
PUBLIC	?DXUTHandleDeviceRemoved@@YAJXZ			; DXUTHandleDeviceRemoved
PUBLIC	?DXUTUpdateBackBufferDesc@@YAXXZ		; DXUTUpdateBackBufferDesc
PUBLIC	?DXUTSetupCursor@@YAXXZ				; DXUTSetupCursor
PUBLIC	?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ; DXUTCreateD3D11Views
PUBLIC	?DXUTCreate3DEnvironment11@@YAJXZ		; DXUTCreate3DEnvironment11
PUBLIC	?DXUTReset3DEnvironment11@@YAJXZ		; DXUTReset3DEnvironment11
PUBLIC	?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z ; DXUTUpdateD3D11DeviceStats
PUBLIC	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
PUBLIC	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
PUBLIC	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
PUBLIC	?DXUTGetCallbackD3D11DeviceAcceptable@@YAXPAP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZPAPAX@Z ; DXUTGetCallbackD3D11DeviceAcceptable
PUBLIC	?DXUTLowLevelKeyboardProc@@YGJHIJ@Z		; DXUTLowLevelKeyboardProc
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
PUBLIC	??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ; std::addressof<DXUT_TIMER const >
PUBLIC	??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
PUBLIC	??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>
PUBLIC	??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z ; std::_Allocate<DXUT_TIMER>
PUBLIC	??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
PUBLIC	??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
PUBLIC	??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ; std::forward<DXUT_TIMER const &>
PUBLIC	??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
PUBLIC	??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>
PUBLIC	??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
PUBLIC	??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
PUBLIC	??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
PUBLIC	??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>
PUBLIC	??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
PUBLIC	??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Val_type<DXUT_TIMER *>
PUBLIC	??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>
PUBLIC	??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>
PUBLIC	??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z ; std::_Debug_range<DXUT_TIMER *>
PUBLIC	??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
PUBLIC	??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z ; std::_Iter_cat<DXUT_TIMER *>
PUBLIC	??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUT_TIMER *>
PUBLIC	??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
PUBLIC	??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@ ; `string'
PUBLIC	??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3d086595
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp__wcscat_s:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcsncmp:PROC
EXTRN	__imp___wcsnicmp:PROC
EXTRN	__imp__GetCommandLineW@0:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__InitializeCriticalSectionAndSpinCount@8:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__GetVersionExW@4:PROC
EXTRN	__imp__GetModuleFileNameW@12:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__LocalFree@4:PROC
EXTRN	__imp__SetThreadExecutionState@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__PeekMessageW@20:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__RegisterClassW@4:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__GetWindowPlacement@8:PROC
EXTRN	__imp__SetWindowPlacement@8:PROC
EXTRN	__imp__IsWindowVisible@4:PROC
EXTRN	__imp__IsIconic@4:PROC
EXTRN	__imp__IsZoomed@4:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__DestroyAcceleratorTable@4:PROC
EXTRN	__imp__TranslateAcceleratorW@12:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__GetMenu@4:PROC
EXTRN	__imp__DestroyMenu@4:PROC
EXTRN	__imp__GetWindowTextW@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__AdjustWindowRect@12:PROC
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__ClipCursor@4:PROC
EXTRN	__imp__ScreenToClient@8:PROC
EXTRN	__imp__SetRect@20:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__SetWindowsHookExW@16:PROC
EXTRN	__imp__UnhookWindowsHookEx@4:PROC
EXTRN	__imp__CallNextHookEx@16:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__SystemParametersInfoW@16:PROC
EXTRN	__imp__CommandLineToArgvW@8:PROC
EXTRN	__imp__ExtractIconW@12:PROC
EXTRN	__imp__wcstod:PROC
EXTRN	__imp___wtoi:PROC
EXTRN	__imp__CoInitializeEx@8:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp__InitCommonControls@0:PROC
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	??3@YAXPAXABUnothrow_t@std@@@Z:PROC		; operator delete
EXTRN	__imp___hypot:PROC
EXTRN	__imp__swprintf_s:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	?DXUTEnableXInput@@YAX_N@Z:PROC			; DXUTEnableXInput
EXTRN	?DXUTSnapD3D11Screenshot@@YAJPB_W_N@Z:PROC	; DXUTSnapD3D11Screenshot
EXTRN	?Reset@CDXUTTimer@@QAEXXZ:PROC			; CDXUTTimer::Reset
EXTRN	?Start@CDXUTTimer@@QAEXXZ:PROC			; CDXUTTimer::Start
EXTRN	?Stop@CDXUTTimer@@QAEXXZ:PROC			; CDXUTTimer::Stop
EXTRN	?GetTimeValues@CDXUTTimer@@QAEXPAN0PAM@Z:PROC	; CDXUTTimer::GetTimeValues
EXTRN	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ:PROC	; DXUTGetGlobalTimer
EXTRN	?DXUTDXGIFormatToString@@YGPB_WW4DXGI_FORMAT@@_N@Z:PROC ; DXUTDXGIFormatToString
EXTRN	?DXUTOutputDebugStringW@@YAXPB_WZZ:PROC		; DXUTOutputDebugStringW
EXTRN	?DXUTTrace@@YGJPBDKJPB_W_N@Z:PROC		; DXUTTrace
EXTRN	?DXUT_Dynamic_CreateDXGIFactory1@@YGJABU_GUID@@PAPAX@Z:PROC ; DXUT_Dynamic_CreateDXGIFactory1
EXTRN	?DXUT_Dynamic_DXGIGetDebugInterface@@YGJABU_GUID@@PAPAX@Z:PROC ; DXUT_Dynamic_DXGIGetDebugInterface
EXTRN	?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z:PROC ; DXUT_Dynamic_D3D11CreateDevice
EXTRN	?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z:PROC ; DXUTMonitorFromWindow
EXTRN	?DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z:PROC ; DXUTMonitorFromRect
EXTRN	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z:PROC ; DXUTGetMonitorInfo
EXTRN	?DXUTGetD3D11AdapterDisplayMode@@YGJIIPAUDXGI_MODE_DESC@@@Z:PROC ; DXUTGetD3D11AdapterDisplayMode
EXTRN	?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ:PROC ; CD3D11Enumeration::GetAdapterInfoList
EXTRN	?GetAdapterInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumAdapterInfo@@I@Z:PROC ; CD3D11Enumeration::GetAdapterInfo
EXTRN	?GetOutputInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumOutputInfo@@II@Z:PROC ; CD3D11Enumeration::GetOutputInfo
EXTRN	?GetDeviceSettingsCombo@CD3D11Enumeration@@QBEPAUCD3D11EnumDeviceSettingsCombo@@IW4DXGI_FORMAT@@H@Z:PROC ; CD3D11Enumeration::GetDeviceSettingsCombo
EXTRN	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z:PROC ; DXUTGetD3D11Enumeration
EXTRN	?DXUTRankD3D11DeviceCombo@@YAMPAUCD3D11EnumDeviceSettingsCombo@@PAUDXUTD3D11DeviceSettings@@AAH2@Z:PROC ; DXUTRankD3D11DeviceCombo
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A
_BSS	SEGMENT
?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A DB 01H DUP (?) ; `GetDXUTState'::`2'::memory
_BSS	ENDS
;	COMDAT ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
_BSS	SEGMENT
?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA DD 01H DUP (?) ; `GetDXUTState'::`2'::$S1
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTanEstCoefficients$initializer$ DD FLAT:??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3d086595
CONST	SEGMENT
__real@3d086595 DD 03d086595r			; 0.0333
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' '
	DB	00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'a', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M'
	DB	00H, 'E', 00H, 'R', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm'
	DB	00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M'
	DB	00H, 'E', 00H, 'R', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H
	DB	'+', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M'
	DB	00H, 'E', 00H, 'R', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' '
	DB	00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' '
	DB	00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@
CONST	SEGMENT
??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@
CONST	SEGMENT
??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'G', 00H, 'I', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'D'
	DB	00H, 'E', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H, 'C', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, 'D', 00H, 'X', 00H, 'G', 00H, 'I'
	DB	00H, '_', 00H, 'M', 00H, 'O', 00H, 'D', 00H, 'E', 00H, '_', 00H
	DB	'D', 00H, 'E', 00H, 'S', 00H, 'C', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@
CONST	SEGMENT
??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'C', 00H
	DB	'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H, 'E', 00H, 'n'
	DB	00H, 'u', 00H, 'm', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 's', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'o', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 'C', 00H, 'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '1', 00H
	DB	'E', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'D', 00H, 'e', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 'C', 00H, 'o'
	DB	00H, 'm', 00H, 'b', 00H, 'o', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?s_adapterDesktopDisplayMode@?L@??DXUTToggleFullScreen@@YGJXZ@4UDXGI_MODE_DESC@@B
CONST	SEGMENT
?s_adapterDesktopDisplayMode@?L@??DXUTToggleFullScreen@@YGJXZ@4UDXGI_MODE_DESC@@B DD 0320H ; `DXUTToggleFullScreen'::`11'::s_adapterDesktopDisplayMode
	DD	0258H
	DD	00H
	DD	00H
	DD	01dH
	ORG $+8
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16 ; DirectX::g_XMReciprocalTwoPi
_DATA	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMTwoPi
_DATA	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMReciprocalPi
_DATA	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMPi
_DATA	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMHalfPi
_DATA	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativePi
_DATA	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativeTwoPi
_DATA	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMPiConstants0
_DATA	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	ORG $+4
_DATA	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z$0
__ehfuncinfo$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?GetDXUTState@@YAAAVDXUTState@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDXUTState@@YAAAVDXUTState@@XZ$0
__unwindtable$?DXUTCreateState@@YGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTCreateState@@YGJXZ$0
__unwindtable$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z$0
__unwindtable$?DXUTHandleTimers@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTHandleTimers@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTHandleTimers@@YAXXZ$1
__unwindtable$?DXUTKillTimer@@YGJI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTKillTimer@@YGJI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTKillTimer@@YGJI@Z$1
__unwindtable$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$2
__unwindtable$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3
__unwindtable$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3
__ehfuncinfo$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTHandleTimers@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DXUTHandleTimers@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetDXUTState@@YAAAVDXUTState@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDXUTState@@YAAAVDXUTState@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTCreateState@@YGJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DXUTCreateState@@YGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTKillTimer@@YGJI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DXUTKillTimer@@YGJI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPiConstants0$initializer$ DD FLAT:??__Eg_XMPiConstants0@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativeTwoPi$initializer$ DD FLAT:??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativePi$initializer$ DD FLAT:??__Eg_XMNegativePi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMHalfPi$initializer$ DD FLAT:??__Eg_XMHalfPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPi$initializer$ DD FLAT:??__Eg_XMPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalPi$initializer$ DD FLAT:??__Eg_XMReciprocalPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTwoPi$initializer$ DD FLAT:??__Eg_XMTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalTwoPi$initializer$ DD FLAT:??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z PROC ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], ecx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+20], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ENDP ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UDXUT_TIMER@@U1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z PROC ; std::forward<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ENDP ; std::forward<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	esi
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	esi, esp
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z PROC ; std::_Iter_cat<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z ENDP ; std::_Iter_cat<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UDXUT_TIMER@@@std@@YA$$QAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UDXUT_TIMER@@U1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z PROC ; std::_Debug_pointer<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
	push	esi
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z PROC ; std::_Debug_range<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAUDXUT_TIMER@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUT_TIMER@@@Z ; std::_Iter_cat<DXUT_TIMER *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUT_TIMER *>
	add	esp, 20					; 00000014H
; Line 585
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z ENDP ; std::_Debug_range<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z PROC ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z ENDP ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@0PB_WI@Z ; std::_Debug_range<DXUT_TIMER *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UDXUT_TIMER@@@std@@YAXPAUDXUT_TIMER@@PB_WI@Z ; std::_Debug_pointer<DXUT_TIMER>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UDXUT_TIMER@@U1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z PROC ; std::_Val_type<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ENDP ; std::_Val_type<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDXUT_TIMER@@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::allocator<DXUT_TIMER>::destroy<DXUT_TIMER>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Val_type<DXUT_TIMER *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUDXUT_TIMER@@PAU1@V?$allocator@UDXUT_TIMER@@@std@@U1@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::allocator<DXUT_TIMER>,DXUT_TIMER>
	add	esp, 24					; 00000018H
; Line 485
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z PROC ; std::_Unchecked<DXUT_TIMER *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ENDP ; std::_Unchecked<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UDXUT_TIMER@@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z PROC ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], ecx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+20], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ENDP ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@PAU1@@Z ; std::_Unchecked<DXUT_TIMER *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninit_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUDXUT_TIMER@@PAU1@@std@@YAAAPAUDXUT_TIMER@@AAPAU1@PAU1@@Z ; std::_Rechecked<DXUT_TIMER *,DXUT_TIMER *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDXUT_TIMER@@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::destroy<DXUT_TIMER>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z PROC ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ENDP ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ; std::forward<DXUT_TIMER const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z ; std::allocator<DXUT_TIMER>::construct
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z PROC ; std::forward<DXUT_TIMER const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ENDP ; std::forward<DXUT_TIMER const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UDXUT_TIMER@@AAU1@@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::allocator<DXUT_TIMER>::construct<DXUT_TIMER,DXUT_TIMER &>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z PROC ; std::forward<DXUT_TIMER &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ENDP ; std::forward<DXUT_TIMER &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z PROC ; std::_Allocate<DXUT_TIMER>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 178956970	; 0aaaaaaaH
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 24
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z ENDP ; std::_Allocate<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUDXUT_TIMER@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAPAUDXUT_TIMER@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Uninitialized_move<DXUT_TIMER *,DXUT_TIMER *,std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
	add	esp, 16					; 00000010H
; Line 1649
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Umove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@Umove:
	DD	1
	DD	$LN4@Umove
$LN4@Umove:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Umove
$LN3@Umove:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UDXUT_TIMER@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUT_TIMER@@0@Z ; std::_Ptr_cat<DXUT_TIMER,DXUT_TIMER>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUDXUT_TIMER@@@std@@YAABUDXUT_TIMER@@ABU1@@Z ; std::forward<DXUT_TIMER const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UDXUT_TIMER@@ABU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@ABU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDXUT_TIMER@@@std@@YAAAUDXUT_TIMER@@AAU1@@Z ; std::forward<DXUT_TIMER &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UDXUT_TIMER@@AAU1@@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAXAAV?$allocator@UDXUT_TIMER@@@1@PAUDXUT_TIMER@@AAU3@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z PROC ; std::addressof<DXUT_TIMER const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ENDP ; std::addressof<DXUT_TIMER const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@Compat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN3@Compat
$LN1@Compat:
; Line 240
	mov	esi, esp
	push	240					; 000000f0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 241
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@Compat
	xor	ecx, ecx
	jne	SHORT $LN6@Compat
$LN5@Compat:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@Compat
	int	3
$LN6@Compat:
	mov	esi, esp
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PA@FJGCCOKG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Compat:
; Line 243
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 211
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Compat
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 206
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 101
	mov	esi, esp
	push	101					; 00000065H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PI@FDLNFNCP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
; Line 114
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	mov	esi, esp
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PG@NLFLFKAE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumOutputInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumOutputInfo *,int,CD3D11EnumOutputInfo * const *,CD3D11EnumOutputInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@Compat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN3@Compat
$LN1@Compat:
; Line 240
	mov	esi, esp
	push	240					; 000000f0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 241
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@Compat
	xor	ecx, ecx
	jne	SHORT $LN6@Compat
$LN5@Compat:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@Compat
	int	3
$LN6@Compat:
	mov	esi, esp
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PC@LBNCMFIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Compat:
; Line 243
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 211
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Compat
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 206
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 101
	mov	esi, esp
	push	101					; 00000065H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PK@HACCEAFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
; Line 114
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	mov	esi, esp
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PI@MICGNEKL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCD3D11EnumAdapterInfo@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CD3D11EnumAdapterInfo *,int,CD3D11EnumAdapterInfo * const *,CD3D11EnumAdapterInfo * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 334
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
; Line 336
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
; Line 325
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@Compat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN3@Compat
$LN1@Compat:
; Line 240
	mov	esi, esp
	push	240					; 000000f0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 241
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@Compat
	xor	ecx, ecx
	jne	SHORT $LN6@Compat
$LN5@Compat:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@Compat
	int	3
$LN6@Compat:
	mov	esi, esp
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NK@NAHBNLJA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Compat:
; Line 243
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 211
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Compat
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 206
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 101
	mov	esi, esp
	push	101					; 00000065H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1OC@BPONLAHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
; Line 114
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	mov	esi, esp
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1OA@CFOELJOH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEABUDXUT_TIMER@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDXUT_TIMER@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUT_TIMER,int,DXUT_TIMER const *,DXUT_TIMER const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv84 = -16						; size = 4
tv74 = -12						; size = 4
_p$ = -8						; size = 4
_bEatKeystroke$ = -1					; size = 1
_nCode$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?DXUTLowLevelKeyboardProc@@YGJHIJ@Z PROC		; DXUTLowLevelKeyboardProc
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3088
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 3089
	cmp	DWORD PTR _nCode$[ebp], 0
	jl	SHORT $LN6@DXUTLowLev
	cmp	DWORD PTR _nCode$[ebp], 0
	je	SHORT $LN7@DXUTLowLev
$LN6@DXUTLowLev:
; Line 3090
	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nCode$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
	push	eax
	call	DWORD PTR __imp__CallNextHookEx@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN8@DXUTLowLev
$LN7@DXUTLowLev:
; Line 3092
	mov	BYTE PTR _bEatKeystroke$[ebp], 0
; Line 3093
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 3094
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 256		; 00000100H
	jb	SHORT $LN4@DXUTLowLev
	cmp	DWORD PTR tv74[ebp], 257		; 00000101H
	jbe	SHORT $LN3@DXUTLowLev
	jmp	SHORT $LN4@DXUTLowLev
$LN3@DXUTLowLev:
; Line 3100
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAllowShortcutKeys@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeys
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN11@DXUTLowLev
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 91			; 0000005bH
	je	SHORT $LN10@DXUTLowLev
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx], 92			; 0000005cH
	jne	SHORT $LN11@DXUTLowLev
$LN10@DXUTLowLev:
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN12@DXUTLowLev
$LN11@DXUTLowLev:
	mov	DWORD PTR tv84[ebp], 0
$LN12@DXUTLowLev:
	mov	dl, BYTE PTR tv84[ebp]
	mov	BYTE PTR _bEatKeystroke$[ebp], dl
$LN4@DXUTLowLev:
; Line 3105
	movzx	eax, BYTE PTR _bEatKeystroke$[ebp]
	test	eax, eax
	je	SHORT $LN2@DXUTLowLev
; Line 3106
	mov	eax, 1
	jmp	SHORT $LN8@DXUTLowLev
; Line 3107
	jmp	SHORT $LN8@DXUTLowLev
$LN2@DXUTLowLev:
; Line 3108
	mov	esi, esp
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _nCode$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
	push	eax
	call	DWORD PTR __imp__CallNextHookEx@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@DXUTLowLev:
; Line 3109
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DXUTLowLevelKeyboardProc@@YGJHIJ@Z ENDP		; DXUTLowLevelKeyboardProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ppCallback$ = 8					; size = 4
_ppUserContext$ = 12					; size = 4
?DXUTGetCallbackD3D11DeviceAcceptable@@YAXPAP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZPAPAX@Z PROC ; DXUTGetCallbackD3D11DeviceAcceptable
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 626
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ ; DXUTState::GetIsD3D11DeviceAcceptableFunc
	mov	ecx, DWORD PTR _ppCallback$[ebp]
	mov	DWORD PTR [ecx], eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext
	mov	edx, DWORD PTR _ppUserContext$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetCallbackD3D11DeviceAcceptable@@YAXPAP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZPAPAX@Z ENDP ; DXUTGetCallbackD3D11DeviceAcceptable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -1						; size = 1
_pNewDeviceSettings$ = 8				; size = 4
?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z PROC ; DXUTGetIsWindowedFromDS
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 549
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 550
	cmp	DWORD PTR _pNewDeviceSettings$[ebp], 0
	jne	SHORT $LN1@DXUTGetIsW
; Line 551
	mov	al, 1
	jmp	SHORT $LN2@DXUTGetIsW
$LN1@DXUTGetIsW:
; Line 553
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN4@DXUTGetIsW
	mov	BYTE PTR tv69[ebp], 1
	jmp	SHORT $LN5@DXUTGetIsW
$LN4@DXUTGetIsW:
	mov	BYTE PTR tv69[ebp], 0
$LN5@DXUTGetIsW:
	mov	al, BYTE PTR tv69[ebp]
$LN2@DXUTGetIsW:
; Line 554
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetIsWindowedFromDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pNewDeviceSettings$ = 8				; size = 4
?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z PROC ; DXUTGetBackBufferHeightFromDS
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 547
	pop	ebp
	ret	0
?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetBackBufferHeightFromDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pNewDeviceSettings$ = 8				; size = 4
?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z PROC ; DXUTGetBackBufferWidthFromDS
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 543
	pop	ebp
	ret	0
?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetBackBufferWidthFromDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv152 = -20						; size = 4
_pDeviceSettingsCombo$1 = -16				; size = 4
_pd3dEnum$2 = -12					; size = 4
_pDeviceSettings$3 = -8					; size = 4
_pstrDeviceStats$ = -4					; size = 4
_DeviceType$ = 8					; size = 4
_featureLevel$ = 12					; size = 4
_pAdapterDesc$ = 16					; size = 4
?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z PROC ; DXUTUpdateD3D11DeviceStats
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4071
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 4072
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetNoStats@DXUTState@@QAE_NXZ		; DXUTState::GetNoStats
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@DXUTUpdate
; Line 4073
	jmp	$LN22@DXUTUpdate
$LN21@DXUTUpdate:
; Line 4076
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceStats@DXUTState@@QAEPA_WXZ	; DXUTState::GetDeviceStats
	mov	DWORD PTR _pstrDeviceStats$[ebp], eax
; Line 4077
	cmp	DWORD PTR _DeviceType$[ebp], 2
	jne	SHORT $LN20@DXUTUpdate
; Line 4078
	mov	esi, esp
	push	OFFSET $SG153666
	push	256					; 00000100H
	mov	ecx, DWORD PTR _pstrDeviceStats$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@DXUTUpdate
$LN20@DXUTUpdate:
; Line 4079
	cmp	DWORD PTR _DeviceType$[ebp], 1
	jne	SHORT $LN18@DXUTUpdate
; Line 4080
	mov	esi, esp
	push	OFFSET $SG153669
	push	256					; 00000100H
	mov	edx, DWORD PTR _pstrDeviceStats$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@DXUTUpdate
$LN18@DXUTUpdate:
; Line 4081
	cmp	DWORD PTR _DeviceType$[ebp], 4
	jne	SHORT $LN16@DXUTUpdate
; Line 4082
	mov	esi, esp
	push	OFFSET $SG153672
	push	256					; 00000100H
	mov	eax, DWORD PTR _pstrDeviceStats$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@DXUTUpdate
$LN16@DXUTUpdate:
; Line 4083
	cmp	DWORD PTR _DeviceType$[ebp], 5
	jne	SHORT $LN19@DXUTUpdate
; Line 4084
	mov	esi, esp
	push	OFFSET $SG153675
	push	256					; 00000100H
	mov	ecx, DWORD PTR _pstrDeviceStats$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@DXUTUpdate:
; Line 4086
	cmp	DWORD PTR _DeviceType$[ebp], 1
	jne	$LN13@DXUTUpdate
; Line 4090
	mov	esi, esp
	push	OFFSET $SG153677
	push	256					; 00000100H
	mov	edx, DWORD PTR _pstrDeviceStats$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4093
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDeviceSettings$3[ebp], eax
; Line 4094
	cmp	DWORD PTR _pDeviceSettings$3[ebp], 0
	jne	SHORT $LN12@DXUTUpdate
; Line 4095
	jmp	$LN22@DXUTUpdate
$LN12@DXUTUpdate:
; Line 4097
	push	0
	push	1
	push	0
	call	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
	mov	DWORD PTR _pd3dEnum$2[ebp], eax
; Line 4098
	cmp	DWORD PTR _pd3dEnum$2[ebp], 0
	jne	SHORT $LN24@DXUTUpdate
	mov	esi, esp
	push	4098					; 00001002H
	push	OFFSET $SG153684
	push	OFFSET $SG153685
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@DXUTUpdate:
; Line 4102
	mov	ecx, DWORD PTR _pDeviceSettings$3[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	mov	eax, DWORD PTR _pDeviceSettings$3[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _pDeviceSettings$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pd3dEnum$2[ebp]
	call	?GetDeviceSettingsCombo@CD3D11Enumeration@@QBEPAUCD3D11EnumDeviceSettingsCombo@@IW4DXGI_FORMAT@@H@Z ; CD3D11Enumeration::GetDeviceSettingsCombo
	mov	DWORD PTR _pDeviceSettingsCombo$1[ebp], eax
; Line 4103
	cmp	DWORD PTR _pDeviceSettingsCombo$1[ebp], 0
	je	SHORT $LN11@DXUTUpdate
; Line 4104
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$1[ebp]
	mov	edx, DWORD PTR [ecx+52]
	add	edx, 296				; 00000128H
	mov	esi, esp
	push	edx
	push	256					; 00000100H
	mov	eax, DWORD PTR _pstrDeviceStats$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4105
	jmp	SHORT $LN13@DXUTUpdate
$LN11@DXUTUpdate:
; Line 4106
	mov	ecx, DWORD PTR _pAdapterDesc$[ebp]
	mov	esi, esp
	push	ecx
	push	256					; 00000100H
	mov	edx, DWORD PTR _pstrDeviceStats$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@DXUTUpdate:
; Line 4109
	mov	eax, DWORD PTR _featureLevel$[ebp]
	mov	DWORD PTR tv152[ebp], eax
	cmp	DWORD PTR tv152[ebp], 40960		; 0000a000H
	jg	SHORT $LN25@DXUTUpdate
	cmp	DWORD PTR tv152[ebp], 40960		; 0000a000H
	je	$LN4@DXUTUpdate
	cmp	DWORD PTR tv152[ebp], 37120		; 00009100H
	je	SHORT $LN7@DXUTUpdate
	cmp	DWORD PTR tv152[ebp], 37376		; 00009200H
	je	SHORT $LN6@DXUTUpdate
	cmp	DWORD PTR tv152[ebp], 37632		; 00009300H
	je	SHORT $LN5@DXUTUpdate
	jmp	$LN22@DXUTUpdate
$LN25@DXUTUpdate:
	cmp	DWORD PTR tv152[ebp], 41216		; 0000a100H
	je	$LN3@DXUTUpdate
	cmp	DWORD PTR tv152[ebp], 45056		; 0000b000H
	je	$LN2@DXUTUpdate
	cmp	DWORD PTR tv152[ebp], 45312		; 0000b100H
	je	$LN1@DXUTUpdate
	jmp	$LN22@DXUTUpdate
$LN7@DXUTUpdate:
; Line 4112
	mov	esi, esp
	push	OFFSET $SG153695
	push	256					; 00000100H
	mov	ecx, DWORD PTR _pstrDeviceStats$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4113
	jmp	$LN22@DXUTUpdate
$LN6@DXUTUpdate:
; Line 4115
	mov	esi, esp
	push	OFFSET $SG153697
	push	256					; 00000100H
	mov	edx, DWORD PTR _pstrDeviceStats$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4116
	jmp	$LN22@DXUTUpdate
$LN5@DXUTUpdate:
; Line 4118
	mov	esi, esp
	push	OFFSET $SG153699
	push	256					; 00000100H
	mov	eax, DWORD PTR _pstrDeviceStats$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4119
	jmp	$LN22@DXUTUpdate
$LN4@DXUTUpdate:
; Line 4121
	mov	esi, esp
	push	OFFSET $SG153701
	push	256					; 00000100H
	mov	ecx, DWORD PTR _pstrDeviceStats$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4122
	jmp	SHORT $LN22@DXUTUpdate
$LN3@DXUTUpdate:
; Line 4124
	mov	esi, esp
	push	OFFSET $SG153703
	push	256					; 00000100H
	mov	edx, DWORD PTR _pstrDeviceStats$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4125
	jmp	SHORT $LN22@DXUTUpdate
$LN2@DXUTUpdate:
; Line 4127
	mov	esi, esp
	push	OFFSET $SG153705
	push	256					; 00000100H
	mov	eax, DWORD PTR _pstrDeviceStats$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4128
	jmp	SHORT $LN22@DXUTUpdate
$LN1@DXUTUpdate:
; Line 4130
	mov	esi, esp
	push	OFFSET $SG153707
	push	256					; 00000100H
	mov	ecx, DWORD PTR _pstrDeviceStats$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscat_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@DXUTUpdate:
; Line 4133
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z ENDP ; DXUTUpdateD3D11DeviceStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv211 = -116						; size = 4
_rcWnd$1 = -108						; size = 16
_SCDesc$ = -84						; size = 60
_pSwapChain$ = -20					; size = 4
_pDeviceSettings$ = -16					; size = 4
_bDeferredDXGIAction$ = -9				; size = 1
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTReset3DEnvironment11@@YAJXZ PROC			; DXUTReset3DEnvironment11
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2666
	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-116]
	mov	ecx, 29					; 0000001dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2669
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
; Line 2670
	push	1
	push	1
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 2672
	mov	BYTE PTR _bDeferredDXGIAction$[ebp], 0
; Line 2673
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDeviceSettings$[ebp], eax
; Line 2674
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$[ebp], eax
; Line 2675
	cmp	DWORD PTR _pSwapChain$[ebp], 0
	jne	SHORT $LN18@DXUTReset3
	mov	esi, esp
	push	2675					; 00000a73H
	push	OFFSET $SG152528
	push	OFFSET $SG152529
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@DXUTReset3:
; Line 2679
	mov	esi, esp
	lea	ecx, DWORD PTR _SCDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN15@DXUTReset3
; Line 2680
	push	60					; 0000003cH
	push	0
	lea	eax, DWORD PTR _SCDesc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN15@DXUTReset3:
; Line 2687
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [ecx+64], 0
	je	SHORT $LN14@DXUTReset3
	cmp	DWORD PTR _SCDesc$[ebp+48], 0
	je	SHORT $LN14@DXUTReset3
; Line 2690
	mov	esi, esp
	lea	edx, DWORD PTR _rcWnd$1[ebp]
	push	edx
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2691
	mov	eax, DWORD PTR _rcWnd$1[ebp+8]
	sub	eax, DWORD PTR _rcWnd$1[ebp]
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 2692
	mov	edx, DWORD PTR _rcWnd$1[ebp+12]
	sub	edx, DWORD PTR _rcWnd$1[ebp+4]
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [eax+20], edx
$LN14@DXUTReset3:
; Line 2698
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _SCDesc$[ebp+48]
	cmp	edx, DWORD PTR [ecx+64]
	je	$LN13@DXUTReset3
; Line 2701
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN12@DXUTReset3
; Line 2703
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _pSwapChain$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN11@DXUTReset3
	push	1
	push	OFFSET $SG152540
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	2703					; 00000a8fH
	push	OFFSET $SG152541
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN16@DXUTReset3
$LN11@DXUTReset3:
; Line 2704
	mov	BYTE PTR _bDeferredDXGIAction$[ebp], 1
; Line 2706
	jmp	$LN10@DXUTReset3
$LN12@DXUTReset3:
; Line 2716
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z ; DXUTState::SetDoNotStoreBufferSize
; Line 2717
	mov	esi, esp
	push	0
	push	1
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN9@DXUTReset3
	push	1
	push	OFFSET $SG152546
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	2717					; 00000a9dH
	push	OFFSET $SG152547
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN16@DXUTReset3
$LN9@DXUTReset3:
; Line 2718
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z ; DXUTState::SetDoNotStoreBufferSize
; Line 2720
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	add	edx, 16					; 00000010H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN8@DXUTReset3
	push	1
	push	OFFSET $SG152551
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	2720					; 00000aa0H
	push	OFFSET $SG152552
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN16@DXUTReset3
$LN8@DXUTReset3:
; Line 2721
	mov	BYTE PTR _bDeferredDXGIAction$[ebp], 1
$LN10@DXUTReset3:
; Line 2724
	jmp	$LN7@DXUTReset3
$LN13@DXUTReset3:
; Line 2728
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR _SCDesc$[ebp]
	jne	SHORT $LN6@DXUTReset3
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, DWORD PTR _SCDesc$[ebp+4]
	jne	SHORT $LN6@DXUTReset3
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _SCDesc$[ebp+16]
	je	SHORT $LN6@DXUTReset3
; Line 2730
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [edx+64], 0
	jne	SHORT $LN19@DXUTReset3
	mov	DWORD PTR tv211[ebp], 1
	jmp	SHORT $LN20@DXUTReset3
$LN19@DXUTReset3:
	mov	DWORD PTR tv211[ebp], 0
$LN20@DXUTReset3:
	mov	eax, DWORD PTR tv211[ebp]
	push	eax
	push	0
	push	0
	call	?DXUTResizeDXGIBuffers@@YAXIIH@Z	; DXUTResizeDXGIBuffers
	add	esp, 12					; 0000000cH
; Line 2731
	mov	BYTE PTR _bDeferredDXGIAction$[ebp], 1
; Line 2733
	jmp	SHORT $LN7@DXUTReset3
$LN6@DXUTReset3:
; Line 2734
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR _SCDesc$[ebp]
	jne	SHORT $LN3@DXUTReset3
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _SCDesc$[ebp+4]
	je	SHORT $LN7@DXUTReset3
$LN3@DXUTReset3:
; Line 2736
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	add	edx, 16					; 00000010H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@DXUTReset3
	push	1
	push	OFFSET $SG152561
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	2736					; 00000ab0H
	push	OFFSET $SG152562
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN16@DXUTReset3
$LN2@DXUTReset3:
; Line 2737
	mov	BYTE PTR _bDeferredDXGIAction$[ebp], 1
$LN7@DXUTReset3:
; Line 2744
	movzx	edx, BYTE PTR _bDeferredDXGIAction$[ebp]
	test	edx, edx
	jne	SHORT $LN1@DXUTReset3
; Line 2745
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
$LN1@DXUTReset3:
; Line 2746
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 2748
	xor	eax, eax
$LN16@DXUTReset3:
; Line 2749
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@DXUTReset3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@DXUTReset3:
	DD	2
	DD	$LN23@DXUTReset3
$LN23@DXUTReset3:
	DD	-84					; ffffffacH
	DD	60					; 0000003cH
	DD	$LN21@DXUTReset3
	DD	-108					; ffffff94H
	DD	16					; 00000010H
	DD	$LN22@DXUTReset3
$LN22@DXUTReset3:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	87					; 00000057H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN21@DXUTReset3:
	DB	83					; 00000053H
	DB	67					; 00000043H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
?DXUTReset3DEnvironment11@@YAJXZ ENDP			; DXUTReset3DEnvironment11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv663 = -348						; size = 4
tv621 = -344						; size = 4
tv316 = -340						; size = 4
$T1 = -336						; size = 4
_pCallbackSwapChainResized$ = -332			; size = 4
_pCallbackDeviceCreated$ = -328				; size = 4
_pBackBufferSurfaceDesc$ = -324				; size = 4
_pAdapterInfo$ = -320					; size = 4
_pd3dEnum$ = -316					; size = 4
_pd3dImmediateContext1$2 = -308				; size = 4
_pd3d11Device1$3 = -296					; size = 4
_ppOutputArray$ = -288					; size = 4
_pOutput$4 = -280					; size = 4
_iOutput$ = -272					; size = 4
_OutputCount$ = -268					; size = 4
_pRS$ = -260						; size = 4
_drd$ = -248						; size = 40
_pTempAdapter$5 = -200					; size = 4
_pDXGIDev$6 = -188					; size = 4
_filter$7 = -176					; size = 48
_denied$8 = -120					; size = 4
_infoQueue$9 = -108					; size = 4
_d3dDebug$10 = -96					; size = 4
_ddt$ = -88						; size = 4
_pAdapter$ = -80					; size = 4
_pDXGIFactory$ = -68					; size = 4
_pNewDeviceSettings$ = -60				; size = 4
_pSwapChain$ = -52					; size = 4
_FeatureLevel$ = -40					; size = 4
_pd3dImmediateContext$ = -28				; size = 4
_pd3d11Device$ = -16					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTCreate3DEnvironment11@@YAJXZ PROC			; DXUTCreate3DEnvironment11
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2358
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2359
	mov	DWORD PTR _hr$[ebp], 0
; Line 2361
	mov	DWORD PTR _pd3d11Device$[ebp], 0
; Line 2362
	mov	DWORD PTR _pd3dImmediateContext$[ebp], 0
; Line 2363
	mov	DWORD PTR _FeatureLevel$[ebp], 45312	; 0000b100H
; Line 2365
	mov	DWORD PTR _pSwapChain$[ebp], 0
; Line 2366
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pNewDeviceSettings$[ebp], eax
; Line 2367
	cmp	DWORD PTR _pNewDeviceSettings$[ebp], 0
	jne	SHORT $LN49@DXUTCreate
	mov	esi, esp
	push	2367					; 0000093fH
	push	OFFSET $SG152305
	push	OFFSET $SG152306
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN49@DXUTCreate:
; Line 2370
	call	?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ ; DXUTGetDXGIFactory
	mov	DWORD PTR _pDXGIFactory$[ebp], eax
; Line 2371
	cmp	DWORD PTR _pDXGIFactory$[ebp], 0
	jne	SHORT $LN50@DXUTCreate
	mov	esi, esp
	push	2371					; 00000943H
	push	OFFSET $SG152310
	push	OFFSET $SG152311
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN50@DXUTCreate:
; Line 2373
	mov	esi, esp
	push	0
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	mov	edx, DWORD PTR _pDXGIFactory$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pDXGIFactory$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2376
	mov	DWORD PTR _pAdapter$[ebp], 0
; Line 2378
	mov	DWORD PTR _hr$[ebp], 0
; Line 2379
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ddt$[ebp], ecx
; Line 2380
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	cmp	DWORD PTR [edx+8], 1
	jne	SHORT $LN46@DXUTCreate
; Line 2382
	mov	esi, esp
	lea	eax, DWORD PTR _pAdapter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pDXGIFactory$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pDXGIFactory$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2383
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN45@DXUTCreate
; Line 2385
	mov	eax, -2147467259			; 80004005H
	jmp	$LN47@DXUTCreate
$LN45@DXUTCreate:
; Line 2387
	mov	DWORD PTR _ddt$[ebp], 0
	jmp	SHORT $LN41@DXUTCreate
$LN46@DXUTCreate:
; Line 2389
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	cmp	DWORD PTR [ecx+8], 5
	jne	SHORT $LN43@DXUTCreate
; Line 2391
	mov	DWORD PTR _ddt$[ebp], 5
; Line 2392
	mov	DWORD PTR _pAdapter$[ebp], 0
	jmp	SHORT $LN41@DXUTCreate
$LN43@DXUTCreate:
; Line 2394
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	cmp	DWORD PTR [edx+8], 2
	jne	SHORT $LN41@DXUTCreate
; Line 2396
	mov	DWORD PTR _ddt$[ebp], 2
; Line 2397
	mov	DWORD PTR _pAdapter$[ebp], 0
$LN41@DXUTCreate:
; Line 2400
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN37@DXUTCreate
; Line 2412
	lea	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	lea	ecx, DWORD PTR _FeatureLevel$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pd3d11Device$[ebp]
	push	edx
	push	7
	push	1
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	push	0
	mov	eax, DWORD PTR _ddt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapter$[ebp]
	push	ecx
	call	?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z ; DXUT_Dynamic_D3D11CreateDevice
	mov	DWORD PTR _hr$[ebp], eax
; Line 2414
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN37@DXUTCreate
; Line 2416
	mov	DWORD PTR _pAdapter$[ebp], 0
; Line 2418
	cmp	DWORD PTR _ddt$[ebp], 0
	jne	SHORT $LN38@DXUTCreate
; Line 2430
	lea	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	lea	eax, DWORD PTR _FeatureLevel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pd3d11Device$[ebp]
	push	ecx
	push	7
	push	1
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	add	edx, 96					; 00000060H
	push	edx
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	push	0
	push	1
	mov	edx, DWORD PTR _pAdapter$[ebp]
	push	edx
	call	?DXUT_Dynamic_D3D11CreateDevice@@YGJPAUIDXGIAdapter@@W4D3D_DRIVER_TYPE@@PAUHINSTANCE__@@IPAW4D3D_FEATURE_LEVEL@@IIPAPAUID3D11Device@@3PAPAUID3D11DeviceContext@@@Z ; DXUT_Dynamic_D3D11CreateDevice
	mov	DWORD PTR _hr$[ebp], eax
$LN38@DXUTCreate:
; Line 2432
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN37@DXUTCreate
; Line 2434
	push	0
	push	OFFSET $SG152333
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	2434					; 00000982H
	push	OFFSET $SG152334
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 2435
	mov	eax, -2147219195			; 80040905H
	jmp	$LN47@DXUTCreate
$LN37@DXUTCreate:
; Line 2441
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN35@DXUTCreate
; Line 2443
	mov	DWORD PTR _d3dDebug$10[ebp], 0
; Line 2444
	mov	esi, esp
	lea	ecx, DWORD PTR _d3dDebug$10[ebp]
	push	ecx
	push	OFFSET __GUID_79cf2233_7536_4948_9d36_1e4692dc5760
	mov	edx, DWORD PTR _pd3d11Device$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3d11Device$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$LN35@DXUTCreate
; Line 2446
	mov	DWORD PTR _infoQueue$9[ebp], 0
; Line 2447
	mov	esi, esp
	lea	eax, DWORD PTR _infoQueue$9[ebp]
	push	eax
	push	OFFSET __GUID_6543dbb6_1b48_42f5_ab82_e97ec74326f6
	mov	ecx, DWORD PTR _d3dDebug$10[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _d3dDebug$10[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN34@DXUTCreate
; Line 2453
	mov	DWORD PTR _denied$8[ebp], 55		; 00000037H
; Line 2456
	push	48					; 00000030H
	push	0
	lea	edx, DWORD PTR _filter$7[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2457
	mov	DWORD PTR _filter$7[ebp+40], 1
; Line 2458
	lea	eax, DWORD PTR _denied$8[ebp]
	mov	DWORD PTR _filter$7[ebp+44], eax
; Line 2459
	mov	esi, esp
	lea	ecx, DWORD PTR _filter$7[ebp]
	push	ecx
	mov	edx, DWORD PTR _infoQueue$9[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _infoQueue$9[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2460
	mov	eax, DWORD PTR _infoQueue$9[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _infoQueue$9[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@DXUTCreate:
; Line 2462
	mov	ecx, DWORD PTR _d3dDebug$10[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _d3dDebug$10[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@DXUTCreate:
; Line 2467
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN33@DXUTCreate
; Line 2469
	mov	DWORD PTR _pDXGIDev$6[ebp], 0
; Line 2470
	mov	esi, esp
	lea	edx, DWORD PTR _pDXGIDev$6[ebp]
	push	edx
	push	OFFSET __GUID_77db970f_6276_48ba_ba28_070143b4392c
	mov	eax, DWORD PTR _pd3d11Device$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3d11Device$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2471
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN31@DXUTCreate
	cmp	DWORD PTR _pDXGIDev$6[ebp], 0
	je	$LN31@DXUTCreate
; Line 2473
	cmp	DWORD PTR _pAdapter$[ebp], 0
	jne	$LN31@DXUTCreate
; Line 2475
	mov	DWORD PTR _pTempAdapter$5[ebp], 0
; Line 2476
	mov	esi, esp
	lea	ecx, DWORD PTR _pTempAdapter$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDXGIDev$6[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pDXGIDev$6[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN30@DXUTCreate
	push	1
	push	OFFSET $SG152370
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	2476					; 000009acH
	push	OFFSET $SG152371
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN47@DXUTCreate
$LN30@DXUTCreate:
; Line 2477
	mov	esi, esp
	lea	ecx, DWORD PTR _pAdapter$[ebp]
	push	ecx
	push	OFFSET __GUID_29038f61_3839_4626_91fd_086879011a05
	mov	edx, DWORD PTR _pTempAdapter$5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pTempAdapter$5[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN29@DXUTCreate
	push	1
	push	OFFSET $SG152377
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	2477					; 000009adH
	push	OFFSET $SG152378
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN47@DXUTCreate
$LN29@DXUTCreate:
; Line 2478
	mov	esi, esp
	lea	ecx, DWORD PTR _pDXGIFactory$[ebp]
	push	ecx
	push	OFFSET __GUID_770aae78_f26f_4dba_a829_253c83d1b387
	mov	edx, DWORD PTR _pAdapter$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pAdapter$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN28@DXUTCreate
	push	1
	push	OFFSET $SG152383
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	2478					; 000009aeH
	push	OFFSET $SG152384
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN47@DXUTCreate
$LN28@DXUTCreate:
; Line 2479
	cmp	DWORD PTR _pTempAdapter$5[ebp], 0
	je	SHORT $LN27@DXUTCreate
	mov	ecx, DWORD PTR _pTempAdapter$5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pTempAdapter$5[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pTempAdapter$5[ebp], 0
$LN27@DXUTCreate:
; Line 2480
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
	cmp	eax, DWORD PTR _pDXGIFactory$[ebp]
	je	SHORT $LN26@DXUTCreate
; Line 2481
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
	mov	DWORD PTR tv316[ebp], eax
	mov	edx, DWORD PTR tv316[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv316[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@DXUTCreate:
; Line 2482
	mov	eax, DWORD PTR _pDXGIFactory$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
$LN31@DXUTCreate:
; Line 2485
	cmp	DWORD PTR _pDXGIDev$6[ebp], 0
	je	SHORT $LN25@DXUTCreate
	mov	ecx, DWORD PTR _pDXGIDev$6[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pDXGIDev$6[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDXGIDev$6[ebp], 0
$LN25@DXUTCreate:
; Line 2486
	mov	edx, DWORD PTR _pAdapter$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ; DXUTState::SetDXGIAdapter
$LN33@DXUTCreate:
; Line 2489
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN24@DXUTCreate
; Line 2491
	push	0
	push	OFFSET $SG152391
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	2491					; 000009bbH
	push	OFFSET $SG152392
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 2492
	mov	eax, -2147219195			; 80040905H
	jmp	$LN47@DXUTCreate
$LN24@DXUTCreate:
; Line 2507
	mov	DWORD PTR _drd$[ebp], 3
	mov	DWORD PTR _drd$[ebp+4], 3
	mov	DWORD PTR _drd$[ebp+8], 0
	mov	DWORD PTR _drd$[ebp+12], 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _drd$[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _drd$[ebp+20], xmm0
	mov	DWORD PTR _drd$[ebp+24], 1
	mov	DWORD PTR _drd$[ebp+28], 0
	mov	DWORD PTR _drd$[ebp+32], 1
	mov	DWORD PTR _drd$[ebp+36], 0
; Line 2508
	mov	DWORD PTR _pRS$[ebp], 0
; Line 2509
	mov	esi, esp
	lea	ecx, DWORD PTR _pRS$[ebp]
	push	ecx
	lea	edx, DWORD PTR _drd$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3d11Device$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3d11Device$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2510
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN23@DXUTCreate
; Line 2512
	push	0
	push	OFFSET $SG152402
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	2512					; 000009d0H
	push	OFFSET $SG152403
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 2513
	mov	eax, -2147219195			; 80040905H
	jmp	$LN47@DXUTCreate
$LN23@DXUTCreate:
; Line 2515
	push	OFFSET $SG152408
	mov	edx, DWORD PTR _pRS$[ebp]
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 2516
	mov	eax, DWORD PTR _pRS$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z ; DXUTState::SetD3D11RasterizerState
; Line 2517
	mov	esi, esp
	mov	ecx, DWORD PTR _pRS$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+172]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2521
	mov	DWORD PTR _OutputCount$[ebp], 0
	jmp	SHORT $LN22@DXUTCreate
$LN21@DXUTCreate:
	mov	eax, DWORD PTR _OutputCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _OutputCount$[ebp], eax
$LN22@DXUTCreate:
; Line 2524
	mov	esi, esp
	lea	ecx, DWORD PTR _pOutput$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _OutputCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _pAdapter$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pAdapter$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN19@DXUTCreate
; Line 2525
	jmp	SHORT $LN20@DXUTCreate
$LN19@DXUTCreate:
; Line 2526
	cmp	DWORD PTR _pOutput$4[ebp], 0
	je	SHORT $LN18@DXUTCreate
	mov	ecx, DWORD PTR _pOutput$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pOutput$4[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pOutput$4[ebp], 0
$LN18@DXUTCreate:
; Line 2527
	jmp	SHORT $LN21@DXUTCreate
$LN20@DXUTCreate:
; Line 2528
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	xor	ecx, ecx
	mov	eax, DWORD PTR _OutputCount$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXIABUnothrow_t@std@@@Z		; operator new[]
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _ppOutputArray$[ebp], eax
; Line 2529
	cmp	DWORD PTR _ppOutputArray$[ebp], 0
	jne	SHORT $LN17@DXUTCreate
; Line 2530
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN47@DXUTCreate
$LN17@DXUTCreate:
; Line 2531
	mov	DWORD PTR _iOutput$[ebp], 0
	jmp	SHORT $LN16@DXUTCreate
$LN15@DXUTCreate:
	mov	ecx, DWORD PTR _iOutput$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iOutput$[ebp], ecx
$LN16@DXUTCreate:
	mov	edx, DWORD PTR _iOutput$[ebp]
	cmp	edx, DWORD PTR _OutputCount$[ebp]
	jae	SHORT $LN14@DXUTCreate
; Line 2532
	mov	eax, DWORD PTR _iOutput$[ebp]
	mov	ecx, DWORD PTR _ppOutputArray$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _iOutput$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapter$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pAdapter$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN15@DXUTCreate
$LN14@DXUTCreate:
; Line 2533
	mov	edx, DWORD PTR _ppOutputArray$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ; DXUTState::SetDXGIOutputArray
; Line 2534
	mov	eax, DWORD PTR _OutputCount$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z ; DXUTState::SetDXGIOutputArraySize
; Line 2537
	mov	esi, esp
	lea	ecx, DWORD PTR _pSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _pd3d11Device$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDXGIFactory$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pDXGIFactory$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2538
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN13@DXUTCreate
; Line 2540
	push	0
	push	OFFSET $SG152430
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	2540					; 000009ecH
	push	OFFSET $SG152431
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 2541
	mov	eax, -2147219195			; 80040905H
	jmp	$LN47@DXUTCreate
$LN13@DXUTCreate:
; Line 2544
	mov	eax, DWORD PTR _pd3d11Device$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ; DXUTState::SetD3D11Device
; Line 2545
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ; DXUTState::SetD3D11DeviceContext
; Line 2546
	mov	edx, DWORD PTR _FeatureLevel$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetD3D11FeatureLevel
; Line 2547
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ; DXUTState::SetDXGISwapChain
; Line 2549
	cmp	DWORD PTR _pd3d11Device$[ebp], 0
	jne	SHORT $LN51@DXUTCreate
	mov	esi, esp
	push	2549					; 000009f5H
	push	OFFSET $SG152437
	push	OFFSET $SG152438
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN51@DXUTCreate:
; Line 2552
	cmp	DWORD PTR _pd3dImmediateContext$[ebp], 0
	jne	SHORT $LN52@DXUTCreate
	mov	esi, esp
	push	2552					; 000009f8H
	push	OFFSET $SG152440
	push	OFFSET $SG152441
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@DXUTCreate:
; Line 2557
	mov	DWORD PTR _pd3d11Device1$3[ebp], 0
; Line 2558
	mov	esi, esp
	lea	eax, DWORD PTR _pd3d11Device1$3[ebp]
	push	eax
	push	OFFSET __GUID_a04bfb29_08ef_43d6_a49c_a9bdbdcbe686
	mov	ecx, DWORD PTR _pd3d11Device$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3d11Device$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2559
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN11@DXUTCreate
	cmp	DWORD PTR _pd3d11Device1$3[ebp], 0
	je	SHORT $LN11@DXUTCreate
; Line 2561
	mov	edx, DWORD PTR _pd3d11Device1$3[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ; DXUTState::SetD3D11Device1
; Line 2563
	mov	DWORD PTR _pd3dImmediateContext1$2[ebp], 0
; Line 2564
	mov	esi, esp
	lea	eax, DWORD PTR _pd3dImmediateContext1$2[ebp]
	push	eax
	push	OFFSET __GUID_bb2c6faa_b5fb_4082_8e6b_388b8cfa90e1
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2565
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN11@DXUTCreate
	cmp	DWORD PTR _pd3dImmediateContext1$2[ebp], 0
	je	SHORT $LN11@DXUTCreate
; Line 2567
	mov	edx, DWORD PTR _pd3dImmediateContext1$2[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ; DXUTState::SetD3D11DeviceContext1
$LN11@DXUTCreate:
; Line 2592
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	cmp	DWORD PTR [eax+8], 2
	jne	SHORT $LN10@DXUTCreate
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	test	eax, eax
	jne	SHORT $LN10@DXUTCreate
; Line 2593
	push	10					; 0000000aH
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
	jmp	SHORT $LN8@DXUTCreate
$LN10@DXUTCreate:
; Line 2594
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	SHORT $LN8@DXUTCreate
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN8@DXUTCreate
; Line 2595
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
$LN8@DXUTCreate:
; Line 2598
	call	?DXUTUpdateBackBufferDesc@@YAXXZ	; DXUTUpdateBackBufferDesc
; Line 2601
	call	?DXUTSetupCursor@@YAXXZ			; DXUTSetupCursor
; Line 2604
	push	0
	push	1
	push	0
	call	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
	mov	DWORD PTR _pd3dEnum$[ebp], eax
; Line 2605
	cmp	DWORD PTR _pd3dEnum$[ebp], 0
	jne	SHORT $LN53@DXUTCreate
	mov	esi, esp
	push	2605					; 00000a2dH
	push	OFFSET $SG152458
	push	OFFSET $SG152459
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@DXUTCreate:
; Line 2607
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pd3dEnum$[ebp]
	call	?GetAdapterInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumAdapterInfo@@I@Z ; CD3D11Enumeration::GetAdapterInfo
	mov	DWORD PTR _pAdapterInfo$[ebp], eax
; Line 2608
	mov	edx, DWORD PTR _pAdapterInfo$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?DXUTUpdateD3D11DeviceStats@@YAXW4D3D_DRIVER_TYPE@@W4D3D_FEATURE_LEVEL@@PAUDXGI_ADAPTER_DESC@@@Z ; DXUTUpdateD3D11DeviceStats
	add	esp, 12					; 0000000cH
; Line 2611
	call	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
	mov	DWORD PTR _pBackBufferSurfaceDesc$[ebp], eax
; Line 2612
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2613
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11DeviceCreatedFunc
	mov	DWORD PTR _pCallbackDeviceCreated$[ebp], eax
; Line 2614
	mov	DWORD PTR _hr$[ebp], 0
; Line 2615
	cmp	DWORD PTR _pCallbackDeviceCreated$[ebp], 0
	je	SHORT $LN7@DXUTCreate
; Line 2617
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceCreatedFuncUserContext
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
	push	ecx
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	push	eax
	call	DWORD PTR _pCallbackDeviceCreated$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN7@DXUTCreate:
; Line 2618
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2619
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	test	eax, eax
	jne	SHORT $LN6@DXUTCreate
; Line 2620
	mov	eax, -2147467259			; 80004005H
	jmp	$LN47@DXUTCreate
$LN6@DXUTCreate:
; Line 2621
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@DXUTCreate
; Line 2623
	push	0
	push	OFFSET $SG152473
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	2623					; 00000a3fH
	push	OFFSET $SG152474
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 2624
	cmp	DWORD PTR _hr$[ebp], -2147219197	; 80040903H
	jne	SHORT $LN54@DXUTCreate
	mov	DWORD PTR tv621[ebp], -2147219197	; 80040903H
	jmp	SHORT $LN55@DXUTCreate
$LN54@DXUTCreate:
	mov	DWORD PTR tv621[ebp], -2147219193	; 80040907H
$LN55@DXUTCreate:
	mov	eax, DWORD PTR tv621[ebp]
	jmp	$LN47@DXUTCreate
$LN5@DXUTCreate:
; Line 2626
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsCreated
; Line 2629
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3d11Device$[ebp]
	push	edx
	call	?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ; DXUTCreateD3D11Views
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 2630
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@DXUTCreate
; Line 2632
	push	0
	push	OFFSET $SG152490
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	2632					; 00000a48H
	push	OFFSET $SG152491
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 2633
	mov	eax, -2147219193			; 80040907H
	jmp	$LN47@DXUTCreate
$LN4@DXUTCreate:
; Line 2637
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2638
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11SwapChainResizedFunc
	mov	DWORD PTR _pCallbackSwapChainResized$[ebp], eax
; Line 2639
	mov	DWORD PTR _hr$[ebp], 0
; Line 2640
	cmp	DWORD PTR _pCallbackSwapChainResized$[ebp], 0
	je	SHORT $LN3@DXUTCreate
; Line 2642
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	push	edx
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	push	eax
	call	DWORD PTR _pCallbackSwapChainResized$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN3@DXUTCreate:
; Line 2643
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2644
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	test	eax, eax
	jne	SHORT $LN2@DXUTCreate
; Line 2645
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN47@DXUTCreate
$LN2@DXUTCreate:
; Line 2646
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@DXUTCreate
; Line 2648
	push	0
	push	OFFSET $SG152504
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	2648					; 00000a58H
	push	OFFSET $SG152505
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 2649
	cmp	DWORD PTR _hr$[ebp], -2147219197	; 80040903H
	jne	SHORT $LN56@DXUTCreate
	mov	DWORD PTR tv663[ebp], -2147219197	; 80040903H
	jmp	SHORT $LN57@DXUTCreate
$LN56@DXUTCreate:
	mov	DWORD PTR tv663[ebp], -2147219192	; 80040908H
$LN57@DXUTCreate:
	mov	eax, DWORD PTR tv663[ebp]
	jmp	SHORT $LN47@DXUTCreate
$LN1@DXUTCreate:
; Line 2651
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
; Line 2653
	xor	eax, eax
$LN47@DXUTCreate:
; Line 2654
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN76@DXUTCreate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN76@DXUTCreate:
	DD	17					; 00000011H
	DD	$LN75@DXUTCreate
$LN75@DXUTCreate:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN58@DXUTCreate
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN59@DXUTCreate
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN60@DXUTCreate
	DD	-52					; ffffffccH
	DD	4
	DD	$LN61@DXUTCreate
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN62@DXUTCreate
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN63@DXUTCreate
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN64@DXUTCreate
	DD	-108					; ffffff94H
	DD	4
	DD	$LN65@DXUTCreate
	DD	-120					; ffffff88H
	DD	4
	DD	$LN66@DXUTCreate
	DD	-176					; ffffff50H
	DD	48					; 00000030H
	DD	$LN67@DXUTCreate
	DD	-188					; ffffff44H
	DD	4
	DD	$LN68@DXUTCreate
	DD	-200					; ffffff38H
	DD	4
	DD	$LN69@DXUTCreate
	DD	-248					; ffffff08H
	DD	40					; 00000028H
	DD	$LN70@DXUTCreate
	DD	-260					; fffffefcH
	DD	4
	DD	$LN71@DXUTCreate
	DD	-280					; fffffee8H
	DD	4
	DD	$LN72@DXUTCreate
	DD	-296					; fffffed8H
	DD	4
	DD	$LN73@DXUTCreate
	DD	-308					; fffffeccH
	DD	4
	DD	$LN74@DXUTCreate
$LN74@DXUTCreate:
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	51					; 00000033H
	DB	100					; 00000064H
	DB	73					; 00000049H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
$LN73@DXUTCreate:
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	51					; 00000033H
	DB	100					; 00000064H
	DB	49					; 00000031H
	DB	49					; 00000031H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
$LN72@DXUTCreate:
	DB	112					; 00000070H
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN71@DXUTCreate:
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	83					; 00000053H
	DB	0
$LN70@DXUTCreate:
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN69@DXUTCreate:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN68@DXUTCreate:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	88					; 00000058H
	DB	71					; 00000047H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	0
$LN67@DXUTCreate:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN66@DXUTCreate:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN65@DXUTCreate:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	81					; 00000051H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN64@DXUTCreate:
	DB	100					; 00000064H
	DB	51					; 00000033H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	103					; 00000067H
	DB	0
$LN63@DXUTCreate:
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN62@DXUTCreate:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	88					; 00000058H
	DB	71					; 00000047H
	DB	73					; 00000049H
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
$LN61@DXUTCreate:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	119					; 00000077H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN60@DXUTCreate:
	DB	70					; 00000046H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN59@DXUTCreate:
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	51					; 00000033H
	DB	100					; 00000064H
	DB	73					; 00000049H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN58@DXUTCreate:
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	51					; 00000033H
	DB	100					; 00000064H
	DB	49					; 00000031H
	DB	49					; 00000031H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?DXUTCreate3DEnvironment11@@YAJXZ ENDP			; DXUTCreate3DEnvironment11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_descDSV$1 = -192					; size = 24
_descDepth$2 = -160					; size = 44
_pDepthStencil$3 = -108					; size = 4
_backBufferSurfaceDesc$ = -96				; size = 44
_pBackBuffer$ = -44					; size = 4
_pRTV$ = -32						; size = 4
_pDSV$ = -20						; size = 4
_pSwapChain$ = -12					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3dImmediateContext$ = 12				; size = 4
_pDeviceSettings$ = 16					; size = 4
?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z PROC ; DXUTCreateD3D11Views
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2286
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2287
	mov	DWORD PTR _hr$[ebp], 0
; Line 2288
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$[ebp], eax
; Line 2289
	mov	DWORD PTR _pDSV$[ebp], 0
; Line 2290
	mov	DWORD PTR _pRTV$[ebp], 0
; Line 2294
	mov	esi, esp
	lea	eax, DWORD PTR _pBackBuffer$[ebp]
	push	eax
	push	OFFSET __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
	push	0
	mov	ecx, DWORD PTR _pSwapChain$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2295
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN9@DXUTCreate
; Line 2296
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN10@DXUTCreate
$LN9@DXUTCreate:
; Line 2298
	mov	esi, esp
	lea	edx, DWORD PTR _backBufferSurfaceDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pBackBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pBackBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2301
	mov	esi, esp
	lea	ecx, DWORD PTR _pRTV$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pBackBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2302
	cmp	DWORD PTR _pBackBuffer$[ebp], 0
	je	SHORT $LN8@DXUTCreate
	mov	ecx, DWORD PTR _pBackBuffer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pBackBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBackBuffer$[ebp], 0
$LN8@DXUTCreate:
; Line 2303
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@DXUTCreate
; Line 2304
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN10@DXUTCreate
$LN7@DXUTCreate:
; Line 2305
	push	OFFSET $SG152279
	mov	edx, DWORD PTR _pRTV$[ebp]
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 2306
	mov	eax, DWORD PTR _pRTV$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
; Line 2308
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	movzx	edx, BYTE PTR [ecx+88]
	test	edx, edx
	je	$LN6@DXUTCreate
; Line 2311
	mov	DWORD PTR _pDepthStencil$3[ebp], 0
; Line 2313
	mov	eax, DWORD PTR _backBufferSurfaceDesc$[ebp]
	mov	DWORD PTR _descDepth$2[ebp], eax
; Line 2314
	mov	ecx, DWORD PTR _backBufferSurfaceDesc$[ebp+4]
	mov	DWORD PTR _descDepth$2[ebp+4], ecx
; Line 2315
	mov	DWORD PTR _descDepth$2[ebp+8], 1
; Line 2316
	mov	DWORD PTR _descDepth$2[ebp+12], 1
; Line 2317
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	DWORD PTR _descDepth$2[ebp+16], eax
; Line 2318
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _descDepth$2[ebp+20], edx
; Line 2319
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _descDepth$2[ebp+24], ecx
; Line 2320
	mov	DWORD PTR _descDepth$2[ebp+28], 0
; Line 2321
	mov	DWORD PTR _descDepth$2[ebp+32], 64	; 00000040H
; Line 2322
	mov	DWORD PTR _descDepth$2[ebp+36], 0
; Line 2323
	mov	DWORD PTR _descDepth$2[ebp+40], 0
; Line 2324
	mov	esi, esp
	lea	edx, DWORD PTR _pDepthStencil$3[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _descDepth$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2325
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@DXUTCreate
; Line 2326
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN10@DXUTCreate
$LN5@DXUTCreate:
; Line 2327
	push	OFFSET $SG152285
	mov	edx, DWORD PTR _pDepthStencil$3[ebp]
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 2328
	mov	eax, DWORD PTR _pDepthStencil$3[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
; Line 2332
	mov	ecx, DWORD PTR _descDepth$2[ebp+16]
	mov	DWORD PTR _descDSV$1[ebp], ecx
; Line 2333
	mov	DWORD PTR _descDSV$1[ebp+8], 0
; Line 2334
	cmp	DWORD PTR _descDepth$2[ebp+20], 1
	jbe	SHORT $LN4@DXUTCreate
; Line 2335
	mov	DWORD PTR _descDSV$1[ebp+4], 5
; Line 2336
	jmp	SHORT $LN3@DXUTCreate
$LN4@DXUTCreate:
; Line 2337
	mov	DWORD PTR _descDSV$1[ebp+4], 3
$LN3@DXUTCreate:
; Line 2338
	mov	DWORD PTR _descDSV$1[ebp+12], 0
; Line 2339
	mov	esi, esp
	lea	edx, DWORD PTR _pDSV$[ebp]
	push	edx
	lea	eax, DWORD PTR _descDSV$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDepthStencil$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2340
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@DXUTCreate
; Line 2341
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN10@DXUTCreate
$LN2@DXUTCreate:
; Line 2342
	push	OFFSET $SG152291
	mov	eax, DWORD PTR _pDSV$[ebp]
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 2343
	mov	ecx, DWORD PTR _pDSV$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
$LN6@DXUTCreate:
; Line 2346
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	call	?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z ; DXUTSetupD3D11Views
	mov	DWORD PTR _hr$[ebp], eax
; Line 2347
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@DXUTCreate
; Line 2348
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN10@DXUTCreate
$LN1@DXUTCreate:
; Line 2350
	mov	eax, DWORD PTR _hr$[ebp]
$LN10@DXUTCreate:
; Line 2351
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@DXUTCreate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@DXUTCreate:
	DD	7
	DD	$LN19@DXUTCreate
$LN19@DXUTCreate:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@DXUTCreate
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@DXUTCreate
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN14@DXUTCreate
	DD	-96					; ffffffa0H
	DD	44					; 0000002cH
	DD	$LN15@DXUTCreate
	DD	-108					; ffffff94H
	DD	4
	DD	$LN16@DXUTCreate
	DD	-160					; ffffff60H
	DD	44					; 0000002cH
	DD	$LN17@DXUTCreate
	DD	-192					; ffffff40H
	DD	24					; 00000018H
	DD	$LN18@DXUTCreate
$LN18@DXUTCreate:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	83					; 00000053H
	DB	86					; 00000056H
	DB	0
$LN17@DXUTCreate:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN16@DXUTCreate:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	0
$LN15@DXUTCreate:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN14@DXUTCreate:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN13@DXUTCreate:
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	84					; 00000054H
	DB	86					; 00000056H
	DB	0
$LN12@DXUTCreate:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	83					; 00000053H
	DB	86					; 00000056H
	DB	0
?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ENDP ; DXUTCreateD3D11Views
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rcWindow$1 = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
?DXUTSetupCursor@@YAXXZ PROC				; DXUTSetupCursor
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3969
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3971
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@DXUTSetupC
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ ; DXUTState::GetClipCursorWhenFullScreen
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@DXUTSetupC
; Line 3975
	mov	esi, esp
	lea	edx, DWORD PTR _rcWindow$1[ebp]
	push	edx
	call	?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceFullScreen
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3976
	mov	esi, esp
	lea	eax, DWORD PTR _rcWindow$1[ebp]
	push	eax
	call	DWORD PTR __imp__ClipCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3978
	jmp	SHORT $LN3@DXUTSetupC
$LN2@DXUTSetupC:
; Line 3980
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__ClipCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DXUTSetupC:
; Line 3982
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@DXUTSetupC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@DXUTSetupC:
	DD	1
	DD	$LN6@DXUTSetupC
$LN6@DXUTSetupC:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN5@DXUTSetupC
$LN5@DXUTSetupC:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
?DXUTSetupCursor@@YAXXZ ENDP				; DXUTSetupCursor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_TexDesc$1 = -76					; size = 44
_pBBufferSurfaceDesc$ = -28				; size = 4
_pSwapChain$ = -24					; size = 4
_pBackBuffer$ = -16					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTUpdateBackBufferDesc@@YAXXZ PROC			; DXUTUpdateBackBufferDesc
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3943
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3946
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ; DXUTState::GetDXGISwapChain
	mov	DWORD PTR _pSwapChain$[ebp], eax
; Line 3947
	cmp	DWORD PTR _pSwapChain$[ebp], 0
	jne	SHORT $LN5@DXUTUpdate
	mov	esi, esp
	push	3947					; 00000f6bH
	push	OFFSET $SG153596
	push	OFFSET $SG153597
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@DXUTUpdate:
; Line 3949
	mov	esi, esp
	lea	ecx, DWORD PTR _pBackBuffer$[ebp]
	push	ecx
	push	OFFSET __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
	push	0
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 3950
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
	mov	DWORD PTR _pBBufferSurfaceDesc$[ebp], eax
; Line 3951
	xor	eax, eax
	mov	ecx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
; Line 3952
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@DXUTUpdate
; Line 3955
	mov	esi, esp
	lea	edx, DWORD PTR _TexDesc$1[ebp]
	push	edx
	mov	eax, DWORD PTR _pBackBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pBackBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3956
	mov	ecx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
	mov	edx, DWORD PTR _TexDesc$1[ebp]
	mov	DWORD PTR [ecx], edx
; Line 3957
	mov	eax, DWORD PTR _pBBufferSurfaceDesc$[ebp]
	mov	ecx, DWORD PTR _TexDesc$1[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 3958
	mov	edx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
	mov	eax, DWORD PTR _TexDesc$1[ebp+16]
	mov	DWORD PTR [edx+8], eax
; Line 3959
	mov	ecx, DWORD PTR _pBBufferSurfaceDesc$[ebp]
	mov	edx, DWORD PTR _TexDesc$1[ebp+20]
	mov	DWORD PTR [ecx+12], edx
	mov	eax, DWORD PTR _TexDesc$1[ebp+24]
	mov	DWORD PTR [ecx+16], eax
; Line 3960
	cmp	DWORD PTR _pBackBuffer$[ebp], 0
	je	SHORT $LN3@DXUTUpdate
	mov	ecx, DWORD PTR _pBackBuffer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pBackBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBackBuffer$[ebp], 0
$LN3@DXUTUpdate:
; Line 3962
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@DXUTUpdate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@DXUTUpdate:
	DD	2
	DD	$LN8@DXUTUpdate
$LN8@DXUTUpdate:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN6@DXUTUpdate
	DD	-76					; ffffffb4H
	DD	44					; 0000002cH
	DD	$LN7@DXUTUpdate
$LN7@DXUTUpdate:
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN6@DXUTUpdate:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?DXUTUpdateBackBufferDesc@@YAXXZ ENDP			; DXUTUpdateBackBufferDesc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDeviceSettings$1 = -16				; size = 4
_pDeviceRemovedFunc$ = -12				; size = 4
_bLookForNewDevice$ = -5				; size = 1
_hr$ = -4						; size = 4
?DXUTHandleDeviceRemoved@@YAJXZ PROC			; DXUTHandleDeviceRemoved
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3908
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 3909
	mov	DWORD PTR _hr$[ebp], 0
; Line 3913
	mov	BYTE PTR _bLookForNewDevice$[ebp], 1
; Line 3914
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ ; DXUTState::GetDeviceRemovedFunc
	mov	DWORD PTR _pDeviceRemovedFunc$[ebp], eax
; Line 3915
	cmp	DWORD PTR _pDeviceRemovedFunc$[ebp], 0
	je	SHORT $LN4@DXUTHandle
; Line 3916
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetDeviceRemovedFuncUserContext
	mov	esi, esp
	push	eax
	call	DWORD PTR _pDeviceRemovedFunc$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _bLookForNewDevice$[ebp], al
$LN4@DXUTHandle:
; Line 3918
	movzx	eax, BYTE PTR _bLookForNewDevice$[ebp]
	test	eax, eax
	je	SHORT $LN3@DXUTHandle
; Line 3920
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDeviceSettings$1[ebp], eax
; Line 3923
	push	0
	push	0
	mov	ecx, DWORD PTR _pDeviceSettings$1[ebp]
	push	ecx
	call	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 3924
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@DXUTHandle
; Line 3928
	push	0
	mov	edx, DWORD PTR _pDeviceSettings$1[ebp]
	push	edx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 3929
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@DXUTHandle
; Line 3930
	xor	eax, eax
	jmp	SHORT $LN5@DXUTHandle
$LN3@DXUTHandle:
; Line 3935
	mov	eax, -2147219190			; 8004090aH
$LN5@DXUTHandle:
; Line 3936
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTHandleDeviceRemoved@@YAJXZ ENDP			; DXUTHandleDeviceRemoved
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv169 = -336						; size = 4
tv132 = -332						; size = 4
tv166 = -328						; size = 4
tv82 = -324						; size = 4
$T2 = -320						; size = 4
$T3 = -316						; size = 12
$T4 = -301						; size = 1
$T5 = -300						; size = 12
$T6 = -285						; size = 1
_Desc$7 = -280						; size = 92
_pOutputInfo$8 = -184					; size = 4
_jit$9 = -176						; size = 12
_pAdapterInfo$10 = -160					; size = 4
_it$11 = -152						; size = 12
_pAdapterList$ = -136					; size = 4
_pd3dEnum$ = -132					; size = 4
_mi$ = -124						; size = 104
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hMonitor$ = 8						; size = 4
_pOutputOrdinal$ = 12					; size = 4
?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z PROC ; DXUTGetOutputOrdinalFromMonitor
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3870
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 324				; 00000144H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 3873
	mov	DWORD PTR _mi$[ebp], 104		; 00000068H
; Line 3874
	lea	eax, DWORD PTR _mi$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hMonitor$[ebp]
	push	ecx
	call	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 3877
	push	0
	push	1
	push	0
	call	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
	mov	DWORD PTR _pd3dEnum$[ebp], eax
; Line 3878
	mov	ecx, DWORD PTR _pd3dEnum$[ebp]
	call	?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ ; CD3D11Enumeration::GetAdapterInfoList
	mov	DWORD PTR _pAdapterList$[ebp], eax
; Line 3879
	lea	edx, DWORD PTR _it$11[ebp]
	push	edx
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN8@DXUTGetOut
$LN7@DXUTGetOut:
	lea	ecx, DWORD PTR _it$11[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
$LN8@DXUTGetOut:
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv166[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv166[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$11[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
	mov	BYTE PTR $T6[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T6[ebp]
	test	eax, eax
	je	$LN6@DXUTGetOut
; Line 3881
	lea	ecx, DWORD PTR _it$11[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pAdapterInfo$10[ebp], ecx
; Line 3882
	lea	edx, DWORD PTR _jit$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _pAdapterInfo$10[ebp]
	add	ecx, 560				; 00000230H
	call	?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jmp	SHORT $LN5@DXUTGetOut
$LN4@DXUTGetOut:
	lea	ecx, DWORD PTR _jit$9[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
$LN5@DXUTGetOut:
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapterInfo$10[ebp]
	add	ecx, 560				; 00000230H
	call	?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR tv132[ebp]
	mov	DWORD PTR tv169[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv169[ebp]
	push	edx
	lea	ecx, DWORD PTR _jit$9[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
	mov	BYTE PTR $T4[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T4[ebp]
	test	eax, eax
	je	$LN3@DXUTGetOut
; Line 3884
	lea	ecx, DWORD PTR _jit$9[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pOutputInfo$8[ebp], ecx
; Line 3886
	mov	esi, esp
	lea	edx, DWORD PTR _Desc$7[ebp]
	push	edx
	mov	eax, DWORD PTR _pOutputInfo$8[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _pOutputInfo$8[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN2@DXUTGetOut
; Line 3887
	push	92					; 0000005cH
	push	0
	lea	eax, DWORD PTR _Desc$7[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN2@DXUTGetOut:
; Line 3889
	mov	ecx, DWORD PTR _hMonitor$[ebp]
	cmp	ecx, DWORD PTR _Desc$7[ebp+88]
	jne	SHORT $LN1@DXUTGetOut
; Line 3891
	mov	edx, DWORD PTR _pOutputOrdinal$[ebp]
	mov	eax, DWORD PTR _pOutputInfo$8[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx], ecx
; Line 3892
	mov	DWORD PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _jit$9[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$11[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN9@DXUTGetOut
$LN1@DXUTGetOut:
; Line 3893
	jmp	$LN4@DXUTGetOut
$LN3@DXUTGetOut:
; Line 3894
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _jit$9[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
	jmp	$LN7@DXUTGetOut
$LN6@DXUTGetOut:
; Line 3895
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$11[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
; Line 3897
	mov	eax, -2147467259			; 80004005H
$LN9@DXUTGetOut:
; Line 3898
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@DXUTGetOut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN21@DXUTGetOut:
	DD	4
	DD	$LN20@DXUTGetOut
$LN20@DXUTGetOut:
	DD	-124					; ffffff84H
	DD	104					; 00000068H
	DD	$LN15@DXUTGetOut
	DD	-152					; ffffff68H
	DD	12					; 0000000cH
	DD	$LN16@DXUTGetOut
	DD	-176					; ffffff50H
	DD	12					; 0000000cH
	DD	$LN17@DXUTGetOut
	DD	-280					; fffffee8H
	DD	92					; 0000005cH
	DD	$LN18@DXUTGetOut
$LN18@DXUTGetOut:
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN17@DXUTGetOut:
	DB	106					; 0000006aH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN16@DXUTGetOut:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN15@DXUTGetOut:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0:
	lea	ecx, DWORD PTR _it$11[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2:
	lea	ecx, DWORD PTR _jit$9[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ENDP ; DXUTGetOutputOrdinalFromMonitor
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv162 = -236						; size = 4
tv132 = -232						; size = 4
tv159 = -228						; size = 4
tv82 = -224						; size = 4
$T2 = -220						; size = 4
$T3 = -216						; size = 12
$T4 = -201						; size = 1
$T5 = -200						; size = 12
$T6 = -185						; size = 1
_pOutputInfo$7 = -184					; size = 4
_jit$8 = -176						; size = 12
_pAdapterInfo$9 = -160					; size = 4
_it$10 = -152						; size = 12
_pAdapterList$ = -136					; size = 4
_pd3dEnum$ = -132					; size = 4
_mi$ = -124						; size = 104
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hMonitor$ = 8						; size = 4
_pAdapterOrdinal$ = 12					; size = 4
?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z PROC ; DXUTGetAdapterOrdinalFromMonitor
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3835
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 3836
	mov	eax, DWORD PTR _pAdapterOrdinal$[ebp]
	mov	DWORD PTR [eax], 0
; Line 3840
	mov	DWORD PTR _mi$[ebp], 104		; 00000068H
; Line 3841
	lea	ecx, DWORD PTR _mi$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMonitor$[ebp]
	push	edx
	call	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 3844
	push	0
	push	1
	push	0
	call	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
	mov	DWORD PTR _pd3dEnum$[ebp], eax
; Line 3845
	mov	ecx, DWORD PTR _pd3dEnum$[ebp]
	call	?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ ; CD3D11Enumeration::GetAdapterInfoList
	mov	DWORD PTR _pAdapterList$[ebp], eax
; Line 3846
	lea	eax, DWORD PTR _it$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN7@DXUTGetAda
$LN6@DXUTGetAda:
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
$LN7@DXUTGetAda:
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
	mov	DWORD PTR tv82[ebp], eax
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv159[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv159[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
	mov	BYTE PTR $T6[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T6[ebp]
	test	ecx, ecx
	je	$LN5@DXUTGetAda
; Line 3848
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _pAdapterInfo$9[ebp], edx
; Line 3849
	lea	eax, DWORD PTR _jit$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapterInfo$9[ebp]
	add	ecx, 560				; 00000230H
	call	?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jmp	SHORT $LN4@DXUTGetAda
$LN3@DXUTGetAda:
	lea	ecx, DWORD PTR _jit$8[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator++
$LN4@DXUTGetAda:
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pAdapterInfo$9[ebp]
	add	ecx, 560				; 00000230H
	call	?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
	mov	DWORD PTR tv132[ebp], eax
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	lea	ecx, DWORD PTR _jit$8[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator!=
	mov	BYTE PTR $T4[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T4[ebp]
	test	ecx, ecx
	je	SHORT $LN2@DXUTGetAda
; Line 3851
	lea	ecx, DWORD PTR _jit$8[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumOutputInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _pOutputInfo$7[ebp], edx
; Line 3854
	mov	esi, esp
	push	32					; 00000020H
	lea	eax, DWORD PTR _mi$[ebp+40]
	push	eax
	mov	ecx, DWORD PTR _pOutputInfo$7[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	DWORD PTR __imp__wcsncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@DXUTGetAda
; Line 3856
	mov	edx, DWORD PTR _pAdapterOrdinal$[ebp]
	mov	eax, DWORD PTR _pAdapterInfo$9[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 3857
	mov	DWORD PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _jit$8[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN8@DXUTGetAda
$LN1@DXUTGetAda:
; Line 3858
	jmp	$LN3@DXUTGetAda
$LN2@DXUTGetAda:
; Line 3859
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _jit$8[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
	jmp	$LN6@DXUTGetAda
$LN5@DXUTGetAda:
; Line 3860
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$10[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
; Line 3861
	mov	eax, -2147467259			; 80004005H
$LN8@DXUTGetAda:
; Line 3862
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@DXUTGetAda
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@DXUTGetAda:
	DD	3
	DD	$LN18@DXUTGetAda
$LN18@DXUTGetAda:
	DD	-124					; ffffff84H
	DD	104					; 00000068H
	DD	$LN14@DXUTGetAda
	DD	-152					; ffffff68H
	DD	12					; 0000000cH
	DD	$LN15@DXUTGetAda
	DD	-176					; ffffff50H
	DD	12					; 0000000cH
	DD	$LN16@DXUTGetAda
$LN16@DXUTGetAda:
	DB	106					; 0000006aH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN15@DXUTGetAda:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN14@DXUTGetAda:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$0:
	lea	ecx, DWORD PTR _it$10[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$1:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$2:
	lea	ecx, DWORD PTR _jit$8[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z$3:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ENDP ; DXUTGetAdapterOrdinalFromMonitor
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pOutputInfo$ = -8					; size = 4
_pD3DEnum$ = -4						; size = 4
_pDeviceSettings$ = 8					; size = 4
?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z PROC ; DXUTGetMonitorFromAdapter
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3818
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3819
	push	0
	push	1
	push	0
	call	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
	mov	DWORD PTR _pD3DEnum$[ebp], eax
; Line 3820
	cmp	DWORD PTR _pD3DEnum$[ebp], 0
	jne	SHORT $LN4@DXUTGetMon
	mov	esi, esp
	push	3820					; 00000eecH
	push	OFFSET $SG153306
	push	OFFSET $SG153307
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@DXUTGetMon:
; Line 3823
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pD3DEnum$[ebp]
	call	?GetOutputInfo@CD3D11Enumeration@@QBEPAVCD3D11EnumOutputInfo@@II@Z ; CD3D11Enumeration::GetOutputInfo
	mov	DWORD PTR _pOutputInfo$[ebp], eax
; Line 3824
	cmp	DWORD PTR _pOutputInfo$[ebp], 0
	jne	SHORT $LN1@DXUTGetMon
; Line 3825
	xor	eax, eax
	jmp	SHORT $LN2@DXUTGetMon
$LN1@DXUTGetMon:
; Line 3826
	push	2
	mov	edx, DWORD PTR _pOutputInfo$[ebp]
	add	edx, 76					; 0000004cH
	push	edx
	call	?DXUTMonitorFromRect@@YGPAUHMONITOR__@@PBUtagRECT@@K@Z ; DXUTMonitorFromRect
$LN2@DXUTGetMon:
; Line 3827
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ENDP ; DXUTGetMonitorFromAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -104						; size = 4
$T1 = -100						; size = 4
$T2 = -96						; size = 4
_pBackBufferSurfaceDesc$3 = -92				; size = 4
_pOldDeviceSettings$4 = -88				; size = 4
_dxgiDebug$5 = -80					; size = 4
_references$6 = -72					; size = 4
_pd3dDevice1$7 = -68					; size = 4
_d3dDebug$8 = -60					; size = 4
_pImmediateContext1$9 = -52				; size = 4
_pImmediateContext$10 = -48				; size = 4
_pAdapter$11 = -44					; size = 4
_o$12 = -40						; size = 4
_OutputCount$13 = -36					; size = 4
_ppOutputArray$14 = -32					; size = 4
_pSwapChain$15 = -28					; size = 4
_pCallbackDeviceDestroyed$16 = -24			; size = 4
_pRTV$17 = -20						; size = 4
_pDSV$18 = -16						; size = 4
_pDS$19 = -12						; size = 4
_pCallbackSwapChainReleasing$20 = -8			; size = 4
_pd3dDevice$ = -4					; size = 4
_bReleaseSettings$ = 8					; size = 1
?DXUTCleanup3DEnvironment@@YAX_N@Z PROC			; DXUTCleanup3DEnvironment
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2937
	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2938
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 2940
	cmp	DWORD PTR _pd3dDevice$[ebp], 0
	je	$LN26@DXUTCleanu
; Line 2942
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ; DXUTState::GetD3D11RasterizerState
	test	eax, eax
	je	SHORT $LN24@DXUTCleanu
; Line 2943
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ; DXUTState::GetD3D11RasterizerState
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@DXUTCleanu:
; Line 2946
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2947
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceObjectsReset@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsReset
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN23@DXUTCleanu
; Line 2950
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
	mov	DWORD PTR _pCallbackSwapChainReleasing$20[ebp], eax
; Line 2951
	cmp	DWORD PTR _pCallbackSwapChainReleasing$20[ebp], 0
	je	SHORT $LN22@DXUTCleanu
; Line 2952
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext
	mov	esi, esp
	push	eax
	call	DWORD PTR _pCallbackSwapChainReleasing$20[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@DXUTCleanu:
; Line 2953
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
$LN23@DXUTCleanu:
; Line 2957
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ; DXUTState::GetD3D11DepthStencil
	mov	DWORD PTR _pDS$19[ebp], eax
; Line 2958
	cmp	DWORD PTR _pDS$19[ebp], 0
	je	SHORT $LN21@DXUTCleanu
	mov	edx, DWORD PTR _pDS$19[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pDS$19[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDS$19[ebp], 0
$LN21@DXUTCleanu:
; Line 2959
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
; Line 2960
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
	mov	DWORD PTR _pDSV$18[ebp], eax
; Line 2961
	cmp	DWORD PTR _pDSV$18[ebp], 0
	je	SHORT $LN20@DXUTCleanu
	mov	eax, DWORD PTR _pDSV$18[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pDSV$18[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDSV$18[ebp], 0
$LN20@DXUTCleanu:
; Line 2962
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
; Line 2965
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
	mov	DWORD PTR _pRTV$17[ebp], eax
; Line 2966
	cmp	DWORD PTR _pRTV$17[ebp], 0
	je	SHORT $LN19@DXUTCleanu
	mov	ecx, DWORD PTR _pRTV$17[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pRTV$17[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pRTV$17[ebp], 0
$LN19@DXUTCleanu:
; Line 2967
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
; Line 2970
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsCreated
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN18@DXUTCleanu
; Line 2972
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11DeviceDestroyedFunc
	mov	DWORD PTR _pCallbackDeviceDestroyed$16[ebp], eax
; Line 2973
	cmp	DWORD PTR _pCallbackDeviceDestroyed$16[ebp], 0
	je	SHORT $LN17@DXUTCleanu
; Line 2974
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext
	mov	esi, esp
	push	eax
	call	DWORD PTR _pCallbackDeviceDestroyed$16[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@DXUTCleanu:
; Line 2975
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsCreated
$LN18@DXUTCleanu:
; Line 2978
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 2981
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetReleasingSwapChain@DXUTState@@QAEX_N@Z ; DXUTState::SetReleasingSwapChain
; Line 2982
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$15[ebp], eax
; Line 2983
	cmp	DWORD PTR _pSwapChain$15[ebp], 0
	je	SHORT $LN16@DXUTCleanu
; Line 2985
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _pSwapChain$15[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pSwapChain$15[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@DXUTCleanu:
; Line 2987
	cmp	DWORD PTR _pSwapChain$15[ebp], 0
	je	SHORT $LN15@DXUTCleanu
	mov	ecx, DWORD PTR _pSwapChain$15[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pSwapChain$15[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pSwapChain$15[ebp], 0
$LN15@DXUTCleanu:
; Line 2988
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ; DXUTState::SetDXGISwapChain
; Line 2989
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetReleasingSwapChain@DXUTState@@QAEX_N@Z ; DXUTState::SetReleasingSwapChain
; Line 2992
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ ; DXUTState::GetDXGIOutputArray
	mov	DWORD PTR _ppOutputArray$14[ebp], eax
; Line 2993
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIOutputArraySize@DXUTState@@QAEIXZ ; DXUTState::GetDXGIOutputArraySize
	mov	DWORD PTR _OutputCount$13[ebp], eax
; Line 2994
	mov	DWORD PTR _o$12[ebp], 0
	jmp	SHORT $LN14@DXUTCleanu
$LN13@DXUTCleanu:
	mov	edx, DWORD PTR _o$12[ebp]
	add	edx, 1
	mov	DWORD PTR _o$12[ebp], edx
$LN14@DXUTCleanu:
	mov	eax, DWORD PTR _o$12[ebp]
	cmp	eax, DWORD PTR _OutputCount$13[ebp]
	jae	SHORT $LN12@DXUTCleanu
; Line 2995
	mov	ecx, DWORD PTR _o$12[ebp]
	mov	edx, DWORD PTR _ppOutputArray$14[ebp]
	cmp	DWORD PTR [edx+ecx*4], 0
	je	SHORT $LN11@DXUTCleanu
	mov	eax, DWORD PTR _o$12[ebp]
	mov	ecx, DWORD PTR _ppOutputArray$14[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _o$12[ebp]
	mov	ecx, DWORD PTR _ppOutputArray$14[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [edx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _o$12[ebp]
	mov	ecx, DWORD PTR _ppOutputArray$14[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
$LN11@DXUTCleanu:
	jmp	SHORT $LN13@DXUTCleanu
$LN12@DXUTCleanu:
; Line 2996
	mov	edx, DWORD PTR _ppOutputArray$14[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 2997
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ; DXUTState::SetDXGIOutputArray
; Line 2998
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z ; DXUTState::SetDXGIOutputArraySize
; Line 3001
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ ; DXUTState::GetDXGIAdapter
	mov	DWORD PTR _pAdapter$11[ebp], eax
; Line 3002
	cmp	DWORD PTR _pAdapter$11[ebp], 0
	je	SHORT $LN10@DXUTCleanu
	mov	ecx, DWORD PTR _pAdapter$11[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pAdapter$11[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pAdapter$11[ebp], 0
$LN10@DXUTCleanu:
; Line 3003
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ; DXUTState::SetDXGIAdapter
; Line 3006
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _pImmediateContext$10[ebp], eax
; Line 3007
	cmp	DWORD PTR _pImmediateContext$10[ebp], 0
	jne	SHORT $LN28@DXUTCleanu
	mov	esi, esp
	push	3007					; 00000bbfH
	push	OFFSET $SG152686
	push	OFFSET $SG152687
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@DXUTCleanu:
; Line 3008
	mov	eax, DWORD PTR _pImmediateContext$10[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pImmediateContext$10[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+440]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3009
	mov	ecx, DWORD PTR _pImmediateContext$10[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pImmediateContext$10[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+444]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3012
	cmp	DWORD PTR _pImmediateContext$10[ebp], 0
	je	SHORT $LN9@DXUTCleanu
	mov	edx, DWORD PTR _pImmediateContext$10[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pImmediateContext$10[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImmediateContext$10[ebp], 0
$LN9@DXUTCleanu:
; Line 3013
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ; DXUTState::SetD3D11DeviceContext
; Line 3015
	call	?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ ; DXUTGetD3D11DeviceContext1
	mov	DWORD PTR _pImmediateContext1$9[ebp], eax
; Line 3016
	cmp	DWORD PTR _pImmediateContext1$9[ebp], 0
	je	SHORT $LN8@DXUTCleanu
	mov	eax, DWORD PTR _pImmediateContext1$9[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pImmediateContext1$9[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImmediateContext1$9[ebp], 0
$LN8@DXUTCleanu:
; Line 3017
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ; DXUTState::SetD3D11DeviceContext1
; Line 3026
	cmp	DWORD PTR _pd3dDevice$[ebp], 0
	je	$LN7@DXUTCleanu
; Line 3029
	mov	DWORD PTR _d3dDebug$8[ebp], 0
; Line 3030
	mov	esi, esp
	lea	ecx, DWORD PTR _d3dDebug$8[ebp]
	push	ecx
	push	OFFSET __GUID_79cf2233_7536_4948_9d36_1e4692dc5760
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN6@DXUTCleanu
; Line 3032
	push	2
	push	1
	call	_|
	add	esp, 8
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _d3dDebug$8[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _d3dDebug$8[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3033
	mov	ecx, DWORD PTR _d3dDebug$8[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _d3dDebug$8[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@DXUTCleanu:
; Line 3037
	call	?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ ; DXUTGetD3D11Device1
	mov	DWORD PTR _pd3dDevice1$7[ebp], eax
; Line 3038
	cmp	DWORD PTR _pd3dDevice1$7[ebp], 0
	je	SHORT $LN5@DXUTCleanu
	mov	edx, DWORD PTR _pd3dDevice1$7[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pd3dDevice1$7[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pd3dDevice1$7[ebp], 0
$LN5@DXUTCleanu:
; Line 3039
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ; DXUTState::SetD3D11Device1
; Line 3049
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _references$6[ebp], eax
; Line 3050
	cmp	DWORD PTR _references$6[ebp], 0
	jbe	SHORT $LN7@DXUTCleanu
; Line 3052
	push	-2147219196				; 80040904H
	call	?DXUTDisplayErrorMessage@@YAXJ@Z	; DXUTDisplayErrorMessage
	add	esp, 4
; Line 3053
	push	0
	push	OFFSET $SG152711
	push	-2147219196				; 80040904H
	push	3053					; 00000bedH
	push	OFFSET $SG152712
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
$LN7@DXUTCleanu:
; Line 3056
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ; DXUTState::SetD3D11Device
; Line 3060
	mov	DWORD PTR _dxgiDebug$5[ebp], 0
; Line 3061
	lea	ecx, DWORD PTR _dxgiDebug$5[ebp]
	push	ecx
	push	OFFSET _IID_IDXGIDebug
	call	?DXUT_Dynamic_DXGIGetDebugInterface@@YGJABU_GUID@@PAPAX@Z ; DXUT_Dynamic_DXGIGetDebugInterface
	test	eax, eax
	jl	SHORT $LN3@DXUTCleanu
; Line 3063
	mov	esi, esp
	push	3
	sub	esp, 16					; 00000010H
	mov	edx, esp
	mov	eax, DWORD PTR _DXGI_DEBUG_ALL
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _DXGI_DEBUG_ALL+4
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _DXGI_DEBUG_ALL+8
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _DXGI_DEBUG_ALL+12
	mov	DWORD PTR [edx+12], ecx
	mov	edx, DWORD PTR _dxgiDebug$5[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _dxgiDebug$5[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3064
	mov	eax, DWORD PTR _dxgiDebug$5[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _dxgiDebug$5[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DXUTCleanu:
; Line 3069
	movzx	ecx, BYTE PTR _bReleaseSettings$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@DXUTCleanu
; Line 3071
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pOldDeviceSettings$4[ebp], eax
; Line 3072
	cmp	DWORD PTR _pOldDeviceSettings$4[ebp], 0
	je	SHORT $LN1@DXUTCleanu
	mov	edx, DWORD PTR _pOldDeviceSettings$4[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR _pOldDeviceSettings$4[ebp], 0
$LN1@DXUTCleanu:
; Line 3073
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
$LN2@DXUTCleanu:
; Line 3076
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
	mov	DWORD PTR _pBackBufferSurfaceDesc$3[ebp], eax
; Line 3077
	xor	ecx, ecx
	mov	edx, DWORD PTR _pBackBufferSurfaceDesc$3[ebp]
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx
	mov	DWORD PTR [edx+8], ecx
	mov	DWORD PTR [edx+12], ecx
	mov	DWORD PTR [edx+16], ecx
; Line 3079
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceCreated@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceCreated
$LN26@DXUTCleanu:
; Line 3081
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@DXUTCleanu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN32@DXUTCleanu:
	DD	2
	DD	$LN31@DXUTCleanu
$LN31@DXUTCleanu:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN29@DXUTCleanu
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN30@DXUTCleanu
$LN30@DXUTCleanu:
	DB	100					; 00000064H
	DB	120					; 00000078H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	103					; 00000067H
	DB	0
$LN29@DXUTCleanu:
	DB	100					; 00000064H
	DB	51					; 00000033H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	103					; 00000067H
	DB	0
?DXUTCleanup3DEnvironment@@YAX_N@Z ENDP			; DXUTCleanup3DEnvironment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -348						; size = 100
_newOutput$2 = -244					; size = 4
$T3 = -236						; size = 100
_deviceSettings$4 = -132				; size = 100
_newOrdinal$5 = -24					; size = 4
_hAdapterMonitor$ = -16					; size = 4
_hWindowMonitor$ = -12					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTCheckForWindowChangingMonitors@@YAXXZ PROC		; DXUTCheckForWindowChangingMonitors
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3768
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3771
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAutoChangeAdapter@DXUTState@@QAE_NXZ ; DXUTState::GetAutoChangeAdapter
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@DXUTCheckF
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetIgnoreSizeChange@DXUTState@@QAE_NXZ	; DXUTState::GetIgnoreSizeChange
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@DXUTCheckF
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceCreated@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceCreated
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@DXUTCheckF
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN9@DXUTCheckF
$LN8@DXUTCheckF:
; Line 3772
	jmp	$LN10@DXUTCheckF
$LN9@DXUTCheckF:
; Line 3775
	push	1
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ; DXUTMonitorFromWindow
	mov	DWORD PTR _hWindowMonitor$[ebp], eax
; Line 3776
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ ; DXUTState::GetAdapterMonitor
	mov	DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 3777
	mov	ecx, DWORD PTR _hWindowMonitor$[ebp]
	cmp	ecx, DWORD PTR _hAdapterMonitor$[ebp]
	je	$LN10@DXUTCheckF
; Line 3780
	lea	edx, DWORD PTR _newOrdinal$5[ebp]
	push	edx
	mov	eax, DWORD PTR _hWindowMonitor$[ebp]
	push	eax
	call	?DXUTGetAdapterOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetAdapterOrdinalFromMonitor
	add	esp, 8
	test	eax, eax
	jl	$LN10@DXUTCheckF
; Line 3783
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T3[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T3[ebp]
	lea	edi, DWORD PTR _deviceSettings$4[ebp]
	rep movsd
; Line 3784
	mov	edx, DWORD PTR _newOrdinal$5[ebp]
	mov	DWORD PTR _deviceSettings$4[ebp+4], edx
; Line 3786
	lea	eax, DWORD PTR _newOutput$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWindowMonitor$[ebp]
	push	ecx
	call	?DXUTGetOutputOrdinalFromMonitor@@YAJPAUHMONITOR__@@PAI@Z ; DXUTGetOutputOrdinalFromMonitor
	add	esp, 8
	test	eax, eax
	jl	SHORT $LN5@DXUTCheckF
; Line 3787
	mov	edx, DWORD PTR _newOutput$2[ebp]
	mov	DWORD PTR _deviceSettings$4[ebp+12], edx
$LN5@DXUTCheckF:
; Line 3789
	push	0
	push	0
	lea	eax, DWORD PTR _deviceSettings$4[ebp]
	push	eax
	call	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 3790
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN10@DXUTCheckF
; Line 3794
	push	0
	lea	ecx, DWORD PTR _deviceSettings$4[ebp]
	push	ecx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 3797
	cmp	DWORD PTR _hr$[ebp], -2147467260	; 80004004H
	jne	SHORT $LN3@DXUTCheckF
; Line 3800
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z ; DXUTState::SetAutoChangeAdapter
	jmp	SHORT $LN10@DXUTCheckF
$LN3@DXUTCheckF:
; Line 3802
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN10@DXUTCheckF
; Line 3804
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
; Line 3805
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
$LN10@DXUTCheckF:
; Line 3811
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@DXUTCheckF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@DXUTCheckF:
	DD	3
	DD	$LN15@DXUTCheckF
$LN15@DXUTCheckF:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN12@DXUTCheckF
	DD	-132					; ffffff7cH
	DD	100					; 00000064H
	DD	$LN13@DXUTCheckF
	DD	-244					; ffffff0cH
	DD	4
	DD	$LN14@DXUTCheckF
$LN14@DXUTCheckF:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN13@DXUTCheckF:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN12@DXUTCheckF:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	79					; 0000004fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?DXUTCheckForWindowChangingMonitors@@YAXXZ ENDP		; DXUTCheckForWindowChangingMonitors
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTCheckForWindowSizeChange@@YAXXZ PROC		; DXUTCheckForWindowSizeChange
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3753
	push	ebp
	mov	ebp, esp
; Line 3756
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetIgnoreSizeChange@DXUTState@@QAE_NXZ	; DXUTState::GetIgnoreSizeChange
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@DXUTCheckF
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceCreated@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceCreated
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@DXUTCheckF
$LN1@DXUTCheckF:
; Line 3757
	jmp	SHORT $LN3@DXUTCheckF
$LN2@DXUTCheckF:
; Line 3759
	call	?DXUTCheckForDXGIBufferChange@@YAXXZ	; DXUTCheckForDXGIBufferChange
$LN3@DXUTCheckF:
; Line 3760
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTCheckForWindowSizeChange@@YAXXZ ENDP		; DXUTCheckForWindowSizeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bFullScreen$1 = -12					; size = 4
_pSwapChain$2 = -4					; size = 4
?DXUTCheckForDXGIBufferChange@@YAXXZ PROC		; DXUTCheckForDXGIBufferChange
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3726
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 3727
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	test	eax, eax
	je	$LN3@DXUTCheckF
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetReleasingSwapChain@DXUTState@@QAE_NXZ ; DXUTState::GetReleasingSwapChain
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@DXUTCheckF
; Line 3730
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$2[ebp], eax
; Line 3731
	cmp	DWORD PTR _pSwapChain$2[ebp], 0
	jne	SHORT $LN5@DXUTCheckF
	mov	esi, esp
	push	3731					; 00000e93H
	push	OFFSET $SG153267
	push	OFFSET $SG153268
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@DXUTCheckF:
; Line 3739
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _bFullScreen$1[ebp]
	push	edx
	mov	eax, DWORD PTR _pSwapChain$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pSwapChain$2[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN1@DXUTCheckF
; Line 3740
	mov	DWORD PTR _bFullScreen$1[ebp], 0
$LN1@DXUTCheckF:
; Line 3743
	mov	ecx, DWORD PTR _bFullScreen$1[ebp]
	push	ecx
	push	0
	push	0
	call	?DXUTResizeDXGIBuffers@@YAXIIH@Z	; DXUTResizeDXGIBuffers
	add	esp, 12					; 0000000cH
; Line 3745
	mov	esi, esp
	push	5
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DXUTCheckF:
; Line 3747
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DXUTCheckF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@DXUTCheckF:
	DD	1
	DD	$LN7@DXUTCheckF
$LN7@DXUTCheckF:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@DXUTCheckF
$LN6@DXUTCheckF:
	DB	98					; 00000062H
	DB	70					; 00000046H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?DXUTCheckForDXGIBufferChange@@YAXXZ ENDP		; DXUTCheckForDXGIBufferChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv92 = -80						; size = 4
_pCallbackSwapChainResized$ = -76			; size = 4
_pBackBufferSurfaceDesc$ = -72				; size = 4
_Flags$ = -68						; size = 4
_pRTV$ = -64						; size = 4
_pDSV$ = -60						; size = 4
_pDS$ = -56						; size = 4
_pCallbackSwapChainReleasing$ = -52			; size = 4
_pd3dImmediateContext$ = -48				; size = 4
_pd3dDevice$ = -44					; size = 4
_pSwapChain$ = -40					; size = 4
_pDevSettings$ = -36					; size = 4
_rcCurrentClient$ = -28					; size = 16
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_Width$ = 8						; size = 4
_Height$ = 12						; size = 4
_bFullScreen$ = 16					; size = 4
?DXUTResizeDXGIBuffers@@YAXIIH@Z PROC			; DXUTResizeDXGIBuffers
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3608
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3609
	mov	DWORD PTR _hr$[ebp], 0
; Line 3611
	mov	esi, esp
	lea	eax, DWORD PTR _rcCurrentClient$[ebp]
	push	eax
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3613
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDevSettings$[ebp], eax
; Line 3614
	cmp	DWORD PTR _pDevSettings$[ebp], 0
	jne	SHORT $LN16@DXUTResize
	mov	esi, esp
	push	3614					; 00000e1eH
	push	OFFSET $SG153200
	push	OFFSET $SG153201
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@DXUTResize:
; Line 3617
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$[ebp], eax
; Line 3619
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 3620
	cmp	DWORD PTR _pd3dDevice$[ebp], 0
	jne	SHORT $LN17@DXUTResize
	mov	esi, esp
	push	3620					; 00000e24H
	push	OFFSET $SG153207
	push	OFFSET $SG153208
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@DXUTResize:
; Line 3623
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _pd3dImmediateContext$[ebp], eax
; Line 3624
	cmp	DWORD PTR _pd3dImmediateContext$[ebp], 0
	jne	SHORT $LN18@DXUTResize
	mov	esi, esp
	push	3624					; 00000e28H
	push	OFFSET $SG153212
	push	OFFSET $SG153213
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@DXUTResize:
; Line 3628
	cmp	DWORD PTR _bFullScreen$[ebp], 0
	jne	SHORT $LN19@DXUTResize
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN20@DXUTResize
$LN19@DXUTResize:
	mov	DWORD PTR tv92[ebp], 0
$LN20@DXUTResize:
	mov	ecx, DWORD PTR _pDevSettings$[ebp]
	mov	edx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [ecx+64], edx
; Line 3631
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3633
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
	mov	DWORD PTR _pCallbackSwapChainReleasing$[ebp], eax
; Line 3634
	cmp	DWORD PTR _pCallbackSwapChainReleasing$[ebp], 0
	je	SHORT $LN13@DXUTResize
; Line 3635
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
	mov	esi, esp
	push	eax
	call	DWORD PTR _pCallbackSwapChainReleasing$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@DXUTResize:
; Line 3636
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3639
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ; DXUTState::GetD3D11DepthStencil
	mov	DWORD PTR _pDS$[ebp], eax
; Line 3640
	cmp	DWORD PTR _pDS$[ebp], 0
	je	SHORT $LN12@DXUTResize
	mov	eax, DWORD PTR _pDS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pDS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDS$[ebp], 0
$LN12@DXUTResize:
; Line 3641
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ; DXUTState::SetD3D11DepthStencil
; Line 3642
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
	mov	DWORD PTR _pDSV$[ebp], eax
; Line 3643
	cmp	DWORD PTR _pDSV$[ebp], 0
	je	SHORT $LN11@DXUTResize
	mov	ecx, DWORD PTR _pDSV$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pDSV$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDSV$[ebp], 0
$LN11@DXUTResize:
; Line 3644
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ; DXUTState::SetD3D11DepthStencilView
; Line 3647
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
	mov	DWORD PTR _pRTV$[ebp], eax
; Line 3648
	cmp	DWORD PTR _pRTV$[ebp], 0
	je	SHORT $LN10@DXUTResize
	mov	edx, DWORD PTR _pRTV$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pRTV$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pRTV$[ebp], 0
$LN10@DXUTResize:
; Line 3649
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ; DXUTState::SetD3D11RenderTargetView
; Line 3656
	mov	DWORD PTR _Flags$[ebp], 0
; Line 3657
	cmp	DWORD PTR _bFullScreen$[ebp], 0
	je	SHORT $LN9@DXUTResize
; Line 3658
	mov	DWORD PTR _Flags$[ebp], 2
$LN9@DXUTResize:
; Line 3665
	mov	esi, esp
	mov	eax, DWORD PTR _Flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevSettings$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR _Height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevSettings$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR _pSwapChain$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN8@DXUTResize
	push	1
	push	OFFSET $SG153230
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	3665					; 00000e51H
	push	OFFSET $SG153231
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
$LN8@DXUTResize:
; Line 3667
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ ; DXUTState::GetDoNotStoreBufferSize
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@DXUTResize
; Line 3669
	mov	ecx, DWORD PTR _pDevSettings$[ebp]
	mov	edx, DWORD PTR _rcCurrentClient$[ebp+8]
	mov	DWORD PTR [ecx+16], edx
; Line 3670
	mov	eax, DWORD PTR _pDevSettings$[ebp]
	mov	ecx, DWORD PTR _rcCurrentClient$[ebp+12]
	mov	DWORD PTR [eax+20], ecx
$LN7@DXUTResize:
; Line 3674
	call	?DXUTUpdateBackBufferDesc@@YAXXZ	; DXUTUpdateBackBufferDesc
; Line 3677
	call	?DXUTUpdateStaticFrameStats@@YAXXZ	; DXUTUpdateStaticFrameStats
; Line 3680
	mov	edx, DWORD PTR _pDevSettings$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	call	?DXUTCreateD3D11Views@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUDXUTDeviceSettings@@@Z ; DXUTCreateD3D11Views
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 3681
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@DXUTResize
; Line 3683
	push	0
	push	OFFSET $SG153238
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	3683					; 00000e63H
	push	OFFSET $SG153239
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 3684
	jmp	$LN14@DXUTResize
$LN6@DXUTResize:
; Line 3688
	call	?DXUTSetupCursor@@YAXXZ			; DXUTSetupCursor
; Line 3691
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3692
	call	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
	mov	DWORD PTR _pBackBufferSurfaceDesc$[ebp], eax
; Line 3693
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ; DXUTState::GetD3D11SwapChainResizedFunc
	mov	DWORD PTR _pCallbackSwapChainResized$[ebp], eax
; Line 3694
	mov	DWORD PTR _hr$[ebp], 0
; Line 3695
	cmp	DWORD PTR _pCallbackSwapChainResized$[ebp], 0
	je	SHORT $LN5@DXUTResize
; Line 3697
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	call	DWORD PTR _pCallbackSwapChainResized$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN5@DXUTResize:
; Line 3698
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3699
	cmp	DWORD PTR _hr$[ebp], 0
	jge	$LN4@DXUTResize
; Line 3702
	push	0
	push	OFFSET $SG153248
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	3702					; 00000e76H
	push	OFFSET $SG153249
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
; Line 3703
	cmp	DWORD PTR _hr$[ebp], -2147219197	; 80040903H
	je	SHORT $LN3@DXUTResize
; Line 3704
	mov	DWORD PTR _hr$[ebp], -2147219192	; 80040908H
$LN3@DXUTResize:
; Line 3706
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3708
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ; DXUTState::GetD3D11SwapChainReleasingFunc
	mov	DWORD PTR _pCallbackSwapChainReleasing$[ebp], eax
; Line 3709
	cmp	DWORD PTR _pCallbackSwapChainReleasing$[ebp], 0
	je	SHORT $LN2@DXUTResize
; Line 3710
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
	mov	esi, esp
	push	eax
	call	DWORD PTR _pCallbackSwapChainReleasing$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUTResize:
; Line 3711
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ; DXUTState::SetInsideDeviceCallback
; Line 3712
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 3713
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3715
	jmp	SHORT $LN14@DXUTResize
$LN4@DXUTResize:
; Line 3717
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceObjectsReset
; Line 3718
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
$LN14@DXUTResize:
; Line 3720
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@DXUTResize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@DXUTResize:
	DD	1
	DD	$LN22@DXUTResize
$LN22@DXUTResize:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN21@DXUTResize
$LN21@DXUTResize:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?DXUTResizeDXGIBuffers@@YAXIIH@Z ENDP			; DXUTResizeDXGIBuffers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -392						; size = 100
$T2 = -292						; size = 100
_deviceSettings$3 = -188				; size = 100
_bIsWindowed$ = -84					; size = 4
_SCDesc$ = -76						; size = 60
_pSwapChain$ = -12					; size = 4
_pDeviceSettings$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTCheckForDXGIFullScreenSwitch@@YAXXZ PROC		; DXUTCheckForDXGIFullScreenSwitch
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3577
	push	ebp
	mov	ebp, esp
	sub	esp, 392				; 00000188H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 98					; 00000062H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3578
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDeviceSettings$[ebp], eax
; Line 3579
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$[ebp], eax
; Line 3580
	cmp	DWORD PTR _pSwapChain$[ebp], 0
	jne	SHORT $LN7@DXUTCheckF
	mov	esi, esp
	push	3580					; 00000dfcH
	push	OFFSET $SG153176
	push	OFFSET $SG153177
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@DXUTCheckF:
; Line 3583
	mov	esi, esp
	lea	ecx, DWORD PTR _SCDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSwapChain$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN4@DXUTCheckF
; Line 3584
	push	60					; 0000003cH
	push	0
	lea	eax, DWORD PTR _SCDesc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN4@DXUTCheckF:
; Line 3586
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	ecx, al
	mov	DWORD PTR _bIsWindowed$[ebp], ecx
; Line 3587
	mov	edx, DWORD PTR _bIsWindowed$[ebp]
	cmp	edx, DWORD PTR _SCDesc$[ebp+48]
	je	$LN5@DXUTCheckF
; Line 3589
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR _SCDesc$[ebp+48]
	mov	DWORD PTR [eax+64], ecx
; Line 3591
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T2[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T2[ebp]
	lea	edi, DWORD PTR _deviceSettings$3[ebp]
	rep movsd
; Line 3593
	cmp	DWORD PTR _bIsWindowed$[ebp], 0
	je	SHORT $LN2@DXUTCheckF
; Line 3595
	mov	eax, DWORD PTR _deviceSettings$3[ebp+16]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 3596
	mov	ecx, DWORD PTR _deviceSettings$3[ebp+20]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
; Line 3598
	jmp	SHORT $LN5@DXUTCheckF
$LN2@DXUTCheckF:
; Line 3600
	mov	edx, DWORD PTR _deviceSettings$3[ebp+16]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 3601
	mov	eax, DWORD PTR _deviceSettings$3[ebp+20]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
$LN5@DXUTCheckF:
; Line 3604
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@DXUTCheckF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@DXUTCheckF:
	DD	2
	DD	$LN10@DXUTCheckF
$LN10@DXUTCheckF:
	DD	-76					; ffffffb4H
	DD	60					; 0000003cH
	DD	$LN8@DXUTCheckF
	DD	-188					; ffffff44H
	DD	100					; 00000064H
	DD	$LN9@DXUTCheckF
$LN9@DXUTCheckF:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN8@DXUTCheckF:
	DB	83					; 00000053H
	DB	67					; 00000043H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
?DXUTCheckForDXGIFullScreenSwitch@@YAXXZ ENDP		; DXUTCheckForDXGIFullScreenSwitch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDeviceSettings$ = 8					; size = 4
?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z PROC ; DXUTUpdateDeviceSettingsWithOverrides
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2196
	push	ebp
	mov	ebp, esp
; Line 2198
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideWidth@DXUTState@@QAEHXZ	; DXUTState::GetOverrideWidth
	test	eax, eax
	je	SHORT $LN12@DXUTUpdate
; Line 2200
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideWidth@DXUTState@@QAEHXZ	; DXUTState::GetOverrideWidth
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN12@DXUTUpdate:
; Line 2202
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideHeight@DXUTState@@QAEHXZ	; DXUTState::GetOverrideHeight
	test	eax, eax
	je	SHORT $LN11@DXUTUpdate
; Line 2204
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideHeight@DXUTState@@QAEHXZ	; DXUTState::GetOverrideHeight
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [edx+20], eax
$LN11@DXUTUpdate:
; Line 2207
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ ; DXUTState::GetOverrideAdapterOrdinal
	cmp	eax, -1
	je	SHORT $LN10@DXUTUpdate
; Line 2209
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ ; DXUTState::GetOverrideAdapterOrdinal
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN10@DXUTUpdate:
; Line 2212
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideFullScreen@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideFullScreen
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@DXUTUpdate
; Line 2214
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [eax+64], 0
$LN9@DXUTUpdate:
; Line 2217
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideWindowed@DXUTState@@QAE_NXZ	; DXUTState::GetOverrideWindowed
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@DXUTUpdate
; Line 2219
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [edx+64], 1
$LN8@DXUTUpdate:
; Line 2222
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideForceHAL@DXUTState@@QAE_NXZ	; DXUTState::GetOverrideForceHAL
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@DXUTUpdate
; Line 2224
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN7@DXUTUpdate:
; Line 2227
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideForceREF@DXUTState@@QAE_NXZ	; DXUTState::GetOverrideForceREF
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@DXUTUpdate
; Line 2229
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [eax+8], 2
$LN6@DXUTUpdate:
; Line 2232
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideForceWARP@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideForceWARP
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@DXUTUpdate
; Line 2234
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [edx+8], 5
; Line 2235
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [eax+64], 1
$LN5@DXUTUpdate:
; Line 2238
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideForceVsync@DXUTState@@QAEHXZ ; DXUTState::GetOverrideForceVsync
	test	eax, eax
	jne	SHORT $LN4@DXUTUpdate
; Line 2240
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [ecx+80], 0
	jmp	SHORT $LN3@DXUTUpdate
$LN4@DXUTUpdate:
; Line 2242
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideForceVsync@DXUTState@@QAEHXZ ; DXUTState::GetOverrideForceVsync
	cmp	eax, 1
	jne	SHORT $LN3@DXUTUpdate
; Line 2244
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [edx+80], 1
$LN3@DXUTUpdate:
; Line 2247
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetOverrideForceFeatureLevel
	test	eax, eax
	je	SHORT $LN13@DXUTUpdate
; Line 2249
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetOverrideForceFeatureLevel
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [ecx+96], eax
$LN13@DXUTUpdate:
; Line 2251
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ENDP ; DXUTUpdateDeviceSettingsWithOverrides
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv311 = -192						; size = 4
tv312 = -188						; size = 4
tv309 = -184						; size = 4
tv77 = -180						; size = 4
$T2 = -176						; size = 12
$T3 = -164						; size = 12
$T4 = -149						; size = 1
_maxRefFL$5 = -148					; size = 4
_maxWarpFL$6 = -144					; size = 4
_bestDisplayMode$7 = -136				; size = 28
_score$8 = -104						; size = 4
_bestMSAA$9 = -96					; size = 4
_bestMode$10 = -84					; size = 4
_tempDeviceSettingsCombo$11 = -76			; size = 4
_iDeviceCombo$12 = -72					; size = 4
_biggestScore$ = -68					; size = 4
_pDeviceSettingsCombo$ = -64				; size = 4
_tempAdapterInfo$13 = -60				; size = 4
_it$14 = -52						; size = 12
_pAdapterList$ = -36					; size = 4
_pAdapterInfo$ = -32					; size = 4
_pEnum$ = -28						; size = 4
_bestMSAAIndex$ = -24					; size = 4
_bestModeIndex$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pDeviceSettings$ = 8					; size = 4
_forceEnum$ = 12					; size = 1
_forceFL$ = 16						; size = 4
?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z PROC ; DXUTSnapDeviceSettingsToEnumDevice
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4323
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 180				; 000000b4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 45					; 0000002dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 4324
	mov	esi, esp
	push	4096					; 00001000H
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN22@DXUTSnapDe
; Line 4326
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [eax+64], 1
$LN22@DXUTSnapDe:
; Line 4328
	mov	DWORD PTR _bestModeIndex$[ebp], 0
; Line 4329
	mov	DWORD PTR _bestMSAAIndex$[ebp], 0
; Line 4332
	mov	ecx, DWORD PTR _forceFL$[ebp]
	push	ecx
	push	1
	movzx	edx, BYTE PTR _forceEnum$[ebp]
	push	edx
	call	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
	mov	DWORD PTR _pEnum$[ebp], eax
; Line 4334
	mov	DWORD PTR _pAdapterInfo$[ebp], 0
; Line 4335
	mov	ecx, DWORD PTR _pEnum$[ebp]
	call	?GetAdapterInfoList@CD3D11Enumeration@@QAEPAV?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@XZ ; CD3D11Enumeration::GetAdapterInfoList
	mov	DWORD PTR _pAdapterList$[ebp], eax
; Line 4336
	lea	eax, DWORD PTR _it$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN21@DXUTSnapDe
$LN20@DXUTSnapDe:
	lea	ecx, DWORD PTR _it$14[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator++
$LN21@DXUTSnapDe:
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
	mov	DWORD PTR tv77[ebp], eax
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv309[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv309[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$14[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator!=
	mov	BYTE PTR $T4[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T4[ebp]
	test	ecx, ecx
	je	SHORT $LN19@DXUTSnapDe
; Line 4338
	lea	ecx, DWORD PTR _it$14[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _tempAdapterInfo$13[ebp], edx
; Line 4339
	mov	eax, DWORD PTR _tempAdapterInfo$13[ebp]
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN18@DXUTSnapDe
	mov	eax, DWORD PTR _tempAdapterInfo$13[ebp]
	mov	DWORD PTR _pAdapterInfo$[ebp], eax
$LN18@DXUTSnapDe:
; Line 4340
	jmp	SHORT $LN20@DXUTSnapDe
$LN19@DXUTSnapDe:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$14[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
; Line 4341
	cmp	DWORD PTR _pAdapterInfo$[ebp], 0
	jne	SHORT $LN17@DXUTSnapDe
; Line 4343
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@DXUTSnapDe
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jbe	SHORT $LN16@DXUTSnapDe
$LN15@DXUTSnapDe:
; Line 4345
	mov	eax, -2147467259			; 80004005H
	jmp	$LN23@DXUTSnapDe
$LN16@DXUTSnapDe:
; Line 4347
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAdapterList$[ebp]
	call	?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
	mov	DWORD PTR tv312[ebp], eax
	mov	ecx, DWORD PTR tv312[ebp]
	mov	DWORD PTR tv311[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv311[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QBEABQAVCD3D11EnumAdapterInfo@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _pAdapterInfo$[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
$LN17@DXUTSnapDe:
; Line 4349
	mov	DWORD PTR _pDeviceSettingsCombo$[ebp], 0
; Line 4350
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _biggestScore$[ebp], xmm0
; Line 4352
	mov	DWORD PTR _iDeviceCombo$12[ebp], 0
	jmp	SHORT $LN14@DXUTSnapDe
$LN13@DXUTSnapDe:
	mov	eax, DWORD PTR _iDeviceCombo$12[ebp]
	add	eax, 1
	mov	DWORD PTR _iDeviceCombo$12[ebp], eax
$LN14@DXUTSnapDe:
	mov	ecx, DWORD PTR _pAdapterInfo$[ebp]
	add	ecx, 592				; 00000250H
	call	?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
	cmp	DWORD PTR _iDeviceCombo$12[ebp], eax
	jae	SHORT $LN12@DXUTSnapDe
; Line 4354
	mov	ecx, DWORD PTR _iDeviceCombo$12[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pAdapterInfo$[ebp]
	add	ecx, 592				; 00000250H
	call	??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _tempDeviceSettingsCombo$11[ebp], edx
; Line 4358
	lea	eax, DWORD PTR _bestMSAA$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _bestMode$10[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _tempDeviceSettingsCombo$11[ebp]
	push	eax
	call	?DXUTRankD3D11DeviceCombo@@YAMPAUCD3D11EnumDeviceSettingsCombo@@PAUDXUTD3D11DeviceSettings@@AAH2@Z ; DXUTRankD3D11DeviceCombo
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _score$8[ebp]
; Line 4359
	movss	xmm0, DWORD PTR _score$8[ebp]
	comiss	xmm0, DWORD PTR _biggestScore$[ebp]
	jbe	SHORT $LN11@DXUTSnapDe
; Line 4361
	movss	xmm0, DWORD PTR _score$8[ebp]
	movss	DWORD PTR _biggestScore$[ebp], xmm0
; Line 4362
	mov	ecx, DWORD PTR _tempDeviceSettingsCombo$11[ebp]
	mov	DWORD PTR _pDeviceSettingsCombo$[ebp], ecx
; Line 4363
	mov	edx, DWORD PTR _bestMode$10[ebp]
	mov	DWORD PTR _bestModeIndex$[ebp], edx
; Line 4364
	mov	eax, DWORD PTR _bestMSAA$9[ebp]
	mov	DWORD PTR _bestMSAAIndex$[ebp], eax
$LN11@DXUTSnapDe:
; Line 4366
	jmp	SHORT $LN13@DXUTSnapDe
$LN12@DXUTSnapDe:
; Line 4367
	cmp	DWORD PTR _pDeviceSettingsCombo$[ebp], 0
	jne	SHORT $LN10@DXUTSnapDe
; Line 4369
	mov	eax, -2147467259			; 80004005H
	jmp	$LN23@DXUTSnapDe
$LN10@DXUTSnapDe:
; Line 4372
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax
; Line 4373
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 4374
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+12], eax
; Line 4376
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+64], eax
; Line 4377
	mov	esi, esp
	push	4096					; 00001000H
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@DXUTSnapDe
; Line 4379
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [ecx+64], 1
$LN9@DXUTSnapDe:
; Line 4381
	mov	edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	cmp	DWORD PTR [edx+60], 0
	je	SHORT $LN7@DXUTSnapDe
; Line 4383
	mov	eax, DWORD PTR _bestModeIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	ecx, DWORD PTR [ecx+60]
	add	ecx, 104				; 00000068H
	call	??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[]
	mov	ecx, 7
	mov	esi, eax
	lea	edi, DWORD PTR _bestDisplayMode$7[ebp]
	rep movsd
; Line 4384
	mov	edx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN7@DXUTSnapDe
; Line 4386
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR _bestDisplayMode$7[ebp+4]
	mov	DWORD PTR [eax+20], ecx
; Line 4387
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR _bestDisplayMode$7[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 4388
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _bestDisplayMode$7[ebp+8]
	mov	DWORD PTR [ecx+24], edx
; Line 4389
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR _bestDisplayMode$7[ebp+12]
	mov	DWORD PTR [eax+28], ecx
; Line 4390
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR _bestDisplayMode$7[ebp+24]
	mov	DWORD PTR [edx+40], eax
; Line 4391
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _bestDisplayMode$7[ebp+20]
	mov	DWORD PTR [ecx+36], edx
$LN7@DXUTSnapDe:
; Line 4394
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [eax+96], 0
	jne	SHORT $LN6@DXUTSnapDe
; Line 4395
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+96], ecx
$LN6@DXUTSnapDe:
; Line 4397
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [edx+8], 5
	jne	SHORT $LN4@DXUTSnapDe
; Line 4399
	mov	ecx, DWORD PTR _pEnum$[ebp]
	call	?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetWARPFeaturevel
	mov	DWORD PTR _maxWarpFL$6[ebp], eax
; Line 4401
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	cmp	ecx, DWORD PTR _maxWarpFL$6[ebp]
	jle	SHORT $LN4@DXUTSnapDe
; Line 4402
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR _maxWarpFL$6[ebp]
	mov	DWORD PTR [edx+96], eax
$LN4@DXUTSnapDe:
; Line 4405
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [ecx+8], 2
	jne	SHORT $LN2@DXUTSnapDe
; Line 4407
	mov	ecx, DWORD PTR _pEnum$[ebp]
	call	?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ; CD3D11Enumeration::GetREFFeaturevel
	mov	DWORD PTR _maxRefFL$5[ebp], eax
; Line 4409
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR [edx+96]
	cmp	eax, DWORD PTR _maxRefFL$5[ebp]
	jle	SHORT $LN2@DXUTSnapDe
; Line 4410
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR _maxRefFL$5[ebp]
	mov	DWORD PTR [ecx+96], edx
$LN2@DXUTSnapDe:
; Line 4413
	mov	eax, DWORD PTR _bestMSAAIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	add	ecx, 20					; 00000014H
	call	??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+44], edx
; Line 4414
	mov	eax, DWORD PTR _bestMSAAIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [edx+48], ecx
	jbe	SHORT $LN1@DXUTSnapDe
; Line 4415
	mov	eax, DWORD PTR _bestMSAAIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	DWORD PTR [edx+48], ecx
$LN1@DXUTSnapDe:
; Line 4417
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+32], edx
; Line 4419
	xor	eax, eax
$LN23@DXUTSnapDe:
; Line 4420
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@DXUTSnapDe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN34@DXUTSnapDe:
	DD	4
	DD	$LN33@DXUTSnapDe
$LN33@DXUTSnapDe:
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN28@DXUTSnapDe
	DD	-84					; ffffffacH
	DD	4
	DD	$LN29@DXUTSnapDe
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN30@DXUTSnapDe
	DD	-136					; ffffff78H
	DD	28					; 0000001cH
	DD	$LN31@DXUTSnapDe
$LN31@DXUTSnapDe:
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN30@DXUTSnapDe:
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	65					; 00000041H
	DB	65					; 00000041H
	DB	0
$LN29@DXUTSnapDe:
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN28@DXUTSnapDe:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$0:
	lea	ecx, DWORD PTR _it$14[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z$2:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ENDP ; DXUTSnapDeviceSettingsToEnumDevice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$1 = -16						; size = 4
_pDXGIFactory$ = -8					; size = 4
?DXUTDelayLoadDXGI@@YAJXZ PROC				; DXUTDelayLoadDXGI
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2171
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2172
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
	mov	DWORD PTR _pDXGIFactory$[ebp], eax
; Line 2173
	cmp	DWORD PTR _pDXGIFactory$[ebp], 0
	jne	SHORT $LN3@DXUTDelayL
; Line 2175
	lea	eax, DWORD PTR _pDXGIFactory$[ebp]
	push	eax
	push	OFFSET __GUID_770aae78_f26f_4dba_a829_253c83d1b387
	call	?DXUT_Dynamic_CreateDXGIFactory1@@YGJABU_GUID@@PAPAX@Z ; DXUT_Dynamic_CreateDXGIFactory1
	mov	DWORD PTR _hr$1[ebp], eax
; Line 2176
	cmp	DWORD PTR _hr$1[ebp], 0
	jge	SHORT $LN2@DXUTDelayL
; Line 2177
	mov	eax, DWORD PTR _hr$1[ebp]
	jmp	SHORT $LN4@DXUTDelayL
$LN2@DXUTDelayL:
; Line 2179
	mov	ecx, DWORD PTR _pDXGIFactory$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
; Line 2180
	cmp	DWORD PTR _pDXGIFactory$[ebp], 0
	jne	SHORT $LN3@DXUTDelayL
; Line 2182
	mov	eax, -2147219199			; 80040901H
	jmp	SHORT $LN4@DXUTDelayL
$LN3@DXUTDelayL:
; Line 2188
	xor	eax, eax
$LN4@DXUTDelayL:
; Line 2189
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DXUTDelayL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@DXUTDelayL:
	DD	1
	DD	$LN7@DXUTDelayL
$LN7@DXUTDelayL:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN6@DXUTDelayL
$LN6@DXUTDelayL:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	88					; 00000058H
	DB	71					; 00000047H
	DB	73					; 00000049H
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
?DXUTDelayLoadDXGI@@YAJXZ ENDP				; DXUTDelayLoadDXGI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv540 = -848						; size = 4
tv463 = -844						; size = 4
tv308 = -840						; size = 4
tv261 = -836						; size = 4
tv234 = -829						; size = 1
$T1 = -828						; size = 4
$T2 = -824						; size = 4
$T3 = -820						; size = 100
$T4 = -720						; size = 4
$T5 = -716						; size = 4
$T6 = -712						; size = 4
$T7 = -708						; size = 4
$T8 = -704						; size = 100
_deviceSettings$9 = -600				; size = 100
_nClientHeight$10 = -496				; size = 4
_nClientWidth$11 = -492					; size = 4
_rcClient$12 = -484					; size = 16
_cy$13 = -464						; size = 4
_cx$14 = -460						; size = 4
_rcWindow$15 = -452					; size = 16
_nWindowOffsetY$16 = -432				; size = 4
_nWindowOffsetX$17 = -428				; size = 4
_nWindowHeight$18 = -424				; size = 4
_nWindowWidth$19 = -420					; size = 4
_rcResizedWindow$20 = -412				; size = 16
_rcWindow$21 = -388					; size = 16
_nClientHeight$22 = -368				; size = 4
_nClientWidth$23 = -364					; size = 4
_nAdapterMonitorHeight$24 = -360			; size = 4
_nAdapterMonitorWidth$25 = -356				; size = 4
_miWindow$26 = -348					; size = 40
_miAdapter$27 = -300					; size = 40
_rcWindow$28 = -252					; size = 16
_hWindowMonitor$29 = -232				; size = 4
_miAdapter$30 = -224					; size = 40
_rcClient$31 = -176					; size = 16
_nFrameHeight$32 = -156					; size = 4
_nFrameWidth$33 = -152					; size = 4
_rcFrame$34 = -144					; size = 16
_rcClient$35 = -120					; size = 16
_wp$36 = -96						; size = 44
_nClientHeight$37 = -48					; size = 4
_nClientWidth$38 = -44					; size = 4
_bNeedToResize$ = -37					; size = 1
_hWndInsertAfter$39 = -36				; size = 4
_pwp$40 = -32						; size = 4
_hAdapterMonitor$ = -28					; size = 4
_bKeepCurrentWindowSize$ = -22				; size = 1
_bContinue$41 = -21					; size = 1
_pCallbackModifyDeviceSettings$ = -20			; size = 4
_pNewDeviceSettingsOnHeap$ = -16			; size = 4
_pOldDeviceSettings$ = -12				; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pNewDeviceSettings$ = 8				; size = 4
_bClipWindowToSingleAdapter$ = 12			; size = 1
?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z PROC	; DXUTChangeDevice
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 1785
	push	ebp
	mov	ebp, esp
	sub	esp, 848				; 00000350H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-848]
	mov	ecx, 212				; 000000d4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1786
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetReleasingSwapChain@DXUTState@@QAE_NXZ ; DXUTState::GetReleasingSwapChain
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN52@DXUTChange
; Line 1787
	mov	eax, 1
	jmp	$LN53@DXUTChange
$LN52@DXUTChange:
; Line 1789
	mov	DWORD PTR _hr$[ebp], 0
; Line 1790
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pOldDeviceSettings$[ebp], eax
; Line 1792
	cmp	DWORD PTR _pNewDeviceSettings$[ebp], 0
	jne	SHORT $LN51@DXUTChange
; Line 1793
	mov	eax, 1
	jmp	$LN53@DXUTChange
$LN51@DXUTChange:
; Line 1795
	call	?DXUTDelayLoadDXGI@@YAJXZ		; DXUTDelayLoadDXGI
	mov	DWORD PTR _hr$[ebp], eax
; Line 1797
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN50@DXUTChange
; Line 1798
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN53@DXUTChange
$LN50@DXUTChange:
; Line 1801
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	push	100					; 00000064H
	call	??2@YAPAXIABUnothrow_t@std@@@Z		; operator new
	add	esp, 8
	mov	DWORD PTR $T7[ebp], eax
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR _pNewDeviceSettingsOnHeap$[ebp], ecx
; Line 1802
	cmp	DWORD PTR _pNewDeviceSettingsOnHeap$[ebp], 0
	jne	SHORT $LN49@DXUTChange
; Line 1803
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN53@DXUTChange
$LN49@DXUTChange:
; Line 1804
	mov	ecx, 25					; 00000019H
	mov	esi, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	edi, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
	rep movsd
; Line 1805
	mov	edx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
	mov	DWORD PTR _pNewDeviceSettings$[ebp], edx
; Line 1807
	mov	eax, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
; Line 1808
	push	0
	push	0
	mov	ecx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
	push	ecx
	call	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 1810
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN48@DXUTChange
; Line 1812
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	call	?DXUTDisplayErrorMessage@@YAXJ@Z	; DXUTDisplayErrorMessage
	add	esp, 4
; Line 1813
	push	0
	push	OFFSET $SG152087
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	1813					; 00000715H
	push	OFFSET $SG152088
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN53@DXUTChange
$LN48@DXUTChange:
; Line 1818
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ ; DXUTState::GetModifyDeviceSettingsFunc
	mov	DWORD PTR _pCallbackModifyDeviceSettings$[ebp], eax
; Line 1819
	cmp	DWORD PTR _pCallbackModifyDeviceSettings$[ebp], 0
	je	$LN47@DXUTChange
; Line 1822
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetModifyDeviceSettingsFuncUserContext
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	ecx
	call	DWORD PTR _pCallbackModifyDeviceSettings$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _bContinue$41[ebp], al
; Line 1823
	movzx	edx, BYTE PTR _bContinue$41[ebp]
	test	edx, edx
	jne	SHORT $LN46@DXUTChange
; Line 1826
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	jne	SHORT $LN45@DXUTChange
; Line 1827
	push	-2147219198				; 80040902H
	call	?DXUTDisplayErrorMessage@@YAXJ@Z	; DXUTDisplayErrorMessage
	add	esp, 4
$LN45@DXUTChange:
; Line 1828
	cmp	DWORD PTR _pNewDeviceSettings$[ebp], 0
	je	SHORT $LN44@DXUTChange
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR _pNewDeviceSettings$[ebp], 0
$LN44@DXUTChange:
; Line 1829
	mov	eax, -2147467260			; 80004004H
	jmp	$LN53@DXUTChange
$LN46@DXUTChange:
; Line 1831
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
	test	eax, eax
	jne	SHORT $LN43@DXUTChange
; Line 1833
	cmp	DWORD PTR _pNewDeviceSettings$[ebp], 0
	je	SHORT $LN42@DXUTChange
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR _pNewDeviceSettings$[ebp], 0
$LN42@DXUTChange:
; Line 1834
	mov	eax, 1
	jmp	$LN53@DXUTChange
$LN43@DXUTChange:
; Line 1836
	push	0
	push	0
	mov	ecx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
	push	ecx
	call	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
	add	esp, 12					; 0000000cH
; Line 1838
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN47@DXUTChange
; Line 1840
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	call	?DXUTDisplayErrorMessage@@YAXJ@Z	; DXUTDisplayErrorMessage
	add	esp, 4
; Line 1841
	push	0
	push	OFFSET $SG152108
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	1841					; 00000731H
	push	OFFSET $SG152109
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN53@DXUTChange
$LN47@DXUTChange:
; Line 1846
	mov	ecx, DWORD PTR _pNewDeviceSettingsOnHeap$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ; DXUTState::SetCurrentDeviceSettings
; Line 1848
	push	1
	push	1
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1851
	mov	BYTE PTR _bKeepCurrentWindowSize$[ebp], 0
; Line 1853
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	edx
	call	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN40@DXUTChange
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN40@DXUTChange
; Line 1854
	mov	BYTE PTR _bKeepCurrentWindowSize$[ebp], 1
$LN40@DXUTChange:
; Line 1860
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN39@DXUTChange
; Line 1863
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN38@DXUTChange
	mov	eax, DWORD PTR _pOldDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN38@DXUTChange
; Line 1867
	mov	edx, DWORD PTR _pOldDeviceSettings$[ebp]
	push	edx
	call	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
	add	esp, 4
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 1869
	mov	eax, DWORD PTR _pOldDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
	add	esp, 4
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
$LN38@DXUTChange:
; Line 1872
	jmp	SHORT $LN37@DXUTChange
$LN39@DXUTChange:
; Line 1875
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN35@DXUTChange
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN37@DXUTChange
	mov	ecx, DWORD PTR _pOldDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN37@DXUTChange
$LN35@DXUTChange:
; Line 1878
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN37@DXUTChange
; Line 1881
	mov	eax, DWORD PTR _pOldDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
	add	esp, 4
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 1883
	mov	ecx, DWORD PTR _pOldDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
	add	esp, 4
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
$LN37@DXUTChange:
; Line 1888
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN33@DXUTChange
; Line 1889
	push	0
	call	?DXUTCleanup3DEnvironment@@YAX_N@Z	; DXUTCleanup3DEnvironment
	add	esp, 4
$LN33@DXUTChange:
; Line 1892
	call	?DXUTCreate3DEnvironment11@@YAJXZ	; DXUTCreate3DEnvironment11
	mov	DWORD PTR _hr$[ebp], eax
; Line 1893
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN32@DXUTChange
; Line 1895
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN31@DXUTChange
	mov	edx, DWORD PTR _pOldDeviceSettings$[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR _pOldDeviceSettings$[ebp], 0
$LN31@DXUTChange:
; Line 1896
	push	1
	call	?DXUTCleanup3DEnvironment@@YAX_N@Z	; DXUTCleanup3DEnvironment
	add	esp, 4
; Line 1897
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	call	?DXUTDisplayErrorMessage@@YAXJ@Z	; DXUTDisplayErrorMessage
	add	esp, 4
; Line 1898
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1899
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ; DXUTState::SetIgnoreSizeChange
; Line 1900
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN53@DXUTChange
$LN32@DXUTChange:
; Line 1907
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	edx
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN55@DXUTChange
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
	mov	BYTE PTR tv234[ebp], al
	jmp	SHORT $LN56@DXUTChange
$LN55@DXUTChange:
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
	mov	BYTE PTR tv234[ebp], al
$LN56@DXUTChange:
	movzx	ecx, BYTE PTR tv234[ebp]
	push	ecx
	call	?DXUTAllowShortcutKeys@@YAX_N@Z		; DXUTAllowShortcutKeys
	add	esp, 4
; Line 1909
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	edx
	call	?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
	add	esp, 4
	mov	DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 1910
	mov	eax, DWORD PTR _hAdapterMonitor$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z ; DXUTState::SetAdapterMonitor
; Line 1913
	call	?DXUTUpdateStaticFrameStats@@YAXXZ	; DXUTUpdateStaticFrameStats
; Line 1916
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	$LN30@DXUTChange
	mov	ecx, DWORD PTR _pOldDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	jne	$LN30@DXUTChange
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN30@DXUTChange
; Line 1924
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ ; DXUTState::GetWindowedPlacement
	mov	DWORD PTR _pwp$40[ebp], eax
; Line 1925
	mov	esi, esp
	mov	edx, DWORD PTR _pwp$40[ebp]
	push	edx
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__SetWindowPlacement@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1928
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetTopmostWhileWindowed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN57@DXUTChange
	mov	DWORD PTR tv261[ebp], -1
	jmp	SHORT $LN58@DXUTChange
$LN57@DXUTChange:
	mov	DWORD PTR tv261[ebp], -2		; fffffffeH
$LN58@DXUTChange:
	mov	ecx, DWORD PTR tv261[ebp]
	mov	DWORD PTR _hWndInsertAfter$39[ebp], ecx
; Line 1930
	mov	esi, esp
	push	11					; 0000000bH
	push	0
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _hWndInsertAfter$39[ebp]
	push	edx
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@DXUTChange:
; Line 1936
	mov	BYTE PTR _bNeedToResize$[ebp], 0
; Line 1938
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	$LN29@DXUTChange
	movzx	edx, BYTE PTR _bKeepCurrentWindowSize$[ebp]
	test	edx, edx
	jne	$LN29@DXUTChange
; Line 1942
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN28@DXUTChange
; Line 1948
	push	44					; 0000002cH
	push	0
	lea	eax, DWORD PTR _wp$36[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1949
	mov	DWORD PTR _wp$36[ebp], 44		; 0000002cH
; Line 1950
	mov	esi, esp
	lea	ecx, DWORD PTR _wp$36[ebp]
	push	ecx
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetWindowPlacement@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1952
	mov	edx, DWORD PTR _wp$36[ebp+4]
	and	edx, 2
	je	SHORT $LN27@DXUTChange
	cmp	DWORD PTR _wp$36[ebp+8], 2
	jne	SHORT $LN27@DXUTChange
; Line 1958
	mov	esi, esp
	push	9
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1960
	mov	esi, esp
	lea	eax, DWORD PTR _rcClient$35[ebp]
	push	eax
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1961
	mov	ecx, DWORD PTR _rcClient$35[ebp+8]
	sub	ecx, DWORD PTR _rcClient$35[ebp]
	mov	DWORD PTR _nClientWidth$38[ebp], ecx
; Line 1962
	mov	edx, DWORD PTR _rcClient$35[ebp+12]
	sub	edx, DWORD PTR _rcClient$35[ebp+4]
	mov	DWORD PTR _nClientHeight$37[ebp], edx
; Line 1963
	mov	esi, esp
	push	6
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1965
	jmp	$LN26@DXUTChange
$LN27@DXUTChange:
; Line 1969
	mov	DWORD PTR _rcFrame$34[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _rcFrame$34[ebp+4], eax
	mov	DWORD PTR _rcFrame$34[ebp+8], eax
	mov	DWORD PTR _rcFrame$34[ebp+12], eax
; Line 1970
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ	; DXUTState::GetMenu
	test	eax, eax
	je	SHORT $LN59@DXUTChange
	mov	DWORD PTR tv308[ebp], 1
	jmp	SHORT $LN60@DXUTChange
$LN59@DXUTChange:
	mov	DWORD PTR tv308[ebp], 0
$LN60@DXUTChange:
	mov	esi, esp
	mov	ecx, DWORD PTR tv308[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ ; DXUTState::GetWindowedStyleAtModeChange
	push	eax
	lea	edx, DWORD PTR _rcFrame$34[ebp]
	push	edx
	call	DWORD PTR __imp__AdjustWindowRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1971
	mov	eax, DWORD PTR _rcFrame$34[ebp+8]
	sub	eax, DWORD PTR _rcFrame$34[ebp]
	mov	DWORD PTR _nFrameWidth$33[ebp], eax
; Line 1972
	mov	ecx, DWORD PTR _rcFrame$34[ebp+12]
	sub	ecx, DWORD PTR _rcFrame$34[ebp+4]
	mov	DWORD PTR _nFrameHeight$32[ebp], ecx
; Line 1973
	mov	edx, DWORD PTR _wp$36[ebp+36]
	sub	edx, DWORD PTR _wp$36[ebp+28]
	sub	edx, DWORD PTR _nFrameWidth$33[ebp]
	mov	DWORD PTR _nClientWidth$38[ebp], edx
; Line 1974
	mov	eax, DWORD PTR _wp$36[ebp+40]
	sub	eax, DWORD PTR _wp$36[ebp+32]
	sub	eax, DWORD PTR _nFrameHeight$32[ebp]
	mov	DWORD PTR _nClientHeight$37[ebp], eax
$LN26@DXUTChange:
; Line 1977
	jmp	SHORT $LN25@DXUTChange
$LN28@DXUTChange:
; Line 1981
	mov	esi, esp
	lea	ecx, DWORD PTR _rcClient$31[ebp]
	push	ecx
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1982
	mov	edx, DWORD PTR _rcClient$31[ebp+8]
	sub	edx, DWORD PTR _rcClient$31[ebp]
	mov	DWORD PTR _nClientWidth$38[ebp], edx
; Line 1983
	mov	eax, DWORD PTR _rcClient$31[ebp+12]
	sub	eax, DWORD PTR _rcClient$31[ebp+4]
	mov	DWORD PTR _nClientHeight$37[ebp], eax
$LN25@DXUTChange:
; Line 1989
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
	add	esp, 4
	cmp	DWORD PTR _nClientWidth$38[ebp], eax
	jne	SHORT $LN23@DXUTChange
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	edx
	call	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
	add	esp, 4
	cmp	DWORD PTR _nClientHeight$37[ebp], eax
	je	SHORT $LN24@DXUTChange
$LN23@DXUTChange:
; Line 1991
	mov	BYTE PTR _bNeedToResize$[ebp], 1
$LN24@DXUTChange:
; Line 1994
	movzx	eax, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
	test	eax, eax
	je	$LN29@DXUTChange
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN29@DXUTChange
; Line 1998
	mov	DWORD PTR _miAdapter$30[ebp], 40	; 00000028H
; Line 1999
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
	add	esp, 4
	mov	DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 2000
	lea	edx, DWORD PTR _miAdapter$30[ebp]
	push	edx
	mov	eax, DWORD PTR _hAdapterMonitor$[ebp]
	push	eax
	call	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 2001
	push	1
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ; DXUTMonitorFromWindow
	mov	DWORD PTR _hWindowMonitor$29[ebp], eax
; Line 2005
	mov	esi, esp
	lea	ecx, DWORD PTR _rcWindow$28[ebp]
	push	ecx
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2011
	mov	edx, DWORD PTR _rcWindow$28[ebp]
	cmp	edx, DWORD PTR _miAdapter$30[ebp+20]
	jl	SHORT $LN20@DXUTChange
	mov	eax, DWORD PTR _rcWindow$28[ebp+8]
	cmp	eax, DWORD PTR _miAdapter$30[ebp+28]
	jg	SHORT $LN20@DXUTChange
	mov	ecx, DWORD PTR _rcWindow$28[ebp+4]
	cmp	ecx, DWORD PTR _miAdapter$30[ebp+24]
	jl	SHORT $LN20@DXUTChange
	mov	edx, DWORD PTR _rcWindow$28[ebp+12]
	cmp	edx, DWORD PTR _miAdapter$30[ebp+32]
	jle	SHORT $LN29@DXUTChange
$LN20@DXUTChange:
; Line 2013
	mov	eax, DWORD PTR _hWindowMonitor$29[ebp]
	cmp	eax, DWORD PTR _hAdapterMonitor$[ebp]
	jne	SHORT $LN19@DXUTChange
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsZoomed@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN19@DXUTChange
; Line 2019
	jmp	SHORT $LN29@DXUTChange
$LN19@DXUTChange:
; Line 2021
	mov	BYTE PTR _bNeedToResize$[ebp], 1
$LN29@DXUTChange:
; Line 2029
	movzx	ecx, BYTE PTR _bNeedToResize$[ebp]
	test	ecx, ecx
	je	$LN17@DXUTChange
; Line 2032
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN16@DXUTChange
; Line 2033
	mov	esi, esp
	push	9
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@DXUTChange:
; Line 2034
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsZoomed@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN15@DXUTChange
; Line 2035
	mov	esi, esp
	push	9
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@DXUTChange:
; Line 2037
	movzx	edx, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
	test	edx, edx
	je	$LN14@DXUTChange
; Line 2041
	mov	DWORD PTR _miAdapter$27[ebp], 40	; 00000028H
; Line 2042
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetMonitorFromAdapter@@YAPAUHMONITOR__@@PAUDXUTDeviceSettings@@@Z ; DXUTGetMonitorFromAdapter
	add	esp, 4
	mov	DWORD PTR _hAdapterMonitor$[ebp], eax
; Line 2043
	lea	ecx, DWORD PTR _miAdapter$27[ebp]
	push	ecx
	mov	edx, DWORD PTR _hAdapterMonitor$[ebp]
	push	edx
	call	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 2047
	mov	DWORD PTR _miWindow$26[ebp], 40		; 00000028H
; Line 2048
	lea	eax, DWORD PTR _miWindow$26[ebp]
	push	eax
	push	1
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	?DXUTMonitorFromWindow@@YGPAUHMONITOR__@@PAUHWND__@@K@Z ; DXUTMonitorFromWindow
	push	eax
	call	?DXUTGetMonitorInfo@@YGHPAUHMONITOR__@@PAUtagMONITORINFO@@@Z ; DXUTGetMonitorInfo
; Line 2051
	mov	ecx, DWORD PTR _miAdapter$27[ebp+28]
	sub	ecx, DWORD PTR _miAdapter$27[ebp+20]
	mov	DWORD PTR _nAdapterMonitorWidth$25[ebp], ecx
; Line 2052
	mov	edx, DWORD PTR _miAdapter$27[ebp+32]
	sub	edx, DWORD PTR _miAdapter$27[ebp+24]
	mov	DWORD PTR _nAdapterMonitorHeight$24[ebp], edx
; Line 2054
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
	add	esp, 4
	mov	DWORD PTR _nClientWidth$23[ebp], eax
; Line 2055
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
	add	esp, 4
	mov	DWORD PTR _nClientHeight$22[ebp], eax
; Line 2059
	mov	esi, esp
	lea	edx, DWORD PTR _rcWindow$21[ebp]
	push	edx
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2063
	mov	DWORD PTR _rcResizedWindow$20[ebp], 0
; Line 2064
	mov	eax, DWORD PTR _nClientWidth$23[ebp]
	mov	DWORD PTR _rcResizedWindow$20[ebp+8], eax
; Line 2065
	mov	DWORD PTR _rcResizedWindow$20[ebp+4], 0
; Line 2066
	mov	ecx, DWORD PTR _nClientHeight$22[ebp]
	mov	DWORD PTR _rcResizedWindow$20[ebp+12], ecx
; Line 2068
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ	; DXUTState::GetMenu
	test	eax, eax
	je	SHORT $LN61@DXUTChange
	mov	DWORD PTR tv463[ebp], 1
	jmp	SHORT $LN62@DXUTChange
$LN61@DXUTChange:
	mov	DWORD PTR tv463[ebp], 0
$LN62@DXUTChange:
	mov	esi, esp
	mov	edx, DWORD PTR tv463[ebp]
	push	edx
	mov	edi, esp
	push	-16					; fffffff0H
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	eax, DWORD PTR _rcResizedWindow$20[ebp]
	push	eax
	call	DWORD PTR __imp__AdjustWindowRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2070
	mov	ecx, DWORD PTR _rcResizedWindow$20[ebp+8]
	sub	ecx, DWORD PTR _rcResizedWindow$20[ebp]
	mov	DWORD PTR _nWindowWidth$19[ebp], ecx
; Line 2071
	mov	edx, DWORD PTR _rcResizedWindow$20[ebp+12]
	sub	edx, DWORD PTR _rcResizedWindow$20[ebp+4]
	mov	DWORD PTR _nWindowHeight$18[ebp], edx
; Line 2073
	mov	eax, DWORD PTR _nWindowWidth$19[ebp]
	cmp	eax, DWORD PTR _nAdapterMonitorWidth$25[ebp]
	jle	SHORT $LN13@DXUTChange
; Line 2074
	mov	ecx, DWORD PTR _nAdapterMonitorWidth$25[ebp]
	mov	DWORD PTR _nWindowWidth$19[ebp], ecx
$LN13@DXUTChange:
; Line 2075
	mov	edx, DWORD PTR _nWindowHeight$18[ebp]
	cmp	edx, DWORD PTR _nAdapterMonitorHeight$24[ebp]
	jle	SHORT $LN12@DXUTChange
; Line 2076
	mov	eax, DWORD PTR _nAdapterMonitorHeight$24[ebp]
	mov	DWORD PTR _nWindowHeight$18[ebp], eax
$LN12@DXUTChange:
; Line 2081
	mov	ecx, DWORD PTR _rcResizedWindow$20[ebp]
	cmp	ecx, DWORD PTR _miAdapter$27[ebp+20]
	jl	SHORT $LN10@DXUTChange
	mov	edx, DWORD PTR _rcResizedWindow$20[ebp+4]
	cmp	edx, DWORD PTR _miAdapter$27[ebp+24]
	jl	SHORT $LN10@DXUTChange
	mov	eax, DWORD PTR _rcResizedWindow$20[ebp+8]
	cmp	eax, DWORD PTR _miAdapter$27[ebp+28]
	jg	SHORT $LN10@DXUTChange
	mov	ecx, DWORD PTR _rcResizedWindow$20[ebp+12]
	cmp	ecx, DWORD PTR _miAdapter$27[ebp+32]
	jle	$LN11@DXUTChange
$LN10@DXUTChange:
; Line 2083
	mov	eax, DWORD PTR _nAdapterMonitorWidth$25[ebp]
	sub	eax, DWORD PTR _nWindowWidth$19[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _nWindowOffsetX$17[ebp], eax
; Line 2084
	mov	eax, DWORD PTR _nAdapterMonitorHeight$24[ebp]
	sub	eax, DWORD PTR _nWindowHeight$18[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _nWindowOffsetY$16[ebp], eax
; Line 2086
	mov	edx, DWORD PTR _miAdapter$27[ebp+20]
	add	edx, DWORD PTR _nWindowOffsetX$17[ebp]
	mov	DWORD PTR _rcResizedWindow$20[ebp], edx
; Line 2087
	mov	eax, DWORD PTR _miAdapter$27[ebp+24]
	add	eax, DWORD PTR _nWindowOffsetY$16[ebp]
	mov	DWORD PTR _rcResizedWindow$20[ebp+4], eax
; Line 2088
	mov	ecx, DWORD PTR _miAdapter$27[ebp+20]
	add	ecx, DWORD PTR _nWindowOffsetX$17[ebp]
	add	ecx, DWORD PTR _nWindowWidth$19[ebp]
	mov	DWORD PTR _rcResizedWindow$20[ebp+8], ecx
; Line 2089
	mov	edx, DWORD PTR _miAdapter$27[ebp+24]
	add	edx, DWORD PTR _nWindowOffsetY$16[ebp]
	add	edx, DWORD PTR _nWindowHeight$18[ebp]
	mov	DWORD PTR _rcResizedWindow$20[ebp+12], edx
$LN11@DXUTChange:
; Line 2096
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _nWindowHeight$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _nWindowWidth$19[ebp]
	push	ecx
	mov	edx, DWORD PTR _rcResizedWindow$20[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rcResizedWindow$20[ebp]
	push	eax
	push	0
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2098
	jmp	$LN9@DXUTChange
$LN14@DXUTChange:
; Line 2101
	mov	DWORD PTR _rcWindow$15[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _rcWindow$15[ebp+4], ecx
	mov	DWORD PTR _rcWindow$15[ebp+8], ecx
	mov	DWORD PTR _rcWindow$15[ebp+12], ecx
; Line 2102
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	edx
	call	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
	add	esp, 4
	mov	DWORD PTR _rcWindow$15[ebp+8], eax
; Line 2103
	mov	eax, DWORD PTR _pNewDeviceSettings$[ebp]
	push	eax
	call	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
	add	esp, 4
	mov	DWORD PTR _rcWindow$15[ebp+12], eax
; Line 2104
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ	; DXUTState::GetMenu
	test	eax, eax
	je	SHORT $LN63@DXUTChange
	mov	DWORD PTR tv540[ebp], 1
	jmp	SHORT $LN64@DXUTChange
$LN63@DXUTChange:
	mov	DWORD PTR tv540[ebp], 0
$LN64@DXUTChange:
	mov	esi, esp
	mov	ecx, DWORD PTR tv540[ebp]
	push	ecx
	mov	edi, esp
	push	-16					; fffffff0H
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	edx, DWORD PTR _rcWindow$15[ebp]
	push	edx
	call	DWORD PTR __imp__AdjustWindowRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2109
	mov	eax, DWORD PTR _rcWindow$15[ebp+8]
	sub	eax, DWORD PTR _rcWindow$15[ebp]
	mov	DWORD PTR _cx$14[ebp], eax
; Line 2110
	mov	ecx, DWORD PTR _rcWindow$15[ebp+12]
	sub	ecx, DWORD PTR _rcWindow$15[ebp+4]
	mov	DWORD PTR _cy$13[ebp], ecx
; Line 2111
	mov	esi, esp
	push	6
	mov	edx, DWORD PTR _cy$13[ebp]
	push	edx
	mov	eax, DWORD PTR _cx$14[ebp]
	push	eax
	push	0
	push	0
	push	0
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@DXUTChange:
; Line 2119
	mov	esi, esp
	lea	ecx, DWORD PTR _rcClient$12[ebp]
	push	ecx
	call	?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ; DXUTGetHWNDDeviceWindowed
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2120
	mov	edx, DWORD PTR _rcClient$12[ebp+8]
	sub	edx, DWORD PTR _rcClient$12[ebp]
	mov	DWORD PTR _nClientWidth$11[ebp], edx
; Line 2121
	mov	eax, DWORD PTR _rcClient$12[ebp+12]
	sub	eax, DWORD PTR _rcClient$12[ebp+4]
	mov	DWORD PTR _nClientHeight$10[ebp], eax
; Line 2123
	mov	ecx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	ecx
	call	?DXUTGetBackBufferWidthFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferWidthFromDS
	add	esp, 4
	cmp	DWORD PTR _nClientWidth$11[ebp], eax
	jne	SHORT $LN7@DXUTChange
	mov	edx, DWORD PTR _pNewDeviceSettings$[ebp]
	push	edx
	call	?DXUTGetBackBufferHeightFromDS@@YAIPAUDXUTDeviceSettings@@@Z ; DXUTGetBackBufferHeightFromDS
	add	esp, 4
	cmp	DWORD PTR _nClientHeight$10[ebp], eax
	je	$LN17@DXUTChange
$LN7@DXUTChange:
; Line 2127
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T8[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T8[ebp]
	lea	edi, DWORD PTR _deviceSettings$9[ebp]
	rep movsd
; Line 2128
	mov	DWORD PTR _deviceSettings$9[ebp+16], 0
; Line 2129
	mov	DWORD PTR _deviceSettings$9[ebp+20], 0
; Line 2131
	movzx	ecx, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
	push	ecx
	lea	edx, DWORD PTR _deviceSettings$9[ebp]
	push	edx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 2132
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN17@DXUTChange
; Line 2134
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN5@DXUTChange
	mov	eax, DWORD PTR _pOldDeviceSettings$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR _pOldDeviceSettings$[ebp], 0
$LN5@DXUTChange:
; Line 2135
	push	1
	call	?DXUTCleanup3DEnvironment@@YAX_N@Z	; DXUTCleanup3DEnvironment
	add	esp, 4
; Line 2136
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 2137
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ; DXUTState::SetIgnoreSizeChange
; Line 2138
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN53@DXUTChange
$LN17@DXUTChange:
; Line 2149
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsWindowVisible@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@DXUTChange
; Line 2150
	mov	esi, esp
	push	5
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@DXUTChange:
; Line 2153
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@DXUTChange
; Line 2154
	mov	esi, esp
	push	-2147483646				; 80000002H
	call	DWORD PTR __imp__SetThreadExecutionState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2155
	jmp	SHORT $LN2@DXUTChange
$LN3@DXUTChange:
; Line 2156
	mov	esi, esp
	push	-2147483648				; 80000000H
	call	DWORD PTR __imp__SetThreadExecutionState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUTChange:
; Line 2158
	cmp	DWORD PTR _pOldDeviceSettings$[ebp], 0
	je	SHORT $LN1@DXUTChange
	mov	eax, DWORD PTR _pOldDeviceSettings$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR _pOldDeviceSettings$[ebp], 0
$LN1@DXUTChange:
; Line 2159
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ; DXUTState::SetIgnoreSizeChange
; Line 2160
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 2161
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceCreated@DXUTState@@QAEX_N@Z	; DXUTState::SetDeviceCreated
; Line 2163
	xor	eax, eax
$LN53@DXUTChange:
; Line 2164
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN79@DXUTChange
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 848				; 00000350H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN79@DXUTChange:
	DD	13					; 0000000dH
	DD	$LN78@DXUTChange
$LN78@DXUTChange:
	DD	-96					; ffffffa0H
	DD	44					; 0000002cH
	DD	$LN65@DXUTChange
	DD	-120					; ffffff88H
	DD	16					; 00000010H
	DD	$LN66@DXUTChange
	DD	-144					; ffffff70H
	DD	16					; 00000010H
	DD	$LN67@DXUTChange
	DD	-176					; ffffff50H
	DD	16					; 00000010H
	DD	$LN68@DXUTChange
	DD	-224					; ffffff20H
	DD	40					; 00000028H
	DD	$LN69@DXUTChange
	DD	-252					; ffffff04H
	DD	16					; 00000010H
	DD	$LN70@DXUTChange
	DD	-300					; fffffed4H
	DD	40					; 00000028H
	DD	$LN71@DXUTChange
	DD	-348					; fffffea4H
	DD	40					; 00000028H
	DD	$LN72@DXUTChange
	DD	-388					; fffffe7cH
	DD	16					; 00000010H
	DD	$LN73@DXUTChange
	DD	-412					; fffffe64H
	DD	16					; 00000010H
	DD	$LN74@DXUTChange
	DD	-452					; fffffe3cH
	DD	16					; 00000010H
	DD	$LN75@DXUTChange
	DD	-484					; fffffe1cH
	DD	16					; 00000010H
	DD	$LN76@DXUTChange
	DD	-600					; fffffda8H
	DD	100					; 00000064H
	DD	$LN77@DXUTChange
$LN77@DXUTChange:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN76@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN75@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN74@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN73@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN72@DXUTChange:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN71@DXUTChange:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN70@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN69@DXUTChange:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN68@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN67@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN66@DXUTChange:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN65@DXUTChange:
	DB	119					; 00000077H
	DB	112					; 00000070H
	DB	0
?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ENDP	; DXUTChangeDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -4						; size = 4
_vButton$ = 8						; size = 1
?DXUTMapButtonToArrayIndex@@YAHE@Z PROC			; DXUTMapButtonToArrayIndex
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3395
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3396
	movzx	eax, BYTE PTR _vButton$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 63			; 0000003fH
	ja	SHORT $LN6@DXUTMapBut
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN10@DXUTMapBut[edx]
	jmp	DWORD PTR $LN11@DXUTMapBut[eax*4]
$LN5@DXUTMapBut:
; Line 3399
	xor	eax, eax
	jmp	SHORT $LN8@DXUTMapBut
$LN4@DXUTMapBut:
; Line 3402
	mov	eax, 1
	jmp	SHORT $LN8@DXUTMapBut
$LN3@DXUTMapBut:
; Line 3404
	mov	eax, 2
	jmp	SHORT $LN8@DXUTMapBut
$LN2@DXUTMapBut:
; Line 3407
	mov	eax, 3
	jmp	SHORT $LN8@DXUTMapBut
$LN1@DXUTMapBut:
; Line 3410
	mov	eax, 4
	jmp	SHORT $LN8@DXUTMapBut
$LN6@DXUTMapBut:
; Line 3413
	xor	eax, eax
$LN8@DXUTMapBut:
; Line 3414
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@DXUTMapBut:
	DD	$LN5@DXUTMapBut
	DD	$LN3@DXUTMapBut
	DD	$LN4@DXUTMapBut
	DD	$LN2@DXUTMapBut
	DD	$LN1@DXUTMapBut
	DD	$LN6@DXUTMapBut
$LN10@DXUTMapBut:
	DB	0
	DB	1
	DB	5
	DB	2
	DB	3
	DB	4
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
?DXUTMapButtonToArrayIndex@@YAHE@Z ENDP			; DXUTMapButtonToArrayIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -1048						; size = 4
_bShowMsgBoxOnError$ = -1042				; size = 1
_bFound$ = -1041					; size = 1
_nExitCode$ = -1040					; size = 4
_strBuffer$ = -1032					; size = 1024
__$ArrayPad$ = -4					; size = 4
_hr$ = 8						; size = 4
?DXUTDisplayErrorMessage@@YAXJ@Z PROC			; DXUTDisplayErrorMessage
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3346
	push	ebp
	mov	ebp, esp
	sub	esp, 1048				; 00000418H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1048]
	mov	ecx, 262				; 00000106H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3350
	mov	BYTE PTR _bFound$[ebp], 1
; Line 3351
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	add	ecx, 2147219199				; 7ffbf6ffH
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 9
	ja	$LN4@DXUTDispla
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN23@DXUTDispla[edx*4]
$LN15@DXUTDispla:
; Line 3355
	mov	DWORD PTR _nExitCode$[ebp], 2
; Line 3356
	mov	esi, esp
	push	OFFSET $SG153026
	push	512					; 00000200H
	lea	eax, DWORD PTR _strBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3357
	jmp	$LN16@DXUTDispla
$LN14@DXUTDispla:
; Line 3360
	mov	DWORD PTR _nExitCode$[ebp], 3
; Line 3361
	mov	esi, esp
	push	4096					; 00001000H
	call	DWORD PTR __imp__GetSystemMetrics@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@DXUTDispla
; Line 3362
	mov	esi, esp
	push	OFFSET $SG153033
	push	512					; 00000200H
	lea	ecx, DWORD PTR _strBuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3363
	jmp	SHORT $LN12@DXUTDispla
$LN13@DXUTDispla:
; Line 3364
	mov	esi, esp
	push	OFFSET $SG153035
	push	512					; 00000200H
	lea	edx, DWORD PTR _strBuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@DXUTDispla:
; Line 3365
	jmp	$LN16@DXUTDispla
$LN11@DXUTDispla:
; Line 3366
	mov	DWORD PTR _nExitCode$[ebp], 4
	mov	esi, esp
	push	OFFSET $SG153041
	push	512					; 00000200H
	lea	eax, DWORD PTR _strBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@DXUTDispla
$LN10@DXUTDispla:
; Line 3367
	mov	DWORD PTR _nExitCode$[ebp], 5
	mov	esi, esp
	push	OFFSET $SG153047
	push	512					; 00000200H
	lea	ecx, DWORD PTR _strBuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@DXUTDispla
$LN9@DXUTDispla:
; Line 3368
	mov	DWORD PTR _nExitCode$[ebp], 6
	mov	esi, esp
	push	OFFSET $SG153053
	push	512					; 00000200H
	lea	edx, DWORD PTR _strBuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@DXUTDispla
$LN8@DXUTDispla:
; Line 3369
	mov	DWORD PTR _nExitCode$[ebp], 7
	mov	esi, esp
	push	OFFSET $SG153059
	push	512					; 00000200H
	lea	eax, DWORD PTR _strBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@DXUTDispla
$LN7@DXUTDispla:
; Line 3370
	mov	DWORD PTR _nExitCode$[ebp], 8
	mov	esi, esp
	push	OFFSET $SG153065
	push	512					; 00000200H
	lea	ecx, DWORD PTR _strBuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN16@DXUTDispla
$LN6@DXUTDispla:
; Line 3371
	mov	DWORD PTR _nExitCode$[ebp], 9
	mov	esi, esp
	push	OFFSET $SG153071
	push	512					; 00000200H
	lea	edx, DWORD PTR _strBuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN16@DXUTDispla
$LN5@DXUTDispla:
; Line 3373
	mov	DWORD PTR _nExitCode$[ebp], 11		; 0000000bH
	mov	esi, esp
	push	OFFSET $SG153077
	push	512					; 00000200H
	lea	eax, DWORD PTR _strBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN16@DXUTDispla
$LN4@DXUTDispla:
; Line 3374
	mov	BYTE PTR _bFound$[ebp], 0
	mov	DWORD PTR _nExitCode$[ebp], 1
$LN16@DXUTDispla:
; Line 3378
	mov	ecx, DWORD PTR _nExitCode$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
; Line 3380
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ ; DXUTState::GetShowMsgBoxOnError
	mov	BYTE PTR _bShowMsgBoxOnError$[ebp], al
; Line 3381
	movzx	edx, BYTE PTR _bFound$[ebp]
	test	edx, edx
	je	SHORT $LN18@DXUTDispla
	movzx	eax, BYTE PTR _bShowMsgBoxOnError$[ebp]
	test	eax, eax
	je	SHORT $LN18@DXUTDispla
; Line 3383
	call	?DXUTGetWindowTitle@@YGPB_WXZ		; DXUTGetWindowTitle
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR [eax+edx]
	test	eax, eax
	jne	SHORT $LN2@DXUTDispla
; Line 3384
	mov	esi, esp
	push	16					; 00000010H
	push	OFFSET $SG153082
	lea	ecx, DWORD PTR _strBuffer$[ebp]
	push	ecx
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3385
	jmp	SHORT $LN18@DXUTDispla
$LN2@DXUTDispla:
; Line 3386
	mov	esi, esp
	push	16					; 00000010H
	call	?DXUTGetWindowTitle@@YGPB_WXZ		; DXUTGetWindowTitle
	push	eax
	lea	edx, DWORD PTR _strBuffer$[ebp]
	push	edx
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@DXUTDispla:
; Line 3388
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@DXUTDispla
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1048				; 00000418H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@DXUTDispla:
	DD	1
	DD	$LN21@DXUTDispla
$LN21@DXUTDispla:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN20@DXUTDispla
$LN20@DXUTDispla:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
	npad	2
$LN23@DXUTDispla:
	DD	$LN15@DXUTDispla
	DD	$LN14@DXUTDispla
	DD	$LN11@DXUTDispla
	DD	$LN10@DXUTDispla
	DD	$LN9@DXUTDispla
	DD	$LN8@DXUTDispla
	DD	$LN7@DXUTDispla
	DD	$LN6@DXUTDispla
	DD	$LN4@DXUTDispla
	DD	$LN5@DXUTDispla
?DXUTDisplayErrorMessage@@YAXJ@Z ENDP			; DXUTDisplayErrorMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv140 = -96						; size = 4
tv70 = -92						; size = 4
$T2 = -88						; size = 12
$T3 = -73						; size = 1
_DXUTTimer$4 = -68					; size = 24
_it$5 = -36						; size = 12
_pTimerList$ = -20					; size = 4
_fElapsedTime$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DXUTHandleTimers@@YAXXZ PROC				; DXUTHandleTimers
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3313
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DXUTHandleTimers@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 3314
	call	?DXUTGetElapsedTime@@YGMXZ		; DXUTGetElapsedTime
	fstp	DWORD PTR _fElapsedTime$[ebp]
; Line 3316
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
	mov	DWORD PTR _pTimerList$[ebp], eax
; Line 3317
	cmp	DWORD PTR _pTimerList$[ebp], 0
	jne	SHORT $LN6@DXUTHandle
; Line 3318
	jmp	$LN7@DXUTHandle
$LN6@DXUTHandle:
; Line 3321
	lea	eax, DWORD PTR _it$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTimerList$[ebp]
	call	?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN5@DXUTHandle
$LN4@DXUTHandle:
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
$LN5@DXUTHandle:
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTimerList$[ebp]
	call	?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv140[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv140[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
	mov	BYTE PTR $T3[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T3[ebp]
	test	ecx, ecx
	je	$LN3@DXUTHandle
; Line 3323
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _DXUTTimer$4[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _DXUTTimer$4[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _DXUTTimer$4[ebp+8], edx
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _DXUTTimer$4[ebp+12], ecx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR _DXUTTimer$4[ebp+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR _DXUTTimer$4[ebp+20], eax
; Line 3324
	movzx	ecx, BYTE PTR _DXUTTimer$4[ebp+16]
	test	ecx, ecx
	je	$LN2@DXUTHandle
; Line 3326
	movss	xmm0, DWORD PTR _DXUTTimer$4[ebp+12]
	subss	xmm0, DWORD PTR _fElapsedTime$[ebp]
	movss	DWORD PTR _DXUTTimer$4[ebp+12], xmm0
; Line 3329
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _DXUTTimer$4[ebp+12]
	jbe	SHORT $LN1@DXUTHandle
; Line 3331
	mov	esi, esp
	mov	edx, DWORD PTR _DXUTTimer$4[ebp+4]
	push	edx
	mov	eax, DWORD PTR _DXUTTimer$4[ebp+20]
	push	eax
	call	DWORD PTR _DXUTTimer$4[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3333
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _DXUTTimer$4[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _DXUTTimer$4[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _DXUTTimer$4[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _DXUTTimer$4[ebp+12], edx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _DXUTTimer$4[ebp+16], ecx
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR _DXUTTimer$4[ebp+20], edx
; Line 3334
	movss	xmm0, DWORD PTR _DXUTTimer$4[ebp+8]
	movss	DWORD PTR _DXUTTimer$4[ebp+12], xmm0
$LN1@DXUTHandle:
; Line 3336
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
	mov	ecx, DWORD PTR _DXUTTimer$4[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _DXUTTimer$4[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _DXUTTimer$4[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _DXUTTimer$4[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _DXUTTimer$4[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _DXUTTimer$4[ebp+20]
	mov	DWORD PTR [eax+20], edx
$LN2@DXUTHandle:
; Line 3337
	jmp	$LN4@DXUTHandle
$LN3@DXUTHandle:
; Line 3338
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
$LN7@DXUTHandle:
; Line 3339
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@DXUTHandle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@DXUTHandle:
	DD	2
	DD	$LN14@DXUTHandle
$LN14@DXUTHandle:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN11@DXUTHandle
	DD	-68					; ffffffbcH
	DD	24					; 00000018H
	DD	$LN12@DXUTHandle
$LN12@DXUTHandle:
	DB	68					; 00000044H
	DB	88					; 00000058H
	DB	85					; 00000055H
	DB	84					; 00000054H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN11@DXUTHandle:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTHandleTimers@@YAXXZ$0:
	lea	ecx, DWORD PTR _it$5[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTHandleTimers@@YAXXZ$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTHandleTimers@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DXUTHandleTimers@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DXUTHandleTimers@@YAXXZ ENDP				; DXUTHandleTimers
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv153 = -32						; size = 4
_pstrFPS$1 = -28					; size = 4
_fFPS$2 = -24						; size = 4
_fAbsTime$ = -20					; size = 8
_dwFrames$ = -12					; size = 4
_fLastTime$ = -8					; size = 8
?DXUTUpdateFrameStats@@YAXXZ PROC			; DXUTUpdateFrameStats
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4026
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 4027
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetNoStats@DXUTState@@QAE_NXZ		; DXUTState::GetNoStats
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@DXUTUpdate
; Line 4028
	jmp	$LN3@DXUTUpdate
$LN2@DXUTUpdate:
; Line 4031
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetLastStatsUpdateTime@DXUTState@@QAENXZ ; DXUTState::GetLastStatsUpdateTime
	fstp	QWORD PTR _fLastTime$[ebp]
; Line 4032
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ ; DXUTState::GetLastStatsUpdateFrames
	mov	DWORD PTR _dwFrames$[ebp], eax
; Line 4033
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAbsoluteTime@DXUTState@@QAENXZ	; DXUTState::GetAbsoluteTime
	fstp	QWORD PTR _fAbsTime$[ebp]
; Line 4034
	mov	ecx, DWORD PTR _dwFrames$[ebp]
	add	ecx, 1
	mov	DWORD PTR _dwFrames$[ebp], ecx
; Line 4035
	mov	edx, DWORD PTR _dwFrames$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z ; DXUTState::SetLastStatsUpdateFrames
; Line 4038
	movsd	xmm0, QWORD PTR _fAbsTime$[ebp]
	subsd	xmm0, QWORD PTR _fLastTime$[ebp]
	comisd	xmm0, QWORD PTR __real@3ff0000000000000
	jbe	$LN1@DXUTUpdate
; Line 4040
	mov	eax, DWORD PTR _dwFrames$[ebp]
	mov	DWORD PTR tv153[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv153[ebp]
	mov	ecx, DWORD PTR tv153[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	xmm1, QWORD PTR _fAbsTime$[ebp]
	subsd	xmm1, QWORD PTR _fLastTime$[ebp]
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _fFPS$2[ebp], xmm0
; Line 4041
	push	ecx
	movss	xmm0, DWORD PTR _fFPS$2[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFPS@DXUTState@@QAEXM@Z		; DXUTState::SetFPS
; Line 4042
	sub	esp, 8
	movsd	xmm0, QWORD PTR _fAbsTime$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z ; DXUTState::SetLastStatsUpdateTime
; Line 4043
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z ; DXUTState::SetLastStatsUpdateFrames
; Line 4045
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFPSStats@DXUTState@@QAEPA_WXZ	; DXUTState::GetFPSStats
	mov	DWORD PTR _pstrFPS$1[ebp], eax
; Line 4046
	cvtss2sd xmm0, DWORD PTR _fFPS$2[ebp]
	mov	esi, esp
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG153649
	push	64					; 00000040H
	mov	edx, DWORD PTR _pstrFPS$1[ebp]
	push	edx
	call	DWORD PTR __imp__swprintf_s
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DXUTUpdate:
$LN3@DXUTUpdate:
; Line 4048
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTUpdateFrameStats@@YAXXZ ENDP			; DXUTUpdateFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv164 = -440						; size = 4
_pstrStaticFrameStats$ = -436				; size = 4
_strMultiSample$ = -428					; size = 200
_strFmt$ = -220						; size = 200
_pDeviceSettingsCombo$ = -16				; size = 4
_pd3dEnum$ = -12					; size = 4
_pDeviceSettings$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTUpdateStaticFrameStats@@YAXXZ PROC			; DXUTUpdateStaticFrameStats
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3989
	push	ebp
	mov	ebp, esp
	sub	esp, 440				; 000001b8H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3990
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetNoStats@DXUTState@@QAE_NXZ		; DXUTState::GetNoStats
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@DXUTUpdate
; Line 3991
	jmp	$LN5@DXUTUpdate
$LN4@DXUTUpdate:
; Line 3993
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDeviceSettings$[ebp], eax
; Line 3994
	cmp	DWORD PTR _pDeviceSettings$[ebp], 0
	jne	SHORT $LN3@DXUTUpdate
; Line 3995
	jmp	$LN5@DXUTUpdate
$LN3@DXUTUpdate:
; Line 3998
	push	0
	push	1
	push	0
	call	?DXUTGetD3D11Enumeration@@YGPAVCD3D11Enumeration@@_N0W4D3D_FEATURE_LEVEL@@@Z ; DXUTGetD3D11Enumeration
	mov	DWORD PTR _pd3dEnum$[ebp], eax
; Line 3999
	cmp	DWORD PTR _pd3dEnum$[ebp], 0
	jne	SHORT $LN2@DXUTUpdate
; Line 4000
	jmp	$LN5@DXUTUpdate
$LN2@DXUTUpdate:
; Line 4004
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pd3dEnum$[ebp]
	call	?GetDeviceSettingsCombo@CD3D11Enumeration@@QBEPAUCD3D11EnumDeviceSettingsCombo@@IW4DXGI_FORMAT@@H@Z ; CD3D11Enumeration::GetDeviceSettingsCombo
	mov	DWORD PTR _pDeviceSettingsCombo$[ebp], eax
; Line 4005
	cmp	DWORD PTR _pDeviceSettingsCombo$[ebp], 0
	jne	SHORT $LN1@DXUTUpdate
; Line 4006
	jmp	$LN5@DXUTUpdate
$LN1@DXUTUpdate:
; Line 4009
	push	0
	mov	ecx, DWORD PTR _pDeviceSettingsCombo$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?DXUTDXGIFormatToString@@YGPB_WW4DXGI_FORMAT@@_N@Z ; DXUTDXGIFormatToString
	mov	esi, esp
	push	eax
	push	100					; 00000064H
	lea	eax, DWORD PTR _strFmt$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4013
	mov	esi, esp
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	push	OFFSET $SG153632
	push	100					; 00000064H
	lea	edx, DWORD PTR _strMultiSample$[ebp]
	push	edx
	call	DWORD PTR __imp__swprintf_s
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4014
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStaticFrameStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetStaticFrameStats
	mov	DWORD PTR _pstrStaticFrameStats$[ebp], eax
; Line 4018
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN7@DXUTUpdate
	mov	DWORD PTR tv164[ebp], OFFSET $SG153635
	jmp	SHORT $LN8@DXUTUpdate
$LN7@DXUTUpdate:
	mov	DWORD PTR tv164[ebp], OFFSET $SG153636
$LN8@DXUTUpdate:
	mov	esi, esp
	lea	ecx, DWORD PTR _strMultiSample$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strFmt$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR tv164[ebp]
	push	ecx
	push	OFFSET $SG153637
	push	256					; 00000100H
	mov	edx, DWORD PTR _pstrStaticFrameStats$[ebp]
	push	edx
	call	DWORD PTR __imp__swprintf_s
	add	esp, 32					; 00000020H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@DXUTUpdate:
; Line 4019
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@DXUTUpdate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@DXUTUpdate:
	DD	2
	DD	$LN11@DXUTUpdate
$LN11@DXUTUpdate:
	DD	-220					; ffffff24H
	DD	200					; 000000c8H
	DD	$LN9@DXUTUpdate
	DD	-428					; fffffe54H
	DD	200					; 000000c8H
	DD	$LN10@DXUTUpdate
$LN10@DXUTUpdate:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	77					; 0000004dH
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN9@DXUTUpdate:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	0
?DXUTUpdateStaticFrameStats@@YAXXZ ENDP			; DXUTUpdateStaticFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fkOff$1 = -132						; size = 24
_tkOff$2 = -100						; size = 8
_skOff$3 = -84						; size = 8
_hKeyboardHook$4 = -72					; size = 4
_fk$5 = -64						; size = 24
_tk$6 = -32						; size = 8
_sk$7 = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_bAllowKeys$ = 8					; size = 1
?DXUTAllowShortcutKeys@@YAX_N@Z PROC			; DXUTAllowShortcutKeys
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3138
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3139
	movzx	eax, BYTE PTR _bAllowKeys$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeys
; Line 3141
	movzx	ecx, BYTE PTR _bAllowKeys$[ebp]
	test	ecx, ecx
	je	$LN7@DXUTAllowS
; Line 3144
	lea	edx, DWORD PTR _sk$7[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ; DXUTState::GetStartupStickyKeys
; Line 3145
	lea	eax, DWORD PTR _tk$6[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ; DXUTState::GetStartupToggleKeys
; Line 3146
	lea	ecx, DWORD PTR _fk$5[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ; DXUTState::GetStartupFilterKeys
; Line 3148
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _sk$7[ebp]
	push	edx
	push	8
	push	59					; 0000003bH
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3149
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _tk$6[ebp]
	push	eax
	push	8
	push	53					; 00000035H
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3150
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _fk$5[ebp]
	push	ecx
	push	24					; 00000018H
	push	51					; 00000033H
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3153
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
	test	eax, eax
	je	SHORT $LN6@DXUTAllowS
; Line 3155
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__UnhookWindowsHookEx@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3156
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z ; DXUTState::SetKeyboardHook
$LN6@DXUTAllowS:
; Line 3159
	jmp	$LN8@DXUTAllowS
$LN7@DXUTAllowS:
; Line 3162
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ; DXUTState::GetKeyboardHook
	test	eax, eax
	jne	SHORT $LN4@DXUTAllowS
; Line 3166
	mov	esi, esp
	push	0
	mov	edi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ?DXUTLowLevelKeyboardProc@@YGJHIJ@Z ; DXUTLowLevelKeyboardProc
	push	13					; 0000000dH
	call	DWORD PTR __imp__SetWindowsHookExW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hKeyboardHook$4[ebp], eax
; Line 3167
	mov	edx, DWORD PTR _hKeyboardHook$4[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z ; DXUTState::SetKeyboardHook
$LN4@DXUTAllowS:
; Line 3173
	lea	eax, DWORD PTR _skOff$3[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ; DXUTState::GetStartupStickyKeys
; Line 3174
	mov	ecx, DWORD PTR _skOff$3[ebp+4]
	and	ecx, 1
	jne	SHORT $LN3@DXUTAllowS
; Line 3177
	mov	edx, DWORD PTR _skOff$3[ebp+4]
	and	edx, -5					; fffffffbH
	mov	DWORD PTR _skOff$3[ebp+4], edx
; Line 3178
	mov	eax, DWORD PTR _skOff$3[ebp+4]
	and	eax, -9					; fffffff7H
	mov	DWORD PTR _skOff$3[ebp+4], eax
; Line 3180
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _skOff$3[ebp]
	push	ecx
	push	8
	push	59					; 0000003bH
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DXUTAllowS:
; Line 3183
	lea	edx, DWORD PTR _tkOff$2[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ; DXUTState::GetStartupToggleKeys
; Line 3184
	mov	eax, DWORD PTR _tkOff$2[ebp+4]
	and	eax, 1
	jne	SHORT $LN2@DXUTAllowS
; Line 3187
	mov	ecx, DWORD PTR _tkOff$2[ebp+4]
	and	ecx, -5					; fffffffbH
	mov	DWORD PTR _tkOff$2[ebp+4], ecx
; Line 3188
	mov	edx, DWORD PTR _tkOff$2[ebp+4]
	and	edx, -9					; fffffff7H
	mov	DWORD PTR _tkOff$2[ebp+4], edx
; Line 3190
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _tkOff$2[ebp]
	push	eax
	push	8
	push	53					; 00000035H
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUTAllowS:
; Line 3193
	lea	ecx, DWORD PTR _fkOff$1[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ; DXUTState::GetStartupFilterKeys
; Line 3194
	mov	edx, DWORD PTR _fkOff$1[ebp+4]
	and	edx, 1
	jne	SHORT $LN8@DXUTAllowS
; Line 3197
	mov	eax, DWORD PTR _fkOff$1[ebp+4]
	and	eax, -5					; fffffffbH
	mov	DWORD PTR _fkOff$1[ebp+4], eax
; Line 3198
	mov	ecx, DWORD PTR _fkOff$1[ebp+4]
	and	ecx, -9					; fffffff7H
	mov	DWORD PTR _fkOff$1[ebp+4], ecx
; Line 3200
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _fkOff$1[ebp]
	push	edx
	push	24					; 00000018H
	push	51					; 00000033H
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@DXUTAllowS:
; Line 3203
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@DXUTAllowS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN17@DXUTAllowS:
	DD	6
	DD	$LN16@DXUTAllowS
$LN16@DXUTAllowS:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN10@DXUTAllowS
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN11@DXUTAllowS
	DD	-64					; ffffffc0H
	DD	24					; 00000018H
	DD	$LN12@DXUTAllowS
	DD	-84					; ffffffacH
	DD	8
	DD	$LN13@DXUTAllowS
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN14@DXUTAllowS
	DD	-132					; ffffff7cH
	DD	24					; 00000018H
	DD	$LN15@DXUTAllowS
$LN15@DXUTAllowS:
	DB	102					; 00000066H
	DB	107					; 0000006bH
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN14@DXUTAllowS:
	DB	116					; 00000074H
	DB	107					; 0000006bH
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN13@DXUTAllowS:
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN12@DXUTAllowS:
	DB	102					; 00000066H
	DB	107					; 0000006bH
	DB	0
$LN11@DXUTAllowS:
	DB	116					; 00000074H
	DB	107					; 0000006bH
	DB	0
$LN10@DXUTAllowS:
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	0
?DXUTAllowShortcutKeys@@YAX_N@Z ENDP			; DXUTAllowShortcutKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -24						; size = 4
tv144 = -18						; size = 2
tv141 = -16						; size = 4
tv138 = -12						; size = 4
_count$1 = -8						; size = 4
_strSpace$2 = -4					; size = 4
_strCmdLine$ = 8					; size = 4
_strFlag$ = 12						; size = 4
_cchDest$ = 16						; size = 4
?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z PROC		; DXUTGetCmdParam
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 941
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 942
	mov	eax, DWORD PTR _strCmdLine$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 58					; 0000003aH
	jne	$LN4@DXUTGetCmd
; Line 944
	mov	eax, DWORD PTR _strCmdLine$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _strCmdLine$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 947
	mov	esi, esp
	mov	eax, DWORD PTR _strCmdLine$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _cchDest$[ebp]
	push	edx
	mov	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 949
	mov	ecx, DWORD PTR _strFlag$[ebp]
	mov	DWORD PTR _strSpace$2[ebp], ecx
; Line 950
	mov	DWORD PTR _count$1[ebp], 0
$LN3@DXUTGetCmd:
; Line 951
	mov	edx, DWORD PTR _strSpace$2[ebp]
	movzx	eax, WORD PTR [edx]
	test	eax, eax
	je	SHORT $LN2@DXUTGetCmd
	mov	ecx, DWORD PTR _strSpace$2[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 32					; 00000020H
	jle	SHORT $LN2@DXUTGetCmd
	mov	eax, DWORD PTR _count$1[ebp]
	cmp	eax, DWORD PTR _cchDest$[ebp]
	jge	SHORT $LN2@DXUTGetCmd
; Line 953
	mov	ecx, DWORD PTR _strSpace$2[ebp]
	add	ecx, 2
	mov	DWORD PTR _strSpace$2[ebp], ecx
; Line 954
	mov	edx, DWORD PTR _count$1[ebp]
	add	edx, 1
	mov	DWORD PTR _count$1[ebp], edx
; Line 955
	jmp	SHORT $LN3@DXUTGetCmd
$LN2@DXUTGetCmd:
; Line 956
	xor	eax, eax
	mov	ecx, DWORD PTR _strSpace$2[ebp]
	mov	WORD PTR [ecx], ax
; Line 959
	mov	edx, DWORD PTR _strFlag$[ebp]
	mov	DWORD PTR tv138[ebp], edx
	mov	eax, DWORD PTR tv138[ebp]
	add	eax, 2
	mov	DWORD PTR tv141[ebp], eax
$LL7@DXUTGetCmd:
	mov	ecx, DWORD PTR tv138[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv144[ebp], dx
	add	DWORD PTR tv138[ebp], 2
	cmp	WORD PTR tv144[ebp], 0
	jne	SHORT $LL7@DXUTGetCmd
	mov	eax, DWORD PTR tv138[ebp]
	sub	eax, DWORD PTR tv141[ebp]
	sar	eax, 1
	mov	DWORD PTR tv80[ebp], eax
	mov	ecx, DWORD PTR _strCmdLine$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR tv80[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	edx, DWORD PTR _strCmdLine$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 960
	mov	al, 1
	jmp	SHORT $LN5@DXUTGetCmd
; Line 962
	jmp	SHORT $LN5@DXUTGetCmd
$LN4@DXUTGetCmd:
; Line 964
	mov	eax, 2
	imul	ecx, eax, 0
	xor	edx, edx
	mov	eax, DWORD PTR _strFlag$[ebp]
	mov	WORD PTR [eax+ecx], dx
; Line 965
	xor	al, al
$LN5@DXUTGetCmd:
; Line 967
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z ENDP		; DXUTGetCmdParam
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -40						; size = 4
tv142 = -34						; size = 2
tv139 = -32						; size = 4
tv136 = -28						; size = 4
tv66 = -24						; size = 4
tv128 = -18						; size = 2
tv93 = -16						; size = 4
tv90 = -12						; size = 4
_nCmdLen$ = -8						; size = 4
_nArgLen$ = -4						; size = 4
_strCmdLine$ = 8					; size = 4
_strArg$ = 12						; size = 4
?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z PROC			; DXUTIsNextArg
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 918
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 919
	mov	eax, DWORD PTR _strArg$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	add	ecx, 2
	mov	DWORD PTR tv93[ebp], ecx
$LL5@DXUTIsNext:
	mov	edx, DWORD PTR tv90[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv128[ebp], ax
	add	DWORD PTR tv90[ebp], 2
	cmp	WORD PTR tv128[ebp], 0
	jne	SHORT $LL5@DXUTIsNext
	mov	ecx, DWORD PTR tv90[ebp]
	sub	ecx, DWORD PTR tv93[ebp]
	sar	ecx, 1
	mov	DWORD PTR tv66[ebp], ecx
	mov	edx, DWORD PTR tv66[ebp]
	mov	DWORD PTR _nArgLen$[ebp], edx
; Line 920
	mov	eax, DWORD PTR _strCmdLine$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv136[ebp], ecx
	mov	edx, DWORD PTR tv136[ebp]
	add	edx, 2
	mov	DWORD PTR tv139[ebp], edx
$LL6@DXUTIsNext:
	mov	eax, DWORD PTR tv136[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv142[ebp], cx
	add	DWORD PTR tv136[ebp], 2
	cmp	WORD PTR tv142[ebp], 0
	jne	SHORT $LL6@DXUTIsNext
	mov	edx, DWORD PTR tv136[ebp]
	sub	edx, DWORD PTR tv139[ebp]
	sar	edx, 1
	mov	DWORD PTR tv69[ebp], edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _nCmdLen$[ebp], eax
; Line 924
	mov	ecx, DWORD PTR _nCmdLen$[ebp]
	cmp	ecx, DWORD PTR _nArgLen$[ebp]
	jb	SHORT $LN2@DXUTIsNext
	mov	esi, esp
	mov	edx, DWORD PTR _nArgLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _strArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strCmdLine$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@DXUTIsNext
	mov	eax, DWORD PTR _strCmdLine$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nArgLen$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	test	eax, eax
	je	SHORT $LN1@DXUTIsNext
	mov	ecx, DWORD PTR _strCmdLine$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _nArgLen$[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	cmp	ecx, 58					; 0000003aH
	jne	SHORT $LN2@DXUTIsNext
$LN1@DXUTIsNext:
; Line 926
	mov	edx, DWORD PTR _strCmdLine$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _nArgLen$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR _strCmdLine$[ebp]
	mov	DWORD PTR [eax], edx
; Line 927
	mov	al, 1
	jmp	SHORT $LN3@DXUTIsNext
$LN2@DXUTIsNext:
; Line 930
	xor	al, al
$LN3@DXUTIsNext:
; Line 931
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z ENDP			; DXUTIsNextArg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv428 = -624						; size = 4
tv647 = -618						; size = 2
tv644 = -616						; size = 4
tv641 = -612						; size = 4
_strSpace$1 = -608					; size = 4
_nFrame$2 = -604					; size = 4
_fTimePerFrame$3 = -600					; size = 4
_nY$4 = -596						; size = 4
_nX$5 = -592						; size = 4
_nHeight$6 = -588					; size = 4
_nWidth$7 = -584					; size = 4
_nOn$8 = -580						; size = 4
_Output$9 = -576					; size = 4
_nAdapter$10 = -572					; size = 4
_iArg$11 = -568						; size = 4
_iArgStart$ = -564					; size = 4
_pstrArgList$ = -560					; size = 4
_nNumArgs$ = -552					; size = 4
_strFlag$ = -540					; size = 520
_strCmdLine$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_strCommandLine$ = 8					; size = 4
_bIgnoreFirstCommand$ = 12				; size = 1
?DXUTParseCommandLine@@YAXPA_W_N@Z PROC			; DXUTParseCommandLine
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 708
	push	ebp
	mov	ebp, esp
	sub	esp, 624				; 00000270H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-624]
	mov	ecx, 156				; 0000009cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 713
	mov	esi, esp
	lea	eax, DWORD PTR _nNumArgs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strCommandLine$[ebp]
	push	ecx
	call	DWORD PTR __imp__CommandLineToArgvW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pstrArgList$[ebp], eax
; Line 714
	mov	DWORD PTR _iArgStart$[ebp], 0
; Line 715
	movzx	edx, BYTE PTR _bIgnoreFirstCommand$[ebp]
	test	edx, edx
	je	SHORT $LN52@DXUTParseC
; Line 716
	mov	DWORD PTR _iArgStart$[ebp], 1
$LN52@DXUTParseC:
; Line 717
	mov	eax, DWORD PTR _iArgStart$[ebp]
	mov	DWORD PTR _iArg$11[ebp], eax
	jmp	SHORT $LN51@DXUTParseC
$LN50@DXUTParseC:
	mov	ecx, DWORD PTR _iArg$11[ebp]
	add	ecx, 1
	mov	DWORD PTR _iArg$11[ebp], ecx
$LN51@DXUTParseC:
	mov	edx, DWORD PTR _iArg$11[ebp]
	cmp	edx, DWORD PTR _nNumArgs$[ebp]
	jge	$LN49@DXUTParseC
; Line 719
	mov	eax, DWORD PTR _iArg$11[ebp]
	mov	ecx, DWORD PTR _pstrArgList$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _strCmdLine$[ebp], edx
; Line 722
	mov	eax, DWORD PTR _strCmdLine$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN47@DXUTParseC
	mov	edx, DWORD PTR _strCmdLine$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 45					; 0000002dH
	jne	$LN3@DXUTParseC
$LN47@DXUTParseC:
; Line 724
	mov	ecx, DWORD PTR _strCmdLine$[ebp]
	add	ecx, 2
	mov	DWORD PTR _strCmdLine$[ebp], ecx
; Line 726
	push	OFFSET $SG151611
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN45@DXUTParseC
; Line 728
	push	260					; 00000104H
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	$LN45@DXUTParseC
; Line 730
	mov	esi, esp
	push	260					; 00000104H
	push	OFFSET $SG151614
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN44@DXUTParseC
; Line 731
	push	45312					; 0000b100H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
	jmp	$LN32@DXUTParseC
$LN44@DXUTParseC:
; Line 732
	mov	esi, esp
	push	260					; 00000104H
	push	OFFSET $SG151617
	lea	edx, DWORD PTR _strFlag$[ebp]
	push	edx
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN42@DXUTParseC
; Line 733
	push	45056					; 0000b000H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
	jmp	$LN32@DXUTParseC
$LN42@DXUTParseC:
; Line 734
	mov	esi, esp
	push	260					; 00000104H
	push	OFFSET $SG151620
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN40@DXUTParseC
; Line 735
	push	41216					; 0000a100H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
	jmp	$LN32@DXUTParseC
$LN40@DXUTParseC:
; Line 736
	mov	esi, esp
	push	260					; 00000104H
	push	OFFSET $SG151623
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN38@DXUTParseC
; Line 737
	push	40960					; 0000a000H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
	jmp	$LN32@DXUTParseC
$LN38@DXUTParseC:
; Line 738
	mov	esi, esp
	push	260					; 00000104H
	push	OFFSET $SG151626
	lea	edx, DWORD PTR _strFlag$[ebp]
	push	edx
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN36@DXUTParseC
; Line 739
	push	37632					; 00009300H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
	jmp	SHORT $LN32@DXUTParseC
$LN36@DXUTParseC:
; Line 740
	mov	esi, esp
	push	260					; 00000104H
	push	OFFSET $SG151629
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN34@DXUTParseC
; Line 741
	push	37376					; 00009200H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
	jmp	SHORT $LN32@DXUTParseC
$LN34@DXUTParseC:
; Line 742
	mov	esi, esp
	push	260					; 00000104H
	push	OFFSET $SG151632
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	call	DWORD PTR __imp___wcsnicmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN32@DXUTParseC
; Line 743
	push	37120					; 00009100H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ; DXUTState::SetOverrideForceFeatureLevel
$LN32@DXUTParseC:
; Line 745
	jmp	$LN50@DXUTParseC
$LN45@DXUTParseC:
; Line 749
	push	OFFSET $SG151634
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN30@DXUTParseC
; Line 751
	push	260					; 00000104H
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN30@DXUTParseC
; Line 753
	mov	esi, esp
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nAdapter$10[ebp], eax
; Line 754
	mov	edx, DWORD PTR _nAdapter$10[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideAdapterOrdinal
; Line 755
	jmp	$LN50@DXUTParseC
$LN30@DXUTParseC:
; Line 759
	push	OFFSET $SG151638
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN29@DXUTParseC
; Line 761
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideWindowed@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideWindowed
; Line 762
	jmp	$LN50@DXUTParseC
$LN29@DXUTParseC:
; Line 765
	push	OFFSET $SG151640
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@DXUTParseC
; Line 767
	push	260					; 00000104H
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@DXUTParseC
; Line 769
	mov	esi, esp
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Output$9[ebp], eax
; Line 770
	mov	edx, DWORD PTR _Output$9[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideOutput@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideOutput
; Line 771
	jmp	$LN50@DXUTParseC
$LN27@DXUTParseC:
; Line 775
	push	OFFSET $SG151644
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN26@DXUTParseC
; Line 777
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideFullScreen
; Line 778
	jmp	$LN50@DXUTParseC
$LN26@DXUTParseC:
; Line 781
	push	OFFSET $SG151646
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@DXUTParseC
; Line 783
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceHAL@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideForceHAL
; Line 784
	jmp	$LN50@DXUTParseC
$LN25@DXUTParseC:
; Line 786
	push	OFFSET $SG151648
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN23@DXUTParseC
; Line 787
	push	260					; 00000104H
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN23@DXUTParseC
; Line 789
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z ; DXUTState::SetExitAfterScreenShot
; Line 790
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetSaveScreenShot@DXUTState@@QAEX_N@Z	; DXUTState::SetSaveScreenShot
; Line 791
	mov	esi, esp
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	push	OFFSET $SG151650
	push	256					; 00000100H
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetScreenShotName@DXUTState@@QAEPA_WXZ	; DXUTState::GetScreenShotName
	push	eax
	call	DWORD PTR __imp__swprintf_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 792
	jmp	$LN50@DXUTParseC
$LN23@DXUTParseC:
; Line 795
	push	OFFSET $SG151652
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN22@DXUTParseC
; Line 797
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceREF@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideForceREF
; Line 798
	jmp	$LN50@DXUTParseC
$LN22@DXUTParseC:
; Line 800
	push	OFFSET $SG151654
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN21@DXUTParseC
; Line 802
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceWARP@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideForceWARP
; Line 803
	jmp	$LN50@DXUTParseC
$LN21@DXUTParseC:
; Line 806
	push	OFFSET $SG151656
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@DXUTParseC
; Line 808
	push	260					; 00000104H
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@DXUTParseC
; Line 810
	mov	esi, esp
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nOn$8[ebp], eax
; Line 811
	mov	edx, DWORD PTR _nOn$8[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideForceVsync@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideForceVsync
; Line 812
	jmp	$LN50@DXUTParseC
$LN19@DXUTParseC:
; Line 816
	push	OFFSET $SG151660
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@DXUTParseC
; Line 818
	push	260					; 00000104H
	lea	edx, DWORD PTR _strFlag$[ebp]
	push	edx
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@DXUTParseC
; Line 820
	mov	esi, esp
	lea	edx, DWORD PTR _strFlag$[ebp]
	push	edx
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nWidth$7[ebp], eax
; Line 821
	mov	eax, DWORD PTR _nWidth$7[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideWidth@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideWidth
; Line 822
	jmp	$LN50@DXUTParseC
$LN17@DXUTParseC:
; Line 826
	push	OFFSET $SG151664
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@DXUTParseC
; Line 828
	push	260					; 00000104H
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@DXUTParseC
; Line 830
	mov	esi, esp
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nHeight$6[ebp], eax
; Line 831
	mov	ecx, DWORD PTR _nHeight$6[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideHeight@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideHeight
; Line 832
	jmp	$LN50@DXUTParseC
$LN15@DXUTParseC:
; Line 836
	push	OFFSET $SG151668
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@DXUTParseC
; Line 838
	push	260					; 00000104H
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@DXUTParseC
; Line 840
	mov	esi, esp
	lea	ecx, DWORD PTR _strFlag$[ebp]
	push	ecx
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nX$5[ebp], eax
; Line 841
	mov	edx, DWORD PTR _nX$5[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideStartX@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideStartX
; Line 842
	jmp	$LN50@DXUTParseC
$LN13@DXUTParseC:
; Line 846
	push	OFFSET $SG151672
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@DXUTParseC
; Line 848
	push	260					; 00000104H
	lea	edx, DWORD PTR _strFlag$[ebp]
	push	edx
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@DXUTParseC
; Line 850
	mov	esi, esp
	lea	edx, DWORD PTR _strFlag$[ebp]
	push	edx
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nY$4[ebp], eax
; Line 851
	mov	eax, DWORD PTR _nY$4[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideStartY@DXUTState@@QAEXH@Z	; DXUTState::SetOverrideStartY
; Line 852
	jmp	$LN50@DXUTParseC
$LN11@DXUTParseC:
; Line 856
	push	OFFSET $SG151676
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN10@DXUTParseC
; Line 859
	push	260					; 00000104H
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@DXUTParseC
; Line 860
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	call	DWORD PTR __imp__wcstod
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	DWORD PTR _fTimePerFrame$3[ebp]
; Line 861
	jmp	SHORT $LN8@DXUTParseC
$LN9@DXUTParseC:
; Line 862
	movss	xmm0, DWORD PTR __real@3d086595
	movss	DWORD PTR _fTimePerFrame$3[ebp], xmm0
$LN8@DXUTParseC:
; Line 863
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z ; DXUTState::SetOverrideConstantFrameTime
; Line 864
	push	ecx
	movss	xmm0, DWORD PTR _fTimePerFrame$3[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z ; DXUTState::SetOverrideConstantTimePerFrame
; Line 865
	push	ecx
	movss	xmm0, DWORD PTR _fTimePerFrame$3[ebp]
	movss	DWORD PTR [esp], xmm0
	push	1
	call	?DXUTSetConstantFrameTime@@YGX_NM@Z	; DXUTSetConstantFrameTime
; Line 866
	jmp	$LN50@DXUTParseC
$LN10@DXUTParseC:
; Line 869
	push	OFFSET $SG151682
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@DXUTParseC
; Line 871
	push	260					; 00000104H
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTGetCmdParam@@YA_NAAPA_WPA_WH@Z	; DXUTGetCmdParam
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@DXUTParseC
; Line 873
	mov	esi, esp
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	call	DWORD PTR __imp___wtoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nFrame$2[ebp], eax
; Line 874
	mov	ecx, DWORD PTR _nFrame$2[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z ; DXUTState::SetOverrideQuitAfterFrame
; Line 875
	jmp	$LN50@DXUTParseC
$LN6@DXUTParseC:
; Line 879
	push	OFFSET $SG151686
	lea	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@DXUTParseC
; Line 881
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z ; DXUTState::SetShowMsgBoxOnError
; Line 882
	jmp	$LN50@DXUTParseC
$LN5@DXUTParseC:
; Line 885
	push	OFFSET $SG151688
	lea	ecx, DWORD PTR _strCmdLine$[ebp]
	push	ecx
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@DXUTParseC
; Line 887
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetNoStats@DXUTState@@QAEX_N@Z		; DXUTState::SetNoStats
; Line 888
	jmp	$LN50@DXUTParseC
$LN4@DXUTParseC:
; Line 891
	push	OFFSET $SG151690
	lea	eax, DWORD PTR _strCmdLine$[ebp]
	push	eax
	call	?DXUTIsNextArg@@YA_NAAPA_WPB_W@Z	; DXUTIsNextArg
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@DXUTParseC
; Line 893
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAutomation@DXUTState@@QAEX_N@Z	; DXUTState::SetAutomation
; Line 894
	jmp	$LN50@DXUTParseC
$LN3@DXUTParseC:
; Line 899
	mov	esi, esp
	mov	edx, DWORD PTR _strCmdLine$[ebp]
	push	edx
	push	260					; 00000104H
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 900
	lea	ecx, DWORD PTR _strFlag$[ebp]
	mov	DWORD PTR _strSpace$1[ebp], ecx
$LN2@DXUTParseC:
; Line 901
	mov	edx, DWORD PTR _strSpace$1[ebp]
	movzx	eax, WORD PTR [edx]
	test	eax, eax
	je	SHORT $LN1@DXUTParseC
	mov	ecx, DWORD PTR _strSpace$1[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 32					; 00000020H
	jle	SHORT $LN1@DXUTParseC
; Line 902
	mov	eax, DWORD PTR _strSpace$1[ebp]
	add	eax, 2
	mov	DWORD PTR _strSpace$1[ebp], eax
	jmp	SHORT $LN2@DXUTParseC
$LN1@DXUTParseC:
; Line 903
	xor	ecx, ecx
	mov	edx, DWORD PTR _strSpace$1[ebp]
	mov	WORD PTR [edx], cx
; Line 905
	lea	eax, DWORD PTR _strFlag$[ebp]
	push	eax
	push	OFFSET $SG151695
	call	?DXUTOutputDebugStringW@@YAXPB_WZZ	; DXUTOutputDebugStringW
	add	esp, 8
; Line 906
	lea	ecx, DWORD PTR _strFlag$[ebp]
	mov	DWORD PTR tv641[ebp], ecx
	mov	edx, DWORD PTR tv641[ebp]
	add	edx, 2
	mov	DWORD PTR tv644[ebp], edx
$LL55@DXUTParseC:
	mov	eax, DWORD PTR tv641[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv647[ebp], cx
	add	DWORD PTR tv641[ebp], 2
	cmp	WORD PTR tv647[ebp], 0
	jne	SHORT $LL55@DXUTParseC
	mov	edx, DWORD PTR tv641[ebp]
	sub	edx, DWORD PTR tv644[ebp]
	sar	edx, 1
	mov	DWORD PTR tv428[ebp], edx
	mov	eax, DWORD PTR tv428[ebp]
	mov	ecx, DWORD PTR _strCmdLine$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _strCmdLine$[ebp], edx
; Line 907
	jmp	$LN50@DXUTParseC
$LN49@DXUTParseC:
; Line 909
	mov	esi, esp
	mov	eax, DWORD PTR _pstrArgList$[ebp]
	push	eax
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 910
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN60@DXUTParseC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 624				; 00000270H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN60@DXUTParseC:
	DD	3
	DD	$LN59@DXUTParseC
$LN59@DXUTParseC:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN56@DXUTParseC
	DD	-540					; fffffde4H
	DD	520					; 00000208H
	DD	$LN57@DXUTParseC
	DD	-552					; fffffdd8H
	DD	4
	DD	$LN58@DXUTParseC
$LN58@DXUTParseC:
	DB	110					; 0000006eH
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN57@DXUTParseC:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
$LN56@DXUTParseC:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	109					; 0000006dH
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
?DXUTParseCommandLine@@YAXPA_W_N@Z ENDP			; DXUTParseCommandLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ
text$yd	SEGMENT
??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ PROC ; `GetDXUTState'::`2'::`dynamic atexit destructor for 'memory'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A
	call	??1DXUTMemoryHelper@@QAE@XZ		; DXUTMemoryHelper::~DXUTMemoryHelper
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ ENDP ; `GetDXUTState'::`2'::`dynamic atexit destructor for 'memory''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?GetDXUTState@@YAAAVDXUTState@@XZ PROC			; GetDXUTState
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDXUTState@@YAAAVDXUTState@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 483
	mov	eax, DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
	and	eax, 1
	jne	SHORT $LN1@GetDXUTSta
	mov	ecx, DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
	or	ecx, 1
	mov	DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA, ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?memory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4VDXUTMemoryHelper@@A
	call	??0DXUTMemoryHelper@@QAE@XZ		; DXUTMemoryHelper::DXUTMemoryHelper
	push	OFFSET ??__Fmemory@?1??GetDXUTState@@YAAAVDXUTState@@XZ@YAXXZ ; `GetDXUTState'::`2'::`dynamic atexit destructor for 'memory''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN1@GetDXUTSta:
; Line 484
	cmp	DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
	jne	SHORT $LN4@GetDXUTSta
	mov	esi, esp
	push	484					; 000001e4H
	push	OFFSET $SG151355
	push	OFFSET $SG151356
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@GetDXUTSta:
; Line 486
	mov	eax, DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A ; g_pDXUTState
; Line 487
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetDXUTState@@YAAAVDXUTState@@XZ$0:
	mov	eax, DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ?$S1@?1??GetDXUTState@@YAAAVDXUTState@@XZ@4IA, eax
	ret	0
__ehhandler$?GetDXUTState@@YAAAVDXUTState@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDXUTState@@YAAAVDXUTState@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDXUTState@@YAAAVDXUTState@@XZ ENDP			; GetDXUTState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DXUTMemoryHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DXUTMemoryHelper@@QAE@XZ PROC			; DXUTMemoryHelper::~DXUTMemoryHelper, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	call	?DXUTDestroyState@@YGXXZ		; DXUTDestroyState
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DXUTMemoryHelper@@QAE@XZ ENDP			; DXUTMemoryHelper::~DXUTMemoryHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTMemoryHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTMemoryHelper@@QAE@XZ PROC			; DXUTMemoryHelper::DXUTMemoryHelper, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 475
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	call	?DXUTCreateState@@YGJXZ			; DXUTCreateState
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DXUTMemoryHelper@@QAE@XZ ENDP			; DXUTMemoryHelper::DXUTMemoryHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 1755
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUDXUT_TIMER@@@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEPAUDXUT_TIMER@@PAU2@00@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Umove<DXUT_TIMER *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1606
	imul	edx, DWORD PTR __Count$[ebp], 24
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	imul	ecx, DWORD PTR __Size$[ebp], 24
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1608
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@YAXPAUDXUT_TIMER@@0AAU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUT_TIMER> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXPAUDXUT_TIMER@@0@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ; std::addressof<DXUT_TIMER const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBE_NPBUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUDXUT_TIMER@@@std@@YAPBUDXUT_TIMER@@ABU1@@Z ; std::addressof<DXUT_TIMER const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR __Idx$3[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
; Line 1251
	imul	eax, DWORD PTR __Idx$3[ebp], 24
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
	mov	ecx, eax
	call	??$construct@UDXUT_TIMER@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER &>
; Line 1252
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXI@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IBEXPAUDXUT_TIMER@@0@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Orphan_range
; Line 1260
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
	mov	ecx, eax
	call	??$construct@UDXUT_TIMER@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::construct<DXUT_TIMER,DXUT_TIMER const &>
; Line 1261
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 1263
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size
; Line 1154
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1035
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@PAUDXUT_TIMER@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@IAEXXZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::~vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ ; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUT_TIMER@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >::_Vector_alloc<0,std::_Vec_base_types<DXUT_TIMER,std::allocator<DXUT_TIMER> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::~_Vector_val<std::_Simple_types<DXUT_TIMER> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::~_Vector_val<std::_Simple_types<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUT_TIMER> >::_Vector_val<std::_Simple_types<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXPAUDXUT_TIMER@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z ; std::allocator<DXUT_TIMER>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAUDXUT_TIMER@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ ; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUT_TIMER> >::_Wrap_alloc<std::allocator<DXUT_TIMER> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ ; std::allocator<DXUT_TIMER>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@UDXUT_TIMER@@@std@@@std@@SAIABV?$allocator@UDXUT_TIMER@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUT_TIMER> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ PROC	; std::allocator<DXUT_TIMER>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 178956970				; 0aaaaaaaH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UDXUT_TIMER@@@std@@QBEIXZ ENDP	; std::allocator<DXUT_TIMER>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z PROC ; std::allocator<DXUT_TIMER>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+20], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@ABU3@@Z ENDP ; std::allocator<DXUT_TIMER>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z PROC ; std::allocator<DXUT_TIMER>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@UDXUT_TIMER@@@std@@YAPAUDXUT_TIMER@@IPAU1@@Z ; std::_Allocate<DXUT_TIMER>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UDXUT_TIMER@@@std@@QAEPAUDXUT_TIMER@@I@Z ENDP ; std::allocator<DXUT_TIMER>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z PROC ; std::allocator<DXUT_TIMER>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UDXUT_TIMER@@@std@@QAEXPAUDXUT_TIMER@@I@Z ENDP ; std::allocator<DXUT_TIMER>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ PROC		; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UDXUT_TIMER@@@std@@QAE@XZ ENDP		; std::allocator<DXUT_TIMER>::allocator<DXUT_TIMER>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GDXUTState@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDXUTState@@QAEPAXI@Z PROC				; DXUTState::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DXUTState@@QAE@XZ			; DXUTState::~DXUTState
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDXUTState@@QAEPAXI@Z ENDP				; DXUTState::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowTitle@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowTitle@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetWindowTitle, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 447
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 3180				; 00000c6cH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetWindowT:
	DD	1
	DD	$LN5@GetWindowT
$LN5@GetWindowT:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowT
$LN4@GetWindowT:
	DB	108					; 0000006cH
	DB	0
?GetWindowTitle@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetWindowTitle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceStats@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetDeviceStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2668				; 00000a6cH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDeviceS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetDeviceS:
	DD	1
	DD	$LN5@GetDeviceS
$LN5@GetDeviceS:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDeviceS
$LN4@GetDeviceS:
	DB	108					; 0000006cH
	DB	0
?GetDeviceStats@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetDeviceStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFrameStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFrameStats@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetFrameStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 445
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2156				; 0000086cH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetFrameSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetFrameSt:
	DD	1
	DD	$LN5@GetFrameSt
$LN5@GetFrameSt:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetFrameSt
$LN4@GetFrameSt:
	DB	108					; 0000006cH
	DB	0
?GetFrameStats@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFPSStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFPSStats@DXUTState@@QAEPA_WXZ PROC			; DXUTState::GetFPSStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2028				; 000007ecH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetFPSStat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetFPSStat:
	DD	1
	DD	$LN5@GetFPSStat
$LN5@GetFPSStat:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetFPSStat
$LN4@GetFPSStat:
	DB	108					; 0000006cH
	DB	0
?GetFPSStats@DXUTState@@QAEPA_WXZ ENDP			; DXUTState::GetFPSStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStaticFrameStats@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetStaticFrameStats@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetStaticFrameStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1516				; 000005ecH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetStaticF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetStaticF:
	DD	1
	DD	$LN5@GetStaticF
$LN5@GetStaticF:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetStaticF
$LN4@GetStaticF:
	DB	108					; 0000006cH
	DB	0
?GetStaticFrameStats@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetStaticFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMouseButtons@DXUTState@@QAEPA_NXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMouseButtons@DXUTState@@QAEPA_NXZ PROC		; DXUTState::GetMouseButtons, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 442
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1504				; 000005e0H
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMouseBu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetMouseBu:
	DD	1
	DD	$LN5@GetMouseBu
$LN5@GetMouseBu:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMouseBu
$LN4@GetMouseBu:
	DB	108					; 0000006cH
	DB	0
?GetMouseButtons@DXUTState@@QAEPA_NXZ ENDP		; DXUTState::GetMouseButtons
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetLastKeys@DXUTState@@QAEPA_NXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetLastKeys@DXUTState@@QAEPA_NXZ PROC			; DXUTState::GetLastKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 441
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1248				; 000004e0H
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetLastKey
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetLastKey:
	DD	1
	DD	$LN5@GetLastKey
$LN5@GetLastKey:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetLastKey
$LN4@GetLastKey:
	DB	108					; 0000006cH
	DB	0
?GetLastKeys@DXUTState@@QAEPA_NXZ ENDP			; DXUTState::GetLastKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeys@DXUTState@@QAEPA_NXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeys@DXUTState@@QAEPA_NXZ PROC			; DXUTState::GetKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 440
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 992				; 000003e0H
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetKeys
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetKeys:
	DD	1
	DD	$LN5@GetKeys
$LN5@GetKeys:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetKeys
$LN4@GetKeys:
	DB	108					; 0000006cH
	DB	0
?GetKeys@DXUTState@@QAEPA_NXZ ENDP			; DXUTState::GetKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ PROC ; DXUTState::GetTimerList, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1512]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTimerLi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetTimerLi:
	DD	1
	DD	$LN5@GetTimerLi
$LN5@GetTimerLi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetTimerLi
$LN4@GetTimerLi:
	DB	108					; 0000006cH
	DB	0
?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ENDP ; DXUTState::GetTimerList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z PROC ; DXUTState::SetTimerList, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+1512], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetTimerLi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetTimerLi:
	DD	1
	DD	$LN5@SetTimerLi
$LN5@SetTimerLi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetTimerLi
$LN4@SetTimerLi:
	DB	108					; 0000006cH
	DB	0
?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z ENDP ; DXUTState::SetTimerList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11FrameRenderFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 437
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+988]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Fr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11Fr:
	DD	1
	DD	$LN5@GetD3D11Fr
$LN5@GetD3D11Fr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Fr
$LN4@GetD3D11Fr:
	DB	108					; 0000006cH
	DB	0
?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11FrameRenderFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11FrameRenderFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 437
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+988], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Fr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11Fr:
	DD	1
	DD	$LN5@SetD3D11Fr
$LN5@SetD3D11Fr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Fr
$LN4@SetD3D11Fr:
	DB	108					; 0000006cH
	DB	0
?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11FrameRenderFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 436
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+980]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11Sw:
	DD	1
	DD	$LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?GetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11SwapChainReleasingFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 436
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+980], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11Sw:
	DD	1
	DD	$LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11SwapChainResizedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+976]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11Sw:
	DD	1
	DD	$LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?GetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11SwapChainResizedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11SwapChainResizedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+976], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11Sw:
	DD	1
	DD	$LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11SwapChainResizedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+984]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11DeviceDestroyedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+984], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetD3D11DeviceCreatedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 433
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+972]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetD3D11DeviceCreatedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetD3D11DeviceCreatedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 433
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+972], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetD3D11DeviceCreatedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 432
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+968]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetIsD3D11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetIsD3D11:
	DD	1
	DD	$LN5@GetIsD3D11
$LN5@GetIsD3D11:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetIsD3D11
$LN4@GetIsD3D11:
	DB	108					; 0000006cH
	DB	0
?GetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetIsD3D11DeviceAcceptableFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 432
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+968], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetIsD3D11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetIsD3D11:
	DD	1
	DD	$LN5@SetIsD3D11
$LN5@SetIsD3D11:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetIsD3D11
$LN4@SetIsD3D11:
	DB	108					; 0000006cH
	DB	0
?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetWindowMsgFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+964]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetWindowM:
	DD	1
	DD	$LN5@GetWindowM
$LN5@GetWindowM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowM
$LN4@GetWindowM:
	DB	108					; 0000006cH
	DB	0
?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetWindowMsgFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetWindowMsgFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+964], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetWindowM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetWindowM:
	DD	1
	DD	$LN5@SetWindowM
$LN5@SetWindowM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetWindowM
$LN4@SetWindowM:
	DB	108					; 0000006cH
	DB	0
?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetWindowMsgFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetMouseFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+960]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMouseFu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetMouseFu:
	DD	1
	DD	$LN5@GetMouseFu
$LN5@GetMouseFu:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMouseFu
$LN4@GetMouseFu:
	DB	108					; 0000006cH
	DB	0
?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetMouseFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetMouseFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+960], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetMouseFu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetMouseFu:
	DD	1
	DD	$LN5@SetMouseFu
$LN5@SetMouseFu:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetMouseFu
$LN4@SetMouseFu:
	DB	108					; 0000006cH
	DB	0
?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetMouseFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetKeyboardFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 428
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+956]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetKeyboar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetKeyboar:
	DD	1
	DD	$LN5@GetKeyboar
$LN5@GetKeyboar:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetKeyboar
$LN4@GetKeyboar:
	DB	108					; 0000006cH
	DB	0
?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetKeyboardFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetKeyboardFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 428
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+956], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetKeyboar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetKeyboar:
	DD	1
	DD	$LN5@SetKeyboar
$LN5@SetKeyboar:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetKeyboar
$LN4@SetKeyboar:
	DB	108					; 0000006cH
	DB	0
?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetKeyboardFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ PROC	; DXUTState::GetFrameMoveFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 427
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+952]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetFrameMo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetFrameMo:
	DD	1
	DD	$LN5@GetFrameMo
$LN5@GetFrameMo:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetFrameMo
$LN4@GetFrameMo:
	DB	108					; 0000006cH
	DB	0
?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ ENDP	; DXUTState::GetFrameMoveFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z PROC	; DXUTState::SetFrameMoveFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 427
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+952], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFrameMo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetFrameMo:
	DD	1
	DD	$LN5@SetFrameMo
$LN5@SetFrameMo:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetFrameMo
$LN4@SetFrameMo:
	DB	108					; 0000006cH
	DB	0
?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z ENDP	; DXUTState::SetFrameMoveFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetDeviceRemovedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 426
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+948]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDeviceR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDeviceR:
	DD	1
	DD	$LN5@GetDeviceR
$LN5@GetDeviceR:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDeviceR
$LN4@GetDeviceR:
	DB	108					; 0000006cH
	DB	0
?GetDeviceRemovedFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetDeviceRemovedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetDeviceRemovedFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 426
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+948], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDeviceR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDeviceR:
	DD	1
	DD	$LN5@SetDeviceR
$LN5@SetDeviceR:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDeviceR
$LN4@SetDeviceR:
	DB	108					; 0000006cH
	DB	0
?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetDeviceRemovedFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ PROC ; DXUTState::GetModifyDeviceSettingsFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+944]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetModifyD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetModifyD:
	DD	1
	DD	$LN5@GetModifyD
$LN5@GetModifyD:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetModifyD
$LN4@GetModifyD:
	DB	108					; 0000006cH
	DB	0
?GetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEPAXXZ ENDP ; DXUTState::GetModifyDeviceSettingsFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z PROC ; DXUTState::SetModifyDeviceSettingsFuncUserContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+944], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetModifyD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetModifyD:
	DD	1
	DD	$LN5@SetModifyD
$LN5@SetModifyD:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetModifyD
$LN4@SetModifyD:
	DB	108					; 0000006cH
	DB	0
?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z ENDP ; DXUTState::SetModifyDeviceSettingsFuncUserContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ PROC ; DXUTState::GetD3D11FrameRenderFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 423
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+940]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Fr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11Fr:
	DD	1
	DD	$LN5@GetD3D11Fr
$LN5@GetD3D11Fr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Fr
$LN4@GetD3D11Fr:
	DB	108					; 0000006cH
	DB	0
?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ENDP ; DXUTState::GetD3D11FrameRenderFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z PROC ; DXUTState::SetD3D11FrameRenderFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 423
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+940], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Fr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11Fr:
	DD	1
	DD	$LN5@SetD3D11Fr
$LN5@SetD3D11Fr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Fr
$LN4@SetD3D11Fr:
	DB	108					; 0000006cH
	DB	0
?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z ENDP ; DXUTState::SetD3D11FrameRenderFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ PROC ; DXUTState::GetD3D11DeviceDestroyedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+936]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DeviceDestroyedFunc@DXUTState@@QAEP6GXPAX@ZXZ ENDP ; DXUTState::GetD3D11DeviceDestroyedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z PROC ; DXUTState::SetD3D11DeviceDestroyedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+936], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z ENDP ; DXUTState::SetD3D11DeviceDestroyedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ PROC ; DXUTState::GetD3D11SwapChainReleasingFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 421
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+932]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11Sw:
	DD	1
	DD	$LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?GetD3D11SwapChainReleasingFunc@DXUTState@@QAEP6GXPAX@ZXZ ENDP ; DXUTState::GetD3D11SwapChainReleasingFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z PROC ; DXUTState::SetD3D11SwapChainReleasingFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 421
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+932], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11Sw:
	DD	1
	DD	$LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z ENDP ; DXUTState::SetD3D11SwapChainReleasingFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ PROC ; DXUTState::GetD3D11SwapChainResizedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+928]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11Sw:
	DD	1
	DD	$LN5@GetD3D11Sw
$LN5@GetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Sw
$LN4@GetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?GetD3D11SwapChainResizedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ENDP ; DXUTState::GetD3D11SwapChainResizedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z PROC ; DXUTState::SetD3D11SwapChainResizedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+928], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Sw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11Sw:
	DD	1
	DD	$LN5@SetD3D11Sw
$LN5@SetD3D11Sw:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Sw
$LN4@SetD3D11Sw:
	DB	108					; 0000006cH
	DB	0
?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ENDP ; DXUTState::SetD3D11SwapChainResizedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ PROC ; DXUTState::GetD3D11DeviceCreatedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+924]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DeviceCreatedFunc@DXUTState@@QAEP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@ZXZ ENDP ; DXUTState::GetD3D11DeviceCreatedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z PROC ; DXUTState::SetD3D11DeviceCreatedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+924], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ENDP ; DXUTState::SetD3D11DeviceCreatedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ PROC ; DXUTState::GetIsD3D11DeviceAcceptableFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+920]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetIsD3D11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetIsD3D11:
	DD	1
	DD	$LN5@GetIsD3D11
$LN5@GetIsD3D11:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetIsD3D11
$LN4@GetIsD3D11:
	DB	108					; 0000006cH
	DB	0
?GetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@ZXZ ENDP ; DXUTState::GetIsD3D11DeviceAcceptableFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z PROC ; DXUTState::SetIsD3D11DeviceAcceptableFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+920], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetIsD3D11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetIsD3D11:
	DD	1
	DD	$LN5@SetIsD3D11
$LN5@SetIsD3D11:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetIsD3D11
$LN4@SetIsD3D11:
	DB	108					; 0000006cH
	DB	0
?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z ENDP ; DXUTState::SetIsD3D11DeviceAcceptableFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ PROC ; DXUTState::GetWindowMsgFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 416
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+916]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetWindowM:
	DD	1
	DD	$LN5@GetWindowM
$LN5@GetWindowM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowM
$LN4@GetWindowM:
	DB	108					; 0000006cH
	DB	0
?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ ENDP ; DXUTState::GetWindowMsgFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z PROC ; DXUTState::SetWindowMsgFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 416
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+916], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetWindowM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetWindowM:
	DD	1
	DD	$LN5@SetWindowM
$LN5@SetWindowM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetWindowM
$LN4@SetWindowM:
	DB	108					; 0000006cH
	DB	0
?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z ENDP ; DXUTState::SetWindowMsgFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ PROC	; DXUTState::GetMouseFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+912]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMouseFu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetMouseFu:
	DD	1
	DD	$LN5@GetMouseFu
$LN5@GetMouseFu:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMouseFu
$LN4@GetMouseFu:
	DB	108					; 0000006cH
	DB	0
?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ ENDP	; DXUTState::GetMouseFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z PROC	; DXUTState::SetMouseFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+912], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetMouseFu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetMouseFu:
	DD	1
	DD	$LN5@SetMouseFu
$LN5@SetMouseFu:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetMouseFu
$LN4@SetMouseFu:
	DB	108					; 0000006cH
	DB	0
?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z ENDP	; DXUTState::SetMouseFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ PROC	; DXUTState::GetKeyboardFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 414
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+908]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetKeyboar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetKeyboar:
	DD	1
	DD	$LN5@GetKeyboar
$LN5@GetKeyboar:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetKeyboar
$LN4@GetKeyboar:
	DB	108					; 0000006cH
	DB	0
?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ ENDP	; DXUTState::GetKeyboardFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z PROC	; DXUTState::SetKeyboardFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 414
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+908], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetKeyboar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetKeyboar:
	DD	1
	DD	$LN5@SetKeyboar
$LN5@SetKeyboar:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetKeyboar
$LN4@SetKeyboar:
	DB	108					; 0000006cH
	DB	0
?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z ENDP	; DXUTState::SetKeyboardFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ PROC	; DXUTState::GetFrameMoveFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+904]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetFrameMo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetFrameMo:
	DD	1
	DD	$LN5@GetFrameMo
$LN5@GetFrameMo:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetFrameMo
$LN4@GetFrameMo:
	DB	108					; 0000006cH
	DB	0
?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ ENDP	; DXUTState::GetFrameMoveFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z PROC	; DXUTState::SetFrameMoveFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+904], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFrameMo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetFrameMo:
	DD	1
	DD	$LN5@SetFrameMo
$LN5@SetFrameMo:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetFrameMo
$LN4@SetFrameMo:
	DB	108					; 0000006cH
	DB	0
?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z ENDP	; DXUTState::SetFrameMoveFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ PROC	; DXUTState::GetDeviceRemovedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 412
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+900]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDeviceR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDeviceR:
	DD	1
	DD	$LN5@GetDeviceR
$LN5@GetDeviceR:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDeviceR
$LN4@GetDeviceR:
	DB	108					; 0000006cH
	DB	0
?GetDeviceRemovedFunc@DXUTState@@QAEP6G_NPAX@ZXZ ENDP	; DXUTState::GetDeviceRemovedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z PROC	; DXUTState::SetDeviceRemovedFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 412
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+900], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDeviceR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDeviceR:
	DD	1
	DD	$LN5@SetDeviceR
$LN5@SetDeviceR:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDeviceR
$LN4@SetDeviceR:
	DB	108					; 0000006cH
	DB	0
?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z ENDP	; DXUTState::SetDeviceRemovedFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ PROC ; DXUTState::GetModifyDeviceSettingsFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+896]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetModifyD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetModifyD:
	DD	1
	DD	$LN5@GetModifyD
$LN5@GetModifyD:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetModifyD
$LN4@GetModifyD:
	DB	108					; 0000006cH
	DB	0
?GetModifyDeviceSettingsFunc@DXUTState@@QAEP6G_NPAUDXUTDeviceSettings@@PAX@ZXZ ENDP ; DXUTState::GetModifyDeviceSettingsFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z PROC ; DXUTState::SetModifyDeviceSettingsFunc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+896], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetModifyD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetModifyD:
	DD	1
	DD	$LN5@SetModifyD
$LN5@SetModifyD:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetModifyD
$LN4@SetModifyD:
	DB	108					; 0000006cH
	DB	0
?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z ENDP ; DXUTState::SetModifyDeviceSettingsFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ PROC	; DXUTState::GetIsInGammaCorrectMode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+894]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetIsInGam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetIsInGam:
	DD	1
	DD	$LN5@GetIsInGam
$LN5@GetIsInGam:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetIsInGam
$LN4@GetIsInGam:
	DB	108					; 0000006cH
	DB	0
?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetIsInGammaCorrectMode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+894], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetIsInGam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetIsInGam:
	DD	1
	DD	$LN5@SetIsInGam
$LN5@SetIsInGam:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetIsInGam
$LN4@SetIsInGam:
	DB	108					; 0000006cH
	DB	0
?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetReleasingSwapChain@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetReleasingSwapChain@DXUTState@@QAE_NXZ PROC		; DXUTState::GetReleasingSwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+893]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetReleasi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetReleasi:
	DD	1
	DD	$LN5@GetReleasi
$LN5@GetReleasi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetReleasi
$LN4@GetReleasi:
	DB	108					; 0000006cH
	DB	0
?GetReleasingSwapChain@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetReleasingSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetReleasingSwapChain@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetReleasingSwapChain@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetReleasingSwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+893], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetReleasi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetReleasi:
	DD	1
	DD	$LN5@SetReleasi
$LN5@SetReleasi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetReleasi
$LN4@SetReleasi:
	DB	108					; 0000006cH
	DB	0
?SetReleasingSwapChain@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetReleasingSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceVsync@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceVsync@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideForceVsync, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 407
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+888]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideForceVsync@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideForceVsync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceVsync@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideForceVsync@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideForceVsync, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 407
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+888], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideForceVsync@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideForceVsync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ PROC	; DXUTState::GetOverrideQuitAfterFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+884]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ ENDP	; DXUTState::GetOverrideQuitAfterFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z PROC	; DXUTState::SetOverrideQuitAfterFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+884], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideQuitAfterFrame@DXUTState@@QAEXH@Z ENDP	; DXUTState::SetOverrideQuitAfterFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ PROC	; DXUTState::GetOverrideConstantTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+880]
	movss	DWORD PTR $T1[ebp], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	fld	DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ ENDP	; DXUTState::GetOverrideConstantTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z PROC ; DXUTState::SetOverrideConstantTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [eax+880], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideConstantTimePerFrame@DXUTState@@QAEXM@Z ENDP ; DXUTState::SetOverrideConstantTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ PROC	; DXUTState::GetOverrideConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+879]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetOverrideConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetOverrideConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+879], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideConstantFrameTime@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetOverrideConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceWARP@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceWARP@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideForceWARP, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+878]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideForceWARP@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideForceWARP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceWARP@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideForceWARP@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideForceWARP, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+878], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideForceWARP@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideForceWARP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceREF@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceREF@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideForceREF, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 402
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+877]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideForceREF@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideForceREF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceREF@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideForceREF@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideForceREF, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 402
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+877], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideForceREF@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideForceREF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceHAL@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceHAL@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideForceHAL, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+876]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideForceHAL@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideForceHAL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceHAL@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideForceHAL@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideForceHAL, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+876], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideForceHAL@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideForceHAL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideHeight@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideHeight@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideHeight, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+872]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideHeight@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideHeight@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideHeight@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideHeight, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+872], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideHeight@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideWidth@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideWidth@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideWidth, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+868]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideWidth@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideWidth@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideWidth@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideWidth, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+868], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideWidth@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideStartY@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideStartY@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideStartY, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 398
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+864]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideStartY@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideStartY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideStartY@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideStartY@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideStartY, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 398
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+864], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideStartY@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideStartY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideStartX@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideStartX@DXUTState@@QAEHXZ PROC		; DXUTState::GetOverrideStartX, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+860]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideStartX@DXUTState@@QAEHXZ ENDP		; DXUTState::GetOverrideStartX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideStartX@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideStartX@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideStartX, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+860], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideStartX@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideStartX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideFullScreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideFullScreen@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+856]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideFullScreen@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideFullScreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideFullScreen@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+856], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideFullScreen@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideOutput@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideOutput@DXUTState@@QAEXH@Z PROC		; DXUTState::SetOverrideOutput, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 395
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+852], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideOutput@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetOverrideOutput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideWindowed@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideWindowed@DXUTState@@QAE_NXZ PROC		; DXUTState::GetOverrideWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+848]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideWindowed@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetOverrideWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideWindowed@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetOverrideWindowed@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetOverrideWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+848], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideWindowed@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetOverrideWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ PROC	; DXUTState::GetOverrideAdapterOrdinal, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+844]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideAdapterOrdinal@DXUTState@@QAEHXZ ENDP	; DXUTState::GetOverrideAdapterOrdinal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z PROC	; DXUTState::SetOverrideAdapterOrdinal, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+844], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideAdapterOrdinal@DXUTState@@QAEXH@Z ENDP	; DXUTState::SetOverrideAdapterOrdinal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetExitAfterScreenShot@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetExitAfterScreenShot@DXUTState@@QAE_NXZ PROC		; DXUTState::GetExitAfterScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+841]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetExitAft
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetExitAft:
	DD	1
	DD	$LN5@GetExitAft
$LN5@GetExitAft:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetExitAft
$LN4@GetExitAft:
	DB	108					; 0000006cH
	DB	0
?GetExitAfterScreenShot@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetExitAfterScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetExitAfterScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+841], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetExitAft
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetExitAft:
	DD	1
	DD	$LN5@SetExitAft
$LN5@SetExitAft:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetExitAft
$LN4@SetExitAft:
	DB	108					; 0000006cH
	DB	0
?SetExitAfterScreenShot@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetExitAfterScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetSaveScreenShot@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetSaveScreenShot@DXUTState@@QAE_NXZ PROC		; DXUTState::GetSaveScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 390
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+840]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetSaveScr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetSaveScr:
	DD	1
	DD	$LN5@GetSaveScr
$LN5@GetSaveScr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetSaveScr
$LN4@GetSaveScr:
	DB	108					; 0000006cH
	DB	0
?GetSaveScreenShot@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetSaveScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetSaveScreenShot@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetSaveScreenShot@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetSaveScreenShot, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 390
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+840], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetSaveScr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetSaveScr:
	DD	1
	DD	$LN5@SetSaveScr
$LN5@SetSaveScr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetSaveScr
$LN4@SetSaveScr:
	DB	108					; 0000006cH
	DB	0
?SetSaveScreenShot@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetSaveScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetScreenShotName@DXUTState@@QAEPA_WXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetScreenShotName@DXUTState@@QAEPA_WXZ PROC		; DXUTState::GetScreenShotName, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 328				; 00000148H
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetScreenS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetScreenS:
	DD	1
	DD	$LN5@GetScreenS
$LN5@GetScreenS:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetScreenS
$LN4@GetScreenS:
	DB	108					; 0000006cH
	DB	0
?GetScreenShotName@DXUTState@@QAEPA_WXZ ENDP		; DXUTState::GetScreenShotName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; DXUTState::GetOverrideForceFeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetOverrid:
	DD	1
	DD	$LN5@GetOverrid
$LN5@GetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetOverrid
$LN4@GetOverrid:
	DB	108					; 0000006cH
	DB	0
?GetOverrideForceFeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; DXUTState::GetOverrideForceFeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z PROC ; DXUTState::SetOverrideForceFeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+324], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOverrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetOverrid:
	DD	1
	DD	$LN5@SetOverrid
$LN5@SetOverrid:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetOverrid
$LN4@SetOverrid:
	DB	108					; 0000006cH
	DB	0
?SetOverrideForceFeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ENDP ; DXUTState::SetOverrideForceFeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetAppCalledWasKeyPressed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+892], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAppCall
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetAppCall:
	DD	1
	DD	$LN5@SetAppCall
$LN5@SetAppCall:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAppCall
$LN4@SetAppCall:
	DB	108					; 0000006cH
	DB	0
?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetAppCalledWasKeyPressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ PROC ; DXUTState::GetMessageWhenD3D11NotAvailable, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 385
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+320]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMessage
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetMessage:
	DD	1
	DD	$LN5@GetMessage
$LN5@GetMessage:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMessage
$LN4@GetMessage:
	DB	108					; 0000006cH
	DB	0
?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ ENDP ; DXUTState::GetMessageWhenD3D11NotAvailable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTimerLastID@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTimerLastID@DXUTState@@QAEIXZ PROC			; DXUTState::GetTimerLastID, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+316]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTimerLa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetTimerLa:
	DD	1
	DD	$LN5@GetTimerLa
$LN5@GetTimerLa:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetTimerLa
$LN4@GetTimerLa:
	DB	108					; 0000006cH
	DB	0
?GetTimerLastID@DXUTState@@QAEIXZ ENDP			; DXUTState::GetTimerLastID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimerLastID@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTimerLastID@DXUTState@@QAEXI@Z PROC			; DXUTState::SetTimerLastID, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+316], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetTimerLa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetTimerLa:
	DD	1
	DD	$LN5@SetTimerLa
$LN5@SetTimerLa:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetTimerLa
$LN4@SetTimerLa:
	DB	108					; 0000006cH
	DB	0
?SetTimerLastID@DXUTState@@QAEXI@Z ENDP			; DXUTState::SetTimerLastID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInSizeMove@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetInSizeMove@DXUTState@@QAE_NXZ PROC			; DXUTState::GetInSizeMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+315]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetInSizeM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetInSizeM:
	DD	1
	DD	$LN5@GetInSizeM
$LN5@GetInSizeM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetInSizeM
$LN4@GetInSizeM:
	DB	108					; 0000006cH
	DB	0
?GetInSizeMove@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetInSizeMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetInSizeMove@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetInSizeMove@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetInSizeMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+315], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetInSizeM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetInSizeM:
	DD	1
	DD	$LN5@SetInSizeM
$LN5@SetInSizeM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetInSizeM
$LN4@SetInSizeM:
	DB	108					; 0000006cH
	DB	0
?SetInSizeMove@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetInSizeMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAutomation@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAutomation@DXUTState@@QAE_NXZ PROC			; DXUTState::GetAutomation, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 382
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+314]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAutomat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetAutomat:
	DD	1
	DD	$LN5@GetAutomat
$LN5@GetAutomat:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetAutomat
$LN4@GetAutomat:
	DB	108					; 0000006cH
	DB	0
?GetAutomation@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetAutomation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAutomation@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAutomation@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetAutomation, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 382
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+314], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAutomat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetAutomat:
	DD	1
	DD	$LN5@SetAutomat
$LN5@SetAutomat:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAutomat
$LN4@SetAutomat:
	DB	108					; 0000006cH
	DB	0
?SetAutomation@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetAutomation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ PROC		; DXUTState::GetNotifyOnMouseMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 381
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+313]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetNotifyO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetNotifyO:
	DD	1
	DD	$LN5@GetNotifyO
$LN5@GetNotifyO:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetNotifyO
$LN4@GetNotifyO:
	DB	108					; 0000006cH
	DB	0
?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetNotifyOnMouseMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetNotifyOnMouseMove, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 381
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+313], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetNotifyO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetNotifyO:
	DD	1
	DD	$LN5@SetNotifyO
$LN5@SetNotifyO:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetNotifyO
$LN4@SetNotifyO:
	DB	108					; 0000006cH
	DB	0
?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetNotifyOnMouseMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPauseTimeCount@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetPauseTimeCount@DXUTState@@QAEHXZ PROC		; DXUTState::GetPauseTimeCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+308]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetPauseTi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetPauseTi:
	DD	1
	DD	$LN5@GetPauseTi
$LN5@GetPauseTi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetPauseTi
$LN4@GetPauseTi:
	DB	108					; 0000006cH
	DB	0
?GetPauseTimeCount@DXUTState@@QAEHXZ ENDP		; DXUTState::GetPauseTimeCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetPauseTimeCount@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetPauseTimeCount@DXUTState@@QAEXH@Z PROC		; DXUTState::SetPauseTimeCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+308], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetPauseTi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetPauseTi:
	DD	1
	DD	$LN5@SetPauseTi
$LN5@SetPauseTi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetPauseTi
$LN4@SetPauseTi:
	DB	108					; 0000006cH
	DB	0
?SetPauseTimeCount@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetPauseTimeCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPauseRenderingCount@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetPauseRenderingCount@DXUTState@@QAEHXZ PROC		; DXUTState::GetPauseRenderingCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 378
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetPauseRe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetPauseRe:
	DD	1
	DD	$LN5@GetPauseRe
$LN5@GetPauseRe:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetPauseRe
$LN4@GetPauseRe:
	DB	108					; 0000006cH
	DB	0
?GetPauseRenderingCount@DXUTState@@QAEHXZ ENDP		; DXUTState::GetPauseRenderingCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetPauseRenderingCount@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetPauseRenderingCount@DXUTState@@QAEXH@Z PROC		; DXUTState::SetPauseRenderingCount, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 378
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+304], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetPauseRe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetPauseRe:
	DD	1
	DD	$LN5@SetPauseRe
$LN5@SetPauseRe:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetPauseRe
$LN4@SetPauseRe:
	DB	108					; 0000006cH
	DB	0
?SetPauseRenderingCount@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetPauseRenderingCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimePaused@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetTimePaused@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetTimePaused, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 377
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+299], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetTimePau
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetTimePau:
	DD	1
	DD	$LN5@SetTimePau
$LN5@SetTimePau:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetTimePau
$LN4@SetTimePau:
	DB	108					; 0000006cH
	DB	0
?SetTimePaused@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetTimePaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetRenderingPaused@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetRenderingPaused@DXUTState@@QAE_NXZ PROC		; DXUTState::GetRenderingPaused, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 376
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+300]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetRenderi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetRenderi:
	DD	1
	DD	$LN5@GetRenderi
$LN5@GetRenderi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetRenderi
$LN4@GetRenderi:
	DB	108					; 0000006cH
	DB	0
?GetRenderingPaused@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetRenderingPaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetRenderingPaused@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetRenderingPaused@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetRenderingPaused, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 376
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+300], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetRenderi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetRenderi:
	DD	1
	DD	$LN5@SetRenderi
$LN5@SetRenderi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetRenderi
$LN4@SetRenderi:
	DB	108					; 0000006cH
	DB	0
?SetRenderingPaused@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetRenderingPaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetActive@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetActive@DXUTState@@QAE_NXZ PROC			; DXUTState::GetActive, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+298]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetActive
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetActive:
	DD	1
	DD	$LN5@GetActive
$LN5@GetActive:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetActive
$LN4@GetActive:
	DB	108					; 0000006cH
	DB	0
?GetActive@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetActive@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetActive@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetActive, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+298], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetActive
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetActive:
	DD	1
	DD	$LN5@SetActive
$LN5@SetActive:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetActive
$LN4@SetActive:
	DB	108					; 0000006cH
	DB	0
?SetActive@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceObjectsReset@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceObjectsReset@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDeviceObjectsReset, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+295]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDeviceO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDeviceO:
	DD	1
	DD	$LN5@GetDeviceO
$LN5@GetDeviceO:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDeviceO
$LN4@GetDeviceO:
	DB	108					; 0000006cH
	DB	0
?GetDeviceObjectsReset@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDeviceObjectsReset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDeviceObjectsReset, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+295], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDeviceO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDeviceO:
	DD	1
	DD	$LN5@SetDeviceO
$LN5@SetDeviceO:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDeviceO
$LN4@SetDeviceO:
	DB	108					; 0000006cH
	DB	0
?SetDeviceObjectsReset@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDeviceObjectsReset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ PROC	; DXUTState::GetDeviceObjectsCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+294]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDeviceO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDeviceO:
	DD	1
	DD	$LN5@GetDeviceO
$LN5@GetDeviceO:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDeviceO
$LN4@GetDeviceO:
	DB	108					; 0000006cH
	DB	0
?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetDeviceObjectsCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetDeviceObjectsCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+294], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDeviceO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDeviceO:
	DD	1
	DD	$LN5@SetDeviceO
$LN5@SetDeviceO:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDeviceO
$LN4@SetDeviceO:
	DB	108					; 0000006cH
	DB	0
?SetDeviceObjectsCreated@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetDeviceObjectsCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInsideMainloop@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetInsideMainloop@DXUTState@@QAE_NXZ PROC		; DXUTState::GetInsideMainloop, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+297]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetInsideM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetInsideM:
	DD	1
	DD	$LN5@GetInsideM
$LN5@GetInsideM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetInsideM
$LN4@GetInsideM:
	DB	108					; 0000006cH
	DB	0
?GetInsideMainloop@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetInsideMainloop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetInsideMainloop@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetInsideMainloop@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetInsideMainloop, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+297], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetInsideM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetInsideM:
	DD	1
	DD	$LN5@SetInsideM
$LN5@SetInsideM:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetInsideM
$LN4@SetInsideM:
	DB	108					; 0000006cH
	DB	0
?SetInsideMainloop@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetInsideMainloop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInsideDeviceCallback@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetInsideDeviceCallback@DXUTState@@QAE_NXZ PROC	; DXUTState::GetInsideDeviceCallback, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+296]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetInsideD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetInsideD:
	DD	1
	DD	$LN5@GetInsideD
$LN5@GetInsideD:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetInsideD
$LN4@GetInsideD:
	DB	108					; 0000006cH
	DB	0
?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetInsideDeviceCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetInsideDeviceCallback, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+296], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetInsideD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetInsideD:
	DD	1
	DD	$LN5@SetInsideD
$LN5@SetInsideD:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetInsideD
$LN4@SetInsideD:
	DB	108					; 0000006cH
	DB	0
?SetInsideDeviceCallback@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetInsideDeviceCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceCreateCalled@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceCreateCalled@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDeviceCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+293]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDeviceC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDeviceC:
	DD	1
	DD	$LN5@GetDeviceC
$LN5@GetDeviceC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDeviceC
$LN4@GetDeviceC:
	DB	108					; 0000006cH
	DB	0
?GetDeviceCreateCalled@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDeviceCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDeviceCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+293], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDeviceC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDeviceC:
	DD	1
	DD	$LN5@SetDeviceC
$LN5@SetDeviceC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDeviceC
$LN4@SetDeviceC:
	DB	108					; 0000006cH
	DB	0
?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDeviceCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowCreateCalled@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowCreateCalled@DXUTState@@QAE_NXZ PROC		; DXUTState::GetWindowCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+292]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetWindowC:
	DD	1
	DD	$LN5@GetWindowC
$LN5@GetWindowC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowC
$LN4@GetWindowC:
	DB	108					; 0000006cH
	DB	0
?GetWindowCreateCalled@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetWindowCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowCreateCalled@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetWindowCreateCalled@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetWindowCreateCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+292], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetWindowC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetWindowC:
	DD	1
	DD	$LN5@SetWindowC
$LN5@SetWindowC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetWindowC
$LN4@SetWindowC:
	DB	108					; 0000006cH
	DB	0
?SetWindowCreateCalled@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetWindowCreateCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXUTInitCalled@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXUTInitCalled@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDXUTInitCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+291]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDXUTIni
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDXUTIni:
	DD	1
	DD	$LN5@GetDXUTIni
$LN5@GetDXUTIni:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDXUTIni
$LN4@GetDXUTIni:
	DB	108					; 0000006cH
	DB	0
?GetDXUTInitCalled@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDXUTInitCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXUTInitCalled@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDXUTInitCalled@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDXUTInitCalled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+291], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDXUTIni
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDXUTIni:
	DD	1
	DD	$LN5@SetDXUTIni
$LN5@SetDXUTIni:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDXUTIni
$LN4@SetDXUTIni:
	DB	108					; 0000006cH
	DB	0
?SetDXUTInitCalled@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDXUTInitCalled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDeviceCreated@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDeviceCreated@DXUTState@@QAE_NXZ PROC		; DXUTState::GetDeviceCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+290]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDeviceC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDeviceC:
	DD	1
	DD	$LN5@GetDeviceC
$LN5@GetDeviceC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDeviceC
$LN4@GetDeviceC:
	DB	108					; 0000006cH
	DB	0
?GetDeviceCreated@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetDeviceCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDeviceCreated@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDeviceCreated@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetDeviceCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+290], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDeviceC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDeviceC:
	DD	1
	DD	$LN5@SetDeviceC
$LN5@SetDeviceC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDeviceC
$LN4@SetDeviceC:
	DB	108					; 0000006cH
	DB	0
?SetDeviceCreated@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetDeviceCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowCreated@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowCreated@DXUTState@@QAE_NXZ PROC		; DXUTState::GetWindowCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+289]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetWindowC:
	DD	1
	DD	$LN5@GetWindowC
$LN5@GetWindowC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowC
$LN4@GetWindowC:
	DB	108					; 0000006cH
	DB	0
?GetWindowCreated@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetWindowCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowCreated@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetWindowCreated@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetWindowCreated, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+289], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetWindowC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetWindowC:
	DD	1
	DD	$LN5@SetWindowC
$LN5@SetWindowC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetWindowC
$LN4@SetWindowC:
	DB	108					; 0000006cH
	DB	0
?SetWindowCreated@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetWindowCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXUTInited@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXUTInited@DXUTState@@QAE_NXZ PROC			; DXUTState::GetDXUTInited, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 365
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+288]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDXUTIni
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDXUTIni:
	DD	1
	DD	$LN5@GetDXUTIni
$LN5@GetDXUTIni:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDXUTIni
$LN4@GetDXUTIni:
	DB	108					; 0000006cH
	DB	0
?GetDXUTInited@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetDXUTInited
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXUTInited@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDXUTInited@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetDXUTInited, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 365
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+288], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDXUTIni
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetDXUTIni:
	DD	1
	DD	$LN5@SetDXUTIni
$LN5@SetDXUTIni:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDXUTIni
$LN4@SetDXUTIni:
	DB	108					; 0000006cH
	DB	0
?SetDXUTInited@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetDXUTInited
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetExitCode@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetExitCode@DXUTState@@QAEHXZ PROC			; DXUTState::GetExitCode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetExitCod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetExitCod:
	DD	1
	DD	$LN5@GetExitCod
$LN5@GetExitCod:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetExitCod
$LN4@GetExitCod:
	DB	108					; 0000006cH
	DB	0
?GetExitCode@DXUTState@@QAEHXZ ENDP			; DXUTState::GetExitCode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetExitCode@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetExitCode@DXUTState@@QAEXH@Z PROC			; DXUTState::SetExitCode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+284], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetExitCod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetExitCod:
	DD	1
	DD	$LN5@SetExitCod
$LN5@SetExitCod:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetExitCod
$LN4@SetExitCod:
	DB	108					; 0000006cH
	DB	0
?SetExitCode@DXUTState@@QAEXH@Z ENDP			; DXUTState::SetExitCode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z PROC ; DXUTState::SetWindowCreatedWithDefaultPositions, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+282], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetWindowC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetWindowC:
	DD	1
	DD	$LN5@SetWindowC
$LN5@SetWindowC:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetWindowC
$LN4@SetWindowC:
	DB	108					; 0000006cH
	DB	0
?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ENDP ; DXUTState::SetWindowCreatedWithDefaultPositions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAutoChangeAdapter@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAutoChangeAdapter@DXUTState@@QAE_NXZ PROC		; DXUTState::GetAutoChangeAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 361
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+281]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAutoCha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetAutoCha:
	DD	1
	DD	$LN5@GetAutoCha
$LN5@GetAutoCha:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetAutoCha
$LN4@GetAutoCha:
	DB	108					; 0000006cH
	DB	0
?GetAutoChangeAdapter@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetAutoChangeAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetAutoChangeAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 361
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+281], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAutoCha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetAutoCha:
	DD	1
	DD	$LN5@SetAutoCha
$LN5@SetAutoCha:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAutoCha
$LN4@SetAutoCha:
	DB	108					; 0000006cH
	DB	0
?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetAutoChangeAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTimePerFrame@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTimePerFrame@DXUTState@@QAEMXZ PROC			; DXUTState::GetTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+276]
	movss	DWORD PTR $T1[ebp], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	fld	DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTimePer
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetTimePer:
	DD	1
	DD	$LN5@GetTimePer
$LN5@GetTimePer:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetTimePer
$LN4@GetTimePer:
	DB	108					; 0000006cH
	DB	0
?GetTimePerFrame@DXUTState@@QAEMXZ ENDP			; DXUTState::GetTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimePerFrame@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetTimePerFrame@DXUTState@@QAEXM@Z PROC		; DXUTState::SetTimePerFrame, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [eax+276], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetTimePer
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetTimePer:
	DD	1
	DD	$LN5@SetTimePer
$LN5@SetTimePer:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetTimePer
$LN4@SetTimePer:
	DB	108					; 0000006cH
	DB	0
?SetTimePerFrame@DXUTState@@QAEXM@Z ENDP		; DXUTState::SetTimePerFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetConstantFrameTime@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetConstantFrameTime@DXUTState@@QAE_NXZ PROC		; DXUTState::GetConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+275]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetConstan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetConstan:
	DD	1
	DD	$LN5@GetConstan
$LN5@GetConstan:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetConstan
$LN4@GetConstan:
	DB	108					; 0000006cH
	DB	0
?GetConstantFrameTime@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetConstantFrameTime@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetConstantFrameTime@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetConstantFrameTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+275], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetConstan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetConstan:
	DD	1
	DD	$LN5@SetConstan
$LN5@SetConstan:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetConstan
$LN4@SetConstan:
	DB	108					; 0000006cH
	DB	0
?SetConstantFrameTime@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ PROC	; DXUTState::GetShowCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+274]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetShowCur
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetShowCur:
	DD	1
	DD	$LN5@GetShowCur
$LN5@GetShowCur:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetShowCur
$LN4@GetShowCur:
	DB	108					; 0000006cH
	DB	0
?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetShowCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetShowCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+274], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetShowCur
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetShowCur:
	DD	1
	DD	$LN5@SetShowCur
$LN5@SetShowCur:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetShowCur
$LN4@SetShowCur:
	DB	108					; 0000006cH
	DB	0
?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetShowCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ PROC	; DXUTState::GetClipCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 356
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+273]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetClipCur
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetClipCur:
	DD	1
	DD	$LN5@GetClipCur
$LN5@GetClipCur:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetClipCur
$LN4@GetClipCur:
	DB	108					; 0000006cH
	DB	0
?GetClipCursorWhenFullScreen@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetClipCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetClipCursorWhenFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 356
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+273], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetClipCur
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetClipCur:
	DD	1
	DD	$LN5@SetClipCur
$LN5@SetClipCur:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetClipCur
$LN4@SetClipCur:
	DB	108					; 0000006cH
	DB	0
?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetClipCursorWhenFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNoStats@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetNoStats@DXUTState@@QAE_NXZ PROC			; DXUTState::GetNoStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+272]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetNoStats
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetNoStats:
	DD	1
	DD	$LN5@GetNoStats
$LN5@GetNoStats:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetNoStats
$LN4@GetNoStats:
	DB	108					; 0000006cH
	DB	0
?GetNoStats@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetNoStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetNoStats@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetNoStats@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetNoStats, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+272], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetNoStats
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetNoStats:
	DD	1
	DD	$LN5@SetNoStats
$LN5@SetNoStats:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetNoStats
$LN4@SetNoStats:
	DB	108					; 0000006cH
	DB	0
?SetNoStats@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetNoStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ PROC		; DXUTState::GetShowMsgBoxOnError, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+271]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetShowMsg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetShowMsg:
	DD	1
	DD	$LN5@GetShowMsg
$LN5@GetShowMsg:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetShowMsg
$LN4@GetShowMsg:
	DB	108					; 0000006cH
	DB	0
?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetShowMsgBoxOnError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetShowMsgBoxOnError, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+271], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetShowMsg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetShowMsg:
	DD	1
	DD	$LN5@SetShowMsg
$LN5@SetShowMsg:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetShowMsg
$LN4@SetShowMsg:
	DB	108					; 0000006cH
	DB	0
?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetShowMsgBoxOnError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHandlePause@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHandlePause@DXUTState@@QAE_NXZ PROC			; DXUTState::GetHandlePause, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+270]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetHandleP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetHandleP:
	DD	1
	DD	$LN5@GetHandleP
$LN5@GetHandleP:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetHandleP
$LN4@GetHandleP:
	DB	108					; 0000006cH
	DB	0
?GetHandlePause@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetHandlePause
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHandlePause@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetHandlePause@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetHandlePause, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+270], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetHandleP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetHandleP:
	DD	1
	DD	$LN5@SetHandleP
$LN5@SetHandleP:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetHandleP
$LN4@SetHandleP:
	DB	108					; 0000006cH
	DB	0
?SetHandlePause@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetHandlePause
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHandleAltEnter@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetHandleAltEnter@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetHandleAltEnter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+269], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetHandleA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetHandleA:
	DD	1
	DD	$LN5@SetHandleA
$LN5@SetHandleA:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetHandleA
$LN4@SetHandleA:
	DB	108					; 0000006cH
	DB	0
?SetHandleAltEnter@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetHandleAltEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHandleEscape@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHandleEscape@DXUTState@@QAE_NXZ PROC		; DXUTState::GetHandleEscape, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+268]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetHandleE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetHandleE:
	DD	1
	DD	$LN5@GetHandleE
$LN5@GetHandleE:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetHandleE
$LN4@GetHandleE:
	DB	108					; 0000006cH
	DB	0
?GetHandleEscape@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetHandleEscape
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHandleEscape@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetHandleEscape@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetHandleEscape, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+268], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetHandleE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetHandleE:
	DD	1
	DD	$LN5@SetHandleE
$LN5@SetHandleE:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetHandleE
$LN4@SetHandleE:
	DB	108					; 0000006cH
	DB	0
?SetHandleEscape@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetHandleEscape
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ PROC ; DXUTState::GetStartupFilterKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 244				; 000000f4H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetStartup
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@GetStartup:
	DD	1
	DD	$LN5@GetStartup
$LN5@GetStartup:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetStartup
$LN4@GetStartup:
	DB	108					; 0000006cH
	DB	0
?GetStartupFilterKeys@DXUTState@@QAE?AUtagFILTERKEYS@@XZ ENDP ; DXUTState::GetStartupFilterKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 24
?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z PROC ; DXUTState::SetStartupFilterKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 244				; 000000f4H
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _t$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _t$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _t$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _t$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _t$[ebp+20]
	mov	DWORD PTR [eax+20], edx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetStartup
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN6@SetStartup:
	DD	1
	DD	$LN5@SetStartup
$LN5@SetStartup:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetStartup
$LN4@SetStartup:
	DB	108					; 0000006cH
	DB	0
?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z ENDP ; DXUTState::SetStartupFilterKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ PROC ; DXUTState::GetStartupToggleKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 348
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	mov	edx, DWORD PTR [eax+240]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetStartup
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@GetStartup:
	DD	1
	DD	$LN5@GetStartup
$LN5@GetStartup:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetStartup
$LN4@GetStartup:
	DB	108					; 0000006cH
	DB	0
?GetStartupToggleKeys@DXUTState@@QAE?AUtagTOGGLEKEYS@@XZ ENDP ; DXUTState::GetStartupToggleKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z PROC ; DXUTState::SetStartupToggleKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 348
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+236], ecx
	mov	edx, DWORD PTR _t$[ebp+4]
	mov	DWORD PTR [eax+240], edx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetStartup
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@SetStartup:
	DD	1
	DD	$LN5@SetStartup
$LN5@SetStartup:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetStartup
$LN4@SetStartup:
	DB	108					; 0000006cH
	DB	0
?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z ENDP ; DXUTState::SetStartupToggleKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ PROC ; DXUTState::GetStartupStickyKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 347
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	mov	edx, DWORD PTR [eax+232]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetStartup
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@GetStartup:
	DD	1
	DD	$LN5@GetStartup
$LN5@GetStartup:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetStartup
$LN4@GetStartup:
	DB	108					; 0000006cH
	DB	0
?GetStartupStickyKeys@DXUTState@@QAE?AUtagSTICKYKEYS@@XZ ENDP ; DXUTState::GetStartupStickyKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z PROC ; DXUTState::SetStartupStickyKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 347
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+228], ecx
	mov	edx, DWORD PTR _t$[ebp+4]
	mov	DWORD PTR [eax+232], edx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetStartup
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@SetStartup:
	DD	1
	DD	$LN5@SetStartup
$LN5@SetStartup:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetStartup
$LN4@SetStartup:
	DB	108					; 0000006cH
	DB	0
?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z ENDP ; DXUTState::SetStartupStickyKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCallDefWindowProc@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetCallDefWindowProc@DXUTState@@QAE_NXZ PROC		; DXUTState::GetCallDefWindowProc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+227]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetCallDef
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetCallDef:
	DD	1
	DD	$LN5@GetCallDef
$LN5@GetCallDef:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetCallDef
$LN4@GetCallDef:
	DB	108					; 0000006cH
	DB	0
?GetCallDefWindowProc@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetCallDefWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCallDefWindowProc@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetCallDefWindowProc@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetCallDefWindowProc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+227], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetCallDef
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetCallDef:
	DD	1
	DD	$LN5@SetCallDef
$LN5@SetCallDef:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetCallDef
$LN4@SetCallDef:
	DB	108					; 0000006cH
	DB	0
?SetCallDefWindowProc@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetCallDefWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAllowShortcutKeys@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAllowShortcutKeys@DXUTState@@QAE_NXZ PROC		; DXUTState::GetAllowShortcutKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+226]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAllowSh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetAllowSh:
	DD	1
	DD	$LN5@GetAllowSh
$LN5@GetAllowSh:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetAllowSh
$LN4@GetAllowSh:
	DB	108					; 0000006cH
	DB	0
?GetAllowShortcutKeys@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetAllowShortcutKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetAllowShortcutKeys, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+226], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAllowSh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetAllowSh:
	DD	1
	DD	$LN5@SetAllowSh
$LN5@SetAllowSh:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAllowSh
$LN4@SetAllowSh:
	DB	108					; 0000006cH
	DB	0
?SetAllowShortcutKeys@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetAllowShortcutKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ PROC ; DXUTState::GetAllowShortcutKeysWhenWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 344
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+225]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAllowSh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetAllowSh:
	DD	1
	DD	$LN5@GetAllowSh
$LN5@GetAllowSh:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetAllowSh
$LN4@GetAllowSh:
	DB	108					; 0000006cH
	DB	0
?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ENDP ; DXUTState::GetAllowShortcutKeysWhenWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z PROC ; DXUTState::SetAllowShortcutKeysWhenWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 344
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+225], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAllowSh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetAllowSh:
	DD	1
	DD	$LN5@SetAllowSh
$LN5@SetAllowSh:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAllowSh
$LN4@SetAllowSh:
	DB	108					; 0000006cH
	DB	0
?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z ENDP ; DXUTState::SetAllowShortcutKeysWhenWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ PROC ; DXUTState::GetAllowShortcutKeysWhenFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+224]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAllowSh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetAllowSh:
	DD	1
	DD	$LN5@GetAllowSh
$LN5@GetAllowSh:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetAllowSh
$LN4@GetAllowSh:
	DB	108					; 0000006cH
	DB	0
?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ENDP ; DXUTState::GetAllowShortcutKeysWhenFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z PROC ; DXUTState::SetAllowShortcutKeysWhenFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+224], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAllowSh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetAllowSh:
	DD	1
	DD	$LN5@SetAllowSh
$LN5@SetAllowSh:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAllowSh
$LN4@SetAllowSh:
	DB	108					; 0000006cH
	DB	0
?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z ENDP ; DXUTState::SetAllowShortcutKeysWhenFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ PROC	; DXUTState::GetKeyboardHook, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetKeyboar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetKeyboar:
	DD	1
	DD	$LN5@GetKeyboar
$LN5@GetKeyboar:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetKeyboar
$LN4@GetKeyboar:
	DB	108					; 0000006cH
	DB	0
?GetKeyboardHook@DXUTState@@QAEPAUHHOOK__@@XZ ENDP	; DXUTState::GetKeyboardHook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z PROC	; DXUTState::SetKeyboardHook, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+220], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetKeyboar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetKeyboar:
	DD	1
	DD	$LN5@SetKeyboar
$LN5@SetKeyboar:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetKeyboar
$LN4@SetKeyboar:
	DB	108					; 0000006cH
	DB	0
?SetKeyboardHook@DXUTState@@QAEXPAUHHOOK__@@@Z ENDP	; DXUTState::SetKeyboardHook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCurrentFrameNumber@DXUTState@@QAEHXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetCurrentFrameNumber@DXUTState@@QAEHXZ PROC		; DXUTState::GetCurrentFrameNumber, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+216]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetCurrent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetCurrent:
	DD	1
	DD	$LN5@GetCurrent
$LN5@GetCurrent:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetCurrent
$LN4@GetCurrent:
	DB	108					; 0000006cH
	DB	0
?GetCurrentFrameNumber@DXUTState@@QAEHXZ ENDP		; DXUTState::GetCurrentFrameNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCurrentFrameNumber@DXUTState@@QAEXH@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetCurrentFrameNumber@DXUTState@@QAEXH@Z PROC		; DXUTState::SetCurrentFrameNumber, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+216], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetCurrent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetCurrent:
	DD	1
	DD	$LN5@SetCurrent
$LN5@SetCurrent:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetCurrent
$LN4@SetCurrent:
	DB	108					; 0000006cH
	DB	0
?SetCurrentFrameNumber@DXUTState@@QAEXH@Z ENDP		; DXUTState::SetCurrentFrameNumber
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFPS@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFPS@DXUTState@@QAEMXZ PROC				; DXUTState::GetFPS, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 340
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+212]
	movss	DWORD PTR $T1[ebp], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	fld	DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetFPS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetFPS:
	DD	1
	DD	$LN5@GetFPS
$LN5@GetFPS:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetFPS
$LN4@GetFPS:
	DB	108					; 0000006cH
	DB	0
?GetFPS@DXUTState@@QAEMXZ ENDP				; DXUTState::GetFPS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFPS@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFPS@DXUTState@@QAEXM@Z PROC				; DXUTState::SetFPS, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 340
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [eax+212], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFPS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetFPS:
	DD	1
	DD	$LN5@SetFPS
$LN5@SetFPS:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetFPS
$LN4@SetFPS:
	DB	108					; 0000006cH
	DB	0
?SetFPS@DXUTState@@QAEXM@Z ENDP				; DXUTState::SetFPS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ PROC	; DXUTState::GetLastStatsUpdateFrames, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 339
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetLastSta
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetLastSta:
	DD	1
	DD	$LN5@GetLastSta
$LN5@GetLastSta:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetLastSta
$LN4@GetLastSta:
	DB	108					; 0000006cH
	DB	0
?GetLastStatsUpdateFrames@DXUTState@@QAEKXZ ENDP	; DXUTState::GetLastStatsUpdateFrames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z PROC	; DXUTState::SetLastStatsUpdateFrames, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 339
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+208], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetLastSta
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetLastSta:
	DD	1
	DD	$LN5@SetLastSta
$LN5@SetLastSta:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetLastSta
$LN4@SetLastSta:
	DB	108					; 0000006cH
	DB	0
?SetLastStatsUpdateFrames@DXUTState@@QAEXK@Z ENDP	; DXUTState::SetLastStatsUpdateFrames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetLastStatsUpdateTime@DXUTState@@QAENXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetLastStatsUpdateTime@DXUTState@@QAENXZ PROC		; DXUTState::GetLastStatsUpdateTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR [eax+200]
	movsd	QWORD PTR $T1[ebp], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	fld	QWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetLastSta
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetLastSta:
	DD	1
	DD	$LN5@GetLastSta
$LN5@GetLastSta:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetLastSta
$LN4@GetLastSta:
	DB	108					; 0000006cH
	DB	0
?GetLastStatsUpdateTime@DXUTState@@QAENXZ ENDP		; DXUTState::GetLastStatsUpdateTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z PROC		; DXUTState::SetLastStatsUpdateTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR _t$[ebp]
	movsd	QWORD PTR [eax+200], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetLastSta
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@SetLastSta:
	DD	1
	DD	$LN5@SetLastSta
$LN5@SetLastSta:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetLastSta
$LN4@SetLastSta:
	DB	108					; 0000006cH
	DB	0
?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z ENDP		; DXUTState::SetLastStatsUpdateTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ PROC	; DXUTState::GetHInstance, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetHInstan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetHInstan:
	DD	1
	DD	$LN5@GetHInstan
$LN5@GetHInstan:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetHInstan
$LN4@GetHInstan:
	DB	108					; 0000006cH
	DB	0
?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ ENDP	; DXUTState::GetHInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z PROC	; DXUTState::SetHInstance, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+196], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetHInstan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetHInstan:
	DD	1
	DD	$LN5@SetHInstan
$LN5@SetHInstan:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetHInstan
$LN4@SetHInstan:
	DB	108					; 0000006cH
	DB	0
?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z ENDP	; DXUTState::SetHInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetElapsedTime@DXUTState@@QAEMXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetElapsedTime@DXUTState@@QAEMXZ PROC			; DXUTState::GetElapsedTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+192]
	movss	DWORD PTR $T1[ebp], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	fld	DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetElapsed
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetElapsed:
	DD	1
	DD	$LN5@GetElapsed
$LN5@GetElapsed:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetElapsed
$LN4@GetElapsed:
	DB	108					; 0000006cH
	DB	0
?GetElapsedTime@DXUTState@@QAEMXZ ENDP			; DXUTState::GetElapsedTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetElapsedTime@DXUTState@@QAEXM@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetElapsedTime@DXUTState@@QAEXM@Z PROC			; DXUTState::SetElapsedTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [eax+192], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetElapsed
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetElapsed:
	DD	1
	DD	$LN5@SetElapsed
$LN5@SetElapsed:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetElapsed
$LN4@SetElapsed:
	DB	108					; 0000006cH
	DB	0
?SetElapsedTime@DXUTState@@QAEXM@Z ENDP			; DXUTState::SetElapsedTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAbsoluteTime@DXUTState@@QAENXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAbsoluteTime@DXUTState@@QAENXZ PROC			; DXUTState::GetAbsoluteTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR [eax+184]
	movsd	QWORD PTR $T1[ebp], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	fld	QWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAbsolut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetAbsolut:
	DD	1
	DD	$LN5@GetAbsolut
$LN5@GetAbsolut:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetAbsolut
$LN4@GetAbsolut:
	DB	108					; 0000006cH
	DB	0
?GetAbsoluteTime@DXUTState@@QAENXZ ENDP			; DXUTState::GetAbsoluteTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAbsoluteTime@DXUTState@@QAEXN@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetAbsoluteTime@DXUTState@@QAEXN@Z PROC		; DXUTState::SetAbsoluteTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR _t$[ebp]
	movsd	QWORD PTR [eax+184], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAbsolut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@SetAbsolut:
	DD	1
	DD	$LN5@SetAbsolut
$LN5@SetAbsolut:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAbsolut
$LN4@SetAbsolut:
	DB	108					; 0000006cH
	DB	0
?SetAbsoluteTime@DXUTState@@QAEXN@Z ENDP		; DXUTState::SetAbsoluteTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTime@DXUTState@@QAENXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTime@DXUTState@@QAENXZ PROC				; DXUTState::GetTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 333
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR [eax+176]
	movsd	QWORD PTR $T1[ebp], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	fld	QWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTime
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetTime:
	DD	1
	DD	$LN5@GetTime
$LN5@GetTime:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetTime
$LN4@GetTime:
	DB	108					; 0000006cH
	DB	0
?GetTime@DXUTState@@QAENXZ ENDP				; DXUTState::GetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTime@DXUTState@@QAEXN@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 8
?SetTime@DXUTState@@QAEXN@Z PROC			; DXUTState::SetTime, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 333
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR _t$[ebp]
	movsd	QWORD PTR [eax+176], xmm0
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetTime
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@SetTime:
	DD	1
	DD	$LN5@SetTime
$LN5@SetTime:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetTime
$LN4@SetTime:
	DB	108					; 0000006cH
	DB	0
?SetTime@DXUTState@@QAEXN@Z ENDP			; DXUTState::SetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIgnoreSizeChange@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetIgnoreSizeChange@DXUTState@@QAE_NXZ PROC		; DXUTState::GetIgnoreSizeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 331
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+172]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetIgnoreS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetIgnoreS:
	DD	1
	DD	$LN5@GetIgnoreS
$LN5@GetIgnoreS:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetIgnoreS
$LN4@GetIgnoreS:
	DB	108					; 0000006cH
	DB	0
?GetIgnoreSizeChange@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetIgnoreSizeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetIgnoreSizeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 331
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+172], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetIgnoreS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetIgnoreS:
	DD	1
	DD	$LN5@SetIgnoreS
$LN5@SetIgnoreS:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetIgnoreS
$LN4@SetIgnoreS:
	DB	108					; 0000006cH
	DB	0
?SetIgnoreSizeChange@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetIgnoreSizeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ PROC	; DXUTState::GetMinimizedWhileFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+171]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMinimiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetMinimiz:
	DD	1
	DD	$LN5@GetMinimiz
$LN5@GetMinimiz:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMinimiz
$LN4@GetMinimiz:
	DB	108					; 0000006cH
	DB	0
?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetMinimizedWhileFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetMinimizedWhileFullscreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+171], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetMinimiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetMinimiz:
	DD	1
	DD	$LN5@SetMinimiz
$LN5@SetMinimiz:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetMinimiz
$LN4@SetMinimiz:
	DB	108					; 0000006cH
	DB	0
?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetMinimizedWhileFullscreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMaximized@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMaximized@DXUTState@@QAE_NXZ PROC			; DXUTState::GetMaximized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+170]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMaximiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetMaximiz:
	DD	1
	DD	$LN5@GetMaximiz
$LN5@GetMaximiz:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMaximiz
$LN4@GetMaximiz:
	DB	108					; 0000006cH
	DB	0
?GetMaximized@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetMaximized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMaximized@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetMaximized@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetMaximized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+170], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetMaximiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetMaximiz:
	DD	1
	DD	$LN5@SetMaximiz
$LN5@SetMaximiz:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetMaximiz
$LN4@SetMaximiz:
	DB	108					; 0000006cH
	DB	0
?SetMaximized@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetMaximized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMinimized@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMinimized@DXUTState@@QAE_NXZ PROC			; DXUTState::GetMinimized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 328
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+169]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMinimiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetMinimiz:
	DD	1
	DD	$LN5@GetMinimiz
$LN5@GetMinimiz:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMinimiz
$LN4@GetMinimiz:
	DB	108					; 0000006cH
	DB	0
?GetMinimized@DXUTState@@QAE_NXZ ENDP			; DXUTState::GetMinimized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMinimized@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetMinimized@DXUTState@@QAEX_N@Z PROC			; DXUTState::SetMinimized, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 328
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+169], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetMinimiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetMinimiz:
	DD	1
	DD	$LN5@SetMinimiz
$LN5@SetMinimiz:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetMinimiz
$LN4@SetMinimiz:
	DB	108					; 0000006cH
	DB	0
?SetMinimized@DXUTState@@QAEX_N@Z ENDP			; DXUTState::SetMinimized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ PROC	; DXUTState::GetTopmostWhileWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 327
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+168]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTopmost
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetTopmost:
	DD	1
	DD	$LN5@GetTopmost
$LN5@GetTopmost:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetTopmost
$LN4@GetTopmost:
	DB	108					; 0000006cH
	DB	0
?GetTopmostWhileWindowed@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetTopmostWhileWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ PROC	; DXUTState::GetWindowedStyleAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetWindowe:
	DD	1
	DD	$LN5@GetWindowe
$LN5@GetWindowe:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowe
$LN4@GetWindowe:
	DB	108					; 0000006cH
	DB	0
?GetWindowedStyleAtModeChange@DXUTState@@QAEKXZ ENDP	; DXUTState::GetWindowedStyleAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ PROC ; DXUTState::GetWindowedPlacement, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 325
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetWindowe:
	DD	1
	DD	$LN5@GetWindowe
$LN5@GetWindowe:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowe
$LN4@GetWindowe:
	DB	108					; 0000006cH
	DB	0
?GetWindowedPlacement@DXUTState@@QAEPAUtagWINDOWPLACEMENT@@XZ ENDP ; DXUTState::GetWindowedPlacement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetWindowBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetWindowB:
	DD	1
	DD	$LN5@GetWindowB
$LN5@GetWindowB:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowB
$LN4@GetWindowB:
	DB	108					; 0000006cH
	DB	0
?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetWindowBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetWindowBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+116], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetWindowB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetWindowB:
	DD	1
	DD	$LN5@SetWindowB
$LN5@SetWindowB:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetWindowB
$LN4@SetWindowB:
	DB	108					; 0000006cH
	DB	0
?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetWindowBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetWindowBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetWindowB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetWindowB:
	DD	1
	DD	$LN5@GetWindowB
$LN5@GetWindowB:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetWindowB
$LN4@GetWindowB:
	DB	108					; 0000006cH
	DB	0
?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetWindowBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetWindowBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+112], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetWindowB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetWindowB:
	DD	1
	DD	$LN5@SetWindowB
$LN5@SetWindowB:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetWindowB
$LN4@SetWindowB:
	DB	108					; 0000006cH
	DB	0
?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetWindowBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetFullScreenBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetFullScr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetFullScr:
	DD	1
	DD	$LN5@GetFullScr
$LN5@GetFullScr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetFullScr
$LN4@GetFullScr:
	DB	108					; 0000006cH
	DB	0
?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetFullScreenBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetFullScreenBackBufferHeightAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+108], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFullScr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetFullScr:
	DD	1
	DD	$LN5@SetFullScr
$LN5@SetFullScr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetFullScr
$LN4@SetFullScr:
	DB	108					; 0000006cH
	DB	0
?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ PROC ; DXUTState::GetFullScreenBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetFullScr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetFullScr:
	DD	1
	DD	$LN5@GetFullScr
$LN5@GetFullScr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetFullScr
$LN4@GetFullScr:
	DB	108					; 0000006cH
	DB	0
?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ENDP ; DXUTState::GetFullScreenBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z PROC ; DXUTState::SetFullScreenBackBufferWidthAtModeChange, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+104], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFullScr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetFullScr:
	DD	1
	DD	$LN5@SetFullScr
$LN5@SetFullScr:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetFullScr
$LN4@SetFullScr:
	DB	108					; 0000006cH
	DB	0
?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ENDP ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ PROC		; DXUTState::GetMenu, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetMenu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetMenu:
	DD	1
	DD	$LN5@GetMenu
$LN5@GetMenu:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetMenu
$LN4@GetMenu:
	DB	108					; 0000006cH
	DB	0
?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ ENDP		; DXUTState::GetMenu
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ PROC	; DXUTState::GetAdapterMonitor, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAdapter
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetAdapter:
	DD	1
	DD	$LN5@GetAdapter
$LN5@GetAdapter:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetAdapter
$LN4@GetAdapter:
	DB	108					; 0000006cH
	DB	0
?GetAdapterMonitor@DXUTState@@QAEPAUHMONITOR__@@XZ ENDP	; DXUTState::GetAdapterMonitor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z PROC ; DXUTState::SetAdapterMonitor, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+96], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetAdapter
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetAdapter:
	DD	1
	DD	$LN5@SetAdapter
$LN5@SetAdapter:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetAdapter
$LN4@SetAdapter:
	DB	108					; 0000006cH
	DB	0
?SetAdapterMonitor@DXUTState@@QAEXPAUHMONITOR__@@@Z ENDP ; DXUTState::SetAdapterMonitor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ PROC	; DXUTState::GetHWNDDeviceWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetHWNDDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetHWNDDev:
	DD	1
	DD	$LN5@GetHWNDDev
$LN5@GetHWNDDev:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetHWNDDev
$LN4@GetHWNDDev:
	DB	108					; 0000006cH
	DB	0
?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ENDP	; DXUTState::GetHWNDDeviceWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z PROC ; DXUTState::SetHWNDDeviceWindowed, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+92], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetHWNDDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetHWNDDev:
	DD	1
	DD	$LN5@SetHWNDDev
$LN5@SetHWNDDev:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetHWNDDev
$LN4@SetHWNDDev:
	DB	108					; 0000006cH
	DB	0
?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ENDP ; DXUTState::SetHWNDDeviceWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ PROC ; DXUTState::GetHWNDDeviceFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetHWNDDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetHWNDDev:
	DD	1
	DD	$LN5@GetHWNDDev
$LN5@GetHWNDDev:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetHWNDDev
$LN4@GetHWNDDev:
	DB	108					; 0000006cH
	DB	0
?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ENDP ; DXUTState::GetHWNDDeviceFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z PROC ; DXUTState::SetHWNDDeviceFullScreen, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+88], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetHWNDDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetHWNDDev:
	DD	1
	DD	$LN5@SetHWNDDev
$LN5@SetHWNDDev:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetHWNDDev
$LN4@SetHWNDDev:
	DB	108					; 0000006cH
	DB	0
?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ENDP ; DXUTState::SetHWNDDeviceFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ PROC		; DXUTState::GetHWNDFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetHWNDFoc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetHWNDFoc:
	DD	1
	DD	$LN5@GetHWNDFoc
$LN5@GetHWNDFoc:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetHWNDFoc
$LN4@GetHWNDFoc:
	DB	108					; 0000006cH
	DB	0
?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ ENDP		; DXUTState::GetHWNDFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z PROC		; DXUTState::SetHWNDFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+84], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetHWNDFoc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetHWNDFoc:
	DD	1
	DD	$LN5@SetHWNDFoc
$LN5@SetHWNDFoc:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetHWNDFoc
$LN4@SetHWNDFoc:
	DB	108					; 0000006cH
	DB	0
?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ENDP		; DXUTState::SetHWNDFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ PROC ; DXUTState::GetD3D11DeviceContext1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ ENDP ; DXUTState::GetD3D11DeviceContext1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z PROC ; DXUTState::SetD3D11DeviceContext1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+80], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DeviceContext1@DXUTState@@QAEXPAUID3D11DeviceContext1@@@Z ENDP ; DXUTState::SetD3D11DeviceContext1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ PROC ; DXUTState::GetD3D11Device1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ ENDP ; DXUTState::GetD3D11Device1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z PROC ; DXUTState::SetD3D11Device1, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+76], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11Device1@DXUTState@@QAEXPAUID3D11Device1@@@Z ENDP ; DXUTState::SetD3D11Device1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ PROC ; DXUTState::GetD3D11RasterizerState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Ra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11Ra:
	DD	1
	DD	$LN5@GetD3D11Ra
$LN5@GetD3D11Ra:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Ra
$LN4@GetD3D11Ra:
	DB	108					; 0000006cH
	DB	0
?GetD3D11RasterizerState@DXUTState@@QAEPAUID3D11RasterizerState@@XZ ENDP ; DXUTState::GetD3D11RasterizerState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z PROC ; DXUTState::SetD3D11RasterizerState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+72], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Ra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11Ra:
	DD	1
	DD	$LN5@SetD3D11Ra
$LN5@SetD3D11Ra:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Ra
$LN4@SetD3D11Ra:
	DB	108					; 0000006cH
	DB	0
?SetD3D11RasterizerState@DXUTState@@QAEXPAUID3D11RasterizerState@@@Z ENDP ; DXUTState::SetD3D11RasterizerState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ PROC ; DXUTState::GetD3D11RenderTargetView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Re
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11Re:
	DD	1
	DD	$LN5@GetD3D11Re
$LN5@GetD3D11Re:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Re
$LN4@GetD3D11Re:
	DB	108					; 0000006cH
	DB	0
?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ENDP ; DXUTState::GetD3D11RenderTargetView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z PROC ; DXUTState::SetD3D11RenderTargetView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+68], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Re
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11Re:
	DD	1
	DD	$LN5@SetD3D11Re
$LN5@SetD3D11Re:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Re
$LN4@SetD3D11Re:
	DB	108					; 0000006cH
	DB	0
?SetD3D11RenderTargetView@DXUTState@@QAEXPAUID3D11RenderTargetView@@@Z ENDP ; DXUTState::SetD3D11RenderTargetView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ PROC ; DXUTState::GetD3D11DepthStencilView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ENDP ; DXUTState::GetD3D11DepthStencilView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z PROC ; DXUTState::SetD3D11DepthStencilView, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+64], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DepthStencilView@DXUTState@@QAEXPAUID3D11DepthStencilView@@@Z ENDP ; DXUTState::SetD3D11DepthStencilView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ PROC ; DXUTState::GetD3D11DepthStencil, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DepthStencil@DXUTState@@QAEPAUID3D11Texture2D@@XZ ENDP ; DXUTState::GetD3D11DepthStencil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z PROC ; DXUTState::SetD3D11DepthStencil, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+60], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DepthStencil@DXUTState@@QAEXPAUID3D11Texture2D@@@Z ENDP ; DXUTState::SetD3D11DepthStencil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; DXUTState::GetD3D11FeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11Fe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11Fe:
	DD	1
	DD	$LN5@GetD3D11Fe
$LN5@GetD3D11Fe:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11Fe
$LN4@GetD3D11Fe:
	DB	108					; 0000006cH
	DB	0
?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; DXUTState::GetD3D11FeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z PROC ; DXUTState::SetD3D11FeatureLevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+56], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11Fe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11Fe:
	DD	1
	DD	$LN5@SetD3D11Fe
$LN5@SetD3D11Fe:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11Fe
$LN4@SetD3D11Fe:
	DB	108					; 0000006cH
	DB	0
?SetD3D11FeatureLevel@DXUTState@@QAEXW4D3D_FEATURE_LEVEL@@@Z ENDP ; DXUTState::SetD3D11FeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ PROC ; DXUTState::GetD3D11DeviceContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ ENDP ; DXUTState::GetD3D11DeviceContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z PROC ; DXUTState::SetD3D11DeviceContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+52], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11DeviceContext@DXUTState@@QAEXPAUID3D11DeviceContext@@@Z ENDP ; DXUTState::SetD3D11DeviceContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ PROC	; DXUTState::GetD3D11Device, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetD3D11De:
	DD	1
	DD	$LN5@GetD3D11De
$LN5@GetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetD3D11De
$LN4@GetD3D11De:
	DB	108					; 0000006cH
	DB	0
?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ ENDP	; DXUTState::GetD3D11Device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z PROC	; DXUTState::SetD3D11Device, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+48], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetD3D11De
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetD3D11De:
	DD	1
	DD	$LN5@SetD3D11De
$LN5@SetD3D11De:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetD3D11De
$LN4@SetD3D11De:
	DB	108					; 0000006cH
	DB	0
?SetD3D11Device@DXUTState@@QAEXPAUID3D11Device@@@Z ENDP	; DXUTState::SetD3D11Device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ PROC	; DXUTState::GetDoNotStoreBufferSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+45]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDoNotSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetDoNotSt:
	DD	1
	DD	$LN5@GetDoNotSt
$LN5@GetDoNotSt:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDoNotSt
$LN4@GetDoNotSt:
	DB	108					; 0000006cH
	DB	0
?GetDoNotStoreBufferSize@DXUTState@@QAE_NXZ ENDP	; DXUTState::GetDoNotStoreBufferSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z PROC	; DXUTState::SetDoNotStoreBufferSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+45], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDoNotSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetDoNotSt:
	DD	1
	DD	$LN5@SetDoNotSt
$LN5@SetDoNotSt:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDoNotSt
$LN4@SetDoNotSt:
	DB	108					; 0000006cH
	DB	0
?SetDoNotStoreBufferSize@DXUTState@@QAEX_N@Z ENDP	; DXUTState::SetDoNotStoreBufferSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetRenderingOccluded@DXUTState@@QAE_NXZ
_TEXT	SEGMENT
$T1 = -17						; size = 1
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetRenderingOccluded@DXUTState@@QAE_NXZ PROC		; DXUTState::GetRenderingOccluded, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+44]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	al, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetRenderi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetRenderi:
	DD	1
	DD	$LN5@GetRenderi
$LN5@GetRenderi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetRenderi
$LN4@GetRenderi:
	DB	108					; 0000006cH
	DB	0
?GetRenderingOccluded@DXUTState@@QAE_NXZ ENDP		; DXUTState::GetRenderingOccluded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetRenderingOccluded@DXUTState@@QAEX_N@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetRenderingOccluded@DXUTState@@QAEX_N@Z PROC		; DXUTState::SetRenderingOccluded, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+44], cl
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetRenderi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetRenderi:
	DD	1
	DD	$LN5@SetRenderi
$LN5@SetRenderi:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetRenderi
$LN4@SetRenderi:
	DB	108					; 0000006cH
	DB	0
?SetRenderingOccluded@DXUTState@@QAEX_N@Z ENDP		; DXUTState::SetRenderingOccluded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ PROC ; DXUTState::GetBackBufferSurfaceDescDXGI, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetBackBuf
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetBackBuf:
	DD	1
	DD	$LN5@GetBackBuf
$LN5@GetBackBuf:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetBackBuf
$LN4@GetBackBuf:
	DB	108					; 0000006cH
	DB	0
?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ENDP ; DXUTState::GetBackBufferSurfaceDescDXGI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ PROC ; DXUTState::GetDXGISwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 294
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDXGISwa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetDXGISwa:
	DD	1
	DD	$LN5@GetDXGISwa
$LN5@GetDXGISwa:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDXGISwa
$LN4@GetDXGISwa:
	DB	108					; 0000006cH
	DB	0
?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ENDP ; DXUTState::GetDXGISwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z PROC ; DXUTState::SetDXGISwapChain, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 294
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDXGISwa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetDXGISwa:
	DD	1
	DD	$LN5@SetDXGISwa
$LN5@SetDXGISwa:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDXGISwa
$LN4@SetDXGISwa:
	DB	108					; 0000006cH
	DB	0
?SetDXGISwapChain@DXUTState@@QAEXPAUIDXGISwapChain@@@Z ENDP ; DXUTState::SetDXGISwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIOutputArraySize@DXUTState@@QAEIXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIOutputArraySize@DXUTState@@QAEIXZ PROC		; DXUTState::GetDXGIOutputArraySize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 293
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDXGIOut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetDXGIOut:
	DD	1
	DD	$LN5@GetDXGIOut
$LN5@GetDXGIOut:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDXGIOut
$LN4@GetDXGIOut:
	DB	108					; 0000006cH
	DB	0
?GetDXGIOutputArraySize@DXUTState@@QAEIXZ ENDP		; DXUTState::GetDXGIOutputArraySize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z PROC		; DXUTState::SetDXGIOutputArraySize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 293
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDXGIOut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetDXGIOut:
	DD	1
	DD	$LN5@SetDXGIOut
$LN5@SetDXGIOut:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDXGIOut
$LN4@SetDXGIOut:
	DB	108					; 0000006cH
	DB	0
?SetDXGIOutputArraySize@DXUTState@@QAEXI@Z ENDP		; DXUTState::SetDXGIOutputArraySize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ PROC ; DXUTState::GetDXGIOutputArray, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDXGIOut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetDXGIOut:
	DD	1
	DD	$LN5@GetDXGIOut
$LN5@GetDXGIOut:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDXGIOut
$LN4@GetDXGIOut:
	DB	108					; 0000006cH
	DB	0
?GetDXGIOutputArray@DXUTState@@QAEPAPAUIDXGIOutput@@XZ ENDP ; DXUTState::GetDXGIOutputArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z PROC ; DXUTState::SetDXGIOutputArray, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+12], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDXGIOut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetDXGIOut:
	DD	1
	DD	$LN5@SetDXGIOut
$LN5@SetDXGIOut:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDXGIOut
$LN4@SetDXGIOut:
	DB	108					; 0000006cH
	DB	0
?SetDXGIOutputArray@DXUTState@@QAEXPAPAUIDXGIOutput@@@Z ENDP ; DXUTState::SetDXGIOutputArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ PROC	; DXUTState::GetDXGIAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDXGIAda
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetDXGIAda:
	DD	1
	DD	$LN5@GetDXGIAda
$LN5@GetDXGIAda:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDXGIAda
$LN4@GetDXGIAda:
	DB	108					; 0000006cH
	DB	0
?GetDXGIAdapter@DXUTState@@QAEPAUIDXGIAdapter1@@XZ ENDP	; DXUTState::GetDXGIAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z PROC ; DXUTState::SetDXGIAdapter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+8], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDXGIAda
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetDXGIAda:
	DD	1
	DD	$LN5@SetDXGIAda
$LN5@SetDXGIAda:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDXGIAda
$LN4@SetDXGIAda:
	DB	108					; 0000006cH
	DB	0
?SetDXGIAdapter@DXUTState@@QAEXPAUIDXGIAdapter1@@@Z ENDP ; DXUTState::SetDXGIAdapter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ PROC	; DXUTState::GetDXGIFactory, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDXGIFac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GetDXGIFac:
	DD	1
	DD	$LN5@GetDXGIFac
$LN5@GetDXGIFac:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetDXGIFac
$LN4@GetDXGIFac:
	DB	108					; 0000006cH
	DB	0
?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ENDP	; DXUTState::GetDXGIFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z PROC ; DXUTState::SetDXGIFactory, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+4], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetDXGIFac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetDXGIFac:
	DD	1
	DD	$LN5@SetDXGIFac
$LN5@SetDXGIFac:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetDXGIFac
$LN4@SetDXGIFac:
	DB	108					; 0000006cH
	DB	0
?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ENDP ; DXUTState::SetDXGIFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_l$ = -9						; size = 1
_this$ = -4						; size = 4
?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ PROC ; DXUTState::GetCurrentDeviceSettings, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetCurrent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetCurrent:
	DD	1
	DD	$LN5@GetCurrent
$LN5@GetCurrent:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@GetCurrent
$LN4@GetCurrent:
	DB	108					; 0000006cH
	DB	0
?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ENDP ; DXUTState::GetCurrentDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z
_TEXT	SEGMENT
_l$ = -9						; size = 1
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z PROC ; DXUTState::SetCurrentDeviceSettings, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??0DXUTLock@@QAE@XZ			; DXUTLock::DXUTLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], ecx
	lea	ecx, DWORD PTR _l$[ebp]
	call	??1DXUTLock@@QAE@XZ			; DXUTLock::~DXUTLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetCurrent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@SetCurrent:
	DD	1
	DD	$LN5@SetCurrent
$LN5@SetCurrent:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN4@SetCurrent
$LN4@SetCurrent:
	DB	108					; 0000006cH
	DB	0
?SetCurrentDeviceSettings@DXUTState@@QAEXPAUDXUTDeviceSettings@@@Z ENDP ; DXUTState::SetCurrentDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Destroy@DXUTState@@QAEXXZ
_TEXT	SEGMENT
tv73 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?Destroy@DXUTState@@QAEXXZ PROC				; DXUTState::Destroy, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1512], 0
	je	SHORT $LN1@Destroy
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1512]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@Destroy
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_G?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEPAXI@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN5@Destroy
$LN4@Destroy:
	mov	DWORD PTR tv73[ebp], 0
$LN5@Destroy:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1512], 0
$LN1@Destroy:
; Line 282
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
; Line 283
	mov	esi, esp
	push	OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 284
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Destroy@DXUTState@@QAEXXZ ENDP				; DXUTState::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@DXUTState@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Create@DXUTState@@QAEXXZ PROC				; DXUTState::Create, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	BYTE PTR ?g_bThreadSafe@@3_NA, 1	; g_bThreadSafe
; Line 254
	mov	esi, esp
	push	1000					; 000003e8H
	push	OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
	call	DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 256
	push	3696					; 00000e70H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 257
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+860], -1
; Line 258
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+864], -1
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
; Line 260
	mov	ecx, 2
	imul	edx, ecx, 0
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+edx+328], ax
; Line 261
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+840], 0
; Line 262
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+841], 0
; Line 263
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+844], -1
; Line 264
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+852], -1
; Line 265
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+888], -1
; Line 266
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+281], 1
; Line 267
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+271], 1
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+225], 1
; Line 269
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+298], 1
; Line 270
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+227], 1
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+268], 1
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+269], 1
; Line 273
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+270], 1
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+894], 1
; Line 275
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+212], xmm0
; Line 276
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+320], 1
; Line 277
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@DXUTState@@QAEXXZ ENDP				; DXUTState::Create
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DXUTState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DXUTState@@QAE@XZ PROC				; DXUTState::~DXUTState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 249
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy@DXUTState@@QAEXXZ		; DXUTState::Destroy
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DXUTState@@QAE@XZ ENDP				; DXUTState::~DXUTState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTState@@QAE@XZ PROC				; DXUTState::DXUTState, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 248
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@DXUTState@@QAEXXZ		; DXUTState::Create
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DXUTState@@QAE@XZ ENDP				; DXUTState::DXUTState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DXUTLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DXUTLock@@QAE@XZ PROC				; DXUTLock::~DXUTLock, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR ?g_bThreadSafe@@3_NA	; g_bThreadSafe
	test	eax, eax
	je	SHORT $LN2@DXUTLock
	mov	esi, esp
	push	OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUTLock:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DXUTLock@@QAE@XZ ENDP				; DXUTLock::~DXUTLock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTLock@@QAE@XZ PROC				; DXUTLock::DXUTLock, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR ?g_bThreadSafe@@3_NA	; g_bThreadSafe
	test	eax, eax
	je	SHORT $LN2@DXUTLock
	mov	esi, esp
	push	OFFSET ?g_cs@@3U_RTL_CRITICAL_SECTION@@A ; g_cs
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUTLock:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DXUTLock@@QAE@XZ ENDP				; DXUTLock::DXUTLock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	$LN1@operator
; Line 1201
	mov	esi, esp
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	mov	esi, esp
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z PROC ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	$LN1@operator
; Line 1201
	mov	esi, esp
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	mov	esi, esp
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1LK@CIKAIPAF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAG?$AAI?$AA_?$AAM?$AAO?$AAD?$AAE?$AA_?$AAD?$AAE?$AAS@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 1209
	imul	eax, DWORD PTR __Pos$[ebp], 28
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QAEAAUDXGI_MODE_DESC@@I@Z ENDP ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ PROC ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UDXGI_MODE_DESC@@V?$allocator@UDXGI_MODE_DESC@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXGI_MODE_DESC,std::allocator<DXGI_MODE_DESC> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z PROC ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	$LN1@operator
; Line 1201
	mov	esi, esp
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	mov	esi, esp
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PO@FFNDBIOE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAC?$AAD?$AA3?$AAD?$AA1?$AA1?$AAE?$AAn?$AAu?$AAm?$AAD?$AAe?$AAv@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QAEAAPAUCD3D11EnumDeviceSettingsCombo@@I@Z ENDP ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ PROC ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAUCD3D11EnumDeviceSettingsCombo@@V?$allocator@PAUCD3D11EnumDeviceSettingsCombo@@@std@@@std@@QBEIXZ ENDP ; std::vector<CD3D11EnumDeviceSettingsCombo *,std::allocator<CD3D11EnumDeviceSettingsCombo *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1074
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1075
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1076
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?cend@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1069
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1070
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1071
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?cbegin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::cbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1030
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumOutputInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumOutputInfo *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVCD3D11EnumOutputInfo@@V?$allocator@PAVCD3D11EnumOutputInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumOutputInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumOutputInfo *,std::allocator<CD3D11EnumOutputInfo *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv75[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv75[ebp]
; Line 1159
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1074
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1075
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1076
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?cend@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1069
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1070
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1071
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?cbegin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::cbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ PROC ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1030
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@std@@QAE@PAPAVCD3D11EnumAdapterInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CD3D11EnumAdapterInfo *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAVCD3D11EnumAdapterInfo@@V?$allocator@PAVCD3D11EnumAdapterInfo@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCD3D11EnumAdapterInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<CD3D11EnumAdapterInfo *,std::allocator<CD3D11EnumAdapterInfo *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; CD3D11Enumeration::GetREFFeaturevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxutdevice11.h
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetREFFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; CD3D11Enumeration::GetREFFeaturevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ PROC ; CD3D11Enumeration::GetWARPFeaturevel, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxutdevice11.h
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWARPFeaturevel@CD3D11Enumeration@@QBE?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; CD3D11Enumeration::GetWARPFeaturevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_modifySettings$ = 8					; size = 4
?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z PROC ; DXUTApplyDefaultDeviceSettings
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4285
	push	ebp
	mov	ebp, esp
; Line 4286
	push	100					; 00000064H
	push	0
	mov	eax, DWORD PTR _modifySettings$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 4288
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 4289
	mov	edx, DWORD PTR _modifySettings$[ebp]
	mov	BYTE PTR [edx+88], 1
; Line 4290
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+92], 45			; 0000002dH
; Line 4292
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	or	edx, 2
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+76], edx
; Line 4296
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+8], 1
; Line 4297
	mov	edx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 4298
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 4299
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+56], 2
; Line 4300
	mov	edx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [edx+32], 29			; 0000001dH
; Line 4301
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+20], 600			; 00000258H
; Line 4302
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 4303
	mov	edx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [edx+28], 0
; Line 4304
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 4305
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+36], 0
; Line 4306
	mov	edx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [edx+16], 800			; 00000320H
; Line 4307
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+52], 32			; 00000020H
; Line 4308
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+72], 2
; Line 4309
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	mov	edx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [edx+60], eax
; Line 4310
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+44], 1
; Line 4311
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+48], 0
; Line 4312
	mov	edx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [edx+68], 0
; Line 4313
	mov	eax, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [eax+64], 1
; Line 4314
	mov	ecx, DWORD PTR _modifySettings$[ebp]
	mov	DWORD PTR [ecx+80], 0
; Line 4315
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z ENDP ; DXUTApplyDefaultDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
tv82 = -9						; size = 1
tv79 = -8						; size = 4
tv76 = -4						; size = 4
_pObj$ = 8						; size = 4
_pstrName$ = 12						; size = 4
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z PROC	; DXUT_SetDebugName, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxutmisc.h
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 198
	cmp	DWORD PTR _pObj$[ebp], 0
	je	SHORT $LN2@DXUT_SetDe
; Line 199
	mov	eax, DWORD PTR _pstrName$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	add	ecx, 1
	mov	DWORD PTR tv79[ebp], ecx
$LL4@DXUT_SetDe:
	mov	edx, DWORD PTR tv76[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv82[ebp], al
	add	DWORD PTR tv76[ebp], 1
	cmp	BYTE PTR tv82[ebp], 0
	jne	SHORT $LL4@DXUT_SetDe
	mov	ecx, DWORD PTR tv76[ebp]
	sub	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR _pstrName$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	push	OFFSET _WKPDID_D3DDebugObjectName
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUT_SetDe:
; Line 200
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ENDP	; DXUT_SetDebugName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
?DXUTDestroyState@@YGXXZ PROC				; DXUTDestroyState
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 468
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 469
	cmp	DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
	je	SHORT $LN2@DXUTDestro
	mov	eax, DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A ; g_pDXUTState
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@DXUTDestro
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GDXUTState@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN5@DXUTDestro
$LN4@DXUTDestro:
	mov	DWORD PTR tv69[ebp], 0
$LN5@DXUTDestro:
	mov	DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
$LN2@DXUTDestro:
; Line 470
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTDestroyState@@YGXXZ ENDP				; DXUTDestroyState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DXUTCreateState@@YGJXZ PROC				; DXUTCreateState
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 457
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DXUTCreateState@@YGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 458
	cmp	DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
	jne	SHORT $LN2@DXUTCreate
; Line 460
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	push	3696					; 00000e70H
	call	??2@YAPAXIABUnothrow_t@std@@@Z		; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN5@DXUTCreate
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0DXUTState@@QAE@XZ			; DXUTState::DXUTState
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN6@DXUTCreate
$LN5@DXUTCreate:
	mov	DWORD PTR tv74[ebp], 0
$LN6@DXUTCreate:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, ecx ; g_pDXUTState
; Line 461
	cmp	DWORD PTR ?g_pDXUTState@@3PAVDXUTState@@A, 0 ; g_pDXUTState
	jne	SHORT $LN2@DXUTCreate
; Line 462
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN3@DXUTCreate
$LN2@DXUTCreate:
; Line 464
	xor	eax, eax
$LN3@DXUTCreate:
; Line 465
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTCreateState@@YGJXZ$0:
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXABUnothrow_t@std@@@Z		; operator delete
	add	esp, 8
	ret	0
__ehhandler$?DXUTCreateState@@YGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DXUTCreateState@@YGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DXUTCreateState@@YGJXZ ENDP				; DXUTCreateState
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_bMouseButtons$ = -4					; size = 4
_vButton$ = 8						; size = 1
?DXUTIsMouseButtonDown@@YG_NE@Z PROC			; DXUTIsMouseButtonDown
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4189
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4190
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMouseButtons@DXUTState@@QAEPA_NXZ	; DXUTState::GetMouseButtons
	mov	DWORD PTR _bMouseButtons$[ebp], eax
; Line 4191
	movzx	eax, BYTE PTR _vButton$[ebp]
	push	eax
	call	?DXUTMapButtonToArrayIndex@@YAHE@Z	; DXUTMapButtonToArrayIndex
	add	esp, 4
	mov	DWORD PTR _nIndex$[ebp], eax
; Line 4192
	mov	ecx, DWORD PTR _bMouseButtons$[ebp]
	add	ecx, DWORD PTR _nIndex$[ebp]
	mov	al, BYTE PTR [ecx]
; Line 4193
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DXUTIsMouseButtonDown@@YG_NE@Z ENDP			; DXUTIsMouseButtonDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -12						; size = 4
_bKeys$ = -8						; size = 4
_bLastKeys$ = -4					; size = 4
_vKey$ = 8						; size = 1
?DXUTWasKeyPressed@@YG_NE@Z PROC			; DXUTWasKeyPressed
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4181
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4182
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetLastKeys@DXUTState@@QAEPA_NXZ	; DXUTState::GetLastKeys
	mov	DWORD PTR _bLastKeys$[ebp], eax
; Line 4183
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeys@DXUTState@@QAEPA_NXZ		; DXUTState::GetKeys
	mov	DWORD PTR _bKeys$[ebp], eax
; Line 4184
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAppCalledWasKeyPressed@DXUTState@@QAEX_N@Z ; DXUTState::SetAppCalledWasKeyPressed
; Line 4185
	movzx	eax, BYTE PTR _vKey$[ebp]
	mov	ecx, DWORD PTR _bLastKeys$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	jne	SHORT $LN3@DXUTWasKey
	movzx	eax, BYTE PTR _vKey$[ebp]
	mov	ecx, DWORD PTR _bKeys$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN3@DXUTWasKey
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN4@DXUTWasKey
$LN3@DXUTWasKey:
	mov	DWORD PTR tv83[ebp], 0
$LN4@DXUTWasKey:
	mov	al, BYTE PTR tv83[ebp]
; Line 4186
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DXUTWasKeyPressed@@YG_NE@Z ENDP			; DXUTWasKeyPressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -8						; size = 4
_bKeys$ = -4						; size = 4
_vKey$ = 8						; size = 1
?DXUTIsKeyDown@@YG_NE@Z PROC				; DXUTIsKeyDown
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4170
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4171
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeys@DXUTState@@QAEPA_NXZ		; DXUTState::GetKeys
	mov	DWORD PTR _bKeys$[ebp], eax
; Line 4172
	movzx	eax, BYTE PTR _vKey$[ebp]
	cmp	eax, 160				; 000000a0H
	jl	SHORT $LN4@DXUTIsKeyD
	movzx	ecx, BYTE PTR _vKey$[ebp]
	cmp	ecx, 165				; 000000a5H
	jg	SHORT $LN4@DXUTIsKeyD
; Line 4173
	movzx	edx, BYTE PTR _vKey$[ebp]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	test	eax, eax
	je	SHORT $LN7@DXUTIsKeyD
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN8@DXUTIsKeyD
$LN7@DXUTIsKeyD:
	mov	DWORD PTR tv76[ebp], 0
$LN8@DXUTIsKeyD:
	mov	al, BYTE PTR tv76[ebp]
	jmp	SHORT $LN5@DXUTIsKeyD
	jmp	SHORT $LN5@DXUTIsKeyD
$LN4@DXUTIsKeyD:
; Line 4174
	movzx	ecx, BYTE PTR _vKey$[ebp]
	cmp	ecx, 1
	jl	SHORT $LN2@DXUTIsKeyD
	movzx	edx, BYTE PTR _vKey$[ebp]
	cmp	edx, 6
	jg	SHORT $LN2@DXUTIsKeyD
	movzx	eax, BYTE PTR _vKey$[ebp]
	cmp	eax, 3
	je	SHORT $LN2@DXUTIsKeyD
; Line 4175
	movzx	ecx, BYTE PTR _vKey$[ebp]
	push	ecx
	call	?DXUTIsMouseButtonDown@@YG_NE@Z		; DXUTIsMouseButtonDown
	jmp	SHORT $LN5@DXUTIsKeyD
; Line 4176
	jmp	SHORT $LN5@DXUTIsKeyD
$LN2@DXUTIsKeyD:
; Line 4177
	movzx	edx, BYTE PTR _vKey$[ebp]
	mov	eax, DWORD PTR _bKeys$[ebp]
	mov	al, BYTE PTR [eax+edx]
$LN5@DXUTIsKeyD:
; Line 4178
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DXUTIsKeyDown@@YG_NE@Z ENDP				; DXUTIsKeyDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetAutomation@@YG_NXZ PROC				; DXUTGetAutomation
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 592
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAutomation@DXUTState@@QAE_NXZ	; DXUTState::GetAutomation
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetAutomation@@YG_NXZ ENDP				; DXUTGetAutomation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetShowMsgBoxOnError@@YG_NXZ PROC			; DXUTGetShowMsgBoxOnError
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 591
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetShowMsgBoxOnError@DXUTState@@QAE_NXZ ; DXUTState::GetShowMsgBoxOnError
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetShowMsgBoxOnError@@YG_NXZ ENDP			; DXUTGetShowMsgBoxOnError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetExitCode@@YGHXZ PROC				; DXUTGetExitCode
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 590
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetExitCode@@YGHXZ ENDP				; DXUTGetExitCode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTIsActive@@YG_NXZ PROC				; DXUTIsActive
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 589
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetActive@DXUTState@@QAE_NXZ		; DXUTState::GetActive
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTIsActive@@YG_NXZ ENDP				; DXUTIsActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
?DXUTIsTimePaused@@YG_NXZ PROC				; DXUTIsTimePaused
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 588
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetPauseTimeCount@DXUTState@@QAEHXZ	; DXUTState::GetPauseTimeCount
	test	eax, eax
	jle	SHORT $LN3@DXUTIsTime
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@DXUTIsTime
$LN3@DXUTIsTime:
	mov	DWORD PTR tv68[ebp], 0
$LN4@DXUTIsTime:
	mov	al, BYTE PTR tv68[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTIsTimePaused@@YG_NXZ ENDP				; DXUTIsTimePaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
?DXUTIsRenderingPaused@@YG_NXZ PROC			; DXUTIsRenderingPaused
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 587
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetPauseRenderingCount@DXUTState@@QAEHXZ ; DXUTState::GetPauseRenderingCount
	test	eax, eax
	jle	SHORT $LN3@DXUTIsRend
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@DXUTIsRend
$LN3@DXUTIsRend:
	mov	DWORD PTR tv68[ebp], 0
$LN4@DXUTIsRend:
	mov	al, BYTE PTR tv68[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTIsRenderingPaused@@YG_NXZ ENDP			; DXUTIsRenderingPaused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -8						; size = 4
_pDS$ = -4						; size = 4
?DXUTIsVsyncEnabled@@YG_NXZ PROC			; DXUTIsVsyncEnabled
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4157
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4158
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDS$[ebp], eax
; Line 4159
	cmp	DWORD PTR _pDS$[ebp], 0
	je	SHORT $LN2@DXUTIsVsyn
; Line 4161
	mov	eax, DWORD PTR _pDS$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN5@DXUTIsVsyn
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN6@DXUTIsVsyn
$LN5@DXUTIsVsyn:
	mov	DWORD PTR tv71[ebp], 0
$LN6@DXUTIsVsyn:
	mov	al, BYTE PTR tv71[ebp]
	jmp	SHORT $LN3@DXUTIsVsyn
; Line 4163
	jmp	SHORT $LN3@DXUTIsVsyn
$LN2@DXUTIsVsyn:
; Line 4165
	mov	al, 1
$LN3@DXUTIsVsyn:
; Line 4167
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTIsVsyncEnabled@@YG_NXZ ENDP			; DXUTIsVsyncEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDeviceStats@@YGPB_WXZ PROC			; DXUTGetDeviceStats
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 586
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceStats@DXUTState@@QAEPA_WXZ	; DXUTState::GetDeviceStats
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetDeviceStats@@YGPB_WXZ ENDP			; DXUTGetDeviceStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -12						; size = 4
_pstrFPS$ = -8						; size = 4
_pstrFrameStats$ = -4					; size = 4
_bShowFPS$ = 8						; size = 1
?DXUTGetFrameStats@@YGPB_W_N@Z PROC			; DXUTGetFrameStats
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4057
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4058
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFrameStats@DXUTState@@QAEPA_WXZ	; DXUTState::GetFrameStats
	mov	DWORD PTR _pstrFrameStats$[ebp], eax
; Line 4059
	movzx	eax, BYTE PTR _bShowFPS$[ebp]
	test	eax, eax
	je	SHORT $LN3@DXUTGetFra
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFPSStats@DXUTState@@QAEPA_WXZ	; DXUTState::GetFPSStats
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@DXUTGetFra
$LN3@DXUTGetFra:
	mov	DWORD PTR tv72[ebp], OFFSET $SG153656
$LN4@DXUTGetFra:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR _pstrFPS$[ebp], ecx
; Line 4060
	mov	esi, esp
	mov	edx, DWORD PTR _pstrFPS$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetStaticFrameStats@DXUTState@@QAEPA_WXZ ; DXUTState::GetStaticFrameStats
	push	eax
	push	256					; 00000100H
	mov	eax, DWORD PTR _pstrFrameStats$[ebp]
	push	eax
	call	DWORD PTR __imp__swprintf_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4061
	mov	eax, DWORD PTR _pstrFrameStats$[ebp]
; Line 4062
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DXUTGetFrameStats@@YGPB_W_N@Z ENDP			; DXUTGetFrameStats
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetWindowTitle@@YGPB_WXZ PROC			; DXUTGetWindowTitle
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 585
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowTitle@DXUTState@@QAEPA_WXZ	; DXUTState::GetWindowTitle
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetWindowTitle@@YGPB_WXZ ENDP			; DXUTGetWindowTitle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetFPS@@YGMXZ PROC					; DXUTGetFPS
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 584
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFPS@DXUTState@@QAEMXZ		; DXUTState::GetFPS
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetFPS@@YGMXZ ENDP					; DXUTGetFPS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTIsInGammaCorrectMode@@YG_NXZ PROC			; DXUTIsInGammaCorrectMode
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 594
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetIsInGammaCorrectMode@DXUTState@@QAE_NXZ ; DXUTState::GetIsInGammaCorrectMode
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTIsInGammaCorrectMode@@YG_NXZ ENDP			; DXUTIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTIsWindowed@@YG_NXZ PROC				; DXUTIsWindowed
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 593
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	push	eax
	call	?DXUTGetIsWindowedFromDS@@YA_NPAUDXUTDeviceSettings@@@Z ; DXUTGetIsWindowedFromDS
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTIsWindowed@@YG_NXZ ENDP				; DXUTIsWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetElapsedTime@@YGMXZ PROC				; DXUTGetElapsedTime
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 583
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetElapsedTime@DXUTState@@QAEMXZ	; DXUTState::GetElapsedTime
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetElapsedTime@@YGMXZ ENDP				; DXUTGetElapsedTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetTime@@YGNXZ PROC				; DXUTGetTime
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 582
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetTime@DXUTState@@QAENXZ		; DXUTState::GetTime
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetTime@@YGNXZ ENDP				; DXUTGetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
?DXUTGetFullsceenClientRectAtModeChange@@YG?AUtagRECT@@XZ PROC ; DXUTGetFullsceenClientRectAtModeChange
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 581
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _rc$[ebp], 0
	mov	DWORD PTR _rc$[ebp+4], 0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferWidthAtModeChange
	mov	DWORD PTR _rc$[ebp+8], eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetFullScreenBackBufferHeightAtModeChange
	mov	DWORD PTR _rc$[ebp+12], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rc$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rc$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DXUTGetFul
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@DXUTGetFul:
	DD	1
	DD	$LN4@DXUTGetFul
$LN4@DXUTGetFul:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@DXUTGetFul
$LN3@DXUTGetFul:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?DXUTGetFullsceenClientRectAtModeChange@@YG?AUtagRECT@@XZ ENDP ; DXUTGetFullsceenClientRectAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ PROC ; DXUTGetWindowClientRectAtModeChange
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 580
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _rc$[ebp], 0
	mov	DWORD PTR _rc$[ebp+4], 0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowBackBufferWidthAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferWidthAtModeChange
	mov	DWORD PTR _rc$[ebp+8], eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowBackBufferHeightAtModeChange@DXUTState@@QAEIXZ ; DXUTState::GetWindowBackBufferHeightAtModeChange
	mov	DWORD PTR _rc$[ebp+12], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rc$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rc$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DXUTGetWin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@DXUTGetWin:
	DD	1
	DD	$LN4@DXUTGetWin
$LN4@DXUTGetWin:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@DXUTGetWin
$LN3@DXUTGetWin:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ ENDP ; DXUTGetWindowClientRectAtModeChange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -60						; size = 16
$T2 = -44						; size = 16
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
?DXUTGetWindowHeight@@YGJXZ PROC			; DXUTGetWindowHeight
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 579
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRect
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp+12], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _rc$[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR _rc$[ebp+4], ecx
	mov	edx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR _rc$[ebp+8], edx
	mov	eax, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR _rc$[ebp+12], eax
	mov	eax, DWORD PTR _rc$[ebp+12]
	sub	eax, DWORD PTR _rc$[ebp+4]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DXUTGetWin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@DXUTGetWin:
	DD	1
	DD	$LN4@DXUTGetWin
$LN4@DXUTGetWin:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@DXUTGetWin
$LN3@DXUTGetWin:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?DXUTGetWindowHeight@@YGJXZ ENDP			; DXUTGetWindowHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -60						; size = 16
$T2 = -44						; size = 16
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
?DXUTGetWindowWidth@@YGJXZ PROC				; DXUTGetWindowWidth
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 578
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRect
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp+12], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _rc$[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR _rc$[ebp+4], ecx
	mov	edx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR _rc$[ebp+8], edx
	mov	eax, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR _rc$[ebp+12], eax
	mov	eax, DWORD PTR _rc$[ebp+8]
	sub	eax, DWORD PTR _rc$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DXUTGetWin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@DXUTGetWin:
	DD	1
	DD	$LN4@DXUTGetWin
$LN4@DXUTGetWin:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@DXUTGetWin
$LN3@DXUTGetWin:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?DXUTGetWindowWidth@@YGJXZ ENDP				; DXUTGetWindowWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rc$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ PROC		; DXUTGetWindowClientRect
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _rc$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _rc$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DXUTGetWin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@DXUTGetWin:
	DD	1
	DD	$LN4@DXUTGetWin
$LN4@DXUTGetWin:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@DXUTGetWin
$LN3@DXUTGetWin:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?DXUTGetWindowClientRect@@YG?AUtagRECT@@XZ ENDP		; DXUTGetWindowClientRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ PROC	; DXUTGetHWNDDeviceWindowed
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 576
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceWindowed
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetHWNDDeviceWindowed@@YGPAUHWND__@@XZ ENDP	; DXUTGetHWNDDeviceWindowed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ PROC	; DXUTGetHWNDDeviceFullScreen
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 575
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceFullScreen
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetHWNDDeviceFullScreen@@YGPAUHWND__@@XZ ENDP	; DXUTGetHWNDDeviceFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ PROC			; DXUTGetHWNDFocus
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 574
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHWNDFocus@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDFocus
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ ENDP			; DXUTGetHWNDFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -4						; size = 4
?DXUTGetHWND@@YGPAUHWND__@@XZ PROC			; DXUTGetHWND
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 573
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DXUTGetHWN
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHWNDDeviceWindowed@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceWindowed
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@DXUTGetHWN
$LN3@DXUTGetHWN:
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHWNDDeviceFullScreen@DXUTState@@QAEPAUHWND__@@XZ ; DXUTState::GetHWNDDeviceFullScreen
	mov	DWORD PTR tv73[ebp], eax
$LN4@DXUTGetHWN:
	mov	eax, DWORD PTR tv73[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTGetHWND@@YGPAUHWND__@@XZ ENDP			; DXUTGetHWND
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ PROC		; DXUTGetHINSTANCE
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 572
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHInstance@DXUTState@@QAEPAUHINSTANCE__@@XZ ; DXUTState::GetHInstance
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ ENDP		; DXUTGetHINSTANCE
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ds$1 = -112						; size = 100
_pDS$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
$T2 = 8							; size = 4
?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ PROC ; DXUTGetDeviceSettings
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4140
	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-116]
	mov	ecx, 29					; 0000001dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 4143
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDS$[ebp], eax
; Line 4144
	cmp	DWORD PTR _pDS$[ebp], 0
	je	SHORT $LN2@DXUTGetDev
; Line 4146
	mov	ecx, 25					; 00000019H
	mov	esi, DWORD PTR _pDS$[ebp]
	mov	edi, DWORD PTR $T2[ebp]
	rep movsd
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN3@DXUTGetDev
; Line 4148
	jmp	SHORT $LN3@DXUTGetDev
$LN2@DXUTGetDev:
; Line 4151
	push	100					; 00000064H
	push	0
	lea	eax, DWORD PTR _ds$1[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 4152
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR _ds$1[ebp]
	mov	edi, DWORD PTR $T2[ebp]
	rep movsd
	mov	eax, DWORD PTR $T2[ebp]
$LN3@DXUTGetDev:
; Line 4154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@DXUTGetDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@DXUTGetDev:
	DD	1
	DD	$LN6@DXUTGetDev
$LN6@DXUTGetDev:
	DD	-112					; ffffff90H
	DD	100					; 00000064H
	DD	$LN5@DXUTGetDev
$LN5@DXUTGetDev:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ENDP ; DXUTGetDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ PROC ; DXUTGetD3D11DeviceContext1
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 600
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DeviceContext1@DXUTState@@QAEPAUID3D11DeviceContext1@@XZ ; DXUTState::GetD3D11DeviceContext1
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetD3D11DeviceContext1@@YGPAUID3D11DeviceContext1@@XZ ENDP ; DXUTGetD3D11DeviceContext1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ PROC	; DXUTGetD3D11Device1
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 599
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11Device1@DXUTState@@QAEPAUID3D11Device1@@XZ ; DXUTState::GetD3D11Device1
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetD3D11Device1@@YGPAUID3D11Device1@@XZ ENDP	; DXUTGetD3D11Device1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ PROC ; DXUTGetD3D11DeviceContext
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 598
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DeviceContext@DXUTState@@QAEPAUID3D11DeviceContext@@XZ ; DXUTState::GetD3D11DeviceContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ENDP ; DXUTGetD3D11DeviceContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ PROC		; DXUTGetD3D11Device
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 597
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11Device@DXUTState@@QAEPAUID3D11Device@@XZ ; DXUTState::GetD3D11Device
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ENDP		; DXUTGetD3D11Device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ PROC ; DXUTGetD3D11DepthStencilView
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 570
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ ENDP ; DXUTGetD3D11DepthStencilView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ PROC ; DXUTGetD3D11RenderTargetView
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 569
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ ENDP ; DXUTGetD3D11RenderTargetView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetD3D11DeviceFeatureLevel@@YG?AW4D3D_FEATURE_LEVEL@@XZ PROC ; DXUTGetD3D11DeviceFeatureLevel
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 567
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11FeatureLevel@DXUTState@@QAE?AW4D3D_FEATURE_LEVEL@@XZ ; DXUTState::GetD3D11FeatureLevel
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetD3D11DeviceFeatureLevel@@YG?AW4D3D_FEATURE_LEVEL@@XZ ENDP ; DXUTGetD3D11DeviceFeatureLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv136 = -80						; size = 8
tv132 = -72						; size = 4
tv94 = -68						; size = 8
tv90 = -60						; size = 4
_pDSV$ = -56						; size = 4
_pRTV$ = -48						; size = 4
_vp$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDeviceContext$ = 8					; size = 4
?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z PROC ; DXUTSetupD3D11Views
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2258
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2259
	mov	DWORD PTR _hr$[ebp], 0
; Line 2263
	call	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv90[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv90[ebp]
	mov	ecx, DWORD PTR tv90[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv94[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv94[ebp]
	movss	DWORD PTR _vp$[ebp+8], xmm0
; Line 2264
	call	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR tv132[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR tv132[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv136[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv136[ebp]
	movss	DWORD PTR _vp$[ebp+12], xmm0
; Line 2265
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vp$[ebp+16], xmm0
; Line 2266
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vp$[ebp+20], xmm0
; Line 2267
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vp$[ebp], xmm0
; Line 2268
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _vp$[ebp+4], xmm0
; Line 2269
	mov	esi, esp
	lea	ecx, DWORD PTR _vp$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _pd3dDeviceContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDeviceContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+176]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2272
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11RenderTargetView@DXUTState@@QAEPAUID3D11RenderTargetView@@XZ ; DXUTState::GetD3D11RenderTargetView
	mov	DWORD PTR _pRTV$[ebp], eax
; Line 2273
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11DepthStencilView@DXUTState@@QAEPAUID3D11DepthStencilView@@XZ ; DXUTState::GetD3D11DepthStencilView
	mov	DWORD PTR _pDSV$[ebp], eax
; Line 2274
	mov	esi, esp
	mov	eax, DWORD PTR _pDSV$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pRTV$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _pd3dDeviceContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDeviceContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+132]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2276
	mov	eax, DWORD PTR _hr$[ebp]
; Line 2277
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@DXUTSetupD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@DXUTSetupD:
	DD	2
	DD	$LN5@DXUTSetupD
$LN5@DXUTSetupD:
	DD	-36					; ffffffdcH
	DD	24					; 00000018H
	DD	$LN3@DXUTSetupD
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN4@DXUTSetupD
$LN4@DXUTSetupD:
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	84					; 00000054H
	DB	86					; 00000056H
	DB	0
$LN3@DXUTSetupD:
	DB	118					; 00000076H
	DB	112					; 00000070H
	DB	0
?DXUTSetupD3D11Views@@YGJPAUID3D11DeviceContext@@@Z ENDP ; DXUTSetupD3D11Views
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ PROC ; DXUTGetDXGIBackBufferSurfaceDesc
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 571
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetBackBufferSurfaceDescDXGI@DXUTState@@QAEPAUDXGI_SURFACE_DESC@@XZ ; DXUTState::GetBackBufferSurfaceDescDXGI
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ENDP ; DXUTGetDXGIBackBufferSurfaceDesc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ PROC	; DXUTGetDXGISwapChain
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 568
	push	ebp
	mov	ebp, esp
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGISwapChain@DXUTState@@QAEPAUIDXGISwapChain@@XZ ; DXUTState::GetDXGISwapChain
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ENDP	; DXUTGetDXGISwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ PROC	; DXUTGetDXGIFactory
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 595
	push	ebp
	mov	ebp, esp
	call	?DXUTDelayLoadDXGI@@YAJXZ		; DXUTDelayLoadDXGI
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTGetDXGIFactory@@YGPAUIDXGIFactory1@@XZ ENDP	; DXUTGetDXGIFactory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -8						; size = 4
_psettings$ = -4					; size = 4
?DXUTGetMSAASwapChainCreated@@YG_NXZ PROC		; DXUTGetMSAASwapChainCreated
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 561
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 562
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _psettings$[ebp], eax
; Line 563
	cmp	DWORD PTR _psettings$[ebp], 0
	jne	SHORT $LN1@DXUTGetMSA
; Line 564
	xor	al, al
	jmp	SHORT $LN2@DXUTGetMSA
$LN1@DXUTGetMSA:
; Line 565
	mov	eax, DWORD PTR _psettings$[ebp]
	cmp	DWORD PTR [eax+44], 1
	jbe	SHORT $LN4@DXUTGetMSA
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN5@DXUTGetMSA
$LN4@DXUTGetMSA:
	mov	DWORD PTR tv73[ebp], 0
$LN5@DXUTGetMSA:
	mov	al, BYTE PTR tv73[ebp]
$LN2@DXUTGetMSA:
; Line 566
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUTGetMSAASwapChainCreated@@YG_NXZ ENDP		; DXUTGetMSAASwapChainCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bGammaCorrect$ = 8					; size = 1
?DXUTSetIsInGammaCorrectMode@@YGX_N@Z PROC		; DXUTSetIsInGammaCorrectMode
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4278
	push	ebp
	mov	ebp, esp
; Line 4279
	movzx	eax, BYTE PTR _bGammaCorrect$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetIsInGammaCorrectMode@DXUTState@@QAEX_N@Z ; DXUTState::SetIsInGammaCorrectMode
; Line 4280
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?DXUTSetIsInGammaCorrectMode@@YGX_N@Z ENDP		; DXUTSetIsInGammaCorrectMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDXGIFactory$ = -8					; size = 4
_hWnd$ = -4						; size = 4
_nExitCode$ = 8						; size = 4
?DXUTShutdown@@YGXH@Z PROC				; DXUTShutdown
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4248
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4249
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	mov	DWORD PTR _hWnd$[ebp], eax
; Line 4250
	cmp	DWORD PTR _hWnd$[ebp], 0
	je	SHORT $LN2@DXUTShutdo
; Line 4251
	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUTShutdo:
; Line 4253
	mov	ecx, DWORD PTR _nExitCode$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
; Line 4255
	push	1
	call	?DXUTCleanup3DEnvironment@@YAX_N@Z	; DXUTCleanup3DEnvironment
	add	esp, 4
; Line 4265
	push	1
	call	?DXUTAllowShortcutKeys@@YAX_N@Z		; DXUTAllowShortcutKeys
	add	esp, 4
; Line 4268
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXGIFactory@DXUTState@@QAEPAUIDXGIFactory1@@XZ ; DXUTState::GetDXGIFactory
	mov	DWORD PTR _pDXGIFactory$[ebp], eax
; Line 4269
	cmp	DWORD PTR _pDXGIFactory$[ebp], 0
	je	SHORT $LN1@DXUTShutdo
	mov	edx, DWORD PTR _pDXGIFactory$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pDXGIFactory$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDXGIFactory$[ebp], 0
$LN1@DXUTShutdo:
; Line 4270
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXGIFactory@DXUTState@@QAEXPAUIDXGIFactory1@@@Z ; DXUTState::SetDXGIFactory
; Line 4271
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DXUTShutdown@@YGXH@Z ENDP				; DXUTShutdown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?DXUTResetFrameworkState@@YGXXZ PROC			; DXUTResetFrameworkState
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4238
	push	ebp
	mov	ebp, esp
; Line 4239
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?Destroy@DXUTState@@QAEXXZ		; DXUTState::Destroy
; Line 4240
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?Create@DXUTState@@QAEXXZ		; DXUTState::Create
; Line 4241
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DXUTResetFrameworkState@@YGXXZ ENDP			; DXUTResetFrameworkState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv139 = -96						; size = 4
tv69 = -92						; size = 4
$T2 = -88						; size = 12
$T3 = -73						; size = 1
_DXUTTimer$4 = -68					; size = 24
_it$5 = -36						; size = 12
_bFound$ = -17						; size = 1
_pTimerList$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_nIDEvent$ = 8						; size = 4
?DXUTKillTimer@@YGJI@Z PROC				; DXUTKillTimer
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3283
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DXUTKillTimer@@YGJI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	push	edi
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 3284
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
	mov	DWORD PTR _pTimerList$[ebp], eax
; Line 3285
	cmp	DWORD PTR _pTimerList$[ebp], 0
	jne	SHORT $LN6@DXUTKillTi
; Line 3286
	mov	eax, 1
	jmp	$LN7@DXUTKillTi
$LN6@DXUTKillTi:
; Line 3288
	mov	BYTE PTR _bFound$[ebp], 0
; Line 3290
	lea	eax, DWORD PTR _it$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTimerList$[ebp]
	call	?begin@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN5@DXUTKillTi
$LN4@DXUTKillTi:
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator++
$LN5@DXUTKillTi:
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTimerList$[ebp]
	call	?end@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@2@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv139[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv139[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator!=
	mov	BYTE PTR $T3[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T3[ebp]
	test	ecx, ecx
	je	SHORT $LN3@DXUTKillTi
; Line 3292
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _DXUTTimer$4[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _DXUTTimer$4[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _DXUTTimer$4[ebp+8], edx
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _DXUTTimer$4[ebp+12], ecx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR _DXUTTimer$4[ebp+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR _DXUTTimer$4[ebp+20], eax
; Line 3293
	mov	ecx, DWORD PTR _DXUTTimer$4[ebp+20]
	cmp	ecx, DWORD PTR _nIDEvent$[ebp]
	jne	SHORT $LN2@DXUTKillTi
; Line 3295
	mov	BYTE PTR _DXUTTimer$4[ebp+16], 0
; Line 3296
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QBEAAUDXUT_TIMER@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUT_TIMER> > >::operator*
	mov	edx, DWORD PTR _DXUTTimer$4[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _DXUTTimer$4[ebp+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _DXUTTimer$4[ebp+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _DXUTTimer$4[ebp+12]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _DXUTTimer$4[ebp+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _DXUTTimer$4[ebp+20]
	mov	DWORD PTR [eax+20], ecx
; Line 3297
	mov	BYTE PTR _bFound$[ebp], 1
; Line 3298
	jmp	SHORT $LN3@DXUTKillTi
$LN2@DXUTKillTi:
; Line 3299
	jmp	$LN4@DXUTKillTi
$LN3@DXUTKillTi:
; Line 3300
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
; Line 3302
	movzx	edx, BYTE PTR _bFound$[ebp]
	test	edx, edx
	jne	SHORT $LN1@DXUTKillTi
; Line 3303
	push	1
	push	OFFSET $SG152980
	push	-2147024809				; 80070057H
	push	3303					; 00000ce7H
	push	OFFSET $SG152981
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN7@DXUTKillTi
$LN1@DXUTKillTi:
; Line 3305
	xor	eax, eax
$LN7@DXUTKillTi:
; Line 3306
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@DXUTKillTi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN15@DXUTKillTi:
	DD	2
	DD	$LN14@DXUTKillTi
$LN14@DXUTKillTi:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN11@DXUTKillTi
	DD	-68					; ffffffbcH
	DD	24					; 00000018H
	DD	$LN12@DXUTKillTi
$LN12@DXUTKillTi:
	DB	68					; 00000044H
	DB	88					; 00000058H
	DB	85					; 00000055H
	DB	84					; 00000054H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN11@DXUTKillTi:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTKillTimer@@YGJI@Z$0:
	lea	ecx, DWORD PTR _it$5[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?DXUTKillTimer@@YGJI@Z$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDXUT_TIMER@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DXUTKillTimer@@YGJI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DXUTKillTimer@@YGJI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DXUTKillTimer@@YGJI@Z ENDP				; DXUTKillTimer
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv91 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 4
_pTimerList$ = -48					; size = 4
_DXUTTimer$ = -40					; size = 24
__$EHRec$ = -12						; size = 12
_pCallbackTimer$ = 8					; size = 4
_fTimeoutInSecs$ = 12					; size = 4
_pnIDEvent$ = 16					; size = 4
_pCallbackUserContext$ = 20				; size = 4
?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z PROC		; DXUTSetTimer
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3248
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 3249
	cmp	DWORD PTR _pCallbackTimer$[ebp], 0
	jne	SHORT $LN4@DXUTSetTim
; Line 3250
	push	1
	push	OFFSET $SG152802
	push	-2147024809				; 80070057H
	push	3250					; 00000cb2H
	push	OFFSET $SG152803
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN5@DXUTSetTim
$LN4@DXUTSetTim:
; Line 3253
	mov	eax, DWORD PTR _pCallbackTimer$[ebp]
	mov	DWORD PTR _DXUTTimer$[ebp], eax
; Line 3254
	mov	ecx, DWORD PTR _pCallbackUserContext$[ebp]
	mov	DWORD PTR _DXUTTimer$[ebp+4], ecx
; Line 3255
	movss	xmm0, DWORD PTR _fTimeoutInSecs$[ebp]
	movss	DWORD PTR _DXUTTimer$[ebp+8], xmm0
; Line 3256
	movss	xmm0, DWORD PTR _fTimeoutInSecs$[ebp]
	movss	DWORD PTR _DXUTTimer$[ebp+12], xmm0
; Line 3257
	mov	BYTE PTR _DXUTTimer$[ebp+16], 1
; Line 3258
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetTimerLastID@DXUTState@@QAEIXZ	; DXUTState::GetTimerLastID
	add	eax, 1
	mov	DWORD PTR _DXUTTimer$[ebp+20], eax
; Line 3259
	mov	edx, DWORD PTR _DXUTTimer$[ebp+20]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetTimerLastID@DXUTState@@QAEXI@Z	; DXUTState::SetTimerLastID
; Line 3261
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetTimerList@DXUTState@@QAEPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@XZ ; DXUTState::GetTimerList
	mov	DWORD PTR _pTimerList$[ebp], eax
; Line 3262
	cmp	DWORD PTR _pTimerList$[ebp], 0
	jne	SHORT $LN3@DXUTSetTim
; Line 3264
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	push	16					; 00000010H
	call	??2@YAPAXIABUnothrow_t@std@@@Z		; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN7@DXUTSetTim
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAE@XZ ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@DXUTSetTim
$LN7@DXUTSetTim:
	mov	DWORD PTR tv91[ebp], 0
$LN8@DXUTSetTim:
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _pTimerList$[ebp], ecx
; Line 3265
	cmp	DWORD PTR _pTimerList$[ebp], 0
	jne	SHORT $LN2@DXUTSetTim
; Line 3266
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN5@DXUTSetTim
$LN2@DXUTSetTim:
; Line 3267
	mov	edx, DWORD PTR _pTimerList$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetTimerList@DXUTState@@QAEXPAV?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@@Z ; DXUTState::SetTimerList
$LN3@DXUTSetTim:
; Line 3270
	lea	eax, DWORD PTR _DXUTTimer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTimerList$[ebp]
	call	?push_back@?$vector@UDXUT_TIMER@@V?$allocator@UDXUT_TIMER@@@std@@@std@@QAEXABUDXUT_TIMER@@@Z ; std::vector<DXUT_TIMER,std::allocator<DXUT_TIMER> >::push_back
; Line 3272
	cmp	DWORD PTR _pnIDEvent$[ebp], 0
	je	SHORT $LN1@DXUTSetTim
; Line 3273
	mov	ecx, DWORD PTR _pnIDEvent$[ebp]
	mov	edx, DWORD PTR _DXUTTimer$[ebp+20]
	mov	DWORD PTR [ecx], edx
$LN1@DXUTSetTim:
; Line 3275
	xor	eax, eax
$LN5@DXUTSetTim:
; Line 3276
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@DXUTSetTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN13@DXUTSetTim:
	DD	1
	DD	$LN12@DXUTSetTim
$LN12@DXUTSetTim:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN10@DXUTSetTim
$LN10@DXUTSetTim:
	DB	68					; 00000044H
	DB	88					; 00000058H
	DB	85					; 00000055H
	DB	84					; 00000054H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z$0:
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXABUnothrow_t@std@@@Z		; operator delete
	add	esp, 8
	ret	0
__ehhandler$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DXUTSetTimer@@YGJP6GXIPAX@ZMPAI0@Z ENDP		; DXUTSetTimer
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bCallDefWindowProc$ = 8				; size = 1
?DXUTSetWindowSettings@@YGX_N@Z PROC			; DXUTSetWindowSettings
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4217
	push	ebp
	mov	ebp, esp
; Line 4218
	movzx	eax, BYTE PTR _bCallDefWindowProc$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetCallDefWindowProc@DXUTState@@QAEX_N@Z ; DXUTState::SetCallDefWindowProc
; Line 4219
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?DXUTSetWindowSettings@@YGX_N@Z ENDP			; DXUTSetWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bAllowWhenFullscreen$ = 8				; size = 1
_bAllowWhenWindowed$ = 12				; size = 1
?DXUTSetShortcutKeySettings@@YGX_N0@Z PROC		; DXUTSetShortcutKeySettings
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3118
	push	ebp
	mov	ebp, esp
; Line 3119
	movzx	eax, BYTE PTR _bAllowWhenWindowed$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAllowShortcutKeysWhenWindowed@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenWindowed
; Line 3120
	movzx	ecx, BYTE PTR _bAllowWhenFullscreen$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAllowShortcutKeysWhenFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetAllowShortcutKeysWhenFullscreen
; Line 3123
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXUTInited@DXUTState@@QAE_NXZ	; DXUTState::GetDXUTInited
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@DXUTSetSho
; Line 3125
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@DXUTSetSho
; Line 3126
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
	movzx	ecx, al
	push	ecx
	call	?DXUTAllowShortcutKeys@@YAX_N@Z		; DXUTAllowShortcutKeys
	add	esp, 4
; Line 3127
	jmp	SHORT $LN4@DXUTSetSho
$LN2@DXUTSetSho:
; Line 3128
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
	movzx	edx, al
	push	edx
	call	?DXUTAllowShortcutKeys@@YAX_N@Z		; DXUTAllowShortcutKeys
	add	esp, 4
$LN4@DXUTSetSho:
; Line 3130
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetShortcutKeySettings@@YGX_N0@Z ENDP		; DXUTSetShortcutKeySettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bAutoChangeAdapter$ = 8				; size = 1
?DXUTSetMultimonSettings@@YGX_N@Z PROC			; DXUTSetMultimonSettings
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4196
	push	ebp
	mov	ebp, esp
; Line 4197
	movzx	eax, BYTE PTR _bAutoChangeAdapter$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAutoChangeAdapter@DXUTState@@QAEX_N@Z ; DXUTState::SetAutoChangeAdapter
; Line 4198
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?DXUTSetMultimonSettings@@YGX_N@Z ENDP			; DXUTSetMultimonSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bAltEnterToToggleFullscreen$ = 8			; size = 1
_bEscapeToQuit$ = 12					; size = 1
_bPauseToToggleTimePause$ = 16				; size = 1
?DXUTSetHotkeyHandling@@YGX_N00@Z PROC			; DXUTSetHotkeyHandling
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4202
	push	ebp
	mov	ebp, esp
; Line 4203
	movzx	eax, BYTE PTR _bEscapeToQuit$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHandleEscape@DXUTState@@QAEX_N@Z	; DXUTState::SetHandleEscape
; Line 4204
	movzx	ecx, BYTE PTR _bAltEnterToToggleFullscreen$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHandleAltEnter@DXUTState@@QAEX_N@Z	; DXUTState::SetHandleAltEnter
; Line 4205
	movzx	edx, BYTE PTR _bPauseToToggleTimePause$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHandlePause@DXUTState@@QAEX_N@Z	; DXUTState::SetHandlePause
; Line 4206
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?DXUTSetHotkeyHandling@@YGX_N00@Z ENDP			; DXUTSetHotkeyHandling
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bShowCursorWhenFullScreen$ = 8				; size = 1
_bClipCursorWhenFullScreen$ = 12			; size = 1
?DXUTSetCursorSettings@@YGX_N0@Z PROC			; DXUTSetCursorSettings
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4210
	push	ebp
	mov	ebp, esp
; Line 4211
	movzx	eax, BYTE PTR _bClipCursorWhenFullScreen$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetClipCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetClipCursorWhenFullScreen
; Line 4212
	movzx	ecx, BYTE PTR _bShowCursorWhenFullScreen$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetShowCursorWhenFullScreen@DXUTState@@QAEX_N@Z ; DXUTState::SetShowCursorWhenFullScreen
; Line 4213
	call	?DXUTSetupCursor@@YAXXZ			; DXUTSetupCursor
; Line 4214
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCursorSettings@@YGX_N0@Z ENDP			; DXUTSetCursorSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bEnabled$ = 8						; size = 1
_fTimePerFrame$ = 12					; size = 4
?DXUTSetConstantFrameTime@@YGX_NM@Z PROC		; DXUTSetConstantFrameTime
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 4223
	push	ebp
	mov	ebp, esp
; Line 4224
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideConstantFrameTime
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@DXUTSetCon
; Line 4226
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetOverrideConstantFrameTime
	mov	BYTE PTR _bEnabled$[ebp], al
; Line 4227
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideConstantTimePerFrame@DXUTState@@QAEMXZ ; DXUTState::GetOverrideConstantTimePerFrame
	fstp	DWORD PTR _fTimePerFrame$[ebp]
$LN1@DXUTSetCon:
; Line 4229
	movzx	ecx, BYTE PTR _bEnabled$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetConstantFrameTime@DXUTState@@QAEX_N@Z ; DXUTState::SetConstantFrameTime
; Line 4230
	push	ecx
	movss	xmm0, DWORD PTR _fTimePerFrame$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetTimePerFrame@DXUTState@@QAEXM@Z	; DXUTState::SetTimePerFrame
; Line 4231
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetConstantFrameTime@@YGX_NM@Z ENDP		; DXUTSetConstantFrameTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv131 = -10						; size = 1
tv94 = -9						; size = 1
_nPauseRenderingCount$ = -8				; size = 4
_nPauseTimeCount$ = -4					; size = 4
_bPauseTime$ = 8					; size = 1
_bPauseRendering$ = 12					; size = 1
?DXUTPause@@YGX_N0@Z PROC				; DXUTPause
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3211
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 3212
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetPauseTimeCount@DXUTState@@QAEHXZ	; DXUTState::GetPauseTimeCount
	mov	DWORD PTR _nPauseTimeCount$[ebp], eax
; Line 3213
	movzx	eax, BYTE PTR _bPauseTime$[ebp]
	test	eax, eax
	je	SHORT $LN8@DXUTPause
	mov	ecx, DWORD PTR _nPauseTimeCount$[ebp]
	add	ecx, 1
	mov	DWORD PTR _nPauseTimeCount$[ebp], ecx
; Line 3214
	jmp	SHORT $LN7@DXUTPause
$LN8@DXUTPause:
; Line 3215
	mov	edx, DWORD PTR _nPauseTimeCount$[ebp]
	sub	edx, 1
	mov	DWORD PTR _nPauseTimeCount$[ebp], edx
$LN7@DXUTPause:
; Line 3216
	cmp	DWORD PTR _nPauseTimeCount$[ebp], 0
	jge	SHORT $LN6@DXUTPause
	mov	DWORD PTR _nPauseTimeCount$[ebp], 0
$LN6@DXUTPause:
; Line 3217
	mov	eax, DWORD PTR _nPauseTimeCount$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetPauseTimeCount@DXUTState@@QAEXH@Z	; DXUTState::SetPauseTimeCount
; Line 3219
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetPauseRenderingCount@DXUTState@@QAEHXZ ; DXUTState::GetPauseRenderingCount
	mov	DWORD PTR _nPauseRenderingCount$[ebp], eax
; Line 3220
	movzx	ecx, BYTE PTR _bPauseRendering$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@DXUTPause
	mov	edx, DWORD PTR _nPauseRenderingCount$[ebp]
	add	edx, 1
	mov	DWORD PTR _nPauseRenderingCount$[ebp], edx
; Line 3221
	jmp	SHORT $LN4@DXUTPause
$LN5@DXUTPause:
; Line 3222
	mov	eax, DWORD PTR _nPauseRenderingCount$[ebp]
	sub	eax, 1
	mov	DWORD PTR _nPauseRenderingCount$[ebp], eax
$LN4@DXUTPause:
; Line 3223
	cmp	DWORD PTR _nPauseRenderingCount$[ebp], 0
	jge	SHORT $LN3@DXUTPause
	mov	DWORD PTR _nPauseRenderingCount$[ebp], 0
$LN3@DXUTPause:
; Line 3224
	mov	ecx, DWORD PTR _nPauseRenderingCount$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetPauseRenderingCount@DXUTState@@QAEXH@Z ; DXUTState::SetPauseRenderingCount
; Line 3226
	cmp	DWORD PTR _nPauseTimeCount$[ebp], 0
	jle	SHORT $LN2@DXUTPause
; Line 3229
	call	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
	mov	ecx, eax
	call	?Stop@CDXUTTimer@@QAEXXZ		; CDXUTTimer::Stop
; Line 3231
	jmp	SHORT $LN1@DXUTPause
$LN2@DXUTPause:
; Line 3234
	call	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
	mov	ecx, eax
	call	?Start@CDXUTTimer@@QAEXXZ		; CDXUTTimer::Start
$LN1@DXUTPause:
; Line 3237
	cmp	DWORD PTR _nPauseRenderingCount$[ebp], 0
	jle	SHORT $LN11@DXUTPause
	mov	BYTE PTR tv94[ebp], 1
	jmp	SHORT $LN12@DXUTPause
$LN11@DXUTPause:
	mov	BYTE PTR tv94[ebp], 0
$LN12@DXUTPause:
	movzx	edx, BYTE PTR tv94[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetRenderingPaused@DXUTState@@QAEX_N@Z	; DXUTState::SetRenderingPaused
; Line 3238
	cmp	DWORD PTR _nPauseTimeCount$[ebp], 0
	jle	SHORT $LN13@DXUTPause
	mov	BYTE PTR tv131[ebp], 1
	jmp	SHORT $LN14@DXUTPause
$LN13@DXUTPause:
	mov	BYTE PTR tv131[ebp], 0
$LN14@DXUTPause:
	movzx	eax, BYTE PTR tv131[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetTimePaused@DXUTState@@QAEX_N@Z	; DXUTState::SetTimePaused
; Line 3239
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DXUTPause@@YGX_N0@Z ENDP				; DXUTPause
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -628						; size = 100
$T2 = -528						; size = 100
_hr2$3 = -428						; size = 4
$T4 = -424						; size = 100
_orginalDeviceSettings$5 = -320				; size = 100
_hr$ = -216						; size = 4
$T6 = -212						; size = 100
_deviceSettings$ = -108					; size = 100
__$ArrayPad$ = -4					; size = 4
?DXUTToggleWARP@@YGJXZ PROC				; DXUTToggleWARP
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3478
	push	ebp
	mov	ebp, esp
	sub	esp, 628				; 00000274H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-628]
	mov	ecx, 157				; 0000009dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3479
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T6[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T6[ebp]
	lea	edi, DWORD PTR _deviceSettings$[ebp]
	rep movsd
; Line 3481
	cmp	DWORD PTR _deviceSettings$[ebp+8], 1
	je	SHORT $LN7@DXUTToggle
	cmp	DWORD PTR _deviceSettings$[ebp+8], 2
	jne	SHORT $LN8@DXUTToggle
$LN7@DXUTToggle:
; Line 3483
	cmp	DWORD PTR _deviceSettings$[ebp+64], 0
	jne	SHORT $LN6@DXUTToggle
; Line 3486
	mov	eax, 1
	jmp	$LN9@DXUTToggle
$LN6@DXUTToggle:
; Line 3489
	mov	DWORD PTR _deviceSettings$[ebp+8], 5
	jmp	SHORT $LN5@DXUTToggle
$LN8@DXUTToggle:
; Line 3491
	cmp	DWORD PTR _deviceSettings$[ebp+8], 5
	jne	SHORT $LN5@DXUTToggle
; Line 3493
	mov	DWORD PTR _deviceSettings$[ebp+8], 1
$LN5@DXUTToggle:
; Line 3496
	push	0
	push	0
	lea	ecx, DWORD PTR _deviceSettings$[ebp]
	push	ecx
	call	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 3497
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@DXUTToggle
; Line 3499
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T4[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T4[ebp]
	lea	edi, DWORD PTR _orginalDeviceSettings$5[ebp]
	rep movsd
; Line 3503
	push	0
	lea	eax, DWORD PTR _deviceSettings$[ebp]
	push	eax
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 3506
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@DXUTToggle
	cmp	DWORD PTR _hr$[ebp], -2147467260	; 80004004H
	je	SHORT $LN3@DXUTToggle
; Line 3509
	push	0
	lea	ecx, DWORD PTR _orginalDeviceSettings$5[ebp]
	push	ecx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr2$3[ebp], eax
; Line 3510
	cmp	DWORD PTR _hr2$3[ebp], 0
	jge	SHORT $LN3@DXUTToggle
; Line 3513
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
$LN3@DXUTToggle:
; Line 3518
	mov	eax, DWORD PTR _hr$[ebp]
$LN9@DXUTToggle:
; Line 3519
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@DXUTToggle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 628				; 00000274H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@DXUTToggle:
	DD	2
	DD	$LN13@DXUTToggle
$LN13@DXUTToggle:
	DD	-108					; ffffff94H
	DD	100					; 00000064H
	DD	$LN11@DXUTToggle
	DD	-320					; fffffec0H
	DD	100					; 00000064H
	DD	$LN12@DXUTToggle
$LN12@DXUTToggle:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN11@DXUTToggle:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
?DXUTToggleWARP@@YGJXZ ENDP				; DXUTToggleWARP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -628						; size = 100
$T2 = -528						; size = 100
_hr2$3 = -428						; size = 4
$T4 = -424						; size = 100
_orginalDeviceSettings$5 = -320				; size = 100
_hr$ = -216						; size = 4
$T6 = -212						; size = 100
_deviceSettings$ = -108					; size = 100
__$ArrayPad$ = -4					; size = 4
?DXUTToggleREF@@YGJXZ PROC				; DXUTToggleREF
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3526
	push	ebp
	mov	ebp, esp
	sub	esp, 628				; 00000274H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-628]
	mov	ecx, 157				; 0000009dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3527
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T6[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T6[ebp]
	lea	edi, DWORD PTR _deviceSettings$[ebp]
	rep movsd
; Line 3529
	cmp	DWORD PTR _deviceSettings$[ebp+8], 1
	jne	SHORT $LN9@DXUTToggle
; Line 3531
	mov	DWORD PTR _deviceSettings$[ebp+8], 2
	jmp	SHORT $LN8@DXUTToggle
$LN9@DXUTToggle:
; Line 3533
	cmp	DWORD PTR _deviceSettings$[ebp+8], 2
	jne	SHORT $LN7@DXUTToggle
; Line 3535
	mov	DWORD PTR _deviceSettings$[ebp+8], 1
	jmp	SHORT $LN8@DXUTToggle
$LN7@DXUTToggle:
; Line 3537
	cmp	DWORD PTR _deviceSettings$[ebp+8], 5
	jne	SHORT $LN8@DXUTToggle
; Line 3539
	cmp	DWORD PTR _deviceSettings$[ebp+64], 0
	jne	SHORT $LN4@DXUTToggle
; Line 3542
	mov	eax, 1
	jmp	$LN10@DXUTToggle
$LN4@DXUTToggle:
; Line 3545
	mov	DWORD PTR _deviceSettings$[ebp+8], 2
$LN8@DXUTToggle:
; Line 3548
	push	0
	push	0
	lea	ecx, DWORD PTR _deviceSettings$[ebp]
	push	ecx
	call	?DXUTSnapDeviceSettingsToEnumDevice@@YAJPAUDXUTDeviceSettings@@_NW4D3D_FEATURE_LEVEL@@@Z ; DXUTSnapDeviceSettingsToEnumDevice
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 3549
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@DXUTToggle
; Line 3551
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T4[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T4[ebp]
	lea	edi, DWORD PTR _orginalDeviceSettings$5[ebp]
	rep movsd
; Line 3555
	push	0
	lea	eax, DWORD PTR _deviceSettings$[ebp]
	push	eax
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 3558
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@DXUTToggle
	cmp	DWORD PTR _hr$[ebp], -2147467260	; 80004004H
	je	SHORT $LN3@DXUTToggle
; Line 3561
	push	0
	lea	ecx, DWORD PTR _orginalDeviceSettings$5[ebp]
	push	ecx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr2$3[ebp], eax
; Line 3562
	cmp	DWORD PTR _hr2$3[ebp], 0
	jge	SHORT $LN3@DXUTToggle
; Line 3565
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
$LN3@DXUTToggle:
; Line 3570
	mov	eax, DWORD PTR _hr$[ebp]
$LN10@DXUTToggle:
; Line 3571
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@DXUTToggle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 628				; 00000274H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@DXUTToggle:
	DD	2
	DD	$LN14@DXUTToggle
$LN14@DXUTToggle:
	DD	-108					; ffffff94H
	DD	100					; 00000064H
	DD	$LN12@DXUTToggle
	DD	-320					; fffffec0H
	DD	100					; 00000064H
	DD	$LN13@DXUTToggle
$LN13@DXUTToggle:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN12@DXUTToggle:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
?DXUTToggleREF@@YGJXZ ENDP				; DXUTToggleREF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -724						; size = 4
$T1 = -720						; size = 16
$T2 = -704						; size = 100
$T3 = -604						; size = 100
_hr2$4 = -504						; size = 4
$T5 = -500						; size = 16
_r$6 = -480						; size = 16
_adapterDesktopDisplayMode$7 = -456			; size = 28
_hr$ = -424						; size = 4
$T8 = -420						; size = 100
_orginalDeviceSettings$ = -316				; size = 100
$T9 = -212						; size = 100
_deviceSettings$ = -108					; size = 100
__$ArrayPad$ = -4					; size = 4
?DXUTToggleFullScreen@@YGJXZ PROC			; DXUTToggleFullScreen
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 3421
	push	ebp
	mov	ebp, esp
	sub	esp, 724				; 000002d4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-724]
	mov	ecx, 181				; 000000b5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3422
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T9[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T9[ebp]
	lea	edi, DWORD PTR _deviceSettings$[ebp]
	rep movsd
; Line 3423
	cmp	DWORD PTR _deviceSettings$[ebp+8], 5
	jne	SHORT $LN6@DXUTToggle
; Line 3426
	mov	eax, 1
	jmp	$LN7@DXUTToggle
$LN6@DXUTToggle:
; Line 3429
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	?DXUTGetDeviceSettings@@YG?AUDXUTDeviceSettings@@XZ ; DXUTGetDeviceSettings
	mov	ecx, 25					; 00000019H
	mov	esi, eax
	lea	edi, DWORD PTR $T8[ebp]
	rep movsd
	mov	ecx, 25					; 00000019H
	lea	esi, DWORD PTR $T8[ebp]
	lea	edi, DWORD PTR _orginalDeviceSettings$[ebp]
	rep movsd
; Line 3431
	cmp	DWORD PTR _deviceSettings$[ebp+64], 0
	jne	SHORT $LN9@DXUTToggle
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN10@DXUTToggle
$LN9@DXUTToggle:
	mov	DWORD PTR tv72[ebp], 0
$LN10@DXUTToggle:
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR _deviceSettings$[ebp+64], edx
; Line 3434
	cmp	DWORD PTR _deviceSettings$[ebp+64], 0
	jne	SHORT $LN5@DXUTToggle
; Line 3437
	lea	eax, DWORD PTR _adapterDesktopDisplayMode$7[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _deviceSettings$[ebp+4]
	push	ecx
	call	?DXUTGetD3D11AdapterDisplayMode@@YGJIIPAUDXGI_MODE_DESC@@@Z ; DXUTGetD3D11AdapterDisplayMode
	mov	DWORD PTR _hr$[ebp], eax
; Line 3438
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@DXUTToggle
; Line 3444
	mov	ecx, 7
	mov	esi, OFFSET ?s_adapterDesktopDisplayMode@?L@??DXUTToggleFullScreen@@YGJXZ@4UDXGI_MODE_DESC@@B
	lea	edi, DWORD PTR _adapterDesktopDisplayMode$7[ebp]
	rep movsd
$LN4@DXUTToggle:
; Line 3447
	mov	ecx, 7
	lea	esi, DWORD PTR _adapterDesktopDisplayMode$7[ebp]
	lea	edi, DWORD PTR _deviceSettings$[ebp+16]
	rep movsd
; Line 3449
	jmp	SHORT $LN3@DXUTToggle
$LN5@DXUTToggle:
; Line 3451
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?DXUTGetWindowClientRectAtModeChange@@YG?AUtagRECT@@XZ ; DXUTGetWindowClientRectAtModeChange
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T5[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T5[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T5[ebp+12], edx
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _r$6[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp+4]
	mov	DWORD PTR _r$6[ebp+4], ecx
	mov	edx, DWORD PTR $T5[ebp+8]
	mov	DWORD PTR _r$6[ebp+8], edx
	mov	eax, DWORD PTR $T5[ebp+12]
	mov	DWORD PTR _r$6[ebp+12], eax
; Line 3452
	mov	ecx, DWORD PTR _r$6[ebp+12]
	mov	DWORD PTR _deviceSettings$[ebp+20], ecx
; Line 3453
	mov	edx, DWORD PTR _r$6[ebp+8]
	mov	DWORD PTR _deviceSettings$[ebp+16], edx
$LN3@DXUTToggle:
; Line 3456
	push	0
	lea	eax, DWORD PTR _deviceSettings$[ebp]
	push	eax
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 3459
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@DXUTToggle
	cmp	DWORD PTR _hr$[ebp], -2147467260	; 80004004H
	je	SHORT $LN2@DXUTToggle
; Line 3462
	push	0
	lea	ecx, DWORD PTR _orginalDeviceSettings$[ebp]
	push	ecx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr2$4[ebp], eax
; Line 3463
	cmp	DWORD PTR _hr2$4[ebp], 0
	jge	SHORT $LN2@DXUTToggle
; Line 3466
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
$LN2@DXUTToggle:
; Line 3470
	mov	eax, DWORD PTR _hr$[ebp]
$LN7@DXUTToggle:
; Line 3471
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@DXUTToggle
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 724				; 000002d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@DXUTToggle:
	DD	4
	DD	$LN15@DXUTToggle
$LN15@DXUTToggle:
	DD	-108					; ffffff94H
	DD	100					; 00000064H
	DD	$LN11@DXUTToggle
	DD	-316					; fffffec4H
	DD	100					; 00000064H
	DD	$LN12@DXUTToggle
	DD	-456					; fffffe38H
	DD	28					; 0000001cH
	DD	$LN13@DXUTToggle
	DD	-480					; fffffe20H
	DD	16					; 00000010H
	DD	$LN14@DXUTToggle
$LN14@DXUTToggle:
	DB	114					; 00000072H
	DB	0
$LN13@DXUTToggle:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN12@DXUTToggle:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN11@DXUTToggle:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
?DXUTToggleFullScreen@@YGJXZ ENDP			; DXUTToggleFullScreen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv304 = -120						; size = 8
_nFrame$ = -112						; size = 4
_pDeviceSettings$1 = -108				; size = 4
_SyncInterval$ = -104					; size = 4
_dwFlags$ = -100					; size = 4
_rcClient$2 = -92					; size = 16
_pCallbackFrameRender$3 = -72				; size = 4
_pCallbackFrameMove$ = -68				; size = 4
_fElapsedTime$ = -60					; size = 4
_fAbsTime$ = -48					; size = 8
_fTime$ = -32						; size = 8
_pSwapChain$ = -20					; size = 4
_pd3dImmediateContext$ = -16				; size = 4
_pd3dDevice$ = -12					; size = 4
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXUTRender3DEnvironment@@YGXXZ PROC			; DXUTRender3DEnvironment
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 2760
	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-120]
	mov	ecx, 30					; 0000001eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2763
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 2764
	cmp	DWORD PTR _pd3dDevice$[ebp], 0
	jne	SHORT $LN32@DXUTRender
; Line 2765
	jmp	$LN33@DXUTRender
$LN32@DXUTRender:
; Line 2767
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _pd3dImmediateContext$[ebp], eax
; Line 2768
	cmp	DWORD PTR _pd3dImmediateContext$[ebp], 0
	jne	SHORT $LN31@DXUTRender
; Line 2769
	jmp	$LN33@DXUTRender
$LN31@DXUTRender:
; Line 2771
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$[ebp], eax
; Line 2772
	cmp	DWORD PTR _pSwapChain$[ebp], 0
	jne	SHORT $LN30@DXUTRender
; Line 2773
	jmp	$LN33@DXUTRender
$LN30@DXUTRender:
; Line 2775
	call	?DXUTIsRenderingPaused@@YG_NXZ		; DXUTIsRenderingPaused
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN28@DXUTRender
	call	?DXUTIsActive@@YG_NXZ			; DXUTIsActive
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN28@DXUTRender
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
$LN28@DXUTRender:
; Line 2783
	lea	eax, DWORD PTR _fElapsedTime$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fAbsTime$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fTime$[ebp]
	push	edx
	call	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
	mov	ecx, eax
	call	?GetTimeValues@CDXUTTimer@@QAEXPAN0PAM@Z ; CDXUTTimer::GetTimeValues
; Line 2786
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetConstantFrameTime@DXUTState@@QAE_NXZ ; DXUTState::GetConstantFrameTime
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@DXUTRender
; Line 2788
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetTimePerFrame@DXUTState@@QAEMXZ	; DXUTState::GetTimePerFrame
	fstp	DWORD PTR _fElapsedTime$[ebp]
; Line 2789
	call	?DXUTGetTime@@YGNXZ			; DXUTGetTime
	fstp	QWORD PTR tv304[ebp]
	movsd	xmm0, QWORD PTR tv304[ebp]
	cvtss2sd xmm1, DWORD PTR _fElapsedTime$[ebp]
	addsd	xmm0, xmm1
	movsd	QWORD PTR _fTime$[ebp], xmm0
$LN27@DXUTRender:
; Line 2792
	sub	esp, 8
	movsd	xmm0, QWORD PTR _fTime$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetTime@DXUTState@@QAEXN@Z		; DXUTState::SetTime
; Line 2793
	sub	esp, 8
	movsd	xmm0, QWORD PTR _fAbsTime$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetAbsoluteTime@DXUTState@@QAEXN@Z	; DXUTState::SetAbsoluteTime
; Line 2794
	push	ecx
	movss	xmm0, DWORD PTR _fElapsedTime$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetElapsedTime@DXUTState@@QAEXM@Z	; DXUTState::SetElapsedTime
; Line 2797
	call	?DXUTUpdateFrameStats@@YAXXZ		; DXUTUpdateFrameStats
; Line 2799
	call	?DXUTHandleTimers@@YAXXZ		; DXUTHandleTimers
; Line 2802
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFrameMoveFunc@DXUTState@@QAEP6GXNMPAX@ZXZ ; DXUTState::GetFrameMoveFunc
	mov	DWORD PTR _pCallbackFrameMove$[ebp], eax
; Line 2803
	cmp	DWORD PTR _pCallbackFrameMove$[ebp], 0
	je	SHORT $LN25@DXUTRender
; Line 2805
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetFrameMoveFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetFrameMoveFuncUserContext
	mov	esi, esp
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _fElapsedTime$[ebp]
	movss	DWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR _fTime$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _pCallbackFrameMove$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2806
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 2807
	cmp	DWORD PTR _pd3dDevice$[ebp], 0
	jne	SHORT $LN25@DXUTRender
; Line 2808
	jmp	$LN33@DXUTRender
$LN25@DXUTRender:
; Line 2811
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingPaused@DXUTState@@QAE_NXZ	; DXUTState::GetRenderingPaused
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN36@DXUTRender
; Line 2814
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ; DXUTState::GetD3D11FrameRenderFunc
	mov	DWORD PTR _pCallbackFrameRender$3[ebp], eax
; Line 2815
	cmp	DWORD PTR _pCallbackFrameRender$3[ebp], 0
	je	SHORT $LN22@DXUTRender
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN22@DXUTRender
; Line 2818
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11FrameRenderFuncUserContext
	mov	esi, esp
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _fElapsedTime$[ebp]
	movss	DWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR _fTime$[ebp]
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	call	DWORD PTR _pCallbackFrameRender$3[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2820
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 2821
	cmp	DWORD PTR _pd3dDevice$[ebp], 0
	jne	SHORT $LN22@DXUTRender
; Line 2822
	jmp	$LN33@DXUTRender
$LN22@DXUTRender:
; Line 2829
	mov	esi, esp
	lea	edx, DWORD PTR _rcClient$2[ebp]
	push	edx
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2830
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN36@DXUTRender
; Line 2832
	mov	esi, esp
	lea	eax, DWORD PTR _rcClient$2[ebp]
	push	eax
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2834
	call	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _rcClient$2[ebp+8]
	je	SHORT $LN35@DXUTRender
	mov	esi, esp
	push	2834					; 00000b12H
	push	OFFSET $SG152594
	push	OFFSET $SG152595
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@DXUTRender:
; Line 2835
	call	?DXUTGetDXGIBackBufferSurfaceDesc@@YGPBUDXGI_SURFACE_DESC@@XZ ; DXUTGetDXGIBackBufferSurfaceDesc
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR _rcClient$2[ebp+12]
	je	SHORT $LN36@DXUTRender
	mov	esi, esp
	push	2835					; 00000b13H
	push	OFFSET $SG152598
	push	OFFSET $SG152599
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@DXUTRender:
; Line 2840
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetSaveScreenShot@DXUTState@@QAE_NXZ	; DXUTState::GetSaveScreenShot
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN20@DXUTRender
; Line 2842
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetScreenShotName@DXUTState@@QAEPA_WXZ	; DXUTState::GetScreenShotName
	push	eax
	call	?DXUTSnapD3D11Screenshot@@YAJPB_W_N@Z	; DXUTSnapD3D11Screenshot
	add	esp, 8
$LN20@DXUTRender:
; Line 2844
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitAfterScreenShot@DXUTState@@QAE_NXZ ; DXUTState::GetExitAfterScreenShot
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@DXUTRender
; Line 2846
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
; Line 2847
	jmp	$LN33@DXUTRender
$LN19@DXUTRender:
; Line 2850
	mov	DWORD PTR _dwFlags$[ebp], 0
; Line 2851
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@DXUTRender
; Line 2852
	mov	DWORD PTR _dwFlags$[ebp], 1
; Line 2853
	jmp	SHORT $LN17@DXUTRender
$LN18@DXUTRender:
; Line 2854
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	edx, DWORD PTR [eax+84]
	mov	DWORD PTR _dwFlags$[ebp], edx
$LN17@DXUTRender:
; Line 2855
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	eax, DWORD PTR [eax+80]
	mov	DWORD PTR _SyncInterval$[ebp], eax
; Line 2858
	mov	esi, esp
	mov	ecx, DWORD PTR _dwFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SyncInterval$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSwapChain$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pSwapChain$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2859
	cmp	DWORD PTR _hr$[ebp], 142213121		; 087a0001H
	jne	SHORT $LN16@DXUTRender
; Line 2863
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
	jmp	$LN3@DXUTRender
$LN16@DXUTRender:
; Line 2865
	cmp	DWORD PTR _hr$[ebp], -2005270521	; 887a0007H
	jne	SHORT $LN14@DXUTRender
; Line 2868
	call	?DXUTReset3DEnvironment11@@YAJXZ	; DXUTReset3DEnvironment11
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN9@DXUTRender
; Line 2871
	cmp	DWORD PTR _hr$[ebp], -2147219192	; 80040908H
	je	SHORT $LN11@DXUTRender
	cmp	DWORD PTR _hr$[ebp], -2147219197	; 80040903H
	jne	SHORT $LN12@DXUTRender
$LN11@DXUTRender:
; Line 2873
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	call	?DXUTDisplayErrorMessage@@YAXJ@Z	; DXUTDisplayErrorMessage
	add	esp, 4
; Line 2874
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
; Line 2875
	jmp	$LN33@DXUTRender
; Line 2877
	jmp	SHORT $LN9@DXUTRender
$LN12@DXUTRender:
; Line 2881
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	DWORD PTR _pDeviceSettings$1[ebp], eax
; Line 2882
	push	0
	mov	edx, DWORD PTR _pDeviceSettings$1[ebp]
	push	edx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	test	eax, eax
	jge	SHORT $LN9@DXUTRender
; Line 2884
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
; Line 2885
	jmp	$LN33@DXUTRender
$LN9@DXUTRender:
; Line 2891
	jmp	SHORT $LN3@DXUTRender
$LN14@DXUTRender:
; Line 2892
	cmp	DWORD PTR _hr$[ebp], -2005270523	; 887a0005H
	jne	SHORT $LN7@DXUTRender
; Line 2896
	call	?DXUTHandleDeviceRemoved@@YAJXZ		; DXUTHandleDeviceRemoved
	test	eax, eax
	jge	SHORT $LN6@DXUTRender
; Line 2899
	push	-2147219190				; 8004090aH
	call	?DXUTDisplayErrorMessage@@YAXJ@Z	; DXUTDisplayErrorMessage
	add	esp, 4
; Line 2900
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
; Line 2901
	jmp	SHORT $LN33@DXUTRender
$LN6@DXUTRender:
; Line 2903
	jmp	SHORT $LN3@DXUTRender
$LN7@DXUTRender:
; Line 2904
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@DXUTRender
; Line 2906
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DXUTRender
; Line 2910
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
$LN3@DXUTRender:
; Line 2915
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentFrameNumber@DXUTState@@QAEHXZ ; DXUTState::GetCurrentFrameNumber
	mov	DWORD PTR _nFrame$[ebp], eax
; Line 2916
	mov	ecx, DWORD PTR _nFrame$[ebp]
	add	ecx, 1
	mov	DWORD PTR _nFrame$[ebp], ecx
; Line 2917
	mov	edx, DWORD PTR _nFrame$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetCurrentFrameNumber@DXUTState@@QAEXH@Z ; DXUTState::SetCurrentFrameNumber
; Line 2920
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ ; DXUTState::GetOverrideQuitAfterFrame
	test	eax, eax
	je	SHORT $LN1@DXUTRender
; Line 2922
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideQuitAfterFrame@DXUTState@@QAEHXZ ; DXUTState::GetOverrideQuitAfterFrame
	cmp	DWORD PTR _nFrame$[ebp], eax
	jle	SHORT $LN1@DXUTRender
; Line 2923
	push	0
	call	?DXUTShutdown@@YGXH@Z			; DXUTShutdown
$LN1@DXUTRender:
$LN33@DXUTRender:
; Line 2927
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@DXUTRender
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 120				; 00000078H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN42@DXUTRender:
	DD	4
	DD	$LN41@DXUTRender
$LN41@DXUTRender:
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN37@DXUTRender
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN38@DXUTRender
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN39@DXUTRender
	DD	-92					; ffffffa4H
	DD	16					; 00000010H
	DD	$LN40@DXUTRender
$LN40@DXUTRender:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN39@DXUTRender:
	DB	102					; 00000066H
	DB	69					; 00000045H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN38@DXUTRender:
	DB	102					; 00000066H
	DB	65					; 00000041H
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN37@DXUTRender:
	DB	102					; 00000066H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?DXUTRender3DEnvironment@@YGXXZ ENDP			; DXUTRender3DEnvironment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv210 = -52						; size = 4
_msg$ = -44						; size = 28
_bGotMsg$ = -9						; size = 1
_hWnd$ = -8						; size = 4
_hr$ = -4						; size = 4
_hAccel$ = 8						; size = 4
?DXUTMainLoop@@YGJPAUHACCEL__@@@Z PROC			; DXUTMainLoop
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 1548
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1552
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN21@DXUTMainLo
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetInsideMainloop@DXUTState@@QAE_NXZ	; DXUTState::GetInsideMainloop
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN22@DXUTMainLo
$LN21@DXUTMainLo:
; Line 1554
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	test	eax, eax
	je	SHORT $LN19@DXUTMainLo
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN20@DXUTMainLo
$LN19@DXUTMainLo:
; Line 1555
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
$LN20@DXUTMainLo:
; Line 1556
	push	1
	push	OFFSET $SG151971
	push	-2147467259				; 80004005H
	push	1556					; 00000614H
	push	OFFSET $SG151972
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN23@DXUTMainLo
$LN22@DXUTMainLo:
; Line 1559
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideMainloop@DXUTState@@QAEX_N@Z	; DXUTState::SetInsideMainloop
; Line 1563
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceCreated@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceCreated
	movzx	edx, al
	test	edx, edx
	jne	$LN18@DXUTMainLo
; Line 1565
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceCreateCalled@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceCreateCalled
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@DXUTMainLo
; Line 1567
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	test	eax, eax
	je	SHORT $LN15@DXUTMainLo
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN16@DXUTMainLo
$LN15@DXUTMainLo:
; Line 1568
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
$LN16@DXUTMainLo:
; Line 1569
	mov	eax, -2147467259			; 80004005H
	jmp	$LN23@DXUTMainLo
$LN17@DXUTMainLo:
; Line 1572
	push	600					; 00000258H
	push	800					; 00000320H
	push	1
	push	40960					; 0000a000H
	call	?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ; DXUTCreateDevice
	mov	DWORD PTR _hr$[ebp], eax
; Line 1573
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN18@DXUTMainLo
; Line 1575
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	test	eax, eax
	je	SHORT $LN12@DXUTMainLo
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN13@DXUTMainLo
$LN12@DXUTMainLo:
; Line 1576
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
$LN13@DXUTMainLo:
; Line 1577
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN23@DXUTMainLo
$LN18@DXUTMainLo:
; Line 1581
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	mov	DWORD PTR _hWnd$[ebp], eax
; Line 1586
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXUTInited@DXUTState@@QAE_NXZ	; DXUTState::GetDXUTInited
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@DXUTMainLo
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowCreated@DXUTState@@QAE_NXZ	; DXUTState::GetWindowCreated
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@DXUTMainLo
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceCreated@DXUTState@@QAE_NXZ	; DXUTState::GetDeviceCreated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@DXUTMainLo
$LN10@DXUTMainLo:
; Line 1588
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	test	eax, eax
	je	SHORT $LN8@DXUTMainLo
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetExitCode@DXUTState@@QAEHXZ		; DXUTState::GetExitCode
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN9@DXUTMainLo
$LN8@DXUTMainLo:
; Line 1589
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetExitCode@DXUTState@@QAEXH@Z		; DXUTState::SetExitCode
$LN9@DXUTMainLo:
; Line 1590
	push	1
	push	OFFSET $SG151989
	push	-2147467259				; 80004005H
	push	1590					; 00000636H
	push	OFFSET $SG151990
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN23@DXUTMainLo
$LN11@DXUTMainLo:
; Line 1596
	mov	DWORD PTR _msg$[ebp+4], 0
; Line 1597
	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	DWORD PTR __imp__PeekMessageW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@DXUTMainLo:
; Line 1599
	cmp	DWORD PTR _msg$[ebp+4], 18		; 00000012H
	je	$LN6@DXUTMainLo
; Line 1602
	mov	esi, esp
	push	1
	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__PeekMessageW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN25@DXUTMainLo
	mov	DWORD PTR tv210[ebp], 1
	jmp	SHORT $LN26@DXUTMainLo
$LN25@DXUTMainLo:
	mov	DWORD PTR tv210[ebp], 0
$LN26@DXUTMainLo:
	mov	al, BYTE PTR tv210[ebp]
	mov	BYTE PTR _bGotMsg$[ebp], al
; Line 1604
	movzx	ecx, BYTE PTR _bGotMsg$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@DXUTMainLo
; Line 1608
	cmp	DWORD PTR _hAccel$[ebp], 0
	je	SHORT $LN3@DXUTMainLo
	cmp	DWORD PTR _hWnd$[ebp], 0
	je	SHORT $LN3@DXUTMainLo
	mov	esi, esp
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	eax, DWORD PTR _hAccel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__TranslateAcceleratorW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@DXUTMainLo
$LN3@DXUTMainLo:
; Line 1610
	mov	esi, esp
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__TranslateMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1611
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@DXUTMainLo:
; Line 1614
	jmp	SHORT $LN2@DXUTMainLo
$LN5@DXUTMainLo:
; Line 1617
	call	?DXUTRender3DEnvironment@@YGXXZ		; DXUTRender3DEnvironment
$LN2@DXUTMainLo:
; Line 1619
	jmp	$LN7@DXUTMainLo
$LN6@DXUTMainLo:
; Line 1622
	cmp	DWORD PTR _hAccel$[ebp], 0
	je	SHORT $LN1@DXUTMainLo
; Line 1623
	mov	esi, esp
	mov	ecx, DWORD PTR _hAccel$[ebp]
	push	ecx
	call	DWORD PTR __imp__DestroyAcceleratorTable@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DXUTMainLo:
; Line 1625
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInsideMainloop@DXUTState@@QAEX_N@Z	; DXUTState::SetInsideMainloop
; Line 1627
	xor	eax, eax
$LN23@DXUTMainLo:
; Line 1628
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@DXUTMainLo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN29@DXUTMainLo:
	DD	1
	DD	$LN28@DXUTMainLo
$LN28@DXUTMainLo:
	DD	-44					; ffffffd4H
	DD	28					; 0000001cH
	DD	$LN27@DXUTMainLo
$LN27@DXUTMainLo:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?DXUTMainLoop@@YGJPAUHACCEL__@@@Z ENDP			; DXUTMainLoop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_pDeviceSettings$ = 8					; size = 4
_bClipWindowToSingleAdapter$ = 12			; size = 1
?DXUTCreateDeviceFromSettings@@YGJPAUDXUTDeviceSettings@@_N@Z PROC ; DXUTCreateDeviceFromSettings
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 1735
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1736
	cmp	DWORD PTR _pDeviceSettings$[ebp], 0
	jne	SHORT $LN5@DXUTCreate
; Line 1737
	mov	eax, -2147024809			; 80070057H
	jmp	$LN6@DXUTCreate
$LN5@DXUTCreate:
; Line 1741
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceCreateCalled
; Line 1745
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowCreated@DXUTState@@QAE_NXZ	; DXUTState::GetWindowCreated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@DXUTCreate
; Line 1749
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowCreateCalled@DXUTState@@QAE_NXZ ; DXUTState::GetWindowCreateCalled
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@DXUTCreate
; Line 1750
	mov	eax, -2147467259			; 80004005H
	jmp	$LN6@DXUTCreate
$LN3@DXUTCreate:
; Line 1754
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	0
	push	0
	push	0
	push	OFFSET $SG152059
	call	?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
	mov	DWORD PTR _hr$[ebp], eax
; Line 1755
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@DXUTCreate
; Line 1756
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN6@DXUTCreate
$LN4@DXUTCreate:
; Line 1759
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	push	edx
	call	?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTUpdateDeviceSettingsWithOverrides
	add	esp, 4
; Line 1761
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 1762
	mov	edx, DWORD PTR _pDeviceSettings$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
; Line 1763
	mov	ecx, DWORD PTR _pDeviceSettings$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 1764
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
; Line 1768
	movzx	edx, BYTE PTR _bClipWindowToSingleAdapter$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDeviceSettings$[ebp]
	push	eax
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 1769
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@DXUTCreate
; Line 1770
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN6@DXUTCreate
$LN1@DXUTCreate:
; Line 1772
	xor	eax, eax
$LN6@DXUTCreate:
; Line 1773
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DXUTCreateDeviceFromSettings@@YGJPAUDXUTDeviceSettings@@_N@Z ENDP ; DXUTCreateDeviceFromSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_osv$1 = -404						; size = 284
_deviceSettings$ = -112					; size = 100
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_reqFL$ = 8						; size = 4
_bWindowed$ = 12					; size = 1
_nSuggestedWidth$ = 16					; size = 4
_nSuggestedHeight$ = 20					; size = 4
?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z PROC	; DXUTCreateDevice
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 1638
	push	ebp
	mov	ebp, esp
	sub	esp, 408				; 00000198H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-408]
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1639
	mov	DWORD PTR _hr$[ebp], 0
; Line 1642
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@DXUTCreate
; Line 1643
	push	1
	push	OFFSET $SG152013
	push	-2147467259				; 80004005H
	push	1643					; 0000066bH
	push	OFFSET $SG152014
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN16@DXUTCreate
$LN15@DXUTCreate:
; Line 1645
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetDeviceCreateCalled
; Line 1649
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowCreated@DXUTState@@QAE_NXZ	; DXUTState::GetWindowCreated
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@DXUTCreate
; Line 1653
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowCreateCalled@DXUTState@@QAE_NXZ ; DXUTState::GetWindowCreateCalled
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN13@DXUTCreate
; Line 1654
	mov	eax, -2147467259			; 80004005H
	jmp	$LN16@DXUTCreate
$LN13@DXUTCreate:
; Line 1658
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	0
	push	0
	push	0
	push	OFFSET $SG152018
	call	?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
	mov	DWORD PTR _hr$[ebp], eax
; Line 1659
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN14@DXUTCreate
; Line 1660
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN16@DXUTCreate
$LN14@DXUTCreate:
; Line 1664
	lea	eax, DWORD PTR _deviceSettings$[ebp]
	push	eax
	call	?DXUTApplyDefaultDeviceSettings@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTApplyDefaultDeviceSettings
	add	esp, 4
; Line 1665
	mov	ecx, DWORD PTR _reqFL$[ebp]
	mov	DWORD PTR _deviceSettings$[ebp], ecx
; Line 1666
	mov	edx, DWORD PTR _nSuggestedWidth$[ebp]
	mov	DWORD PTR _deviceSettings$[ebp+16], edx
; Line 1667
	mov	eax, DWORD PTR _nSuggestedHeight$[ebp]
	mov	DWORD PTR _deviceSettings$[ebp+20], eax
; Line 1668
	movzx	ecx, BYTE PTR _bWindowed$[ebp]
	mov	DWORD PTR _deviceSettings$[ebp+64], ecx
; Line 1670
	lea	edx, DWORD PTR _deviceSettings$[ebp]
	push	edx
	call	?DXUTUpdateDeviceSettingsWithOverrides@@YAXPAUDXUTDeviceSettings@@@Z ; DXUTUpdateDeviceSettingsWithOverrides
	add	esp, 4
; Line 1672
	mov	eax, DWORD PTR _deviceSettings$[ebp+16]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferWidthAtModeChange
; Line 1673
	mov	ecx, DWORD PTR _deviceSettings$[ebp+20]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetWindowBackBufferHeightAtModeChange
; Line 1674
	mov	edx, DWORD PTR _deviceSettings$[ebp+16]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferWidthAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferWidthAtModeChange
; Line 1675
	mov	eax, DWORD PTR _deviceSettings$[ebp+20]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFullScreenBackBufferHeightAtModeChange@DXUTState@@QAEXI@Z ; DXUTState::SetFullScreenBackBufferHeightAtModeChange
; Line 1679
	push	1
	lea	ecx, DWORD PTR _deviceSettings$[ebp]
	push	ecx
	call	?DXUTChangeDevice@@YAJPAUDXUTDeviceSettings@@_N@Z ; DXUTChangeDevice
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 1681
	cmp	DWORD PTR _hr$[ebp], -2147219199	; 80040901H
	jne	$LN11@DXUTCreate
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMessageWhenD3D11NotAvailable@DXUTState@@QAE_NXZ ; DXUTState::GetMessageWhenD3D11NotAvailable
	movzx	edx, al
	test	edx, edx
	je	$LN11@DXUTCreate
; Line 1684
	push	284					; 0000011cH
	push	0
	lea	eax, DWORD PTR _osv$1[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1685
	mov	DWORD PTR _osv$1[ebp], 284		; 0000011cH
; Line 1687
	mov	esi, esp
	lea	ecx, DWORD PTR _osv$1[ebp]
	push	ecx
	call	DWORD PTR __imp__GetVersionExW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1691
	cmp	DWORD PTR _osv$1[ebp+4], 6
	ja	SHORT $LN9@DXUTCreate
	cmp	DWORD PTR _osv$1[ebp+4], 6
	jne	SHORT $LN8@DXUTCreate
	cmp	DWORD PTR _osv$1[ebp+8], 1
	jae	SHORT $LN9@DXUTCreate
$LN8@DXUTCreate:
	cmp	DWORD PTR _osv$1[ebp+4], 6
	jne	SHORT $LN10@DXUTCreate
	cmp	DWORD PTR _osv$1[ebp+8], 0
	jne	SHORT $LN10@DXUTCreate
	cmp	DWORD PTR _osv$1[ebp+12], 6002		; 00001772H
	jbe	SHORT $LN10@DXUTCreate
$LN9@DXUTCreate:
; Line 1693
	mov	esi, esp
	push	48					; 00000030H
	push	OFFSET $SG152032
	push	OFFSET $SG152033
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN11@DXUTCreate
$LN10@DXUTCreate:
; Line 1697
	cmp	DWORD PTR _osv$1[ebp+4], 6
	jne	SHORT $LN6@DXUTCreate
	cmp	DWORD PTR _osv$1[ebp+8], 0
	jne	SHORT $LN6@DXUTCreate
	cmp	DWORD PTR _osv$1[ebp+12], 6002		; 00001772H
	jne	SHORT $LN6@DXUTCreate
; Line 1702
	mov	esi, esp
	push	48					; 00000030H
	push	OFFSET $SG152036
	push	OFFSET $SG152037
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN11@DXUTCreate
$LN6@DXUTCreate:
; Line 1704
	cmp	DWORD PTR _osv$1[ebp+4], 6
	jne	SHORT $LN4@DXUTCreate
	cmp	DWORD PTR _osv$1[ebp+8], 0
	jne	SHORT $LN4@DXUTCreate
; Line 1708
	mov	esi, esp
	push	48					; 00000030H
	push	OFFSET $SG152040
	push	OFFSET $SG152041
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1710
	jmp	SHORT $LN11@DXUTCreate
$LN4@DXUTCreate:
; Line 1712
	mov	esi, esp
	push	48					; 00000030H
	push	OFFSET $SG152043
	push	OFFSET $SG152044
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@DXUTCreate:
; Line 1716
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@DXUTCreate
; Line 1717
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN16@DXUTCreate
$LN1@DXUTCreate:
; Line 1724
	mov	eax, DWORD PTR _hr$[ebp]
$LN16@DXUTCreate:
; Line 1725
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@DXUTCreate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 408				; 00000198H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN21@DXUTCreate:
	DD	2
	DD	$LN20@DXUTCreate
$LN20@DXUTCreate:
	DD	-112					; ffffff90H
	DD	100					; 00000064H
	DD	$LN18@DXUTCreate
	DD	-404					; fffffe6cH
	DD	284					; 0000011cH
	DD	$LN19@DXUTCreate
$LN19@DXUTCreate:
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	118					; 00000076H
	DB	0
$LN18@DXUTCreate:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ENDP	; DXUTCreateDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv496 = -212						; size = 4
tv478 = -208						; size = 4
tv469 = -204						; size = 4
tv460 = -200						; size = 4
tv435 = -193						; size = 1
tv229 = -192						; size = 4
tv182 = -188						; size = 4
tv178 = -184						; size = 4
tv174 = -180						; size = 4
tv170 = -176						; size = 4
tv166 = -172						; size = 4
tv74 = -168						; size = 4
tv70 = -164						; size = 4
_hMenu$1 = -160						; size = 4
_bTimePaused$2 = -153					; size = 1
_rcCurrentClient$3 = -148				; size = 16
_pSwapChain$4 = -128					; size = 4
_dwFlags$5 = -124					; size = 4
_pCallbackFrameRender$6 = -120				; size = 4
_pDeferred$7 = -116					; size = 4
_pd3dDevice$8 = -112					; size = 4
_fElapsedTime$9 = -108					; size = 4
_fTime$10 = -104					; size = 8
_hr$11 = -96						; size = 4
_nResult$12 = -92					; size = 4
_bNoFurtherProcessing$13 = -81				; size = 1
_pCallbackMsgProc$ = -76				; size = 4
_pCallbackMouse$14 = -72				; size = 4
_bMouseButtons$15 = -68					; size = 4
_bSideButton2$16 = -61					; size = 1
_bSideButton1$17 = -60					; size = 1
_bMiddleButton$18 = -59					; size = 1
_bRightButton$19 = -58					; size = 1
_bLeftButton$20 = -57					; size = 1
_nMouseButtonState$21 = -56				; size = 4
_nMouseWheelDelta$22 = -52				; size = 4
_pt$23 = -44						; size = 8
_yPos$24 = -32						; size = 4
_xPos$25 = -28						; size = 4
_pCallbackKeyboard$26 = -24				; size = 4
_bKeys$27 = -20						; size = 4
_bAltDown$28 = -13					; size = 1
_dwMask$29 = -12					; size = 4
_bKeyDown$30 = -5					; size = 1
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z PROC		; DXUTStaticWndProc
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 1146
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1152
	cmp	DWORD PTR _uMsg$[ebp], 256		; 00000100H
	je	SHORT $LN79@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 260		; 00000104H
	je	SHORT $LN79@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 257		; 00000101H
	je	SHORT $LN79@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 261		; 00000105H
	jne	$LN78@DXUTStatic
$LN79@DXUTStatic:
; Line 1154
	cmp	DWORD PTR _uMsg$[ebp], 256		; 00000100H
	je	SHORT $LN83@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 260		; 00000104H
	je	SHORT $LN83@DXUTStatic
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN84@DXUTStatic
$LN83@DXUTStatic:
	mov	DWORD PTR tv70[ebp], 1
$LN84@DXUTStatic:
	mov	al, BYTE PTR tv70[ebp]
	mov	BYTE PTR _bKeyDown$30[ebp], al
; Line 1155
	mov	DWORD PTR _dwMask$29[ebp], 536870912	; 20000000H
; Line 1156
	mov	ecx, DWORD PTR _lParam$[ebp]
	and	ecx, DWORD PTR _dwMask$29[ebp]
	je	SHORT $LN85@DXUTStatic
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN86@DXUTStatic
$LN85@DXUTStatic:
	mov	DWORD PTR tv74[ebp], 0
$LN86@DXUTStatic:
	mov	dl, BYTE PTR tv74[ebp]
	mov	BYTE PTR _bAltDown$28[ebp], dl
; Line 1158
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeys@DXUTState@@QAEPA_NXZ		; DXUTState::GetKeys
	mov	DWORD PTR _bKeys$27[ebp], eax
; Line 1159
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	mov	edx, DWORD PTR _bKeys$27[ebp]
	mov	al, BYTE PTR _bKeyDown$30[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1161
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeyboardFunc@DXUTState@@QAEP6GXI_N0PAX@ZXZ ; DXUTState::GetKeyboardFunc
	mov	DWORD PTR _pCallbackKeyboard$26[ebp], eax
; Line 1162
	cmp	DWORD PTR _pCallbackKeyboard$26[ebp], 0
	je	SHORT $LN78@DXUTStatic
; Line 1163
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetKeyboardFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetKeyboardFuncUserContext
	mov	esi, esp
	push	eax
	movzx	ecx, BYTE PTR _bAltDown$28[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bKeyDown$30[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	call	DWORD PTR _pCallbackKeyboard$26[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN78@DXUTStatic:
; Line 1180
	cmp	DWORD PTR _uMsg$[ebp], 513		; 00000201H
	je	$LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 514		; 00000202H
	je	$LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 515		; 00000203H
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 519		; 00000207H
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 520		; 00000208H
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 521		; 00000209H
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 516		; 00000204H
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 517		; 00000205H
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 518		; 00000206H
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 523		; 0000020bH
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 524		; 0000020cH
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 525		; 0000020dH
	je	SHORT $LN76@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 522		; 0000020aH
	je	SHORT $LN76@DXUTStatic
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetNotifyOnMouseMove@DXUTState@@QAE_NXZ ; DXUTState::GetNotifyOnMouseMove
	movzx	ecx, al
	test	ecx, ecx
	je	$LN73@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 512		; 00000200H
	jne	$LN73@DXUTStatic
$LN76@DXUTStatic:
; Line 1182
	mov	edx, DWORD PTR _lParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movsx	eax, dx
	mov	DWORD PTR _xPos$25[ebp], eax
; Line 1183
	mov	ecx, DWORD PTR _lParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movsx	edx, cx
	mov	DWORD PTR _yPos$24[ebp], edx
; Line 1185
	cmp	DWORD PTR _uMsg$[ebp], 522		; 0000020aH
	jne	SHORT $LN75@DXUTStatic
; Line 1190
	mov	eax, DWORD PTR _xPos$25[ebp]
	mov	DWORD PTR _pt$23[ebp], eax
	mov	ecx, DWORD PTR _yPos$24[ebp]
	mov	DWORD PTR _pt$23[ebp+4], ecx
; Line 1191
	mov	esi, esp
	lea	edx, DWORD PTR _pt$23[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ScreenToClient@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1192
	mov	ecx, DWORD PTR _pt$23[ebp]
	mov	DWORD PTR _xPos$25[ebp], ecx
	mov	edx, DWORD PTR _pt$23[ebp+4]
	mov	DWORD PTR _yPos$24[ebp], edx
$LN75@DXUTStatic:
; Line 1195
	mov	DWORD PTR _nMouseWheelDelta$22[ebp], 0
; Line 1196
	cmp	DWORD PTR _uMsg$[ebp], 522		; 0000020aH
	jne	SHORT $LN74@DXUTStatic
; Line 1197
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movsx	ecx, ax
	mov	DWORD PTR _nMouseWheelDelta$22[ebp], ecx
$LN74@DXUTStatic:
; Line 1199
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR _nMouseButtonState$21[ebp], eax
; Line 1200
	mov	ecx, DWORD PTR _nMouseButtonState$21[ebp]
	and	ecx, 1
	je	SHORT $LN87@DXUTStatic
	mov	DWORD PTR tv166[ebp], 1
	jmp	SHORT $LN88@DXUTStatic
$LN87@DXUTStatic:
	mov	DWORD PTR tv166[ebp], 0
$LN88@DXUTStatic:
	mov	dl, BYTE PTR tv166[ebp]
	mov	BYTE PTR _bLeftButton$20[ebp], dl
; Line 1201
	mov	eax, DWORD PTR _nMouseButtonState$21[ebp]
	and	eax, 2
	je	SHORT $LN89@DXUTStatic
	mov	DWORD PTR tv170[ebp], 1
	jmp	SHORT $LN90@DXUTStatic
$LN89@DXUTStatic:
	mov	DWORD PTR tv170[ebp], 0
$LN90@DXUTStatic:
	mov	cl, BYTE PTR tv170[ebp]
	mov	BYTE PTR _bRightButton$19[ebp], cl
; Line 1202
	mov	edx, DWORD PTR _nMouseButtonState$21[ebp]
	and	edx, 16					; 00000010H
	je	SHORT $LN91@DXUTStatic
	mov	DWORD PTR tv174[ebp], 1
	jmp	SHORT $LN92@DXUTStatic
$LN91@DXUTStatic:
	mov	DWORD PTR tv174[ebp], 0
$LN92@DXUTStatic:
	mov	al, BYTE PTR tv174[ebp]
	mov	BYTE PTR _bMiddleButton$18[ebp], al
; Line 1203
	mov	ecx, DWORD PTR _nMouseButtonState$21[ebp]
	and	ecx, 32					; 00000020H
	je	SHORT $LN93@DXUTStatic
	mov	DWORD PTR tv178[ebp], 1
	jmp	SHORT $LN94@DXUTStatic
$LN93@DXUTStatic:
	mov	DWORD PTR tv178[ebp], 0
$LN94@DXUTStatic:
	mov	dl, BYTE PTR tv178[ebp]
	mov	BYTE PTR _bSideButton1$17[ebp], dl
; Line 1204
	mov	eax, DWORD PTR _nMouseButtonState$21[ebp]
	and	eax, 64					; 00000040H
	je	SHORT $LN95@DXUTStatic
	mov	DWORD PTR tv182[ebp], 1
	jmp	SHORT $LN96@DXUTStatic
$LN95@DXUTStatic:
	mov	DWORD PTR tv182[ebp], 0
$LN96@DXUTStatic:
	mov	cl, BYTE PTR tv182[ebp]
	mov	BYTE PTR _bSideButton2$16[ebp], cl
; Line 1206
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMouseButtons@DXUTState@@QAEPA_NXZ	; DXUTState::GetMouseButtons
	mov	DWORD PTR _bMouseButtons$15[ebp], eax
; Line 1207
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _bMouseButtons$15[ebp]
	mov	dl, BYTE PTR _bLeftButton$20[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 1208
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _bMouseButtons$15[ebp]
	mov	dl, BYTE PTR _bMiddleButton$18[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 1209
	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _bMouseButtons$15[ebp]
	mov	dl, BYTE PTR _bRightButton$19[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 1210
	mov	eax, 1
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _bMouseButtons$15[ebp]
	mov	al, BYTE PTR _bSideButton1$17[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1211
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _bMouseButtons$15[ebp]
	mov	al, BYTE PTR _bSideButton2$16[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1213
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMouseFunc@DXUTState@@QAEP6GX_N0000HHHPAX@ZXZ ; DXUTState::GetMouseFunc
	mov	DWORD PTR _pCallbackMouse$14[ebp], eax
; Line 1214
	cmp	DWORD PTR _pCallbackMouse$14[ebp], 0
	je	SHORT $LN73@DXUTStatic
; Line 1216
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMouseFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetMouseFuncUserContext
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _yPos$24[ebp]
	push	ecx
	mov	edx, DWORD PTR _xPos$25[ebp]
	push	edx
	mov	eax, DWORD PTR _nMouseWheelDelta$22[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bSideButton2$16[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bSideButton1$17[ebp]
	push	edx
	movzx	eax, BYTE PTR _bMiddleButton$18[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bRightButton$19[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bLeftButton$20[ebp]
	push	edx
	call	DWORD PTR _pCallbackMouse$14[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN73@DXUTStatic:
; Line 1223
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowMsgFunc@DXUTState@@QAEP6GJPAUHWND__@@IIJPA_NPAX@ZXZ ; DXUTState::GetWindowMsgFunc
	mov	DWORD PTR _pCallbackMsgProc$[ebp], eax
; Line 1224
	cmp	DWORD PTR _pCallbackMsgProc$[ebp], 0
	je	SHORT $LN71@DXUTStatic
; Line 1226
	mov	BYTE PTR _bNoFurtherProcessing$13[ebp], 0
; Line 1228
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowMsgFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetWindowMsgFuncUserContext
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR _bNoFurtherProcessing$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR _pCallbackMsgProc$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResult$12[ebp], eax
; Line 1229
	movzx	edx, BYTE PTR _bNoFurtherProcessing$13[ebp]
	test	edx, edx
	je	SHORT $LN71@DXUTStatic
; Line 1230
	mov	eax, DWORD PTR _nResult$12[ebp]
	jmp	$LN1@DXUTStatic
$LN71@DXUTStatic:
; Line 1233
	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv229[ebp], eax
	cmp	DWORD PTR tv229[ebp], 256		; 00000100H
	ja	SHORT $LN102@DXUTStatic
	cmp	DWORD PTR tv229[ebp], 256		; 00000100H
	je	$LN16@DXUTStatic
	mov	ecx, DWORD PTR tv229[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv229[ebp], ecx
	cmp	DWORD PTR tv229[ebp], 130		; 00000082H
	ja	$LN69@DXUTStatic
	mov	edx, DWORD PTR tv229[ebp]
	movzx	eax, BYTE PTR $LN104@DXUTStatic[edx]
	jmp	DWORD PTR $LN110@DXUTStatic[eax*4]
$LN102@DXUTStatic:
	cmp	DWORD PTR tv229[ebp], 530		; 00000212H
	ja	SHORT $LN103@DXUTStatic
	cmp	DWORD PTR tv229[ebp], 530		; 00000212H
	je	$LN30@DXUTStatic
	cmp	DWORD PTR tv229[ebp], 274		; 00000112H
	je	$LN21@DXUTStatic
	cmp	DWORD PTR tv229[ebp], 288		; 00000120H
	je	$LN29@DXUTStatic
	cmp	DWORD PTR tv229[ebp], 529		; 00000211H
	je	$LN31@DXUTStatic
	jmp	$LN69@DXUTStatic
$LN103@DXUTStatic:
	cmp	DWORD PTR tv229[ebp], 536		; 00000218H
	je	$LN26@DXUTStatic
	cmp	DWORD PTR tv229[ebp], 561		; 00000231H
	je	$LN42@DXUTStatic
	cmp	DWORD PTR tv229[ebp], 562		; 00000232H
	je	$LN41@DXUTStatic
	jmp	$LN69@DXUTStatic
$LN68@DXUTStatic:
; Line 1239
	call	?DXUTIsRenderingPaused@@YG_NXZ		; DXUTIsRenderingPaused
	movzx	ecx, al
	test	ecx, ecx
	je	$LN59@DXUTStatic
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceObjectsCreated@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsCreated
	movzx	edx, al
	test	edx, edx
	je	$LN59@DXUTStatic
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDeviceObjectsReset@DXUTState@@QAE_NXZ ; DXUTState::GetDeviceObjectsReset
	movzx	eax, al
	test	eax, eax
	je	$LN59@DXUTStatic
; Line 1242
	call	?DXUTGetTime@@YGNXZ			; DXUTGetTime
	fstp	QWORD PTR _fTime$10[ebp]
; Line 1243
	call	?DXUTGetElapsedTime@@YGMXZ		; DXUTGetElapsedTime
	fstp	DWORD PTR _fElapsedTime$9[ebp]
; Line 1246
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$8[ebp], eax
; Line 1247
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _pDeferred$7[ebp], eax
; Line 1248
	cmp	DWORD PTR _pd3dDevice$8[ebp], 0
	je	$LN59@DXUTStatic
; Line 1250
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11FrameRenderFunc@DXUTState@@QAEP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@ZXZ ; DXUTState::GetD3D11FrameRenderFunc
	mov	DWORD PTR _pCallbackFrameRender$6[ebp], eax
; Line 1252
	cmp	DWORD PTR _pCallbackFrameRender$6[ebp], 0
	je	SHORT $LN65@DXUTStatic
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN65@DXUTStatic
; Line 1255
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetD3D11FrameRenderFuncUserContext@DXUTState@@QAEPAXXZ ; DXUTState::GetD3D11FrameRenderFuncUserContext
	mov	esi, esp
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _fElapsedTime$9[ebp]
	movss	DWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR _fTime$10[ebp]
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _pDeferred$7[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$8[ebp]
	push	eax
	call	DWORD PTR _pCallbackFrameRender$6[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN65@DXUTStatic:
; Line 1258
	mov	DWORD PTR _dwFlags$5[ebp], 0
; Line 1259
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN64@DXUTStatic
; Line 1260
	mov	DWORD PTR _dwFlags$5[ebp], 1
; Line 1261
	jmp	SHORT $LN63@DXUTStatic
$LN64@DXUTStatic:
; Line 1262
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	edx, DWORD PTR [eax+84]
	mov	DWORD PTR _dwFlags$5[ebp], edx
$LN63@DXUTStatic:
; Line 1264
	call	?DXUTGetDXGISwapChain@@YGPAUIDXGISwapChain@@XZ ; DXUTGetDXGISwapChain
	mov	DWORD PTR _pSwapChain$4[ebp], eax
; Line 1265
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCurrentDeviceSettings@DXUTState@@QAEPAUDXUTDeviceSettings@@XZ ; DXUTState::GetCurrentDeviceSettings
	mov	esi, esp
	mov	eax, DWORD PTR [eax+84]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pSwapChain$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSwapChain$4[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$11[ebp], eax
; Line 1266
	cmp	DWORD PTR _hr$11[ebp], 142213121	; 087a0001H
	jne	SHORT $LN62@DXUTStatic
; Line 1270
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
	jmp	SHORT $LN59@DXUTStatic
$LN62@DXUTStatic:
; Line 1272
	cmp	DWORD PTR _hr$11[ebp], 0
	jl	SHORT $LN59@DXUTStatic
; Line 1274
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetRenderingOccluded@DXUTState@@QAE_NXZ ; DXUTState::GetRenderingOccluded
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN59@DXUTStatic
; Line 1278
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetRenderingOccluded@DXUTState@@QAEX_N@Z ; DXUTState::SetRenderingOccluded
$LN59@DXUTStatic:
; Line 1284
	jmp	$LN69@DXUTStatic
$LN58@DXUTStatic:
; Line 1289
	cmp	DWORD PTR _wParam$[ebp], 1
	jne	SHORT $LN57@DXUTStatic
; Line 1291
	push	1
	push	1
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1293
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMinimized@DXUTState@@QAEX_N@Z	; DXUTState::SetMinimized
; Line 1294
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMaximized@DXUTState@@QAEX_N@Z	; DXUTState::SetMaximized
; Line 1296
	jmp	$LN44@DXUTStatic
$LN57@DXUTStatic:
; Line 1299
	mov	esi, esp
	lea	eax, DWORD PTR _rcCurrentClient$3[ebp]
	push	eax
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1300
	cmp	DWORD PTR _rcCurrentClient$3[ebp+4], 0
	jne	SHORT $LN55@DXUTStatic
	cmp	DWORD PTR _rcCurrentClient$3[ebp+12], 0
	jne	SHORT $LN55@DXUTStatic
	jmp	$LN44@DXUTStatic
$LN55@DXUTStatic:
; Line 1307
	cmp	DWORD PTR _wParam$[ebp], 2
	jne	SHORT $LN53@DXUTStatic
; Line 1309
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMinimized@DXUTState@@QAE_NXZ	; DXUTState::GetMinimized
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN52@DXUTStatic
; Line 1310
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
$LN52@DXUTStatic:
; Line 1311
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMinimized@DXUTState@@QAEX_N@Z	; DXUTState::SetMinimized
; Line 1312
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMaximized@DXUTState@@QAEX_N@Z	; DXUTState::SetMaximized
; Line 1313
	call	?DXUTCheckForWindowSizeChange@@YAXXZ	; DXUTCheckForWindowSizeChange
; Line 1314
	call	?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
	jmp	$LN44@DXUTStatic
$LN53@DXUTStatic:
; Line 1316
	cmp	DWORD PTR _wParam$[ebp], 0
	jne	$LN44@DXUTStatic
; Line 1319
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMaximized@DXUTState@@QAE_NXZ	; DXUTState::GetMaximized
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN49@DXUTStatic
; Line 1321
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMaximized@DXUTState@@QAEX_N@Z	; DXUTState::SetMaximized
; Line 1322
	call	?DXUTCheckForWindowSizeChange@@YAXXZ	; DXUTCheckForWindowSizeChange
; Line 1323
	call	?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
	jmp	SHORT $LN44@DXUTStatic
$LN49@DXUTStatic:
; Line 1325
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMinimized@DXUTState@@QAE_NXZ	; DXUTState::GetMinimized
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN47@DXUTStatic
; Line 1327
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1328
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMinimized@DXUTState@@QAEX_N@Z	; DXUTState::SetMinimized
; Line 1329
	call	?DXUTCheckForWindowSizeChange@@YAXXZ	; DXUTCheckForWindowSizeChange
; Line 1330
	call	?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
	jmp	SHORT $LN44@DXUTStatic
$LN47@DXUTStatic:
; Line 1332
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetInSizeMove@DXUTState@@QAE_NXZ	; DXUTState::GetInSizeMove
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN45@DXUTStatic
; Line 1339
	jmp	SHORT $LN44@DXUTStatic
$LN45@DXUTStatic:
; Line 1343
	call	?DXUTCheckForWindowSizeChange@@YAXXZ	; DXUTCheckForWindowSizeChange
; Line 1344
	call	?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
$LN44@DXUTStatic:
; Line 1348
	jmp	$LN69@DXUTStatic
$LN43@DXUTStatic:
; Line 1351
	mov	edx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR [edx+24], 200			; 000000c8H
; Line 1352
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR [eax+28], 200			; 000000c8H
; Line 1353
	jmp	$LN69@DXUTStatic
$LN42@DXUTStatic:
; Line 1357
	push	1
	push	1
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1358
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInSizeMove@DXUTState@@QAEX_N@Z	; DXUTState::SetInSizeMove
; Line 1359
	jmp	$LN69@DXUTStatic
$LN41@DXUTStatic:
; Line 1362
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1363
	call	?DXUTCheckForWindowSizeChange@@YAXXZ	; DXUTCheckForWindowSizeChange
; Line 1364
	call	?DXUTCheckForWindowChangingMonitors@@YAXXZ ; DXUTCheckForWindowChangingMonitors
; Line 1365
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetInSizeMove@DXUTState@@QAEX_N@Z	; DXUTState::SetInSizeMove
; Line 1366
	jmp	$LN69@DXUTStatic
$LN40@DXUTStatic:
; Line 1369
	call	?DXUTIsActive@@YG_NXZ			; DXUTIsActive
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@DXUTStatic
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN39@DXUTStatic
; Line 1371
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetShowCursorWhenFullScreen@DXUTState@@QAE_NXZ ; DXUTState::GetShowCursorWhenFullScreen
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN38@DXUTStatic
; Line 1372
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__SetCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN38@DXUTStatic:
; Line 1374
	mov	eax, 1
	jmp	$LN1@DXUTStatic
$LN39@DXUTStatic:
; Line 1376
	jmp	$LN69@DXUTStatic
$LN37@DXUTStatic:
; Line 1379
	cmp	DWORD PTR _wParam$[ebp], 1
	jne	$LN36@DXUTStatic
	call	?DXUTIsActive@@YG_NXZ			; DXUTIsActive
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN36@DXUTStatic
; Line 1381
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetActive@DXUTState@@QAEX_N@Z		; DXUTState::SetActive
; Line 1384
	push	1
	call	?DXUTEnableXInput@@YAX_N@Z		; DXUTEnableXInput
	add	esp, 4
; Line 1389
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMinimizedWhileFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetMinimizedWhileFullscreen
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN35@DXUTStatic
; Line 1391
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimizedWhileFullscreen
; Line 1393
	call	?DXUTToggleFullScreen@@YGJXZ		; DXUTToggleFullScreen
$LN35@DXUTStatic:
; Line 1399
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN97@DXUTStatic
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAllowShortcutKeysWhenWindowed@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenWindowed
	mov	BYTE PTR tv435[ebp], al
	jmp	SHORT $LN98@DXUTStatic
$LN97@DXUTStatic:
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetAllowShortcutKeysWhenFullscreen@DXUTState@@QAE_NXZ ; DXUTState::GetAllowShortcutKeysWhenFullscreen
	mov	BYTE PTR tv435[ebp], al
$LN98@DXUTStatic:
	movzx	ecx, BYTE PTR tv435[ebp]
	push	ecx
	call	?DXUTAllowShortcutKeys@@YAX_N@Z		; DXUTAllowShortcutKeys
	add	esp, 4
	jmp	SHORT $LN33@DXUTStatic
$LN36@DXUTStatic:
; Line 1402
	cmp	DWORD PTR _wParam$[ebp], 0
	jne	SHORT $LN33@DXUTStatic
	call	?DXUTIsActive@@YG_NXZ			; DXUTIsActive
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN33@DXUTStatic
; Line 1404
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetActive@DXUTState@@QAEX_N@Z		; DXUTState::SetActive
; Line 1407
	push	0
	call	?DXUTEnableXInput@@YAX_N@Z		; DXUTEnableXInput
	add	esp, 4
; Line 1409
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN32@DXUTStatic
; Line 1412
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__ClipCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1413
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMinimizedWhileFullscreen@DXUTState@@QAEX_N@Z ; DXUTState::SetMinimizedWhileFullscreen
$LN32@DXUTStatic:
; Line 1422
	push	1
	call	?DXUTAllowShortcutKeys@@YAX_N@Z		; DXUTAllowShortcutKeys
	add	esp, 4
$LN33@DXUTStatic:
; Line 1424
	jmp	$LN69@DXUTStatic
$LN31@DXUTStatic:
; Line 1428
	push	1
	push	1
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1429
	jmp	$LN69@DXUTStatic
$LN30@DXUTStatic:
; Line 1432
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1433
	jmp	$LN69@DXUTStatic
$LN29@DXUTStatic:
; Line 1438
	mov	eax, 65536				; 00010000H
	jmp	$LN1@DXUTStatic
; Line 1439
	jmp	$LN69@DXUTStatic
$LN28@DXUTStatic:
; Line 1443
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN27@DXUTStatic
; Line 1444
	mov	eax, 1
	jmp	$LN1@DXUTStatic
$LN27@DXUTStatic:
; Line 1445
	jmp	$LN69@DXUTStatic
$LN26@DXUTStatic:
; Line 1448
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv460[ebp], edx
	cmp	DWORD PTR tv460[ebp], 0
	je	SHORT $LN23@DXUTStatic
	cmp	DWORD PTR tv460[ebp], 7
	je	SHORT $LN22@DXUTStatic
	jmp	SHORT $LN24@DXUTStatic
$LN23@DXUTStatic:
; Line 1455
	mov	eax, 1
	jmp	$LN1@DXUTStatic
$LN22@DXUTStatic:
; Line 1465
	call	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
	mov	ecx, eax
	call	?Reset@CDXUTTimer@@QAEXXZ		; CDXUTTimer::Reset
; Line 1466
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetLastStatsUpdateTime@DXUTState@@QAEXN@Z ; DXUTState::SetLastStatsUpdateTime
; Line 1467
	mov	eax, 1
	jmp	$LN1@DXUTStatic
$LN24@DXUTStatic:
; Line 1469
	jmp	$LN69@DXUTStatic
$LN21@DXUTStatic:
; Line 1473
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65520				; 0000fff0H
	mov	DWORD PTR tv469[ebp], eax
	cmp	DWORD PTR tv469[ebp], 61488		; 0000f030H
	ja	SHORT $LN99@DXUTStatic
	cmp	DWORD PTR tv469[ebp], 61488		; 0000f030H
	je	SHORT $LN18@DXUTStatic
	cmp	DWORD PTR tv469[ebp], 61440		; 0000f000H
	je	SHORT $LN18@DXUTStatic
	cmp	DWORD PTR tv469[ebp], 61456		; 0000f010H
	je	SHORT $LN18@DXUTStatic
	jmp	SHORT $LN19@DXUTStatic
$LN99@DXUTStatic:
	cmp	DWORD PTR tv469[ebp], 61696		; 0000f100H
	je	SHORT $LN18@DXUTStatic
	jmp	SHORT $LN19@DXUTStatic
$LN18@DXUTStatic:
; Line 1479
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN17@DXUTStatic
; Line 1480
	xor	eax, eax
	jmp	$LN1@DXUTStatic
$LN17@DXUTStatic:
$LN19@DXUTStatic:
; Line 1483
	jmp	$LN69@DXUTStatic
$LN16@DXUTStatic:
; Line 1487
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv478[ebp], edx
	cmp	DWORD PTR tv478[ebp], 19		; 00000013H
	je	SHORT $LN11@DXUTStatic
	cmp	DWORD PTR tv478[ebp], 27		; 0000001bH
	je	SHORT $LN13@DXUTStatic
	jmp	$LN14@DXUTStatic
$LN13@DXUTStatic:
; Line 1491
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHandleEscape@DXUTState@@QAE_NXZ	; DXUTState::GetHandleEscape
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@DXUTStatic
; Line 1492
	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@DXUTStatic:
; Line 1493
	jmp	SHORT $LN14@DXUTStatic
$LN11@DXUTStatic:
; Line 1498
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetHandlePause@DXUTState@@QAE_NXZ	; DXUTState::GetHandlePause
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@DXUTStatic
; Line 1500
	call	?DXUTIsTimePaused@@YG_NXZ		; DXUTIsTimePaused
	mov	BYTE PTR _bTimePaused$2[ebp], al
; Line 1501
	movzx	eax, BYTE PTR _bTimePaused$2[ebp]
	test	eax, eax
	jne	SHORT $LN100@DXUTStatic
	mov	DWORD PTR tv496[ebp], 1
	jmp	SHORT $LN101@DXUTStatic
$LN100@DXUTStatic:
	mov	DWORD PTR tv496[ebp], 0
$LN101@DXUTStatic:
	mov	cl, BYTE PTR tv496[ebp]
	mov	BYTE PTR _bTimePaused$2[ebp], cl
; Line 1502
	movzx	edx, BYTE PTR _bTimePaused$2[ebp]
	test	edx, edx
	je	SHORT $LN9@DXUTStatic
; Line 1503
	push	0
	push	1
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
; Line 1504
	jmp	SHORT $LN8@DXUTStatic
$LN9@DXUTStatic:
; Line 1505
	push	0
	push	0
	call	?DXUTPause@@YGX_N0@Z			; DXUTPause
$LN8@DXUTStatic:
$LN14@DXUTStatic:
; Line 1510
	jmp	$LN69@DXUTStatic
$LN7@DXUTStatic:
; Line 1516
	mov	esi, esp
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hMenu$1[ebp], eax
; Line 1517
	cmp	DWORD PTR _hMenu$1[ebp], 0
	je	SHORT $LN6@DXUTStatic
; Line 1518
	mov	esi, esp
	mov	ecx, DWORD PTR _hMenu$1[ebp]
	push	ecx
	call	DWORD PTR __imp__DestroyMenu@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@DXUTStatic:
; Line 1519
	mov	esi, esp
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1520
	mov	esi, esp
	push	0
	push	OFFSET $SG151955
	call	DWORD PTR __imp__UnregisterClassW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1521
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDFocus
; Line 1522
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
; Line 1523
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
; Line 1524
	xor	eax, eax
	jmp	SHORT $LN1@DXUTStatic
$LN5@DXUTStatic:
; Line 1528
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN69@DXUTStatic:
; Line 1536
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetCallDefWindowProc@DXUTState@@QAE_NXZ ; DXUTState::GetCallDefWindowProc
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DXUTStatic
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetMenu@DXUTState@@QAEPAUHMENU__@@XZ	; DXUTState::GetMenu
	test	eax, eax
	jne	SHORT $LN4@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 260		; 00000104H
	je	SHORT $LN2@DXUTStatic
	cmp	DWORD PTR _uMsg$[ebp], 261		; 00000105H
	jne	SHORT $LN4@DXUTStatic
$LN2@DXUTStatic:
	cmp	DWORD PTR _wParam$[ebp], 121		; 00000079H
	jne	SHORT $LN4@DXUTStatic
$LN3@DXUTStatic:
; Line 1537
	xor	eax, eax
	jmp	SHORT $LN1@DXUTStatic
; Line 1538
	jmp	SHORT $LN1@DXUTStatic
$LN4@DXUTStatic:
; Line 1539
	mov	esi, esp
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DXUTStatic:
; Line 1540
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN109@DXUTStatic
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN109@DXUTStatic:
	DD	3
	DD	$LN108@DXUTStatic
$LN108@DXUTStatic:
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN105@DXUTStatic
	DD	-81					; ffffffafH
	DD	1
	DD	$LN106@DXUTStatic
	DD	-148					; ffffff6cH
	DD	16					; 00000010H
	DD	$LN107@DXUTStatic
$LN107@DXUTStatic:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN106@DXUTStatic:
	DB	98					; 00000062H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	70					; 00000046H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN105@DXUTStatic:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN110@DXUTStatic:
	DD	$LN5@DXUTStatic
	DD	$LN58@DXUTStatic
	DD	$LN68@DXUTStatic
	DD	$LN7@DXUTStatic
	DD	$LN37@DXUTStatic
	DD	$LN40@DXUTStatic
	DD	$LN43@DXUTStatic
	DD	$LN28@DXUTStatic
	DD	$LN69@DXUTStatic
$LN104@DXUTStatic:
	DB	0
	DB	8
	DB	8
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	2
	DB	3
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	4
	DB	8
	DB	8
	DB	8
	DB	5
	DB	8
	DB	8
	DB	8
	DB	6
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z ENDP		; DXUTStaticWndProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hInstance$ = -20					; size = 4
_strCachedWindowTitle$ = -16				; size = 4
_dwError$1 = -12					; size = 4
_nResult$2 = -8						; size = 4
_hr$ = -4						; size = 4
_hWndFocus$ = 8						; size = 4
_hWndDeviceFullScreen$ = 12				; size = 4
_hWndDeviceWindowed$ = 16				; size = 4
_bHandleMessages$ = 20					; size = 1
?DXUTSetWindow@@YGJPAUHWND__@@00_N@Z PROC		; DXUTSetWindow
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 1085
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1089
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@DXUTSetWin
; Line 1090
	push	1
	push	OFFSET $SG151781
	push	-2147467259				; 80004005H
	push	1090					; 00000442H
	push	OFFSET $SG151782
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN9@DXUTSetWin
$LN8@DXUTSetWin:
; Line 1092
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreateCalled
; Line 1097
	cmp	DWORD PTR _hWndFocus$[ebp], 0
	je	SHORT $LN6@DXUTSetWin
	cmp	DWORD PTR _hWndDeviceFullScreen$[ebp], 0
	je	SHORT $LN6@DXUTSetWin
	cmp	DWORD PTR _hWndDeviceWindowed$[ebp], 0
	jne	SHORT $LN7@DXUTSetWin
$LN6@DXUTSetWin:
; Line 1098
	push	1
	push	OFFSET $SG151787
	push	-2147024809				; 80070057H
	push	1098					; 0000044aH
	push	OFFSET $SG151788
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN9@DXUTSetWin
$LN7@DXUTSetWin:
; Line 1101
	movzx	ecx, BYTE PTR _bHandleMessages$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@DXUTSetWin
; Line 1104
	mov	esi, esp
	push	OFFSET ?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z ; DXUTStaticWndProc
	push	-4					; fffffffcH
	mov	edx, DWORD PTR _hWndFocus$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResult$2[ebp], eax
; Line 1106
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$1[ebp], eax
; Line 1107
	cmp	DWORD PTR _nResult$2[ebp], 0
	jne	SHORT $LN5@DXUTSetWin
; Line 1108
	push	1
	push	OFFSET $SG151795
	mov	eax, DWORD PTR _dwError$1[ebp]
	push	eax
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	push	eax
	push	1108					; 00000454H
	push	OFFSET $SG151796
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN9@DXUTSetWin
$LN5@DXUTSetWin:
; Line 1111
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXUTInited@DXUTState@@QAE_NXZ	; DXUTState::GetDXUTInited
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@DXUTSetWin
; Line 1115
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXUTInitCalled@DXUTState@@QAE_NXZ	; DXUTState::GetDXUTInitCalled
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@DXUTSetWin
; Line 1116
	mov	eax, -2147467259			; 80004005H
	jmp	$LN9@DXUTSetWin
$LN2@DXUTSetWin:
; Line 1120
	push	0
	push	0
	push	1
	push	1
	call	?DXUTInit@@YGJ_N0PA_W0@Z		; DXUTInit
	mov	DWORD PTR _hr$[ebp], eax
; Line 1121
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@DXUTSetWin
; Line 1122
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN9@DXUTSetWin
$LN3@DXUTSetWin:
; Line 1125
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowTitle@DXUTState@@QAEPA_WXZ	; DXUTState::GetWindowTitle
	mov	DWORD PTR _strCachedWindowTitle$[ebp], eax
; Line 1126
	mov	esi, esp
	push	255					; 000000ffH
	mov	eax, DWORD PTR _strCachedWindowTitle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndFocus$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowTextW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1127
	mov	edx, 2
	imul	eax, edx, 255
	xor	ecx, ecx
	mov	edx, DWORD PTR _strCachedWindowTitle$[ebp]
	mov	WORD PTR [edx+eax], cx
; Line 1129
	mov	esi, esp
	push	-6					; fffffffaH
	mov	eax, DWORD PTR _hWndFocus$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hInstance$[ebp], eax
; Line 1130
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z ; DXUTState::SetHInstance
; Line 1131
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
; Line 1132
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowCreated@DXUTState@@QAEX_N@Z	; DXUTState::SetWindowCreated
; Line 1133
	mov	edx, DWORD PTR _hWndFocus$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDFocus
; Line 1134
	mov	eax, DWORD PTR _hWndDeviceFullScreen$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
; Line 1135
	mov	ecx, DWORD PTR _hWndDeviceWindowed$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
; Line 1137
	xor	eax, eax
$LN9@DXUTSetWin:
; Line 1138
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DXUTSetWindow@@YGJPAUHWND__@@00_N@Z ENDP		; DXUTSetWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv236 = -633						; size = 1
_dwError$1 = -632					; size = 4
_hWnd$2 = -628						; size = 4
_strCachedWindowTitle$3 = -624				; size = 4
_rc$4 = -616						; size = 16
_nDefaultHeight$5 = -596				; size = 4
_nDefaultWidth$6 = -592					; size = 4
_dwError$7 = -588					; size = 4
_wndClass$8 = -580					; size = 40
_szExePath$9 = -532					; size = 520
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_strWindowTitle$ = 8					; size = 4
_hInstance$ = 12					; size = 4
_hIcon$ = 16						; size = 4
_hMenu$ = 20						; size = 4
_x$ = 24						; size = 4
_y$ = 28						; size = 4
?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z PROC ; DXUTCreateWindow
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 979
	push	ebp
	mov	ebp, esp
	sub	esp, 636				; 0000027cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-636]
	mov	ecx, 159				; 0000009fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 983
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetInsideDeviceCallback@DXUTState@@QAE_NXZ ; DXUTState::GetInsideDeviceCallback
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@DXUTCreate
; Line 984
	push	1
	push	OFFSET $SG151728
	push	-2147467259				; 80004005H
	push	984					; 000003d8H
	push	OFFSET $SG151729
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN16@DXUTCreate
$LN15@DXUTCreate:
; Line 986
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowCreateCalled@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreateCalled
; Line 988
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXUTInited@DXUTState@@QAE_NXZ	; DXUTState::GetDXUTInited
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@DXUTCreate
; Line 992
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetDXUTInitCalled@DXUTState@@QAE_NXZ	; DXUTState::GetDXUTInitCalled
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN13@DXUTCreate
; Line 993
	mov	eax, -2147467259			; 80004005H
	jmp	$LN16@DXUTCreate
$LN13@DXUTCreate:
; Line 997
	push	0
	push	0
	push	1
	push	1
	call	?DXUTInit@@YGJ_N0PA_W0@Z		; DXUTInit
	mov	DWORD PTR _hr$[ebp], eax
; Line 998
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN14@DXUTCreate
; Line 999
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN16@DXUTCreate
$LN14@DXUTCreate:
; Line 1002
	call	?DXUTGetHWNDFocus@@YGPAUHWND__@@XZ	; DXUTGetHWNDFocus
	test	eax, eax
	jne	$LN11@DXUTCreate
; Line 1004
	cmp	DWORD PTR _hInstance$[ebp], 0
	jne	SHORT $LN10@DXUTCreate
; Line 1005
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hInstance$[ebp], eax
$LN10@DXUTCreate:
; Line 1006
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHInstance@DXUTState@@QAEXPAUHINSTANCE__@@@Z ; DXUTState::SetHInstance
; Line 1009
	mov	esi, esp
	push	260					; 00000104H
	lea	ecx, DWORD PTR _szExePath$9[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__GetModuleFileNameW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1010
	cmp	DWORD PTR _hIcon$[ebp], 0
	jne	SHORT $LN9@DXUTCreate
; Line 1011
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _szExePath$9[ebp]
	push	edx
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	DWORD PTR __imp__ExtractIconW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hIcon$[ebp], eax
$LN9@DXUTCreate:
; Line 1015
	mov	DWORD PTR _wndClass$8[ebp], 8
; Line 1016
	mov	DWORD PTR _wndClass$8[ebp+4], OFFSET ?DXUTStaticWndProc@@YGJPAUHWND__@@IIJ@Z ; DXUTStaticWndProc
; Line 1017
	mov	DWORD PTR _wndClass$8[ebp+8], 0
; Line 1018
	mov	DWORD PTR _wndClass$8[ebp+12], 0
; Line 1019
	mov	ecx, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR _wndClass$8[ebp+16], ecx
; Line 1020
	mov	edx, DWORD PTR _hIcon$[ebp]
	mov	DWORD PTR _wndClass$8[ebp+20], edx
; Line 1021
	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wndClass$8[ebp+24], eax
; Line 1022
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wndClass$8[ebp+28], eax
; Line 1023
	mov	DWORD PTR _wndClass$8[ebp+32], 0
; Line 1024
	mov	DWORD PTR _wndClass$8[ebp+36], OFFSET $SG151745
; Line 1026
	mov	esi, esp
	lea	eax, DWORD PTR _wndClass$8[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN8@DXUTCreate
; Line 1028
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$7[ebp], eax
; Line 1029
	cmp	DWORD PTR _dwError$7[ebp], 1410		; 00000582H
	je	SHORT $LN8@DXUTCreate
; Line 1030
	push	1
	push	OFFSET $SG151750
	mov	edx, DWORD PTR _dwError$7[ebp]
	push	edx
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	push	eax
	push	1030					; 00000406H
	push	OFFSET $SG151751
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN16@DXUTCreate
$LN8@DXUTCreate:
; Line 1034
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideStartX@DXUTState@@QAEHXZ	; DXUTState::GetOverrideStartX
	cmp	eax, -1
	je	SHORT $LN6@DXUTCreate
; Line 1035
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideStartX@DXUTState@@QAEHXZ	; DXUTState::GetOverrideStartX
	mov	DWORD PTR _x$[ebp], eax
$LN6@DXUTCreate:
; Line 1036
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideStartY@DXUTState@@QAEHXZ	; DXUTState::GetOverrideStartY
	cmp	eax, -1
	je	SHORT $LN5@DXUTCreate
; Line 1037
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideStartY@DXUTState@@QAEHXZ	; DXUTState::GetOverrideStartY
	mov	DWORD PTR _y$[ebp], eax
$LN5@DXUTCreate:
; Line 1039
	push	0
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
; Line 1040
	cmp	DWORD PTR _x$[ebp], -2147483648		; 80000000H
	jne	SHORT $LN4@DXUTCreate
	cmp	DWORD PTR _y$[ebp], -2147483648		; 80000000H
	jne	SHORT $LN4@DXUTCreate
; Line 1041
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowCreatedWithDefaultPositions@DXUTState@@QAEX_N@Z ; DXUTState::SetWindowCreatedWithDefaultPositions
$LN4@DXUTCreate:
; Line 1044
	mov	DWORD PTR _nDefaultWidth$6[ebp], 800	; 00000320H
; Line 1045
	mov	DWORD PTR _nDefaultHeight$5[ebp], 600	; 00000258H
; Line 1046
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideWidth@DXUTState@@QAEHXZ	; DXUTState::GetOverrideWidth
	test	eax, eax
	je	SHORT $LN3@DXUTCreate
; Line 1047
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideWidth@DXUTState@@QAEHXZ	; DXUTState::GetOverrideWidth
	mov	DWORD PTR _nDefaultWidth$6[ebp], eax
$LN3@DXUTCreate:
; Line 1048
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideHeight@DXUTState@@QAEHXZ	; DXUTState::GetOverrideHeight
	test	eax, eax
	je	SHORT $LN2@DXUTCreate
; Line 1049
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetOverrideHeight@DXUTState@@QAEHXZ	; DXUTState::GetOverrideHeight
	mov	DWORD PTR _nDefaultHeight$5[ebp], eax
$LN2@DXUTCreate:
; Line 1052
	mov	esi, esp
	mov	eax, DWORD PTR _nDefaultHeight$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _nDefaultWidth$6[ebp]
	push	ecx
	push	0
	push	0
	lea	edx, DWORD PTR _rc$4[ebp]
	push	edx
	call	DWORD PTR __imp__SetRect@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1053
	cmp	DWORD PTR _hMenu$[ebp], 0
	je	SHORT $LN18@DXUTCreate
	mov	BYTE PTR tv236[ebp], 1
	jmp	SHORT $LN19@DXUTCreate
$LN18@DXUTCreate:
	mov	BYTE PTR tv236[ebp], 0
$LN19@DXUTCreate:
	movzx	eax, BYTE PTR tv236[ebp]
	mov	esi, esp
	push	eax
	push	13565952				; 00cf0000H
	lea	ecx, DWORD PTR _rc$4[ebp]
	push	ecx
	call	DWORD PTR __imp__AdjustWindowRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1055
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?GetWindowTitle@DXUTState@@QAEPA_WXZ	; DXUTState::GetWindowTitle
	mov	DWORD PTR _strCachedWindowTitle$3[ebp], eax
; Line 1056
	mov	esi, esp
	mov	edx, DWORD PTR _strWindowTitle$[ebp]
	push	edx
	push	256					; 00000100H
	mov	eax, DWORD PTR _strCachedWindowTitle$3[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1061
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMenu$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _rc$4[ebp+12]
	sub	eax, DWORD PTR _rc$4[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rc$4[ebp+8]
	sub	ecx, DWORD PTR _rc$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	push	13565952				; 00cf0000H
	mov	ecx, DWORD PTR _strWindowTitle$[ebp]
	push	ecx
	push	OFFSET $SG151764
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWnd$2[ebp], eax
; Line 1062
	cmp	DWORD PTR _hWnd$2[ebp], 0
	jne	SHORT $LN1@DXUTCreate
; Line 1064
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$1[ebp], eax
; Line 1065
	push	1
	push	OFFSET $SG151768
	mov	edx, DWORD PTR _dwError$1[ebp]
	push	edx
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	push	eax
	push	1065					; 00000429H
	push	OFFSET $SG151769
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN16@DXUTCreate
$LN1@DXUTCreate:
; Line 1068
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowCreated@DXUTState@@QAEX_N@Z	; DXUTState::SetWindowCreated
; Line 1069
	mov	eax, DWORD PTR _hWnd$2[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDFocus@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDFocus
; Line 1070
	mov	ecx, DWORD PTR _hWnd$2[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDDeviceFullScreen@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceFullScreen
; Line 1071
	mov	edx, DWORD PTR _hWnd$2[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetHWNDDeviceWindowed@DXUTState@@QAEXPAUHWND__@@@Z ; DXUTState::SetHWNDDeviceWindowed
$LN11@DXUTCreate:
; Line 1074
	xor	eax, eax
$LN16@DXUTCreate:
; Line 1075
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@DXUTCreate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 636				; 0000027cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN24@DXUTCreate:
	DD	3
	DD	$LN23@DXUTCreate
$LN23@DXUTCreate:
	DD	-532					; fffffdecH
	DD	520					; 00000208H
	DD	$LN20@DXUTCreate
	DD	-580					; fffffdbcH
	DD	40					; 00000028H
	DD	$LN21@DXUTCreate
	DD	-616					; fffffd98H
	DD	16					; 00000010H
	DD	$LN22@DXUTCreate
$LN22@DXUTCreate:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN21@DXUTCreate:
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN20@DXUTCreate:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ENDP ; DXUTCreateWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fk$ = -68						; size = 24
_tk$ = -36						; size = 8
_sk$ = -20						; size = 8
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_bParseCommandLine$ = 8					; size = 1
_bShowMsgBoxOnError$ = 12				; size = 1
_strExtraCommandLineParams$ = 16			; size = 4
_bThreadSafeDXUT$ = 20					; size = 1
?DXUTInit@@YGJ_N0PA_W0@Z PROC				; DXUTInit
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 658
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 659
	mov	al, BYTE PTR _bThreadSafeDXUT$[ebp]
	mov	BYTE PTR ?g_bThreadSafe@@3_NA, al	; g_bThreadSafe
; Line 661
	mov	esi, esp
	push	0
	push	0
	call	DWORD PTR __imp__CoInitializeEx@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 662
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@DXUTInit
; Line 663
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN7@DXUTInit
$LN6@DXUTInit:
; Line 665
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXUTInitCalled@DXUTState@@QAEX_N@Z	; DXUTState::SetDXUTInitCalled
; Line 668
	mov	esi, esp
	call	DWORD PTR __imp__InitCommonControls@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 671
	mov	DWORD PTR _sk$[ebp], 8
	mov	DWORD PTR _sk$[ebp+4], 0
; Line 672
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _sk$[ebp]
	push	ecx
	push	8
	push	58					; 0000003aH
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN5@DXUTInit
; Line 673
	xor	edx, edx
	mov	DWORD PTR _sk$[ebp], edx
	mov	DWORD PTR _sk$[ebp+4], edx
$LN5@DXUTInit:
; Line 674
	mov	eax, DWORD PTR _sk$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _sk$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetStartupStickyKeys@DXUTState@@QAEXUtagSTICKYKEYS@@@Z ; DXUTState::SetStartupStickyKeys
; Line 676
	mov	DWORD PTR _tk$[ebp], 8
	mov	DWORD PTR _tk$[ebp+4], 0
; Line 677
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _tk$[ebp]
	push	edx
	push	8
	push	52					; 00000034H
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@DXUTInit
; Line 678
	xor	eax, eax
	mov	DWORD PTR _tk$[ebp], eax
	mov	DWORD PTR _tk$[ebp+4], eax
$LN4@DXUTInit:
; Line 679
	mov	ecx, DWORD PTR _tk$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tk$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetStartupToggleKeys@DXUTState@@QAEXUtagTOGGLEKEYS@@@Z ; DXUTState::SetStartupToggleKeys
; Line 681
	mov	DWORD PTR _fk$[ebp], 24			; 00000018H
	mov	DWORD PTR _fk$[ebp+4], 0
	xor	eax, eax
	mov	DWORD PTR _fk$[ebp+8], eax
	mov	DWORD PTR _fk$[ebp+12], eax
	mov	DWORD PTR _fk$[ebp+16], eax
	mov	DWORD PTR _fk$[ebp+20], eax
; Line 682
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _fk$[ebp]
	push	ecx
	push	24					; 00000018H
	push	50					; 00000032H
	call	DWORD PTR __imp__SystemParametersInfoW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@DXUTInit
; Line 683
	xor	edx, edx
	mov	DWORD PTR _fk$[ebp], edx
	mov	DWORD PTR _fk$[ebp+4], edx
	mov	DWORD PTR _fk$[ebp+8], edx
	mov	DWORD PTR _fk$[ebp+12], edx
	mov	DWORD PTR _fk$[ebp+16], edx
	mov	DWORD PTR _fk$[ebp+20], edx
$LN3@DXUTInit:
; Line 684
	sub	esp, 24					; 00000018H
	mov	eax, esp
	mov	ecx, DWORD PTR _fk$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _fk$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _fk$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _fk$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _fk$[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _fk$[ebp+20]
	mov	DWORD PTR [eax+20], edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetStartupFilterKeys@DXUTState@@QAEXUtagFILTERKEYS@@@Z ; DXUTState::SetStartupFilterKeys
; Line 686
	movzx	eax, BYTE PTR _bShowMsgBoxOnError$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetShowMsgBoxOnError@DXUTState@@QAEX_N@Z ; DXUTState::SetShowMsgBoxOnError
; Line 688
	movzx	ecx, BYTE PTR _bParseCommandLine$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@DXUTInit
; Line 689
	push	1
	mov	esi, esp
	call	DWORD PTR __imp__GetCommandLineW@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?DXUTParseCommandLine@@YAXPA_W_N@Z	; DXUTParseCommandLine
	add	esp, 8
$LN2@DXUTInit:
; Line 690
	cmp	DWORD PTR _strExtraCommandLineParams$[ebp], 0
	je	SHORT $LN1@DXUTInit
; Line 691
	push	0
	mov	edx, DWORD PTR _strExtraCommandLineParams$[ebp]
	push	edx
	call	?DXUTParseCommandLine@@YAXPA_W_N@Z	; DXUTParseCommandLine
	add	esp, 8
$LN1@DXUTInit:
; Line 694
	call	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
	mov	ecx, eax
	call	?Reset@CDXUTTimer@@QAEXXZ		; CDXUTTimer::Reset
; Line 696
	push	1
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDXUTInited@DXUTState@@QAEX_N@Z	; DXUTState::SetDXUTInited
; Line 698
	xor	eax, eax
$LN7@DXUTInit:
; Line 699
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@DXUTInit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN13@DXUTInit:
	DD	3
	DD	$LN12@DXUTInit
$LN12@DXUTInit:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN9@DXUTInit
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN10@DXUTInit
	DD	-68					; ffffffbcH
	DD	24					; 00000018H
	DD	$LN11@DXUTInit
$LN11@DXUTInit:
	DB	102					; 00000066H
	DB	107					; 0000006bH
	DB	0
$LN10@DXUTInit:
	DB	116					; 00000074H
	DB	107					; 0000006bH
	DB	0
$LN9@DXUTInit:
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	0
?DXUTInit@@YGJ_N0PA_W0@Z ENDP				; DXUTInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z PROC ; DXUTSetCallbackD3D11DeviceDestroyed
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 625
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceDestroyedFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11DeviceDestroyedFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceDestroyedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceDestroyedFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z ENDP ; DXUTSetCallbackD3D11DeviceDestroyed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z PROC ; DXUTSetCallbackD3D11SwapChainReleasing
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 624
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11SwapChainReleasingFunc@DXUTState@@QAEXP6GXPAX@Z@Z ; DXUTState::SetD3D11SwapChainReleasingFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11SwapChainReleasingFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainReleasingFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z ENDP ; DXUTSetCallbackD3D11SwapChainReleasing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z PROC ; DXUTSetCallbackD3D11FrameRender
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 623
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11FrameRenderFunc@DXUTState@@QAEXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z@Z ; DXUTState::SetD3D11FrameRenderFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11FrameRenderFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11FrameRenderFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z ENDP ; DXUTSetCallbackD3D11FrameRender
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z PROC ; DXUTSetCallbackD3D11SwapChainResized
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 622
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11SwapChainResizedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11SwapChainResizedFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11SwapChainResizedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11SwapChainResizedFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z ENDP ; DXUTSetCallbackD3D11SwapChainResized
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z PROC ; DXUTSetCallbackD3D11DeviceCreated
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 621
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceCreatedFunc@DXUTState@@QAEXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z@Z ; DXUTState::SetD3D11DeviceCreatedFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetD3D11DeviceCreatedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetD3D11DeviceCreatedFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z ENDP ; DXUTSetCallbackD3D11DeviceCreated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z PROC ; DXUTSetCallbackD3D11DeviceAcceptable
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 620
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetIsD3D11DeviceAcceptableFunc@DXUTState@@QAEXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z@Z ; DXUTState::SetIsD3D11DeviceAcceptableFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetIsD3D11DeviceAcceptableFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetIsD3D11DeviceAcceptableFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z ENDP ; DXUTSetCallbackD3D11DeviceAcceptable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackDeviceRemoved@@YGXP6G_NPAX@Z0@Z PROC	; DXUTSetCallbackDeviceRemoved
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 613
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceRemovedFunc@DXUTState@@QAEXP6G_NPAX@Z@Z ; DXUTState::SetDeviceRemovedFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetDeviceRemovedFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetDeviceRemovedFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackDeviceRemoved@@YGXP6G_NPAX@Z0@Z ENDP	; DXUTSetCallbackDeviceRemoved
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z PROC ; DXUTSetCallbackDeviceChanging
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 612
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetModifyDeviceSettingsFunc@DXUTState@@QAEXP6G_NPAUDXUTDeviceSettings@@PAX@Z@Z ; DXUTState::SetModifyDeviceSettingsFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetModifyDeviceSettingsFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetModifyDeviceSettingsFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z ENDP ; DXUTSetCallbackDeviceChanging
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z PROC ; DXUTSetCallbackMsgProc
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 617
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowMsgFunc@DXUTState@@QAEXP6GJPAUHWND__@@IIJPA_NPAX@Z@Z ; DXUTState::SetWindowMsgFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetWindowMsgFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetWindowMsgFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z ENDP ; DXUTSetCallbackMsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_bIncludeMouseMove$ = 12				; size = 1
_pUserContext$ = 16					; size = 4
?DXUTSetCallbackMouse@@YGXP6GX_N0000HHHPAX@Z01@Z PROC	; DXUTSetCallbackMouse
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 616
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMouseFunc@DXUTState@@QAEXP6GX_N0000HHHPAX@Z@Z ; DXUTState::SetMouseFunc
	movzx	ecx, BYTE PTR _bIncludeMouseMove$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetNotifyOnMouseMove@DXUTState@@QAEX_N@Z ; DXUTState::SetNotifyOnMouseMove
	mov	edx, DWORD PTR _pUserContext$[ebp]
	push	edx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetMouseFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetMouseFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?DXUTSetCallbackMouse@@YGXP6GX_N0000HHHPAX@Z01@Z ENDP	; DXUTSetCallbackMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackKeyboard@@YGXP6GXI_N0PAX@Z1@Z PROC	; DXUTSetCallbackKeyboard
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 615
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetKeyboardFunc@DXUTState@@QAEXP6GXI_N0PAX@Z@Z ; DXUTState::SetKeyboardFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetKeyboardFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetKeyboardFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackKeyboard@@YGXP6GXI_N0PAX@Z1@Z ENDP	; DXUTSetCallbackKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?DXUTSetCallbackFrameMove@@YGXP6GXNMPAX@Z0@Z PROC	; DXUTSetCallbackFrameMove
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxut.cpp
; Line 614
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pCallback$[ebp]
	push	eax
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFrameMoveFunc@DXUTState@@QAEXP6GXNMPAX@Z@Z ; DXUTState::SetFrameMoveFunc
	mov	ecx, DWORD PTR _pUserContext$[ebp]
	push	ecx
	call	?GetDXUTState@@YAAAVDXUTState@@XZ	; GetDXUTState
	mov	ecx, eax
	call	?SetFrameMoveFuncUserContext@DXUTState@@QAEXPAX@Z ; DXUTState::SetFrameMoveFuncUserContext
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?DXUTSetCallbackFrameMove@@YGXP6GXNMPAX@Z0@Z ENDP	; DXUTSetCallbackFrameMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	mov	esi, esp
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 189
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]
; Line 184
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -40						; size = 4
__Parent_proxy$3 = -32					; size = 4
__Lock$4 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$3[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$3[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Adopt:
; Line 174
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Iterator_b:
	DD	1
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1736
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTwoPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1735
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMTwoPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1734
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMReciprocalPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPi@DirectX@@YAXXZ PROC				; DirectX::`dynamic initializer for 'g_XMPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1733
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMPi@DirectX@@YAXXZ ENDP				; DirectX::`dynamic initializer for 'g_XMPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMHalfPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMHalfPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMHalfPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1732
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMHalfPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMHalfPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativePi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativePi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMNegativePi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1731
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMNegativePi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMNegativePi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1730
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPiConstants0@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPiConstants0@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMPiConstants0'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1705
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMPiConstants0@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMPiConstants0''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1703
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _|
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_|	PROC						; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\d3d11sdklayers.h
; Line 137
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _a$[ebp]
	or	eax, DWORD PTR _b$[ebp]
	pop	ebp
	ret	0
_|	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
	push	esi
; Line 557
	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp___hypot
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 558
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
; Line 105
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
; Line 103
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Where$[ebp]
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; Line 26297
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
END
