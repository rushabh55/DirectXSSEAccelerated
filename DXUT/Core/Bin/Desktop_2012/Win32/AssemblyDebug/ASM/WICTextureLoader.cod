; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\New Scratch\DXUT\Core\WICTextureLoader.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_WICPixelFormat1bppIndexed
PUBLIC	_GUID_WICPixelFormat2bppIndexed
PUBLIC	_GUID_WICPixelFormat4bppIndexed
PUBLIC	_GUID_WICPixelFormat8bppIndexed
PUBLIC	_GUID_WICPixelFormatBlackWhite
PUBLIC	_GUID_WICPixelFormat2bppGray
PUBLIC	_GUID_WICPixelFormat4bppGray
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat24bppRGB
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppPBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	_GUID_WICPixelFormat32bppPRGBA
PUBLIC	_GUID_WICPixelFormat48bppRGB
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat64bppBGRA
PUBLIC	_GUID_WICPixelFormat64bppPRGBA
PUBLIC	_GUID_WICPixelFormat64bppPBGRA
PUBLIC	_GUID_WICPixelFormat16bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppBGR101010
PUBLIC	_GUID_WICPixelFormat48bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat48bppBGRFixedPoint
PUBLIC	_GUID_WICPixelFormat96bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppPRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppRGBFloat
PUBLIC	_GUID_WICPixelFormat32bppCMYK
PUBLIC	_GUID_WICPixelFormat64bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppBGRAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	_GUID_WICPixelFormat64bppRGBHalf
PUBLIC	_GUID_WICPixelFormat48bppRGBHalf
PUBLIC	_GUID_WICPixelFormat32bppRGBE
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	_GUID_WICPixelFormat32bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	_GUID_WICPixelFormat64bppCMYK
PUBLIC	_GUID_WICPixelFormat40bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat80bppCMYKAlpha
PUBLIC	___pobjectentryfirst
PUBLIC	___pobjectentrymid
PUBLIC	___pobjectentrylast
PUBLIC	__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
PUBLIC	?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA ; Microsoft::WRL::Details::ModuleBase::moduleLock_
PUBLIC	?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC ; Microsoft::WRL::Details::ModuleBase::objectCount_
PUBLIC	?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A ; Microsoft::WRL::Details::ModuleBase::module_
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
PUBLIC	?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<3>::value
PUBLIC	?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<4>::value
PUBLIC	__GUID_00000003_0000_0000_c000_000000000046
PUBLIC	__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
PUBLIC	?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<6>::value
PUBLIC	?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<13>::value
PUBLIC	?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<1>::value
PUBLIC	__GUID_e8eda601_3d48_431a_ab44_69059be88bbe
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<2>::value
PUBLIC	_WKPDID_D3DDebugObjectName
PUBLIC	__GUID_00000037_0000_0000_c000_000000000046
PUBLIC	_CLSID_WICImagingFactory
;	COMDAT ?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA
_BSS	SEGMENT
?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::moduleLock_
_BSS	ENDS
;	COMDAT ?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC
_BSS	SEGMENT
?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::objectCount_
_BSS	ENDS
;	COMDAT ?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A
_BSS	SEGMENT
?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::module_
_BSS	ENDS
_BSS	SEGMENT
_g_WIC2	DB	01H DUP (?)
_BSS	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT __GUID_00000037_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000037_0000_0000_c000_000000000046 DD 037H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT _WKPDID_D3DDebugObjectName
CONST	SEGMENT
_WKPDID_D3DDebugObjectName DD 0429b8c22H
	DW	09188H
	DW	04b0cH
	DB	087H
	DB	042H
	DB	0acH
	DB	0b0H
	DB	0bfH
	DB	085H
	DB	0c2H
	DB	00H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB DD 02H ; Microsoft::WRL::RuntimeClassFlags<2>::value
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_e8eda601_3d48_431a_ab44_69059be88bbe
CONST	SEGMENT
__GUID_e8eda601_3d48_431a_ab44_69059be88bbe DD 0e8eda601H
	DW	03d48H
	DW	0431aH
	DB	0abH
	DB	044H
	DB	069H
	DB	05H
	DB	09bH
	DB	0e8H
	DB	08bH
	DB	0beH
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB DD 01H ; Microsoft::WRL::RuntimeClassFlags<1>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB DD 0dH ; Microsoft::WRL::RuntimeClassFlags<13>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB DD 06H ; Microsoft::WRL::RuntimeClassFlags<6>::value
CONST	ENDS
;	COMDAT __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
CONST	SEGMENT
__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70 DD 0ec5ec8a9H
	DW	0c395H
	DW	04314H
	DB	09cH
	DB	077H
	DB	054H
	DB	0d7H
	DB	0a9H
	DB	035H
	DB	0ffH
	DB	070H
CONST	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000003_0000_0000_c000_000000000046 DD 03H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB DD 04H ; Microsoft::WRL::RuntimeClassFlags<4>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB DD 03H ; Microsoft::WRL::RuntimeClassFlags<3>::value
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB
CONST	SEGMENT
?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB DD 00H ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
CONST	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT __GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
CONST	SEGMENT
__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90 DD 094ea2b94H
	DW	0e9ccH
	DW	049e0H
	DB	0c0H
	DB	0ffH
	DB	0eeH
	DB	064H
	DB	0caH
	DB	08fH
	DB	05bH
	DB	090H
CONST	ENDS
;	COMDAT ___pobjectentrylast
minATL$__z	SEGMENT
___pobjectentrylast DD 00H
minATL$__z	ENDS
;	COMDAT ___pobjectentrymid
minATL$__m	SEGMENT
___pobjectentrymid DD 00H
minATL$__m	ENDS
;	COMDAT ___pobjectentryfirst
minATL$__a	SEGMENT
___pobjectentryfirst DD 00H
minATL$__a	ENDS
;	COMDAT _GUID_WICPixelFormat80bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat64bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBE
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBE DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	042H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	041H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	040H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRAFixedPoint DD 0356de33cH
	DW	054d2H
	DW	04a23H
	DB	0bbH
	DB	04H
	DB	09bH
	DB	07bH
	DB	0f9H
	DB	0b1H
	DB	0d4H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat32bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppPRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppPRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat96bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	018H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGRFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGRFixedPoint DD 049ca140eH
	DW	0cab6H
	DW	0493bH
	DB	09dH
	DB	0dfH
	DB	060H
	DB	018H
	DB	07cH
	DB	037H
	DB	053H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	012H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR101010
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR101010 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	014H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPBGRA DD 08c518e8eH
	DW	0a4ecH
	DW	0468bH
	DB	0aeH
	DB	070H
	DB	0c9H
	DB	0a3H
	DB	05aH
	DB	09cH
	DB	055H
	DB	030H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRA DD 01562ff7cH
	DW	0d352H
	DW	046f9H
	DB	097H
	DB	09eH
	DB	042H
	DB	097H
	DB	06bH
	DB	079H
	DB	022H
	DB	046H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	015H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPRGBA DD 03cc4a650H
	DW	0a527H
	DW	04d37H
	DB	0a9H
	DB	016H
	DB	031H
	DB	042H
	DB	0c7H
	DB	0ebH
	DB	0edH
	DB	0baH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	010H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat24bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppGray
CONST	SEGMENT
_GUID_WICPixelFormat4bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	07H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppGray
CONST	SEGMENT
_GUID_WICPixelFormat2bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	06H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatBlackWhite
CONST	SEGMENT
_GUID_WICPixelFormatBlackWhite DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	05H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat8bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	04H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat4bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat2bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat1bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat1bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
CONST	SEGMENT
$SG155650 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+6
$SG155651 DB	't', 00H, 'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'm', 00H, 'a', 00H, 'x', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 00H, 00H
$SG155678 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG155679 DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'D', 00H, 'X', 00H, 'G'
	DB	00H, 'I', 00H, '_', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H
	DB	'A', 00H, 'T', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'K', 00H, 'N'
	DB	00H, 'O', 00H, 'W', 00H, 'N', 00H, 00H, 00H
$SG156819 DB	'WICTextureLoader', 00H
	ORG $+3
$SG156821 DB	'WICTextureLoader', 00H
	ORG $+3
$SG155817 DB	'/', 00H, 's', 00H, 'R', 00H, 'G', 00H, 'B', 00H, '/', 00H
	DB	'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H
$SG155821 DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'.', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '.'
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 'S', 00H
	DB	'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG156387 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG156388 DB	'd', 00H, '3', 00H, 'd', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG156398 DB	'WICTextureLoader', 00H
	ORG $+3
$SG155620 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG155621 DB	'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG155632 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG155633 DB	'm', 00H, 'a', 00H, 'x', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	_PropVariantInit
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromMemory
PUBLIC	?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromFile
PUBLIC	?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromMemory
PUBLIC	?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromFile
PUBLIC	?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
PUBLIC	?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
PUBLIC	?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
PUBLIC	?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
PUBLIC	?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>
PUBLIC	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
PUBLIC	??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>
PUBLIC	??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
PUBLIC	??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->
PUBLIC	??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *
PUBLIC	??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>
PUBLIC	?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>
PUBLIC	??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
PUBLIC	??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf
PUBLIC	??0?$default_delete@$$BY0A@E@std@@QAE@XZ	; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
PUBLIC	??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z	; std::default_delete<unsigned char [0]>::operator()
PUBLIC	??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
PUBLIC	??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
PUBLIC	??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
PUBLIC	?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>
PUBLIC	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
PUBLIC	?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get
PUBLIC	??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
PUBLIC	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
PUBLIC	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
PUBLIC	??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
PUBLIC	?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
PUBLIC	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
PUBLIC	?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
PUBLIC	??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
PUBLIC	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
PUBLIC	??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
PUBLIC	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
PUBLIC	?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
PUBLIC	__real@0000000000000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__strnlen:PROC
EXTRN	__imp__strrchr:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	__imp__PropVariantClear@4:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcmp:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
	ALIGN	4

_g_WICFormats DB 012cH DUP (?)
_g_WICConvert DB 0480H DUP (?)
_BSS	ENDS
;	COMDAT ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
_BSS	SEGMENT
?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A DD 01H DUP (?) ; `_GetWIC'::`2'::s_Factory
_BSS	ENDS
CRT$XCU	SEGMENT
_g_WICFormats$initializer$ DD FLAT:??__Eg_WICFormats@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
xdata$x	SEGMENT
__unwindtable$?_WICBitsPerPixel@@YAIABU_GUID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$1
__unwindtable$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1
__unwindtable$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2
__ehfuncinfo$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?_WICBitsPerPixel@@YAIABU_GUID@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_WICBitsPerPixel@@YAIABU_GUID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$4
xdata$x	ENDS
CRT$XCU	SEGMENT
_g_WICConvert$initializer$ DD FLAT:??__Eg_WICConvert@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z
_TEXT	SEGMENT
_resource$ = 8						; size = 4
_name$ = 12						; size = 4
??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z PROC ; SetDebugObjectName<17>, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 56
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 58
  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00009	50		 push	 eax
  0000a	6a 10		 push	 16			; 00000010H
  0000c	68 00 00 00 00	 push	 OFFSET _WKPDID_D3DDebugObjectName
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _resource$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	8b 45 08	 mov	 eax, DWORD PTR _resource$[ebp]
  00019	50		 push	 eax
  0001a	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  0001d	ff d1		 call	 ecx
  0001f	3b f4		 cmp	 esi, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 63
  00026	5e		 pop	 esi
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ENDP ; SetDebugObjectName<17>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 321
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 322
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1627
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1628
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	74 15		 je	 SHORT $LN2@Delete
; Line 1629
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	52		 push	 edx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ; std::default_delete<unsigned char [0]>::operator()
$LN2@Delete:
; Line 1630
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1594
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1595
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 09		 je	 SHORT $LN3@operator
  0001f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv70[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@operator:
  0002f	8a 45 f8	 mov	 al, BYTE PTR tv70[ebp]
; Line 1596
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1589
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1590
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1591
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1580
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
; Line 1581
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1518
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
; Line 1521
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1312
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1313
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1314
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1295
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$default_delete@$$BY0A@E@std@@QAE@XZ ; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001c	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1296
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z PROC	; std::default_delete<unsigned char [0]>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1217
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1220
  00017	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0001d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00026	83 c4 04	 add	 esp, 4
; Line 1221
  00029	83 c4 08	 add	 esp, 8
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ENDP	; std::default_delete<unsigned char [0]>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$default_delete@$$BY0A@E@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@$$BY0A@E@std@@QAE@XZ PROC		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1211
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$default_delete@$$BY0A@E@std@@QAE@XZ ENDP		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv620 = -604						; size = 4
tv609 = -600						; size = 4
tv563 = -596						; size = 4
tv539 = -592						; size = 4
tv517 = -588						; size = 4
tv486 = -584						; size = 4
tv462 = -580						; size = 4
tv433 = -576						; size = 4
tv424 = -572						; size = 4
tv414 = -568						; size = 4
tv394 = -564						; size = 4
tv353 = -560						; size = 4
tv272 = -556						; size = 4
tv256 = -552						; size = 4
tv247 = -548						; size = 4
tv236 = -544						; size = 4
tv186 = -540						; size = 4
tv170 = -536						; size = 4
tv831 = -532						; size = 8
tv827 = -524						; size = 4
tv818 = -520						; size = 8
tv814 = -512						; size = 4
tv807 = -508						; size = 8
tv803 = -500						; size = 4
tv798 = -496						; size = 8
tv794 = -488						; size = 4
tv86 = -484						; size = 4
$T2 = -480						; size = 4
$T3 = -476						; size = 4
$T4 = -472						; size = 4
$T5 = -468						; size = 4
$T6 = -464						; size = 4
$T7 = -460						; size = 4
$T8 = -456						; size = 4
$T9 = -452						; size = 4
$T10 = -448						; size = 4
$T11 = -444						; size = 4
$T12 = -440						; size = 4
$T13 = -436						; size = 4
$T14 = -432						; size = 4
$T15 = -428						; size = 4
$T16 = -424						; size = 4
$T17 = -420						; size = 4
$T18 = -416						; size = 4
_SRVDesc$19 = -408					; size = 24
_tex$ = -376						; size = 4
_initData$ = -364					; size = 12
_desc$ = -344						; size = 44
_fmtSupport$20 = -292					; size = 4
_autogen$ = -281					; size = 1
_FC$21 = -276						; size = 4
_pWIC$22 = -268						; size = 4
_FC$23 = -260						; size = 4
_pfScaler$24 = -248					; size = 16
_scaler$25 = -224					; size = 4
_pWIC$26 = -216						; size = 4
_temp$ = -208						; size = 4
_imageSize$ = -200					; size = 4
_rowPitch$ = -196					; size = 4
_support$ = -188					; size = 4
_value$27 = -176					; size = 16
_sRGB$28 = -153						; size = 1
_containerFormat$29 = -148				; size = 16
_metareader$30 = -124					; size = 4
_i$31 = -116						; size = 4
_format$ = -112						; size = 4
_bpp$ = -108						; size = 4
_convertGUID$ = -100					; size = 16
_pixelFormat$ = -76					; size = 16
_ar$32 = -56						; size = 4
_theight$ = -52						; size = 4
_twidth$ = -48						; size = 4
_hr$ = -44						; size = 4
_height$ = -36						; size = 4
_width$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_frame$ = 16						; size = 4
_maxsize$ = 20						; size = 4
_usage$ = 24						; size = 4
_bindFlags$ = 28					; size = 4
_cpuAccessFlags$ = 32					; size = 4
_miscFlags$ = 36					; size = 4
_forceSRGB$ = 40					; size = 1
_texture$ = 44						; size = 4
_textureView$ = 48					; size = 4
?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; CreateTextureFromWIC
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 322
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 50 02 00
	00		 sub	 esp, 592		; 00000250H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd a4 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-604]
  0001f	b9 94 00 00 00	 mov	 ecx, 148		; 00000094H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 324
  0003f	8b f4		 mov	 esi, esp
  00041	8d 45 dc	 lea	 eax, DWORD PTR _height$[ebp]
  00044	50		 push	 eax
  00045	8d 4d e8	 lea	 ecx, DWORD PTR _width$[ebp]
  00048	51		 push	 ecx
  00049	8b 55 10	 mov	 edx, DWORD PTR _frame$[ebp]
  0004c	8b 02		 mov	 eax, DWORD PTR [edx]
  0004e	8b 4d 10	 mov	 ecx, DWORD PTR _frame$[ebp]
  00051	51		 push	 ecx
  00052	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00055	ff d2		 call	 edx
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 325
  00061	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00065	7d 08		 jge	 SHORT $LN66@CreateText
; Line 326
  00067	8b 45 d4	 mov	 eax, DWORD PTR _hr$[ebp]
  0006a	e9 d7 10 00 00	 jmp	 $LN67@CreateText
$LN66@CreateText:
; Line 328
  0006f	83 7d e8 00	 cmp	 DWORD PTR _width$[ebp], 0
  00073	76 06		 jbe	 SHORT $LN69@CreateText
  00075	83 7d dc 00	 cmp	 DWORD PTR _height$[ebp], 0
  00079	77 21		 ja	 SHORT $LN70@CreateText
$LN69@CreateText:
  0007b	8b f4		 mov	 esi, esp
  0007d	68 48 01 00 00	 push	 328			; 00000148H
  00082	68 00 00 00 00	 push	 OFFSET $SG155620
  00087	68 00 00 00 00	 push	 OFFSET $SG155621
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN70@CreateText:
; Line 330
  0009c	83 7d 14 00	 cmp	 DWORD PTR _maxsize$[ebp], 0
  000a0	0f 85 8e 00 00
	00		 jne	 $LN63@CreateText
; Line 336
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR _d3dDevice$[ebp]
  000a9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ab	8b f4		 mov	 esi, esp
  000ad	8b 45 08	 mov	 eax, DWORD PTR _d3dDevice$[ebp]
  000b0	50		 push	 eax
  000b1	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  000b7	ff d1		 call	 ecx
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	89 85 1c fe ff
	ff		 mov	 DWORD PTR tv86[ebp], eax
  000c6	81 bd 1c fe ff
	ff 00 93 00 00	 cmp	 DWORD PTR tv86[ebp], 37632 ; 00009300H
  000d0	7f 26		 jg	 SHORT $LN71@CreateText
  000d2	81 bd 1c fe ff
	ff 00 93 00 00	 cmp	 DWORD PTR tv86[ebp], 37632 ; 00009300H
  000dc	74 3d		 je	 SHORT $LN61@CreateText
  000de	81 bd 1c fe ff
	ff 00 91 00 00	 cmp	 DWORD PTR tv86[ebp], 37120 ; 00009100H
  000e8	74 28		 je	 SHORT $LN62@CreateText
  000ea	81 bd 1c fe ff
	ff 00 92 00 00	 cmp	 DWORD PTR tv86[ebp], 37376 ; 00009200H
  000f4	74 1c		 je	 SHORT $LN62@CreateText
  000f6	eb 35		 jmp	 SHORT $LN59@CreateText
$LN71@CreateText:
  000f8	81 bd 1c fe ff
	ff 00 a0 00 00	 cmp	 DWORD PTR tv86[ebp], 40960 ; 0000a000H
  00102	74 20		 je	 SHORT $LN60@CreateText
  00104	81 bd 1c fe ff
	ff 00 a1 00 00	 cmp	 DWORD PTR tv86[ebp], 41216 ; 0000a100H
  0010e	74 14		 je	 SHORT $LN60@CreateText
  00110	eb 1b		 jmp	 SHORT $LN59@CreateText
$LN62@CreateText:
; Line 340
  00112	c7 45 14 00 08
	00 00		 mov	 DWORD PTR _maxsize$[ebp], 2048 ; 00000800H
; Line 341
  00119	eb 19		 jmp	 SHORT $LN63@CreateText
$LN61@CreateText:
; Line 344
  0011b	c7 45 14 00 10
	00 00		 mov	 DWORD PTR _maxsize$[ebp], 4096 ; 00001000H
; Line 345
  00122	eb 10		 jmp	 SHORT $LN63@CreateText
$LN60@CreateText:
; Line 349
  00124	c7 45 14 00 20
	00 00		 mov	 DWORD PTR _maxsize$[ebp], 8192 ; 00002000H
; Line 350
  0012b	eb 07		 jmp	 SHORT $LN63@CreateText
$LN59@CreateText:
; Line 353
  0012d	c7 45 14 00 40
	00 00		 mov	 DWORD PTR _maxsize$[ebp], 16384 ; 00004000H
$LN63@CreateText:
; Line 358
  00134	83 7d 14 00	 cmp	 DWORD PTR _maxsize$[ebp], 0
  00138	77 21		 ja	 SHORT $LN72@CreateText
  0013a	8b f4		 mov	 esi, esp
  0013c	68 66 01 00 00	 push	 358			; 00000166H
  00141	68 00 00 00 00	 push	 OFFSET $SG155632
  00146	68 00 00 00 00	 push	 OFFSET $SG155633
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00151	83 c4 0c	 add	 esp, 12			; 0000000cH
  00154	3b f4		 cmp	 esi, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN72@CreateText:
; Line 361
  0015b	8b 45 e8	 mov	 eax, DWORD PTR _width$[ebp]
  0015e	3b 45 14	 cmp	 eax, DWORD PTR _maxsize$[ebp]
  00161	77 0c		 ja	 SHORT $LN57@CreateText
  00163	8b 4d dc	 mov	 ecx, DWORD PTR _height$[ebp]
  00166	3b 4d 14	 cmp	 ecx, DWORD PTR _maxsize$[ebp]
  00169	0f 86 38 01 00
	00		 jbe	 $LN58@CreateText
$LN57@CreateText:
; Line 363
  0016f	8b 55 dc	 mov	 edx, DWORD PTR _height$[ebp]
  00172	89 95 18 fe ff
	ff		 mov	 DWORD PTR tv794[ebp], edx
  00178	f2 0f 2a 85 18
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv794[ebp]
  00180	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR tv794[ebp]
  00186	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00189	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00192	f2 0f 11 85 10
	fe ff ff	 movsd	 QWORD PTR tv798[ebp], xmm0
  0019a	f2 0f 5a 85 10
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv798[ebp]
  001a2	8b 4d e8	 mov	 ecx, DWORD PTR _width$[ebp]
  001a5	89 8d 0c fe ff
	ff		 mov	 DWORD PTR tv803[ebp], ecx
  001ab	f2 0f 2a 8d 0c
	fe ff ff	 cvtsi2sd xmm1, DWORD PTR tv803[ebp]
  001b3	8b 95 0c fe ff
	ff		 mov	 edx, DWORD PTR tv803[ebp]
  001b9	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  001bc	f2 0f 58 0c d5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  001c5	f2 0f 11 8d 04
	fe ff ff	 movsd	 QWORD PTR tv807[ebp], xmm1
  001cd	f2 0f 5a 8d 04
	fe ff ff	 cvtsd2ss xmm1, QWORD PTR tv807[ebp]
  001d5	f3 0f 5e c1	 divss	 xmm0, xmm1
  001d9	f3 0f 11 45 c8	 movss	 DWORD PTR _ar$32[ebp], xmm0
; Line 364
  001de	8b 45 e8	 mov	 eax, DWORD PTR _width$[ebp]
  001e1	3b 45 dc	 cmp	 eax, DWORD PTR _height$[ebp]
  001e4	76 48		 jbe	 SHORT $LN56@CreateText
; Line 366
  001e6	8b 4d 14	 mov	 ecx, DWORD PTR _maxsize$[ebp]
  001e9	89 4d d0	 mov	 DWORD PTR _twidth$[ebp], ecx
; Line 367
  001ec	8b 55 14	 mov	 edx, DWORD PTR _maxsize$[ebp]
  001ef	89 95 00 fe ff
	ff		 mov	 DWORD PTR tv814[ebp], edx
  001f5	f2 0f 2a 85 00
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv814[ebp]
  001fd	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR tv814[ebp]
  00203	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00206	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0020f	f2 0f 11 85 f8
	fd ff ff	 movsd	 QWORD PTR tv818[ebp], xmm0
  00217	f2 0f 5a 85 f8
	fd ff ff	 cvtsd2ss xmm0, QWORD PTR tv818[ebp]
  0021f	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _ar$32[ebp]
  00224	e8 00 00 00 00	 call	 __ftoui3
  00229	89 45 cc	 mov	 DWORD PTR _theight$[ebp], eax
; Line 369
  0022c	eb 46		 jmp	 SHORT $LN55@CreateText
$LN56@CreateText:
; Line 371
  0022e	8b 4d 14	 mov	 ecx, DWORD PTR _maxsize$[ebp]
  00231	89 4d cc	 mov	 DWORD PTR _theight$[ebp], ecx
; Line 372
  00234	8b 55 14	 mov	 edx, DWORD PTR _maxsize$[ebp]
  00237	89 95 f4 fd ff
	ff		 mov	 DWORD PTR tv827[ebp], edx
  0023d	f2 0f 2a 85 f4
	fd ff ff	 cvtsi2sd xmm0, DWORD PTR tv827[ebp]
  00245	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR tv827[ebp]
  0024b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0024e	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00257	f2 0f 11 85 ec
	fd ff ff	 movsd	 QWORD PTR tv831[ebp], xmm0
  0025f	f2 0f 5a 85 ec
	fd ff ff	 cvtsd2ss xmm0, QWORD PTR tv831[ebp]
  00267	f3 0f 5e 45 c8	 divss	 xmm0, DWORD PTR _ar$32[ebp]
  0026c	e8 00 00 00 00	 call	 __ftoui3
  00271	89 45 d0	 mov	 DWORD PTR _twidth$[ebp], eax
$LN55@CreateText:
; Line 374
  00274	8b 4d d0	 mov	 ecx, DWORD PTR _twidth$[ebp]
  00277	3b 4d 14	 cmp	 ecx, DWORD PTR _maxsize$[ebp]
  0027a	77 08		 ja	 SHORT $LN73@CreateText
  0027c	8b 55 cc	 mov	 edx, DWORD PTR _theight$[ebp]
  0027f	3b 55 14	 cmp	 edx, DWORD PTR _maxsize$[ebp]
  00282	76 21		 jbe	 SHORT $LN74@CreateText
$LN73@CreateText:
  00284	8b f4		 mov	 esi, esp
  00286	68 76 01 00 00	 push	 374			; 00000176H
  0028b	68 00 00 00 00	 push	 OFFSET $SG155650
  00290	68 00 00 00 00	 push	 OFFSET $SG155651
  00295	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0029b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0029e	3b f4		 cmp	 esi, esp
  002a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN74@CreateText:
; Line 376
  002a5	eb 0c		 jmp	 SHORT $LN54@CreateText
$LN58@CreateText:
; Line 378
  002a7	8b 4d e8	 mov	 ecx, DWORD PTR _width$[ebp]
  002aa	89 4d d0	 mov	 DWORD PTR _twidth$[ebp], ecx
; Line 379
  002ad	8b 55 dc	 mov	 edx, DWORD PTR _height$[ebp]
  002b0	89 55 cc	 mov	 DWORD PTR _theight$[ebp], edx
$LN54@CreateText:
; Line 384
  002b3	8b f4		 mov	 esi, esp
  002b5	8d 45 b4	 lea	 eax, DWORD PTR _pixelFormat$[ebp]
  002b8	50		 push	 eax
  002b9	8b 4d 10	 mov	 ecx, DWORD PTR _frame$[ebp]
  002bc	8b 11		 mov	 edx, DWORD PTR [ecx]
  002be	8b 45 10	 mov	 eax, DWORD PTR _frame$[ebp]
  002c1	50		 push	 eax
  002c2	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  002c5	ff d1		 call	 ecx
  002c7	3b f4		 cmp	 esi, esp
  002c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ce	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 385
  002d1	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  002d5	7d 08		 jge	 SHORT $LN53@CreateText
; Line 386
  002d7	8b 45 d4	 mov	 eax, DWORD PTR _hr$[ebp]
  002da	e9 67 0e 00 00	 jmp	 $LN67@CreateText
$LN53@CreateText:
; Line 389
  002df	8b 55 b4	 mov	 edx, DWORD PTR _pixelFormat$[ebp]
  002e2	89 55 9c	 mov	 DWORD PTR _convertGUID$[ebp], edx
  002e5	8b 45 b8	 mov	 eax, DWORD PTR _pixelFormat$[ebp+4]
  002e8	89 45 a0	 mov	 DWORD PTR _convertGUID$[ebp+4], eax
  002eb	8b 4d bc	 mov	 ecx, DWORD PTR _pixelFormat$[ebp+8]
  002ee	89 4d a4	 mov	 DWORD PTR _convertGUID$[ebp+8], ecx
  002f1	8b 55 c0	 mov	 edx, DWORD PTR _pixelFormat$[ebp+12]
  002f4	89 55 a8	 mov	 DWORD PTR _convertGUID$[ebp+12], edx
; Line 391
  002f7	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _bpp$[ebp], 0
; Line 393
  002fe	8d 45 b4	 lea	 eax, DWORD PTR _pixelFormat$[ebp]
  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z ; _WICToDXGI
  00307	83 c4 04	 add	 esp, 4
  0030a	89 45 90	 mov	 DWORD PTR _format$[ebp], eax
; Line 394
  0030d	83 7d 90 00	 cmp	 DWORD PTR _format$[ebp], 0
  00311	0f 85 24 01 00
	00		 jne	 $LN52@CreateText
; Line 396
  00317	6a 10		 push	 16			; 00000010H
  00319	8d 4d b4	 lea	 ecx, DWORD PTR _pixelFormat$[ebp]
  0031c	51		 push	 ecx
  0031d	68 00 00 00 00	 push	 OFFSET _GUID_WICPixelFormat96bppRGBFixedPoint
  00322	e8 00 00 00 00	 call	 _memcmp
  00327	83 c4 0c	 add	 esp, 12			; 0000000cH
  0032a	89 85 e8 fd ff
	ff		 mov	 DWORD PTR tv170[ebp], eax
  00330	83 bd e8 fd ff
	ff 00		 cmp	 DWORD PTR tv170[ebp], 0
  00337	75 2f		 jne	 SHORT $LN51@CreateText
; Line 407
  00339	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  0033f	89 55 9c	 mov	 DWORD PTR _convertGUID$[ebp], edx
  00342	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  00347	89 45 a0	 mov	 DWORD PTR _convertGUID$[ebp+4], eax
  0034a	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  00350	89 4d a4	 mov	 DWORD PTR _convertGUID$[ebp+8], ecx
  00353	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  00359	89 55 a8	 mov	 DWORD PTR _convertGUID$[ebp+12], edx
; Line 408
  0035c	c7 45 90 02 00
	00 00		 mov	 DWORD PTR _format$[ebp], 2
; Line 411
  00363	e9 bc 00 00 00	 jmp	 $LN47@CreateText
$LN51@CreateText:
; Line 413
  00368	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _i$31[ebp], 0
  0036f	eb 09		 jmp	 SHORT $LN49@CreateText
$LN48@CreateText:
  00371	8b 45 8c	 mov	 eax, DWORD PTR _i$31[ebp]
  00374	83 c0 01	 add	 eax, 1
  00377	89 45 8c	 mov	 DWORD PTR _i$31[ebp], eax
$LN49@CreateText:
  0037a	83 7d 8c 24	 cmp	 DWORD PTR _i$31[ebp], 36 ; 00000024H
  0037e	0f 83 a0 00 00
	00		 jae	 $LN47@CreateText
; Line 415
  00384	6a 10		 push	 16			; 00000010H
  00386	8d 4d b4	 lea	 ecx, DWORD PTR _pixelFormat$[ebp]
  00389	51		 push	 ecx
  0038a	8b 55 8c	 mov	 edx, DWORD PTR _i$31[ebp]
  0038d	c1 e2 05	 shl	 edx, 5
  00390	81 c2 00 00 00
	00		 add	 edx, OFFSET _g_WICConvert
  00396	52		 push	 edx
  00397	e8 00 00 00 00	 call	 _memcmp
  0039c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0039f	89 85 e4 fd ff
	ff		 mov	 DWORD PTR tv186[ebp], eax
  003a5	83 bd e4 fd ff
	ff 00		 cmp	 DWORD PTR tv186[ebp], 0
  003ac	75 71		 jne	 SHORT $LN46@CreateText
; Line 417
  003ae	8b 45 8c	 mov	 eax, DWORD PTR _i$31[ebp]
  003b1	c1 e0 05	 shl	 eax, 5
  003b4	05 10 00 00 00	 add	 eax, OFFSET _g_WICConvert+16
  003b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  003bb	89 4d 9c	 mov	 DWORD PTR _convertGUID$[ebp], ecx
  003be	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  003c1	89 55 a0	 mov	 DWORD PTR _convertGUID$[ebp+4], edx
  003c4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  003c7	89 4d a4	 mov	 DWORD PTR _convertGUID$[ebp+8], ecx
  003ca	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  003cd	89 55 a8	 mov	 DWORD PTR _convertGUID$[ebp+12], edx
; Line 419
  003d0	8b 45 8c	 mov	 eax, DWORD PTR _i$31[ebp]
  003d3	c1 e0 05	 shl	 eax, 5
  003d6	05 10 00 00 00	 add	 eax, OFFSET _g_WICConvert+16
  003db	50		 push	 eax
  003dc	e8 00 00 00 00	 call	 ?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z ; _WICToDXGI
  003e1	83 c4 04	 add	 esp, 4
  003e4	89 45 90	 mov	 DWORD PTR _format$[ebp], eax
; Line 420
  003e7	83 7d 90 00	 cmp	 DWORD PTR _format$[ebp], 0
  003eb	75 21		 jne	 SHORT $LN75@CreateText
  003ed	8b f4		 mov	 esi, esp
  003ef	68 a4 01 00 00	 push	 420			; 000001a4H
  003f4	68 00 00 00 00	 push	 OFFSET $SG155678
  003f9	68 00 00 00 00	 push	 OFFSET $SG155679
  003fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00404	83 c4 0c	 add	 esp, 12			; 0000000cH
  00407	3b f4		 cmp	 esi, esp
  00409	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN75@CreateText:
; Line 421
  0040e	8d 55 9c	 lea	 edx, DWORD PTR _convertGUID$[ebp]
  00411	52		 push	 edx
  00412	e8 00 00 00 00	 call	 ?_WICBitsPerPixel@@YAIABU_GUID@@@Z ; _WICBitsPerPixel
  00417	83 c4 04	 add	 esp, 4
  0041a	89 45 94	 mov	 DWORD PTR _bpp$[ebp], eax
; Line 422
  0041d	eb 05		 jmp	 SHORT $LN47@CreateText
$LN46@CreateText:
; Line 424
  0041f	e9 4d ff ff ff	 jmp	 $LN48@CreateText
$LN47@CreateText:
; Line 427
  00424	83 7d 90 00	 cmp	 DWORD PTR _format$[ebp], 0
  00428	75 0f		 jne	 SHORT $LN45@CreateText
; Line 428
  0042a	6a 32		 push	 50			; 00000032H
  0042c	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00431	83 c4 04	 add	 esp, 4
  00434	e9 0d 0d 00 00	 jmp	 $LN67@CreateText
$LN45@CreateText:
; Line 430
  00439	eb 0f		 jmp	 SHORT $LN44@CreateText
$LN52@CreateText:
; Line 432
  0043b	8d 45 b4	 lea	 eax, DWORD PTR _pixelFormat$[ebp]
  0043e	50		 push	 eax
  0043f	e8 00 00 00 00	 call	 ?_WICBitsPerPixel@@YAIABU_GUID@@@Z ; _WICBitsPerPixel
  00444	83 c4 04	 add	 esp, 4
  00447	89 45 94	 mov	 DWORD PTR _bpp$[ebp], eax
$LN44@CreateText:
; Line 451
  0044a	83 7d 94 00	 cmp	 DWORD PTR _bpp$[ebp], 0
  0044e	75 0a		 jne	 SHORT $LN43@CreateText
; Line 452
  00450	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00455	e9 ec 0c 00 00	 jmp	 $LN67@CreateText
$LN43@CreateText:
; Line 455
  0045a	0f b6 4d 28	 movzx	 ecx, BYTE PTR _forceSRGB$[ebp]
  0045e	85 c9		 test	 ecx, ecx
  00460	74 14		 je	 SHORT $LN42@CreateText
; Line 457
  00462	8b 55 90	 mov	 edx, DWORD PTR _format$[ebp]
  00465	52		 push	 edx
  00466	e8 00 00 00 00	 call	 ?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z ; MakeSRGB
  0046b	83 c4 04	 add	 esp, 4
  0046e	89 45 90	 mov	 DWORD PTR _format$[ebp], eax
; Line 459
  00471	e9 95 01 00 00	 jmp	 $LN41@CreateText
$LN42@CreateText:
; Line 461
  00476	8d 4d 84	 lea	 ecx, DWORD PTR _metareader$30[ebp]
  00479	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>
  0047e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 462
  00485	8d 4d 84	 lea	 ecx, DWORD PTR _metareader$30[ebp]
  00488	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf
  0048d	8b f4		 mov	 esi, esp
  0048f	50		 push	 eax
  00490	8b 45 10	 mov	 eax, DWORD PTR _frame$[ebp]
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	8b 55 10	 mov	 edx, DWORD PTR _frame$[ebp]
  00498	52		 push	 edx
  00499	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  0049c	ff d0		 call	 eax
  0049e	3b f4		 cmp	 esi, esp
  004a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a5	85 c0		 test	 eax, eax
  004a7	0f 8c 4f 01 00
	00		 jl	 $LN34@CreateText
; Line 465
  004ad	8d 4d 84	 lea	 ecx, DWORD PTR _metareader$30[ebp]
  004b0	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
  004b5	89 85 e0 fd ff
	ff		 mov	 DWORD PTR tv236[ebp], eax
  004bb	8b f4		 mov	 esi, esp
  004bd	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _containerFormat$29[ebp]
  004c3	51		 push	 ecx
  004c4	8b 95 e0 fd ff
	ff		 mov	 edx, DWORD PTR tv236[ebp]
  004ca	52		 push	 edx
  004cb	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv236[ebp]
  004d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d3	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  004d6	ff d2		 call	 edx
  004d8	3b f4		 cmp	 esi, esp
  004da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004df	85 c0		 test	 eax, eax
  004e1	0f 8c 15 01 00
	00		 jl	 $LN34@CreateText
; Line 468
  004e7	c6 85 67 ff ff
	ff 00		 mov	 BYTE PTR _sRGB$28[ebp], 0
; Line 471
  004ee	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _value$27[ebp]
  004f4	50		 push	 eax
  004f5	e8 00 00 00 00	 call	 _PropVariantInit
  004fa	83 c4 04	 add	 esp, 4
; Line 473
  004fd	6a 10		 push	 16			; 00000010H
  004ff	68 00 00 00 00	 push	 OFFSET _GUID_ContainerFormatPng
  00504	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _containerFormat$29[ebp]
  0050a	51		 push	 ecx
  0050b	e8 00 00 00 00	 call	 _memcmp
  00510	83 c4 0c	 add	 esp, 12			; 0000000cH
  00513	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv247[ebp], eax
  00519	83 bd dc fd ff
	ff 00		 cmp	 DWORD PTR tv247[ebp], 0
  00520	75 50		 jne	 SHORT $LN38@CreateText
; Line 476
  00522	8d 4d 84	 lea	 ecx, DWORD PTR _metareader$30[ebp]
  00525	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
  0052a	89 85 d8 fd ff
	ff		 mov	 DWORD PTR tv256[ebp], eax
  00530	8b f4		 mov	 esi, esp
  00532	8d 95 50 ff ff
	ff		 lea	 edx, DWORD PTR _value$27[ebp]
  00538	52		 push	 edx
  00539	68 00 00 00 00	 push	 OFFSET $SG155817
  0053e	8b 85 d8 fd ff
	ff		 mov	 eax, DWORD PTR tv256[ebp]
  00544	50		 push	 eax
  00545	8b 8d d8 fd ff
	ff		 mov	 ecx, DWORD PTR tv256[ebp]
  0054b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0054d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00550	ff d0		 call	 eax
  00552	3b f4		 cmp	 esi, esp
  00554	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00559	85 c0		 test	 eax, eax
  0055b	7c 13		 jl	 SHORT $LN37@CreateText
  0055d	0f b7 8d 50 ff
	ff ff		 movzx	 ecx, WORD PTR _value$27[ebp]
  00564	83 f9 11	 cmp	 ecx, 17			; 00000011H
  00567	75 07		 jne	 SHORT $LN37@CreateText
; Line 478
  00569	c6 85 67 ff ff
	ff 01		 mov	 BYTE PTR _sRGB$28[ebp], 1
$LN37@CreateText:
; Line 480
  00570	eb 5a		 jmp	 SHORT $LN35@CreateText
$LN38@CreateText:
; Line 481
  00572	8d 4d 84	 lea	 ecx, DWORD PTR _metareader$30[ebp]
  00575	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
  0057a	89 85 d4 fd ff
	ff		 mov	 DWORD PTR tv272[ebp], eax
  00580	8b f4		 mov	 esi, esp
  00582	8d 95 50 ff ff
	ff		 lea	 edx, DWORD PTR _value$27[ebp]
  00588	52		 push	 edx
  00589	68 00 00 00 00	 push	 OFFSET $SG155821
  0058e	8b 85 d4 fd ff
	ff		 mov	 eax, DWORD PTR tv272[ebp]
  00594	50		 push	 eax
  00595	8b 8d d4 fd ff
	ff		 mov	 ecx, DWORD PTR tv272[ebp]
  0059b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0059d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  005a0	ff d0		 call	 eax
  005a2	3b f4		 cmp	 esi, esp
  005a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a9	85 c0		 test	 eax, eax
  005ab	7c 1f		 jl	 SHORT $LN35@CreateText
  005ad	0f b7 8d 50 ff
	ff ff		 movzx	 ecx, WORD PTR _value$27[ebp]
  005b4	83 f9 12	 cmp	 ecx, 18			; 00000012H
  005b7	75 13		 jne	 SHORT $LN35@CreateText
  005b9	0f b7 95 58 ff
	ff ff		 movzx	 edx, WORD PTR _value$27[ebp+8]
  005c0	83 fa 01	 cmp	 edx, 1
  005c3	75 07		 jne	 SHORT $LN35@CreateText
; Line 483
  005c5	c6 85 67 ff ff
	ff 01		 mov	 BYTE PTR _sRGB$28[ebp], 1
$LN35@CreateText:
; Line 486
  005cc	8b f4		 mov	 esi, esp
  005ce	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _value$27[ebp]
  005d4	50		 push	 eax
  005d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PropVariantClear@4
  005db	3b f4		 cmp	 esi, esp
  005dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 488
  005e2	0f b6 8d 67 ff
	ff ff		 movzx	 ecx, BYTE PTR _sRGB$28[ebp]
  005e9	85 c9		 test	 ecx, ecx
  005eb	74 0f		 je	 SHORT $LN34@CreateText
; Line 489
  005ed	8b 55 90	 mov	 edx, DWORD PTR _format$[ebp]
  005f0	52		 push	 edx
  005f1	e8 00 00 00 00	 call	 ?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z ; MakeSRGB
  005f6	83 c4 04	 add	 esp, 4
  005f9	89 45 90	 mov	 DWORD PTR _format$[ebp], eax
$LN34@CreateText:
; Line 492
  005fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00603	8d 4d 84	 lea	 ecx, DWORD PTR _metareader$30[ebp]
  00606	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
$LN41@CreateText:
; Line 496
  0060b	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _support$[ebp], 0
; Line 497
  00615	8b f4		 mov	 esi, esp
  00617	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _support$[ebp]
  0061d	50		 push	 eax
  0061e	8b 4d 90	 mov	 ecx, DWORD PTR _format$[ebp]
  00621	51		 push	 ecx
  00622	8b 55 08	 mov	 edx, DWORD PTR _d3dDevice$[ebp]
  00625	8b 02		 mov	 eax, DWORD PTR [edx]
  00627	8b 4d 08	 mov	 ecx, DWORD PTR _d3dDevice$[ebp]
  0062a	51		 push	 ecx
  0062b	8b 50 74	 mov	 edx, DWORD PTR [eax+116]
  0062e	ff d2		 call	 edx
  00630	3b f4		 cmp	 esi, esp
  00632	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00637	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 498
  0063a	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0063e	7c 0b		 jl	 SHORT $LN32@CreateText
  00640	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _support$[ebp]
  00646	83 e0 20	 and	 eax, 32			; 00000020H
  00649	75 31		 jne	 SHORT $LN33@CreateText
$LN32@CreateText:
; Line 501
  0064b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  00651	89 4d 9c	 mov	 DWORD PTR _convertGUID$[ebp], ecx
  00654	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  0065a	89 55 a0	 mov	 DWORD PTR _convertGUID$[ebp+4], edx
  0065d	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  00662	89 45 a4	 mov	 DWORD PTR _convertGUID$[ebp+8], eax
  00665	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  0066b	89 4d a8	 mov	 DWORD PTR _convertGUID$[ebp+12], ecx
; Line 502
  0066e	c7 45 90 1c 00
	00 00		 mov	 DWORD PTR _format$[ebp], 28 ; 0000001cH
; Line 503
  00675	c7 45 94 20 00
	00 00		 mov	 DWORD PTR _bpp$[ebp], 32 ; 00000020H
$LN33@CreateText:
; Line 507
  0067c	8b 55 d0	 mov	 edx, DWORD PTR _twidth$[ebp]
  0067f	0f af 55 94	 imul	 edx, DWORD PTR _bpp$[ebp]
  00683	83 c2 07	 add	 edx, 7
  00686	c1 ea 03	 shr	 edx, 3
  00689	89 95 3c ff ff
	ff		 mov	 DWORD PTR _rowPitch$[ebp], edx
; Line 508
  0068f	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _rowPitch$[ebp]
  00695	0f af 45 cc	 imul	 eax, DWORD PTR _theight$[ebp]
  00699	89 85 38 ff ff
	ff		 mov	 DWORD PTR _imageSize$[ebp], eax
; Line 510
  0069f	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  006a4	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _imageSize$[ebp]
  006aa	51		 push	 ecx
  006ab	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  006b0	83 c4 08	 add	 esp, 8
  006b3	89 85 60 fe ff
	ff		 mov	 DWORD PTR $T18[ebp], eax
  006b9	8b 95 60 fe ff
	ff		 mov	 edx, DWORD PTR $T18[ebp]
  006bf	52		 push	 edx
  006c0	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  006c6	e8 00 00 00 00	 call	 ??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  006cb	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 511
  006d2	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  006d8	e8 00 00 00 00	 call	 ??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
  006dd	0f b6 c0	 movzx	 eax, al
  006e0	85 c0		 test	 eax, eax
  006e2	75 27		 jne	 SHORT $LN31@CreateText
; Line 512
  006e4	c7 85 5c fe ff
	ff 0e 00 07 80	 mov	 DWORD PTR $T17[ebp], -2147024882 ; 8007000eH
  006ee	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006f5	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  006fb	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00700	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR $T17[ebp]
  00706	e9 3b 0a 00 00	 jmp	 $LN67@CreateText
$LN31@CreateText:
; Line 517
  0070b	6a 10		 push	 16			; 00000010H
  0070d	8d 4d b4	 lea	 ecx, DWORD PTR _pixelFormat$[ebp]
  00710	51		 push	 ecx
  00711	8d 55 9c	 lea	 edx, DWORD PTR _convertGUID$[ebp]
  00714	52		 push	 edx
  00715	e8 00 00 00 00	 call	 _memcmp
  0071a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0071d	89 85 d0 fd ff
	ff		 mov	 DWORD PTR tv353[ebp], eax
  00723	83 bd d0 fd ff
	ff 00		 cmp	 DWORD PTR tv353[ebp], 0
  0072a	75 77		 jne	 SHORT $LN30@CreateText
  0072c	8b 45 d0	 mov	 eax, DWORD PTR _twidth$[ebp]
  0072f	3b 45 e8	 cmp	 eax, DWORD PTR _width$[ebp]
  00732	75 6f		 jne	 SHORT $LN30@CreateText
  00734	8b 4d cc	 mov	 ecx, DWORD PTR _theight$[ebp]
  00737	3b 4d dc	 cmp	 ecx, DWORD PTR _height$[ebp]
  0073a	75 67		 jne	 SHORT $LN30@CreateText
; Line 520
  0073c	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00742	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  00747	8b f4		 mov	 esi, esp
  00749	50		 push	 eax
  0074a	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _imageSize$[ebp]
  00750	52		 push	 edx
  00751	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _rowPitch$[ebp]
  00757	50		 push	 eax
  00758	6a 00		 push	 0
  0075a	8b 4d 10	 mov	 ecx, DWORD PTR _frame$[ebp]
  0075d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0075f	8b 45 10	 mov	 eax, DWORD PTR _frame$[ebp]
  00762	50		 push	 eax
  00763	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  00766	ff d1		 call	 ecx
  00768	3b f4		 cmp	 esi, esp
  0076a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0076f	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 521
  00772	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00776	7d 26		 jge	 SHORT $LN29@CreateText
; Line 522
  00778	8b 55 d4	 mov	 edx, DWORD PTR _hr$[ebp]
  0077b	89 95 58 fe ff
	ff		 mov	 DWORD PTR $T16[ebp], edx
  00781	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00788	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  0078e	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00793	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR $T16[ebp]
  00799	e9 a8 09 00 00	 jmp	 $LN67@CreateText
$LN29@CreateText:
; Line 523
  0079e	e9 19 06 00 00	 jmp	 $LN15@CreateText
$LN30@CreateText:
; Line 524
  007a3	8b 45 d0	 mov	 eax, DWORD PTR _twidth$[ebp]
  007a6	3b 45 e8	 cmp	 eax, DWORD PTR _width$[ebp]
  007a9	75 0c		 jne	 SHORT $LN26@CreateText
  007ab	8b 4d cc	 mov	 ecx, DWORD PTR _theight$[ebp]
  007ae	3b 4d dc	 cmp	 ecx, DWORD PTR _height$[ebp]
  007b1	0f 84 33 04 00
	00		 je	 $LN27@CreateText
$LN26@CreateText:
; Line 527
  007b7	e8 00 00 00 00	 call	 ?_GetWIC@@YAPAUIWICImagingFactory@@XZ ; _GetWIC
  007bc	89 85 28 ff ff
	ff		 mov	 DWORD PTR _pWIC$26[ebp], eax
; Line 528
  007c2	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _pWIC$26[ebp], 0
  007c9	75 27		 jne	 SHORT $LN25@CreateText
; Line 529
  007cb	c7 85 54 fe ff
	ff 02 40 00 80	 mov	 DWORD PTR $T15[ebp], -2147467262 ; 80004002H
  007d5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007dc	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  007e2	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  007e7	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR $T15[ebp]
  007ed	e9 54 09 00 00	 jmp	 $LN67@CreateText
$LN25@CreateText:
; Line 531
  007f2	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  007f8	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>
  007fd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; Line 532
  00801	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00807	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf
  0080c	8b f4		 mov	 esi, esp
  0080e	50		 push	 eax
  0080f	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _pWIC$26[ebp]
  00815	8b 02		 mov	 eax, DWORD PTR [edx]
  00817	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _pWIC$26[ebp]
  0081d	51		 push	 ecx
  0081e	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  00821	ff d2		 call	 edx
  00823	3b f4		 cmp	 esi, esp
  00825	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0082a	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 533
  0082d	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00831	7d 35		 jge	 SHORT $LN24@CreateText
; Line 534
  00833	8b 45 d4	 mov	 eax, DWORD PTR _hr$[ebp]
  00836	89 85 50 fe ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  0083c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00840	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00846	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
  0084b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00852	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00858	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  0085d	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR $T14[ebp]
  00863	e9 de 08 00 00	 jmp	 $LN67@CreateText
$LN24@CreateText:
; Line 536
  00868	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  0086e	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
  00873	89 85 cc fd ff
	ff		 mov	 DWORD PTR tv394[ebp], eax
  00879	8b f4		 mov	 esi, esp
  0087b	6a 03		 push	 3
  0087d	8b 4d cc	 mov	 ecx, DWORD PTR _theight$[ebp]
  00880	51		 push	 ecx
  00881	8b 55 d0	 mov	 edx, DWORD PTR _twidth$[ebp]
  00884	52		 push	 edx
  00885	8b 45 10	 mov	 eax, DWORD PTR _frame$[ebp]
  00888	50		 push	 eax
  00889	8b 8d cc fd ff
	ff		 mov	 ecx, DWORD PTR tv394[ebp]
  0088f	51		 push	 ecx
  00890	8b 95 cc fd ff
	ff		 mov	 edx, DWORD PTR tv394[ebp]
  00896	8b 02		 mov	 eax, DWORD PTR [edx]
  00898	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0089b	ff d1		 call	 ecx
  0089d	3b f4		 cmp	 esi, esp
  0089f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008a4	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 537
  008a7	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  008ab	7d 35		 jge	 SHORT $LN23@CreateText
; Line 538
  008ad	8b 55 d4	 mov	 edx, DWORD PTR _hr$[ebp]
  008b0	89 95 4c fe ff
	ff		 mov	 DWORD PTR $T13[ebp], edx
  008b6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  008ba	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  008c0	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
  008c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008cc	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  008d2	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  008d7	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  008dd	e9 64 08 00 00	 jmp	 $LN67@CreateText
$LN23@CreateText:
; Line 541
  008e2	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  008e8	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
  008ed	89 85 c8 fd ff
	ff		 mov	 DWORD PTR tv414[ebp], eax
  008f3	8b f4		 mov	 esi, esp
  008f5	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _pfScaler$24[ebp]
  008fb	50		 push	 eax
  008fc	8b 8d c8 fd ff
	ff		 mov	 ecx, DWORD PTR tv414[ebp]
  00902	51		 push	 ecx
  00903	8b 95 c8 fd ff
	ff		 mov	 edx, DWORD PTR tv414[ebp]
  00909	8b 02		 mov	 eax, DWORD PTR [edx]
  0090b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0090e	ff d1		 call	 ecx
  00910	3b f4		 cmp	 esi, esp
  00912	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00917	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 542
  0091a	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0091e	7d 35		 jge	 SHORT $LN22@CreateText
; Line 543
  00920	8b 55 d4	 mov	 edx, DWORD PTR _hr$[ebp]
  00923	89 95 48 fe ff
	ff		 mov	 DWORD PTR $T12[ebp], edx
  00929	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0092d	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00933	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
  00938	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0093f	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00945	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  0094a	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  00950	e9 f1 07 00 00	 jmp	 $LN67@CreateText
$LN22@CreateText:
; Line 545
  00955	6a 10		 push	 16			; 00000010H
  00957	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _pfScaler$24[ebp]
  0095d	50		 push	 eax
  0095e	8d 4d 9c	 lea	 ecx, DWORD PTR _convertGUID$[ebp]
  00961	51		 push	 ecx
  00962	e8 00 00 00 00	 call	 _memcmp
  00967	83 c4 0c	 add	 esp, 12			; 0000000cH
  0096a	89 85 c4 fd ff
	ff		 mov	 DWORD PTR tv424[ebp], eax
  00970	83 bd c4 fd ff
	ff 00		 cmp	 DWORD PTR tv424[ebp], 0
  00977	0f 85 8d 00 00
	00		 jne	 $LN21@CreateText
; Line 548
  0097d	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00983	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
  00988	89 85 c0 fd ff
	ff		 mov	 DWORD PTR tv433[ebp], eax
  0098e	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00994	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  00999	8b f4		 mov	 esi, esp
  0099b	50		 push	 eax
  0099c	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _imageSize$[ebp]
  009a2	52		 push	 edx
  009a3	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _rowPitch$[ebp]
  009a9	50		 push	 eax
  009aa	6a 00		 push	 0
  009ac	8b 8d c0 fd ff
	ff		 mov	 ecx, DWORD PTR tv433[ebp]
  009b2	51		 push	 ecx
  009b3	8b 95 c0 fd ff
	ff		 mov	 edx, DWORD PTR tv433[ebp]
  009b9	8b 02		 mov	 eax, DWORD PTR [edx]
  009bb	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  009be	ff d1		 call	 ecx
  009c0	3b f4		 cmp	 esi, esp
  009c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009c7	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 549
  009ca	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  009ce	7d 35		 jge	 SHORT $LN20@CreateText
; Line 550
  009d0	8b 55 d4	 mov	 edx, DWORD PTR _hr$[ebp]
  009d3	89 95 44 fe ff
	ff		 mov	 DWORD PTR $T11[ebp], edx
  009d9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  009dd	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  009e3	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
  009e8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  009ef	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  009f5	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  009fa	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR $T11[ebp]
  00a00	e9 41 07 00 00	 jmp	 $LN67@CreateText
$LN20@CreateText:
; Line 552
  00a05	e9 cc 01 00 00	 jmp	 $LN19@CreateText
$LN21@CreateText:
; Line 554
  00a0a	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00a10	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
  00a15	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; Line 555
  00a19	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00a1f	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
  00a24	8b f4		 mov	 esi, esp
  00a26	50		 push	 eax
  00a27	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _pWIC$26[ebp]
  00a2d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a2f	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _pWIC$26[ebp]
  00a35	52		 push	 edx
  00a36	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00a39	ff d0		 call	 eax
  00a3b	3b f4		 cmp	 esi, esp
  00a3d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a42	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 556
  00a45	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00a49	7d 44		 jge	 SHORT $LN18@CreateText
; Line 557
  00a4b	8b 4d d4	 mov	 ecx, DWORD PTR _hr$[ebp]
  00a4e	89 8d 40 fe ff
	ff		 mov	 DWORD PTR $T10[ebp], ecx
  00a54	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a58	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00a5e	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  00a63	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a67	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00a6d	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
  00a72	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a79	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00a7f	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00a84	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  00a8a	e9 b7 06 00 00	 jmp	 $LN67@CreateText
$LN18@CreateText:
; Line 559
  00a8f	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00a95	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
  00a9a	89 85 bc fd ff
	ff		 mov	 DWORD PTR tv462[ebp], eax
  00aa0	8b f4		 mov	 esi, esp
  00aa2	6a 00		 push	 0
  00aa4	83 ec 08	 sub	 esp, 8
  00aa7	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  00aaf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ab4	6a 00		 push	 0
  00ab6	6a 08		 push	 8
  00ab8	8d 55 9c	 lea	 edx, DWORD PTR _convertGUID$[ebp]
  00abb	52		 push	 edx
  00abc	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00ac2	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get
  00ac7	50		 push	 eax
  00ac8	8b 85 bc fd ff
	ff		 mov	 eax, DWORD PTR tv462[ebp]
  00ace	50		 push	 eax
  00acf	8b 8d bc fd ff
	ff		 mov	 ecx, DWORD PTR tv462[ebp]
  00ad5	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ad7	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00ada	ff d0		 call	 eax
  00adc	3b f4		 cmp	 esi, esp
  00ade	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ae3	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 560
  00ae6	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00aea	7d 44		 jge	 SHORT $LN17@CreateText
; Line 561
  00aec	8b 4d d4	 mov	 ecx, DWORD PTR _hr$[ebp]
  00aef	89 8d 3c fe ff
	ff		 mov	 DWORD PTR $T9[ebp], ecx
  00af5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00af9	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00aff	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  00b04	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b08	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00b0e	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
  00b13	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b1a	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00b20	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00b25	8b 85 3c fe ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  00b2b	e9 16 06 00 00	 jmp	 $LN67@CreateText
$LN17@CreateText:
; Line 563
  00b30	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00b36	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
  00b3b	89 85 b8 fd ff
	ff		 mov	 DWORD PTR tv486[ebp], eax
  00b41	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00b47	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  00b4c	8b f4		 mov	 esi, esp
  00b4e	50		 push	 eax
  00b4f	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _imageSize$[ebp]
  00b55	52		 push	 edx
  00b56	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _rowPitch$[ebp]
  00b5c	50		 push	 eax
  00b5d	6a 00		 push	 0
  00b5f	8b 8d b8 fd ff
	ff		 mov	 ecx, DWORD PTR tv486[ebp]
  00b65	51		 push	 ecx
  00b66	8b 95 b8 fd ff
	ff		 mov	 edx, DWORD PTR tv486[ebp]
  00b6c	8b 02		 mov	 eax, DWORD PTR [edx]
  00b6e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00b71	ff d1		 call	 ecx
  00b73	3b f4		 cmp	 esi, esp
  00b75	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b7a	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 564
  00b7d	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00b81	7d 44		 jge	 SHORT $LN16@CreateText
; Line 565
  00b83	8b 55 d4	 mov	 edx, DWORD PTR _hr$[ebp]
  00b86	89 95 38 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edx
  00b8c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00b90	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00b96	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  00b9b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b9f	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00ba5	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
  00baa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bb1	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00bb7	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00bbc	8b 85 38 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00bc2	e9 7f 05 00 00	 jmp	 $LN67@CreateText
$LN16@CreateText:
; Line 566
  00bc7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00bcb	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00bd1	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
$LN19@CreateText:
; Line 567
  00bd6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00bda	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00be0	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
; Line 568
  00be5	e9 d2 01 00 00	 jmp	 $LN15@CreateText
$LN27@CreateText:
; Line 571
  00bea	e8 00 00 00 00	 call	 ?_GetWIC@@YAPAUIWICImagingFactory@@XZ ; _GetWIC
  00bef	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _pWIC$22[ebp], eax
; Line 572
  00bf5	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _pWIC$22[ebp], 0
  00bfc	75 27		 jne	 SHORT $LN14@CreateText
; Line 573
  00bfe	c7 85 34 fe ff
	ff 02 40 00 80	 mov	 DWORD PTR $T7[ebp], -2147467262 ; 80004002H
  00c08	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c0f	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00c15	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00c1a	8b 85 34 fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00c20	e9 21 05 00 00	 jmp	 $LN67@CreateText
$LN14@CreateText:
; Line 575
  00c25	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00c2b	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
  00c30	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; Line 576
  00c34	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00c3a	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
  00c3f	8b f4		 mov	 esi, esp
  00c41	50		 push	 eax
  00c42	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _pWIC$22[ebp]
  00c48	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c4a	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _pWIC$22[ebp]
  00c50	52		 push	 edx
  00c51	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00c54	ff d0		 call	 eax
  00c56	3b f4		 cmp	 esi, esp
  00c58	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c5d	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 577
  00c60	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00c64	7d 35		 jge	 SHORT $LN13@CreateText
; Line 578
  00c66	8b 4d d4	 mov	 ecx, DWORD PTR _hr$[ebp]
  00c69	89 8d 30 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ecx
  00c6f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00c73	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00c79	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  00c7e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c85	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00c8b	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00c90	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00c96	e9 ab 04 00 00	 jmp	 $LN67@CreateText
$LN13@CreateText:
; Line 580
  00c9b	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00ca1	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
  00ca6	89 85 b4 fd ff
	ff		 mov	 DWORD PTR tv517[ebp], eax
  00cac	8b f4		 mov	 esi, esp
  00cae	6a 00		 push	 0
  00cb0	83 ec 08	 sub	 esp, 8
  00cb3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  00cbb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00cc0	6a 00		 push	 0
  00cc2	6a 08		 push	 8
  00cc4	8d 55 9c	 lea	 edx, DWORD PTR _convertGUID$[ebp]
  00cc7	52		 push	 edx
  00cc8	8b 45 10	 mov	 eax, DWORD PTR _frame$[ebp]
  00ccb	50		 push	 eax
  00ccc	8b 8d b4 fd ff
	ff		 mov	 ecx, DWORD PTR tv517[ebp]
  00cd2	51		 push	 ecx
  00cd3	8b 95 b4 fd ff
	ff		 mov	 edx, DWORD PTR tv517[ebp]
  00cd9	8b 02		 mov	 eax, DWORD PTR [edx]
  00cdb	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00cde	ff d1		 call	 ecx
  00ce0	3b f4		 cmp	 esi, esp
  00ce2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ce7	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 581
  00cea	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00cee	7d 35		 jge	 SHORT $LN12@CreateText
; Line 582
  00cf0	8b 55 d4	 mov	 edx, DWORD PTR _hr$[ebp]
  00cf3	89 95 2c fe ff
	ff		 mov	 DWORD PTR $T5[ebp], edx
  00cf9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00cfd	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00d03	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  00d08	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d0f	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00d15	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00d1a	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00d20	e9 21 04 00 00	 jmp	 $LN67@CreateText
$LN12@CreateText:
; Line 584
  00d25	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00d2b	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
  00d30	89 85 b0 fd ff
	ff		 mov	 DWORD PTR tv539[ebp], eax
  00d36	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00d3c	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  00d41	8b f4		 mov	 esi, esp
  00d43	50		 push	 eax
  00d44	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _imageSize$[ebp]
  00d4a	50		 push	 eax
  00d4b	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _rowPitch$[ebp]
  00d51	51		 push	 ecx
  00d52	6a 00		 push	 0
  00d54	8b 95 b0 fd ff
	ff		 mov	 edx, DWORD PTR tv539[ebp]
  00d5a	52		 push	 edx
  00d5b	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR tv539[ebp]
  00d61	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d63	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00d66	ff d2		 call	 edx
  00d68	3b f4		 cmp	 esi, esp
  00d6a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d6f	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 585
  00d72	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00d76	7d 35		 jge	 SHORT $LN11@CreateText
; Line 586
  00d78	8b 45 d4	 mov	 eax, DWORD PTR _hr$[ebp]
  00d7b	89 85 28 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00d81	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d85	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00d8b	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
  00d90	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d97	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00d9d	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  00da2	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00da8	e9 99 03 00 00	 jmp	 $LN67@CreateText
$LN11@CreateText:
; Line 587
  00dad	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00db1	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  00db7	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
$LN15@CreateText:
; Line 590
  00dbc	c6 85 e7 fe ff
	ff 00		 mov	 BYTE PTR _autogen$[ebp], 0
; Line 591
  00dc3	83 7d 0c 00	 cmp	 DWORD PTR _d3dContext$[ebp], 0
  00dc7	74 50		 je	 SHORT $LN9@CreateText
  00dc9	83 7d 30 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  00dcd	74 4a		 je	 SHORT $LN9@CreateText
; Line 593
  00dcf	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _fmtSupport$20[ebp], 0
; Line 594
  00dd9	8b f4		 mov	 esi, esp
  00ddb	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _fmtSupport$20[ebp]
  00de1	51		 push	 ecx
  00de2	8b 55 90	 mov	 edx, DWORD PTR _format$[ebp]
  00de5	52		 push	 edx
  00de6	8b 45 08	 mov	 eax, DWORD PTR _d3dDevice$[ebp]
  00de9	8b 08		 mov	 ecx, DWORD PTR [eax]
  00deb	8b 55 08	 mov	 edx, DWORD PTR _d3dDevice$[ebp]
  00dee	52		 push	 edx
  00def	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  00df2	ff d0		 call	 eax
  00df4	3b f4		 cmp	 esi, esp
  00df6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00dfb	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 595
  00dfe	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00e02	7c 15		 jl	 SHORT $LN9@CreateText
  00e04	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _fmtSupport$20[ebp]
  00e0a	81 e1 00 20 00
	00		 and	 ecx, 8192		; 00002000H
  00e10	74 07		 je	 SHORT $LN9@CreateText
; Line 597
  00e12	c6 85 e7 fe ff
	ff 01		 mov	 BYTE PTR _autogen$[ebp], 1
$LN9@CreateText:
; Line 603
  00e19	8b 55 d0	 mov	 edx, DWORD PTR _twidth$[ebp]
  00e1c	89 95 a8 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp], edx
; Line 604
  00e22	8b 45 cc	 mov	 eax, DWORD PTR _theight$[ebp]
  00e25	89 85 ac fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+4], eax
; Line 605
  00e2b	0f b6 8d e7 fe
	ff ff		 movzx	 ecx, BYTE PTR _autogen$[ebp]
  00e32	85 c9		 test	 ecx, ecx
  00e34	74 0c		 je	 SHORT $LN76@CreateText
  00e36	c7 85 ac fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv563[ebp], 0
  00e40	eb 0a		 jmp	 SHORT $LN77@CreateText
$LN76@CreateText:
  00e42	c7 85 ac fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv563[ebp], 1
$LN77@CreateText:
  00e4c	8b 95 ac fd ff
	ff		 mov	 edx, DWORD PTR tv563[ebp]
  00e52	89 95 b0 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+8], edx
; Line 606
  00e58	c7 85 b4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _desc$[ebp+12], 1
; Line 607
  00e62	8b 45 90	 mov	 eax, DWORD PTR _format$[ebp]
  00e65	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+16], eax
; Line 608
  00e6b	c7 85 bc fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _desc$[ebp+20], 1
; Line 609
  00e75	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _desc$[ebp+24], 0
; Line 610
  00e7f	8b 4d 18	 mov	 ecx, DWORD PTR _usage$[ebp]
  00e82	89 8d c4 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+28], ecx
; Line 611
  00e88	8b 55 20	 mov	 edx, DWORD PTR _cpuAccessFlags$[ebp]
  00e8b	89 95 cc fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+36], edx
; Line 613
  00e91	0f b6 85 e7 fe
	ff ff		 movzx	 eax, BYTE PTR _autogen$[ebp]
  00e98	85 c0		 test	 eax, eax
  00e9a	74 1a		 je	 SHORT $LN8@CreateText
; Line 615
  00e9c	8b 4d 1c	 mov	 ecx, DWORD PTR _bindFlags$[ebp]
  00e9f	83 c9 20	 or	 ecx, 32			; 00000020H
  00ea2	89 8d c8 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+32], ecx
; Line 616
  00ea8	8b 55 24	 mov	 edx, DWORD PTR _miscFlags$[ebp]
  00eab	83 ca 01	 or	 edx, 1
  00eae	89 95 d0 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+40], edx
; Line 618
  00eb4	eb 12		 jmp	 SHORT $LN7@CreateText
$LN8@CreateText:
; Line 620
  00eb6	8b 45 1c	 mov	 eax, DWORD PTR _bindFlags$[ebp]
  00eb9	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+32], eax
; Line 621
  00ebf	8b 4d 24	 mov	 ecx, DWORD PTR _miscFlags$[ebp]
  00ec2	89 8d d0 fe ff
	ff		 mov	 DWORD PTR _desc$[ebp+40], ecx
$LN7@CreateText:
; Line 625
  00ec8	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  00ece	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  00ed3	89 85 94 fe ff
	ff		 mov	 DWORD PTR _initData$[ebp], eax
; Line 626
  00ed9	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _rowPitch$[ebp]
  00edf	89 95 98 fe ff
	ff		 mov	 DWORD PTR _initData$[ebp+4], edx
; Line 627
  00ee5	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _imageSize$[ebp]
  00eeb	89 85 9c fe ff
	ff		 mov	 DWORD PTR _initData$[ebp+8], eax
; Line 629
  00ef1	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _tex$[ebp], 0
; Line 630
  00efb	0f b6 8d e7 fe
	ff ff		 movzx	 ecx, BYTE PTR _autogen$[ebp]
  00f02	85 c9		 test	 ecx, ecx
  00f04	74 0c		 je	 SHORT $LN78@CreateText
  00f06	c7 85 a8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv609[ebp], 0
  00f10	eb 0c		 jmp	 SHORT $LN79@CreateText
$LN78@CreateText:
  00f12	8d 95 94 fe ff
	ff		 lea	 edx, DWORD PTR _initData$[ebp]
  00f18	89 95 a8 fd ff
	ff		 mov	 DWORD PTR tv609[ebp], edx
$LN79@CreateText:
  00f1e	8b f4		 mov	 esi, esp
  00f20	8d 85 88 fe ff
	ff		 lea	 eax, DWORD PTR _tex$[ebp]
  00f26	50		 push	 eax
  00f27	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR tv609[ebp]
  00f2d	51		 push	 ecx
  00f2e	8d 95 a8 fe ff
	ff		 lea	 edx, DWORD PTR _desc$[ebp]
  00f34	52		 push	 edx
  00f35	8b 45 08	 mov	 eax, DWORD PTR _d3dDevice$[ebp]
  00f38	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f3a	8b 55 08	 mov	 edx, DWORD PTR _d3dDevice$[ebp]
  00f3d	52		 push	 edx
  00f3e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00f41	ff d0		 call	 eax
  00f43	3b f4		 cmp	 esi, esp
  00f45	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f4a	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 631
  00f4d	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00f51	0f 8c ce 01 00
	00		 jl	 $LN1@CreateText
  00f57	83 bd 88 fe ff
	ff 00		 cmp	 DWORD PTR _tex$[ebp], 0
  00f5e	0f 84 c1 01 00
	00		 je	 $LN1@CreateText
; Line 633
  00f64	83 7d 30 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  00f68	0f 84 73 01 00
	00		 je	 $LN3@CreateText
; Line 636
  00f6e	33 c9		 xor	 ecx, ecx
  00f70	89 8d 68 fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp], ecx
  00f76	89 8d 6c fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp+4], ecx
  00f7c	89 8d 70 fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp+8], ecx
  00f82	89 8d 74 fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp+12], ecx
  00f88	89 8d 78 fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp+16], ecx
  00f8e	89 8d 7c fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp+20], ecx
; Line 637
  00f94	8b 95 b8 fe ff
	ff		 mov	 edx, DWORD PTR _desc$[ebp+16]
  00f9a	89 95 68 fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp], edx
; Line 639
  00fa0	c7 85 6c fe ff
	ff 04 00 00 00	 mov	 DWORD PTR _SRVDesc$19[ebp+4], 4
; Line 640
  00faa	0f b6 85 e7 fe
	ff ff		 movzx	 eax, BYTE PTR _autogen$[ebp]
  00fb1	85 c0		 test	 eax, eax
  00fb3	74 0c		 je	 SHORT $LN80@CreateText
  00fb5	c7 85 a4 fd ff
	ff ff ff ff ff	 mov	 DWORD PTR tv620[ebp], -1
  00fbf	eb 0a		 jmp	 SHORT $LN81@CreateText
$LN80@CreateText:
  00fc1	c7 85 a4 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv620[ebp], 1
$LN81@CreateText:
  00fcb	8b 8d a4 fd ff
	ff		 mov	 ecx, DWORD PTR tv620[ebp]
  00fd1	89 8d 74 fe ff
	ff		 mov	 DWORD PTR _SRVDesc$19[ebp+12], ecx
; Line 642
  00fd7	8b f4		 mov	 esi, esp
  00fd9	8b 55 30	 mov	 edx, DWORD PTR _textureView$[ebp]
  00fdc	52		 push	 edx
  00fdd	8d 85 68 fe ff
	ff		 lea	 eax, DWORD PTR _SRVDesc$19[ebp]
  00fe3	50		 push	 eax
  00fe4	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR _tex$[ebp]
  00fea	51		 push	 ecx
  00feb	8b 55 08	 mov	 edx, DWORD PTR _d3dDevice$[ebp]
  00fee	8b 02		 mov	 eax, DWORD PTR [edx]
  00ff0	8b 4d 08	 mov	 ecx, DWORD PTR _d3dDevice$[ebp]
  00ff3	51		 push	 ecx
  00ff4	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00ff7	ff d2		 call	 edx
  00ff9	3b f4		 cmp	 esi, esp
  00ffb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01000	89 45 d4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 643
  01003	83 7d d4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01007	7d 43		 jge	 SHORT $LN4@CreateText
; Line 645
  01009	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR _tex$[ebp]
  0100f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01011	8b f4		 mov	 esi, esp
  01013	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _tex$[ebp]
  01019	52		 push	 edx
  0101a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0101d	ff d0		 call	 eax
  0101f	3b f4		 cmp	 esi, esp
  01021	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 646
  01026	8b 4d d4	 mov	 ecx, DWORD PTR _hr$[ebp]
  01029	89 8d 24 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  0102f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01036	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  0103c	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  01041	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  01047	e9 fa 00 00 00	 jmp	 $LN67@CreateText
$LN4@CreateText:
; Line 649
  0104c	0f b6 95 e7 fe
	ff ff		 movzx	 edx, BYTE PTR _autogen$[ebp]
  01053	85 d2		 test	 edx, edx
  01055	0f 84 86 00 00
	00		 je	 $LN3@CreateText
; Line 651
  0105b	83 7d 0c 00	 cmp	 DWORD PTR _d3dContext$[ebp], 0
  0105f	75 21		 jne	 SHORT $LN82@CreateText
  01061	8b f4		 mov	 esi, esp
  01063	68 8b 02 00 00	 push	 651			; 0000028bH
  01068	68 00 00 00 00	 push	 OFFSET $SG156387
  0106d	68 00 00 00 00	 push	 OFFSET $SG156388
  01072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  01078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0107b	3b f4		 cmp	 esi, esp
  0107d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN82@CreateText:
; Line 652
  01082	8b f4		 mov	 esi, esp
  01084	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _imageSize$[ebp]
  0108a	51		 push	 ecx
  0108b	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _rowPitch$[ebp]
  01091	52		 push	 edx
  01092	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  01098	e8 00 00 00 00	 call	 ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
  0109d	50		 push	 eax
  0109e	6a 00		 push	 0
  010a0	6a 00		 push	 0
  010a2	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR _tex$[ebp]
  010a8	50		 push	 eax
  010a9	8b 4d 0c	 mov	 ecx, DWORD PTR _d3dContext$[ebp]
  010ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  010ae	8b 45 0c	 mov	 eax, DWORD PTR _d3dContext$[ebp]
  010b1	50		 push	 eax
  010b2	8b 8a c0 00 00
	00		 mov	 ecx, DWORD PTR [edx+192]
  010b8	ff d1		 call	 ecx
  010ba	3b f4		 cmp	 esi, esp
  010bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 653
  010c1	8b f4		 mov	 esi, esp
  010c3	8b 55 30	 mov	 edx, DWORD PTR _textureView$[ebp]
  010c6	8b 02		 mov	 eax, DWORD PTR [edx]
  010c8	50		 push	 eax
  010c9	8b 4d 0c	 mov	 ecx, DWORD PTR _d3dContext$[ebp]
  010cc	8b 11		 mov	 edx, DWORD PTR [ecx]
  010ce	8b 45 0c	 mov	 eax, DWORD PTR _d3dContext$[ebp]
  010d1	50		 push	 eax
  010d2	8b 8a d8 00 00
	00		 mov	 ecx, DWORD PTR [edx+216]
  010d8	ff d1		 call	 ecx
  010da	3b f4		 cmp	 esi, esp
  010dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@CreateText:
; Line 657
  010e1	83 7d 2c 00	 cmp	 DWORD PTR _texture$[ebp], 0
  010e5	74 0d		 je	 SHORT $LN2@CreateText
; Line 659
  010e7	8b 55 2c	 mov	 edx, DWORD PTR _texture$[ebp]
  010ea	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR _tex$[ebp]
  010f0	89 02		 mov	 DWORD PTR [edx], eax
; Line 661
  010f2	eb 31		 jmp	 SHORT $LN1@CreateText
$LN2@CreateText:
; Line 663
  010f4	68 00 00 00 00	 push	 OFFSET $SG156398
  010f9	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR _tex$[ebp]
  010ff	51		 push	 ecx
  01100	e8 00 00 00 00	 call	 ??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
  01105	83 c4 08	 add	 esp, 8
; Line 664
  01108	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _tex$[ebp]
  0110e	8b 02		 mov	 eax, DWORD PTR [edx]
  01110	8b f4		 mov	 esi, esp
  01112	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR _tex$[ebp]
  01118	51		 push	 ecx
  01119	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0111c	ff d2		 call	 edx
  0111e	3b f4		 cmp	 esi, esp
  01120	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@CreateText:
; Line 668
  01125	8b 45 d4	 mov	 eax, DWORD PTR _hr$[ebp]
  01128	89 85 20 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0112e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01135	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  0113b	e8 00 00 00 00	 call	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
  01140	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN67@CreateText:
; Line 669
  01146	52		 push	 edx
  01147	8b cd		 mov	 ecx, ebp
  01149	50		 push	 eax
  0114a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN108@CreateText
  01150	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01155	58		 pop	 eax
  01156	5a		 pop	 edx
  01157	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0115a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  01161	59		 pop	 ecx
  01162	5f		 pop	 edi
  01163	5e		 pop	 esi
  01164	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01167	33 cd		 xor	 ecx, ebp
  01169	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0116e	81 c4 5c 02 00
	00		 add	 esp, 604		; 0000025cH
  01174	3b ec		 cmp	 ebp, esp
  01176	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0117b	8b e5		 mov	 esp, ebp
  0117d	5d		 pop	 ebp
  0117e	c3		 ret	 0
  0117f	90		 npad	 1
$LN108@CreateText:
  01180	12 00 00 00	 DD	 18			; 00000012H
  01184	00 00 00 00	 DD	 $LN107@CreateText
$LN107@CreateText:
  01188	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0118c	04 00 00 00	 DD	 4
  01190	00 00 00 00	 DD	 $LN88@CreateText
  01194	dc ff ff ff	 DD	 -36			; ffffffdcH
  01198	04 00 00 00	 DD	 4
  0119c	00 00 00 00	 DD	 $LN89@CreateText
  011a0	b4 ff ff ff	 DD	 -76			; ffffffb4H
  011a4	10 00 00 00	 DD	 16			; 00000010H
  011a8	00 00 00 00	 DD	 $LN90@CreateText
  011ac	9c ff ff ff	 DD	 -100			; ffffff9cH
  011b0	10 00 00 00	 DD	 16			; 00000010H
  011b4	00 00 00 00	 DD	 $LN91@CreateText
  011b8	84 ff ff ff	 DD	 -124			; ffffff84H
  011bc	04 00 00 00	 DD	 4
  011c0	00 00 00 00	 DD	 $LN92@CreateText
  011c4	6c ff ff ff	 DD	 -148			; ffffff6cH
  011c8	10 00 00 00	 DD	 16			; 00000010H
  011cc	00 00 00 00	 DD	 $LN93@CreateText
  011d0	50 ff ff ff	 DD	 -176			; ffffff50H
  011d4	10 00 00 00	 DD	 16			; 00000010H
  011d8	00 00 00 00	 DD	 $LN94@CreateText
  011dc	44 ff ff ff	 DD	 -188			; ffffff44H
  011e0	04 00 00 00	 DD	 4
  011e4	00 00 00 00	 DD	 $LN95@CreateText
  011e8	30 ff ff ff	 DD	 -208			; ffffff30H
  011ec	04 00 00 00	 DD	 4
  011f0	00 00 00 00	 DD	 $LN96@CreateText
  011f4	20 ff ff ff	 DD	 -224			; ffffff20H
  011f8	04 00 00 00	 DD	 4
  011fc	00 00 00 00	 DD	 $LN97@CreateText
  01200	08 ff ff ff	 DD	 -248			; ffffff08H
  01204	10 00 00 00	 DD	 16			; 00000010H
  01208	00 00 00 00	 DD	 $LN98@CreateText
  0120c	fc fe ff ff	 DD	 -260			; fffffefcH
  01210	04 00 00 00	 DD	 4
  01214	00 00 00 00	 DD	 $LN99@CreateText
  01218	ec fe ff ff	 DD	 -276			; fffffeecH
  0121c	04 00 00 00	 DD	 4
  01220	00 00 00 00	 DD	 $LN100@CreateText
  01224	dc fe ff ff	 DD	 -292			; fffffedcH
  01228	04 00 00 00	 DD	 4
  0122c	00 00 00 00	 DD	 $LN101@CreateText
  01230	a8 fe ff ff	 DD	 -344			; fffffea8H
  01234	2c 00 00 00	 DD	 44			; 0000002cH
  01238	00 00 00 00	 DD	 $LN102@CreateText
  0123c	94 fe ff ff	 DD	 -364			; fffffe94H
  01240	0c 00 00 00	 DD	 12			; 0000000cH
  01244	00 00 00 00	 DD	 $LN103@CreateText
  01248	88 fe ff ff	 DD	 -376			; fffffe88H
  0124c	04 00 00 00	 DD	 4
  01250	00 00 00 00	 DD	 $LN104@CreateText
  01254	68 fe ff ff	 DD	 -408			; fffffe68H
  01258	18 00 00 00	 DD	 24			; 00000018H
  0125c	00 00 00 00	 DD	 $LN105@CreateText
$LN105@CreateText:
  01260	53		 DB	 83			; 00000053H
  01261	52		 DB	 82			; 00000052H
  01262	56		 DB	 86			; 00000056H
  01263	44		 DB	 68			; 00000044H
  01264	65		 DB	 101			; 00000065H
  01265	73		 DB	 115			; 00000073H
  01266	63		 DB	 99			; 00000063H
  01267	00		 DB	 0
$LN104@CreateText:
  01268	74		 DB	 116			; 00000074H
  01269	65		 DB	 101			; 00000065H
  0126a	78		 DB	 120			; 00000078H
  0126b	00		 DB	 0
$LN103@CreateText:
  0126c	69		 DB	 105			; 00000069H
  0126d	6e		 DB	 110			; 0000006eH
  0126e	69		 DB	 105			; 00000069H
  0126f	74		 DB	 116			; 00000074H
  01270	44		 DB	 68			; 00000044H
  01271	61		 DB	 97			; 00000061H
  01272	74		 DB	 116			; 00000074H
  01273	61		 DB	 97			; 00000061H
  01274	00		 DB	 0
$LN102@CreateText:
  01275	64		 DB	 100			; 00000064H
  01276	65		 DB	 101			; 00000065H
  01277	73		 DB	 115			; 00000073H
  01278	63		 DB	 99			; 00000063H
  01279	00		 DB	 0
$LN101@CreateText:
  0127a	66		 DB	 102			; 00000066H
  0127b	6d		 DB	 109			; 0000006dH
  0127c	74		 DB	 116			; 00000074H
  0127d	53		 DB	 83			; 00000053H
  0127e	75		 DB	 117			; 00000075H
  0127f	70		 DB	 112			; 00000070H
  01280	70		 DB	 112			; 00000070H
  01281	6f		 DB	 111			; 0000006fH
  01282	72		 DB	 114			; 00000072H
  01283	74		 DB	 116			; 00000074H
  01284	00		 DB	 0
$LN100@CreateText:
  01285	46		 DB	 70			; 00000046H
  01286	43		 DB	 67			; 00000043H
  01287	00		 DB	 0
$LN99@CreateText:
  01288	46		 DB	 70			; 00000046H
  01289	43		 DB	 67			; 00000043H
  0128a	00		 DB	 0
$LN98@CreateText:
  0128b	70		 DB	 112			; 00000070H
  0128c	66		 DB	 102			; 00000066H
  0128d	53		 DB	 83			; 00000053H
  0128e	63		 DB	 99			; 00000063H
  0128f	61		 DB	 97			; 00000061H
  01290	6c		 DB	 108			; 0000006cH
  01291	65		 DB	 101			; 00000065H
  01292	72		 DB	 114			; 00000072H
  01293	00		 DB	 0
$LN97@CreateText:
  01294	73		 DB	 115			; 00000073H
  01295	63		 DB	 99			; 00000063H
  01296	61		 DB	 97			; 00000061H
  01297	6c		 DB	 108			; 0000006cH
  01298	65		 DB	 101			; 00000065H
  01299	72		 DB	 114			; 00000072H
  0129a	00		 DB	 0
$LN96@CreateText:
  0129b	74		 DB	 116			; 00000074H
  0129c	65		 DB	 101			; 00000065H
  0129d	6d		 DB	 109			; 0000006dH
  0129e	70		 DB	 112			; 00000070H
  0129f	00		 DB	 0
$LN95@CreateText:
  012a0	73		 DB	 115			; 00000073H
  012a1	75		 DB	 117			; 00000075H
  012a2	70		 DB	 112			; 00000070H
  012a3	70		 DB	 112			; 00000070H
  012a4	6f		 DB	 111			; 0000006fH
  012a5	72		 DB	 114			; 00000072H
  012a6	74		 DB	 116			; 00000074H
  012a7	00		 DB	 0
$LN94@CreateText:
  012a8	76		 DB	 118			; 00000076H
  012a9	61		 DB	 97			; 00000061H
  012aa	6c		 DB	 108			; 0000006cH
  012ab	75		 DB	 117			; 00000075H
  012ac	65		 DB	 101			; 00000065H
  012ad	00		 DB	 0
$LN93@CreateText:
  012ae	63		 DB	 99			; 00000063H
  012af	6f		 DB	 111			; 0000006fH
  012b0	6e		 DB	 110			; 0000006eH
  012b1	74		 DB	 116			; 00000074H
  012b2	61		 DB	 97			; 00000061H
  012b3	69		 DB	 105			; 00000069H
  012b4	6e		 DB	 110			; 0000006eH
  012b5	65		 DB	 101			; 00000065H
  012b6	72		 DB	 114			; 00000072H
  012b7	46		 DB	 70			; 00000046H
  012b8	6f		 DB	 111			; 0000006fH
  012b9	72		 DB	 114			; 00000072H
  012ba	6d		 DB	 109			; 0000006dH
  012bb	61		 DB	 97			; 00000061H
  012bc	74		 DB	 116			; 00000074H
  012bd	00		 DB	 0
$LN92@CreateText:
  012be	6d		 DB	 109			; 0000006dH
  012bf	65		 DB	 101			; 00000065H
  012c0	74		 DB	 116			; 00000074H
  012c1	61		 DB	 97			; 00000061H
  012c2	72		 DB	 114			; 00000072H
  012c3	65		 DB	 101			; 00000065H
  012c4	61		 DB	 97			; 00000061H
  012c5	64		 DB	 100			; 00000064H
  012c6	65		 DB	 101			; 00000065H
  012c7	72		 DB	 114			; 00000072H
  012c8	00		 DB	 0
$LN91@CreateText:
  012c9	63		 DB	 99			; 00000063H
  012ca	6f		 DB	 111			; 0000006fH
  012cb	6e		 DB	 110			; 0000006eH
  012cc	76		 DB	 118			; 00000076H
  012cd	65		 DB	 101			; 00000065H
  012ce	72		 DB	 114			; 00000072H
  012cf	74		 DB	 116			; 00000074H
  012d0	47		 DB	 71			; 00000047H
  012d1	55		 DB	 85			; 00000055H
  012d2	49		 DB	 73			; 00000049H
  012d3	44		 DB	 68			; 00000044H
  012d4	00		 DB	 0
$LN90@CreateText:
  012d5	70		 DB	 112			; 00000070H
  012d6	69		 DB	 105			; 00000069H
  012d7	78		 DB	 120			; 00000078H
  012d8	65		 DB	 101			; 00000065H
  012d9	6c		 DB	 108			; 0000006cH
  012da	46		 DB	 70			; 00000046H
  012db	6f		 DB	 111			; 0000006fH
  012dc	72		 DB	 114			; 00000072H
  012dd	6d		 DB	 109			; 0000006dH
  012de	61		 DB	 97			; 00000061H
  012df	74		 DB	 116			; 00000074H
  012e0	00		 DB	 0
$LN89@CreateText:
  012e1	68		 DB	 104			; 00000068H
  012e2	65		 DB	 101			; 00000065H
  012e3	69		 DB	 105			; 00000069H
  012e4	67		 DB	 103			; 00000067H
  012e5	68		 DB	 104			; 00000068H
  012e6	74		 DB	 116			; 00000074H
  012e7	00		 DB	 0
$LN88@CreateText:
  012e8	77		 DB	 119			; 00000077H
  012e9	69		 DB	 105			; 00000069H
  012ea	64		 DB	 100			; 00000064H
  012eb	74		 DB	 116			; 00000074H
  012ec	68		 DB	 104			; 00000068H
  012ed	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0:
  00000	8d 4d 84	 lea	 ecx, DWORD PTR _metareader$30[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1:
  00008	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2:
  00013	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _scaler$25[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$3:
  0001e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _FC$23[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$4:
  00029	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _FC$21[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
__ehhandler$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z:
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 8a a4 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-604]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; CreateTextureFromWIC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_format$ = 8						; size = 4
?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z PROC		; MakeSRGB
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 281
  0000b	8b 45 08	 mov	 eax, DWORD PTR _format$[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00014	83 e9 1c	 sub	 ecx, 28			; 0000001cH
  00017	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  0001a	83 7d fc 46	 cmp	 DWORD PTR tv64[ebp], 70	; 00000046H
  0001e	77 42		 ja	 SHORT $LN1@MakeSRGB
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  00023	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN13@MakeSRGB[edx]
  0002a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@MakeSRGB[eax*4]
$LN8@MakeSRGB:
; Line 284
  00031	b8 1d 00 00 00	 mov	 eax, 29			; 0000001dH
  00036	eb 2d		 jmp	 SHORT $LN11@MakeSRGB
$LN7@MakeSRGB:
; Line 287
  00038	b8 48 00 00 00	 mov	 eax, 72			; 00000048H
  0003d	eb 26		 jmp	 SHORT $LN11@MakeSRGB
$LN6@MakeSRGB:
; Line 290
  0003f	b8 4b 00 00 00	 mov	 eax, 75			; 0000004bH
  00044	eb 1f		 jmp	 SHORT $LN11@MakeSRGB
$LN5@MakeSRGB:
; Line 293
  00046	b8 4e 00 00 00	 mov	 eax, 78			; 0000004eH
  0004b	eb 18		 jmp	 SHORT $LN11@MakeSRGB
$LN4@MakeSRGB:
; Line 296
  0004d	b8 5b 00 00 00	 mov	 eax, 91			; 0000005bH
  00052	eb 11		 jmp	 SHORT $LN11@MakeSRGB
$LN3@MakeSRGB:
; Line 299
  00054	b8 5d 00 00 00	 mov	 eax, 93			; 0000005dH
  00059	eb 0a		 jmp	 SHORT $LN11@MakeSRGB
$LN2@MakeSRGB:
; Line 302
  0005b	b8 63 00 00 00	 mov	 eax, 99			; 00000063H
  00060	eb 03		 jmp	 SHORT $LN11@MakeSRGB
$LN1@MakeSRGB:
; Line 305
  00062	8b 45 08	 mov	 eax, DWORD PTR _format$[ebp]
$LN11@MakeSRGB:
; Line 307
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
  00069	8d 49 00	 npad	 3
$LN14@MakeSRGB:
  0006c	00 00 00 00	 DD	 $LN8@MakeSRGB
  00070	00 00 00 00	 DD	 $LN7@MakeSRGB
  00074	00 00 00 00	 DD	 $LN6@MakeSRGB
  00078	00 00 00 00	 DD	 $LN5@MakeSRGB
  0007c	00 00 00 00	 DD	 $LN4@MakeSRGB
  00080	00 00 00 00	 DD	 $LN3@MakeSRGB
  00084	00 00 00 00	 DD	 $LN2@MakeSRGB
  00088	00 00 00 00	 DD	 $LN1@MakeSRGB
$LN13@MakeSRGB:
  0008c	00		 DB	 0
  0008d	07		 DB	 7
  0008e	07		 DB	 7
  0008f	07		 DB	 7
  00090	07		 DB	 7
  00091	07		 DB	 7
  00092	07		 DB	 7
  00093	07		 DB	 7
  00094	07		 DB	 7
  00095	07		 DB	 7
  00096	07		 DB	 7
  00097	07		 DB	 7
  00098	07		 DB	 7
  00099	07		 DB	 7
  0009a	07		 DB	 7
  0009b	07		 DB	 7
  0009c	07		 DB	 7
  0009d	07		 DB	 7
  0009e	07		 DB	 7
  0009f	07		 DB	 7
  000a0	07		 DB	 7
  000a1	07		 DB	 7
  000a2	07		 DB	 7
  000a3	07		 DB	 7
  000a4	07		 DB	 7
  000a5	07		 DB	 7
  000a6	07		 DB	 7
  000a7	07		 DB	 7
  000a8	07		 DB	 7
  000a9	07		 DB	 7
  000aa	07		 DB	 7
  000ab	07		 DB	 7
  000ac	07		 DB	 7
  000ad	07		 DB	 7
  000ae	07		 DB	 7
  000af	07		 DB	 7
  000b0	07		 DB	 7
  000b1	07		 DB	 7
  000b2	07		 DB	 7
  000b3	07		 DB	 7
  000b4	07		 DB	 7
  000b5	07		 DB	 7
  000b6	07		 DB	 7
  000b7	01		 DB	 1
  000b8	07		 DB	 7
  000b9	07		 DB	 7
  000ba	02		 DB	 2
  000bb	07		 DB	 7
  000bc	07		 DB	 7
  000bd	03		 DB	 3
  000be	07		 DB	 7
  000bf	07		 DB	 7
  000c0	07		 DB	 7
  000c1	07		 DB	 7
  000c2	07		 DB	 7
  000c3	07		 DB	 7
  000c4	07		 DB	 7
  000c5	07		 DB	 7
  000c6	07		 DB	 7
  000c7	04		 DB	 4
  000c8	05		 DB	 5
  000c9	07		 DB	 7
  000ca	07		 DB	 7
  000cb	07		 DB	 7
  000cc	07		 DB	 7
  000cd	07		 DB	 7
  000ce	07		 DB	 7
  000cf	07		 DB	 7
  000d0	07		 DB	 7
  000d1	07		 DB	 7
  000d2	06		 DB	 6
?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z ENDP		; MakeSRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 409
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 411
  0000f	8d 4d 08	 lea	 ecx, DWORD PTR _p$[ebp]
  00012	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *
  00017	8b f4		 mov	 esi, esp
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET __GUID_e8eda601_3d48_431a_ab44_69059be88bbe
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002b	50		 push	 eax
  0002c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002e	ff d2		 call	 edx
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 412
  00037	5e		 pop	 esi
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 116
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 117
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf
; Line 118
  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 109
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 111
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ptr$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
; Line 112
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 358
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 359
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
; Line 360
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 361
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 338
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 339
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 340
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 355
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 327
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 328
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 196
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv141 = -100						; size = 4
tv85 = -96						; size = 4
$T2 = -92						; size = 4
$T3 = -88						; size = 4
$T4 = -84						; size = 4
$T5 = -80						; size = 4
$T6 = -76						; size = 4
$T7 = -72						; size = 4
$T8 = -68						; size = 4
_bpp$ = -60						; size = 4
_pfinfo$ = -48						; size = 4
_type$ = -36						; size = 4
_cinfo$ = -24						; size = 4
_pWIC$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_targetGuid$ = 8					; size = 4
?_WICBitsPerPixel@@YAIABU_GUID@@@Z PROC			; _WICBitsPerPixel
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 250
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_WICBitsPerPixel@@YAIABU_GUID@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 58	 sub	 esp, 88			; 00000058H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8d 7d 9c	 lea	 edi, DWORD PTR [ebp-100]
  00019	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 251
  00036	e8 00 00 00 00	 call	 ?_GetWIC@@YAPAUIWICImagingFactory@@XZ ; _GetWIC
  0003b	89 45 f0	 mov	 DWORD PTR _pWIC$[ebp], eax
; Line 252
  0003e	83 7d f0 00	 cmp	 DWORD PTR _pWIC$[ebp], 0
  00042	75 07		 jne	 SHORT $LN6@WICBitsPer
; Line 253
  00044	33 c0		 xor	 eax, eax
  00046	e9 84 01 00 00	 jmp	 $LN7@WICBitsPer
$LN6@WICBitsPer:
; Line 255
  0004b	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  0004e	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>
  00053	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 256
  0005a	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  0005d	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf
  00062	8b f4		 mov	 esi, esp
  00064	50		 push	 eax
  00065	8b 45 08	 mov	 eax, DWORD PTR _targetGuid$[ebp]
  00068	50		 push	 eax
  00069	8b 4d f0	 mov	 ecx, DWORD PTR _pWIC$[ebp]
  0006c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006e	8b 45 f0	 mov	 eax, DWORD PTR _pWIC$[ebp]
  00071	50		 push	 eax
  00072	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00075	ff d1		 call	 ecx
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	85 c0		 test	 eax, eax
  00080	7d 1e		 jge	 SHORT $LN5@WICBitsPer
; Line 257
  00082	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T8[ebp], 0
  00089	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00090	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  00093	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
  00098	8b 45 bc	 mov	 eax, DWORD PTR $T8[ebp]
  0009b	e9 2f 01 00 00	 jmp	 $LN7@WICBitsPer
$LN5@WICBitsPer:
; Line 260
  000a0	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  000a3	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->
  000a8	89 45 a0	 mov	 DWORD PTR tv85[ebp], eax
  000ab	8b f4		 mov	 esi, esp
  000ad	8d 55 dc	 lea	 edx, DWORD PTR _type$[ebp]
  000b0	52		 push	 edx
  000b1	8b 45 a0	 mov	 eax, DWORD PTR tv85[ebp]
  000b4	50		 push	 eax
  000b5	8b 4d a0	 mov	 ecx, DWORD PTR tv85[ebp]
  000b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ba	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000bd	ff d0		 call	 eax
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	85 c0		 test	 eax, eax
  000c8	7d 1e		 jge	 SHORT $LN4@WICBitsPer
; Line 261
  000ca	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp], 0
  000d1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d8	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  000db	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
  000e0	8b 45 b8	 mov	 eax, DWORD PTR $T7[ebp]
  000e3	e9 e7 00 00 00	 jmp	 $LN7@WICBitsPer
$LN4@WICBitsPer:
; Line 263
  000e8	83 7d dc 20	 cmp	 DWORD PTR _type$[ebp], 32 ; 00000020H
  000ec	74 1e		 je	 SHORT $LN3@WICBitsPer
; Line 264
  000ee	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T6[ebp], 0
  000f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fc	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  000ff	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
  00104	8b 45 b4	 mov	 eax, DWORD PTR $T6[ebp]
  00107	e9 c3 00 00 00	 jmp	 $LN7@WICBitsPer
$LN3@WICBitsPer:
; Line 266
  0010c	8d 4d d0	 lea	 ecx, DWORD PTR _pfinfo$[ebp]
  0010f	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>
  00114	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; Line 267
  00118	8d 4d b0	 lea	 ecx, DWORD PTR $T5[ebp]
  0011b	51		 push	 ecx
  0011c	8d 4d d0	 lea	 ecx, DWORD PTR _pfinfo$[ebp]
  0011f	e8 00 00 00 00	 call	 ??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&
  00124	8b 10		 mov	 edx, DWORD PTR [eax]
  00126	52		 push	 edx
  00127	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  0012a	e8 00 00 00 00	 call	 ??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>
  0012f	85 c0		 test	 eax, eax
  00131	7d 27		 jge	 SHORT $LN2@WICBitsPer
; Line 268
  00133	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
  0013a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0013e	8d 4d d0	 lea	 ecx, DWORD PTR _pfinfo$[ebp]
  00141	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  00150	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
  00155	8b 45 ac	 mov	 eax, DWORD PTR $T4[ebp]
  00158	eb 75		 jmp	 SHORT $LN7@WICBitsPer
$LN2@WICBitsPer:
; Line 271
  0015a	8d 4d d0	 lea	 ecx, DWORD PTR _pfinfo$[ebp]
  0015d	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->
  00162	89 45 9c	 mov	 DWORD PTR tv141[ebp], eax
  00165	8b f4		 mov	 esi, esp
  00167	8d 45 c4	 lea	 eax, DWORD PTR _bpp$[ebp]
  0016a	50		 push	 eax
  0016b	8b 4d 9c	 mov	 ecx, DWORD PTR tv141[ebp]
  0016e	51		 push	 ecx
  0016f	8b 55 9c	 mov	 edx, DWORD PTR tv141[ebp]
  00172	8b 02		 mov	 eax, DWORD PTR [edx]
  00174	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00177	ff d1		 call	 ecx
  00179	3b f4		 cmp	 esi, esp
  0017b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00180	85 c0		 test	 eax, eax
  00182	7d 27		 jge	 SHORT $LN1@WICBitsPer
; Line 272
  00184	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
  0018b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0018f	8d 4d d0	 lea	 ecx, DWORD PTR _pfinfo$[ebp]
  00192	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
  00197	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0019e	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  001a1	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
  001a6	8b 45 a8	 mov	 eax, DWORD PTR $T3[ebp]
  001a9	eb 24		 jmp	 SHORT $LN7@WICBitsPer
$LN1@WICBitsPer:
; Line 274
  001ab	8b 55 c4	 mov	 edx, DWORD PTR _bpp$[ebp]
  001ae	89 55 a4	 mov	 DWORD PTR $T2[ebp], edx
  001b1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001b5	8d 4d d0	 lea	 ecx, DWORD PTR _pfinfo$[ebp]
  001b8	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
  001bd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001c4	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  001c7	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
  001cc	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
$LN7@WICBitsPer:
; Line 275
  001cf	52		 push	 edx
  001d0	8b cd		 mov	 ecx, ebp
  001d2	50		 push	 eax
  001d3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@WICBitsPer
  001d9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001de	58		 pop	 eax
  001df	5a		 pop	 edx
  001e0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ea	59		 pop	 ecx
  001eb	5f		 pop	 edi
  001ec	5e		 pop	 esi
  001ed	83 c4 64	 add	 esp, 100		; 00000064H
  001f0	3b ec		 cmp	 ebp, esp
  001f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c3		 ret	 0
  001fb	90		 npad	 1
$LN17@WICBitsPer:
  001fc	04 00 00 00	 DD	 4
  00200	00 00 00 00	 DD	 $LN16@WICBitsPer
$LN16@WICBitsPer:
  00204	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00208	04 00 00 00	 DD	 4
  0020c	00 00 00 00	 DD	 $LN11@WICBitsPer
  00210	dc ff ff ff	 DD	 -36			; ffffffdcH
  00214	04 00 00 00	 DD	 4
  00218	00 00 00 00	 DD	 $LN12@WICBitsPer
  0021c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00220	04 00 00 00	 DD	 4
  00224	00 00 00 00	 DD	 $LN13@WICBitsPer
  00228	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0022c	04 00 00 00	 DD	 4
  00230	00 00 00 00	 DD	 $LN14@WICBitsPer
$LN14@WICBitsPer:
  00234	62		 DB	 98			; 00000062H
  00235	70		 DB	 112			; 00000070H
  00236	70		 DB	 112			; 00000070H
  00237	00		 DB	 0
$LN13@WICBitsPer:
  00238	70		 DB	 112			; 00000070H
  00239	66		 DB	 102			; 00000066H
  0023a	69		 DB	 105			; 00000069H
  0023b	6e		 DB	 110			; 0000006eH
  0023c	66		 DB	 102			; 00000066H
  0023d	6f		 DB	 111			; 0000006fH
  0023e	00		 DB	 0
$LN12@WICBitsPer:
  0023f	74		 DB	 116			; 00000074H
  00240	79		 DB	 121			; 00000079H
  00241	70		 DB	 112			; 00000070H
  00242	65		 DB	 101			; 00000065H
  00243	00		 DB	 0
$LN11@WICBitsPer:
  00244	63		 DB	 99			; 00000063H
  00245	69		 DB	 105			; 00000069H
  00246	6e		 DB	 110			; 0000006eH
  00247	66		 DB	 102			; 00000066H
  00248	6f		 DB	 111			; 0000006fH
  00249	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _cinfo$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$1:
  00008	8d 4d d0	 lea	 ecx, DWORD PTR _pfinfo$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
__ehhandler$?_WICBitsPerPixel@@YAIABU_GUID@@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_WICBitsPerPixel@@YAIABU_GUID@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_WICBitsPerPixel@@YAIABU_GUID@@@Z ENDP			; _WICBitsPerPixel
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -8						; size = 4
_i$1 = -4						; size = 4
_guid$ = 8						; size = 4
?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z PROC	; _WICToDXGI
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 230
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 231
  00014	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001b	eb 09		 jmp	 SHORT $LN4@WICToDXGI
$LN3@WICToDXGI:
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00020	83 c0 01	 add	 eax, 1
  00023	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@WICToDXGI:
  00026	83 7d fc 0f	 cmp	 DWORD PTR _i$1[ebp], 15	; 0000000fH
  0002a	73 30		 jae	 SHORT $LN2@WICToDXGI
; Line 233
  0002c	6a 10		 push	 16			; 00000010H
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _guid$[ebp]
  00031	51		 push	 ecx
  00032	6b 55 fc 14	 imul	 edx, DWORD PTR _i$1[ebp], 20
  00036	81 c2 00 00 00
	00		 add	 edx, OFFSET _g_WICFormats
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 _memcmp
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
  00045	89 45 f8	 mov	 DWORD PTR tv73[ebp], eax
  00048	83 7d f8 00	 cmp	 DWORD PTR tv73[ebp], 0
  0004c	75 0c		 jne	 SHORT $LN1@WICToDXGI
; Line 234
  0004e	6b 45 fc 14	 imul	 eax, DWORD PTR _i$1[ebp], 20
  00052	8b 80 10 00 00
	00		 mov	 eax, DWORD PTR _g_WICFormats[eax+16]
  00058	eb 04		 jmp	 SHORT $LN5@WICToDXGI
$LN1@WICToDXGI:
; Line 235
  0005a	eb c1		 jmp	 SHORT $LN3@WICToDXGI
$LN2@WICToDXGI:
; Line 245
  0005c	33 c0		 xor	 eax, eax
$LN5@WICToDXGI:
; Line 246
  0005e	83 c4 08	 add	 esp, 8
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z ENDP	; _WICToDXGI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -4						; size = 4
?_GetWIC@@YAPAUIWICImagingFactory@@XZ PROC		; _GetWIC
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 173
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 176
  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
  00013	74 07		 je	 SHORT $LN2@GetWIC
; Line 177
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
  0001a	eb 3e		 jmp	 SHORT $LN3@GetWIC
$LN2@GetWIC:
; Line 216
  0001c	8b f4		 mov	 esi, esp
  0001e	68 00 00 00 00	 push	 OFFSET ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
  00023	68 00 00 00 00	 push	 OFFSET __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
  00028	6a 01		 push	 1
  0002a	6a 00		 push	 0
  0002c	68 00 00 00 00	 push	 OFFSET _CLSID_WICImagingFactory
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoCreateInstance@20
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 218
  00041	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00045	7d 0e		 jge	 SHORT $LN1@GetWIC
; Line 220
  00047	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
; Line 221
  00051	33 c0		 xor	 eax, eax
  00053	eb 05		 jmp	 SHORT $LN3@GetWIC
$LN1@GetWIC:
; Line 225
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
$LN3@GetWIC:
; Line 226
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?_GetWIC@@YAPAUIWICImagingFactory@@XZ ENDP		; _GetWIC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_WICConvert@@YAXXZ
text$di	SEGMENT
??__Eg_WICConvert@@YAXXZ PROC				; `dynamic initializer for 'g_WICConvert'', COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 167
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormatBlackWhite
  00008	a3 00 00 00 00	 mov	 DWORD PTR _g_WICConvert, eax
  0000d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormatBlackWhite+4
  00013	89 0d 04 00 00
	00		 mov	 DWORD PTR _g_WICConvert+4, ecx
  00019	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormatBlackWhite+8
  0001f	89 15 08 00 00
	00		 mov	 DWORD PTR _g_WICConvert+8, edx
  00025	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormatBlackWhite+12
  0002a	a3 0c 00 00 00	 mov	 DWORD PTR _g_WICConvert+12, eax
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
  00035	89 0d 10 00 00
	00		 mov	 DWORD PTR _g_WICConvert+16, ecx
  0003b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
  00041	89 15 14 00 00
	00		 mov	 DWORD PTR _g_WICConvert+20, edx
  00047	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
  0004c	a3 18 00 00 00	 mov	 DWORD PTR _g_WICConvert+24, eax
  00051	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
  00057	89 0d 1c 00 00
	00		 mov	 DWORD PTR _g_WICConvert+28, ecx
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat1bppIndexed
  00063	89 15 20 00 00
	00		 mov	 DWORD PTR _g_WICConvert+32, edx
  00069	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat1bppIndexed+4
  0006e	a3 24 00 00 00	 mov	 DWORD PTR _g_WICConvert+36, eax
  00073	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat1bppIndexed+8
  00079	89 0d 28 00 00
	00		 mov	 DWORD PTR _g_WICConvert+40, ecx
  0007f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat1bppIndexed+12
  00085	89 15 2c 00 00
	00		 mov	 DWORD PTR _g_WICConvert+44, edx
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  00090	a3 30 00 00 00	 mov	 DWORD PTR _g_WICConvert+48, eax
  00095	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  0009b	89 0d 34 00 00
	00		 mov	 DWORD PTR _g_WICConvert+52, ecx
  000a1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  000a7	89 15 38 00 00
	00		 mov	 DWORD PTR _g_WICConvert+56, edx
  000ad	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  000b2	a3 3c 00 00 00	 mov	 DWORD PTR _g_WICConvert+60, eax
  000b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat2bppIndexed
  000bd	89 0d 40 00 00
	00		 mov	 DWORD PTR _g_WICConvert+64, ecx
  000c3	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat2bppIndexed+4
  000c9	89 15 44 00 00
	00		 mov	 DWORD PTR _g_WICConvert+68, edx
  000cf	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat2bppIndexed+8
  000d4	a3 48 00 00 00	 mov	 DWORD PTR _g_WICConvert+72, eax
  000d9	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat2bppIndexed+12
  000df	89 0d 4c 00 00
	00		 mov	 DWORD PTR _g_WICConvert+76, ecx
  000e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  000eb	89 15 50 00 00
	00		 mov	 DWORD PTR _g_WICConvert+80, edx
  000f1	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  000f6	a3 54 00 00 00	 mov	 DWORD PTR _g_WICConvert+84, eax
  000fb	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  00101	89 0d 58 00 00
	00		 mov	 DWORD PTR _g_WICConvert+88, ecx
  00107	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  0010d	89 15 5c 00 00
	00		 mov	 DWORD PTR _g_WICConvert+92, edx
  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat4bppIndexed
  00118	a3 60 00 00 00	 mov	 DWORD PTR _g_WICConvert+96, eax
  0011d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat4bppIndexed+4
  00123	89 0d 64 00 00
	00		 mov	 DWORD PTR _g_WICConvert+100, ecx
  00129	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat4bppIndexed+8
  0012f	89 15 68 00 00
	00		 mov	 DWORD PTR _g_WICConvert+104, edx
  00135	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat4bppIndexed+12
  0013a	a3 6c 00 00 00	 mov	 DWORD PTR _g_WICConvert+108, eax
  0013f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  00145	89 0d 70 00 00
	00		 mov	 DWORD PTR _g_WICConvert+112, ecx
  0014b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  00151	89 15 74 00 00
	00		 mov	 DWORD PTR _g_WICConvert+116, edx
  00157	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  0015c	a3 78 00 00 00	 mov	 DWORD PTR _g_WICConvert+120, eax
  00161	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  00167	89 0d 7c 00 00
	00		 mov	 DWORD PTR _g_WICConvert+124, ecx
  0016d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppIndexed
  00173	89 15 80 00 00
	00		 mov	 DWORD PTR _g_WICConvert+128, edx
  00179	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppIndexed+4
  0017e	a3 84 00 00 00	 mov	 DWORD PTR _g_WICConvert+132, eax
  00183	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppIndexed+8
  00189	89 0d 88 00 00
	00		 mov	 DWORD PTR _g_WICConvert+136, ecx
  0018f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppIndexed+12
  00195	89 15 8c 00 00
	00		 mov	 DWORD PTR _g_WICConvert+140, edx
  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  001a0	a3 90 00 00 00	 mov	 DWORD PTR _g_WICConvert+144, eax
  001a5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  001ab	89 0d 94 00 00
	00		 mov	 DWORD PTR _g_WICConvert+148, ecx
  001b1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  001b7	89 15 98 00 00
	00		 mov	 DWORD PTR _g_WICConvert+152, edx
  001bd	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  001c2	a3 9c 00 00 00	 mov	 DWORD PTR _g_WICConvert+156, eax
  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat2bppGray
  001cd	89 0d a0 00 00
	00		 mov	 DWORD PTR _g_WICConvert+160, ecx
  001d3	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat2bppGray+4
  001d9	89 15 a4 00 00
	00		 mov	 DWORD PTR _g_WICConvert+164, edx
  001df	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat2bppGray+8
  001e4	a3 a8 00 00 00	 mov	 DWORD PTR _g_WICConvert+168, eax
  001e9	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat2bppGray+12
  001ef	89 0d ac 00 00
	00		 mov	 DWORD PTR _g_WICConvert+172, ecx
  001f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray
  001fb	89 15 b0 00 00
	00		 mov	 DWORD PTR _g_WICConvert+176, edx
  00201	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppGray+4
  00206	a3 b4 00 00 00	 mov	 DWORD PTR _g_WICConvert+180, eax
  0020b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+8
  00211	89 0d b8 00 00
	00		 mov	 DWORD PTR _g_WICConvert+184, ecx
  00217	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
  0021d	89 15 bc 00 00
	00		 mov	 DWORD PTR _g_WICConvert+188, edx
  00223	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat4bppGray
  00228	a3 c0 00 00 00	 mov	 DWORD PTR _g_WICConvert+192, eax
  0022d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat4bppGray+4
  00233	89 0d c4 00 00
	00		 mov	 DWORD PTR _g_WICConvert+196, ecx
  00239	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat4bppGray+8
  0023f	89 15 c8 00 00
	00		 mov	 DWORD PTR _g_WICConvert+200, edx
  00245	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat4bppGray+12
  0024a	a3 cc 00 00 00	 mov	 DWORD PTR _g_WICConvert+204, eax
  0024f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
  00255	89 0d d0 00 00
	00		 mov	 DWORD PTR _g_WICConvert+208, ecx
  0025b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
  00261	89 15 d4 00 00
	00		 mov	 DWORD PTR _g_WICConvert+212, edx
  00267	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
  0026c	a3 d8 00 00 00	 mov	 DWORD PTR _g_WICConvert+216, eax
  00271	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
  00277	89 0d dc 00 00
	00		 mov	 DWORD PTR _g_WICConvert+220, ecx
  0027d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint
  00283	89 15 e0 00 00
	00		 mov	 DWORD PTR _g_WICConvert+224, edx
  00289	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint+4
  0028e	a3 e4 00 00 00	 mov	 DWORD PTR _g_WICConvert+228, eax
  00293	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint+8
  00299	89 0d e8 00 00
	00		 mov	 DWORD PTR _g_WICConvert+232, ecx
  0029f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint+12
  002a5	89 15 ec 00 00
	00		 mov	 DWORD PTR _g_WICConvert+236, edx
  002ab	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf
  002b0	a3 f0 00 00 00	 mov	 DWORD PTR _g_WICConvert+240, eax
  002b5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+4
  002bb	89 0d f4 00 00
	00		 mov	 DWORD PTR _g_WICConvert+244, ecx
  002c1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+8
  002c7	89 15 f8 00 00
	00		 mov	 DWORD PTR _g_WICConvert+248, edx
  002cd	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+12
  002d2	a3 fc 00 00 00	 mov	 DWORD PTR _g_WICConvert+252, eax
  002d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint
  002dd	89 0d 00 01 00
	00		 mov	 DWORD PTR _g_WICConvert+256, ecx
  002e3	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint+4
  002e9	89 15 04 01 00
	00		 mov	 DWORD PTR _g_WICConvert+260, edx
  002ef	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint+8
  002f4	a3 08 01 00 00	 mov	 DWORD PTR _g_WICConvert+264, eax
  002f9	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint+12
  002ff	89 0d 0c 01 00
	00		 mov	 DWORD PTR _g_WICConvert+268, ecx
  00305	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat
  0030b	89 15 10 01 00
	00		 mov	 DWORD PTR _g_WICConvert+272, edx
  00311	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+4
  00316	a3 14 01 00 00	 mov	 DWORD PTR _g_WICConvert+276, eax
  0031b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+8
  00321	89 0d 18 01 00
	00		 mov	 DWORD PTR _g_WICConvert+280, ecx
  00327	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+12
  0032d	89 15 1c 01 00
	00		 mov	 DWORD PTR _g_WICConvert+284, edx
  00333	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR555
  00338	a3 20 01 00 00	 mov	 DWORD PTR _g_WICConvert+288, eax
  0033d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+4
  00343	89 0d 24 01 00
	00		 mov	 DWORD PTR _g_WICConvert+292, ecx
  00349	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+8
  0034f	89 15 28 01 00
	00		 mov	 DWORD PTR _g_WICConvert+296, edx
  00355	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR555+12
  0035a	a3 2c 01 00 00	 mov	 DWORD PTR _g_WICConvert+300, eax
  0035f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551
  00365	89 0d 30 01 00
	00		 mov	 DWORD PTR _g_WICConvert+304, ecx
  0036b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+4
  00371	89 15 34 01 00
	00		 mov	 DWORD PTR _g_WICConvert+308, edx
  00377	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+8
  0037c	a3 38 01 00 00	 mov	 DWORD PTR _g_WICConvert+312, eax
  00381	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+12
  00387	89 0d 3c 01 00
	00		 mov	 DWORD PTR _g_WICConvert+316, ecx
  0038d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGR101010
  00393	89 15 40 01 00
	00		 mov	 DWORD PTR _g_WICConvert+320, edx
  00399	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGR101010+4
  0039e	a3 44 01 00 00	 mov	 DWORD PTR _g_WICConvert+324, eax
  003a3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR101010+8
  003a9	89 0d 48 01 00
	00		 mov	 DWORD PTR _g_WICConvert+328, ecx
  003af	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGR101010+12
  003b5	89 15 4c 01 00
	00		 mov	 DWORD PTR _g_WICConvert+332, edx
  003bb	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102
  003c0	a3 50 01 00 00	 mov	 DWORD PTR _g_WICConvert+336, eax
  003c5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+4
  003cb	89 0d 54 01 00
	00		 mov	 DWORD PTR _g_WICConvert+340, ecx
  003d1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+8
  003d7	89 15 58 01 00
	00		 mov	 DWORD PTR _g_WICConvert+344, edx
  003dd	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+12
  003e2	a3 5c 01 00 00	 mov	 DWORD PTR _g_WICConvert+348, eax
  003e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat24bppBGR
  003ed	89 0d 60 01 00
	00		 mov	 DWORD PTR _g_WICConvert+352, ecx
  003f3	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat24bppBGR+4
  003f9	89 15 64 01 00
	00		 mov	 DWORD PTR _g_WICConvert+356, edx
  003ff	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat24bppBGR+8
  00404	a3 68 01 00 00	 mov	 DWORD PTR _g_WICConvert+360, eax
  00409	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat24bppBGR+12
  0040f	89 0d 6c 01 00
	00		 mov	 DWORD PTR _g_WICConvert+364, ecx
  00415	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  0041b	89 15 70 01 00
	00		 mov	 DWORD PTR _g_WICConvert+368, edx
  00421	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  00426	a3 74 01 00 00	 mov	 DWORD PTR _g_WICConvert+372, eax
  0042b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  00431	89 0d 78 01 00
	00		 mov	 DWORD PTR _g_WICConvert+376, ecx
  00437	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  0043d	89 15 7c 01 00
	00		 mov	 DWORD PTR _g_WICConvert+380, edx
  00443	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat24bppRGB
  00448	a3 80 01 00 00	 mov	 DWORD PTR _g_WICConvert+384, eax
  0044d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat24bppRGB+4
  00453	89 0d 84 01 00
	00		 mov	 DWORD PTR _g_WICConvert+388, ecx
  00459	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat24bppRGB+8
  0045f	89 15 88 01 00
	00		 mov	 DWORD PTR _g_WICConvert+392, edx
  00465	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat24bppRGB+12
  0046a	a3 8c 01 00 00	 mov	 DWORD PTR _g_WICConvert+396, eax
  0046f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  00475	89 0d 90 01 00
	00		 mov	 DWORD PTR _g_WICConvert+400, ecx
  0047b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  00481	89 15 94 01 00
	00		 mov	 DWORD PTR _g_WICConvert+404, edx
  00487	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  0048c	a3 98 01 00 00	 mov	 DWORD PTR _g_WICConvert+408, eax
  00491	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  00497	89 0d 9c 01 00
	00		 mov	 DWORD PTR _g_WICConvert+412, ecx
  0049d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppPBGRA
  004a3	89 15 a0 01 00
	00		 mov	 DWORD PTR _g_WICConvert+416, edx
  004a9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppPBGRA+4
  004ae	a3 a4 01 00 00	 mov	 DWORD PTR _g_WICConvert+420, eax
  004b3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppPBGRA+8
  004b9	89 0d a8 01 00
	00		 mov	 DWORD PTR _g_WICConvert+424, ecx
  004bf	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppPBGRA+12
  004c5	89 15 ac 01 00
	00		 mov	 DWORD PTR _g_WICConvert+428, edx
  004cb	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  004d0	a3 b0 01 00 00	 mov	 DWORD PTR _g_WICConvert+432, eax
  004d5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  004db	89 0d b4 01 00
	00		 mov	 DWORD PTR _g_WICConvert+436, ecx
  004e1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  004e7	89 15 b8 01 00
	00		 mov	 DWORD PTR _g_WICConvert+440, edx
  004ed	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  004f2	a3 bc 01 00 00	 mov	 DWORD PTR _g_WICConvert+444, eax
  004f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppPRGBA
  004fd	89 0d c0 01 00
	00		 mov	 DWORD PTR _g_WICConvert+448, ecx
  00503	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppPRGBA+4
  00509	89 15 c4 01 00
	00		 mov	 DWORD PTR _g_WICConvert+452, edx
  0050f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppPRGBA+8
  00514	a3 c8 01 00 00	 mov	 DWORD PTR _g_WICConvert+456, eax
  00519	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppPRGBA+12
  0051f	89 0d cc 01 00
	00		 mov	 DWORD PTR _g_WICConvert+460, ecx
  00525	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  0052b	89 15 d0 01 00
	00		 mov	 DWORD PTR _g_WICConvert+464, edx
  00531	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  00536	a3 d4 01 00 00	 mov	 DWORD PTR _g_WICConvert+468, eax
  0053b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  00541	89 0d d8 01 00
	00		 mov	 DWORD PTR _g_WICConvert+472, ecx
  00547	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  0054d	89 15 dc 01 00
	00		 mov	 DWORD PTR _g_WICConvert+476, edx
  00553	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppRGB
  00558	a3 e0 01 00 00	 mov	 DWORD PTR _g_WICConvert+480, eax
  0055d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppRGB+4
  00563	89 0d e4 01 00
	00		 mov	 DWORD PTR _g_WICConvert+484, ecx
  00569	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat48bppRGB+8
  0056f	89 15 e8 01 00
	00		 mov	 DWORD PTR _g_WICConvert+488, edx
  00575	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppRGB+12
  0057a	a3 ec 01 00 00	 mov	 DWORD PTR _g_WICConvert+492, eax
  0057f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  00585	89 0d f0 01 00
	00		 mov	 DWORD PTR _g_WICConvert+496, ecx
  0058b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  00591	89 15 f4 01 00
	00		 mov	 DWORD PTR _g_WICConvert+500, edx
  00597	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  0059c	a3 f8 01 00 00	 mov	 DWORD PTR _g_WICConvert+504, eax
  005a1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  005a7	89 0d fc 01 00
	00		 mov	 DWORD PTR _g_WICConvert+508, ecx
  005ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat48bppBGR
  005b3	89 15 00 02 00
	00		 mov	 DWORD PTR _g_WICConvert+512, edx
  005b9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppBGR+4
  005be	a3 04 02 00 00	 mov	 DWORD PTR _g_WICConvert+516, eax
  005c3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppBGR+8
  005c9	89 0d 08 02 00
	00		 mov	 DWORD PTR _g_WICConvert+520, ecx
  005cf	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat48bppBGR+12
  005d5	89 15 0c 02 00
	00		 mov	 DWORD PTR _g_WICConvert+524, edx
  005db	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  005e0	a3 10 02 00 00	 mov	 DWORD PTR _g_WICConvert+528, eax
  005e5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  005eb	89 0d 14 02 00
	00		 mov	 DWORD PTR _g_WICConvert+532, ecx
  005f1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  005f7	89 15 18 02 00
	00		 mov	 DWORD PTR _g_WICConvert+536, edx
  005fd	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  00602	a3 1c 02 00 00	 mov	 DWORD PTR _g_WICConvert+540, eax
  00607	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRA
  0060d	89 0d 20 02 00
	00		 mov	 DWORD PTR _g_WICConvert+544, ecx
  00613	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppBGRA+4
  00619	89 15 24 02 00
	00		 mov	 DWORD PTR _g_WICConvert+548, edx
  0061f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppBGRA+8
  00624	a3 28 02 00 00	 mov	 DWORD PTR _g_WICConvert+552, eax
  00629	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRA+12
  0062f	89 0d 2c 02 00
	00		 mov	 DWORD PTR _g_WICConvert+556, ecx
  00635	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  0063b	89 15 30 02 00
	00		 mov	 DWORD PTR _g_WICConvert+560, edx
  00641	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  00646	a3 34 02 00 00	 mov	 DWORD PTR _g_WICConvert+564, eax
  0064b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  00651	89 0d 38 02 00
	00		 mov	 DWORD PTR _g_WICConvert+568, ecx
  00657	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  0065d	89 15 3c 02 00
	00		 mov	 DWORD PTR _g_WICConvert+572, edx
  00663	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppPRGBA
  00668	a3 40 02 00 00	 mov	 DWORD PTR _g_WICConvert+576, eax
  0066d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppPRGBA+4
  00673	89 0d 44 02 00
	00		 mov	 DWORD PTR _g_WICConvert+580, ecx
  00679	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppPRGBA+8
  0067f	89 15 48 02 00
	00		 mov	 DWORD PTR _g_WICConvert+584, edx
  00685	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppPRGBA+12
  0068a	a3 4c 02 00 00	 mov	 DWORD PTR _g_WICConvert+588, eax
  0068f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  00695	89 0d 50 02 00
	00		 mov	 DWORD PTR _g_WICConvert+592, ecx
  0069b	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  006a1	89 15 54 02 00
	00		 mov	 DWORD PTR _g_WICConvert+596, edx
  006a7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  006ac	a3 58 02 00 00	 mov	 DWORD PTR _g_WICConvert+600, eax
  006b1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  006b7	89 0d 5c 02 00
	00		 mov	 DWORD PTR _g_WICConvert+604, ecx
  006bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppPBGRA
  006c3	89 15 60 02 00
	00		 mov	 DWORD PTR _g_WICConvert+608, edx
  006c9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppPBGRA+4
  006ce	a3 64 02 00 00	 mov	 DWORD PTR _g_WICConvert+612, eax
  006d3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppPBGRA+8
  006d9	89 0d 68 02 00
	00		 mov	 DWORD PTR _g_WICConvert+616, ecx
  006df	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppPBGRA+12
  006e5	89 15 6c 02 00
	00		 mov	 DWORD PTR _g_WICConvert+620, edx
  006eb	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  006f0	a3 70 02 00 00	 mov	 DWORD PTR _g_WICConvert+624, eax
  006f5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  006fb	89 0d 74 02 00
	00		 mov	 DWORD PTR _g_WICConvert+628, ecx
  00701	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  00707	89 15 78 02 00
	00		 mov	 DWORD PTR _g_WICConvert+632, edx
  0070d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  00712	a3 7c 02 00 00	 mov	 DWORD PTR _g_WICConvert+636, eax
  00717	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint
  0071d	89 0d 80 02 00
	00		 mov	 DWORD PTR _g_WICConvert+640, ecx
  00723	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint+4
  00729	89 15 84 02 00
	00		 mov	 DWORD PTR _g_WICConvert+644, edx
  0072f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint+8
  00734	a3 88 02 00 00	 mov	 DWORD PTR _g_WICConvert+648, eax
  00739	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint+12
  0073f	89 0d 8c 02 00
	00		 mov	 DWORD PTR _g_WICConvert+652, ecx
  00745	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  0074b	89 15 90 02 00
	00		 mov	 DWORD PTR _g_WICConvert+656, edx
  00751	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  00756	a3 94 02 00 00	 mov	 DWORD PTR _g_WICConvert+660, eax
  0075b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  00761	89 0d 98 02 00
	00		 mov	 DWORD PTR _g_WICConvert+664, ecx
  00767	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  0076d	89 15 9c 02 00
	00		 mov	 DWORD PTR _g_WICConvert+668, edx
  00773	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint
  00778	a3 a0 02 00 00	 mov	 DWORD PTR _g_WICConvert+672, eax
  0077d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint+4
  00783	89 0d a4 02 00
	00		 mov	 DWORD PTR _g_WICConvert+676, ecx
  00789	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint+8
  0078f	89 15 a8 02 00
	00		 mov	 DWORD PTR _g_WICConvert+680, edx
  00795	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint+12
  0079a	a3 ac 02 00 00	 mov	 DWORD PTR _g_WICConvert+684, eax
  0079f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  007a5	89 0d b0 02 00
	00		 mov	 DWORD PTR _g_WICConvert+688, ecx
  007ab	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  007b1	89 15 b4 02 00
	00		 mov	 DWORD PTR _g_WICConvert+692, edx
  007b7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  007bc	a3 b8 02 00 00	 mov	 DWORD PTR _g_WICConvert+696, eax
  007c1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  007c7	89 0d bc 02 00
	00		 mov	 DWORD PTR _g_WICConvert+700, ecx
  007cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint
  007d3	89 15 c0 02 00
	00		 mov	 DWORD PTR _g_WICConvert+704, edx
  007d9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint+4
  007de	a3 c4 02 00 00	 mov	 DWORD PTR _g_WICConvert+708, eax
  007e3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint+8
  007e9	89 0d c8 02 00
	00		 mov	 DWORD PTR _g_WICConvert+712, ecx
  007ef	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint+12
  007f5	89 15 cc 02 00
	00		 mov	 DWORD PTR _g_WICConvert+716, edx
  007fb	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  00800	a3 d0 02 00 00	 mov	 DWORD PTR _g_WICConvert+720, eax
  00805	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  0080b	89 0d d4 02 00
	00		 mov	 DWORD PTR _g_WICConvert+724, ecx
  00811	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  00817	89 15 d8 02 00
	00		 mov	 DWORD PTR _g_WICConvert+728, edx
  0081d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  00822	a3 dc 02 00 00	 mov	 DWORD PTR _g_WICConvert+732, eax
  00827	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint
  0082d	89 0d e0 02 00
	00		 mov	 DWORD PTR _g_WICConvert+736, ecx
  00833	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint+4
  00839	89 15 e4 02 00
	00		 mov	 DWORD PTR _g_WICConvert+740, edx
  0083f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint+8
  00844	a3 e8 02 00 00	 mov	 DWORD PTR _g_WICConvert+744, eax
  00849	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint+12
  0084f	89 0d ec 02 00
	00		 mov	 DWORD PTR _g_WICConvert+748, ecx
  00855	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  0085b	89 15 f0 02 00
	00		 mov	 DWORD PTR _g_WICConvert+752, edx
  00861	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  00866	a3 f4 02 00 00	 mov	 DWORD PTR _g_WICConvert+756, eax
  0086b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  00871	89 0d f8 02 00
	00		 mov	 DWORD PTR _g_WICConvert+760, ecx
  00877	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  0087d	89 15 fc 02 00
	00		 mov	 DWORD PTR _g_WICConvert+764, edx
  00883	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint
  00888	a3 00 03 00 00	 mov	 DWORD PTR _g_WICConvert+768, eax
  0088d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint+4
  00893	89 0d 04 03 00
	00		 mov	 DWORD PTR _g_WICConvert+772, ecx
  00899	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint+8
  0089f	89 15 08 03 00
	00		 mov	 DWORD PTR _g_WICConvert+776, edx
  008a5	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint+12
  008aa	a3 0c 03 00 00	 mov	 DWORD PTR _g_WICConvert+780, eax
  008af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  008b5	89 0d 10 03 00
	00		 mov	 DWORD PTR _g_WICConvert+784, ecx
  008bb	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  008c1	89 15 14 03 00
	00		 mov	 DWORD PTR _g_WICConvert+788, edx
  008c7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  008cc	a3 18 03 00 00	 mov	 DWORD PTR _g_WICConvert+792, eax
  008d1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  008d7	89 0d 1c 03 00
	00		 mov	 DWORD PTR _g_WICConvert+796, ecx
  008dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf
  008e3	89 15 20 03 00
	00		 mov	 DWORD PTR _g_WICConvert+800, edx
  008e9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf+4
  008ee	a3 24 03 00 00	 mov	 DWORD PTR _g_WICConvert+804, eax
  008f3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf+8
  008f9	89 0d 28 03 00
	00		 mov	 DWORD PTR _g_WICConvert+808, ecx
  008ff	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf+12
  00905	89 15 2c 03 00
	00		 mov	 DWORD PTR _g_WICConvert+812, edx
  0090b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  00910	a3 30 03 00 00	 mov	 DWORD PTR _g_WICConvert+816, eax
  00915	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  0091b	89 0d 34 03 00
	00		 mov	 DWORD PTR _g_WICConvert+820, ecx
  00921	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  00927	89 15 38 03 00
	00		 mov	 DWORD PTR _g_WICConvert+824, edx
  0092d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  00932	a3 3c 03 00 00	 mov	 DWORD PTR _g_WICConvert+828, eax
  00937	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf
  0093d	89 0d 40 03 00
	00		 mov	 DWORD PTR _g_WICConvert+832, ecx
  00943	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf+4
  00949	89 15 44 03 00
	00		 mov	 DWORD PTR _g_WICConvert+836, edx
  0094f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf+8
  00954	a3 48 03 00 00	 mov	 DWORD PTR _g_WICConvert+840, eax
  00959	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf+12
  0095f	89 0d 4c 03 00
	00		 mov	 DWORD PTR _g_WICConvert+844, ecx
  00965	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  0096b	89 15 50 03 00
	00		 mov	 DWORD PTR _g_WICConvert+848, edx
  00971	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  00976	a3 54 03 00 00	 mov	 DWORD PTR _g_WICConvert+852, eax
  0097b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  00981	89 0d 58 03 00
	00		 mov	 DWORD PTR _g_WICConvert+856, ecx
  00987	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  0098d	89 15 5c 03 00
	00		 mov	 DWORD PTR _g_WICConvert+860, edx
  00993	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat
  00998	a3 60 03 00 00	 mov	 DWORD PTR _g_WICConvert+864, eax
  0099d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat+4
  009a3	89 0d 64 03 00
	00		 mov	 DWORD PTR _g_WICConvert+868, ecx
  009a9	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat+8
  009af	89 15 68 03 00
	00		 mov	 DWORD PTR _g_WICConvert+872, edx
  009b5	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat+12
  009ba	a3 6c 03 00 00	 mov	 DWORD PTR _g_WICConvert+876, eax
  009bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  009c5	89 0d 70 03 00
	00		 mov	 DWORD PTR _g_WICConvert+880, ecx
  009cb	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  009d1	89 15 74 03 00
	00		 mov	 DWORD PTR _g_WICConvert+884, edx
  009d7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  009dc	a3 78 03 00 00	 mov	 DWORD PTR _g_WICConvert+888, eax
  009e1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  009e7	89 0d 7c 03 00
	00		 mov	 DWORD PTR _g_WICConvert+892, ecx
  009ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat
  009f3	89 15 80 03 00
	00		 mov	 DWORD PTR _g_WICConvert+896, edx
  009f9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat+4
  009fe	a3 84 03 00 00	 mov	 DWORD PTR _g_WICConvert+900, eax
  00a03	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat+8
  00a09	89 0d 88 03 00
	00		 mov	 DWORD PTR _g_WICConvert+904, ecx
  00a0f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat+12
  00a15	89 15 8c 03 00
	00		 mov	 DWORD PTR _g_WICConvert+908, edx
  00a1b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  00a20	a3 90 03 00 00	 mov	 DWORD PTR _g_WICConvert+912, eax
  00a25	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  00a2b	89 0d 94 03 00
	00		 mov	 DWORD PTR _g_WICConvert+916, ecx
  00a31	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  00a37	89 15 98 03 00
	00		 mov	 DWORD PTR _g_WICConvert+920, edx
  00a3d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  00a42	a3 9c 03 00 00	 mov	 DWORD PTR _g_WICConvert+924, eax
  00a47	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint
  00a4d	89 0d a0 03 00
	00		 mov	 DWORD PTR _g_WICConvert+928, ecx
  00a53	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint+4
  00a59	89 15 a4 03 00
	00		 mov	 DWORD PTR _g_WICConvert+932, edx
  00a5f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint+8
  00a64	a3 a8 03 00 00	 mov	 DWORD PTR _g_WICConvert+936, eax
  00a69	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint+12
  00a6f	89 0d ac 03 00
	00		 mov	 DWORD PTR _g_WICConvert+940, ecx
  00a75	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  00a7b	89 15 b0 03 00
	00		 mov	 DWORD PTR _g_WICConvert+944, edx
  00a81	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  00a86	a3 b4 03 00 00	 mov	 DWORD PTR _g_WICConvert+948, eax
  00a8b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  00a91	89 0d b8 03 00
	00		 mov	 DWORD PTR _g_WICConvert+952, ecx
  00a97	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  00a9d	89 15 bc 03 00
	00		 mov	 DWORD PTR _g_WICConvert+956, edx
  00aa3	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint
  00aa8	a3 c0 03 00 00	 mov	 DWORD PTR _g_WICConvert+960, eax
  00aad	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint+4
  00ab3	89 0d c4 03 00
	00		 mov	 DWORD PTR _g_WICConvert+964, ecx
  00ab9	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint+8
  00abf	89 15 c8 03 00
	00		 mov	 DWORD PTR _g_WICConvert+968, edx
  00ac5	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint+12
  00aca	a3 cc 03 00 00	 mov	 DWORD PTR _g_WICConvert+972, eax
  00acf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  00ad5	89 0d d0 03 00
	00		 mov	 DWORD PTR _g_WICConvert+976, ecx
  00adb	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  00ae1	89 15 d4 03 00
	00		 mov	 DWORD PTR _g_WICConvert+980, edx
  00ae7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  00aec	a3 d8 03 00 00	 mov	 DWORD PTR _g_WICConvert+984, eax
  00af1	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  00af7	89 0d dc 03 00
	00		 mov	 DWORD PTR _g_WICConvert+988, ecx
  00afd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBE
  00b03	89 15 e0 03 00
	00		 mov	 DWORD PTR _g_WICConvert+992, edx
  00b09	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBE+4
  00b0e	a3 e4 03 00 00	 mov	 DWORD PTR _g_WICConvert+996, eax
  00b13	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBE+8
  00b19	89 0d e8 03 00
	00		 mov	 DWORD PTR _g_WICConvert+1000, ecx
  00b1f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBE+12
  00b25	89 15 ec 03 00
	00		 mov	 DWORD PTR _g_WICConvert+1004, edx
  00b2b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  00b30	a3 f0 03 00 00	 mov	 DWORD PTR _g_WICConvert+1008, eax
  00b35	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  00b3b	89 0d f4 03 00
	00		 mov	 DWORD PTR _g_WICConvert+1012, ecx
  00b41	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  00b47	89 15 f8 03 00
	00		 mov	 DWORD PTR _g_WICConvert+1016, edx
  00b4d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  00b52	a3 fc 03 00 00	 mov	 DWORD PTR _g_WICConvert+1020, eax
  00b57	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppCMYK
  00b5d	89 0d 00 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1024, ecx
  00b63	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppCMYK+4
  00b69	89 15 04 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1028, edx
  00b6f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppCMYK+8
  00b74	a3 08 04 00 00	 mov	 DWORD PTR _g_WICConvert+1032, eax
  00b79	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppCMYK+12
  00b7f	89 0d 0c 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1036, ecx
  00b85	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  00b8b	89 15 10 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1040, edx
  00b91	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  00b96	a3 14 04 00 00	 mov	 DWORD PTR _g_WICConvert+1044, eax
  00b9b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  00ba1	89 0d 18 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1048, ecx
  00ba7	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  00bad	89 15 1c 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1052, edx
  00bb3	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppCMYK
  00bb8	a3 20 04 00 00	 mov	 DWORD PTR _g_WICConvert+1056, eax
  00bbd	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppCMYK+4
  00bc3	89 0d 24 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1060, ecx
  00bc9	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppCMYK+8
  00bcf	89 15 28 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1064, edx
  00bd5	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppCMYK+12
  00bda	a3 2c 04 00 00	 mov	 DWORD PTR _g_WICConvert+1068, eax
  00bdf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  00be5	89 0d 30 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1072, ecx
  00beb	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  00bf1	89 15 34 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1076, edx
  00bf7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  00bfc	a3 38 04 00 00	 mov	 DWORD PTR _g_WICConvert+1080, eax
  00c01	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  00c07	89 0d 3c 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1084, ecx
  00c0d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha
  00c13	89 15 40 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1088, edx
  00c19	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha+4
  00c1e	a3 44 04 00 00	 mov	 DWORD PTR _g_WICConvert+1092, eax
  00c23	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha+8
  00c29	89 0d 48 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1096, ecx
  00c2f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha+12
  00c35	89 15 4c 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1100, edx
  00c3b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  00c40	a3 50 04 00 00	 mov	 DWORD PTR _g_WICConvert+1104, eax
  00c45	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  00c4b	89 0d 54 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1108, ecx
  00c51	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  00c57	89 15 58 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1112, edx
  00c5d	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  00c62	a3 5c 04 00 00	 mov	 DWORD PTR _g_WICConvert+1116, eax
  00c67	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha
  00c6d	89 0d 60 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1120, ecx
  00c73	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha+4
  00c79	89 15 64 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1124, edx
  00c7f	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha+8
  00c84	a3 68 04 00 00	 mov	 DWORD PTR _g_WICConvert+1128, eax
  00c89	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha+12
  00c8f	89 0d 6c 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1132, ecx
  00c95	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  00c9b	89 15 70 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1136, edx
  00ca1	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  00ca6	a3 74 04 00 00	 mov	 DWORD PTR _g_WICConvert+1140, eax
  00cab	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  00cb1	89 0d 78 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1144, ecx
  00cb7	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  00cbd	89 15 7c 04 00
	00		 mov	 DWORD PTR _g_WICConvert+1148, edx
  00cc3	5d		 pop	 ebp
  00cc4	c3		 ret	 0
??__Eg_WICConvert@@YAXXZ ENDP				; `dynamic initializer for 'g_WICConvert''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_WICFormats@@YAXXZ
text$di	SEGMENT
??__Eg_WICFormats@@YAXXZ PROC				; `dynamic initializer for 'g_WICFormats'', COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 97
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
  00008	a3 00 00 00 00	 mov	 DWORD PTR _g_WICFormats, eax
  0000d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
  00013	89 0d 04 00 00
	00		 mov	 DWORD PTR _g_WICFormats+4, ecx
  00019	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
  0001f	89 15 08 00 00
	00		 mov	 DWORD PTR _g_WICFormats+8, edx
  00025	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
  0002a	a3 0c 00 00 00	 mov	 DWORD PTR _g_WICFormats+12, eax
  0002f	c7 05 10 00 00
	00 02 00 00 00	 mov	 DWORD PTR _g_WICFormats+16, 2
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
  0003f	89 0d 14 00 00
	00		 mov	 DWORD PTR _g_WICFormats+20, ecx
  00045	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
  0004b	89 15 18 00 00
	00		 mov	 DWORD PTR _g_WICFormats+24, edx
  00051	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
  00056	a3 1c 00 00 00	 mov	 DWORD PTR _g_WICFormats+28, eax
  0005b	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
  00061	89 0d 20 00 00
	00		 mov	 DWORD PTR _g_WICFormats+32, ecx
  00067	c7 05 24 00 00
	00 0a 00 00 00	 mov	 DWORD PTR _g_WICFormats+36, 10 ; 0000000aH
  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
  00077	89 15 28 00 00
	00		 mov	 DWORD PTR _g_WICFormats+40, edx
  0007d	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
  00082	a3 2c 00 00 00	 mov	 DWORD PTR _g_WICFormats+44, eax
  00087	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
  0008d	89 0d 30 00 00
	00		 mov	 DWORD PTR _g_WICFormats+48, ecx
  00093	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
  00099	89 15 34 00 00
	00		 mov	 DWORD PTR _g_WICFormats+52, edx
  0009f	c7 05 38 00 00
	00 0b 00 00 00	 mov	 DWORD PTR _g_WICFormats+56, 11 ; 0000000bH
  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
  000ae	a3 3c 00 00 00	 mov	 DWORD PTR _g_WICFormats+60, eax
  000b3	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
  000b9	89 0d 40 00 00
	00		 mov	 DWORD PTR _g_WICFormats+64, ecx
  000bf	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
  000c5	89 15 44 00 00
	00		 mov	 DWORD PTR _g_WICFormats+68, edx
  000cb	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
  000d0	a3 48 00 00 00	 mov	 DWORD PTR _g_WICFormats+72, eax
  000d5	c7 05 4c 00 00
	00 1c 00 00 00	 mov	 DWORD PTR _g_WICFormats+76, 28 ; 0000001cH
  000df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA
  000e5	89 0d 50 00 00
	00		 mov	 DWORD PTR _g_WICFormats+80, ecx
  000eb	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+4
  000f1	89 15 54 00 00
	00		 mov	 DWORD PTR _g_WICFormats+84, edx
  000f7	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA+8
  000fc	a3 58 00 00 00	 mov	 DWORD PTR _g_WICFormats+88, eax
  00101	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+12
  00107	89 0d 5c 00 00
	00		 mov	 DWORD PTR _g_WICFormats+92, ecx
  0010d	c7 05 60 00 00
	00 57 00 00 00	 mov	 DWORD PTR _g_WICFormats+96, 87 ; 00000057H
  00117	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGR
  0011d	89 15 64 00 00
	00		 mov	 DWORD PTR _g_WICFormats+100, edx
  00123	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppBGR+4
  00128	a3 68 00 00 00	 mov	 DWORD PTR _g_WICFormats+104, eax
  0012d	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR+8
  00133	89 0d 6c 00 00
	00		 mov	 DWORD PTR _g_WICFormats+108, ecx
  00139	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppBGR+12
  0013f	89 15 70 00 00
	00		 mov	 DWORD PTR _g_WICFormats+112, edx
  00145	c7 05 74 00 00
	00 58 00 00 00	 mov	 DWORD PTR _g_WICFormats+116, 88 ; 00000058H
  0014f	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR
  00154	a3 78 00 00 00	 mov	 DWORD PTR _g_WICFormats+120, eax
  00159	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+4
  0015f	89 0d 7c 00 00
	00		 mov	 DWORD PTR _g_WICFormats+124, ecx
  00165	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+8
  0016b	89 15 80 00 00
	00		 mov	 DWORD PTR _g_WICFormats+128, edx
  00171	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+12
  00176	a3 84 00 00 00	 mov	 DWORD PTR _g_WICFormats+132, eax
  0017b	c7 05 88 00 00
	00 59 00 00 00	 mov	 DWORD PTR _g_WICFormats+136, 89 ; 00000059H
  00185	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102
  0018b	89 0d 8c 00 00
	00		 mov	 DWORD PTR _g_WICFormats+140, ecx
  00191	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+4
  00197	89 15 90 00 00
	00		 mov	 DWORD PTR _g_WICFormats+144, edx
  0019d	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+8
  001a2	a3 94 00 00 00	 mov	 DWORD PTR _g_WICFormats+148, eax
  001a7	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+12
  001ad	89 0d 98 00 00
	00		 mov	 DWORD PTR _g_WICFormats+152, ecx
  001b3	c7 05 9c 00 00
	00 18 00 00 00	 mov	 DWORD PTR _g_WICFormats+156, 24 ; 00000018H
  001bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551
  001c3	89 15 a0 00 00
	00		 mov	 DWORD PTR _g_WICFormats+160, edx
  001c9	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+4
  001ce	a3 a4 00 00 00	 mov	 DWORD PTR _g_WICFormats+164, eax
  001d3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+8
  001d9	89 0d a8 00 00
	00		 mov	 DWORD PTR _g_WICFormats+168, ecx
  001df	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+12
  001e5	89 15 ac 00 00
	00		 mov	 DWORD PTR _g_WICFormats+172, edx
  001eb	c7 05 b0 00 00
	00 56 00 00 00	 mov	 DWORD PTR _g_WICFormats+176, 86 ; 00000056H
  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565
  001fa	a3 b4 00 00 00	 mov	 DWORD PTR _g_WICFormats+180, eax
  001ff	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+4
  00205	89 0d b8 00 00
	00		 mov	 DWORD PTR _g_WICFormats+184, ecx
  0020b	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+8
  00211	89 15 bc 00 00
	00		 mov	 DWORD PTR _g_WICFormats+188, edx
  00217	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565+12
  0021c	a3 c0 00 00 00	 mov	 DWORD PTR _g_WICFormats+192, eax
  00221	c7 05 c4 00 00
	00 55 00 00 00	 mov	 DWORD PTR _g_WICFormats+196, 85 ; 00000055H
  0022b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat
  00231	89 0d c8 00 00
	00		 mov	 DWORD PTR _g_WICFormats+200, ecx
  00237	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+4
  0023d	89 15 cc 00 00
	00		 mov	 DWORD PTR _g_WICFormats+204, edx
  00243	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+8
  00248	a3 d0 00 00 00	 mov	 DWORD PTR _g_WICFormats+208, eax
  0024d	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+12
  00253	89 0d d4 00 00
	00		 mov	 DWORD PTR _g_WICFormats+212, ecx
  00259	c7 05 d8 00 00
	00 29 00 00 00	 mov	 DWORD PTR _g_WICFormats+216, 41 ; 00000029H
  00263	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf
  00269	89 15 dc 00 00
	00		 mov	 DWORD PTR _g_WICFormats+220, edx
  0026f	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+4
  00274	a3 e0 00 00 00	 mov	 DWORD PTR _g_WICFormats+224, eax
  00279	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+8
  0027f	89 0d e4 00 00
	00		 mov	 DWORD PTR _g_WICFormats+228, ecx
  00285	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+12
  0028b	89 15 e8 00 00
	00		 mov	 DWORD PTR _g_WICFormats+232, edx
  00291	c7 05 ec 00 00
	00 36 00 00 00	 mov	 DWORD PTR _g_WICFormats+236, 54 ; 00000036H
  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGray
  002a0	a3 f0 00 00 00	 mov	 DWORD PTR _g_WICFormats+240, eax
  002a5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat16bppGray+4
  002ab	89 0d f4 00 00
	00		 mov	 DWORD PTR _g_WICFormats+244, ecx
  002b1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat16bppGray+8
  002b7	89 15 f8 00 00
	00		 mov	 DWORD PTR _g_WICFormats+248, edx
  002bd	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat16bppGray+12
  002c2	a3 fc 00 00 00	 mov	 DWORD PTR _g_WICFormats+252, eax
  002c7	c7 05 00 01 00
	00 38 00 00 00	 mov	 DWORD PTR _g_WICFormats+256, 56 ; 00000038H
  002d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
  002d7	89 0d 04 01 00
	00		 mov	 DWORD PTR _g_WICFormats+260, ecx
  002dd	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
  002e3	89 15 08 01 00
	00		 mov	 DWORD PTR _g_WICFormats+264, edx
  002e9	a1 08 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
  002ee	a3 0c 01 00 00	 mov	 DWORD PTR _g_WICFormats+268, eax
  002f3	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
  002f9	89 0d 10 01 00
	00		 mov	 DWORD PTR _g_WICFormats+272, ecx
  002ff	c7 05 14 01 00
	00 3d 00 00 00	 mov	 DWORD PTR _g_WICFormats+276, 61 ; 0000003dH
  00309	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppAlpha
  0030f	89 15 18 01 00
	00		 mov	 DWORD PTR _g_WICFormats+280, edx
  00315	a1 04 00 00 00	 mov	 eax, DWORD PTR _GUID_WICPixelFormat8bppAlpha+4
  0031a	a3 1c 01 00 00	 mov	 DWORD PTR _g_WICFormats+284, eax
  0031f	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+8
  00325	89 0d 20 01 00
	00		 mov	 DWORD PTR _g_WICFormats+288, ecx
  0032b	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+12
  00331	89 15 24 01 00
	00		 mov	 DWORD PTR _g_WICFormats+292, edx
  00337	c7 05 28 01 00
	00 41 00 00 00	 mov	 DWORD PTR _g_WICFormats+296, 65 ; 00000041H
  00341	5d		 pop	 ebp
  00342	c3		 ret	 0
??__Eg_WICFormats@@YAXXZ ENDP				; `dynamic initializer for 'g_WICFormats''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv129 = -340						; size = 4
$T2 = -336						; size = 4
$T3 = -332						; size = 4
$T4 = -328						; size = 4
_pstrName$5 = -324					; size = 4
_result$6 = -320					; size = 4
_strFileA$7 = -312					; size = 260
_frame$ = -44						; size = 4
_hr$ = -36						; size = 4
_decoder$ = -28						; size = 4
_pWIC$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_fileName$ = 16						; size = 4
_maxsize$ = 20						; size = 4
_usage$ = 24						; size = 4
_bindFlags$ = 28					; size = 4
_cpuAccessFlags$ = 32					; size = 4
_miscFlags$ = 36					; size = 4
_forceSRGB$ = 40					; size = 1
_texture$ = 44						; size = 4
_textureView$ = 48					; size = 4
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromFileEx
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 850
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd ac fe ff
	ff		 lea	 edi, DWORD PTR [ebp-340]
  0001f	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 851
  0003f	83 7d 2c 00	 cmp	 DWORD PTR _texture$[ebp], 0
  00043	74 09		 je	 SHORT $LN15@CreateWICT
; Line 853
  00045	8b 45 2c	 mov	 eax, DWORD PTR _texture$[ebp]
  00048	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN15@CreateWICT:
; Line 855
  0004e	83 7d 30 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  00052	74 09		 je	 SHORT $LN14@CreateWICT
; Line 857
  00054	8b 4d 30	 mov	 ecx, DWORD PTR _textureView$[ebp]
  00057	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN14@CreateWICT:
; Line 860
  0005d	83 7d 08 00	 cmp	 DWORD PTR _d3dDevice$[ebp], 0
  00061	74 12		 je	 SHORT $LN12@CreateWICT
  00063	83 7d 10 00	 cmp	 DWORD PTR _fileName$[ebp], 0
  00067	74 0c		 je	 SHORT $LN12@CreateWICT
  00069	83 7d 2c 00	 cmp	 DWORD PTR _texture$[ebp], 0
  0006d	75 10		 jne	 SHORT $LN13@CreateWICT
  0006f	83 7d 30 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  00073	75 0a		 jne	 SHORT $LN13@CreateWICT
$LN12@CreateWICT:
; Line 861
  00075	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0007a	e9 8b 02 00 00	 jmp	 $LN16@CreateWICT
$LN13@CreateWICT:
; Line 863
  0007f	e8 00 00 00 00	 call	 ?_GetWIC@@YAPAUIWICImagingFactory@@XZ ; _GetWIC
  00084	89 45 ec	 mov	 DWORD PTR _pWIC$[ebp], eax
; Line 864
  00087	83 7d ec 00	 cmp	 DWORD PTR _pWIC$[ebp], 0
  0008b	75 0a		 jne	 SHORT $LN11@CreateWICT
; Line 865
  0008d	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
  00092	e9 73 02 00 00	 jmp	 $LN16@CreateWICT
$LN11@CreateWICT:
; Line 868
  00097	8d 4d e4	 lea	 ecx, DWORD PTR _decoder$[ebp]
  0009a	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
  0009f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 869
  000a6	8d 4d e4	 lea	 ecx, DWORD PTR _decoder$[ebp]
  000a9	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
  000ae	8b f4		 mov	 esi, esp
  000b0	50		 push	 eax
  000b1	6a 00		 push	 0
  000b3	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000b8	6a 00		 push	 0
  000ba	8b 55 10	 mov	 edx, DWORD PTR _fileName$[ebp]
  000bd	52		 push	 edx
  000be	8b 45 ec	 mov	 eax, DWORD PTR _pWIC$[ebp]
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 55 ec	 mov	 edx, DWORD PTR _pWIC$[ebp]
  000c6	52		 push	 edx
  000c7	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000ca	ff d0		 call	 eax
  000cc	3b f4		 cmp	 esi, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 870
  000d6	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000da	7d 23		 jge	 SHORT $LN10@CreateWICT
; Line 871
  000dc	8b 4d dc	 mov	 ecx, DWORD PTR _hr$[ebp]
  000df	89 8d b8 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  000e5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ec	8d 4d e4	 lea	 ecx, DWORD PTR _decoder$[ebp]
  000ef	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
  000f4	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  000fa	e9 0b 02 00 00	 jmp	 $LN16@CreateWICT
$LN10@CreateWICT:
; Line 873
  000ff	8d 4d d4	 lea	 ecx, DWORD PTR _frame$[ebp]
  00102	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
  00107	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; Line 874
  0010b	8d 4d e4	 lea	 ecx, DWORD PTR _decoder$[ebp]
  0010e	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
  00113	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv129[ebp], eax
  00119	8d 4d d4	 lea	 ecx, DWORD PTR _frame$[ebp]
  0011c	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
  00121	8b f4		 mov	 esi, esp
  00123	50		 push	 eax
  00124	6a 00		 push	 0
  00126	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR tv129[ebp]
  0012c	52		 push	 edx
  0012d	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  00133	8b 08		 mov	 ecx, DWORD PTR [eax]
  00135	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00138	ff d2		 call	 edx
  0013a	3b f4		 cmp	 esi, esp
  0013c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00141	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 875
  00144	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00148	7d 2f		 jge	 SHORT $LN9@CreateWICT
; Line 876
  0014a	8b 45 dc	 mov	 eax, DWORD PTR _hr$[ebp]
  0014d	89 85 b4 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00153	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00157	8d 4d d4	 lea	 ecx, DWORD PTR _frame$[ebp]
  0015a	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
  0015f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00166	8d 4d e4	 lea	 ecx, DWORD PTR _decoder$[ebp]
  00169	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
  0016e	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00174	e9 91 01 00 00	 jmp	 $LN16@CreateWICT
$LN9@CreateWICT:
; Line 880
  00179	8b 4d 30	 mov	 ecx, DWORD PTR _textureView$[ebp]
  0017c	51		 push	 ecx
  0017d	8b 55 2c	 mov	 edx, DWORD PTR _texture$[ebp]
  00180	52		 push	 edx
  00181	0f b6 45 28	 movzx	 eax, BYTE PTR _forceSRGB$[ebp]
  00185	50		 push	 eax
  00186	8b 4d 24	 mov	 ecx, DWORD PTR _miscFlags$[ebp]
  00189	51		 push	 ecx
  0018a	8b 55 20	 mov	 edx, DWORD PTR _cpuAccessFlags$[ebp]
  0018d	52		 push	 edx
  0018e	8b 45 1c	 mov	 eax, DWORD PTR _bindFlags$[ebp]
  00191	50		 push	 eax
  00192	8b 4d 18	 mov	 ecx, DWORD PTR _usage$[ebp]
  00195	51		 push	 ecx
  00196	8b 55 14	 mov	 edx, DWORD PTR _maxsize$[ebp]
  00199	52		 push	 edx
  0019a	8d 4d d4	 lea	 ecx, DWORD PTR _frame$[ebp]
  0019d	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
  001a2	50		 push	 eax
  001a3	8b 45 0c	 mov	 eax, DWORD PTR _d3dContext$[ebp]
  001a6	50		 push	 eax
  001a7	8b 4d 08	 mov	 ecx, DWORD PTR _d3dDevice$[ebp]
  001aa	51		 push	 ecx
  001ab	e8 00 00 00 00	 call	 ?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; CreateTextureFromWIC
  001b0	83 c4 2c	 add	 esp, 44			; 0000002cH
  001b3	89 45 dc	 mov	 DWORD PTR _hr$[ebp], eax
; Line 883
  001b6	83 7d dc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001ba	0f 8c 20 01 00
	00		 jl	 $LN8@CreateWICT
; Line 885
  001c0	83 7d 2c 00	 cmp	 DWORD PTR _texture$[ebp], 0
  001c4	75 0a		 jne	 SHORT $LN6@CreateWICT
  001c6	83 7d 30 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  001ca	0f 84 10 01 00
	00		 je	 $LN8@CreateWICT
$LN6@CreateWICT:
; Line 896
  001d0	8b f4		 mov	 esi, esp
  001d2	6a 00		 push	 0
  001d4	6a 00		 push	 0
  001d6	68 04 01 00 00	 push	 260			; 00000104H
  001db	8d 95 c8 fe ff
	ff		 lea	 edx, DWORD PTR _strFileA$7[ebp]
  001e1	52		 push	 edx
  001e2	6a ff		 push	 -1
  001e4	8b 45 10	 mov	 eax, DWORD PTR _fileName$[ebp]
  001e7	50		 push	 eax
  001e8	68 00 04 00 00	 push	 1024			; 00000400H
  001ed	6a 00		 push	 0
  001ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  001f5	3b f4		 cmp	 esi, esp
  001f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001fc	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _result$6[ebp], eax
; Line 897
  00202	83 bd c0 fe ff
	ff 00		 cmp	 DWORD PTR _result$6[ebp], 0
  00209	0f 8e d1 00 00
	00		 jle	 $LN8@CreateWICT
; Line 899
  0020f	6a 5c		 push	 92			; 0000005cH
  00211	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _strFileA$7[ebp]
  00217	51		 push	 ecx
  00218	e8 00 00 00 00	 call	 ?strrchr@@YAPADPADH@Z	; strrchr
  0021d	83 c4 08	 add	 esp, 8
  00220	89 85 bc fe ff
	ff		 mov	 DWORD PTR _pstrName$5[ebp], eax
; Line 900
  00226	83 bd bc fe ff
	ff 00		 cmp	 DWORD PTR _pstrName$5[ebp], 0
  0022d	75 0e		 jne	 SHORT $LN4@CreateWICT
; Line 902
  0022f	8d 95 c8 fe ff
	ff		 lea	 edx, DWORD PTR _strFileA$7[ebp]
  00235	89 95 bc fe ff
	ff		 mov	 DWORD PTR _pstrName$5[ebp], edx
; Line 904
  0023b	eb 0f		 jmp	 SHORT $LN3@CreateWICT
$LN4@CreateWICT:
; Line 906
  0023d	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _pstrName$5[ebp]
  00243	83 c0 01	 add	 eax, 1
  00246	89 85 bc fe ff
	ff		 mov	 DWORD PTR _pstrName$5[ebp], eax
$LN3@CreateWICT:
; Line 909
  0024c	83 7d 2c 00	 cmp	 DWORD PTR _texture$[ebp], 0
  00250	74 44		 je	 SHORT $LN2@CreateWICT
  00252	8b 4d 2c	 mov	 ecx, DWORD PTR _texture$[ebp]
  00255	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00258	74 3c		 je	 SHORT $LN2@CreateWICT
; Line 914
  0025a	8b f4		 mov	 esi, esp
  0025c	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR _pstrName$5[ebp]
  00262	52		 push	 edx
  00263	68 04 01 00 00	 push	 260			; 00000104H
  00268	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _pstrName$5[ebp]
  0026e	50		 push	 eax
  0026f	e8 00 00 00 00	 call	 _strnlen_s
  00274	83 c4 08	 add	 esp, 8
  00277	50		 push	 eax
  00278	68 00 00 00 00	 push	 OFFSET _WKPDID_D3DDebugObjectName
  0027d	8b 4d 2c	 mov	 ecx, DWORD PTR _texture$[ebp]
  00280	8b 11		 mov	 edx, DWORD PTR [ecx]
  00282	8b 45 2c	 mov	 eax, DWORD PTR _texture$[ebp]
  00285	8b 08		 mov	 ecx, DWORD PTR [eax]
  00287	8b 12		 mov	 edx, DWORD PTR [edx]
  00289	51		 push	 ecx
  0028a	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0028d	ff d0		 call	 eax
  0028f	3b f4		 cmp	 esi, esp
  00291	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@CreateWICT:
; Line 917
  00296	83 7d 30 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  0029a	74 44		 je	 SHORT $LN8@CreateWICT
  0029c	8b 4d 30	 mov	 ecx, DWORD PTR _textureView$[ebp]
  0029f	83 39 00	 cmp	 DWORD PTR [ecx], 0
  002a2	74 3c		 je	 SHORT $LN8@CreateWICT
; Line 922
  002a4	8b f4		 mov	 esi, esp
  002a6	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR _pstrName$5[ebp]
  002ac	52		 push	 edx
  002ad	68 04 01 00 00	 push	 260			; 00000104H
  002b2	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _pstrName$5[ebp]
  002b8	50		 push	 eax
  002b9	e8 00 00 00 00	 call	 _strnlen_s
  002be	83 c4 08	 add	 esp, 8
  002c1	50		 push	 eax
  002c2	68 00 00 00 00	 push	 OFFSET _WKPDID_D3DDebugObjectName
  002c7	8b 4d 30	 mov	 ecx, DWORD PTR _textureView$[ebp]
  002ca	8b 11		 mov	 edx, DWORD PTR [ecx]
  002cc	8b 45 30	 mov	 eax, DWORD PTR _textureView$[ebp]
  002cf	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d1	8b 12		 mov	 edx, DWORD PTR [edx]
  002d3	51		 push	 ecx
  002d4	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  002d7	ff d0		 call	 eax
  002d9	3b f4		 cmp	 esi, esp
  002db	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN8@CreateWICT:
; Line 929
  002e0	8b 4d dc	 mov	 ecx, DWORD PTR _hr$[ebp]
  002e3	89 8d b0 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  002e9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002ed	8d 4d d4	 lea	 ecx, DWORD PTR _frame$[ebp]
  002f0	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
  002f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002fc	8d 4d e4	 lea	 ecx, DWORD PTR _decoder$[ebp]
  002ff	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
  00304	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN16@CreateWICT:
; Line 930
  0030a	52		 push	 edx
  0030b	8b cd		 mov	 ecx, ebp
  0030d	50		 push	 eax
  0030e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN25@CreateWICT
  00314	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00319	58		 pop	 eax
  0031a	5a		 pop	 edx
  0031b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0031e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00325	59		 pop	 ecx
  00326	5f		 pop	 edi
  00327	5e		 pop	 esi
  00328	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0032b	33 cd		 xor	 ecx, ebp
  0032d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00332	81 c4 54 01 00
	00		 add	 esp, 340		; 00000154H
  00338	3b ec		 cmp	 ebp, esp
  0033a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0033f	8b e5		 mov	 esp, ebp
  00341	5d		 pop	 ebp
  00342	c3		 ret	 0
  00343	90		 npad	 1
$LN25@CreateWICT:
  00344	03 00 00 00	 DD	 3
  00348	00 00 00 00	 DD	 $LN24@CreateWICT
$LN24@CreateWICT:
  0034c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00350	04 00 00 00	 DD	 4
  00354	00 00 00 00	 DD	 $LN20@CreateWICT
  00358	d4 ff ff ff	 DD	 -44			; ffffffd4H
  0035c	04 00 00 00	 DD	 4
  00360	00 00 00 00	 DD	 $LN21@CreateWICT
  00364	c8 fe ff ff	 DD	 -312			; fffffec8H
  00368	04 01 00 00	 DD	 260			; 00000104H
  0036c	00 00 00 00	 DD	 $LN22@CreateWICT
$LN22@CreateWICT:
  00370	73		 DB	 115			; 00000073H
  00371	74		 DB	 116			; 00000074H
  00372	72		 DB	 114			; 00000072H
  00373	46		 DB	 70			; 00000046H
  00374	69		 DB	 105			; 00000069H
  00375	6c		 DB	 108			; 0000006cH
  00376	65		 DB	 101			; 00000065H
  00377	41		 DB	 65			; 00000041H
  00378	00		 DB	 0
$LN21@CreateWICT:
  00379	66		 DB	 102			; 00000066H
  0037a	72		 DB	 114			; 00000072H
  0037b	61		 DB	 97			; 00000061H
  0037c	6d		 DB	 109			; 0000006dH
  0037d	65		 DB	 101			; 00000065H
  0037e	00		 DB	 0
$LN20@CreateWICT:
  0037f	64		 DB	 100			; 00000064H
  00380	65		 DB	 101			; 00000065H
  00381	63		 DB	 99			; 00000063H
  00382	6f		 DB	 111			; 0000006fH
  00383	64		 DB	 100			; 00000064H
  00384	65		 DB	 101			; 00000065H
  00385	72		 DB	 114			; 00000072H
  00386	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _decoder$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1:
  00008	8d 4d d4	 lea	 ecx, DWORD PTR _frame$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
__ehhandler$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a ac fe ff
	ff		 mov	 ecx, DWORD PTR [edx-340]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromFileEx
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv160 = -88						; size = 4
tv91 = -84						; size = 4
$T2 = -80						; size = 4
$T3 = -76						; size = 4
$T4 = -72						; size = 4
$T5 = -68						; size = 4
$T6 = -64						; size = 4
$T7 = -60						; size = 4
_frame$ = -52						; size = 4
_decoder$ = -40						; size = 4
_hr$ = -32						; size = 4
_stream$ = -24						; size = 4
_pWIC$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_wicData$ = 16						; size = 4
_wicDataSize$ = 20					; size = 4
_maxsize$ = 24						; size = 4
_usage$ = 28						; size = 4
_bindFlags$ = 32					; size = 4
_cpuAccessFlags$ = 36					; size = 4
_miscFlags$ = 40					; size = 4
_forceSRGB$ = 44					; size = 1
_texture$ = 48						; size = 4
_textureView$ = 52					; size = 4
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromMemoryEx
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 730
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8d 7d a8	 lea	 edi, DWORD PTR [ebp-88]
  00019	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 731
  00036	83 7d 30 00	 cmp	 DWORD PTR _texture$[ebp], 0
  0003a	74 09		 je	 SHORT $LN13@CreateWICT
; Line 733
  0003c	8b 45 30	 mov	 eax, DWORD PTR _texture$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN13@CreateWICT:
; Line 735
  00045	83 7d 34 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  00049	74 09		 je	 SHORT $LN12@CreateWICT
; Line 737
  0004b	8b 4d 34	 mov	 ecx, DWORD PTR _textureView$[ebp]
  0004e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN12@CreateWICT:
; Line 740
  00054	83 7d 08 00	 cmp	 DWORD PTR _d3dDevice$[ebp], 0
  00058	74 12		 je	 SHORT $LN10@CreateWICT
  0005a	83 7d 10 00	 cmp	 DWORD PTR _wicData$[ebp], 0
  0005e	74 0c		 je	 SHORT $LN10@CreateWICT
  00060	83 7d 30 00	 cmp	 DWORD PTR _texture$[ebp], 0
  00064	75 10		 jne	 SHORT $LN11@CreateWICT
  00066	83 7d 34 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  0006a	75 0a		 jne	 SHORT $LN11@CreateWICT
$LN10@CreateWICT:
; Line 741
  0006c	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00071	e9 96 02 00 00	 jmp	 $LN14@CreateWICT
$LN11@CreateWICT:
; Line 743
  00076	83 7d 14 00	 cmp	 DWORD PTR _wicDataSize$[ebp], 0
  0007a	75 0a		 jne	 SHORT $LN9@CreateWICT
; Line 744
  0007c	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00081	e9 86 02 00 00	 jmp	 $LN14@CreateWICT
$LN9@CreateWICT:
; Line 751
  00086	e8 00 00 00 00	 call	 ?_GetWIC@@YAPAUIWICImagingFactory@@XZ ; _GetWIC
  0008b	89 45 f0	 mov	 DWORD PTR _pWIC$[ebp], eax
; Line 752
  0008e	83 7d f0 00	 cmp	 DWORD PTR _pWIC$[ebp], 0
  00092	75 0a		 jne	 SHORT $LN8@CreateWICT
; Line 753
  00094	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
  00099	e9 6e 02 00 00	 jmp	 $LN14@CreateWICT
$LN8@CreateWICT:
; Line 756
  0009e	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  000a1	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
  000a6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 757
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  000b0	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
  000b5	8b f4		 mov	 esi, esp
  000b7	50		 push	 eax
  000b8	8b 55 f0	 mov	 edx, DWORD PTR _pWIC$[ebp]
  000bb	8b 02		 mov	 eax, DWORD PTR [edx]
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR _pWIC$[ebp]
  000c0	51		 push	 ecx
  000c1	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  000c4	ff d2		 call	 edx
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 758
  000d0	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d4	7d 1d		 jge	 SHORT $LN7@CreateWICT
; Line 759
  000d6	8b 45 e0	 mov	 eax, DWORD PTR _hr$[ebp]
  000d9	89 45 c4	 mov	 DWORD PTR $T7[ebp], eax
  000dc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e3	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  000e6	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  000eb	8b 45 c4	 mov	 eax, DWORD PTR $T7[ebp]
  000ee	e9 19 02 00 00	 jmp	 $LN14@CreateWICT
$LN7@CreateWICT:
; Line 761
  000f3	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  000f6	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
  000fb	89 45 ac	 mov	 DWORD PTR tv91[ebp], eax
  000fe	8b f4		 mov	 esi, esp
  00100	8b 4d 14	 mov	 ecx, DWORD PTR _wicDataSize$[ebp]
  00103	51		 push	 ecx
  00104	8b 55 10	 mov	 edx, DWORD PTR _wicData$[ebp]
  00107	52		 push	 edx
  00108	8b 45 ac	 mov	 eax, DWORD PTR tv91[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d ac	 mov	 ecx, DWORD PTR tv91[ebp]
  0010f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00111	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00114	ff d0		 call	 eax
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 762
  00120	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00124	7d 1d		 jge	 SHORT $LN6@CreateWICT
; Line 763
  00126	8b 4d e0	 mov	 ecx, DWORD PTR _hr$[ebp]
  00129	89 4d c0	 mov	 DWORD PTR $T6[ebp], ecx
  0012c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00133	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00136	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  0013b	8b 45 c0	 mov	 eax, DWORD PTR $T6[ebp]
  0013e	e9 c9 01 00 00	 jmp	 $LN14@CreateWICT
$LN6@CreateWICT:
; Line 766
  00143	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  00146	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
  0014b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; Line 767
  0014f	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  00152	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
  00157	8b f4		 mov	 esi, esp
  00159	50		 push	 eax
  0015a	6a 00		 push	 0
  0015c	6a 00		 push	 0
  0015e	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00161	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
  00166	50		 push	 eax
  00167	8b 55 f0	 mov	 edx, DWORD PTR _pWIC$[ebp]
  0016a	8b 02		 mov	 eax, DWORD PTR [edx]
  0016c	8b 4d f0	 mov	 ecx, DWORD PTR _pWIC$[ebp]
  0016f	51		 push	 ecx
  00170	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00173	ff d2		 call	 edx
  00175	3b f4		 cmp	 esi, esp
  00177	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017c	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 768
  0017f	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00183	7d 29		 jge	 SHORT $LN5@CreateWICT
; Line 769
  00185	8b 45 e0	 mov	 eax, DWORD PTR _hr$[ebp]
  00188	89 45 bc	 mov	 DWORD PTR $T5[ebp], eax
  0018b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0018f	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  00192	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
  00197	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0019e	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  001a1	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  001a6	8b 45 bc	 mov	 eax, DWORD PTR $T5[ebp]
  001a9	e9 5e 01 00 00	 jmp	 $LN14@CreateWICT
$LN5@CreateWICT:
; Line 771
  001ae	8d 4d cc	 lea	 ecx, DWORD PTR _frame$[ebp]
  001b1	e8 00 00 00 00	 call	 ??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
  001b6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; Line 772
  001ba	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  001bd	e8 00 00 00 00	 call	 ??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
  001c2	89 45 a8	 mov	 DWORD PTR tv160[ebp], eax
  001c5	8d 4d cc	 lea	 ecx, DWORD PTR _frame$[ebp]
  001c8	e8 00 00 00 00	 call	 ?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
  001cd	8b f4		 mov	 esi, esp
  001cf	50		 push	 eax
  001d0	6a 00		 push	 0
  001d2	8b 4d a8	 mov	 ecx, DWORD PTR tv160[ebp]
  001d5	51		 push	 ecx
  001d6	8b 55 a8	 mov	 edx, DWORD PTR tv160[ebp]
  001d9	8b 02		 mov	 eax, DWORD PTR [edx]
  001db	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  001de	ff d1		 call	 ecx
  001e0	3b f4		 cmp	 esi, esp
  001e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e7	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 773
  001ea	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001ee	7d 35		 jge	 SHORT $LN4@CreateWICT
; Line 774
  001f0	8b 55 e0	 mov	 edx, DWORD PTR _hr$[ebp]
  001f3	89 55 b8	 mov	 DWORD PTR $T4[ebp], edx
  001f6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001fa	8d 4d cc	 lea	 ecx, DWORD PTR _frame$[ebp]
  001fd	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
  00202	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00206	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  00209	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
  0020e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00215	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00218	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  0021d	8b 45 b8	 mov	 eax, DWORD PTR $T4[ebp]
  00220	e9 e7 00 00 00	 jmp	 $LN14@CreateWICT
$LN4@CreateWICT:
; Line 778
  00225	8b 45 34	 mov	 eax, DWORD PTR _textureView$[ebp]
  00228	50		 push	 eax
  00229	8b 4d 30	 mov	 ecx, DWORD PTR _texture$[ebp]
  0022c	51		 push	 ecx
  0022d	0f b6 55 2c	 movzx	 edx, BYTE PTR _forceSRGB$[ebp]
  00231	52		 push	 edx
  00232	8b 45 28	 mov	 eax, DWORD PTR _miscFlags$[ebp]
  00235	50		 push	 eax
  00236	8b 4d 24	 mov	 ecx, DWORD PTR _cpuAccessFlags$[ebp]
  00239	51		 push	 ecx
  0023a	8b 55 20	 mov	 edx, DWORD PTR _bindFlags$[ebp]
  0023d	52		 push	 edx
  0023e	8b 45 1c	 mov	 eax, DWORD PTR _usage$[ebp]
  00241	50		 push	 eax
  00242	8b 4d 18	 mov	 ecx, DWORD PTR _maxsize$[ebp]
  00245	51		 push	 ecx
  00246	8d 4d cc	 lea	 ecx, DWORD PTR _frame$[ebp]
  00249	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
  0024e	50		 push	 eax
  0024f	8b 55 0c	 mov	 edx, DWORD PTR _d3dContext$[ebp]
  00252	52		 push	 edx
  00253	8b 45 08	 mov	 eax, DWORD PTR _d3dDevice$[ebp]
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; CreateTextureFromWIC
  0025c	83 c4 2c	 add	 esp, 44			; 0000002cH
  0025f	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 779
  00262	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00266	7d 32		 jge	 SHORT $LN3@CreateWICT
; Line 780
  00268	8b 4d e0	 mov	 ecx, DWORD PTR _hr$[ebp]
  0026b	89 4d b4	 mov	 DWORD PTR $T3[ebp], ecx
  0026e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00272	8d 4d cc	 lea	 ecx, DWORD PTR _frame$[ebp]
  00275	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
  0027a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0027e	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  00281	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
  00286	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0028d	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00290	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00295	8b 45 b4	 mov	 eax, DWORD PTR $T3[ebp]
  00298	eb 72		 jmp	 SHORT $LN14@CreateWICT
$LN3@CreateWICT:
; Line 782
  0029a	83 7d 30 00	 cmp	 DWORD PTR _texture$[ebp], 0
  0029e	74 1b		 je	 SHORT $LN2@CreateWICT
  002a0	8b 55 30	 mov	 edx, DWORD PTR _texture$[ebp]
  002a3	83 3a 00	 cmp	 DWORD PTR [edx], 0
  002a6	74 13		 je	 SHORT $LN2@CreateWICT
; Line 784
  002a8	68 00 00 00 00	 push	 OFFSET $SG156819
  002ad	8b 45 30	 mov	 eax, DWORD PTR _texture$[ebp]
  002b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b2	51		 push	 ecx
  002b3	e8 00 00 00 00	 call	 ??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
  002b8	83 c4 08	 add	 esp, 8
$LN2@CreateWICT:
; Line 787
  002bb	83 7d 34 00	 cmp	 DWORD PTR _textureView$[ebp], 0
  002bf	74 1b		 je	 SHORT $LN1@CreateWICT
  002c1	8b 55 34	 mov	 edx, DWORD PTR _textureView$[ebp]
  002c4	83 3a 00	 cmp	 DWORD PTR [edx], 0
  002c7	74 13		 je	 SHORT $LN1@CreateWICT
; Line 789
  002c9	68 00 00 00 00	 push	 OFFSET $SG156821
  002ce	8b 45 34	 mov	 eax, DWORD PTR _textureView$[ebp]
  002d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d3	51		 push	 ecx
  002d4	e8 00 00 00 00	 call	 ??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
  002d9	83 c4 08	 add	 esp, 8
$LN1@CreateWICT:
; Line 792
  002dc	8b 55 e0	 mov	 edx, DWORD PTR _hr$[ebp]
  002df	89 55 b0	 mov	 DWORD PTR $T2[ebp], edx
  002e2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  002e6	8d 4d cc	 lea	 ecx, DWORD PTR _frame$[ebp]
  002e9	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
  002ee	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002f2	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  002f5	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
  002fa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00301	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00304	e8 00 00 00 00	 call	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
  00309	8b 45 b0	 mov	 eax, DWORD PTR $T2[ebp]
$LN14@CreateWICT:
; Line 793
  0030c	52		 push	 edx
  0030d	8b cd		 mov	 ecx, ebp
  0030f	50		 push	 eax
  00310	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN24@CreateWICT
  00316	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0031b	58		 pop	 eax
  0031c	5a		 pop	 edx
  0031d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00320	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00327	59		 pop	 ecx
  00328	5f		 pop	 edi
  00329	5e		 pop	 esi
  0032a	83 c4 58	 add	 esp, 88			; 00000058H
  0032d	3b ec		 cmp	 ebp, esp
  0032f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00334	8b e5		 mov	 esp, ebp
  00336	5d		 pop	 ebp
  00337	c3		 ret	 0
$LN24@CreateWICT:
  00338	03 00 00 00	 DD	 3
  0033c	00 00 00 00	 DD	 $LN23@CreateWICT
$LN23@CreateWICT:
  00340	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00344	04 00 00 00	 DD	 4
  00348	00 00 00 00	 DD	 $LN19@CreateWICT
  0034c	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00350	04 00 00 00	 DD	 4
  00354	00 00 00 00	 DD	 $LN20@CreateWICT
  00358	cc ff ff ff	 DD	 -52			; ffffffccH
  0035c	04 00 00 00	 DD	 4
  00360	00 00 00 00	 DD	 $LN21@CreateWICT
$LN21@CreateWICT:
  00364	66		 DB	 102			; 00000066H
  00365	72		 DB	 114			; 00000072H
  00366	61		 DB	 97			; 00000061H
  00367	6d		 DB	 109			; 0000006dH
  00368	65		 DB	 101			; 00000065H
  00369	00		 DB	 0
$LN20@CreateWICT:
  0036a	64		 DB	 100			; 00000064H
  0036b	65		 DB	 101			; 00000065H
  0036c	63		 DB	 99			; 00000063H
  0036d	6f		 DB	 111			; 0000006fH
  0036e	64		 DB	 100			; 00000064H
  0036f	65		 DB	 101			; 00000065H
  00370	72		 DB	 114			; 00000072H
  00371	00		 DB	 0
$LN19@CreateWICT:
  00372	73		 DB	 115			; 00000073H
  00373	74		 DB	 116			; 00000074H
  00374	72		 DB	 114			; 00000072H
  00375	65		 DB	 101			; 00000065H
  00376	61		 DB	 97			; 00000061H
  00377	6d		 DB	 109			; 0000006dH
  00378	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR _decoder$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2:
  00010	8d 4d cc	 lea	 ecx, DWORD PTR _frame$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
__ehhandler$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromMemoryEx
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_fileName$ = 12						; size = 4
_maxsize$ = 16						; size = 4
_usage$ = 20						; size = 4
_bindFlags$ = 24					; size = 4
_cpuAccessFlags$ = 28					; size = 4
_miscFlags$ = 32					; size = 4
_forceSRGB$ = 36					; size = 1
_texture$ = 40						; size = 4
_textureView$ = 44					; size = 4
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromFileEx
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 832
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 835
  00003	8b 45 2c	 mov	 eax, DWORD PTR _textureView$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 28	 mov	 ecx, DWORD PTR _texture$[ebp]
  0000a	51		 push	 ecx
  0000b	0f b6 55 24	 movzx	 edx, BYTE PTR _forceSRGB$[ebp]
  0000f	52		 push	 edx
  00010	8b 45 20	 mov	 eax, DWORD PTR _miscFlags$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 1c	 mov	 ecx, DWORD PTR _cpuAccessFlags$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 18	 mov	 edx, DWORD PTR _bindFlags$[ebp]
  0001b	52		 push	 edx
  0001c	8b 45 14	 mov	 eax, DWORD PTR _usage$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 10	 mov	 ecx, DWORD PTR _maxsize$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 0c	 mov	 edx, DWORD PTR _fileName$[ebp]
  00027	52		 push	 edx
  00028	6a 00		 push	 0
  0002a	8b 45 08	 mov	 eax, DWORD PTR _d3dDevice$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
  00033	83 c4 2c	 add	 esp, 44			; 0000002cH
; Line 836
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromFileEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_wicData$ = 12						; size = 4
_wicDataSize$ = 16					; size = 4
_maxsize$ = 20						; size = 4
_usage$ = 24						; size = 4
_bindFlags$ = 28					; size = 4
_cpuAccessFlags$ = 32					; size = 4
_miscFlags$ = 36					; size = 4
_forceSRGB$ = 40					; size = 1
_texture$ = 44						; size = 4
_textureView$ = 48					; size = 4
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromMemoryEx
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 711
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 714
  00003	8b 45 30	 mov	 eax, DWORD PTR _textureView$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 2c	 mov	 ecx, DWORD PTR _texture$[ebp]
  0000a	51		 push	 ecx
  0000b	0f b6 55 28	 movzx	 edx, BYTE PTR _forceSRGB$[ebp]
  0000f	52		 push	 edx
  00010	8b 45 24	 mov	 eax, DWORD PTR _miscFlags$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 20	 mov	 ecx, DWORD PTR _cpuAccessFlags$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 1c	 mov	 edx, DWORD PTR _bindFlags$[ebp]
  0001b	52		 push	 edx
  0001c	8b 45 18	 mov	 eax, DWORD PTR _usage$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 14	 mov	 ecx, DWORD PTR _maxsize$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR _wicDataSize$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR _wicData$[ebp]
  0002b	50		 push	 eax
  0002c	6a 00		 push	 0
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _d3dDevice$[ebp]
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 ?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
  00037	83 c4 30	 add	 esp, 48			; 00000030H
; Line 715
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromMemoryEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_fileName$ = 16						; size = 4
_texture$ = 20						; size = 4
_textureView$ = 24					; size = 4
_maxsize$ = 28						; size = 4
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromFile
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 815
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 818
  00003	8b 45 18	 mov	 eax, DWORD PTR _textureView$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 14	 mov	 ecx, DWORD PTR _texture$[ebp]
  0000a	51		 push	 ecx
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	6a 08		 push	 8
  00013	6a 00		 push	 0
  00015	8b 55 1c	 mov	 edx, DWORD PTR _maxsize$[ebp]
  00018	52		 push	 edx
  00019	8b 45 10	 mov	 eax, DWORD PTR _fileName$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _d3dContext$[ebp]
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR _d3dDevice$[ebp]
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
  0002a	83 c4 2c	 add	 esp, 44			; 0000002cH
; Line 819
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_wicData$ = 16						; size = 4
_wicDataSize$ = 20					; size = 4
_texture$ = 24						; size = 4
_textureView$ = 28					; size = 4
_maxsize$ = 32						; size = 4
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromMemory
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 693
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 696
  00003	8b 45 1c	 mov	 eax, DWORD PTR _textureView$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 18	 mov	 ecx, DWORD PTR _texture$[ebp]
  0000a	51		 push	 ecx
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	6a 08		 push	 8
  00013	6a 00		 push	 0
  00015	8b 55 20	 mov	 edx, DWORD PTR _maxsize$[ebp]
  00018	52		 push	 edx
  00019	8b 45 14	 mov	 eax, DWORD PTR _wicDataSize$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 10	 mov	 ecx, DWORD PTR _wicData$[ebp]
  00020	51		 push	 ecx
  00021	8b 55 0c	 mov	 edx, DWORD PTR _d3dContext$[ebp]
  00024	52		 push	 edx
  00025	8b 45 08	 mov	 eax, DWORD PTR _d3dDevice$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
  0002e	83 c4 30	 add	 esp, 48			; 00000030H
; Line 697
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_fileName$ = 12						; size = 4
_texture$ = 16						; size = 4
_textureView$ = 20					; size = 4
_maxsize$ = 24						; size = 4
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromFile
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 802
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 805
  00003	8b 45 14	 mov	 eax, DWORD PTR _textureView$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _texture$[ebp]
  0000a	51		 push	 ecx
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	6a 08		 push	 8
  00013	6a 00		 push	 0
  00015	8b 55 18	 mov	 edx, DWORD PTR _maxsize$[ebp]
  00018	52		 push	 edx
  00019	8b 45 0c	 mov	 eax, DWORD PTR _fileName$[ebp]
  0001c	50		 push	 eax
  0001d	6a 00		 push	 0
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _d3dDevice$[ebp]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
  00028	83 c4 2c	 add	 esp, 44			; 0000002cH
; Line 806
  0002b	3b ec		 cmp	 ebp, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_wicData$ = 12						; size = 4
_wicDataSize$ = 16					; size = 4
_texture$ = 20						; size = 4
_textureView$ = 24					; size = 4
_maxsize$ = 28						; size = 4
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromMemory
; File d:\engine class\assignment 1\new scratch\dxut\core\wictextureloader.cpp
; Line 679
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 682
  00003	8b 45 18	 mov	 eax, DWORD PTR _textureView$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 14	 mov	 ecx, DWORD PTR _texture$[ebp]
  0000a	51		 push	 ecx
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	6a 08		 push	 8
  00013	6a 00		 push	 0
  00015	8b 55 1c	 mov	 edx, DWORD PTR _maxsize$[ebp]
  00018	52		 push	 edx
  00019	8b 45 10	 mov	 eax, DWORD PTR _wicDataSize$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _wicData$[ebp]
  00020	51		 push	 ecx
  00021	6a 00		 push	 0
  00023	8b 55 08	 mov	 edx, DWORD PTR _d3dDevice$[ebp]
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 ?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
  0002c	83 c4 30	 add	 esp, 48			; 00000030H
; Line 683
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z PROC	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00011	83 e0 02	 and	 eax, 2
  00014	74 36		 je	 SHORT $LN3@vector
  00016	68 00 00 00 00	 push	 OFFSET ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00021	52		 push	 edx
  00022	6a 04		 push	 4
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR ___flags$[ebp]
  00030	83 e1 01	 and	 ecx, 1
  00033	74 0f		 je	 SHORT $LN2@vector
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	83 ea 04	 sub	 edx, 4
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00041	83 c4 04	 add	 esp, 4
$LN2@vector:
  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	83 e8 04	 sub	 eax, 4
  0004a	eb 1f		 jmp	 SHORT $LN4@vector
$LN3@vector:
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00054	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00057	83 e0 01	 and	 eax, 1
  0005a	74 0c		 je	 SHORT $LN1@vector
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00065	83 c4 04	 add	 esp, 4
$LN1@vector:
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@vector:
  0006b	83 c4 04	 add	 esp, 4
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ENDP	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 241
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Line 242
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ref$[ebp], 0
; Line 181
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d f4	 mov	 DWORD PTR _temp$[ebp], ecx
; Line 183
  0002e	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00032	74 23		 je	 SHORT $LN1@InternalRe
; Line 185
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 186
  0003d	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 55 f4	 mov	 edx, DWORD PTR _temp$[ebp]
  00047	52		 push	 edx
  00048	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004b	ff d0		 call	 eax
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	89 45 f8	 mov	 DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
  00057	8b 45 f8	 mov	 eax, DWORD PTR _ref$[ebp]
; Line 190
  0005a	5e		 pop	 esi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _PropVariantInit
_TEXT	SEGMENT
_pvar$ = 8						; size = 4
_PropVariantInit PROC					; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\propidl.h
; Line 1184
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1185
  00003	33 c0		 xor	 eax, eax
  00005	8b 4d 08	 mov	 ecx, DWORD PTR _pvar$[ebp]
  00008	89 01		 mov	 DWORD PTR [ecx], eax
  0000a	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0000d	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00010	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 1186
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
_PropVariantInit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; Line 26297
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000f	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  00011	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00014	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  00017	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001c	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00022	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00028	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  0002e	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string.h
; Line 226
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Ch$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Str$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strrchr
  00014	83 c4 08	 add	 esp, 8
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	5e		 pop	 esi
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
__Str$ = 8						; size = 4
__MaxCount$ = 12					; size = 4
_strnlen_s PROC
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string.h
; Line 131
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 132
  0000c	83 7d 08 00	 cmp	 DWORD PTR __Str$[ebp], 0
  00010	75 09		 jne	 SHORT $LN3@strnlen_s
  00012	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
  00019	eb 1d		 jmp	 SHORT $LN4@strnlen_s
$LN3@strnlen_s:
  0001b	8b f4		 mov	 esi, esp
  0001d	8b 45 0c	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00020	50		 push	 eax
  00021	8b 4d 08	 mov	 ecx, DWORD PTR __Str$[ebp]
  00024	51		 push	 ecx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strnlen
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
$LN4@strnlen_s:
  00038	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
; Line 133
  0003b	5e		 pop	 esi
  0003c	83 c4 04	 add	 esp, 4
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
_strnlen_s ENDP
_TEXT	ENDS
END
