; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\Scratch\DXSSE\DXUT\Core\Screengrab.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_GUID_ContainerFormatBmp
PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
PUBLIC	?value@?$integral_constant@H$0A@@std@@2HB	; std::integral_constant<int,0>::value
PUBLIC	__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
PUBLIC	___pobjectentryfirst
PUBLIC	___pobjectentrymid
PUBLIC	___pobjectentrylast
PUBLIC	__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
PUBLIC	?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA ; Microsoft::WRL::Details::ModuleBase::moduleLock_
PUBLIC	?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC ; Microsoft::WRL::Details::ModuleBase::objectCount_
PUBLIC	?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A ; Microsoft::WRL::Details::ModuleBase::module_
PUBLIC	?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<3>::value
PUBLIC	__GUID_00000003_0000_0000_c000_000000000046
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
PUBLIC	?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<4>::value
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<6>::value
PUBLIC	?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<13>::value
PUBLIC	?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<1>::value
PUBLIC	?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<2>::value
PUBLIC	__GUID_00000037_0000_0000_c000_000000000046
PUBLIC	_CLSID_WICImagingFactory
_BSS	SEGMENT
_g_WIC2	DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA
_BSS	SEGMENT
?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::moduleLock_
_BSS	ENDS
;	COMDAT ?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC
_BSS	SEGMENT
?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::objectCount_
_BSS	ENDS
;	COMDAT ?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A
_BSS	SEGMENT
?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::module_
_BSS	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT __GUID_00000037_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000037_0000_0000_c000_000000000046 DD 037H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB DD 02H ; Microsoft::WRL::RuntimeClassFlags<2>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB DD 01H ; Microsoft::WRL::RuntimeClassFlags<1>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB DD 0dH ; Microsoft::WRL::RuntimeClassFlags<13>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB DD 06H ; Microsoft::WRL::RuntimeClassFlags<6>::value
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB DD 04H ; Microsoft::WRL::RuntimeClassFlags<4>::value
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB
CONST	SEGMENT
?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB DD 00H ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
CONST	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000003_0000_0000_c000_000000000046 DD 03H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB DD 03H ; Microsoft::WRL::RuntimeClassFlags<3>::value
CONST	ENDS
;	COMDAT __GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
CONST	SEGMENT
__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90 DD 094ea2b94H
	DW	0e9ccH
	DW	049e0H
	DB	0c0H
	DB	0ffH
	DB	0eeH
	DB	064H
	DB	0caH
	DB	08fH
	DB	05bH
	DB	090H
CONST	ENDS
;	COMDAT ___pobjectentrylast
minATL$__z	SEGMENT
___pobjectentrylast DD 00H
minATL$__z	ENDS
;	COMDAT ___pobjectentrymid
minATL$__m	SEGMENT
___pobjectentrymid DD 00H
minATL$__m	ENDS
;	COMDAT ___pobjectentryfirst
minATL$__a	SEGMENT
___pobjectentryfirst DD 00H
minATL$__a	ENDS
;	COMDAT __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
CONST	SEGMENT
__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70 DD 0ec5ec8a9H
	DW	0c395H
	DW	04314H
	DB	09cH
	DB	077H
	DB	054H
	DB	0d7H
	DB	0a9H
	DB	035H
	DB	0ffH
	DB	070H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@H$0A@@std@@2HB
CONST	SEGMENT
?value@?$integral_constant@H$0A@@std@@2HB DD 00H	; std::integral_constant<int,0>::value
CONST	ENDS
CONST	SEGMENT
$SG158859 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG158860 DB	'p', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG159002 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG159003 DB	'p', 00H, 'T', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 00H, 00H
$SG159025 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG159026 DB	'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG159042 DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'b', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG159043 DB	'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG160180 DB	'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	'V', 00H, '5', 00H, 'H', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, '3', 00H, '2', 00H, 'b', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'G', 00H, 'R', 00H, 'A', 00H, 00H, 00H
$SG160350 DB	'DirectXTK', 00H
	ORG $+2
$SG160368 DB	'/', 00H, 't', 00H, 'E', 00H, 'X', 00H, 't', 00H, '/', 00H
	DB	'{', 00H, 's', 00H, 't', 00H, 'r', 00H, '=', 00H, 'S', 00H, 'o'
	DB	00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'}', 00H, 00H, 00H
	ORG $+2
$SG160371 DB	'/', 00H, 's', 00H, 'R', 00H, 'G', 00H, 'B', 00H, '/', 00H
	DB	'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H
$SG160374 DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'.', 00H, 'A', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG160377 DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'.', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '.'
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 'S', 00H
	DB	'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
_DDSPF_DXT1 DD	020H
	DD	04H
	DD	031545844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_DXT3 DD	020H
	DD	04H
	DD	033545844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_DXT5 DD	020H
	DD	04H
	DD	035545844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC4_UNORM DD 020H
	DD	04H
	DD	055344342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC4_SNORM DD 020H
	DD	04H
	DD	053344342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC5_UNORM DD 020H
	DD	04H
	DD	055354342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_BC5_SNORM DD 020H
	DD	04H
	DD	053354342H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_R8G8_B8G8 DD 020H
	DD	04H
	DD	047424752H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_G8R8_G8B8 DD 020H
	DD	04H
	DD	042475247H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_YUY2 DD	020H
	DD	04H
	DD	032595559H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DDSPF_A8R8G8B8 DD 020H
	DD	041H
	DD	00H
	DD	020H
	DD	0ff0000H
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
_DDSPF_X8R8G8B8 DD 020H
	DD	040H
	DD	00H
	DD	020H
	DD	0ff0000H
	DD	0ff00H
	DD	0ffH
	DD	00H
_DDSPF_A8B8G8R8 DD 020H
	DD	041H
	DD	00H
	DD	020H
	DD	0ffH
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
_DDSPF_G16R16 DD 020H
	DD	040H
	DD	00H
	DD	020H
	DD	0ffffH
	DD	0ffff0000H
	DD	00H
	DD	00H
_DDSPF_R5G6B5 DD 020H
	DD	040H
	DD	00H
	DD	010H
	DD	0f800H
	DD	07e0H
	DD	01fH
	DD	00H
_DDSPF_A1R5G5B5 DD 020H
	DD	041H
	DD	00H
	DD	010H
	DD	07c00H
	DD	03e0H
	DD	01fH
	DD	08000H
_DDSPF_A4R4G4B4 DD 020H
	DD	041H
	DD	00H
	DD	010H
	DD	0f00H
	DD	0f0H
	DD	0fH
	DD	0f000H
_DDSPF_L8 DD	020H
	DD	020000H
	DD	00H
	DD	08H
	DD	0ffH
	DD	00H
	DD	00H
	DD	00H
_DDSPF_L16 DD	020H
	DD	020000H
	DD	00H
	DD	010H
	DD	0ffffH
	DD	00H
	DD	00H
	DD	00H
_DDSPF_A8L8 DD	020H
	DD	020001H
	DD	00H
	DD	010H
	DD	0ffH
	DD	00H
	DD	00H
	DD	0ff00H
_DDSPF_A8 DD	020H
	DD	02H
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffH
_DDSPF_DX10 DD	020H
	DD	04H
	DD	030315844H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
CONST	SEGMENT
__GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c DD 06f15aaf2H
	DW	0d208H
	DW	04e89H
	DB	09aH
	DB	0b4H
	DB	048H
	DB	095H
	DB	035H
	DB	0d3H
	DB	04fH
	DB	09cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
;	COMDAT _GUID_ContainerFormatBmp
CONST	SEGMENT
_GUID_ContainerFormatBmp DD 0af1d87eH
	DW	0fcfeH
	DW	04188H
	DB	0bdH
	DB	0ebH
	DB	0a7H
	DB	090H
	DB	064H
	DB	071H
	DB	0cbH
	DB	0e3H
CONST	ENDS
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	_PropVariantInit
PUBLIC	?D3D11CalcSubresource@@YAIIII@Z			; D3D11CalcSubresource
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z ; DirectX::SaveDDSTextureToFile
PUBLIC	??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z ; std::_Func_class<void,IPropertyBag2 *>::operator()
PUBLIC	?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Empty
PUBLIC	??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>
PUBLIC	?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
PUBLIC	?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Local
PUBLIC	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
PUBLIC	??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool
PUBLIC	?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z ; DirectX::SaveWICTextureToFile
PUBLIC	??Rhandle_closer@@QAEXPAX@Z			; handle_closer::operator()
PUBLIC	?safe_handle@@YAPAXPAX@Z			; safe_handle
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
PUBLIC	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
PUBLIC	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
PUBLIC	??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=
PUBLIC	?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap
PUBLIC	??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
PUBLIC	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
PUBLIC	??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
PUBLIC	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
PUBLIC	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf
PUBLIC	??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter
PUBLIC	??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z ; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>
PUBLIC	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ	; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
PUBLIC	?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ; std::unique_ptr<void,handle_closer>::get
PUBLIC	??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ	; std::unique_ptr<void,handle_closer>::operator bool
PUBLIC	??0?$default_delete@$$BY0A@E@std@@QAE@XZ	; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
PUBLIC	??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z	; std::default_delete<unsigned char [0]>::operator()
PUBLIC	??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
PUBLIC	??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
PUBLIC	??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
PUBLIC	?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
PUBLIC	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
PUBLIC	?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
PUBLIC	??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>
PUBLIC	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
PUBLIC	??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>
PUBLIC	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
PUBLIC	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease
PUBLIC	??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>
PUBLIC	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
PUBLIC	?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
PUBLIC	??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>
PUBLIC	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
PUBLIC	??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>
PUBLIC	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
PUBLIC	?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::Get
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
PUBLIC	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
PUBLIC	?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get
PUBLIC	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
PUBLIC	??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z ; std::forward<IPropertyBag2 *>
PUBLIC	??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z	; std::_Debug_lt<unsigned int const &,unsigned int const &>
PUBLIC	??$forward@ABI@std@@YAABIABI@Z			; std::forward<unsigned int const &>
PUBLIC	??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
PUBLIC	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z		; std::less<void>::operator()<unsigned int const &,unsigned int const &>
PUBLIC	??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@4052000000000000
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__memcpy_s:PROC
EXTRN	__imp__CreateFileW@28:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_?_Xbad_function_call@std@@YAXXZ:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcmp:PROC
EXTRN	_memset:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_ignore	DB	01H DUP (?)
__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
_BSS	SEGMENT
?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A DD 01H DUP (?) ; `_GetWIC'::`2'::s_Factory
_BSS	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@4052000000000000
CONST	SEGMENT
__real@4052000000000000 DQ 04052000000000000r	; 72
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H, 'g'
	DB	00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$2
__unwindtable$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$2
__ehfuncinfo$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$8
xdata$x	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?RABIABI@?$less@X@std@@QBE_NABI0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?RABIABI@?$less@X@std@@QBE_NABI0@Z PROC		; std::less<void>::operator()<unsigned int const &,unsigned int const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 263
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 268
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 269
	mov	esp, ebp
	pop	ebp
	ret	8
??$?RABIABI@?$less@X@std@@QBE_NABI0@Z ENDP		; std::less<void>::operator()<unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 520
	push	ebp
	mov	ebp, esp
	push	esi
; Line 521
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z	; std::less<void>::operator()<unsigned int const &,unsigned int const &>
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@Debug_lt_p
; Line 522
	xor	al, al
	jmp	SHORT $LN4@Debug_lt_p
	jmp	SHORT $LN2@Debug_lt_p
$LN3@Debug_lt_p:
; Line 523
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??$?RABIABI@?$less@X@std@@QBE_NABI0@Z	; std::less<void>::operator()<unsigned int const &,unsigned int const &>
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Debug_lt_p
; Line 524
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_lt_p:
; Line 525
	mov	al, 1
$LN4@Debug_lt_p:
; Line 526
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABI@std@@YAABIABI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABI@std@@YAABIABI@Z PROC			; std::forward<unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABI@std@@YAABIABI@Z ENDP			; std::forward<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z PROC		; std::_Debug_lt<unsigned int const &,unsigned int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 534
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$forward@ABI@std@@YAABIABI@Z		; std::forward<unsigned int const &>
	add	esp, 4
	push	eax
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	call	??$_Debug_lt_pred@U?$less@X@std@@ABIABI@std@@YA_NU?$less@X@0@ABI1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,unsigned int const &,unsigned int const &>
	add	esp, 20					; 00000014H
; Line 535
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ENDP		; std::_Debug_lt<unsigned int const &,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z PROC ; std::forward<IPropertyBag2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z ENDP ; std::forward<IPropertyBag2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmap>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmap>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmap>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IPropertyBag2>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4120
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4121
	push	4121					; 00001019H
	push	OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ; std::_Debug_lt<unsigned int const &,unsigned int const &>
	add	esp, 16					; 00000010H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@min
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
$LN4@min:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 4122
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1627
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1628
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Delete
; Line 1629
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ; std::default_delete<unsigned char [0]>::operator()
$LN2@Delete:
; Line 1630
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1594
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1595
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]
; Line 1596
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1589
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1590
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1591
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1580
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
; Line 1581
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1518
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
; Line 1521
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1312
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1313
	mov	eax, DWORD PTR _this$[ebp]
; Line 1314
	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1295
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$default_delete@$$BY0A@E@std@@QAE@XZ ; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1296
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z PROC	; std::default_delete<unsigned char [0]>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1220
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 1221
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ENDP	; std::default_delete<unsigned char [0]>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$default_delete@$$BY0A@E@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@$$BY0A@E@std@@QAE@XZ PROC		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1209
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1211
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$default_delete@$$BY0A@E@std@@QAE@XZ ENDP		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ PROC	; std::unique_ptr<void,handle_closer>::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1467
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1468
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]
; Line 1469
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ ENDP	; std::unique_ptr<void,handle_closer>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ PROC	; std::unique_ptr<void,handle_closer>::get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1462
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1463
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1464
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ENDP	; std::unique_ptr<void,handle_closer>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ PROC	; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1446
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1447
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr
; Line 1448
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter
	mov	ecx, eax
	call	??Rhandle_closer@@QAEXPAX@Z		; handle_closer::operator()
$LN2@unique_ptr:
; Line 1449
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ENDP	; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z PROC	; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1365
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>
; Line 1368
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z ENDP	; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ PROC ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1312
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1313
	mov	eax, DWORD PTR _this$[ebp]
; Line 1314
	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAEAAUhandle_closer@@XZ ENDP ; std::_Unique_ptr_base<void,handle_closer,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1295
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1296
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XUhandle_closer@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,handle_closer,1>::_Unique_ptr_base<void,handle_closer,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -4						; size = 4
?_GetWIC@@YAPAUIWICImagingFactory@@XZ PROC		; _GetWIC
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 672
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 675
	cmp	DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
	je	SHORT $LN2@GetWIC
; Line 676
	mov	eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
	jmp	SHORT $LN3@GetWIC
$LN2@GetWIC:
; Line 715
	mov	esi, esp
	push	OFFSET ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
	push	OFFSET __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
	push	1
	push	0
	push	OFFSET _CLSID_WICImagingFactory
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 717
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetWIC
; Line 719
	mov	DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
; Line 720
	xor	eax, eax
	jmp	SHORT $LN3@GetWIC
$LN1@GetWIC:
; Line 724
	mov	eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
$LN3@GetWIC:
; Line 725
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_GetWIC@@YAPAUIWICImagingFactory@@XZ ENDP		; _GetWIC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 316
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	test	eax, eax
	je	SHORT $LN3@
	mov	DWORD PTR tv67[ebp], 0
	jmp	SHORT $LN4@
$LN3@:
	mov	DWORD PTR tv67[ebp], -1
$LN4@:
	mov	eax, DWORD PTR tv67[ebp]
; Line 317
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z
_TEXT	SEGMENT
_tmp$ = -8						; size = 4
_this$ = -4						; size = 4
_r$ = 8							; size = 4
?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _tmp$[ebp], ecx
; Line 309
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 310
	mov	edx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR [edx], eax
; Line 311
	mov	esp, ebp
	pop	ebp
	ret	4
?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 269
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN1@operator
; Line 272
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
	mov	ecx, eax
	call	?Swap@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXAAV123@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Swap
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
$LN1@operator:
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
; Line 275
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 209
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 210
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@ABV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 171
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@InternalAd
; Line 174
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@InternalAd:
; Line 176
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalAddRef@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IBEXXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv297 = -140						; size = 4
tv243 = -136						; size = 4
tv196 = -132						; size = 4
tv169 = -128						; size = 4
tv135 = -124						; size = 4
$T2 = -120						; size = 4
$T3 = -116						; size = 4
$T4 = -112						; size = 4
$T5 = -108						; size = 4
$T6 = -104						; size = 4
$T7 = -100						; size = 4
$T8 = -96						; size = 4
_index$9 = -92						; size = 4
_level$10 = -88						; size = 4
_item$11 = -84						; size = 4
_support$12 = -76					; size = 4
_fmt$13 = -68						; size = 4
_pTemp$14 = -60						; size = 4
_d3dDevice$ = -48					; size = 4
_hr$ = -40						; size = 4
_pTexture$ = -32					; size = 4
_resType$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pContext$ = 8						; size = 4
_pSource$ = 12						; size = 4
_desc$ = 16						; size = 4
_pStaging$ = 20						; size = 4
?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z PROC ; CaptureTexture
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 575
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-140]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 576
	cmp	DWORD PTR _pContext$[ebp], 0
	je	SHORT $LN18@CaptureTex
	cmp	DWORD PTR _pSource$[ebp], 0
	jne	SHORT $LN19@CaptureTex
$LN18@CaptureTex:
; Line 577
	mov	eax, -2147024809			; 80070057H
	jmp	$LN20@CaptureTex
$LN19@CaptureTex:
; Line 579
	mov	DWORD PTR _resType$[ebp], 0
; Line 580
	mov	esi, esp
	lea	eax, DWORD PTR _resType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSource$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSource$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 582
	cmp	DWORD PTR _resType$[ebp], 3
	je	SHORT $LN17@CaptureTex
; Line 583
	push	50					; 00000032H
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	jmp	$LN20@CaptureTex
$LN17@CaptureTex:
; Line 585
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 586
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
	mov	esi, esp
	push	eax
	push	OFFSET __GUID_6f15aaf2_d208_4e89_9ab4_489535d34f9c
	mov	edx, DWORD PTR _pSource$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSource$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 587
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN16@CaptureTex
; Line 588
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN20@CaptureTex
$LN16@CaptureTex:
; Line 590
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
	cmp	eax, -1
	jne	SHORT $LN22@CaptureTex
	mov	esi, esp
	push	590					; 0000024eH
	push	OFFSET $SG158859
	push	OFFSET $SG158860
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@CaptureTex:
; Line 592
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??C?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Texture2D@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator->
	mov	DWORD PTR tv135[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _desc$[ebp]
	push	edx
	mov	eax, DWORD PTR tv135[ebp]
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 594
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 595
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 597
	mov	edx, DWORD PTR _desc$[ebp]
	cmp	DWORD PTR [edx+20], 1
	jbe	$LN15@CaptureTex
; Line 600
	mov	eax, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [eax+20], 1
; Line 601
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 603
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 604
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv169[ebp], eax
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	mov	edx, DWORD PTR _desc$[ebp]
	push	edx
	mov	eax, DWORD PTR tv169[ebp]
	push	eax
	mov	ecx, DWORD PTR tv169[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 605
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN14@CaptureTex
; Line 606
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN20@CaptureTex
$LN14@CaptureTex:
; Line 608
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
	cmp	eax, -1
	jne	SHORT $LN23@CaptureTex
	mov	esi, esp
	push	608					; 00000260H
	push	OFFSET $SG159002
	push	OFFSET $SG159003
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@CaptureTex:
; Line 610
	mov	eax, DWORD PTR _desc$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?EnsureNotTypeless@@YA?AW4DXGI_FORMAT@@W41@@Z ; EnsureNotTypeless
	add	esp, 4
	mov	DWORD PTR _fmt$13[ebp], eax
; Line 612
	mov	DWORD PTR _support$12[ebp], 0
; Line 613
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv196[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _support$12[ebp]
	push	edx
	mov	eax, DWORD PTR _fmt$13[ebp]
	push	eax
	mov	ecx, DWORD PTR tv196[ebp]
	push	ecx
	mov	edx, DWORD PTR tv196[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+116]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 614
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN13@CaptureTex
; Line 615
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T6[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN20@CaptureTex
$LN13@CaptureTex:
; Line 617
	mov	eax, DWORD PTR _support$12[ebp]
	and	eax, 262144				; 00040000H
	jne	SHORT $LN12@CaptureTex
; Line 618
	mov	DWORD PTR $T5[ebp], -2147467259		; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN20@CaptureTex
$LN12@CaptureTex:
; Line 620
	mov	DWORD PTR _item$11[ebp], 0
	jmp	SHORT $LN11@CaptureTex
$LN10@CaptureTex:
	mov	ecx, DWORD PTR _item$11[ebp]
	add	ecx, 1
	mov	DWORD PTR _item$11[ebp], ecx
$LN11@CaptureTex:
	mov	edx, DWORD PTR _desc$[ebp]
	mov	eax, DWORD PTR _item$11[ebp]
	cmp	eax, DWORD PTR [edx+12]
	jae	SHORT $LN9@CaptureTex
; Line 622
	mov	DWORD PTR _level$10[ebp], 0
	jmp	SHORT $LN8@CaptureTex
$LN7@CaptureTex:
	mov	ecx, DWORD PTR _level$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _level$10[ebp], ecx
$LN8@CaptureTex:
	mov	edx, DWORD PTR _desc$[ebp]
	mov	eax, DWORD PTR _level$10[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN6@CaptureTex
; Line 624
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _item$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _level$10[ebp]
	push	ecx
	call	?D3D11CalcSubresource@@YAIIII@Z		; D3D11CalcSubresource
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _index$9[ebp], eax
; Line 625
	mov	esi, esp
	mov	edx, DWORD PTR _fmt$13[ebp]
	push	edx
	mov	eax, DWORD PTR _index$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$9[ebp]
	push	edx
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+228]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 626
	jmp	SHORT $LN7@CaptureTex
$LN6@CaptureTex:
; Line 627
	jmp	$LN10@CaptureTex
$LN9@CaptureTex:
; Line 629
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [ecx+32], 0
; Line 630
	mov	edx, DWORD PTR _desc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	and	eax, 4
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 631
	mov	edx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [edx+36], 131072		; 00020000H
; Line 632
	mov	eax, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [eax+28], 3
; Line 634
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv243[ebp], eax
	mov	ecx, DWORD PTR _pStaging$[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	mov	ecx, DWORD PTR _desc$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv243[ebp]
	push	edx
	mov	eax, DWORD PTR tv243[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 635
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@CaptureTex
; Line 636
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN20@CaptureTex
$LN5@CaptureTex:
; Line 638
	mov	ecx, DWORD PTR _pStaging$[ebp]
	call	??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
	cmp	eax, -1
	jne	SHORT $LN24@CaptureTex
	mov	esi, esp
	push	638					; 0000027eH
	push	OFFSET $SG159025
	push	OFFSET $SG159026
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@CaptureTex:
; Line 640
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+188]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 641
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	jmp	$LN4@CaptureTex
$LN15@CaptureTex:
; Line 642
	mov	eax, DWORD PTR _desc$[ebp]
	cmp	DWORD PTR [eax+28], 3
	jne	SHORT $LN3@CaptureTex
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	and	edx, 131072				; 00020000H
	je	SHORT $LN3@CaptureTex
; Line 645
	lea	eax, DWORD PTR _pTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pStaging$[ebp]
	call	??4?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEAAV012@ABV012@@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator=
; Line 647
	jmp	$LN4@CaptureTex
$LN3@CaptureTex:
; Line 650
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [ecx+32], 0
; Line 651
	mov	edx, DWORD PTR _desc$[ebp]
	mov	eax, DWORD PTR [edx+40]
	and	eax, 4
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 652
	mov	edx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [edx+36], 131072		; 00020000H
; Line 653
	mov	eax, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [eax+28], 3
; Line 655
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UID3D11Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv297[ebp], eax
	mov	ecx, DWORD PTR _pStaging$[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	mov	ecx, DWORD PTR _desc$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv297[ebp]
	push	edx
	mov	eax, DWORD PTR tv297[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 656
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CaptureTex
; Line 657
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN20@CaptureTex
$LN1@CaptureTex:
; Line 659
	mov	ecx, DWORD PTR _pStaging$[ebp]
	call	??B?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator int Microsoft::WRL::Details::BoolStruct::*
	cmp	eax, -1
	jne	SHORT $LN25@CaptureTex
	mov	esi, esp
	push	659					; 00000293H
	push	OFFSET $SG159042
	push	OFFSET $SG159043
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@CaptureTex:
; Line 661
	mov	esi, esp
	mov	edx, DWORD PTR _pSource$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+188]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@CaptureTex:
; Line 664
	mov	DWORD PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	call	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pTexture$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T2[ebp]
$LN20@CaptureTex:
; Line 665
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@CaptureTex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 140				; 0000008cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN36@CaptureTex:
	DD	5
	DD	$LN35@CaptureTex
$LN35@CaptureTex:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN29@CaptureTex
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN30@CaptureTex
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN31@CaptureTex
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN32@CaptureTex
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN33@CaptureTex
$LN33@CaptureTex:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN32@CaptureTex:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN31@CaptureTex:
	DB	100					; 00000064H
	DB	51					; 00000033H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN30@CaptureTex:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
$LN29@CaptureTex:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$0:
	lea	ecx, DWORD PTR _pTexture$[ebp]
	jmp	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$1:
	lea	ecx, DWORD PTR _d3dDevice$[ebp]
	jmp	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
__unwindfunclet$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z$2:
	lea	ecx, DWORD PTR _pTemp$14[ebp]
	jmp	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__ehhandler$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z ENDP ; CaptureTexture
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_fmt$ = 8						; size = 4
?EnsureNotTypeless@@YA?AW4DXGI_FORMAT@@W41@@Z PROC	; EnsureNotTypeless
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 542
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 544
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 96			; 00000060H
	ja	$LN1@EnsureNotT
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN25@EnsureNotT[edx]
	jmp	DWORD PTR $LN26@EnsureNotT[eax*4]
$LN20@EnsureNotT:
; Line 546
	mov	eax, 2
	jmp	$LN23@EnsureNotT
$LN19@EnsureNotT:
; Line 547
	mov	eax, 6
	jmp	SHORT $LN23@EnsureNotT
$LN18@EnsureNotT:
; Line 548
	mov	eax, 11					; 0000000bH
	jmp	SHORT $LN23@EnsureNotT
$LN17@EnsureNotT:
; Line 549
	mov	eax, 16					; 00000010H
	jmp	SHORT $LN23@EnsureNotT
$LN16@EnsureNotT:
; Line 550
	mov	eax, 24					; 00000018H
	jmp	SHORT $LN23@EnsureNotT
$LN15@EnsureNotT:
; Line 551
	mov	eax, 28					; 0000001cH
	jmp	SHORT $LN23@EnsureNotT
$LN14@EnsureNotT:
; Line 552
	mov	eax, 35					; 00000023H
	jmp	SHORT $LN23@EnsureNotT
$LN13@EnsureNotT:
; Line 553
	mov	eax, 41					; 00000029H
	jmp	SHORT $LN23@EnsureNotT
$LN12@EnsureNotT:
; Line 554
	mov	eax, 49					; 00000031H
	jmp	SHORT $LN23@EnsureNotT
$LN11@EnsureNotT:
; Line 555
	mov	eax, 56					; 00000038H
	jmp	SHORT $LN23@EnsureNotT
$LN10@EnsureNotT:
; Line 556
	mov	eax, 61					; 0000003dH
	jmp	SHORT $LN23@EnsureNotT
$LN9@EnsureNotT:
; Line 557
	mov	eax, 71					; 00000047H
	jmp	SHORT $LN23@EnsureNotT
$LN8@EnsureNotT:
; Line 558
	mov	eax, 74					; 0000004aH
	jmp	SHORT $LN23@EnsureNotT
$LN7@EnsureNotT:
; Line 559
	mov	eax, 77					; 0000004dH
	jmp	SHORT $LN23@EnsureNotT
$LN6@EnsureNotT:
; Line 560
	mov	eax, 80					; 00000050H
	jmp	SHORT $LN23@EnsureNotT
$LN5@EnsureNotT:
; Line 561
	mov	eax, 83					; 00000053H
	jmp	SHORT $LN23@EnsureNotT
$LN4@EnsureNotT:
; Line 562
	mov	eax, 87					; 00000057H
	jmp	SHORT $LN23@EnsureNotT
$LN3@EnsureNotT:
; Line 563
	mov	eax, 88					; 00000058H
	jmp	SHORT $LN23@EnsureNotT
$LN2@EnsureNotT:
; Line 564
	mov	eax, 98					; 00000062H
	jmp	SHORT $LN23@EnsureNotT
$LN1@EnsureNotT:
; Line 565
	mov	eax, DWORD PTR _fmt$[ebp]
$LN23@EnsureNotT:
; Line 567
	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@EnsureNotT:
	DD	$LN20@EnsureNotT
	DD	$LN19@EnsureNotT
	DD	$LN18@EnsureNotT
	DD	$LN17@EnsureNotT
	DD	$LN16@EnsureNotT
	DD	$LN15@EnsureNotT
	DD	$LN14@EnsureNotT
	DD	$LN13@EnsureNotT
	DD	$LN12@EnsureNotT
	DD	$LN11@EnsureNotT
	DD	$LN10@EnsureNotT
	DD	$LN9@EnsureNotT
	DD	$LN8@EnsureNotT
	DD	$LN7@EnsureNotT
	DD	$LN6@EnsureNotT
	DD	$LN5@EnsureNotT
	DD	$LN4@EnsureNotT
	DD	$LN3@EnsureNotT
	DD	$LN2@EnsureNotT
	DD	$LN1@EnsureNotT
$LN25@EnsureNotT:
	DB	0
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	1
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	2
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	3
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	4
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	5
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	6
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	7
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	8
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	9
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	10					; 0000000aH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	11					; 0000000bH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	12					; 0000000cH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	13					; 0000000dH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	14					; 0000000eH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	15					; 0000000fH
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	16					; 00000010H
	DB	19					; 00000013H
	DB	17					; 00000011H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	18					; 00000012H
?EnsureNotTypeless@@YA?AW4DXGI_FORMAT@@W41@@Z ENDP	; EnsureNotTypeless
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4087
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 4088
	push	4088					; 00000ff8H
	push	OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$_Debug_lt@ABIABI@std@@YA_NABI0PB_WI@Z ; std::_Debug_lt<unsigned int const &,unsigned int const &>
	add	esp, 16					; 00000010H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
; Line 4089
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -52						; size = 4
$T1 = -48						; size = 4
$T2 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
_bpp$5 = -32						; size = 4
_numBlocksHigh$6 = -28					; size = 4
_numBlocksWide$7 = -24					; size = 4
_bpe$ = -20						; size = 4
_planar$ = -15						; size = 1
_packed$ = -14						; size = 1
_bc$ = -13						; size = 1
_numRows$ = -12						; size = 4
_rowBytes$ = -8						; size = 4
_numBytes$ = -4						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
_fmt$ = 16						; size = 4
_outNumBytes$ = 20					; size = 4
_outRowBytes$ = 24					; size = 4
_outNumRows$ = 28					; size = 4
?GetSurfaceInfo@@YAXIIW4DXGI_FORMAT@@PAI11@Z PROC	; GetSurfaceInfo
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	DWORD PTR _numBytes$[ebp], 0
; Line 408
	mov	DWORD PTR _rowBytes$[ebp], 0
; Line 409
	mov	DWORD PTR _numRows$[ebp], 0
; Line 411
	mov	BYTE PTR _bc$[ebp], 0
; Line 412
	mov	BYTE PTR _packed$[ebp], 0
; Line 413
	mov	BYTE PTR _planar$[ebp], 0
; Line 414
	mov	DWORD PTR _bpe$[ebp], 0
; Line 415
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 68					; 00000044H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 41			; 00000029H
	ja	SHORT $LN20@GetSurface
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN24@GetSurface[edx]
	jmp	DWORD PTR $LN25@GetSurface[eax*4]
$LN19@GetSurface:
; Line 423
	mov	BYTE PTR _bc$[ebp], 1
; Line 424
	mov	DWORD PTR _bpe$[ebp], 8
; Line 425
	jmp	SHORT $LN20@GetSurface
$LN18@GetSurface:
; Line 442
	mov	BYTE PTR _bc$[ebp], 1
; Line 443
	mov	DWORD PTR _bpe$[ebp], 16		; 00000010H
; Line 444
	jmp	SHORT $LN20@GetSurface
$LN17@GetSurface:
; Line 449
	mov	BYTE PTR _packed$[ebp], 1
; Line 450
	mov	DWORD PTR _bpe$[ebp], 4
; Line 451
	jmp	SHORT $LN20@GetSurface
$LN16@GetSurface:
; Line 455
	mov	BYTE PTR _packed$[ebp], 1
; Line 456
	mov	DWORD PTR _bpe$[ebp], 8
; Line 457
	jmp	SHORT $LN20@GetSurface
$LN15@GetSurface:
; Line 461
	mov	BYTE PTR _planar$[ebp], 1
; Line 462
	mov	DWORD PTR _bpe$[ebp], 2
; Line 463
	jmp	SHORT $LN20@GetSurface
$LN14@GetSurface:
; Line 467
	mov	BYTE PTR _planar$[ebp], 1
; Line 468
	mov	DWORD PTR _bpe$[ebp], 4
$LN20@GetSurface:
; Line 483
	movzx	ecx, BYTE PTR _bc$[ebp]
	test	ecx, ecx
	je	$LN13@GetSurface
; Line 485
	mov	DWORD PTR _numBlocksWide$7[ebp], 0
; Line 486
	cmp	DWORD PTR _width$[ebp], 0
	jbe	SHORT $LN12@GetSurface
; Line 488
	mov	edx, DWORD PTR _width$[ebp]
	add	edx, 3
	shr	edx, 2
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR $T3[ebp], 1
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _numBlocksWide$7[ebp], edx
$LN12@GetSurface:
; Line 490
	mov	DWORD PTR _numBlocksHigh$6[ebp], 0
; Line 491
	cmp	DWORD PTR _height$[ebp], 0
	jbe	SHORT $LN11@GetSurface
; Line 493
	mov	eax, DWORD PTR _height$[ebp]
	add	eax, 3
	shr	eax, 2
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR $T1[ebp], 1
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _numBlocksHigh$6[ebp], eax
$LN11@GetSurface:
; Line 495
	mov	ecx, DWORD PTR _numBlocksWide$7[ebp]
	imul	ecx, DWORD PTR _bpe$[ebp]
	mov	DWORD PTR _rowBytes$[ebp], ecx
; Line 496
	mov	edx, DWORD PTR _numBlocksHigh$6[ebp]
	mov	DWORD PTR _numRows$[ebp], edx
; Line 497
	mov	eax, DWORD PTR _rowBytes$[ebp]
	imul	eax, DWORD PTR _numBlocksHigh$6[ebp]
	mov	DWORD PTR _numBytes$[ebp], eax
	jmp	$LN10@GetSurface
$LN13@GetSurface:
; Line 499
	movzx	ecx, BYTE PTR _packed$[ebp]
	test	ecx, ecx
	je	SHORT $LN9@GetSurface
; Line 501
	mov	edx, DWORD PTR _width$[ebp]
	add	edx, 1
	shr	edx, 1
	imul	edx, DWORD PTR _bpe$[ebp]
	mov	DWORD PTR _rowBytes$[ebp], edx
; Line 502
	mov	eax, DWORD PTR _height$[ebp]
	mov	DWORD PTR _numRows$[ebp], eax
; Line 503
	mov	ecx, DWORD PTR _rowBytes$[ebp]
	imul	ecx, DWORD PTR _height$[ebp]
	mov	DWORD PTR _numBytes$[ebp], ecx
	jmp	$LN10@GetSurface
$LN9@GetSurface:
; Line 505
	cmp	DWORD PTR _fmt$[ebp], 110		; 0000006eH
	jne	SHORT $LN7@GetSurface
; Line 507
	mov	edx, DWORD PTR _width$[ebp]
	add	edx, 3
	shr	edx, 2
	shl	edx, 2
	mov	DWORD PTR _rowBytes$[ebp], edx
; Line 508
	mov	eax, DWORD PTR _height$[ebp]
	shl	eax, 1
	mov	DWORD PTR _numRows$[ebp], eax
; Line 509
	mov	ecx, DWORD PTR _rowBytes$[ebp]
	imul	ecx, DWORD PTR _numRows$[ebp]
	mov	DWORD PTR _numBytes$[ebp], ecx
	jmp	SHORT $LN10@GetSurface
$LN7@GetSurface:
; Line 511
	movzx	edx, BYTE PTR _planar$[ebp]
	test	edx, edx
	je	SHORT $LN5@GetSurface
; Line 513
	mov	eax, DWORD PTR _width$[ebp]
	add	eax, 1
	shr	eax, 1
	imul	eax, DWORD PTR _bpe$[ebp]
	mov	DWORD PTR _rowBytes$[ebp], eax
; Line 514
	mov	ecx, DWORD PTR _rowBytes$[ebp]
	imul	ecx, DWORD PTR _height$[ebp]
	mov	edx, DWORD PTR _rowBytes$[ebp]
	imul	edx, DWORD PTR _height$[ebp]
	add	edx, 1
	shr	edx, 1
	add	ecx, edx
	mov	DWORD PTR _numBytes$[ebp], ecx
; Line 515
	mov	eax, DWORD PTR _height$[ebp]
	add	eax, 1
	shr	eax, 1
	add	eax, DWORD PTR _height$[ebp]
	mov	DWORD PTR _numRows$[ebp], eax
; Line 517
	jmp	SHORT $LN10@GetSurface
$LN5@GetSurface:
; Line 519
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	call	?BitsPerPixel@@YAIW4DXGI_FORMAT@@@Z	; BitsPerPixel
	add	esp, 4
	mov	DWORD PTR _bpp$5[ebp], eax
; Line 520
	mov	edx, DWORD PTR _width$[ebp]
	imul	edx, DWORD PTR _bpp$5[ebp]
	add	edx, 7
	shr	edx, 3
	mov	DWORD PTR _rowBytes$[ebp], edx
; Line 521
	mov	eax, DWORD PTR _height$[ebp]
	mov	DWORD PTR _numRows$[ebp], eax
; Line 522
	mov	ecx, DWORD PTR _rowBytes$[ebp]
	imul	ecx, DWORD PTR _height$[ebp]
	mov	DWORD PTR _numBytes$[ebp], ecx
$LN10@GetSurface:
; Line 525
	cmp	DWORD PTR _outNumBytes$[ebp], 0
	je	SHORT $LN3@GetSurface
; Line 527
	mov	edx, DWORD PTR _outNumBytes$[ebp]
	mov	eax, DWORD PTR _numBytes$[ebp]
	mov	DWORD PTR [edx], eax
$LN3@GetSurface:
; Line 529
	cmp	DWORD PTR _outRowBytes$[ebp], 0
	je	SHORT $LN2@GetSurface
; Line 531
	mov	ecx, DWORD PTR _outRowBytes$[ebp]
	mov	edx, DWORD PTR _rowBytes$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@GetSurface:
; Line 533
	cmp	DWORD PTR _outNumRows$[ebp], 0
	je	SHORT $LN22@GetSurface
; Line 535
	mov	eax, DWORD PTR _outNumRows$[ebp]
	mov	ecx, DWORD PTR _numRows$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@GetSurface:
; Line 537
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN25@GetSurface:
	DD	$LN17@GetSurface
	DD	$LN19@GetSurface
	DD	$LN18@GetSurface
	DD	$LN15@GetSurface
	DD	$LN14@GetSurface
	DD	$LN16@GetSurface
	DD	$LN20@GetSurface
$LN24@GetSurface:
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	1
	DB	1
	DB	2
	DB	2
	DB	2
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	6
	DB	6
	DB	6
	DB	3
	DB	4
	DB	4
	DB	3
	DB	0
	DB	5
	DB	5
?GetSurfaceInfo@@YAXIIW4DXGI_FORMAT@@PAI11@Z ENDP	; GetSurfaceInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_fmt$ = 8						; size = 4
?IsCompressed@@YA_NW4DXGI_FORMAT@@@Z PROC		; IsCompressed
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 365
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 366
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 70					; 00000046H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 29			; 0000001dH
	ja	SHORT $LN1@IsCompress
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN7@IsCompress[edx]
	jmp	DWORD PTR $LN8@IsCompress[eax*4]
$LN2@IsCompress:
; Line 389
	mov	al, 1
	jmp	SHORT $LN5@IsCompress
$LN1@IsCompress:
; Line 392
	xor	al, al
$LN5@IsCompress:
; Line 394
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@IsCompress:
	DD	$LN2@IsCompress
	DD	$LN1@IsCompress
$LN7@IsCompress:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
?IsCompressed@@YA_NW4DXGI_FORMAT@@@Z ENDP		; IsCompressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_fmt$ = 8						; size = 4
?BitsPerPixel@@YAIW4DXGI_FORMAT@@@Z PROC		; BitsPerPixel
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 202
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 203
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 114		; 00000072H
	ja	SHORT $LN1@BitsPerPix
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN17@BitsPerPix[edx]
	jmp	DWORD PTR $LN18@BitsPerPix[eax*4]
$LN12@BitsPerPix:
; Line 209
	mov	eax, 128				; 00000080H
	jmp	SHORT $LN15@BitsPerPix
$LN11@BitsPerPix:
; Line 215
	mov	eax, 96					; 00000060H
	jmp	SHORT $LN15@BitsPerPix
$LN10@BitsPerPix:
; Line 234
	mov	eax, 64					; 00000040H
	jmp	SHORT $LN15@BitsPerPix
$LN9@BitsPerPix:
; Line 274
	mov	eax, 32					; 00000020H
	jmp	SHORT $LN15@BitsPerPix
$LN8@BitsPerPix:
; Line 278
	mov	eax, 24					; 00000018H
	jmp	SHORT $LN15@BitsPerPix
$LN7@BitsPerPix:
; Line 296
	mov	eax, 16					; 00000010H
	jmp	SHORT $LN15@BitsPerPix
$LN6@BitsPerPix:
; Line 301
	mov	eax, 12					; 0000000cH
	jmp	SHORT $LN15@BitsPerPix
$LN5@BitsPerPix:
; Line 312
	mov	eax, 8
	jmp	SHORT $LN15@BitsPerPix
$LN4@BitsPerPix:
; Line 315
	mov	eax, 1
	jmp	SHORT $LN15@BitsPerPix
$LN3@BitsPerPix:
; Line 323
	mov	eax, 4
	jmp	SHORT $LN15@BitsPerPix
$LN2@BitsPerPix:
; Line 340
	mov	eax, 8
	jmp	SHORT $LN15@BitsPerPix
$LN1@BitsPerPix:
; Line 356
	xor	eax, eax
$LN15@BitsPerPix:
; Line 358
	mov	esp, ebp
	pop	ebp
	ret	0
$LN18@BitsPerPix:
	DD	$LN12@BitsPerPix
	DD	$LN11@BitsPerPix
	DD	$LN10@BitsPerPix
	DD	$LN9@BitsPerPix
	DD	$LN7@BitsPerPix
	DD	$LN5@BitsPerPix
	DD	$LN4@BitsPerPix
	DD	$LN3@BitsPerPix
	DD	$LN2@BitsPerPix
	DD	$LN6@BitsPerPix
	DD	$LN8@BitsPerPix
$LN17@BitsPerPix:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	6
	DB	3
	DB	3
	DB	3
	DB	7
	DB	7
	DB	7
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
	DB	7
	DB	7
	DB	8
	DB	8
	DB	8
	DB	4
	DB	4
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	3
	DB	3
	DB	2
	DB	9
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	9
	DB	3
	DB	2
	DB	2
	DB	9
	DB	5
	DB	5
	DB	5
	DB	4
	DB	4
?BitsPerPixel@@YAIW4DXGI_FORMAT@@@Z ENDP		; BitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?safe_handle@@YAPAXPAX@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_h$ = 8							; size = 4
?safe_handle@@YAPAXPAX@Z PROC				; safe_handle, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _h$[ebp], -1
	jne	SHORT $LN3@safe_handl
	mov	DWORD PTR tv65[ebp], 0
	jmp	SHORT $LN4@safe_handl
$LN3@safe_handl:
	mov	eax, DWORD PTR _h$[ebp]
	mov	DWORD PTR tv65[ebp], eax
$LN4@safe_handl:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?safe_handle@@YAPAXPAX@Z ENDP				; safe_handle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Rhandle_closer@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??Rhandle_closer@@QAEXPAX@Z PROC			; handle_closer::operator(), COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 191
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _h$[ebp], 0
	je	SHORT $LN2@operator
	mov	esi, esp
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Rhandle_closer@@QAEXPAX@Z ENDP			; handle_closer::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv631 = -544						; size = 4
tv619 = -540						; size = 4
tv591 = -536						; size = 4
tv528 = -532						; size = 4
tv493 = -528						; size = 4
tv433 = -524						; size = 4
tv408 = -520						; size = 4
tv394 = -516						; size = 4
tv382 = -512						; size = 4
tv368 = -508						; size = 4
tv359 = -504						; size = 4
tv346 = -500						; size = 4
tv334 = -496						; size = 4
tv323 = -492						; size = 4
tv313 = -488						; size = 4
tv304 = -484						; size = 4
tv290 = -480						; size = 4
tv275 = -476						; size = 4
tv218 = -472						; size = 4
tv204 = -468						; size = 4
tv188 = -464						; size = 4
tv162 = -460						; size = 4
tv135 = -456						; size = 4
tv78 = -452						; size = 4
$T2 = -448						; size = 4
$T3 = -444						; size = 4
$T4 = -440						; size = 4
$T5 = -436						; size = 4
$T6 = -432						; size = 4
$T7 = -428						; size = 4
$T8 = -424						; size = 4
$T9 = -420						; size = 4
$T10 = -416						; size = 4
$T11 = -412						; size = 4
$T12 = -408						; size = 4
$T13 = -404						; size = 4
$T14 = -400						; size = 4
$T15 = -396						; size = 4
$T16 = -392						; size = 4
$T17 = -388						; size = 4
$T18 = -384						; size = 4
$T19 = -380						; size = 4
$T20 = -376						; size = 4
$T21 = -372						; size = 4
$T22 = -368						; size = 4
$T23 = -364						; size = 4
$T24 = -360						; size = 4
_rect$25 = -352						; size = 16
_FC$26 = -328						; size = 4
_source$27 = -316					; size = 4
_mapped$ = -304						; size = 12
_value$28 = -284					; size = 16
_metawriter$ = -260					; size = 4
_targetGuid$ = -248					; size = 16
_varValue$29 = -224					; size = 16
_option$30 = -200					; size = 32
_props$ = -160						; size = 4
_frame$ = -148						; size = 4
_encoder$ = -136					; size = 4
_stream$ = -124						; size = 4
_pWIC$ = -116						; size = 4
_sRGB$ = -109						; size = 1
_pfGuid$ = -104						; size = 16
_hr$ = -84						; size = 4
_pStaging$ = -76					; size = 4
_desc$ = -64						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pContext$ = 8						; size = 4
_pSource$ = 12						; size = 4
_guidContainerFormat$ = 16				; size = 4
_fileName$ = 20						; size = 4
_targetFormat$ = 24					; size = 4
_setCustomProps$ = 28					; size = 24
?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z PROC ; DirectX::SaveWICTextureToFile
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 888
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 532				; 00000214H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-544]
	mov	ecx, 133				; 00000085H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 889
	cmp	DWORD PTR _fileName$[ebp], 0
	jne	SHORT $LN60@SaveWICTex
; Line 890
	mov	DWORD PTR $T24[ebp], -2147024809	; 80070057H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T24[ebp]
	jmp	$LN61@SaveWICTex
$LN60@SaveWICTex:
; Line 892
	mov	DWORD PTR _desc$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _desc$[ebp+4], eax
	mov	DWORD PTR _desc$[ebp+8], eax
	mov	DWORD PTR _desc$[ebp+12], eax
	mov	DWORD PTR _desc$[ebp+16], eax
	mov	DWORD PTR _desc$[ebp+20], eax
	mov	DWORD PTR _desc$[ebp+24], eax
	mov	DWORD PTR _desc$[ebp+28], eax
	mov	DWORD PTR _desc$[ebp+32], eax
	mov	DWORD PTR _desc$[ebp+36], eax
	mov	DWORD PTR _desc$[ebp+40], eax
; Line 893
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 894
	lea	ecx, DWORD PTR _pStaging$[ebp]
	push	ecx
	lea	edx, DWORD PTR _desc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z ; CaptureTexture
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hr$[ebp], eax
; Line 895
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN59@SaveWICTex
; Line 896
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T23[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T23[ebp]
	jmp	$LN61@SaveWICTex
$LN59@SaveWICTex:
; Line 900
	mov	BYTE PTR _sRGB$[ebp], 0
; Line 901
	mov	eax, DWORD PTR _desc$[ebp+16]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv78[ebp], ecx
	cmp	DWORD PTR tv78[ebp], 91			; 0000005bH
	ja	$LN38@SaveWICTex
	mov	edx, DWORD PTR tv78[ebp]
	movzx	eax, BYTE PTR $LN72@SaveWICTex[edx]
	jmp	DWORD PTR $LN93@SaveWICTex[eax*4]
$LN56@SaveWICTex:
; Line 903
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _pfGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _pfGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _pfGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _pfGuid$[ebp+12], ecx
	jmp	$LN57@SaveWICTex
$LN55@SaveWICTex:
; Line 904
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _pfGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _pfGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _pfGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _pfGuid$[ebp+12], edx
	jmp	$LN57@SaveWICTex
$LN54@SaveWICTex:
; Line 905
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _pfGuid$[ebp], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _pfGuid$[ebp+4], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _pfGuid$[ebp+8], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _pfGuid$[ebp+12], eax
	jmp	$LN57@SaveWICTex
$LN53@SaveWICTex:
; Line 906
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR
	mov	DWORD PTR _pfGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+4
	mov	DWORD PTR _pfGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+8
	mov	DWORD PTR _pfGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+12
	mov	DWORD PTR _pfGuid$[ebp+12], ecx
	jmp	$LN57@SaveWICTex
$LN52@SaveWICTex:
; Line 907
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102
	mov	DWORD PTR _pfGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+4
	mov	DWORD PTR _pfGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+8
	mov	DWORD PTR _pfGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+12
	mov	DWORD PTR _pfGuid$[ebp+12], edx
	jmp	$LN57@SaveWICTex
$LN51@SaveWICTex:
; Line 908
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551
	mov	DWORD PTR _pfGuid$[ebp], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+4
	mov	DWORD PTR _pfGuid$[ebp+4], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+8
	mov	DWORD PTR _pfGuid$[ebp+8], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+12
	mov	DWORD PTR _pfGuid$[ebp+12], eax
	jmp	$LN57@SaveWICTex
$LN50@SaveWICTex:
; Line 909
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565
	mov	DWORD PTR _pfGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+4
	mov	DWORD PTR _pfGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565+8
	mov	DWORD PTR _pfGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+12
	mov	DWORD PTR _pfGuid$[ebp+12], ecx
	jmp	$LN57@SaveWICTex
$LN49@SaveWICTex:
; Line 910
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat
	mov	DWORD PTR _pfGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+4
	mov	DWORD PTR _pfGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+8
	mov	DWORD PTR _pfGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+12
	mov	DWORD PTR _pfGuid$[ebp+12], edx
	jmp	$LN57@SaveWICTex
$LN48@SaveWICTex:
; Line 911
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf
	mov	DWORD PTR _pfGuid$[ebp], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+4
	mov	DWORD PTR _pfGuid$[ebp+4], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+8
	mov	DWORD PTR _pfGuid$[ebp+8], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+12
	mov	DWORD PTR _pfGuid$[ebp+12], eax
	jmp	$LN57@SaveWICTex
$LN47@SaveWICTex:
; Line 912
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppGray
	mov	DWORD PTR _pfGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGray+4
	mov	DWORD PTR _pfGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGray+8
	mov	DWORD PTR _pfGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppGray+12
	mov	DWORD PTR _pfGuid$[ebp+12], ecx
	jmp	$LN57@SaveWICTex
$LN46@SaveWICTex:
; Line 913
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray
	mov	DWORD PTR _pfGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppGray+4
	mov	DWORD PTR _pfGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+8
	mov	DWORD PTR _pfGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
	mov	DWORD PTR _pfGuid$[ebp+12], edx
	jmp	$LN57@SaveWICTex
$LN45@SaveWICTex:
; Line 914
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppAlpha
	mov	DWORD PTR _pfGuid$[ebp], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+4
	mov	DWORD PTR _pfGuid$[ebp+4], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+8
	mov	DWORD PTR _pfGuid$[ebp+8], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppAlpha+12
	mov	DWORD PTR _pfGuid$[ebp+12], eax
	jmp	$LN57@SaveWICTex
$LN44@SaveWICTex:
; Line 917
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _pfGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _pfGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _pfGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _pfGuid$[ebp+12], ecx
; Line 918
	jmp	$LN57@SaveWICTex
$LN43@SaveWICTex:
; Line 921
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _pfGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _pfGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _pfGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _pfGuid$[ebp+12], edx
; Line 922
	mov	BYTE PTR _sRGB$[ebp], 1
; Line 923
	jmp	$LN57@SaveWICTex
$LN42@SaveWICTex:
; Line 926
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA
	mov	DWORD PTR _pfGuid$[ebp], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+4
	mov	DWORD PTR _pfGuid$[ebp+4], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+8
	mov	DWORD PTR _pfGuid$[ebp+8], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA+12
	mov	DWORD PTR _pfGuid$[ebp+12], eax
; Line 927
	jmp	$LN57@SaveWICTex
$LN41@SaveWICTex:
; Line 930
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA
	mov	DWORD PTR _pfGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+4
	mov	DWORD PTR _pfGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA+8
	mov	DWORD PTR _pfGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+12
	mov	DWORD PTR _pfGuid$[ebp+12], ecx
; Line 931
	mov	BYTE PTR _sRGB$[ebp], 1
; Line 932
	jmp	$LN57@SaveWICTex
$LN40@SaveWICTex:
; Line 935
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGR
	mov	DWORD PTR _pfGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGR+4
	mov	DWORD PTR _pfGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR+8
	mov	DWORD PTR _pfGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGR+12
	mov	DWORD PTR _pfGuid$[ebp+12], edx
; Line 936
	jmp	SHORT $LN57@SaveWICTex
$LN39@SaveWICTex:
; Line 939
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGR
	mov	DWORD PTR _pfGuid$[ebp], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR+4
	mov	DWORD PTR _pfGuid$[ebp+4], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGR+8
	mov	DWORD PTR _pfGuid$[ebp+8], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGR+12
	mov	DWORD PTR _pfGuid$[ebp+12], eax
; Line 940
	mov	BYTE PTR _sRGB$[ebp], 1
; Line 941
	jmp	SHORT $LN57@SaveWICTex
$LN38@SaveWICTex:
; Line 944
	push	50					; 00000032H
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	mov	DWORD PTR $T22[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T22[ebp]
	jmp	$LN61@SaveWICTex
$LN57@SaveWICTex:
; Line 947
	call	?_GetWIC@@YAPAUIWICImagingFactory@@XZ	; _GetWIC
	mov	DWORD PTR _pWIC$[ebp], eax
; Line 948
	cmp	DWORD PTR _pWIC$[ebp], 0
	jne	SHORT $LN37@SaveWICTex
; Line 949
	mov	DWORD PTR $T21[ebp], -2147467262	; 80004002H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T21[ebp]
	jmp	$LN61@SaveWICTex
$LN37@SaveWICTex:
; Line 951
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 952
	lea	ecx, DWORD PTR _stream$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pWIC$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pWIC$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+56]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 953
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN36@SaveWICTex
; Line 954
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T20[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T20[ebp]
	jmp	$LN61@SaveWICTex
$LN36@SaveWICTex:
; Line 956
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
	mov	DWORD PTR tv135[ebp], eax
	mov	esi, esp
	push	1073741824				; 40000000H
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	mov	edx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+60]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 957
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN35@SaveWICTex
; Line 958
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T19[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T19[ebp]
	jmp	$LN61@SaveWICTex
$LN35@SaveWICTex:
; Line 960
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??0?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 961
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapEncoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	mov	eax, DWORD PTR _guidContainerFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWIC$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pWIC$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 962
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN34@SaveWICTex
; Line 963
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T18[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T18[ebp]
	jmp	$LN61@SaveWICTex
$LN34@SaveWICTex:
; Line 965
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
	mov	DWORD PTR tv162[ebp], eax
	mov	esi, esp
	push	2
	lea	ecx, DWORD PTR _stream$[ebp]
	call	?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
	push	eax
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	mov	ecx, DWORD PTR tv162[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 966
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN33@SaveWICTex
; Line 967
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T17[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T17[ebp]
	jmp	$LN61@SaveWICTex
$LN33@SaveWICTex:
; Line 969
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??0?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 970
	lea	ecx, DWORD PTR _props$[ebp]
	call	??0?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 971
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
	mov	DWORD PTR tv188[ebp], eax
	lea	ecx, DWORD PTR _props$[ebp]
	call	?GetAddressOf@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAEPAPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::GetAddressOf
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _frame$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameEncode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::GetAddressOf
	push	eax
	mov	edx, DWORD PTR tv188[ebp]
	push	edx
	mov	eax, DWORD PTR tv188[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 972
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN32@SaveWICTex
; Line 973
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T16[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T16[ebp]
	jmp	$LN61@SaveWICTex
$LN32@SaveWICTex:
; Line 975
	cmp	DWORD PTR _targetFormat$[ebp], 0
	je	$LN31@SaveWICTex
	push	16					; 00000010H
	push	OFFSET _GUID_ContainerFormatBmp
	mov	ecx, DWORD PTR _guidContainerFormat$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv204[ebp], eax
	cmp	DWORD PTR tv204[ebp], 0
	jne	$LN31@SaveWICTex
	movzx	edx, BYTE PTR _g_WIC2
	test	edx, edx
	je	$LN31@SaveWICTex
; Line 978
	mov	DWORD PTR _option$30[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _option$30[ebp+4], eax
	mov	DWORD PTR _option$30[ebp+8], eax
	mov	DWORD PTR _option$30[ebp+12], eax
	mov	DWORD PTR _option$30[ebp+16], eax
	mov	DWORD PTR _option$30[ebp+20], eax
	mov	DWORD PTR _option$30[ebp+24], eax
	mov	DWORD PTR _option$30[ebp+28], eax
; Line 979
	mov	DWORD PTR _option$30[ebp+12], OFFSET $SG160180
; Line 982
	mov	ecx, 11					; 0000000bH
	mov	WORD PTR _varValue$29[ebp], cx
; Line 983
	or	edx, -1
	mov	WORD PTR _varValue$29[ebp+8], dx
; Line 984
	lea	ecx, DWORD PTR _props$[ebp]
	call	??C?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIPropertyBag2@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::operator->
	mov	DWORD PTR tv218[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _varValue$29[ebp]
	push	eax
	lea	ecx, DWORD PTR _option$30[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR tv218[ebp]
	push	edx
	mov	eax, DWORD PTR tv218[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN31@SaveWICTex:
; Line 987
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN30@SaveWICTex
; Line 989
	lea	ecx, DWORD PTR _props$[ebp]
	call	?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
	push	eax
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z ; std::_Func_class<void,IPropertyBag2 *>::operator()
$LN30@SaveWICTex:
; Line 992
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv275[ebp], eax
	lea	ecx, DWORD PTR _props$[ebp]
	call	?Get@?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QBEPAUIPropertyBag2@@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::Get
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR tv275[ebp]
	push	ecx
	mov	edx, DWORD PTR tv275[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 993
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN29@SaveWICTex
; Line 994
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T15[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T15[ebp]
	jmp	$LN61@SaveWICTex
$LN29@SaveWICTex:
; Line 996
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv290[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _desc$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _desc$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv290[ebp]
	push	edx
	mov	eax, DWORD PTR tv290[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 997
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN28@SaveWICTex
; Line 998
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T14[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T14[ebp]
	jmp	$LN61@SaveWICTex
$LN28@SaveWICTex:
; Line 1000
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv304[ebp], eax
	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4052000000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4052000000000000
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR tv304[ebp]
	push	ecx
	mov	edx, DWORD PTR tv304[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1001
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN27@SaveWICTex
; Line 1002
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T13[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T13[ebp]
	jmp	$LN61@SaveWICTex
$LN27@SaveWICTex:
; Line 1006
	cmp	DWORD PTR _targetFormat$[ebp], 0
	je	SHORT $LN26@SaveWICTex
; Line 1008
	mov	eax, DWORD PTR _targetFormat$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _targetGuid$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _targetGuid$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _targetGuid$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _targetGuid$[ebp+12], edx
; Line 1010
	jmp	$LN23@SaveWICTex
$LN26@SaveWICTex:
; Line 1013
	mov	eax, DWORD PTR _desc$[ebp+16]
	mov	DWORD PTR tv313[ebp], eax
	mov	ecx, DWORD PTR tv313[ebp]
	sub	ecx, 11					; 0000000bH
	mov	DWORD PTR tv313[ebp], ecx
	cmp	DWORD PTR tv313[ebp], 75		; 0000004bH
	ja	$LN18@SaveWICTex
	mov	edx, DWORD PTR tv313[ebp]
	movzx	eax, BYTE PTR $LN73@SaveWICTex[edx]
	jmp	DWORD PTR $LN94@SaveWICTex[eax*4]
$LN22@SaveWICTex:
; Line 1029
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppBGR
	mov	DWORD PTR _targetGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat48bppBGR+4
	mov	DWORD PTR _targetGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppBGR+8
	mov	DWORD PTR _targetGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppBGR+12
	mov	DWORD PTR _targetGuid$[ebp+12], ecx
	jmp	$LN23@SaveWICTex
$LN21@SaveWICTex:
; Line 1030
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGR555
	mov	DWORD PTR _targetGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR555+4
	mov	DWORD PTR _targetGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+8
	mov	DWORD PTR _targetGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+12
	mov	DWORD PTR _targetGuid$[ebp+12], edx
	jmp	$LN23@SaveWICTex
$LN20@SaveWICTex:
; Line 1031
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565
	mov	DWORD PTR _targetGuid$[ebp], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+4
	mov	DWORD PTR _targetGuid$[ebp+4], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+8
	mov	DWORD PTR _targetGuid$[ebp+8], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565+12
	mov	DWORD PTR _targetGuid$[ebp+12], eax
	jmp	SHORT $LN23@SaveWICTex
$LN19@SaveWICTex:
; Line 1038
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
	mov	DWORD PTR _targetGuid$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
	mov	DWORD PTR _targetGuid$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
	mov	DWORD PTR _targetGuid$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
	mov	DWORD PTR _targetGuid$[ebp+12], ecx
; Line 1039
	jmp	SHORT $LN23@SaveWICTex
$LN18@SaveWICTex:
; Line 1042
	mov	edx, DWORD PTR _GUID_WICPixelFormat24bppBGR
	mov	DWORD PTR _targetGuid$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat24bppBGR+4
	mov	DWORD PTR _targetGuid$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat24bppBGR+8
	mov	DWORD PTR _targetGuid$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat24bppBGR+12
	mov	DWORD PTR _targetGuid$[ebp+12], edx
$LN23@SaveWICTex:
; Line 1047
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv323[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _targetGuid$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv323[ebp]
	push	ecx
	mov	edx, DWORD PTR tv323[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1048
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN17@SaveWICTex
; Line 1049
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T12[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T12[ebp]
	jmp	$LN61@SaveWICTex
$LN17@SaveWICTex:
; Line 1051
	cmp	DWORD PTR _targetFormat$[ebp], 0
	je	$LN16@SaveWICTex
	push	16					; 00000010H
	lea	eax, DWORD PTR _targetGuid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _targetFormat$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv334[ebp], eax
	cmp	DWORD PTR tv334[ebp], 0
	je	SHORT $LN16@SaveWICTex
; Line 1054
	mov	DWORD PTR $T11[ebp], -2147467259	; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T11[ebp]
	jmp	$LN61@SaveWICTex
$LN16@SaveWICTex:
; Line 1058
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??0?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1059
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv346[ebp], eax
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryWriter@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR tv346[ebp]
	push	edx
	mov	eax, DWORD PTR tv346[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$LN11@SaveWICTex
; Line 1062
	lea	eax, DWORD PTR _value$28[ebp]
	push	eax
	call	_PropVariantInit
	add	esp, 4
; Line 1064
	mov	ecx, 30					; 0000001eH
	mov	WORD PTR _value$28[ebp], cx
; Line 1065
	mov	DWORD PTR _value$28[ebp+8], OFFSET $SG160350
; Line 1067
	push	16					; 00000010H
	push	OFFSET _GUID_ContainerFormatPng
	mov	edx, DWORD PTR _guidContainerFormat$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv359[ebp], eax
	cmp	DWORD PTR tv359[ebp], 0
	jne	$LN14@SaveWICTex
; Line 1070
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
	mov	DWORD PTR tv368[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _value$28[ebp]
	push	eax
	push	OFFSET $SG160368
	mov	ecx, DWORD PTR tv368[ebp]
	push	ecx
	mov	edx, DWORD PTR tv368[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1073
	movzx	edx, BYTE PTR _sRGB$[ebp]
	test	edx, edx
	je	SHORT $LN13@SaveWICTex
; Line 1075
	mov	eax, 17					; 00000011H
	mov	WORD PTR _value$28[ebp], ax
; Line 1076
	mov	BYTE PTR _value$28[ebp+8], 0
; Line 1077
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
	mov	DWORD PTR tv382[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _value$28[ebp]
	push	ecx
	push	OFFSET $SG160371
	mov	edx, DWORD PTR tv382[ebp]
	push	edx
	mov	eax, DWORD PTR tv382[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@SaveWICTex:
; Line 1080
	jmp	$LN11@SaveWICTex
$LN14@SaveWICTex:
; Line 1083
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
	mov	DWORD PTR tv394[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _value$28[ebp]
	push	eax
	push	OFFSET $SG160374
	mov	ecx, DWORD PTR tv394[ebp]
	push	ecx
	mov	edx, DWORD PTR tv394[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1085
	movzx	edx, BYTE PTR _sRGB$[ebp]
	test	edx, edx
	je	SHORT $LN11@SaveWICTex
; Line 1088
	mov	eax, 18					; 00000012H
	mov	WORD PTR _value$28[ebp], ax
; Line 1089
	mov	ecx, 1
	mov	WORD PTR _value$28[ebp+8], cx
; Line 1090
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??C?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryWriter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::operator->
	mov	DWORD PTR tv408[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _value$28[ebp]
	push	edx
	push	OFFSET $SG160377
	mov	eax, DWORD PTR tv408[ebp]
	push	eax
	mov	ecx, DWORD PTR tv408[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@SaveWICTex:
; Line 1096
	mov	esi, esp
	lea	ecx, DWORD PTR _mapped$[ebp]
	push	ecx
	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1097
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN10@SaveWICTex
; Line 1098
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T10[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T10[ebp]
	jmp	$LN61@SaveWICTex
$LN10@SaveWICTex:
; Line 1100
	push	16					; 00000010H
	lea	ecx, DWORD PTR _pfGuid$[ebp]
	push	ecx
	lea	edx, DWORD PTR _targetGuid$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv433[ebp], eax
	cmp	DWORD PTR tv433[ebp], 0
	je	$LN9@SaveWICTex
; Line 1103
	lea	ecx, DWORD PTR _source$27[ebp]
	call	??0?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::ComPtr<IWICBitmap>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 1106
	lea	ecx, DWORD PTR _source$27[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAEPAPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _mapped$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mapped$[ebp+4]
	imul	ecx, DWORD PTR _desc$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _mapped$[ebp+4]
	push	edx
	lea	eax, DWORD PTR _pfGuid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desc$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _desc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pWIC$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pWIC$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1107
	cmp	DWORD PTR _hr$[ebp], 0
	jge	$LN8@SaveWICTex
; Line 1109
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+60]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1110
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T9[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _source$27[ebp]
	call	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T9[ebp]
	jmp	$LN61@SaveWICTex
$LN8@SaveWICTex:
; Line 1113
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 1114
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pWIC$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pWIC$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1115
	cmp	DWORD PTR _hr$[ebp], 0
	jge	$LN7@SaveWICTex
; Line 1117
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+60]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1118
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T8[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _source$27[ebp]
	call	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN61@SaveWICTex
$LN7@SaveWICTex:
; Line 1121
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
	mov	DWORD PTR tv493[ebp], eax
	mov	esi, esp
	push	0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	push	0
	push	0
	lea	eax, DWORD PTR _targetGuid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _source$27[ebp]
	call	?Get@?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QBEPAUIWICBitmap@@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::Get
	push	eax
	mov	ecx, DWORD PTR tv493[ebp]
	push	ecx
	mov	edx, DWORD PTR tv493[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1122
	cmp	DWORD PTR _hr$[ebp], 0
	jge	$LN6@SaveWICTex
; Line 1124
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1125
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _source$27[ebp]
	call	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN61@SaveWICTex
$LN6@SaveWICTex:
; Line 1128
	mov	DWORD PTR _rect$25[ebp], 0
	mov	DWORD PTR _rect$25[ebp+4], 0
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR _rect$25[ebp+8], ecx
	mov	edx, DWORD PTR _desc$[ebp+4]
	mov	DWORD PTR _rect$25[ebp+12], edx
; Line 1129
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv528[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _rect$25[ebp]
	push	eax
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	?Get@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::Get
	push	eax
	mov	ecx, DWORD PTR tv528[ebp]
	push	ecx
	mov	edx, DWORD PTR tv528[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1130
	cmp	DWORD PTR _hr$[ebp], 0
	jge	$LN5@SaveWICTex
; Line 1132
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1133
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _source$27[ebp]
	call	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN61@SaveWICTex
$LN5@SaveWICTex:
; Line 1135
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _FC$26[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _source$27[ebp]
	call	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
; Line 1136
	jmp	$LN3@SaveWICTex
$LN9@SaveWICTex:
; Line 1139
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv591[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _mapped$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mapped$[ebp+4]
	imul	edx, DWORD PTR _desc$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _mapped$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _desc$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR tv591[ebp]
	push	edx
	mov	eax, DWORD PTR tv591[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1140
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@SaveWICTex
; Line 1141
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN61@SaveWICTex
$LN3@SaveWICTex:
; Line 1144
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+60]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1146
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??C?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapFrameEncode@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::operator->
	mov	DWORD PTR tv619[ebp], eax
	mov	edx, DWORD PTR tv619[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv619[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1147
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@SaveWICTex
; Line 1148
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN61@SaveWICTex
$LN2@SaveWICTex:
; Line 1150
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??C?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapEncoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::operator->
	mov	DWORD PTR tv631[ebp], eax
	mov	ecx, DWORD PTR tv631[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR tv631[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+44]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1151
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@SaveWICTex
; Line 1152
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN61@SaveWICTex
$LN1@SaveWICTex:
; Line 1154
	mov	DWORD PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _metawriter$[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _props$[ebp]
	call	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _encoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	call	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
	mov	eax, DWORD PTR $T2[ebp]
$LN61@SaveWICTex:
; Line 1155
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN92@SaveWICTex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 544				; 00000220H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN92@SaveWICTex:
	DD	16					; 00000010H
	DD	$LN91@SaveWICTex
$LN91@SaveWICTex:
	DD	-64					; ffffffc0H
	DD	44					; 0000002cH
	DD	$LN74@SaveWICTex
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN75@SaveWICTex
	DD	-104					; ffffff98H
	DD	16					; 00000010H
	DD	$LN76@SaveWICTex
	DD	-124					; ffffff84H
	DD	4
	DD	$LN77@SaveWICTex
	DD	-136					; ffffff78H
	DD	4
	DD	$LN78@SaveWICTex
	DD	-148					; ffffff6cH
	DD	4
	DD	$LN79@SaveWICTex
	DD	-160					; ffffff60H
	DD	4
	DD	$LN80@SaveWICTex
	DD	-200					; ffffff38H
	DD	32					; 00000020H
	DD	$LN81@SaveWICTex
	DD	-224					; ffffff20H
	DD	16					; 00000010H
	DD	$LN82@SaveWICTex
	DD	-248					; ffffff08H
	DD	16					; 00000010H
	DD	$LN83@SaveWICTex
	DD	-260					; fffffefcH
	DD	4
	DD	$LN84@SaveWICTex
	DD	-284					; fffffee4H
	DD	16					; 00000010H
	DD	$LN85@SaveWICTex
	DD	-304					; fffffed0H
	DD	12					; 0000000cH
	DD	$LN86@SaveWICTex
	DD	-316					; fffffec4H
	DD	4
	DD	$LN87@SaveWICTex
	DD	-328					; fffffeb8H
	DD	4
	DD	$LN88@SaveWICTex
	DD	-352					; fffffea0H
	DD	16					; 00000010H
	DD	$LN89@SaveWICTex
$LN89@SaveWICTex:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN88@SaveWICTex:
	DB	70					; 00000046H
	DB	67					; 00000043H
	DB	0
$LN87@SaveWICTex:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN86@SaveWICTex:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN85@SaveWICTex:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN84@SaveWICTex:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN83@SaveWICTex:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	71					; 00000047H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN82@SaveWICTex:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN81@SaveWICTex:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN80@SaveWICTex:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN79@SaveWICTex:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN78@SaveWICTex:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN77@SaveWICTex:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN76@SaveWICTex:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	71					; 00000047H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN75@SaveWICTex:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN74@SaveWICTex:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
	npad	2
$LN93@SaveWICTex:
	DD	$LN56@SaveWICTex
	DD	$LN55@SaveWICTex
	DD	$LN54@SaveWICTex
	DD	$LN52@SaveWICTex
	DD	$LN44@SaveWICTex
	DD	$LN43@SaveWICTex
	DD	$LN49@SaveWICTex
	DD	$LN48@SaveWICTex
	DD	$LN47@SaveWICTex
	DD	$LN46@SaveWICTex
	DD	$LN45@SaveWICTex
	DD	$LN50@SaveWICTex
	DD	$LN51@SaveWICTex
	DD	$LN42@SaveWICTex
	DD	$LN40@SaveWICTex
	DD	$LN53@SaveWICTex
	DD	$LN41@SaveWICTex
	DD	$LN39@SaveWICTex
	DD	$LN38@SaveWICTex
$LN72@SaveWICTex:
	DB	0
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	1
	DB	2
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	3
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	4
	DB	5
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	6
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	7
	DB	18					; 00000012H
	DB	8
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	9
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	10					; 0000000aH
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	18					; 00000012H
	DB	16					; 00000010H
	DB	18					; 00000012H
	DB	17					; 00000011H
$LN94@SaveWICTex:
	DD	$LN22@SaveWICTex
	DD	$LN19@SaveWICTex
	DD	$LN20@SaveWICTex
	DD	$LN21@SaveWICTex
	DD	$LN18@SaveWICTex
$LN73@SaveWICTex:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$0:
	lea	ecx, DWORD PTR _setCustomProps$[ebp]
	jmp	??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$1:
	lea	ecx, DWORD PTR _pStaging$[ebp]
	jmp	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$2:
	lea	ecx, DWORD PTR _stream$[ebp]
	jmp	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$3:
	lea	ecx, DWORD PTR _encoder$[ebp]
	jmp	??1?$ComPtr@UIWICBitmapEncoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapEncoder>::~ComPtr<IWICBitmapEncoder>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$4:
	lea	ecx, DWORD PTR _frame$[ebp]
	jmp	??1?$ComPtr@UIWICBitmapFrameEncode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameEncode>::~ComPtr<IWICBitmapFrameEncode>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$5:
	lea	ecx, DWORD PTR _props$[ebp]
	jmp	??1?$ComPtr@UIPropertyBag2@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IPropertyBag2>::~ComPtr<IPropertyBag2>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$6:
	lea	ecx, DWORD PTR _metawriter$[ebp]
	jmp	??1?$ComPtr@UIWICMetadataQueryWriter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryWriter>::~ComPtr<IWICMetadataQueryWriter>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$7:
	lea	ecx, DWORD PTR _source$27[ebp]
	jmp	??1?$ComPtr@UIWICBitmap@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmap>::~ComPtr<IWICBitmap>
__unwindfunclet$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z$8:
	lea	ecx, DWORD PTR _FC$26[ebp]
	jmp	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
__ehhandler$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveWICTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@ABU_GUID@@PB_WPBU4@V?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@@Z ENDP ; DirectX::SaveWICTextureToFile
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ PROC ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv72[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv72[ebp]
; Line 731
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QBE_NXZ ENDP ; std::function<void __cdecl(IPropertyBag2 *)>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ PROC ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 628
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 629
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
; Line 630
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$function@$$A6AXPAUIPropertyBag2@@@Z@std@@QAE@XZ ENDP ; std::function<void __cdecl(IPropertyBag2 *)>::~function<void __cdecl(IPropertyBag2 *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ PROC ; std::_Func_class<void,IPropertyBag2 *>::_Local, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jne	SHORT $LN3@Local
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@Local
$LN3@Local:
	mov	DWORD PTR tv67[ebp], 0
$LN4@Local:
	mov	al, BYTE PTR tv67[ebp]
; Line 517
	mov	esp, ebp
	pop	ebp
	ret	0
?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ
_TEXT	SEGMENT
tv77 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ PROC ; std::_Func_class<void,IPropertyBag2 *>::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 447
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@Tidy
; Line 449
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Local@?$_Func_class@XPAUIPropertyBag2@@@std@@ABE_NXZ ; std::_Func_class<void,IPropertyBag2 *>::_Local
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Tidy
	mov	BYTE PTR tv77[ebp], 1
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	BYTE PTR tv77[ebp], 0
$LN5@Tidy:
	mov	esi, esp
	movzx	edx, BYTE PTR tv77[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN2@Tidy:
; Line 452
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ PROC	; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 324
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 325
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Func_class@XPAUIPropertyBag2@@@std@@IAEXXZ ; std::_Func_class<void,IPropertyBag2 *>::_Tidy
; Line 326
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_class@XPAUIPropertyBag2@@@std@@QAE@XZ ENDP	; std::_Func_class<void,IPropertyBag2 *>::~_Func_class<void,IPropertyBag2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ PROC ; std::_Func_class<void,IPropertyBag2 *>::_Empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 320
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@Empty
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Empty
$LN3@Empty:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Empty:
	mov	al, BYTE PTR tv66[ebp]
; Line 321
	mov	esp, ebp
	pop	ebp
	ret	0
?_Empty@?$_Func_class@XPAUIPropertyBag2@@@std@@QBE_NXZ ENDP ; std::_Func_class<void,IPropertyBag2 *>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z PROC ; std::_Func_class<void,IPropertyBag2 *>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional
; Line 312
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@operator
; Line 314
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_function_call@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 315
	lea	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAUIPropertyBag2@@@std@@YA$$QAPAUIPropertyBag2@@AAPAU1@@Z ; std::forward<IPropertyBag2 *>
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@operator:
; Line 316
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$_Func_class@XPAUIPropertyBag2@@@std@@QBEXPAUIPropertyBag2@@@Z ENDP ; std::_Func_class<void,IPropertyBag2 *>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv144 = -416						; size = 4
$T2 = -412						; size = 4
$T3 = -408						; size = 4
$T4 = -404						; size = 4
$T5 = -400						; size = 4
$T6 = -396						; size = 4
$T7 = -392						; size = 4
$T8 = -388						; size = 4
$T9 = -384						; size = 4
$T10 = -380						; size = 4
$T11 = -376						; size = 4
$T12 = -372						; size = 4
$T13 = -368						; size = 4
_bytesWritten$ = -360					; size = 4
_h$14 = -352						; size = 4
_msize$ = -348						; size = 4
_dptr$ = -344						; size = 4
_sptr$ = -340						; size = 4
_mapped$ = -332						; size = 12
_pixels$ = -312						; size = 4
_rowCount$ = -300					; size = 4
_slicePitch$ = -288					; size = 4
_rowPitch$ = -276					; size = 4
_extHeader$ = -268					; size = 4
_headerSize$ = -264					; size = 4
_header$ = -260						; size = 4
_fileHeader$ = -252					; size = 148
_MAX_HEADER_SIZE$ = -100				; size = 4
_hFile$ = -92						; size = 4
_hr$ = -84						; size = 4
_pStaging$ = -76					; size = 4
_desc$ = -64						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pContext$ = 8						; size = 4
_pSource$ = 12						; size = 4
_fileName$ = 16						; size = 4
?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z PROC ; DirectX::SaveDDSTextureToFile
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\screengrab.cpp
; Line 732
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 404				; 00000194H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 101				; 00000065H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 733
	cmp	DWORD PTR _fileName$[ebp], 0
	jne	SHORT $LN48@SaveDDSTex
; Line 734
	mov	eax, -2147024809			; 80070057H
	jmp	$LN49@SaveDDSTex
$LN48@SaveDDSTex:
; Line 736
	mov	DWORD PTR _desc$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _desc$[ebp+4], eax
	mov	DWORD PTR _desc$[ebp+8], eax
	mov	DWORD PTR _desc$[ebp+12], eax
	mov	DWORD PTR _desc$[ebp+16], eax
	mov	DWORD PTR _desc$[ebp+20], eax
	mov	DWORD PTR _desc$[ebp+24], eax
	mov	DWORD PTR _desc$[ebp+28], eax
	mov	DWORD PTR _desc$[ebp+32], eax
	mov	DWORD PTR _desc$[ebp+36], eax
	mov	DWORD PTR _desc$[ebp+40], eax
; Line 737
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 738
	lea	ecx, DWORD PTR _pStaging$[ebp]
	push	ecx
	lea	edx, DWORD PTR _desc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	?CaptureTexture@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@AAUD3D11_TEXTURE2D_DESC@@AAV?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Z ; CaptureTexture
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hr$[ebp], eax
; Line 739
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN47@SaveDDSTex
; Line 740
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T13[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T13[ebp]
	jmp	$LN49@SaveDDSTex
$LN47@SaveDDSTex:
; Line 746
	mov	esi, esp
	push	0
	push	0
	push	2
	push	0
	push	0
	push	1073741824				; 40000000H
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateFileW@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?safe_handle@@YAPAXPAX@Z		; safe_handle
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??0?$unique_ptr@XUhandle_closer@@@std@@QAE@PAX@Z ; std::unique_ptr<void,handle_closer>::unique_ptr<void,handle_closer>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 748
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??B?$unique_ptr@XUhandle_closer@@@std@@QBE_NXZ ; std::unique_ptr<void,handle_closer>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN46@SaveDDSTex
; Line 749
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T12[ebp]
	jmp	$LN49@SaveDDSTex
$LN46@SaveDDSTex:
; Line 752
	mov	DWORD PTR _MAX_HEADER_SIZE$[ebp], 148	; 00000094H
; Line 755
	mov	edx, 1
	imul	eax, edx, 0
	mov	DWORD PTR _fileHeader$[ebp+eax], 542327876 ; 20534444H
; Line 757
	mov	ecx, 1
	imul	edx, ecx, 0
	lea	eax, DWORD PTR _fileHeader$[ebp+edx+4]
	mov	DWORD PTR _header$[ebp], eax
; Line 758
	mov	DWORD PTR _headerSize$[ebp], 128	; 00000080H
; Line 759
	push	124					; 0000007cH
	push	0
	mov	ecx, DWORD PTR _header$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 760
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx], 124			; 0000007cH
; Line 761
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+4], 135175		; 00021007H
; Line 762
	mov	ecx, DWORD PTR _header$[ebp]
	mov	edx, DWORD PTR _desc$[ebp+4]
	mov	DWORD PTR [ecx+8], edx
; Line 763
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR _desc$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 764
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+24], 1
; Line 765
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+104], 4096		; 00001000H
; Line 768
	mov	DWORD PTR _extHeader$[ebp], 0
; Line 769
	mov	ecx, DWORD PTR _desc$[ebp+16]
	mov	DWORD PTR tv144[ebp], ecx
	mov	edx, DWORD PTR tv144[ebp]
	sub	edx, 2
	mov	DWORD PTR tv144[ebp], edx
	cmp	DWORD PTR tv144[ebp], 113		; 00000071H
	ja	$LN13@SaveDDSTex
	mov	eax, DWORD PTR tv144[ebp]
	movzx	ecx, BYTE PTR $LN54@SaveDDSTex[eax]
	jmp	DWORD PTR $LN68@SaveDDSTex[ecx*4]
$LN43@SaveDDSTex:
; Line 771
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_A8B8G8R8
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN42@SaveDDSTex:
; Line 772
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_G16R16
	push	32					; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN41@SaveDDSTex:
; Line 773
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_A8L8
	push	32					; 00000020H
	mov	ecx, DWORD PTR _header$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN40@SaveDDSTex:
; Line 774
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_L16
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN39@SaveDDSTex:
; Line 775
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_L8
	push	32					; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN38@SaveDDSTex:
; Line 776
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_A8
	push	32					; 00000020H
	mov	ecx, DWORD PTR _header$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN37@SaveDDSTex:
; Line 777
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_R8G8_B8G8
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN36@SaveDDSTex:
; Line 778
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_G8R8_G8B8
	push	32					; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN35@SaveDDSTex:
; Line 779
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_DXT1
	push	32					; 00000020H
	mov	ecx, DWORD PTR _header$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN34@SaveDDSTex:
; Line 780
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_DXT3
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN33@SaveDDSTex:
; Line 781
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_DXT5
	push	32					; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN32@SaveDDSTex:
; Line 782
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_BC4_UNORM
	push	32					; 00000020H
	mov	ecx, DWORD PTR _header$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN31@SaveDDSTex:
; Line 783
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_BC4_SNORM
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN30@SaveDDSTex:
; Line 784
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_BC5_UNORM
	push	32					; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN29@SaveDDSTex:
; Line 785
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_BC5_SNORM
	push	32					; 00000020H
	mov	ecx, DWORD PTR _header$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN28@SaveDDSTex:
; Line 786
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_R5G6B5
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN27@SaveDDSTex:
; Line 787
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_A1R5G5B5
	push	32					; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN26@SaveDDSTex:
; Line 788
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_A8R8G8B8
	push	32					; 00000020H
	mov	ecx, DWORD PTR _header$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN25@SaveDDSTex:
; Line 789
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_X8R8G8B8
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN24@SaveDDSTex:
; Line 790
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_YUY2
	push	32					; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN23@SaveDDSTex:
; Line 791
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_A4R4G4B4
	push	32					; 00000020H
	mov	ecx, DWORD PTR _header$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN44@SaveDDSTex
$LN22@SaveDDSTex:
; Line 794
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 116			; 00000074H
	jmp	$LN44@SaveDDSTex
$LN21@SaveDDSTex:
; Line 795
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 113			; 00000071H
	jmp	$LN44@SaveDDSTex
$LN20@SaveDDSTex:
; Line 796
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 36			; 00000024H
	jmp	$LN44@SaveDDSTex
$LN19@SaveDDSTex:
; Line 797
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 110			; 0000006eH
	jmp	$LN44@SaveDDSTex
$LN18@SaveDDSTex:
; Line 798
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 115			; 00000073H
	jmp	$LN44@SaveDDSTex
$LN17@SaveDDSTex:
; Line 799
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 112			; 00000070H
	jmp	$LN44@SaveDDSTex
$LN16@SaveDDSTex:
; Line 800
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 114			; 00000072H
	jmp	$LN44@SaveDDSTex
$LN15@SaveDDSTex:
; Line 801
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+72], 32			; 00000020H
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR [eax+76], 4
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+80], 111			; 0000006fH
	jmp	$LN44@SaveDDSTex
$LN14@SaveDDSTex:
; Line 807
	push	50					; 00000032H
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T11[ebp]
	jmp	$LN49@SaveDDSTex
$LN13@SaveDDSTex:
; Line 810
	mov	esi, esp
	push	32					; 00000020H
	push	OFFSET _DDSPF_DX10
	push	32					; 00000020H
	mov	edx, DWORD PTR _header$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 812
	mov	eax, DWORD PTR _headerSize$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _headerSize$[ebp], eax
; Line 813
	mov	ecx, 1
	imul	edx, ecx, 0
	lea	eax, DWORD PTR _fileHeader$[ebp+edx+128]
	mov	DWORD PTR _extHeader$[ebp], eax
; Line 814
	xor	ecx, ecx
	mov	edx, DWORD PTR _extHeader$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx
	mov	DWORD PTR [edx+8], ecx
	mov	DWORD PTR [edx+12], ecx
	mov	DWORD PTR [edx+16], ecx
; Line 815
	mov	eax, DWORD PTR _extHeader$[ebp]
	mov	ecx, DWORD PTR _desc$[ebp+16]
	mov	DWORD PTR [eax], ecx
; Line 816
	mov	edx, DWORD PTR _extHeader$[ebp]
	mov	DWORD PTR [edx+4], 3
; Line 817
	mov	eax, DWORD PTR _extHeader$[ebp]
	mov	DWORD PTR [eax+12], 1
$LN44@SaveDDSTex:
; Line 822
	lea	ecx, DWORD PTR _rowCount$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rowPitch$[ebp]
	push	edx
	lea	eax, DWORD PTR _slicePitch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desc$[ebp+16]
	push	ecx
	mov	edx, DWORD PTR _desc$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _desc$[ebp]
	push	eax
	call	?GetSurfaceInfo@@YAXIIW4DXGI_FORMAT@@PAI11@Z ; GetSurfaceInfo
	add	esp, 24					; 00000018H
; Line 824
	mov	ecx, DWORD PTR _desc$[ebp+16]
	push	ecx
	call	?IsCompressed@@YA_NW4DXGI_FORMAT@@@Z	; IsCompressed
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@SaveDDSTex
; Line 826
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	or	ecx, 524288				; 00080000H
	mov	edx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 827
	mov	eax, DWORD PTR _header$[ebp]
	mov	ecx, DWORD PTR _slicePitch$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 829
	jmp	SHORT $LN11@SaveDDSTex
$LN12@SaveDDSTex:
; Line 831
	mov	edx, DWORD PTR _header$[ebp]
	mov	eax, DWORD PTR [edx+4]
	or	eax, 8
	mov	ecx, DWORD PTR _header$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 832
	mov	edx, DWORD PTR _header$[ebp]
	mov	eax, DWORD PTR _rowPitch$[ebp]
	mov	DWORD PTR [edx+16], eax
$LN11@SaveDDSTex:
; Line 836
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	mov	ecx, DWORD PTR _slicePitch$[ebp]
	push	ecx
	call	??_U@YAPAXIABUnothrow_t@std@@@Z		; operator new[]
	add	esp, 8
	mov	DWORD PTR $T10[ebp], eax
	mov	edx, DWORD PTR $T10[ebp]
	push	edx
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 837
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN10@SaveDDSTex
; Line 838
	mov	DWORD PTR $T9[ebp], -2147024882		; 8007000eH
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T9[ebp]
	jmp	$LN49@SaveDDSTex
$LN10@SaveDDSTex:
; Line 841
	mov	esi, esp
	lea	ecx, DWORD PTR _mapped$[ebp]
	push	ecx
	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 842
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN9@SaveDDSTex
; Line 843
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN49@SaveDDSTex
$LN9@SaveDDSTex:
; Line 845
	mov	ecx, DWORD PTR _mapped$[ebp]
	mov	DWORD PTR _sptr$[ebp], ecx
; Line 846
	cmp	DWORD PTR _sptr$[ebp], 0
	jne	SHORT $LN8@SaveDDSTex
; Line 848
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 849
	mov	DWORD PTR $T7[ebp], -2147467261		; 80004003H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN49@SaveDDSTex
$LN8@SaveDDSTex:
; Line 852
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	mov	DWORD PTR _dptr$[ebp], eax
; Line 854
	lea	eax, DWORD PTR _mapped$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _rowPitch$[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _msize$[ebp], edx
; Line 855
	mov	DWORD PTR _h$14[ebp], 0
	jmp	SHORT $LN7@SaveDDSTex
$LN6@SaveDDSTex:
	mov	eax, DWORD PTR _h$14[ebp]
	add	eax, 1
	mov	DWORD PTR _h$14[ebp], eax
$LN7@SaveDDSTex:
	mov	ecx, DWORD PTR _h$14[ebp]
	cmp	ecx, DWORD PTR _rowCount$[ebp]
	jae	SHORT $LN5@SaveDDSTex
; Line 857
	mov	esi, esp
	mov	edx, DWORD PTR _msize$[ebp]
	push	edx
	mov	eax, DWORD PTR _sptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rowPitch$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dptr$[ebp]
	push	edx
	call	DWORD PTR __imp__memcpy_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 858
	mov	eax, DWORD PTR _sptr$[ebp]
	add	eax, DWORD PTR _mapped$[ebp+4]
	mov	DWORD PTR _sptr$[ebp], eax
; Line 859
	mov	ecx, DWORD PTR _dptr$[ebp]
	add	ecx, DWORD PTR _rowPitch$[ebp]
	mov	DWORD PTR _dptr$[ebp], ecx
; Line 860
	jmp	SHORT $LN6@SaveDDSTex
$LN5@SaveDDSTex:
; Line 862
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	push	eax
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 866
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _bytesWritten$[ebp]
	push	eax
	mov	ecx, DWORD PTR _headerSize$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fileHeader$[ebp]
	push	edx
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ; std::unique_ptr<void,handle_closer>::get
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@SaveDDSTex
; Line 867
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN49@SaveDDSTex
$LN4@SaveDDSTex:
; Line 869
	mov	eax, DWORD PTR _bytesWritten$[ebp]
	cmp	eax, DWORD PTR _headerSize$[ebp]
	je	SHORT $LN3@SaveDDSTex
; Line 870
	mov	DWORD PTR $T5[ebp], -2147467259		; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN49@SaveDDSTex
$LN3@SaveDDSTex:
; Line 872
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _bytesWritten$[ebp]
	push	ecx
	mov	edx, DWORD PTR _slicePitch$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	push	eax
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	?get@?$unique_ptr@XUhandle_closer@@@std@@QBEPAXXZ ; std::unique_ptr<void,handle_closer>::get
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@SaveDDSTex
; Line 873
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN49@SaveDDSTex
$LN2@SaveDDSTex:
; Line 875
	mov	eax, DWORD PTR _bytesWritten$[ebp]
	cmp	eax, DWORD PTR _slicePitch$[ebp]
	je	SHORT $LN1@SaveDDSTex
; Line 876
	mov	DWORD PTR $T3[ebp], -2147467259		; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN49@SaveDDSTex
$LN1@SaveDDSTex:
; Line 878
	mov	DWORD PTR $T2[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pixels$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _hFile$[ebp]
	call	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pStaging$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	eax, DWORD PTR $T2[ebp]
$LN49@SaveDDSTex:
; Line 879
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN67@SaveDDSTex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN67@SaveDDSTex:
	DD	10					; 0000000aH
	DD	$LN66@SaveDDSTex
$LN66@SaveDDSTex:
	DD	-64					; ffffffc0H
	DD	44					; 0000002cH
	DD	$LN55@SaveDDSTex
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN56@SaveDDSTex
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN57@SaveDDSTex
	DD	-252					; ffffff04H
	DD	148					; 00000094H
	DD	$LN58@SaveDDSTex
	DD	-276					; fffffeecH
	DD	4
	DD	$LN59@SaveDDSTex
	DD	-288					; fffffee0H
	DD	4
	DD	$LN60@SaveDDSTex
	DD	-300					; fffffed4H
	DD	4
	DD	$LN61@SaveDDSTex
	DD	-312					; fffffec8H
	DD	4
	DD	$LN62@SaveDDSTex
	DD	-332					; fffffeb4H
	DD	12					; 0000000cH
	DD	$LN63@SaveDDSTex
	DD	-360					; fffffe98H
	DD	4
	DD	$LN64@SaveDDSTex
$LN64@SaveDDSTex:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	87					; 00000057H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN63@SaveDDSTex:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN62@SaveDDSTex:
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
$LN61@SaveDDSTex:
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN60@SaveDDSTex:
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
$LN59@SaveDDSTex:
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
$LN58@SaveDDSTex:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN57@SaveDDSTex:
	DB	104					; 00000068H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN56@SaveDDSTex:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN55@SaveDDSTex:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
	npad	1
$LN68@SaveDDSTex:
	DD	$LN22@SaveDDSTex
	DD	$LN21@SaveDDSTex
	DD	$LN20@SaveDDSTex
	DD	$LN19@SaveDDSTex
	DD	$LN18@SaveDDSTex
	DD	$LN43@SaveDDSTex
	DD	$LN17@SaveDDSTex
	DD	$LN42@SaveDDSTex
	DD	$LN16@SaveDDSTex
	DD	$LN41@SaveDDSTex
	DD	$LN15@SaveDDSTex
	DD	$LN40@SaveDDSTex
	DD	$LN39@SaveDDSTex
	DD	$LN38@SaveDDSTex
	DD	$LN37@SaveDDSTex
	DD	$LN36@SaveDDSTex
	DD	$LN35@SaveDDSTex
	DD	$LN34@SaveDDSTex
	DD	$LN33@SaveDDSTex
	DD	$LN32@SaveDDSTex
	DD	$LN31@SaveDDSTex
	DD	$LN30@SaveDDSTex
	DD	$LN29@SaveDDSTex
	DD	$LN28@SaveDDSTex
	DD	$LN27@SaveDDSTex
	DD	$LN26@SaveDDSTex
	DD	$LN25@SaveDDSTex
	DD	$LN24@SaveDDSTex
	DD	$LN14@SaveDDSTex
	DD	$LN23@SaveDDSTex
	DD	$LN13@SaveDDSTex
$LN54@SaveDDSTex:
	DB	0
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	1
	DB	2
	DB	30					; 0000001eH
	DB	3
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	4
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	5
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	6
	DB	7
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	8
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	9
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	10					; 0000000aH
	DB	30					; 0000001eH
	DB	11					; 0000000bH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	12					; 0000000cH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	13					; 0000000dH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	30					; 0000001eH
	DB	16					; 00000010H
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	17					; 00000011H
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	18					; 00000012H
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	30					; 0000001eH
	DB	21					; 00000015H
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	24					; 00000018H
	DB	25					; 00000019H
	DB	26					; 0000001aH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	27					; 0000001bH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	30					; 0000001eH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	28					; 0000001cH
	DB	29					; 0000001dH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$0:
	lea	ecx, DWORD PTR _pStaging$[ebp]
	jmp	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$1:
	lea	ecx, DWORD PTR _hFile$[ebp]
	jmp	??1?$unique_ptr@XUhandle_closer@@@std@@QAE@XZ ; std::unique_ptr<void,handle_closer>::~unique_ptr<void,handle_closer>
__unwindfunclet$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z$2:
	lea	ecx, DWORD PTR _pixels$[ebp]
	jmp	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
__ehhandler$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-416]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveDDSTextureToFile@DirectX@@YAJPAUID3D11DeviceContext@@PAUID3D11Resource@@PB_W@Z ENDP ; DirectX::SaveDDSTextureToFile
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z PROC	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ENDP	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?D3D11CalcSubresource@@YAIIII@Z
_TEXT	SEGMENT
_MipSlice$ = 8						; size = 4
_ArraySlice$ = 12					; size = 4
_MipLevels$ = 16					; size = 4
?D3D11CalcSubresource@@YAIIII@Z PROC			; D3D11CalcSubresource, COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\d3d11.h
; Line 2165
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _ArraySlice$[ebp]
	imul	eax, DWORD PTR _MipLevels$[ebp]
	add	eax, DWORD PTR _MipSlice$[ebp]
	pop	ebp
	ret	0
?D3D11CalcSubresource@@YAIIII@Z ENDP			; D3D11CalcSubresource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _PropVariantInit
_TEXT	SEGMENT
_pvar$ = 8						; size = 4
_PropVariantInit PROC					; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\propidl.h
; Line 1184
	push	ebp
	mov	ebp, esp
; Line 1185
	xor	eax, eax
	mov	ecx, DWORD PTR _pvar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
; Line 1186
	pop	ebp
	ret	0
_PropVariantInit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; Line 26297
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
END
