; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\Scratch\DXSSE\DXUT\Core\WICTextureLoader.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_WICPixelFormat1bppIndexed
PUBLIC	_GUID_WICPixelFormat2bppIndexed
PUBLIC	_GUID_WICPixelFormat4bppIndexed
PUBLIC	_GUID_WICPixelFormat8bppIndexed
PUBLIC	_GUID_WICPixelFormatBlackWhite
PUBLIC	_GUID_WICPixelFormat2bppGray
PUBLIC	_GUID_WICPixelFormat4bppGray
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat24bppRGB
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppPBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	_GUID_WICPixelFormat32bppPRGBA
PUBLIC	_GUID_WICPixelFormat48bppRGB
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat64bppBGRA
PUBLIC	_GUID_WICPixelFormat64bppPRGBA
PUBLIC	_GUID_WICPixelFormat64bppPBGRA
PUBLIC	_GUID_WICPixelFormat16bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppBGR101010
PUBLIC	_GUID_WICPixelFormat48bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat48bppBGRFixedPoint
PUBLIC	_GUID_WICPixelFormat96bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppPRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppRGBFloat
PUBLIC	_GUID_WICPixelFormat32bppCMYK
PUBLIC	_GUID_WICPixelFormat64bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppBGRAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	_GUID_WICPixelFormat64bppRGBHalf
PUBLIC	_GUID_WICPixelFormat48bppRGBHalf
PUBLIC	_GUID_WICPixelFormat32bppRGBE
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	_GUID_WICPixelFormat32bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	_GUID_WICPixelFormat64bppCMYK
PUBLIC	_GUID_WICPixelFormat40bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat80bppCMYKAlpha
PUBLIC	___pobjectentryfirst
PUBLIC	___pobjectentrymid
PUBLIC	___pobjectentrylast
PUBLIC	__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
PUBLIC	?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA ; Microsoft::WRL::Details::ModuleBase::moduleLock_
PUBLIC	?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC ; Microsoft::WRL::Details::ModuleBase::objectCount_
PUBLIC	?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A ; Microsoft::WRL::Details::ModuleBase::module_
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
PUBLIC	?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<3>::value
PUBLIC	?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<4>::value
PUBLIC	__GUID_00000003_0000_0000_c000_000000000046
PUBLIC	__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
PUBLIC	?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<6>::value
PUBLIC	?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<13>::value
PUBLIC	?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<1>::value
PUBLIC	__GUID_e8eda601_3d48_431a_ab44_69059be88bbe
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
PUBLIC	?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB ; Microsoft::WRL::RuntimeClassFlags<2>::value
PUBLIC	_WKPDID_D3DDebugObjectName
PUBLIC	__GUID_00000037_0000_0000_c000_000000000046
PUBLIC	_CLSID_WICImagingFactory
;	COMDAT ?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA
_BSS	SEGMENT
?moduleLock_@ModuleBase@Details@WRL@Microsoft@@0PAXA DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::moduleLock_
_BSS	ENDS
;	COMDAT ?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC
_BSS	SEGMENT
?objectCount_@ModuleBase@Details@WRL@Microsoft@@1KC DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::objectCount_
_BSS	ENDS
;	COMDAT ?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A
_BSS	SEGMENT
?module_@ModuleBase@Details@WRL@Microsoft@@2PAV1234@A DD 01H DUP (?) ; Microsoft::WRL::Details::ModuleBase::module_
_BSS	ENDS
_BSS	SEGMENT
_g_WIC2	DB	01H DUP (?)
_BSS	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT __GUID_00000037_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000037_0000_0000_c000_000000000046 DD 037H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT _WKPDID_D3DDebugObjectName
CONST	SEGMENT
_WKPDID_D3DDebugObjectName DD 0429b8c22H
	DW	09188H
	DW	04b0cH
	DB	087H
	DB	042H
	DB	0acH
	DB	0b0H
	DB	0bfH
	DB	085H
	DB	0c2H
	DB	00H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$01@WRL@Microsoft@@2IB DD 02H ; Microsoft::WRL::RuntimeClassFlags<2>::value
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_e8eda601_3d48_431a_ab44_69059be88bbe
CONST	SEGMENT
__GUID_e8eda601_3d48_431a_ab44_69059be88bbe DD 0e8eda601H
	DW	03d48H
	DW	0431aH
	DB	0abH
	DB	044H
	DB	069H
	DB	05H
	DB	09bH
	DB	0e8H
	DB	08bH
	DB	0beH
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$00@WRL@Microsoft@@2IB DD 01H ; Microsoft::WRL::RuntimeClassFlags<1>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$0N@@WRL@Microsoft@@2IB DD 0dH ; Microsoft::WRL::RuntimeClassFlags<13>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$05@WRL@Microsoft@@2IB DD 06H ; Microsoft::WRL::RuntimeClassFlags<6>::value
CONST	ENDS
;	COMDAT __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
CONST	SEGMENT
__GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70 DD 0ec5ec8a9H
	DW	0c395H
	DW	04314H
	DB	09cH
	DB	077H
	DB	054H
	DB	0d7H
	DB	0a9H
	DB	035H
	DB	0ffH
	DB	070H
CONST	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000003_0000_0000_c000_000000000046 DD 03H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$03@WRL@Microsoft@@2IB DD 04H ; Microsoft::WRL::RuntimeClassFlags<4>::value
CONST	ENDS
;	COMDAT ?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB
CONST	SEGMENT
?value@?$RuntimeClassFlags@$02@WRL@Microsoft@@2IB DD 03H ; Microsoft::WRL::RuntimeClassFlags<3>::value
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB
CONST	SEGMENT
?IidCount@?$InterfaceTraits@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@2KB DD 00H ; Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>::IidCount
CONST	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT __GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90
CONST	SEGMENT
__GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90 DD 094ea2b94H
	DW	0e9ccH
	DW	049e0H
	DB	0c0H
	DB	0ffH
	DB	0eeH
	DB	064H
	DB	0caH
	DB	08fH
	DB	05bH
	DB	090H
CONST	ENDS
;	COMDAT ___pobjectentrylast
minATL$__z	SEGMENT
___pobjectentrylast DD 00H
minATL$__z	ENDS
;	COMDAT ___pobjectentrymid
minATL$__m	SEGMENT
___pobjectentrymid DD 00H
minATL$__m	ENDS
;	COMDAT ___pobjectentryfirst
minATL$__a	SEGMENT
___pobjectentryfirst DD 00H
minATL$__a	ENDS
;	COMDAT _GUID_WICPixelFormat80bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat64bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBE
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBE DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	042H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	041H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	040H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRAFixedPoint DD 0356de33cH
	DW	054d2H
	DW	04a23H
	DB	0bbH
	DB	04H
	DB	09bH
	DB	07bH
	DB	0f9H
	DB	0b1H
	DB	0d4H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat32bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppPRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppPRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat96bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	018H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGRFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGRFixedPoint DD 049ca140eH
	DW	0cab6H
	DW	0493bH
	DB	09dH
	DB	0dfH
	DB	060H
	DB	018H
	DB	07cH
	DB	037H
	DB	053H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	012H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR101010
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR101010 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	014H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPBGRA DD 08c518e8eH
	DW	0a4ecH
	DW	0468bH
	DB	0aeH
	DB	070H
	DB	0c9H
	DB	0a3H
	DB	05aH
	DB	09cH
	DB	055H
	DB	030H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRA DD 01562ff7cH
	DW	0d352H
	DW	046f9H
	DB	097H
	DB	09eH
	DB	042H
	DB	097H
	DB	06bH
	DB	079H
	DB	022H
	DB	046H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	015H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPRGBA DD 03cc4a650H
	DW	0a527H
	DW	04d37H
	DB	0a9H
	DB	016H
	DB	031H
	DB	042H
	DB	0c7H
	DB	0ebH
	DB	0edH
	DB	0baH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	010H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat24bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppGray
CONST	SEGMENT
_GUID_WICPixelFormat4bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	07H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppGray
CONST	SEGMENT
_GUID_WICPixelFormat2bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	06H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatBlackWhite
CONST	SEGMENT
_GUID_WICPixelFormatBlackWhite DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	05H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat8bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	04H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat4bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat2bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat1bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat1bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
CONST	SEGMENT
$SG155650 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+6
$SG155651 DB	't', 00H, 'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'm', 00H, 'a', 00H, 'x', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 00H, 00H
$SG155678 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG155679 DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'D', 00H, 'X', 00H, 'G'
	DB	00H, 'I', 00H, '_', 00H, 'F', 00H, 'O', 00H, 'R', 00H, 'M', 00H
	DB	'A', 00H, 'T', 00H, '_', 00H, 'U', 00H, 'N', 00H, 'K', 00H, 'N'
	DB	00H, 'O', 00H, 'W', 00H, 'N', 00H, 00H, 00H
$SG156819 DB	'WICTextureLoader', 00H
	ORG $+3
$SG156821 DB	'WICTextureLoader', 00H
	ORG $+3
$SG155817 DB	'/', 00H, 's', 00H, 'R', 00H, 'G', 00H, 'B', 00H, '/', 00H
	DB	'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H
$SG155821 DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'.', 00H, 'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '.'
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 'S', 00H
	DB	'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG156387 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG156388 DB	'd', 00H, '3', 00H, 'd', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG156398 DB	'WICTextureLoader', 00H
	ORG $+3
$SG155620 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG155621 DB	'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG155632 DB	'W', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H
	ORG $+2
$SG155633 DB	'm', 00H, 'a', 00H, 'x', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	_PropVariantInit
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromMemory
PUBLIC	?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromFile
PUBLIC	?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromMemory
PUBLIC	?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromFile
PUBLIC	?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
PUBLIC	?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
PUBLIC	?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
PUBLIC	?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
PUBLIC	?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>
PUBLIC	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
PUBLIC	??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>
PUBLIC	??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
PUBLIC	??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->
PUBLIC	??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *
PUBLIC	??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>
PUBLIC	?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>
PUBLIC	??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
PUBLIC	??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf
PUBLIC	??0?$default_delete@$$BY0A@E@std@@QAE@XZ	; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
PUBLIC	??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z	; std::default_delete<unsigned char [0]>::operator()
PUBLIC	??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
PUBLIC	??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
PUBLIC	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
PUBLIC	??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
PUBLIC	?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>
PUBLIC	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
PUBLIC	?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get
PUBLIC	??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
PUBLIC	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
PUBLIC	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
PUBLIC	??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
PUBLIC	?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
PUBLIC	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
PUBLIC	?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
PUBLIC	??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
PUBLIC	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
PUBLIC	??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease
PUBLIC	??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
PUBLIC	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
PUBLIC	?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
PUBLIC	?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
PUBLIC	__real@0000000000000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__strnlen:PROC
EXTRN	__imp__strrchr:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	__imp__PropVariantClear@4:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcmp:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
	ALIGN	4

_g_WICFormats DB 012cH DUP (?)
_g_WICConvert DB 0480H DUP (?)
_BSS	ENDS
;	COMDAT ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
_BSS	SEGMENT
?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A DD 01H DUP (?) ; `_GetWIC'::`2'::s_Factory
_BSS	ENDS
CRT$XCU	SEGMENT
_g_WICFormats$initializer$ DD FLAT:??__Eg_WICFormats@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
xdata$x	SEGMENT
__unwindtable$?_WICBitsPerPixel@@YAIABU_GUID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$1
__unwindtable$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1
__unwindtable$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2
__ehfuncinfo$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?_WICBitsPerPixel@@YAIABU_GUID@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_WICBitsPerPixel@@YAIABU_GUID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$4
xdata$x	ENDS
CRT$XCU	SEGMENT
_g_WICConvert$initializer$ DD FLAT:??__Eg_WICConvert@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICStream@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICStream>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z
_TEXT	SEGMENT
_resource$ = 8						; size = 4
_name$ = 12						; size = 4
??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z PROC ; SetDebugObjectName<17>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 56
	push	ebp
	mov	ebp, esp
	push	esi
; Line 58
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	push	16					; 00000010H
	push	OFFSET _WKPDID_D3DDebugObjectName
	mov	ecx, DWORD PTR _resource$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 63
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ENDP ; SetDebugObjectName<17>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICFormatConverter>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1627
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1628
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Delete
; Line 1629
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ; std::default_delete<unsigned char [0]>::operator()
$LN2@Delete:
; Line 1630
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1594
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1595
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]
; Line 1596
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1589
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1590
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1591
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1580
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Delete@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@AAEXXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::_Delete
; Line 1581
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z PROC ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1518
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
; Line 1521
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ENDP ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1312
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1313
	mov	eax, DWORD PTR _this$[ebp]
; Line 1314
	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAEAAU?$default_delete@$$BY0A@E@2@XZ ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z PROC ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1295
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$default_delete@$$BY0A@E@std@@QAE@XZ ; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1296
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@EU?$default_delete@$$BY0A@E@std@@$00@std@@QAE@PAE@Z ENDP ; std::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>::_Unique_ptr_base<unsigned char,std::default_delete<unsigned char [0]>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z PROC	; std::default_delete<unsigned char [0]>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1220
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 1221
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@$$BY0A@E@std@@QBEXPAE@Z ENDP	; std::default_delete<unsigned char [0]>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$default_delete@$$BY0A@E@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@$$BY0A@E@std@@QAE@XZ PROC		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\memory
; Line 1209
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1211
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$default_delete@$$BY0A@E@std@@QAE@XZ ENDP		; std::default_delete<unsigned char [0]>::default_delete<unsigned char [0]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv620 = -604						; size = 4
tv609 = -600						; size = 4
tv563 = -596						; size = 4
tv539 = -592						; size = 4
tv517 = -588						; size = 4
tv486 = -584						; size = 4
tv462 = -580						; size = 4
tv433 = -576						; size = 4
tv424 = -572						; size = 4
tv414 = -568						; size = 4
tv394 = -564						; size = 4
tv353 = -560						; size = 4
tv272 = -556						; size = 4
tv256 = -552						; size = 4
tv247 = -548						; size = 4
tv236 = -544						; size = 4
tv186 = -540						; size = 4
tv170 = -536						; size = 4
tv831 = -532						; size = 8
tv827 = -524						; size = 4
tv818 = -520						; size = 8
tv814 = -512						; size = 4
tv807 = -508						; size = 8
tv803 = -500						; size = 4
tv798 = -496						; size = 8
tv794 = -488						; size = 4
tv86 = -484						; size = 4
$T2 = -480						; size = 4
$T3 = -476						; size = 4
$T4 = -472						; size = 4
$T5 = -468						; size = 4
$T6 = -464						; size = 4
$T7 = -460						; size = 4
$T8 = -456						; size = 4
$T9 = -452						; size = 4
$T10 = -448						; size = 4
$T11 = -444						; size = 4
$T12 = -440						; size = 4
$T13 = -436						; size = 4
$T14 = -432						; size = 4
$T15 = -428						; size = 4
$T16 = -424						; size = 4
$T17 = -420						; size = 4
$T18 = -416						; size = 4
_SRVDesc$19 = -408					; size = 24
_tex$ = -376						; size = 4
_initData$ = -364					; size = 12
_desc$ = -344						; size = 44
_fmtSupport$20 = -292					; size = 4
_autogen$ = -281					; size = 1
_FC$21 = -276						; size = 4
_pWIC$22 = -268						; size = 4
_FC$23 = -260						; size = 4
_pfScaler$24 = -248					; size = 16
_scaler$25 = -224					; size = 4
_pWIC$26 = -216						; size = 4
_temp$ = -208						; size = 4
_imageSize$ = -200					; size = 4
_rowPitch$ = -196					; size = 4
_support$ = -188					; size = 4
_value$27 = -176					; size = 16
_sRGB$28 = -153						; size = 1
_containerFormat$29 = -148				; size = 16
_metareader$30 = -124					; size = 4
_i$31 = -116						; size = 4
_format$ = -112						; size = 4
_bpp$ = -108						; size = 4
_convertGUID$ = -100					; size = 16
_pixelFormat$ = -76					; size = 16
_ar$32 = -56						; size = 4
_theight$ = -52						; size = 4
_twidth$ = -48						; size = 4
_hr$ = -44						; size = 4
_height$ = -36						; size = 4
_width$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_frame$ = 16						; size = 4
_maxsize$ = 20						; size = 4
_usage$ = 24						; size = 4
_bindFlags$ = 28					; size = 4
_cpuAccessFlags$ = 32					; size = 4
_miscFlags$ = 36					; size = 4
_forceSRGB$ = 40					; size = 1
_texture$ = 44						; size = 4
_textureView$ = 48					; size = 4
?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; CreateTextureFromWIC
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 322
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 592				; 00000250H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-604]
	mov	ecx, 148				; 00000094H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 324
	mov	esi, esp
	lea	eax, DWORD PTR _height$[ebp]
	push	eax
	lea	ecx, DWORD PTR _width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _frame$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _frame$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 325
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN66@CreateText
; Line 326
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN67@CreateText
$LN66@CreateText:
; Line 328
	cmp	DWORD PTR _width$[ebp], 0
	jbe	SHORT $LN69@CreateText
	cmp	DWORD PTR _height$[ebp], 0
	ja	SHORT $LN70@CreateText
$LN69@CreateText:
	mov	esi, esp
	push	328					; 00000148H
	push	OFFSET $SG155620
	push	OFFSET $SG155621
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN70@CreateText:
; Line 330
	cmp	DWORD PTR _maxsize$[ebp], 0
	jne	$LN63@CreateText
; Line 336
	mov	ecx, DWORD PTR _d3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _d3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+148]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv86[ebp], eax
	cmp	DWORD PTR tv86[ebp], 37632		; 00009300H
	jg	SHORT $LN71@CreateText
	cmp	DWORD PTR tv86[ebp], 37632		; 00009300H
	je	SHORT $LN61@CreateText
	cmp	DWORD PTR tv86[ebp], 37120		; 00009100H
	je	SHORT $LN62@CreateText
	cmp	DWORD PTR tv86[ebp], 37376		; 00009200H
	je	SHORT $LN62@CreateText
	jmp	SHORT $LN59@CreateText
$LN71@CreateText:
	cmp	DWORD PTR tv86[ebp], 40960		; 0000a000H
	je	SHORT $LN60@CreateText
	cmp	DWORD PTR tv86[ebp], 41216		; 0000a100H
	je	SHORT $LN60@CreateText
	jmp	SHORT $LN59@CreateText
$LN62@CreateText:
; Line 340
	mov	DWORD PTR _maxsize$[ebp], 2048		; 00000800H
; Line 341
	jmp	SHORT $LN63@CreateText
$LN61@CreateText:
; Line 344
	mov	DWORD PTR _maxsize$[ebp], 4096		; 00001000H
; Line 345
	jmp	SHORT $LN63@CreateText
$LN60@CreateText:
; Line 349
	mov	DWORD PTR _maxsize$[ebp], 8192		; 00002000H
; Line 350
	jmp	SHORT $LN63@CreateText
$LN59@CreateText:
; Line 353
	mov	DWORD PTR _maxsize$[ebp], 16384		; 00004000H
$LN63@CreateText:
; Line 358
	cmp	DWORD PTR _maxsize$[ebp], 0
	ja	SHORT $LN72@CreateText
	mov	esi, esp
	push	358					; 00000166H
	push	OFFSET $SG155632
	push	OFFSET $SG155633
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN72@CreateText:
; Line 361
	mov	eax, DWORD PTR _width$[ebp]
	cmp	eax, DWORD PTR _maxsize$[ebp]
	ja	SHORT $LN57@CreateText
	mov	ecx, DWORD PTR _height$[ebp]
	cmp	ecx, DWORD PTR _maxsize$[ebp]
	jbe	$LN58@CreateText
$LN57@CreateText:
; Line 363
	mov	edx, DWORD PTR _height$[ebp]
	mov	DWORD PTR tv794[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv794[ebp]
	mov	eax, DWORD PTR tv794[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv798[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv798[ebp]
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR tv803[ebp], ecx
	cvtsi2sd xmm1, DWORD PTR tv803[ebp]
	mov	edx, DWORD PTR tv803[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv807[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv807[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _ar$32[ebp], xmm0
; Line 364
	mov	eax, DWORD PTR _width$[ebp]
	cmp	eax, DWORD PTR _height$[ebp]
	jbe	SHORT $LN56@CreateText
; Line 366
	mov	ecx, DWORD PTR _maxsize$[ebp]
	mov	DWORD PTR _twidth$[ebp], ecx
; Line 367
	mov	edx, DWORD PTR _maxsize$[ebp]
	mov	DWORD PTR tv814[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv814[ebp]
	mov	eax, DWORD PTR tv814[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv818[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv818[ebp]
	mulss	xmm0, DWORD PTR _ar$32[ebp]
	call	__ftoui3
	mov	DWORD PTR _theight$[ebp], eax
; Line 369
	jmp	SHORT $LN55@CreateText
$LN56@CreateText:
; Line 371
	mov	ecx, DWORD PTR _maxsize$[ebp]
	mov	DWORD PTR _theight$[ebp], ecx
; Line 372
	mov	edx, DWORD PTR _maxsize$[ebp]
	mov	DWORD PTR tv827[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv827[ebp]
	mov	eax, DWORD PTR tv827[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv831[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv831[ebp]
	divss	xmm0, DWORD PTR _ar$32[ebp]
	call	__ftoui3
	mov	DWORD PTR _twidth$[ebp], eax
$LN55@CreateText:
; Line 374
	mov	ecx, DWORD PTR _twidth$[ebp]
	cmp	ecx, DWORD PTR _maxsize$[ebp]
	ja	SHORT $LN73@CreateText
	mov	edx, DWORD PTR _theight$[ebp]
	cmp	edx, DWORD PTR _maxsize$[ebp]
	jbe	SHORT $LN74@CreateText
$LN73@CreateText:
	mov	esi, esp
	push	374					; 00000176H
	push	OFFSET $SG155650
	push	OFFSET $SG155651
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN74@CreateText:
; Line 376
	jmp	SHORT $LN54@CreateText
$LN58@CreateText:
; Line 378
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR _twidth$[ebp], ecx
; Line 379
	mov	edx, DWORD PTR _height$[ebp]
	mov	DWORD PTR _theight$[ebp], edx
$LN54@CreateText:
; Line 384
	mov	esi, esp
	lea	eax, DWORD PTR _pixelFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _frame$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _frame$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 385
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN53@CreateText
; Line 386
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN67@CreateText
$LN53@CreateText:
; Line 389
	mov	edx, DWORD PTR _pixelFormat$[ebp]
	mov	DWORD PTR _convertGUID$[ebp], edx
	mov	eax, DWORD PTR _pixelFormat$[ebp+4]
	mov	DWORD PTR _convertGUID$[ebp+4], eax
	mov	ecx, DWORD PTR _pixelFormat$[ebp+8]
	mov	DWORD PTR _convertGUID$[ebp+8], ecx
	mov	edx, DWORD PTR _pixelFormat$[ebp+12]
	mov	DWORD PTR _convertGUID$[ebp+12], edx
; Line 391
	mov	DWORD PTR _bpp$[ebp], 0
; Line 393
	lea	eax, DWORD PTR _pixelFormat$[ebp]
	push	eax
	call	?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z ; _WICToDXGI
	add	esp, 4
	mov	DWORD PTR _format$[ebp], eax
; Line 394
	cmp	DWORD PTR _format$[ebp], 0
	jne	$LN52@CreateText
; Line 396
	push	16					; 00000010H
	lea	ecx, DWORD PTR _pixelFormat$[ebp]
	push	ecx
	push	OFFSET _GUID_WICPixelFormat96bppRGBFixedPoint
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv170[ebp], eax
	cmp	DWORD PTR tv170[ebp], 0
	jne	SHORT $LN51@CreateText
; Line 407
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _convertGUID$[ebp], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _convertGUID$[ebp+4], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _convertGUID$[ebp+8], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _convertGUID$[ebp+12], edx
; Line 408
	mov	DWORD PTR _format$[ebp], 2
; Line 411
	jmp	$LN47@CreateText
$LN51@CreateText:
; Line 413
	mov	DWORD PTR _i$31[ebp], 0
	jmp	SHORT $LN49@CreateText
$LN48@CreateText:
	mov	eax, DWORD PTR _i$31[ebp]
	add	eax, 1
	mov	DWORD PTR _i$31[ebp], eax
$LN49@CreateText:
	cmp	DWORD PTR _i$31[ebp], 36		; 00000024H
	jae	$LN47@CreateText
; Line 415
	push	16					; 00000010H
	lea	ecx, DWORD PTR _pixelFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$31[ebp]
	shl	edx, 5
	add	edx, OFFSET _g_WICConvert
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv186[ebp], eax
	cmp	DWORD PTR tv186[ebp], 0
	jne	SHORT $LN46@CreateText
; Line 417
	mov	eax, DWORD PTR _i$31[ebp]
	shl	eax, 5
	add	eax, OFFSET _g_WICConvert+16
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _convertGUID$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _convertGUID$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _convertGUID$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _convertGUID$[ebp+12], edx
; Line 419
	mov	eax, DWORD PTR _i$31[ebp]
	shl	eax, 5
	add	eax, OFFSET _g_WICConvert+16
	push	eax
	call	?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z ; _WICToDXGI
	add	esp, 4
	mov	DWORD PTR _format$[ebp], eax
; Line 420
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN75@CreateText
	mov	esi, esp
	push	420					; 000001a4H
	push	OFFSET $SG155678
	push	OFFSET $SG155679
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN75@CreateText:
; Line 421
	lea	edx, DWORD PTR _convertGUID$[ebp]
	push	edx
	call	?_WICBitsPerPixel@@YAIABU_GUID@@@Z	; _WICBitsPerPixel
	add	esp, 4
	mov	DWORD PTR _bpp$[ebp], eax
; Line 422
	jmp	SHORT $LN47@CreateText
$LN46@CreateText:
; Line 424
	jmp	$LN48@CreateText
$LN47@CreateText:
; Line 427
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN45@CreateText
; Line 428
	push	50					; 00000032H
	call	_HRESULT_FROM_WIN32
	add	esp, 4
	jmp	$LN67@CreateText
$LN45@CreateText:
; Line 430
	jmp	SHORT $LN44@CreateText
$LN52@CreateText:
; Line 432
	lea	eax, DWORD PTR _pixelFormat$[ebp]
	push	eax
	call	?_WICBitsPerPixel@@YAIABU_GUID@@@Z	; _WICBitsPerPixel
	add	esp, 4
	mov	DWORD PTR _bpp$[ebp], eax
$LN44@CreateText:
; Line 451
	cmp	DWORD PTR _bpp$[ebp], 0
	jne	SHORT $LN43@CreateText
; Line 452
	mov	eax, -2147467259			; 80004005H
	jmp	$LN67@CreateText
$LN43@CreateText:
; Line 455
	movzx	ecx, BYTE PTR _forceSRGB$[ebp]
	test	ecx, ecx
	je	SHORT $LN42@CreateText
; Line 457
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z	; MakeSRGB
	add	esp, 4
	mov	DWORD PTR _format$[ebp], eax
; Line 459
	jmp	$LN41@CreateText
$LN42@CreateText:
; Line 461
	lea	ecx, DWORD PTR _metareader$30[ebp]
	call	??0?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::ComPtr<IWICMetadataQueryReader>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 462
	lea	ecx, DWORD PTR _metareader$30[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAEPAPAUIWICMetadataQueryReader@@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _frame$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _frame$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$LN34@CreateText
; Line 465
	lea	ecx, DWORD PTR _metareader$30[ebp]
	call	??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
	mov	DWORD PTR tv236[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _containerFormat$29[ebp]
	push	ecx
	mov	edx, DWORD PTR tv236[ebp]
	push	edx
	mov	eax, DWORD PTR tv236[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$LN34@CreateText
; Line 468
	mov	BYTE PTR _sRGB$28[ebp], 0
; Line 471
	lea	eax, DWORD PTR _value$27[ebp]
	push	eax
	call	_PropVariantInit
	add	esp, 4
; Line 473
	push	16					; 00000010H
	push	OFFSET _GUID_ContainerFormatPng
	lea	ecx, DWORD PTR _containerFormat$29[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv247[ebp], eax
	cmp	DWORD PTR tv247[ebp], 0
	jne	SHORT $LN38@CreateText
; Line 476
	lea	ecx, DWORD PTR _metareader$30[ebp]
	call	??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
	mov	DWORD PTR tv256[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _value$27[ebp]
	push	edx
	push	OFFSET $SG155817
	mov	eax, DWORD PTR tv256[ebp]
	push	eax
	mov	ecx, DWORD PTR tv256[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN37@CreateText
	movzx	ecx, WORD PTR _value$27[ebp]
	cmp	ecx, 17					; 00000011H
	jne	SHORT $LN37@CreateText
; Line 478
	mov	BYTE PTR _sRGB$28[ebp], 1
$LN37@CreateText:
; Line 480
	jmp	SHORT $LN35@CreateText
$LN38@CreateText:
; Line 481
	lea	ecx, DWORD PTR _metareader$30[ebp]
	call	??C?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICMetadataQueryReader@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::operator->
	mov	DWORD PTR tv272[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _value$27[ebp]
	push	edx
	push	OFFSET $SG155821
	mov	eax, DWORD PTR tv272[ebp]
	push	eax
	mov	ecx, DWORD PTR tv272[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN35@CreateText
	movzx	ecx, WORD PTR _value$27[ebp]
	cmp	ecx, 18					; 00000012H
	jne	SHORT $LN35@CreateText
	movzx	edx, WORD PTR _value$27[ebp+8]
	cmp	edx, 1
	jne	SHORT $LN35@CreateText
; Line 483
	mov	BYTE PTR _sRGB$28[ebp], 1
$LN35@CreateText:
; Line 486
	mov	esi, esp
	lea	eax, DWORD PTR _value$27[ebp]
	push	eax
	call	DWORD PTR __imp__PropVariantClear@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 488
	movzx	ecx, BYTE PTR _sRGB$28[ebp]
	test	ecx, ecx
	je	SHORT $LN34@CreateText
; Line 489
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z	; MakeSRGB
	add	esp, 4
	mov	DWORD PTR _format$[ebp], eax
$LN34@CreateText:
; Line 492
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _metareader$30[ebp]
	call	??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
$LN41@CreateText:
; Line 496
	mov	DWORD PTR _support$[ebp], 0
; Line 497
	mov	esi, esp
	lea	eax, DWORD PTR _support$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _d3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+116]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 498
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN32@CreateText
	mov	eax, DWORD PTR _support$[ebp]
	and	eax, 32					; 00000020H
	jne	SHORT $LN33@CreateText
$LN32@CreateText:
; Line 501
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _convertGUID$[ebp], ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _convertGUID$[ebp+4], edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _convertGUID$[ebp+8], eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _convertGUID$[ebp+12], ecx
; Line 502
	mov	DWORD PTR _format$[ebp], 28		; 0000001cH
; Line 503
	mov	DWORD PTR _bpp$[ebp], 32		; 00000020H
$LN33@CreateText:
; Line 507
	mov	edx, DWORD PTR _twidth$[ebp]
	imul	edx, DWORD PTR _bpp$[ebp]
	add	edx, 7
	shr	edx, 3
	mov	DWORD PTR _rowPitch$[ebp], edx
; Line 508
	mov	eax, DWORD PTR _rowPitch$[ebp]
	imul	eax, DWORD PTR _theight$[ebp]
	mov	DWORD PTR _imageSize$[ebp], eax
; Line 510
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	mov	ecx, DWORD PTR _imageSize$[ebp]
	push	ecx
	call	??_U@YAPAXIABUnothrow_t@std@@@Z		; operator new[]
	add	esp, 8
	mov	DWORD PTR $T18[ebp], eax
	mov	edx, DWORD PTR $T18[ebp]
	push	edx
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??0?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@PAE@Z ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 511
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??B?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBE_NXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN31@CreateText
; Line 512
	mov	DWORD PTR $T17[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T17[ebp]
	jmp	$LN67@CreateText
$LN31@CreateText:
; Line 517
	push	16					; 00000010H
	lea	ecx, DWORD PTR _pixelFormat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _convertGUID$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv353[ebp], eax
	cmp	DWORD PTR tv353[ebp], 0
	jne	SHORT $LN30@CreateText
	mov	eax, DWORD PTR _twidth$[ebp]
	cmp	eax, DWORD PTR _width$[ebp]
	jne	SHORT $LN30@CreateText
	mov	ecx, DWORD PTR _theight$[ebp]
	cmp	ecx, DWORD PTR _height$[ebp]
	jne	SHORT $LN30@CreateText
; Line 520
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _imageSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _rowPitch$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _frame$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _frame$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 521
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN29@CreateText
; Line 522
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T16[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T16[ebp]
	jmp	$LN67@CreateText
$LN29@CreateText:
; Line 523
	jmp	$LN15@CreateText
$LN30@CreateText:
; Line 524
	mov	eax, DWORD PTR _twidth$[ebp]
	cmp	eax, DWORD PTR _width$[ebp]
	jne	SHORT $LN26@CreateText
	mov	ecx, DWORD PTR _theight$[ebp]
	cmp	ecx, DWORD PTR _height$[ebp]
	je	$LN27@CreateText
$LN26@CreateText:
; Line 527
	call	?_GetWIC@@YAPAUIWICImagingFactory@@XZ	; _GetWIC
	mov	DWORD PTR _pWIC$26[ebp], eax
; Line 528
	cmp	DWORD PTR _pWIC$26[ebp], 0
	jne	SHORT $LN25@CreateText
; Line 529
	mov	DWORD PTR $T15[ebp], -2147467262	; 80004002H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T15[ebp]
	jmp	$LN67@CreateText
$LN25@CreateText:
; Line 531
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??0?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::ComPtr<IWICBitmapScaler>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 532
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAEPAPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _pWIC$26[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pWIC$26[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 533
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN24@CreateText
; Line 534
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T14[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T14[ebp]
	jmp	$LN67@CreateText
$LN24@CreateText:
; Line 536
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
	mov	DWORD PTR tv394[ebp], eax
	mov	esi, esp
	push	3
	mov	ecx, DWORD PTR _theight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _twidth$[ebp]
	push	edx
	mov	eax, DWORD PTR _frame$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv394[ebp]
	push	ecx
	mov	edx, DWORD PTR tv394[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 537
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN23@CreateText
; Line 538
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T13[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T13[ebp]
	jmp	$LN67@CreateText
$LN23@CreateText:
; Line 541
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
	mov	DWORD PTR tv414[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _pfScaler$24[ebp]
	push	eax
	mov	ecx, DWORD PTR tv414[ebp]
	push	ecx
	mov	edx, DWORD PTR tv414[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 542
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN22@CreateText
; Line 543
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T12[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T12[ebp]
	jmp	$LN67@CreateText
$LN22@CreateText:
; Line 545
	push	16					; 00000010H
	lea	eax, DWORD PTR _pfScaler$24[ebp]
	push	eax
	lea	ecx, DWORD PTR _convertGUID$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv424[ebp], eax
	cmp	DWORD PTR tv424[ebp], 0
	jne	$LN21@CreateText
; Line 548
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??C?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapScaler@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::operator->
	mov	DWORD PTR tv433[ebp], eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _imageSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _rowPitch$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR tv433[ebp]
	push	ecx
	mov	edx, DWORD PTR tv433[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 549
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN20@CreateText
; Line 550
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T11[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T11[ebp]
	jmp	$LN67@CreateText
$LN20@CreateText:
; Line 552
	jmp	$LN19@CreateText
$LN21@CreateText:
; Line 554
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 555
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pWIC$26[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pWIC$26[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 556
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN18@CreateText
; Line 557
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T10[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T10[ebp]
	jmp	$LN67@CreateText
$LN18@CreateText:
; Line 559
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
	mov	DWORD PTR tv462[ebp], eax
	mov	esi, esp
	push	0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	push	0
	push	8
	lea	edx, DWORD PTR _convertGUID$[ebp]
	push	edx
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	?Get@?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QBEPAUIWICBitmapScaler@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::Get
	push	eax
	mov	eax, DWORD PTR tv462[ebp]
	push	eax
	mov	ecx, DWORD PTR tv462[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 560
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN17@CreateText
; Line 561
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T9[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T9[ebp]
	jmp	$LN67@CreateText
$LN17@CreateText:
; Line 563
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
	mov	DWORD PTR tv486[ebp], eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _imageSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _rowPitch$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR tv486[ebp]
	push	ecx
	mov	edx, DWORD PTR tv486[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 564
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN16@CreateText
; Line 565
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T8[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN67@CreateText
$LN16@CreateText:
; Line 566
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _FC$23[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
$LN19@CreateText:
; Line 567
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scaler$25[ebp]
	call	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
; Line 568
	jmp	$LN15@CreateText
$LN27@CreateText:
; Line 571
	call	?_GetWIC@@YAPAUIWICImagingFactory@@XZ	; _GetWIC
	mov	DWORD PTR _pWIC$22[ebp], eax
; Line 572
	cmp	DWORD PTR _pWIC$22[ebp], 0
	jne	SHORT $LN14@CreateText
; Line 573
	mov	DWORD PTR $T7[ebp], -2147467262		; 80004002H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN67@CreateText
$LN14@CreateText:
; Line 575
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	??0?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::ComPtr<IWICFormatConverter>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 576
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAEPAPAUIWICFormatConverter@@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pWIC$22[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pWIC$22[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 577
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN13@CreateText
; Line 578
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN67@CreateText
$LN13@CreateText:
; Line 580
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
	mov	DWORD PTR tv517[ebp], eax
	mov	esi, esp
	push	0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	push	0
	push	8
	lea	edx, DWORD PTR _convertGUID$[ebp]
	push	edx
	mov	eax, DWORD PTR _frame$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv517[ebp]
	push	ecx
	mov	edx, DWORD PTR tv517[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 581
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN12@CreateText
; Line 582
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN67@CreateText
$LN12@CreateText:
; Line 584
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	??C?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICFormatConverter@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::operator->
	mov	DWORD PTR tv539[ebp], eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _imageSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rowPitch$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR tv539[ebp]
	push	edx
	mov	eax, DWORD PTR tv539[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 585
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN11@CreateText
; Line 586
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN67@CreateText
$LN11@CreateText:
; Line 587
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _FC$21[ebp]
	call	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
$LN15@CreateText:
; Line 590
	mov	BYTE PTR _autogen$[ebp], 0
; Line 591
	cmp	DWORD PTR _d3dContext$[ebp], 0
	je	SHORT $LN9@CreateText
	cmp	DWORD PTR _textureView$[ebp], 0
	je	SHORT $LN9@CreateText
; Line 593
	mov	DWORD PTR _fmtSupport$20[ebp], 0
; Line 594
	mov	esi, esp
	lea	ecx, DWORD PTR _fmtSupport$20[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _d3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _d3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 595
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN9@CreateText
	mov	ecx, DWORD PTR _fmtSupport$20[ebp]
	and	ecx, 8192				; 00002000H
	je	SHORT $LN9@CreateText
; Line 597
	mov	BYTE PTR _autogen$[ebp], 1
$LN9@CreateText:
; Line 603
	mov	edx, DWORD PTR _twidth$[ebp]
	mov	DWORD PTR _desc$[ebp], edx
; Line 604
	mov	eax, DWORD PTR _theight$[ebp]
	mov	DWORD PTR _desc$[ebp+4], eax
; Line 605
	movzx	ecx, BYTE PTR _autogen$[ebp]
	test	ecx, ecx
	je	SHORT $LN76@CreateText
	mov	DWORD PTR tv563[ebp], 0
	jmp	SHORT $LN77@CreateText
$LN76@CreateText:
	mov	DWORD PTR tv563[ebp], 1
$LN77@CreateText:
	mov	edx, DWORD PTR tv563[ebp]
	mov	DWORD PTR _desc$[ebp+8], edx
; Line 606
	mov	DWORD PTR _desc$[ebp+12], 1
; Line 607
	mov	eax, DWORD PTR _format$[ebp]
	mov	DWORD PTR _desc$[ebp+16], eax
; Line 608
	mov	DWORD PTR _desc$[ebp+20], 1
; Line 609
	mov	DWORD PTR _desc$[ebp+24], 0
; Line 610
	mov	ecx, DWORD PTR _usage$[ebp]
	mov	DWORD PTR _desc$[ebp+28], ecx
; Line 611
	mov	edx, DWORD PTR _cpuAccessFlags$[ebp]
	mov	DWORD PTR _desc$[ebp+36], edx
; Line 613
	movzx	eax, BYTE PTR _autogen$[ebp]
	test	eax, eax
	je	SHORT $LN8@CreateText
; Line 615
	mov	ecx, DWORD PTR _bindFlags$[ebp]
	or	ecx, 32					; 00000020H
	mov	DWORD PTR _desc$[ebp+32], ecx
; Line 616
	mov	edx, DWORD PTR _miscFlags$[ebp]
	or	edx, 1
	mov	DWORD PTR _desc$[ebp+40], edx
; Line 618
	jmp	SHORT $LN7@CreateText
$LN8@CreateText:
; Line 620
	mov	eax, DWORD PTR _bindFlags$[ebp]
	mov	DWORD PTR _desc$[ebp+32], eax
; Line 621
	mov	ecx, DWORD PTR _miscFlags$[ebp]
	mov	DWORD PTR _desc$[ebp+40], ecx
$LN7@CreateText:
; Line 625
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	mov	DWORD PTR _initData$[ebp], eax
; Line 626
	mov	edx, DWORD PTR _rowPitch$[ebp]
	mov	DWORD PTR _initData$[ebp+4], edx
; Line 627
	mov	eax, DWORD PTR _imageSize$[ebp]
	mov	DWORD PTR _initData$[ebp+8], eax
; Line 629
	mov	DWORD PTR _tex$[ebp], 0
; Line 630
	movzx	ecx, BYTE PTR _autogen$[ebp]
	test	ecx, ecx
	je	SHORT $LN78@CreateText
	mov	DWORD PTR tv609[ebp], 0
	jmp	SHORT $LN79@CreateText
$LN78@CreateText:
	lea	edx, DWORD PTR _initData$[ebp]
	mov	DWORD PTR tv609[ebp], edx
$LN79@CreateText:
	mov	esi, esp
	lea	eax, DWORD PTR _tex$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv609[ebp]
	push	ecx
	lea	edx, DWORD PTR _desc$[ebp]
	push	edx
	mov	eax, DWORD PTR _d3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _d3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 631
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN1@CreateText
	cmp	DWORD PTR _tex$[ebp], 0
	je	$LN1@CreateText
; Line 633
	cmp	DWORD PTR _textureView$[ebp], 0
	je	$LN3@CreateText
; Line 636
	xor	ecx, ecx
	mov	DWORD PTR _SRVDesc$19[ebp], ecx
	mov	DWORD PTR _SRVDesc$19[ebp+4], ecx
	mov	DWORD PTR _SRVDesc$19[ebp+8], ecx
	mov	DWORD PTR _SRVDesc$19[ebp+12], ecx
	mov	DWORD PTR _SRVDesc$19[ebp+16], ecx
	mov	DWORD PTR _SRVDesc$19[ebp+20], ecx
; Line 637
	mov	edx, DWORD PTR _desc$[ebp+16]
	mov	DWORD PTR _SRVDesc$19[ebp], edx
; Line 639
	mov	DWORD PTR _SRVDesc$19[ebp+4], 4
; Line 640
	movzx	eax, BYTE PTR _autogen$[ebp]
	test	eax, eax
	je	SHORT $LN80@CreateText
	mov	DWORD PTR tv620[ebp], -1
	jmp	SHORT $LN81@CreateText
$LN80@CreateText:
	mov	DWORD PTR tv620[ebp], 1
$LN81@CreateText:
	mov	ecx, DWORD PTR tv620[ebp]
	mov	DWORD PTR _SRVDesc$19[ebp+12], ecx
; Line 642
	mov	esi, esp
	mov	edx, DWORD PTR _textureView$[ebp]
	push	edx
	lea	eax, DWORD PTR _SRVDesc$19[ebp]
	push	eax
	mov	ecx, DWORD PTR _tex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _d3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 643
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@CreateText
; Line 645
	mov	eax, DWORD PTR _tex$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _tex$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 646
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN67@CreateText
$LN4@CreateText:
; Line 649
	movzx	edx, BYTE PTR _autogen$[ebp]
	test	edx, edx
	je	$LN3@CreateText
; Line 651
	cmp	DWORD PTR _d3dContext$[ebp], 0
	jne	SHORT $LN82@CreateText
	mov	esi, esp
	push	651					; 0000028bH
	push	OFFSET $SG156387
	push	OFFSET $SG156388
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN82@CreateText:
; Line 652
	mov	esi, esp
	mov	ecx, DWORD PTR _imageSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rowPitch$[ebp]
	push	edx
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?get@?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QBEPAEXZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::get
	push	eax
	push	0
	push	0
	mov	eax, DWORD PTR _tex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d3dContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _d3dContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+192]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 653
	mov	esi, esp
	mov	edx, DWORD PTR _textureView$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _d3dContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _d3dContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+216]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@CreateText:
; Line 657
	cmp	DWORD PTR _texture$[ebp], 0
	je	SHORT $LN2@CreateText
; Line 659
	mov	edx, DWORD PTR _texture$[ebp]
	mov	eax, DWORD PTR _tex$[ebp]
	mov	DWORD PTR [edx], eax
; Line 661
	jmp	SHORT $LN1@CreateText
$LN2@CreateText:
; Line 663
	push	OFFSET $SG156398
	mov	ecx, DWORD PTR _tex$[ebp]
	push	ecx
	call	??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
	add	esp, 8
; Line 664
	mov	edx, DWORD PTR _tex$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _tex$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CreateText:
; Line 668
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
	mov	eax, DWORD PTR $T2[ebp]
$LN67@CreateText:
; Line 669
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN108@CreateText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 604				; 0000025cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN108@CreateText:
	DD	18					; 00000012H
	DD	$LN107@CreateText
$LN107@CreateText:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN88@CreateText
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN89@CreateText
	DD	-76					; ffffffb4H
	DD	16					; 00000010H
	DD	$LN90@CreateText
	DD	-100					; ffffff9cH
	DD	16					; 00000010H
	DD	$LN91@CreateText
	DD	-124					; ffffff84H
	DD	4
	DD	$LN92@CreateText
	DD	-148					; ffffff6cH
	DD	16					; 00000010H
	DD	$LN93@CreateText
	DD	-176					; ffffff50H
	DD	16					; 00000010H
	DD	$LN94@CreateText
	DD	-188					; ffffff44H
	DD	4
	DD	$LN95@CreateText
	DD	-208					; ffffff30H
	DD	4
	DD	$LN96@CreateText
	DD	-224					; ffffff20H
	DD	4
	DD	$LN97@CreateText
	DD	-248					; ffffff08H
	DD	16					; 00000010H
	DD	$LN98@CreateText
	DD	-260					; fffffefcH
	DD	4
	DD	$LN99@CreateText
	DD	-276					; fffffeecH
	DD	4
	DD	$LN100@CreateText
	DD	-292					; fffffedcH
	DD	4
	DD	$LN101@CreateText
	DD	-344					; fffffea8H
	DD	44					; 0000002cH
	DD	$LN102@CreateText
	DD	-364					; fffffe94H
	DD	12					; 0000000cH
	DD	$LN103@CreateText
	DD	-376					; fffffe88H
	DD	4
	DD	$LN104@CreateText
	DD	-408					; fffffe68H
	DD	24					; 00000018H
	DD	$LN105@CreateText
$LN105@CreateText:
	DB	83					; 00000053H
	DB	82					; 00000052H
	DB	86					; 00000056H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN104@CreateText:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN103@CreateText:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN102@CreateText:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN101@CreateText:
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN100@CreateText:
	DB	70					; 00000046H
	DB	67					; 00000043H
	DB	0
$LN99@CreateText:
	DB	70					; 00000046H
	DB	67					; 00000043H
	DB	0
$LN98@CreateText:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN97@CreateText:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN96@CreateText:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN95@CreateText:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN94@CreateText:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN93@CreateText:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN92@CreateText:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN91@CreateText:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	71					; 00000047H
	DB	85					; 00000055H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN90@CreateText:
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN89@CreateText:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	0
$LN88@CreateText:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0:
	lea	ecx, DWORD PTR _metareader$30[ebp]
	jmp	??1?$ComPtr@UIWICMetadataQueryReader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICMetadataQueryReader>::~ComPtr<IWICMetadataQueryReader>
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1?$unique_ptr@$$BY0A@EU?$default_delete@$$BY0A@E@std@@@std@@QAE@XZ ; std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2:
	lea	ecx, DWORD PTR _scaler$25[ebp]
	jmp	??1?$ComPtr@UIWICBitmapScaler@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapScaler>::~ComPtr<IWICBitmapScaler>
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$3:
	lea	ecx, DWORD PTR _FC$23[ebp]
	jmp	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
__unwindfunclet$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$4:
	lea	ecx, DWORD PTR _FC$21[ebp]
	jmp	??1?$ComPtr@UIWICFormatConverter@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICFormatConverter>::~ComPtr<IWICFormatConverter>
__ehhandler$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-604]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; CreateTextureFromWIC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_format$ = 8						; size = 4
?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z PROC		; MakeSRGB
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 280
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 281
	mov	eax, DWORD PTR _format$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 28					; 0000001cH
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 70			; 00000046H
	ja	SHORT $LN1@MakeSRGB
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN13@MakeSRGB[edx]
	jmp	DWORD PTR $LN14@MakeSRGB[eax*4]
$LN8@MakeSRGB:
; Line 284
	mov	eax, 29					; 0000001dH
	jmp	SHORT $LN11@MakeSRGB
$LN7@MakeSRGB:
; Line 287
	mov	eax, 72					; 00000048H
	jmp	SHORT $LN11@MakeSRGB
$LN6@MakeSRGB:
; Line 290
	mov	eax, 75					; 0000004bH
	jmp	SHORT $LN11@MakeSRGB
$LN5@MakeSRGB:
; Line 293
	mov	eax, 78					; 0000004eH
	jmp	SHORT $LN11@MakeSRGB
$LN4@MakeSRGB:
; Line 296
	mov	eax, 91					; 0000005bH
	jmp	SHORT $LN11@MakeSRGB
$LN3@MakeSRGB:
; Line 299
	mov	eax, 93					; 0000005dH
	jmp	SHORT $LN11@MakeSRGB
$LN2@MakeSRGB:
; Line 302
	mov	eax, 99					; 00000063H
	jmp	SHORT $LN11@MakeSRGB
$LN1@MakeSRGB:
; Line 305
	mov	eax, DWORD PTR _format$[ebp]
$LN11@MakeSRGB:
; Line 307
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@MakeSRGB:
	DD	$LN8@MakeSRGB
	DD	$LN7@MakeSRGB
	DD	$LN6@MakeSRGB
	DD	$LN5@MakeSRGB
	DD	$LN4@MakeSRGB
	DD	$LN3@MakeSRGB
	DD	$LN2@MakeSRGB
	DD	$LN1@MakeSRGB
$LN13@MakeSRGB:
	DB	0
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	1
	DB	7
	DB	7
	DB	2
	DB	7
	DB	7
	DB	3
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	4
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
?MakeSRGB@@YA?AW4DXGI_FORMAT@@W41@@Z ENDP		; MakeSRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 409
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 411
	lea	ecx, DWORD PTR _p$[ebp]
	call	??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *
	mov	esi, esp
	push	eax
	push	OFFSET __GUID_e8eda601_3d48_431a_ab44_69059be88bbe
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 412
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 116
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf
; Line 118
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 358
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 359
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
; Line 360
	mov	eax, DWORD PTR _this$[ebp]
; Line 361
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReleaseAndGetAddressOf@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAEPAPAUIWICPixelFormatInfo@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 338
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIWICPixelFormatInfo@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >::ComPtrRef<Microsoft::WRL::ComPtr<IWICPixelFormatInfo> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 340
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
; Line 355
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 328
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IWICComponentInfo>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv141 = -100						; size = 4
tv85 = -96						; size = 4
$T2 = -92						; size = 4
$T3 = -88						; size = 4
$T4 = -84						; size = 4
$T5 = -80						; size = 4
$T6 = -76						; size = 4
$T7 = -72						; size = 4
$T8 = -68						; size = 4
_bpp$ = -60						; size = 4
_pfinfo$ = -48						; size = 4
_type$ = -36						; size = 4
_cinfo$ = -24						; size = 4
_pWIC$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_targetGuid$ = 8					; size = 4
?_WICBitsPerPixel@@YAIABU_GUID@@@Z PROC			; _WICBitsPerPixel
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 250
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_WICBitsPerPixel@@YAIABU_GUID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-100]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 251
	call	?_GetWIC@@YAPAUIWICImagingFactory@@XZ	; _GetWIC
	mov	DWORD PTR _pWIC$[ebp], eax
; Line 252
	cmp	DWORD PTR _pWIC$[ebp], 0
	jne	SHORT $LN6@WICBitsPer
; Line 253
	xor	eax, eax
	jmp	$LN7@WICBitsPer
$LN6@WICBitsPer:
; Line 255
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??0?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::ComPtr<IWICComponentInfo>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 256
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAEPAPAUIWICComponentInfo@@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _targetGuid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWIC$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pWIC$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN5@WICBitsPer
; Line 257
	mov	DWORD PTR $T8[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN7@WICBitsPer
$LN5@WICBitsPer:
; Line 260
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??C?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICComponentInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::operator->
	mov	DWORD PTR tv85[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _type$[ebp]
	push	edx
	mov	eax, DWORD PTR tv85[ebp]
	push	eax
	mov	ecx, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN4@WICBitsPer
; Line 261
	mov	DWORD PTR $T7[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN7@WICBitsPer
$LN4@WICBitsPer:
; Line 263
	cmp	DWORD PTR _type$[ebp], 32		; 00000020H
	je	SHORT $LN3@WICBitsPer
; Line 264
	mov	DWORD PTR $T6[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN7@WICBitsPer
$LN3@WICBitsPer:
; Line 266
	lea	ecx, DWORD PTR _pfinfo$[ebp]
	call	??0?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::ComPtr<IWICPixelFormatInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 267
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pfinfo$[ebp]
	call	??I?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator&
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??$As@UIWICPixelFormatInfo@@@?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QBEJV?$ComPtrRef@V?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@@Details@12@@Z ; Microsoft::WRL::ComPtr<IWICComponentInfo>::As<IWICPixelFormatInfo>
	test	eax, eax
	jge	SHORT $LN2@WICBitsPer
; Line 268
	mov	DWORD PTR $T4[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pfinfo$[ebp]
	call	??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
	mov	eax, DWORD PTR $T4[ebp]
	jmp	SHORT $LN7@WICBitsPer
$LN2@WICBitsPer:
; Line 271
	lea	ecx, DWORD PTR _pfinfo$[ebp]
	call	??C?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICPixelFormatInfo@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::operator->
	mov	DWORD PTR tv141[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _bpp$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv141[ebp]
	push	ecx
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN1@WICBitsPer
; Line 272
	mov	DWORD PTR $T3[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pfinfo$[ebp]
	call	??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN7@WICBitsPer
$LN1@WICBitsPer:
; Line 274
	mov	edx, DWORD PTR _bpp$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pfinfo$[ebp]
	call	??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cinfo$[ebp]
	call	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
	mov	eax, DWORD PTR $T2[ebp]
$LN7@WICBitsPer:
; Line 275
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@WICBitsPer
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 100				; 00000064H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@WICBitsPer:
	DD	4
	DD	$LN16@WICBitsPer
$LN16@WICBitsPer:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@WICBitsPer
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN12@WICBitsPer
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN13@WICBitsPer
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN14@WICBitsPer
$LN14@WICBitsPer:
	DB	98					; 00000062H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	0
$LN13@WICBitsPer:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN12@WICBitsPer:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN11@WICBitsPer:
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$0:
	lea	ecx, DWORD PTR _cinfo$[ebp]
	jmp	??1?$ComPtr@UIWICComponentInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICComponentInfo>::~ComPtr<IWICComponentInfo>
__unwindfunclet$?_WICBitsPerPixel@@YAIABU_GUID@@@Z$1:
	lea	ecx, DWORD PTR _pfinfo$[ebp]
	jmp	??1?$ComPtr@UIWICPixelFormatInfo@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICPixelFormatInfo>::~ComPtr<IWICPixelFormatInfo>
__ehhandler$?_WICBitsPerPixel@@YAIABU_GUID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_WICBitsPerPixel@@YAIABU_GUID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_WICBitsPerPixel@@YAIABU_GUID@@@Z ENDP			; _WICBitsPerPixel
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -8						; size = 4
_i$1 = -4						; size = 4
_guid$ = 8						; size = 4
?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z PROC	; _WICToDXGI
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 231
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@WICToDXGI
$LN3@WICToDXGI:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@WICToDXGI:
	cmp	DWORD PTR _i$1[ebp], 15			; 0000000fH
	jae	SHORT $LN2@WICToDXGI
; Line 233
	push	16					; 00000010H
	mov	ecx, DWORD PTR _guid$[ebp]
	push	ecx
	imul	edx, DWORD PTR _i$1[ebp], 20
	add	edx, OFFSET _g_WICFormats
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv73[ebp], eax
	cmp	DWORD PTR tv73[ebp], 0
	jne	SHORT $LN1@WICToDXGI
; Line 234
	imul	eax, DWORD PTR _i$1[ebp], 20
	mov	eax, DWORD PTR _g_WICFormats[eax+16]
	jmp	SHORT $LN5@WICToDXGI
$LN1@WICToDXGI:
; Line 235
	jmp	SHORT $LN3@WICToDXGI
$LN2@WICToDXGI:
; Line 245
	xor	eax, eax
$LN5@WICToDXGI:
; Line 246
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_WICToDXGI@@YA?AW4DXGI_FORMAT@@ABU_GUID@@@Z ENDP	; _WICToDXGI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -4						; size = 4
?_GetWIC@@YAPAUIWICImagingFactory@@XZ PROC		; _GetWIC
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 173
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 176
	cmp	DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
	je	SHORT $LN2@GetWIC
; Line 177
	mov	eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
	jmp	SHORT $LN3@GetWIC
$LN2@GetWIC:
; Line 216
	mov	esi, esp
	push	OFFSET ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
	push	OFFSET __GUID_ec5ec8a9_c395_4314_9c77_54d7a935ff70
	push	1
	push	0
	push	OFFSET _CLSID_WICImagingFactory
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 218
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetWIC
; Line 220
	mov	DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A, 0
; Line 221
	xor	eax, eax
	jmp	SHORT $LN3@GetWIC
$LN1@GetWIC:
; Line 225
	mov	eax, DWORD PTR ?s_Factory@?1??_GetWIC@@YAPAUIWICImagingFactory@@XZ@4PAU2@A
$LN3@GetWIC:
; Line 226
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_GetWIC@@YAPAUIWICImagingFactory@@XZ ENDP		; _GetWIC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_WICConvert@@YAXXZ
text$di	SEGMENT
??__Eg_WICConvert@@YAXXZ PROC				; `dynamic initializer for 'g_WICConvert'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 167
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _GUID_WICPixelFormatBlackWhite
	mov	DWORD PTR _g_WICConvert, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormatBlackWhite+4
	mov	DWORD PTR _g_WICConvert+4, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormatBlackWhite+8
	mov	DWORD PTR _g_WICConvert+8, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormatBlackWhite+12
	mov	DWORD PTR _g_WICConvert+12, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
	mov	DWORD PTR _g_WICConvert+16, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
	mov	DWORD PTR _g_WICConvert+20, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
	mov	DWORD PTR _g_WICConvert+24, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
	mov	DWORD PTR _g_WICConvert+28, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat1bppIndexed
	mov	DWORD PTR _g_WICConvert+32, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat1bppIndexed+4
	mov	DWORD PTR _g_WICConvert+36, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat1bppIndexed+8
	mov	DWORD PTR _g_WICConvert+40, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat1bppIndexed+12
	mov	DWORD PTR _g_WICConvert+44, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+48, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+52, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+56, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+60, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat2bppIndexed
	mov	DWORD PTR _g_WICConvert+64, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat2bppIndexed+4
	mov	DWORD PTR _g_WICConvert+68, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat2bppIndexed+8
	mov	DWORD PTR _g_WICConvert+72, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat2bppIndexed+12
	mov	DWORD PTR _g_WICConvert+76, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+80, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+84, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+88, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+92, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat4bppIndexed
	mov	DWORD PTR _g_WICConvert+96, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat4bppIndexed+4
	mov	DWORD PTR _g_WICConvert+100, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat4bppIndexed+8
	mov	DWORD PTR _g_WICConvert+104, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat4bppIndexed+12
	mov	DWORD PTR _g_WICConvert+108, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+112, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+116, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+120, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+124, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppIndexed
	mov	DWORD PTR _g_WICConvert+128, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppIndexed+4
	mov	DWORD PTR _g_WICConvert+132, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppIndexed+8
	mov	DWORD PTR _g_WICConvert+136, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppIndexed+12
	mov	DWORD PTR _g_WICConvert+140, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+144, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+148, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+152, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+156, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat2bppGray
	mov	DWORD PTR _g_WICConvert+160, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat2bppGray+4
	mov	DWORD PTR _g_WICConvert+164, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat2bppGray+8
	mov	DWORD PTR _g_WICConvert+168, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat2bppGray+12
	mov	DWORD PTR _g_WICConvert+172, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray
	mov	DWORD PTR _g_WICConvert+176, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppGray+4
	mov	DWORD PTR _g_WICConvert+180, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+8
	mov	DWORD PTR _g_WICConvert+184, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
	mov	DWORD PTR _g_WICConvert+188, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat4bppGray
	mov	DWORD PTR _g_WICConvert+192, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat4bppGray+4
	mov	DWORD PTR _g_WICConvert+196, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat4bppGray+8
	mov	DWORD PTR _g_WICConvert+200, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat4bppGray+12
	mov	DWORD PTR _g_WICConvert+204, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
	mov	DWORD PTR _g_WICConvert+208, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
	mov	DWORD PTR _g_WICConvert+212, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
	mov	DWORD PTR _g_WICConvert+216, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
	mov	DWORD PTR _g_WICConvert+220, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint
	mov	DWORD PTR _g_WICConvert+224, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint+4
	mov	DWORD PTR _g_WICConvert+228, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint+8
	mov	DWORD PTR _g_WICConvert+232, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGrayFixedPoint+12
	mov	DWORD PTR _g_WICConvert+236, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf
	mov	DWORD PTR _g_WICConvert+240, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+4
	mov	DWORD PTR _g_WICConvert+244, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+8
	mov	DWORD PTR _g_WICConvert+248, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+12
	mov	DWORD PTR _g_WICConvert+252, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint
	mov	DWORD PTR _g_WICConvert+256, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint+4
	mov	DWORD PTR _g_WICConvert+260, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint+8
	mov	DWORD PTR _g_WICConvert+264, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFixedPoint+12
	mov	DWORD PTR _g_WICConvert+268, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat
	mov	DWORD PTR _g_WICConvert+272, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+4
	mov	DWORD PTR _g_WICConvert+276, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+8
	mov	DWORD PTR _g_WICConvert+280, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+12
	mov	DWORD PTR _g_WICConvert+284, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR555
	mov	DWORD PTR _g_WICConvert+288, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+4
	mov	DWORD PTR _g_WICConvert+292, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGR555+8
	mov	DWORD PTR _g_WICConvert+296, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR555+12
	mov	DWORD PTR _g_WICConvert+300, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551
	mov	DWORD PTR _g_WICConvert+304, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+4
	mov	DWORD PTR _g_WICConvert+308, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+8
	mov	DWORD PTR _g_WICConvert+312, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+12
	mov	DWORD PTR _g_WICConvert+316, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGR101010
	mov	DWORD PTR _g_WICConvert+320, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGR101010+4
	mov	DWORD PTR _g_WICConvert+324, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR101010+8
	mov	DWORD PTR _g_WICConvert+328, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGR101010+12
	mov	DWORD PTR _g_WICConvert+332, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102
	mov	DWORD PTR _g_WICConvert+336, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+4
	mov	DWORD PTR _g_WICConvert+340, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+8
	mov	DWORD PTR _g_WICConvert+344, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+12
	mov	DWORD PTR _g_WICConvert+348, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat24bppBGR
	mov	DWORD PTR _g_WICConvert+352, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat24bppBGR+4
	mov	DWORD PTR _g_WICConvert+356, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat24bppBGR+8
	mov	DWORD PTR _g_WICConvert+360, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat24bppBGR+12
	mov	DWORD PTR _g_WICConvert+364, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+368, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+372, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+376, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+380, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat24bppRGB
	mov	DWORD PTR _g_WICConvert+384, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat24bppRGB+4
	mov	DWORD PTR _g_WICConvert+388, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat24bppRGB+8
	mov	DWORD PTR _g_WICConvert+392, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat24bppRGB+12
	mov	DWORD PTR _g_WICConvert+396, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+400, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+404, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+408, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+412, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppPBGRA
	mov	DWORD PTR _g_WICConvert+416, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppPBGRA+4
	mov	DWORD PTR _g_WICConvert+420, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppPBGRA+8
	mov	DWORD PTR _g_WICConvert+424, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppPBGRA+12
	mov	DWORD PTR _g_WICConvert+428, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+432, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+436, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+440, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+444, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppPRGBA
	mov	DWORD PTR _g_WICConvert+448, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppPRGBA+4
	mov	DWORD PTR _g_WICConvert+452, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppPRGBA+8
	mov	DWORD PTR _g_WICConvert+456, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppPRGBA+12
	mov	DWORD PTR _g_WICConvert+460, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+464, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+468, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+472, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+476, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppRGB
	mov	DWORD PTR _g_WICConvert+480, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppRGB+4
	mov	DWORD PTR _g_WICConvert+484, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat48bppRGB+8
	mov	DWORD PTR _g_WICConvert+488, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppRGB+12
	mov	DWORD PTR _g_WICConvert+492, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+496, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+500, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+504, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+508, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat48bppBGR
	mov	DWORD PTR _g_WICConvert+512, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppBGR+4
	mov	DWORD PTR _g_WICConvert+516, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppBGR+8
	mov	DWORD PTR _g_WICConvert+520, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat48bppBGR+12
	mov	DWORD PTR _g_WICConvert+524, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+528, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+532, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+536, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+540, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRA
	mov	DWORD PTR _g_WICConvert+544, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppBGRA+4
	mov	DWORD PTR _g_WICConvert+548, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppBGRA+8
	mov	DWORD PTR _g_WICConvert+552, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRA+12
	mov	DWORD PTR _g_WICConvert+556, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+560, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+564, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+568, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+572, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppPRGBA
	mov	DWORD PTR _g_WICConvert+576, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppPRGBA+4
	mov	DWORD PTR _g_WICConvert+580, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppPRGBA+8
	mov	DWORD PTR _g_WICConvert+584, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppPRGBA+12
	mov	DWORD PTR _g_WICConvert+588, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+592, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+596, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+600, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+604, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppPBGRA
	mov	DWORD PTR _g_WICConvert+608, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppPBGRA+4
	mov	DWORD PTR _g_WICConvert+612, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppPBGRA+8
	mov	DWORD PTR _g_WICConvert+616, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppPBGRA+12
	mov	DWORD PTR _g_WICConvert+620, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+624, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+628, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+632, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+636, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint
	mov	DWORD PTR _g_WICConvert+640, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint+4
	mov	DWORD PTR _g_WICConvert+644, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint+8
	mov	DWORD PTR _g_WICConvert+648, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBFixedPoint+12
	mov	DWORD PTR _g_WICConvert+652, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICConvert+656, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICConvert+660, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICConvert+664, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICConvert+668, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint
	mov	DWORD PTR _g_WICConvert+672, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint+4
	mov	DWORD PTR _g_WICConvert+676, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint+8
	mov	DWORD PTR _g_WICConvert+680, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppBGRFixedPoint+12
	mov	DWORD PTR _g_WICConvert+684, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICConvert+688, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICConvert+692, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICConvert+696, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICConvert+700, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint
	mov	DWORD PTR _g_WICConvert+704, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint+4
	mov	DWORD PTR _g_WICConvert+708, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint+8
	mov	DWORD PTR _g_WICConvert+712, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAFixedPoint+12
	mov	DWORD PTR _g_WICConvert+716, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICConvert+720, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICConvert+724, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICConvert+728, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICConvert+732, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint
	mov	DWORD PTR _g_WICConvert+736, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint+4
	mov	DWORD PTR _g_WICConvert+740, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint+8
	mov	DWORD PTR _g_WICConvert+744, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppBGRAFixedPoint+12
	mov	DWORD PTR _g_WICConvert+748, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICConvert+752, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICConvert+756, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICConvert+760, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICConvert+764, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint
	mov	DWORD PTR _g_WICConvert+768, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint+4
	mov	DWORD PTR _g_WICConvert+772, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint+8
	mov	DWORD PTR _g_WICConvert+776, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBFixedPoint+12
	mov	DWORD PTR _g_WICConvert+780, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICConvert+784, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICConvert+788, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICConvert+792, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICConvert+796, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf
	mov	DWORD PTR _g_WICConvert+800, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf+4
	mov	DWORD PTR _g_WICConvert+804, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf+8
	mov	DWORD PTR _g_WICConvert+808, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBHalf+12
	mov	DWORD PTR _g_WICConvert+812, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICConvert+816, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICConvert+820, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICConvert+824, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICConvert+828, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf
	mov	DWORD PTR _g_WICConvert+832, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf+4
	mov	DWORD PTR _g_WICConvert+836, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf+8
	mov	DWORD PTR _g_WICConvert+840, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat48bppRGBHalf+12
	mov	DWORD PTR _g_WICConvert+844, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICConvert+848, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICConvert+852, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICConvert+856, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICConvert+860, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat
	mov	DWORD PTR _g_WICConvert+864, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat+4
	mov	DWORD PTR _g_WICConvert+868, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat+8
	mov	DWORD PTR _g_WICConvert+872, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppPRGBAFloat+12
	mov	DWORD PTR _g_WICConvert+876, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _g_WICConvert+880, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _g_WICConvert+884, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _g_WICConvert+888, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _g_WICConvert+892, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat
	mov	DWORD PTR _g_WICConvert+896, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat+4
	mov	DWORD PTR _g_WICConvert+900, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat+8
	mov	DWORD PTR _g_WICConvert+904, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBFloat+12
	mov	DWORD PTR _g_WICConvert+908, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _g_WICConvert+912, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _g_WICConvert+916, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _g_WICConvert+920, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _g_WICConvert+924, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint
	mov	DWORD PTR _g_WICConvert+928, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint+4
	mov	DWORD PTR _g_WICConvert+932, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint+8
	mov	DWORD PTR _g_WICConvert+936, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFixedPoint+12
	mov	DWORD PTR _g_WICConvert+940, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _g_WICConvert+944, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _g_WICConvert+948, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _g_WICConvert+952, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _g_WICConvert+956, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint
	mov	DWORD PTR _g_WICConvert+960, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint+4
	mov	DWORD PTR _g_WICConvert+964, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint+8
	mov	DWORD PTR _g_WICConvert+968, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBFixedPoint+12
	mov	DWORD PTR _g_WICConvert+972, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _g_WICConvert+976, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _g_WICConvert+980, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _g_WICConvert+984, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _g_WICConvert+988, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBE
	mov	DWORD PTR _g_WICConvert+992, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBE+4
	mov	DWORD PTR _g_WICConvert+996, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBE+8
	mov	DWORD PTR _g_WICConvert+1000, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBE+12
	mov	DWORD PTR _g_WICConvert+1004, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _g_WICConvert+1008, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _g_WICConvert+1012, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _g_WICConvert+1016, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _g_WICConvert+1020, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppCMYK
	mov	DWORD PTR _g_WICConvert+1024, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppCMYK+4
	mov	DWORD PTR _g_WICConvert+1028, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppCMYK+8
	mov	DWORD PTR _g_WICConvert+1032, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppCMYK+12
	mov	DWORD PTR _g_WICConvert+1036, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICConvert+1040, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICConvert+1044, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICConvert+1048, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICConvert+1052, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppCMYK
	mov	DWORD PTR _g_WICConvert+1056, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppCMYK+4
	mov	DWORD PTR _g_WICConvert+1060, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppCMYK+8
	mov	DWORD PTR _g_WICConvert+1064, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppCMYK+12
	mov	DWORD PTR _g_WICConvert+1068, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+1072, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+1076, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+1080, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+1084, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha
	mov	DWORD PTR _g_WICConvert+1088, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha+4
	mov	DWORD PTR _g_WICConvert+1092, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha+8
	mov	DWORD PTR _g_WICConvert+1096, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat40bppCMYKAlpha+12
	mov	DWORD PTR _g_WICConvert+1100, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+1104, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+1108, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+1112, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+1116, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha
	mov	DWORD PTR _g_WICConvert+1120, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha+4
	mov	DWORD PTR _g_WICConvert+1124, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha+8
	mov	DWORD PTR _g_WICConvert+1128, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat80bppCMYKAlpha+12
	mov	DWORD PTR _g_WICConvert+1132, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICConvert+1136, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICConvert+1140, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICConvert+1144, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICConvert+1148, edx
	pop	ebp
	ret	0
??__Eg_WICConvert@@YAXXZ ENDP				; `dynamic initializer for 'g_WICConvert''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_WICFormats@@YAXXZ
text$di	SEGMENT
??__Eg_WICFormats@@YAXXZ PROC				; `dynamic initializer for 'g_WICFormats'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 97
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat
	mov	DWORD PTR _g_WICFormats, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+4
	mov	DWORD PTR _g_WICFormats+4, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+8
	mov	DWORD PTR _g_WICFormats+8, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat128bppRGBAFloat+12
	mov	DWORD PTR _g_WICFormats+12, eax
	mov	DWORD PTR _g_WICFormats+16, 2
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf
	mov	DWORD PTR _g_WICFormats+20, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+4
	mov	DWORD PTR _g_WICFormats+24, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+8
	mov	DWORD PTR _g_WICFormats+28, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBAHalf+12
	mov	DWORD PTR _g_WICFormats+32, ecx
	mov	DWORD PTR _g_WICFormats+36, 10		; 0000000aH
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA
	mov	DWORD PTR _g_WICFormats+40, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat64bppRGBA+4
	mov	DWORD PTR _g_WICFormats+44, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+8
	mov	DWORD PTR _g_WICFormats+48, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat64bppRGBA+12
	mov	DWORD PTR _g_WICFormats+52, edx
	mov	DWORD PTR _g_WICFormats+56, 11		; 0000000bH
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA
	mov	DWORD PTR _g_WICFormats+60, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+4
	mov	DWORD PTR _g_WICFormats+64, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA+8
	mov	DWORD PTR _g_WICFormats+68, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA+12
	mov	DWORD PTR _g_WICFormats+72, eax
	mov	DWORD PTR _g_WICFormats+76, 28		; 0000001cH
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA
	mov	DWORD PTR _g_WICFormats+80, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+4
	mov	DWORD PTR _g_WICFormats+84, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGRA+8
	mov	DWORD PTR _g_WICFormats+88, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGRA+12
	mov	DWORD PTR _g_WICFormats+92, ecx
	mov	DWORD PTR _g_WICFormats+96, 87		; 00000057H
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGR
	mov	DWORD PTR _g_WICFormats+100, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppBGR+4
	mov	DWORD PTR _g_WICFormats+104, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppBGR+8
	mov	DWORD PTR _g_WICFormats+108, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppBGR+12
	mov	DWORD PTR _g_WICFormats+112, edx
	mov	DWORD PTR _g_WICFormats+116, 88		; 00000058H
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR
	mov	DWORD PTR _g_WICFormats+120, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+4
	mov	DWORD PTR _g_WICFormats+124, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+8
	mov	DWORD PTR _g_WICFormats+128, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102XR+12
	mov	DWORD PTR _g_WICFormats+132, eax
	mov	DWORD PTR _g_WICFormats+136, 89		; 00000059H
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102
	mov	DWORD PTR _g_WICFormats+140, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+4
	mov	DWORD PTR _g_WICFormats+144, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+8
	mov	DWORD PTR _g_WICFormats+148, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppRGBA1010102+12
	mov	DWORD PTR _g_WICFormats+152, ecx
	mov	DWORD PTR _g_WICFormats+156, 24		; 00000018H
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551
	mov	DWORD PTR _g_WICFormats+160, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+4
	mov	DWORD PTR _g_WICFormats+164, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+8
	mov	DWORD PTR _g_WICFormats+168, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGRA5551+12
	mov	DWORD PTR _g_WICFormats+172, edx
	mov	DWORD PTR _g_WICFormats+176, 86		; 00000056H
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565
	mov	DWORD PTR _g_WICFormats+180, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+4
	mov	DWORD PTR _g_WICFormats+184, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppBGR565+8
	mov	DWORD PTR _g_WICFormats+188, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppBGR565+12
	mov	DWORD PTR _g_WICFormats+192, eax
	mov	DWORD PTR _g_WICFormats+196, 85		; 00000055H
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat
	mov	DWORD PTR _g_WICFormats+200, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+4
	mov	DWORD PTR _g_WICFormats+204, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+8
	mov	DWORD PTR _g_WICFormats+208, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat32bppGrayFloat+12
	mov	DWORD PTR _g_WICFormats+212, ecx
	mov	DWORD PTR _g_WICFormats+216, 41		; 00000029H
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf
	mov	DWORD PTR _g_WICFormats+220, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+4
	mov	DWORD PTR _g_WICFormats+224, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+8
	mov	DWORD PTR _g_WICFormats+228, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGrayHalf+12
	mov	DWORD PTR _g_WICFormats+232, edx
	mov	DWORD PTR _g_WICFormats+236, 54		; 00000036H
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGray
	mov	DWORD PTR _g_WICFormats+240, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat16bppGray+4
	mov	DWORD PTR _g_WICFormats+244, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat16bppGray+8
	mov	DWORD PTR _g_WICFormats+248, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat16bppGray+12
	mov	DWORD PTR _g_WICFormats+252, eax
	mov	DWORD PTR _g_WICFormats+256, 56		; 00000038H
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray
	mov	DWORD PTR _g_WICFormats+260, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppGray+4
	mov	DWORD PTR _g_WICFormats+264, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppGray+8
	mov	DWORD PTR _g_WICFormats+268, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppGray+12
	mov	DWORD PTR _g_WICFormats+272, ecx
	mov	DWORD PTR _g_WICFormats+276, 61		; 0000003dH
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppAlpha
	mov	DWORD PTR _g_WICFormats+280, edx
	mov	eax, DWORD PTR _GUID_WICPixelFormat8bppAlpha+4
	mov	DWORD PTR _g_WICFormats+284, eax
	mov	ecx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+8
	mov	DWORD PTR _g_WICFormats+288, ecx
	mov	edx, DWORD PTR _GUID_WICPixelFormat8bppAlpha+12
	mov	DWORD PTR _g_WICFormats+292, edx
	mov	DWORD PTR _g_WICFormats+296, 65		; 00000041H
	pop	ebp
	ret	0
??__Eg_WICFormats@@YAXXZ ENDP				; `dynamic initializer for 'g_WICFormats''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv129 = -340						; size = 4
$T2 = -336						; size = 4
$T3 = -332						; size = 4
$T4 = -328						; size = 4
_pstrName$5 = -324					; size = 4
_result$6 = -320					; size = 4
_strFileA$7 = -312					; size = 260
_frame$ = -44						; size = 4
_hr$ = -36						; size = 4
_decoder$ = -28						; size = 4
_pWIC$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_fileName$ = 16						; size = 4
_maxsize$ = 20						; size = 4
_usage$ = 24						; size = 4
_bindFlags$ = 28					; size = 4
_cpuAccessFlags$ = 32					; size = 4
_miscFlags$ = 36					; size = 4
_forceSRGB$ = 40					; size = 1
_texture$ = 44						; size = 4
_textureView$ = 48					; size = 4
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromFileEx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 850
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 851
	cmp	DWORD PTR _texture$[ebp], 0
	je	SHORT $LN15@CreateWICT
; Line 853
	mov	eax, DWORD PTR _texture$[ebp]
	mov	DWORD PTR [eax], 0
$LN15@CreateWICT:
; Line 855
	cmp	DWORD PTR _textureView$[ebp], 0
	je	SHORT $LN14@CreateWICT
; Line 857
	mov	ecx, DWORD PTR _textureView$[ebp]
	mov	DWORD PTR [ecx], 0
$LN14@CreateWICT:
; Line 860
	cmp	DWORD PTR _d3dDevice$[ebp], 0
	je	SHORT $LN12@CreateWICT
	cmp	DWORD PTR _fileName$[ebp], 0
	je	SHORT $LN12@CreateWICT
	cmp	DWORD PTR _texture$[ebp], 0
	jne	SHORT $LN13@CreateWICT
	cmp	DWORD PTR _textureView$[ebp], 0
	jne	SHORT $LN13@CreateWICT
$LN12@CreateWICT:
; Line 861
	mov	eax, -2147024809			; 80070057H
	jmp	$LN16@CreateWICT
$LN13@CreateWICT:
; Line 863
	call	?_GetWIC@@YAPAUIWICImagingFactory@@XZ	; _GetWIC
	mov	DWORD PTR _pWIC$[ebp], eax
; Line 864
	cmp	DWORD PTR _pWIC$[ebp], 0
	jne	SHORT $LN11@CreateWICT
; Line 865
	mov	eax, -2147467262			; 80004002H
	jmp	$LN16@CreateWICT
$LN11@CreateWICT:
; Line 868
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 869
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	push	-2147483648				; 80000000H
	push	0
	mov	edx, DWORD PTR _fileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _pWIC$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pWIC$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 870
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN10@CreateWICT
; Line 871
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN16@CreateWICT
$LN10@CreateWICT:
; Line 873
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 874
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
	mov	DWORD PTR tv129[ebp], eax
	lea	ecx, DWORD PTR _frame$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	mov	eax, DWORD PTR tv129[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 875
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN9@CreateWICT
; Line 876
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN16@CreateWICT
$LN9@CreateWICT:
; Line 880
	mov	ecx, DWORD PTR _textureView$[ebp]
	push	ecx
	mov	edx, DWORD PTR _texture$[ebp]
	push	edx
	movzx	eax, BYTE PTR _forceSRGB$[ebp]
	push	eax
	mov	ecx, DWORD PTR _miscFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cpuAccessFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _bindFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _usage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _maxsize$[ebp]
	push	edx
	lea	ecx, DWORD PTR _frame$[ebp]
	call	?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
	push	eax
	mov	eax, DWORD PTR _d3dContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d3dDevice$[ebp]
	push	ecx
	call	?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; CreateTextureFromWIC
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 883
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN8@CreateWICT
; Line 885
	cmp	DWORD PTR _texture$[ebp], 0
	jne	SHORT $LN6@CreateWICT
	cmp	DWORD PTR _textureView$[ebp], 0
	je	$LN8@CreateWICT
$LN6@CreateWICT:
; Line 896
	mov	esi, esp
	push	0
	push	0
	push	260					; 00000104H
	lea	edx, DWORD PTR _strFileA$7[ebp]
	push	edx
	push	-1
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	push	1024					; 00000400H
	push	0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$6[ebp], eax
; Line 897
	cmp	DWORD PTR _result$6[ebp], 0
	jle	$LN8@CreateWICT
; Line 899
	push	92					; 0000005cH
	lea	ecx, DWORD PTR _strFileA$7[ebp]
	push	ecx
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _pstrName$5[ebp], eax
; Line 900
	cmp	DWORD PTR _pstrName$5[ebp], 0
	jne	SHORT $LN4@CreateWICT
; Line 902
	lea	edx, DWORD PTR _strFileA$7[ebp]
	mov	DWORD PTR _pstrName$5[ebp], edx
; Line 904
	jmp	SHORT $LN3@CreateWICT
$LN4@CreateWICT:
; Line 906
	mov	eax, DWORD PTR _pstrName$5[ebp]
	add	eax, 1
	mov	DWORD PTR _pstrName$5[ebp], eax
$LN3@CreateWICT:
; Line 909
	cmp	DWORD PTR _texture$[ebp], 0
	je	SHORT $LN2@CreateWICT
	mov	ecx, DWORD PTR _texture$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@CreateWICT
; Line 914
	mov	esi, esp
	mov	edx, DWORD PTR _pstrName$5[ebp]
	push	edx
	push	260					; 00000104H
	mov	eax, DWORD PTR _pstrName$5[ebp]
	push	eax
	call	_strnlen_s
	add	esp, 8
	push	eax
	push	OFFSET _WKPDID_D3DDebugObjectName
	mov	ecx, DWORD PTR _texture$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _texture$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CreateWICT:
; Line 917
	cmp	DWORD PTR _textureView$[ebp], 0
	je	SHORT $LN8@CreateWICT
	mov	ecx, DWORD PTR _textureView$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN8@CreateWICT
; Line 922
	mov	esi, esp
	mov	edx, DWORD PTR _pstrName$5[ebp]
	push	edx
	push	260					; 00000104H
	mov	eax, DWORD PTR _pstrName$5[ebp]
	push	eax
	call	_strnlen_s
	add	esp, 8
	push	eax
	push	OFFSET _WKPDID_D3DDebugObjectName
	mov	ecx, DWORD PTR _textureView$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _textureView$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@CreateWICT:
; Line 929
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
	mov	eax, DWORD PTR $T2[ebp]
$LN16@CreateWICT:
; Line 930
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@CreateWICT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN25@CreateWICT:
	DD	3
	DD	$LN24@CreateWICT
$LN24@CreateWICT:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN20@CreateWICT
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN21@CreateWICT
	DD	-312					; fffffec8H
	DD	260					; 00000104H
	DD	$LN22@CreateWICT
$LN22@CreateWICT:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	0
$LN21@CreateWICT:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN20@CreateWICT:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0:
	lea	ecx, DWORD PTR _decoder$[ebp]
	jmp	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
__unwindfunclet$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1:
	lea	ecx, DWORD PTR _frame$[ebp]
	jmp	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
__ehhandler$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromFileEx
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv160 = -88						; size = 4
tv91 = -84						; size = 4
$T2 = -80						; size = 4
$T3 = -76						; size = 4
$T4 = -72						; size = 4
$T5 = -68						; size = 4
$T6 = -64						; size = 4
$T7 = -60						; size = 4
_frame$ = -52						; size = 4
_decoder$ = -40						; size = 4
_hr$ = -32						; size = 4
_stream$ = -24						; size = 4
_pWIC$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_wicData$ = 16						; size = 4
_wicDataSize$ = 20					; size = 4
_maxsize$ = 24						; size = 4
_usage$ = 28						; size = 4
_bindFlags$ = 32					; size = 4
_cpuAccessFlags$ = 36					; size = 4
_miscFlags$ = 40					; size = 4
_forceSRGB$ = 44					; size = 1
_texture$ = 48						; size = 4
_textureView$ = 52					; size = 4
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromMemoryEx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 730
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 731
	cmp	DWORD PTR _texture$[ebp], 0
	je	SHORT $LN13@CreateWICT
; Line 733
	mov	eax, DWORD PTR _texture$[ebp]
	mov	DWORD PTR [eax], 0
$LN13@CreateWICT:
; Line 735
	cmp	DWORD PTR _textureView$[ebp], 0
	je	SHORT $LN12@CreateWICT
; Line 737
	mov	ecx, DWORD PTR _textureView$[ebp]
	mov	DWORD PTR [ecx], 0
$LN12@CreateWICT:
; Line 740
	cmp	DWORD PTR _d3dDevice$[ebp], 0
	je	SHORT $LN10@CreateWICT
	cmp	DWORD PTR _wicData$[ebp], 0
	je	SHORT $LN10@CreateWICT
	cmp	DWORD PTR _texture$[ebp], 0
	jne	SHORT $LN11@CreateWICT
	cmp	DWORD PTR _textureView$[ebp], 0
	jne	SHORT $LN11@CreateWICT
$LN10@CreateWICT:
; Line 741
	mov	eax, -2147024809			; 80070057H
	jmp	$LN14@CreateWICT
$LN11@CreateWICT:
; Line 743
	cmp	DWORD PTR _wicDataSize$[ebp], 0
	jne	SHORT $LN9@CreateWICT
; Line 744
	mov	eax, -2147467259			; 80004005H
	jmp	$LN14@CreateWICT
$LN9@CreateWICT:
; Line 751
	call	?_GetWIC@@YAPAUIWICImagingFactory@@XZ	; _GetWIC
	mov	DWORD PTR _pWIC$[ebp], eax
; Line 752
	cmp	DWORD PTR _pWIC$[ebp], 0
	jne	SHORT $LN8@CreateWICT
; Line 753
	mov	eax, -2147467262			; 80004002H
	jmp	$LN14@CreateWICT
$LN8@CreateWICT:
; Line 756
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??0?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::ComPtr<IWICStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 757
	lea	ecx, DWORD PTR _stream$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAEPAPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::GetAddressOf
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _pWIC$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pWIC$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 758
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@CreateWICT
; Line 759
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN14@CreateWICT
$LN7@CreateWICT:
; Line 761
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??C?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICStream@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICStream>::operator->
	mov	DWORD PTR tv91[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _wicDataSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wicData$[ebp]
	push	edx
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR tv91[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 762
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@CreateWICT
; Line 763
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN14@CreateWICT
$LN6@CreateWICT:
; Line 766
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??0?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::ComPtr<IWICBitmapDecoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 767
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAEPAPAUIWICBitmapDecoder@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _stream$[ebp]
	call	?Get@?$ComPtr@UIWICStream@@@WRL@Microsoft@@QBEPAUIWICStream@@XZ ; Microsoft::WRL::ComPtr<IWICStream>::Get
	push	eax
	mov	edx, DWORD PTR _pWIC$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pWIC$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 768
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@CreateWICT
; Line 769
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN14@CreateWICT
$LN5@CreateWICT:
; Line 771
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??0?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::ComPtr<IWICBitmapFrameDecode>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 772
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??C?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QBEPAV?$RemoveIUnknownBase@UIWICBitmapDecoder@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::operator->
	mov	DWORD PTR tv160[ebp], eax
	lea	ecx, DWORD PTR _frame$[ebp]
	call	?GetAddressOf@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAEPAPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::GetAddressOf
	mov	esi, esp
	push	eax
	push	0
	mov	ecx, DWORD PTR tv160[ebp]
	push	ecx
	mov	edx, DWORD PTR tv160[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 773
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@CreateWICT
; Line 774
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN14@CreateWICT
$LN4@CreateWICT:
; Line 778
	mov	eax, DWORD PTR _textureView$[ebp]
	push	eax
	mov	ecx, DWORD PTR _texture$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _forceSRGB$[ebp]
	push	edx
	mov	eax, DWORD PTR _miscFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cpuAccessFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bindFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _maxsize$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _frame$[ebp]
	call	?Get@?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QBEPAUIWICBitmapFrameDecode@@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::Get
	push	eax
	mov	edx, DWORD PTR _d3dContext$[ebp]
	push	edx
	mov	eax, DWORD PTR _d3dDevice$[ebp]
	push	eax
	call	?CreateTextureFromWIC@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PAUIWICBitmapFrameDecode@@IW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; CreateTextureFromWIC
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _hr$[ebp], eax
; Line 779
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateWICT
; Line 780
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN14@CreateWICT
$LN3@CreateWICT:
; Line 782
	cmp	DWORD PTR _texture$[ebp], 0
	je	SHORT $LN2@CreateWICT
	mov	edx, DWORD PTR _texture$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@CreateWICT
; Line 784
	push	OFFSET $SG156819
	mov	eax, DWORD PTR _texture$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
	add	esp, 8
$LN2@CreateWICT:
; Line 787
	cmp	DWORD PTR _textureView$[ebp], 0
	je	SHORT $LN1@CreateWICT
	mov	edx, DWORD PTR _textureView$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@CreateWICT
; Line 789
	push	OFFSET $SG156821
	mov	eax, DWORD PTR _textureView$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$SetDebugObjectName@$0BB@@@YAXPAUID3D11DeviceChild@@AAY0BB@$$CBD@Z ; SetDebugObjectName<17>
	add	esp, 8
$LN1@CreateWICT:
; Line 792
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _frame$[ebp]
	call	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _decoder$[ebp]
	call	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
	mov	eax, DWORD PTR $T2[ebp]
$LN14@CreateWICT:
; Line 793
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@CreateWICT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@CreateWICT:
	DD	3
	DD	$LN23@CreateWICT
$LN23@CreateWICT:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN19@CreateWICT
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN20@CreateWICT
	DD	-52					; ffffffccH
	DD	4
	DD	$LN21@CreateWICT
$LN21@CreateWICT:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN20@CreateWICT:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN19@CreateWICT:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$0:
	lea	ecx, DWORD PTR _stream$[ebp]
	jmp	??1?$ComPtr@UIWICStream@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICStream>::~ComPtr<IWICStream>
__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$1:
	lea	ecx, DWORD PTR _decoder$[ebp]
	jmp	??1?$ComPtr@UIWICBitmapDecoder@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapDecoder>::~ComPtr<IWICBitmapDecoder>
__unwindfunclet$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z$2:
	lea	ecx, DWORD PTR _frame$[ebp]
	jmp	??1?$ComPtr@UIWICBitmapFrameDecode@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IWICBitmapFrameDecode>::~ComPtr<IWICBitmapFrameDecode>
__ehhandler$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromMemoryEx
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_fileName$ = 12						; size = 4
_maxsize$ = 16						; size = 4
_usage$ = 20						; size = 4
_bindFlags$ = 24					; size = 4
_cpuAccessFlags$ = 28					; size = 4
_miscFlags$ = 32					; size = 4
_forceSRGB$ = 36					; size = 1
_texture$ = 40						; size = 4
_textureView$ = 44					; size = 4
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromFileEx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 832
	push	ebp
	mov	ebp, esp
; Line 835
	mov	eax, DWORD PTR _textureView$[ebp]
	push	eax
	mov	ecx, DWORD PTR _texture$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _forceSRGB$[ebp]
	push	edx
	mov	eax, DWORD PTR _miscFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cpuAccessFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bindFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _maxsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileName$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _d3dDevice$[ebp]
	push	eax
	call	?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
	add	esp, 44					; 0000002cH
; Line 836
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromFileEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_wicData$ = 12						; size = 4
_wicDataSize$ = 16					; size = 4
_maxsize$ = 20						; size = 4
_usage$ = 24						; size = 4
_bindFlags$ = 28					; size = 4
_cpuAccessFlags$ = 32					; size = 4
_miscFlags$ = 36					; size = 4
_forceSRGB$ = 40					; size = 1
_texture$ = 44						; size = 4
_textureView$ = 48					; size = 4
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z PROC ; DirectX::CreateWICTextureFromMemoryEx
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 711
	push	ebp
	mov	ebp, esp
; Line 714
	mov	eax, DWORD PTR _textureView$[ebp]
	push	eax
	mov	ecx, DWORD PTR _texture$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _forceSRGB$[ebp]
	push	edx
	mov	eax, DWORD PTR _miscFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cpuAccessFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bindFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _maxsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wicDataSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _wicData$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _d3dDevice$[ebp]
	push	ecx
	call	?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
	add	esp, 48					; 00000030H
; Line 715
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ENDP ; DirectX::CreateWICTextureFromMemoryEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_fileName$ = 16						; size = 4
_texture$ = 20						; size = 4
_textureView$ = 24					; size = 4
_maxsize$ = 28						; size = 4
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromFile
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 815
	push	ebp
	mov	ebp, esp
; Line 818
	mov	eax, DWORD PTR _textureView$[ebp]
	push	eax
	mov	ecx, DWORD PTR _texture$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	push	8
	push	0
	mov	edx, DWORD PTR _maxsize$[ebp]
	push	edx
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d3dContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d3dDevice$[ebp]
	push	edx
	call	?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
	add	esp, 44					; 0000002cH
; Line 819
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_d3dContext$ = 12					; size = 4
_wicData$ = 16						; size = 4
_wicDataSize$ = 20					; size = 4
_texture$ = 24						; size = 4
_textureView$ = 28					; size = 4
_maxsize$ = 32						; size = 4
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromMemory
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 693
	push	ebp
	mov	ebp, esp
; Line 696
	mov	eax, DWORD PTR _textureView$[ebp]
	push	eax
	mov	ecx, DWORD PTR _texture$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	push	8
	push	0
	mov	edx, DWORD PTR _maxsize$[ebp]
	push	edx
	mov	eax, DWORD PTR _wicDataSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wicData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d3dContext$[ebp]
	push	edx
	mov	eax, DWORD PTR _d3dDevice$[ebp]
	push	eax
	call	?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
	add	esp, 48					; 00000030H
; Line 697
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_fileName$ = 12						; size = 4
_texture$ = 16						; size = 4
_textureView$ = 20					; size = 4
_maxsize$ = 24						; size = 4
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromFile
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 802
	push	ebp
	mov	ebp, esp
; Line 805
	mov	eax, DWORD PTR _textureView$[ebp]
	push	eax
	mov	ecx, DWORD PTR _texture$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	push	8
	push	0
	mov	edx, DWORD PTR _maxsize$[ebp]
	push	edx
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _d3dDevice$[ebp]
	push	ecx
	call	?CreateWICTextureFromFileEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromFileEx
	add	esp, 44					; 0000002cH
; Line 806
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d3dDevice$ = 8						; size = 4
_wicData$ = 12						; size = 4
_wicDataSize$ = 16					; size = 4
_texture$ = 20						; size = 4
_textureView$ = 24					; size = 4
_maxsize$ = 28						; size = 4
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z PROC ; DirectX::CreateWICTextureFromMemory
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\wictextureloader.cpp
; Line 679
	push	ebp
	mov	ebp, esp
; Line 682
	mov	eax, DWORD PTR _textureView$[ebp]
	push	eax
	mov	ecx, DWORD PTR _texture$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	push	8
	push	0
	mov	edx, DWORD PTR _maxsize$[ebp]
	push	edx
	mov	eax, DWORD PTR _wicDataSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wicData$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _d3dDevice$[ebp]
	push	edx
	call	?CreateWICTextureFromMemoryEx@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PBEIIW4D3D11_USAGE@@III_NPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@@Z ; DirectX::CreateWICTextureFromMemoryEx
	add	esp, 48					; 00000030H
; Line 683
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CreateWICTextureFromMemory@DirectX@@YAJPAUID3D11Device@@PBEIPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ENDP ; DirectX::CreateWICTextureFromMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z PROC	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ENDP	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -12						; size = 4
_ref$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\winrt\wrl\client.h
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	DWORD PTR _ref$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 183
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN1@InternalRe
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 186
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN1@InternalRe:
; Line 189
	mov	eax, DWORD PTR _ref$[ebp]
; Line 190
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _PropVariantInit
_TEXT	SEGMENT
_pvar$ = 8						; size = 4
_PropVariantInit PROC					; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\propidl.h
; Line 1184
	push	ebp
	mov	ebp, esp
; Line 1185
	xor	eax, eax
	mov	ecx, DWORD PTR _pvar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
; Line 1186
	pop	ebp
	ret	0
_PropVariantInit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; Line 26297
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string.h
; Line 226
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
__Str$ = 8						; size = 4
__MaxCount$ = 12					; size = 4
_strnlen_s PROC
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string.h
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 132
	cmp	DWORD PTR __Str$[ebp], 0
	jne	SHORT $LN3@strnlen_s
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@strnlen_s
$LN3@strnlen_s:
	mov	esi, esp
	mov	eax, DWORD PTR __MaxCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strnlen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv68[ebp], eax
$LN4@strnlen_s:
	mov	eax, DWORD PTR tv68[ebp]
; Line 133
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_strnlen_s ENDP
_TEXT	ENDS
END
