; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\New Scratch\DXUT\Optional\DXUTguiIME.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A	; CDXUTIMEEditBox::s_ptCompString
PUBLIC	?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA	; CDXUTIMEEditBox::s_nFirstTargetConv
PUBLIC	?s_adwCompStringClause@CDXUTIMEEditBox@@1PAKA	; CDXUTIMEEditBox::s_adwCompStringClause
PUBLIC	?s_wszReadingString@CDXUTIMEEditBox@@1PA_WA	; CDXUTIMEEditBox::s_wszReadingString
PUBLIC	?s_bImeFlag@CDXUTIMEEditBox@@1_NA		; CDXUTIMEEditBox::s_bImeFlag
PUBLIC	?m_bIMEStaticMsgProcCalled@CDXUTIMEEditBox@@1_NA ; CDXUTIMEEditBox::m_bIMEStaticMsgProcCalled
_BSS	SEGMENT
?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A DQ 01H DUP (?) ; CDXUTIMEEditBox::s_ptCompString
?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA DD 01H DUP (?)	; CDXUTIMEEditBox::s_nFirstTargetConv
?s_adwCompStringClause@CDXUTIMEEditBox@@1PAKA DD 0100H DUP (?) ; CDXUTIMEEditBox::s_adwCompStringClause
?s_wszReadingString@CDXUTIMEEditBox@@1PA_WA DW 020H DUP (?) ; CDXUTIMEEditBox::s_wszReadingString
?m_bIMEStaticMsgProcCalled@CDXUTIMEEditBox@@1_NA DB 01H DUP (?) ; CDXUTIMEEditBox::m_bIMEStaticMsgProcCalled
_BSS	ENDS
_DATA	SEGMENT
?s_bImeFlag@CDXUTIMEEditBox@@1_NA DB 01H		; CDXUTIMEEditBox::s_bImeFlag
_DATA	ENDS
CONST	SEGMENT
$SG159823 DB	00H, 00H
	ORG $+2
$SG159835 DB	'%', 00H, 's', 00H, ' ', 00H, 00H, 00H
$SG159928 DB	'E', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG159936 DB	'E', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG159600 DB	00H, 00H
	ORG $+2
$SG159628 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'P', 00H
	DB	'U', 00H, 'T', 00H, 'L', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'C'
	DB	00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H, 'E', 00H, 0aH, 00H
	DB	00H, 00H
$SG159630 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'E', 00H, 'T', 00H, 'C', 00H, 'O', 00H, 'N'
	DB	00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG159632 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'R', 00H, 'T', 00H, 'C'
	DB	00H, 'O', 00H, 'M', 00H, 'P', 00H, 'O', 00H, 'S', 00H, 'I', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG159634 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'E', 00H, 'N', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M'
	DB	00H, 'P', 00H, 'O', 00H, 'S', 00H, 'I', 00H, 'T', 00H, 'I', 00H
	DB	'O', 00H, 'N', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG159636 DB	'W', 00H, 'M', 00H, '_', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'_', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'O', 00H, 'S'
	DB	00H, 'I', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+4
$SG159737 DB	'T', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'x', 00H
	DB	',', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' '
	DB	00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'M', 00H, 'a', 00H, 'n', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 'r'
	DB	00H, ':', 00H, ':', 00H, 'M', 00H, 's', 00H, 'g', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'c', 00H, '(', 00H, ')', 00H, ' ', 00H, 'f'
	DB	00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG159738 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, 'I', 00H, 'M', 00H, 'E', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG159739 DB	'm', 00H, '_', 00H, 'b', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'M'
	DB	00H, 's', 00H, 'g', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'C', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'L', 00H, '"', 00H, 'T', 00H
	DB	'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'x', 00H, ',', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'C', 00H
	DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a'
	DB	00H, 'l', 00H, 'o', 00H, 'g', 00H, 'R', 00H, 'e', 00H, 's', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'M', 00H, 'a'
	DB	00H, 'n', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, ':', 00H
	DB	':', 00H, 'M', 00H, 's', 00H, 'g', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'c', 00H, '(', 00H, ')', 00H, ' ', 00H, 'f', 00H, 'i', 00H
	DB	'r', 00H, 's', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??0XMFLOAT4@DirectX@@QAE@XZ			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??0DXUTBlendColor@@QAE@XZ			; DXUTBlendColor::DXUTBlendColor
PUBLIC	??0CDXUTElement@@QAE@XZ				; CDXUTElement::CDXUTElement
PUBLIC	?GetWidth@CDXUTDialog@@QBEHXZ			; CDXUTDialog::GetWidth
PUBLIC	?GetHeight@CDXUTDialog@@QBEHXZ			; CDXUTDialog::GetHeight
PUBLIC	?OnInit@CDXUTControl@@UAEJXZ			; CDXUTControl::OnInit
PUBLIC	?OnFocusOut@CDXUTControl@@UAEXXZ		; CDXUTControl::OnFocusOut
PUBLIC	?OnMouseEnter@CDXUTControl@@UAEXXZ		; CDXUTControl::OnMouseEnter
PUBLIC	?OnMouseLeave@CDXUTControl@@UAEXXZ		; CDXUTControl::OnMouseLeave
PUBLIC	?OnHotkey@CDXUTControl@@UAEXXZ			; CDXUTControl::OnHotkey
PUBLIC	?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z ; CDXUTControl::ContainsPoint
PUBLIC	?SetEnabled@CDXUTControl@@UAEX_N@Z		; CDXUTControl::SetEnabled
PUBLIC	?GetEnabled@CDXUTControl@@UBE_NXZ		; CDXUTControl::GetEnabled
PUBLIC	?SetVisible@CDXUTControl@@UAEX_N@Z		; CDXUTControl::SetVisible
PUBLIC	?GetVisible@CDXUTControl@@UBE_NXZ		; CDXUTControl::GetVisible
PUBLIC	?SetID@CDXUTControl@@QAEXH@Z			; CDXUTControl::SetID
PUBLIC	?SetLocation@CDXUTControl@@QAEXHH@Z		; CDXUTControl::SetLocation
PUBLIC	?SetSize@CDXUTControl@@QAEXHH@Z			; CDXUTControl::SetSize
PUBLIC	?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
PUBLIC	?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
PUBLIC	??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
PUBLIC	??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
PUBLIC	?GetTextSize@CUniBuffer@@QBEHXZ			; CUniBuffer::GetTextSize
PUBLIC	?GetBuffer@CUniBuffer@@QBEPB_WXZ		; CUniBuffer::GetBuffer
PUBLIC	?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z ; CUniBuffer::SetFontNode
PUBLIC	?CanHaveFocus@CDXUTEditBox@@UAE_NXZ		; CDXUTEditBox::CanHaveFocus
PUBLIC	?SetTextColor@CDXUTEditBox@@UAEXK@Z		; CDXUTEditBox::SetTextColor
PUBLIC	?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z ; CDXUTIMEEditBox::CreateIMEEditBox
PUBLIC	??0CDXUTIMEEditBox@@QAE@PAVCDXUTDialog@@@Z	; CDXUTIMEEditBox::CDXUTIMEEditBox
PUBLIC	??1CDXUTIMEEditBox@@UAE@XZ			; CDXUTIMEEditBox::~CDXUTIMEEditBox
PUBLIC	?InitDefaultElements@CDXUTIMEEditBox@@SAXPAVCDXUTDialog@@@Z ; CDXUTIMEEditBox::InitDefaultElements
PUBLIC	?Initialize@CDXUTIMEEditBox@@SGXPAUHWND__@@@Z	; CDXUTIMEEditBox::Initialize
PUBLIC	?StaticMsgProc@CDXUTIMEEditBox@@SG_NPAUHWND__@@IIJ@Z ; CDXUTIMEEditBox::StaticMsgProc
PUBLIC	?SetImeEnableFlag@CDXUTIMEEditBox@@SGX_N@Z	; CDXUTIMEEditBox::SetImeEnableFlag
PUBLIC	?Render@CDXUTIMEEditBox@@UAEXM@Z		; CDXUTIMEEditBox::Render
PUBLIC	?MsgProc@CDXUTIMEEditBox@@UAE_NIIJ@Z		; CDXUTIMEEditBox::MsgProc
PUBLIC	?HandleMouse@CDXUTIMEEditBox@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTIMEEditBox::HandleMouse
PUBLIC	?UpdateRects@CDXUTIMEEditBox@@UAEXXZ		; CDXUTIMEEditBox::UpdateRects
PUBLIC	?OnFocusIn@CDXUTIMEEditBox@@UAEXXZ		; CDXUTIMEEditBox::OnFocusIn
PUBLIC	?OnFocusOut@CDXUTIMEEditBox@@UAEXXZ		; CDXUTIMEEditBox::OnFocusOut
PUBLIC	?PumpMessage@CDXUTIMEEditBox@@QAEXXZ		; CDXUTIMEEditBox::PumpMessage
PUBLIC	?RenderCandidateReadingWindow@CDXUTIMEEditBox@@UAEX_N@Z ; CDXUTIMEEditBox::RenderCandidateReadingWindow
PUBLIC	?RenderComposition@CDXUTIMEEditBox@@UAEXXZ	; CDXUTIMEEditBox::RenderComposition
PUBLIC	?RenderIndicator@CDXUTIMEEditBox@@UAEXM@Z	; CDXUTIMEEditBox::RenderIndicator
PUBLIC	?EnableImeSystem@CDXUTIMEEditBox@@KGX_N@Z	; CDXUTIMEEditBox::EnableImeSystem
PUBLIC	?GetLanguage@CDXUTIMEEditBox@@KGGXZ		; CDXUTIMEEditBox::GetLanguage
PUBLIC	?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ	; CDXUTIMEEditBox::GetPrimaryLanguage
PUBLIC	?SendKey@CDXUTIMEEditBox@@KGXE@Z		; CDXUTIMEEditBox::SendKey
PUBLIC	?GetImeId@CDXUTIMEEditBox@@KGKI@Z		; CDXUTIMEEditBox::GetImeId
PUBLIC	?ResetCompositionString@CDXUTIMEEditBox@@KGXXZ	; CDXUTIMEEditBox::ResetCompositionString
PUBLIC	??0CCandList@CDXUTIMEEditBox@@QAE@XZ		; CDXUTIMEEditBox::CCandList::CCandList
PUBLIC	??1CCandList@CDXUTIMEEditBox@@QAE@XZ		; CDXUTIMEEditBox::CCandList::~CCandList
PUBLIC	??_GCDXUTIMEEditBox@@UAEPAXI@Z			; CDXUTIMEEditBox::`scalar deleting destructor'
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YAABHABH0@Z			; std::min<int>
PUBLIC	??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z	; std::_Debug_lt<int const &,int const &>
PUBLIC	??$forward@ABH@std@@YAABHABH@Z			; std::forward<int const &>
PUBLIC	??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
PUBLIC	??$?RABHABH@?$less@X@std@@QBE_NABH0@Z		; std::less<void>::operator()<int const &,int const &>
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A	; CDXUTIMEEditBox::s_CompString
PUBLIC	?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A	; CDXUTIMEEditBox::s_CandList
PUBLIC	??_7CDXUTIMEEditBox@@6B@			; CDXUTIMEEditBox::`vftable'
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@ ; `string'
PUBLIC	??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ ; `string'
PUBLIC	??_R4CDXUTIMEEditBox@@6B@			; CDXUTIMEEditBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTIMEEditBox@@@8			; CDXUTIMEEditBox `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTIMEEditBox@@8				; CDXUTIMEEditBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTIMEEditBox@@8				; CDXUTIMEEditBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTIMEEditBox@@8		; CDXUTIMEEditBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDXUTEditBox@@8			; CDXUTEditBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDXUTEditBox@@@8			; CDXUTEditBox `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTEditBox@@8				; CDXUTEditBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTEditBox@@8				; CDXUTEditBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTControl@@8			; CDXUTControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDXUTControl@@@8			; CDXUTControl `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTControl@@8				; CDXUTControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTControl@@8				; CDXUTControl::`RTTI Base Class Array'
PUBLIC	__real@3f19999a
PUBLIC	__real@3f333333
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp__wcscat_s:PROC
EXTRN	__imp__GetMessageW@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__PeekMessageW@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__keybd_event@16:PROC
EXTRN	__imp__SetRect@20:PROC
EXTRN	__imp__InflateRect@12:PROC
EXTRN	__imp__OffsetRect@12:PROC
EXTRN	__imp__PtInRect@12:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	??3@YAXPAXABUnothrow_t@std@@@Z:PROC		; operator delete
EXTRN	__imp__swprintf_s:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	?DXUTGetHWND@@YGPAUHWND__@@XZ:PROC		; DXUTGetHWND
EXTRN	?DXUTOutputDebugStringW@@YAXPB_WZZ:PROC		; DXUTOutputDebugStringW
EXTRN	?Blend@DXUTBlendColor@@QAEXIMM@Z:PROC		; DXUTBlendColor::Blend
EXTRN	?SetCurrent@DXUTBlendColor@@QAEXK@Z:PROC	; DXUTBlendColor::SetCurrent
EXTRN	?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z:PROC ; CDXUTElement::SetTexture
EXTRN	?SetFont@CDXUTElement@@QAEXIKK@Z:PROC		; CDXUTElement::SetFont
EXTRN	?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z:PROC ; CDXUTDialog::SetDefaultElement
EXTRN	?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z:PROC	; CDXUTDialog::DrawRect
EXTRN	?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z:PROC ; CDXUTDialog::DrawSprite
EXTRN	?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z:PROC ; CDXUTDialog::CalcTextRect
EXTRN	?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z:PROC ; CDXUTDialog::DrawTextW
EXTRN	?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z:PROC ; CDXUTDialog::GetFont
EXTRN	?Refresh@CDXUTControl@@UAEXXZ:PROC		; CDXUTControl::Refresh
EXTRN	??0CUniBuffer@@QAE@H@Z:PROC			; CUniBuffer::CUniBuffer
EXTRN	??1CUniBuffer@@QAE@XZ:PROC			; CUniBuffer::~CUniBuffer
EXTRN	?SetBufferSize@CUniBuffer@@QAE_NH@Z:PROC	; CUniBuffer::SetBufferSize
EXTRN	?SetText@CUniBuffer@@QAE_NPB_W@Z:PROC		; CUniBuffer::SetText
EXTRN	?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z:PROC		; CUniBuffer::CPtoX
EXTRN	?XtoCP@CUniBuffer@@QAE_NHPAH0@Z:PROC		; CUniBuffer::XtoCP
EXTRN	??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z:PROC	; CDXUTEditBox::CDXUTEditBox
EXTRN	??1CDXUTEditBox@@UAE@XZ:PROC			; CDXUTEditBox::~CDXUTEditBox
EXTRN	?HandleKeyboard@CDXUTEditBox@@UAE_NIIJ@Z:PROC	; CDXUTEditBox::HandleKeyboard
EXTRN	?HandleMouse@CDXUTEditBox@@UAE_NIABUtagPOINT@@IJ@Z:PROC ; CDXUTEditBox::HandleMouse
EXTRN	?MsgProc@CDXUTEditBox@@UAE_NIIJ@Z:PROC		; CDXUTEditBox::MsgProc
EXTRN	?UpdateRects@CDXUTEditBox@@UAEXXZ:PROC		; CDXUTEditBox::UpdateRects
EXTRN	?Render@CDXUTEditBox@@UAEXM@Z:PROC		; CDXUTEditBox::Render
EXTRN	?OnFocusIn@CDXUTEditBox@@UAEXXZ:PROC		; CDXUTEditBox::OnFocusIn
EXTRN	?SetText@CDXUTEditBox@@QAEXPB_W_N@Z:PROC	; CDXUTEditBox::SetText
EXTRN	?ImeUi_Initialize@@YA_NPAUHWND__@@_N@Z:PROC	; ImeUi_Initialize
EXTRN	?ImeUi_Uninitialize@@YAXXZ:PROC			; ImeUi_Uninitialize
EXTRN	?ImeUi_ProcessMessage@@YAJPAUHWND__@@IIAAJPA_N@Z:PROC ; ImeUi_ProcessMessage
EXTRN	?ImeUi_RenderUI@@YAX_N0@Z:PROC			; ImeUi_RenderUI
EXTRN	?ImeUi_EnableIme@@YAX_N@Z:PROC			; ImeUi_EnableIme
EXTRN	?ImeUi_IsEnabled@@YA_NXZ:PROC			; ImeUi_IsEnabled
EXTRN	?ImeUi_FinalizeString@@YAX_N@Z:PROC		; ImeUi_FinalizeString
EXTRN	?ImeUi_GetPrimaryLanguage@@YAGXZ:PROC		; ImeUi_GetPrimaryLanguage
EXTRN	?ImeUi_GetImeId@@YAKI@Z:PROC			; ImeUi_GetImeId
EXTRN	?ImeUi_GetLanguage@@YAGXZ:PROC			; ImeUi_GetLanguage
EXTRN	?ImeUi_GetIndicatior@@YAPA_WXZ:PROC		; ImeUi_GetIndicatior
EXTRN	?ImeUi_IsShowReadingWindow@@YA_NXZ:PROC		; ImeUi_IsShowReadingWindow
EXTRN	?ImeUi_IsShowCandListWindow@@YA_NXZ:PROC	; ImeUi_IsShowCandListWindow
EXTRN	?ImeUi_IsVerticalCand@@YA_NXZ:PROC		; ImeUi_IsVerticalCand
EXTRN	?ImeUi_IsHorizontalReading@@YA_NXZ:PROC		; ImeUi_IsHorizontalReading
EXTRN	?ImeUi_GetCandidate@@YAPA_WI@Z:PROC		; ImeUi_GetCandidate
EXTRN	?ImeUi_GetCompositionString@@YAPA_WXZ:PROC	; ImeUi_GetCompositionString
EXTRN	?ImeUi_GetCandidateSelection@@YAKXZ:PROC	; ImeUi_GetCandidateSelection
EXTRN	?ImeUi_GetCandidateCount@@YAKXZ:PROC		; ImeUi_GetCandidateCount
EXTRN	?ImeUi_GetCompStringAttr@@YAPAEXZ:PROC		; ImeUi_GetCompStringAttr
EXTRN	?ImeUi_GetImeCursorChars@@YAKXZ:PROC		; ImeUi_GetImeCursorChars
EXTRN	??_ECDXUTIMEEditBox@@UAEPAXI@Z:PROC		; CDXUTIMEEditBox::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?s_bHideCaret@CDXUTEditBox@@1_NA:BYTE		; CDXUTEditBox::s_bHideCaret
EXTRN	?ImeUiCallback_DrawRect@@3P6GXHHHHK@ZA:DWORD	; ImeUiCallback_DrawRect
EXTRN	?ImeUiCallback_Malloc@@3P6APAXI@ZA:DWORD	; ImeUiCallback_Malloc
EXTRN	?ImeUiCallback_Free@@3P6AXPAX@ZA:DWORD		; ImeUiCallback_Free
EXTRN	?ImeUiCallback_DrawFans@@3P6GXPBUIMEUI_VERTEX@@I@ZA:DWORD ; ImeUiCallback_DrawFans
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
	ALIGN	4

?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A DB 014H DUP (?) ; CDXUTIMEEditBox::s_CompString
?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A DB 02cH DUP (?) ; CDXUTIMEEditBox::s_CandList
_BSS	ENDS
CRT$XCU	SEGMENT
?s_CompString$initializer$@CDXUTIMEEditBox@@1P6AXXZA DD FLAT:??__E?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ ; CDXUTIMEEditBox::s_CompString$initializer$
CRT$XCU	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2CDXUTControl@@8
rdata$r	SEGMENT
??_R2CDXUTControl@@8 DD FLAT:??_R1A@?0A@EA@CDXUTControl@@8 ; CDXUTControl::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDXUTControl@@8
rdata$r	SEGMENT
??_R3CDXUTControl@@8 DD 00H				; CDXUTControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTControl@@@8
data$r	SEGMENT
??_R0?AVCDXUTControl@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTControl@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTControl@@8 DD FLAT:??_R0?AVCDXUTControl@@@8 ; CDXUTControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTEditBox@@8
rdata$r	SEGMENT
??_R2CDXUTEditBox@@8 DD FLAT:??_R1A@?0A@EA@CDXUTEditBox@@8 ; CDXUTEditBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTEditBox@@8
rdata$r	SEGMENT
??_R3CDXUTEditBox@@8 DD 00H				; CDXUTEditBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDXUTEditBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTEditBox@@@8
data$r	SEGMENT
??_R0?AVCDXUTEditBox@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTEditBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTEditBox@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTEditBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTEditBox@@8 DD FLAT:??_R0?AVCDXUTEditBox@@@8 ; CDXUTEditBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTEditBox@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTIMEEditBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTIMEEditBox@@8 DD FLAT:??_R0?AVCDXUTIMEEditBox@@@8 ; CDXUTIMEEditBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTIMEEditBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTIMEEditBox@@8
rdata$r	SEGMENT
??_R2CDXUTIMEEditBox@@8 DD FLAT:??_R1A@?0A@EA@CDXUTIMEEditBox@@8 ; CDXUTIMEEditBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTEditBox@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTIMEEditBox@@8
rdata$r	SEGMENT
??_R3CDXUTIMEEditBox@@8 DD 00H				; CDXUTIMEEditBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CDXUTIMEEditBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTIMEEditBox@@@8
data$r	SEGMENT
??_R0?AVCDXUTIMEEditBox@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTIMEEditBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTIMEEditBox@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTIMEEditBox@@6B@
rdata$r	SEGMENT
??_R4CDXUTIMEEditBox@@6B@ DD 00H			; CDXUTIMEEditBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTIMEEditBox@@@8
	DD	FLAT:??_R3CDXUTIMEEditBox@@8
rdata$r	ENDS
;	COMDAT ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H, 'g'
	DB	00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@
CONST	SEGMENT
??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'E'
	DB	00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CDXUTIMEEditBox@@6B@
CONST	SEGMENT
??_7CDXUTIMEEditBox@@6B@ DD FLAT:??_R4CDXUTIMEEditBox@@6B@ ; CDXUTIMEEditBox::`vftable'
	DD	FLAT:??_ECDXUTIMEEditBox@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTIMEEditBox@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTIMEEditBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTEditBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTIMEEditBox@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTEditBox@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTIMEEditBox@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTIMEEditBox@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTControl@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTEditBox@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTIMEEditBox@@UAEXXZ
	DD	FLAT:?RenderCandidateReadingWindow@CDXUTIMEEditBox@@UAEX_N@Z
	DD	FLAT:?RenderComposition@CDXUTIMEEditBox@@UAEXXZ
	DD	FLAT:?RenderIndicator@CDXUTIMEEditBox@@UAEXM@Z
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z$0
__ehfuncinfo$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?s_CandList$initializer$@CDXUTIMEEditBox@@1P6AXXZA DD FLAT:??__E?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ ; CDXUTIMEEditBox::s_CandList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?RABHABH@?$less@X@std@@QBE_NABH0@Z PROC		; std::less<void>::operator()<int const &,int const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 263
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 268
  00017	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00021	7d 09		 jge	 SHORT $LN3@operator
  00023	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  0002a	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN4@operator:
  00033	8a 45 f8	 mov	 al, BYTE PTR tv65[ebp]
; Line 269
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ENDP		; std::less<void>::operator()<int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 520
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 521
  00004	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0001a	83 c4 04	 add	 esp, 4
  0001d	50		 push	 eax
  0001e	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  00021	e8 00 00 00 00	 call	 ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ; std::less<void>::operator()<int const &,int const &>
  00026	0f b6 d0	 movzx	 edx, al
  00029	85 d2		 test	 edx, edx
  0002b	75 06		 jne	 SHORT $LN3@Debug_lt_p
; Line 522
  0002d	32 c0		 xor	 al, al
  0002f	eb 4c		 jmp	 SHORT $LN4@Debug_lt_p
  00031	eb 48		 jmp	 SHORT $LN2@Debug_lt_p
$LN3@Debug_lt_p:
; Line 523
  00033	8b 45 0c	 mov	 eax, DWORD PTR __Left$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0003c	83 c4 04	 add	 esp, 4
  0003f	50		 push	 eax
  00040	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  00050	e8 00 00 00 00	 call	 ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ; std::less<void>::operator()<int const &,int const &>
  00055	0f b6 d0	 movzx	 edx, al
  00058	85 d2		 test	 edx, edx
  0005a	74 1f		 je	 SHORT $LN2@Debug_lt_p
; Line 524
  0005c	8b f4		 mov	 esi, esp
  0005e	8b 45 18	 mov	 eax, DWORD PTR __Line$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 14	 mov	 ecx, DWORD PTR __File$[ebp]
  00065	51		 push	 ecx
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
  00074	3b f4		 cmp	 esi, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_lt_p:
; Line 525
  0007b	b0 01		 mov	 al, 1
$LN4@Debug_lt_p:
; Line 526
  0007d	5e		 pop	 esi
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABH@std@@YAABHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABH@std@@YAABHABH@Z PROC			; std::forward<int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABH@std@@YAABHABH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z PROC		; std::_Debug_lt<int const &,int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 534
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00017	52		 push	 edx
  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0002e	83 c4 04	 add	 esp, 4
  00031	50		 push	 eax
  00032	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
  0003c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 535
  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ENDP		; std::_Debug_lt<int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$min@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YAABHABH0@Z PROC				; std::min<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4121
  00014	68 19 10 00 00	 push	 4121			; 00001019H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ; std::_Debug_lt<int const &,int const &>
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	0f b6 d0	 movzx	 edx, al
  00031	85 d2		 test	 edx, edx
  00033	74 08		 je	 SHORT $LN3@min
  00035	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00038	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0003b	eb 06		 jmp	 SHORT $LN4@min
$LN3@min:
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00040	89 4d f8	 mov	 DWORD PTR tv71[ebp], ecx
$LN4@min:
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv71[ebp]
  00046	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
; Line 4122
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$min@H@std@@YAABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4087
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4088
  00014	68 f8 0f 00 00	 push	 4088			; 00000ff8H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ; std::_Debug_lt<int const &,int const &>
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	0f b6 d0	 movzx	 edx, al
  00031	85 d2		 test	 edx, edx
  00033	74 08		 je	 SHORT $LN3@max
  00035	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00038	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0003b	eb 06		 jmp	 SHORT $LN4@max
$LN3@max:
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00040	89 4d f8	 mov	 DWORD PTR tv71[ebp], ecx
$LN4@max:
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv71[ebp]
  00046	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
; Line 4089
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ
text$yd	SEGMENT
??__F?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CDXUTIMEEditBox::s_CandList'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  00008	e8 00 00 00 00	 call	 ??1CCandList@CDXUTIMEEditBox@@QAE@XZ
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CDXUTIMEEditBox::s_CandList''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ
text$di	SEGMENT
??__E?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ PROC ; `dynamic initializer for 'CDXUTIMEEditBox::s_CandList'', COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 33
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  00008	e8 00 00 00 00	 call	 ??0CCandList@CDXUTIMEEditBox@@QAE@XZ
  0000d	68 00 00 00 00	 push	 OFFSET ??__F?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ ; `dynamic atexit destructor for 'CDXUTIMEEditBox::s_CandList''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A@@YAXXZ ENDP ; `dynamic initializer for 'CDXUTIMEEditBox::s_CandList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ
text$yd	SEGMENT
??__F?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CDXUTIMEEditBox::s_CompString'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00008	e8 00 00 00 00	 call	 ??1CUniBuffer@@QAE@XZ	; CUniBuffer::~CUniBuffer
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CDXUTIMEEditBox::s_CompString''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ
text$di	SEGMENT
??__E?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ PROC ; `dynamic initializer for 'CDXUTIMEEditBox::s_CompString'', COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 30
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  0000a	e8 00 00 00 00	 call	 ??0CUniBuffer@@QAE@H@Z	; CUniBuffer::CUniBuffer
  0000f	68 00 00 00 00	 push	 OFFSET ??__F?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ ; `dynamic atexit destructor for 'CDXUTIMEEditBox::s_CompString''
  00014	e8 00 00 00 00	 call	 _atexit
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??__E?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A@@YAXXZ ENDP ; `dynamic initializer for 'CDXUTIMEEditBox::s_CompString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTIMEEditBox@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTIMEEditBox@@UAEPAXI@Z PROC			; CDXUTIMEEditBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTIMEEditBox@@UAE@XZ ; CDXUTIMEEditBox::~CDXUTIMEEditBox
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTIMEEditBox@@UAEPAXI@Z ENDP			; CDXUTIMEEditBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCandList@CDXUTIMEEditBox@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCandList@CDXUTIMEEditBox@@QAE@XZ PROC		; CDXUTIMEEditBox::CCandList::~CCandList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CUniBuffer@@QAE@XZ	; CUniBuffer::~CUniBuffer
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CCandList@CDXUTIMEEditBox@@QAE@XZ ENDP		; CDXUTIMEEditBox::CCandList::~CCandList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCandList@CDXUTIMEEditBox@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCandList@CDXUTIMEEditBox@@QAE@XZ PROC		; CDXUTIMEEditBox::CCandList::CCandList, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 01		 push	 1
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CUniBuffer@@QAE@H@Z	; CUniBuffer::CUniBuffer
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0CCandList@CDXUTIMEEditBox@@QAE@XZ ENDP		; CDXUTIMEEditBox::CCandList::CCandList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?ResetCompositionString@CDXUTIMEEditBox@@KGXXZ PROC	; CDXUTIMEEditBox::ResetCompositionString
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 211
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 212
  00003	68 00 00 00 00	 push	 OFFSET $SG159600
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  0000d	e8 00 00 00 00	 call	 ?SetText@CUniBuffer@@QAE_NPB_W@Z ; CUniBuffer::SetText
; Line 213
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?ResetCompositionString@CDXUTIMEEditBox@@KGXXZ ENDP	; CDXUTIMEEditBox::ResetCompositionString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetImeId@CDXUTIMEEditBox@@KGKI@Z
_TEXT	SEGMENT
_uIndex$ = 8						; size = 4
?GetImeId@CDXUTIMEEditBox@@KGKI@Z PROC			; CDXUTIMEEditBox::GetImeId, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.h
; Line 77
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 78
  00003	8b 45 08	 mov	 eax, DWORD PTR _uIndex$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?ImeUi_GetImeId@@YAKI@Z	; ImeUi_GetImeId
  0000c	83 c4 04	 add	 esp, 4
; Line 79
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?GetImeId@CDXUTIMEEditBox@@KGKI@Z ENDP			; CDXUTIMEEditBox::GetImeId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nVirtKey$ = 8						; size = 1
?SendKey@CDXUTIMEEditBox@@KGXE@Z PROC			; CDXUTIMEEditBox::SendKey
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 153
  00004	8b f4		 mov	 esi, esp
  00006	6a 00		 push	 0
  00008	6a 00		 push	 0
  0000a	6a 00		 push	 0
  0000c	0f b6 45 08	 movzx	 eax, BYTE PTR _nVirtKey$[ebp]
  00010	50		 push	 eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__keybd_event@16
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 154
  0001e	8b f4		 mov	 esi, esp
  00020	6a 00		 push	 0
  00022	6a 02		 push	 2
  00024	6a 00		 push	 0
  00026	0f b6 4d 08	 movzx	 ecx, BYTE PTR _nVirtKey$[ebp]
  0002a	51		 push	 ecx
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__keybd_event@16
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 155
  00038	5e		 pop	 esi
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?SendKey@CDXUTIMEEditBox@@KGXE@Z ENDP			; CDXUTIMEEditBox::SendKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ
_TEXT	SEGMENT
?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ PROC		; CDXUTIMEEditBox::GetPrimaryLanguage, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.h
; Line 72
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 73
  00003	e8 00 00 00 00	 call	 ?ImeUi_GetPrimaryLanguage@@YAGXZ ; ImeUi_GetPrimaryLanguage
; Line 74
  00008	3b ec		 cmp	 ebp, esp
  0000a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ ENDP		; CDXUTIMEEditBox::GetPrimaryLanguage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetLanguage@CDXUTIMEEditBox@@KGGXZ
_TEXT	SEGMENT
?GetLanguage@CDXUTIMEEditBox@@KGGXZ PROC		; CDXUTIMEEditBox::GetLanguage, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.h
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 69
  00003	e8 00 00 00 00	 call	 ?ImeUi_GetLanguage@@YAGXZ ; ImeUi_GetLanguage
; Line 70
  00008	3b ec		 cmp	 ebp, esp
  0000a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetLanguage@CDXUTIMEEditBox@@KGGXZ ENDP		; CDXUTIMEEditBox::GetLanguage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bEnable$ = 8						; size = 1
?EnableImeSystem@CDXUTIMEEditBox@@KGX_N@Z PROC		; CDXUTIMEEditBox::EnableImeSystem
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 204
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?ImeUi_EnableIme@@YAX_N@Z ; ImeUi_EnableIme
  0000d	83 c4 04	 add	 esp, 4
; Line 205
  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?EnableImeSystem@CDXUTIMEEditBox@@KGX_N@Z ENDP		; CDXUTIMEEditBox::EnableImeSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv144 = -68						; size = 4
_pwszIndicator$ = -64					; size = 4
_rcCalc$ = -56						; size = 16
_rc$ = -32						; size = 16
_pElement$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fElapsedTime$ = 8					; size = 4
?RenderIndicator@CDXUTIMEEditBox@@UAEXM@Z PROC		; CDXUTIMEEditBox::RenderIndicator
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 900
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  0000c	b9 11 00 00 00	 mov	 ecx, 17			; 00000011H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 901
  00026	6a 09		 push	 9
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 20	 add	 ecx, 32			; 00000020H
  0002e	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00033	8b 00		 mov	 eax, DWORD PTR [eax]
  00035	89 45 f4	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 902
  00038	51		 push	 ecx
  00039	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00041	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00046	51		 push	 ecx
  00047	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	6a 00		 push	 0
  00053	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00056	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00059	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 904
  0005e	51		 push	 ecx
  0005f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 94 01 00
	00		 add	 ecx, 404		; 00000194H
  00075	51		 push	 ecx
  00076	8b 55 f4	 mov	 edx, DWORD PTR _pElement$[ebp]
  00079	52		 push	 edx
  0007a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00080	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 905
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	81 c1 94 01 00
	00		 add	 ecx, 404		; 00000194H
  0008e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00090	89 55 e0	 mov	 DWORD PTR _rc$[ebp], edx
  00093	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00096	89 45 e4	 mov	 DWORD PTR _rc$[ebp+4], eax
  00099	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0009c	89 55 e8	 mov	 DWORD PTR _rc$[ebp+8], edx
  0009f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000a2	89 45 ec	 mov	 DWORD PTR _rc$[ebp+12], eax
; Line 906
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  000ab	f7 da		 neg	 edx
  000ad	8b f4		 mov	 esi, esp
  000af	52		 push	 edx
  000b0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  000b6	f7 d9		 neg	 ecx
  000b8	51		 push	 ecx
  000b9	8d 55 e0	 lea	 edx, DWORD PTR _rc$[ebp]
  000bc	52		 push	 edx
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
  000c3	3b f4		 cmp	 esi, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 908
  000ca	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	8b 88 84 01 00
	00		 mov	 ecx, DWORD PTR [eax+388]
  000d3	51		 push	 ecx
  000d4	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  000d7	83 c1 44	 add	 ecx, 68			; 00000044H
  000da	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 912
  000df	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _rcCalc$[ebp], 0
  000e6	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _rcCalc$[ebp+4], 0
  000ed	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _rcCalc$[ebp+8], 0
  000f4	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _rcCalc$[ebp+12], 0
; Line 914
  000fb	e8 00 00 00 00	 call	 ?ImeUi_IsEnabled@@YA_NXZ ; ImeUi_IsEnabled
  00100	0f b6 d0	 movzx	 edx, al
  00103	85 d2		 test	 edx, edx
  00105	74 0a		 je	 SHORT $LN3@RenderIndi
  00107	e8 00 00 00 00	 call	 ?ImeUi_GetIndicatior@@YAPA_WXZ ; ImeUi_GetIndicatior
  0010c	89 45 bc	 mov	 DWORD PTR tv144[ebp], eax
  0010f	eb 07		 jmp	 SHORT $LN4@RenderIndi
$LN3@RenderIndi:
  00111	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], OFFSET $SG159928
$LN4@RenderIndi:
  00118	8b 45 bc	 mov	 eax, DWORD PTR tv144[ebp]
  0011b	89 45 c0	 mov	 DWORD PTR _pwszIndicator$[ebp], eax
; Line 916
  0011e	6a ff		 push	 -1
  00120	8d 4d c8	 lea	 ecx, DWORD PTR _rcCalc$[ebp]
  00123	51		 push	 ecx
  00124	8b 55 f4	 mov	 edx, DWORD PTR _pElement$[ebp]
  00127	52		 push	 edx
  00128	8b 45 c0	 mov	 eax, DWORD PTR _pwszIndicator$[ebp]
  0012b	50		 push	 eax
  0012c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012f	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00132	e8 00 00 00 00	 call	 ?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
; Line 917
  00137	6a 00		 push	 0
  00139	6a 00		 push	 0
  0013b	8d 55 e0	 lea	 edx, DWORD PTR _rc$[ebp]
  0013e	52		 push	 edx
  0013f	8b 45 f4	 mov	 eax, DWORD PTR _pElement$[ebp]
  00142	50		 push	 eax
  00143	8b 4d c0	 mov	 ecx, DWORD PTR _pwszIndicator$[ebp]
  00146	51		 push	 ecx
  00147	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0014a	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0014d	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 918
  00152	52		 push	 edx
  00153	8b cd		 mov	 ecx, ebp
  00155	50		 push	 eax
  00156	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@RenderIndi
  0015c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00161	58		 pop	 eax
  00162	5a		 pop	 edx
  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00168	33 cd		 xor	 ecx, ebp
  0016a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016f	83 c4 44	 add	 esp, 68			; 00000044H
  00172	3b ec		 cmp	 ebp, esp
  00174	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00179	8b e5		 mov	 esp, ebp
  0017b	5d		 pop	 ebp
  0017c	c2 04 00	 ret	 4
  0017f	90		 npad	 1
$LN8@RenderIndi:
  00180	02 00 00 00	 DD	 2
  00184	00 00 00 00	 DD	 $LN7@RenderIndi
$LN7@RenderIndi:
  00188	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0018c	10 00 00 00	 DD	 16			; 00000010H
  00190	00 00 00 00	 DD	 $LN5@RenderIndi
  00194	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00198	10 00 00 00	 DD	 16			; 00000010H
  0019c	00 00 00 00	 DD	 $LN6@RenderIndi
$LN6@RenderIndi:
  001a0	72		 DB	 114			; 00000072H
  001a1	63		 DB	 99			; 00000063H
  001a2	43		 DB	 67			; 00000043H
  001a3	61		 DB	 97			; 00000061H
  001a4	6c		 DB	 108			; 0000006cH
  001a5	63		 DB	 99			; 00000063H
  001a6	00		 DB	 0
$LN5@RenderIndi:
  001a7	72		 DB	 114			; 00000072H
  001a8	63		 DB	 99			; 00000063H
  001a9	00		 DB	 0
?RenderIndicator@CDXUTIMEEditBox@@UAEXM@Z ENDP		; CDXUTIMEEditBox::RenderIndicator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rcTarget$1 = -216					; size = 16
_nXRight$2 = -192					; size = 4
_nXLeft$3 = -180					; size = 4
_bkColor$4 = -172					; size = 4
_pcComp$ = -168						; size = 4
_pAttr$ = -164						; size = 4
_nCharFirst$ = -160					; size = 4
_nNumCharToDraw$5 = -156				; size = 4
_bTrail$6 = -148					; size = 4
_nLastInLine$7 = -136					; size = 4
_nCharLeft$ = -124					; size = 4
_pwszComp$ = -116					; size = 4
_TextColor$ = -112					; size = 4
_rcFirst$ = -104					; size = 16
_rc$ = -80						; size = 16
_pElement$ = -60					; size = 4
_nXFirst$ = -52						; size = 4
_nX$ = -40						; size = 4
_rcCaret$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?RenderComposition@CDXUTIMEEditBox@@UAEXXZ PROC		; CDXUTIMEEditBox::RenderComposition
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 724
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00012	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 726
  0002c	e8 00 00 00 00	 call	 ?ImeUi_GetCompositionString@@YAPA_WXZ ; ImeUi_GetCompositionString
  00031	50		 push	 eax
  00032	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00037	e8 00 00 00 00	 call	 ?SetText@CUniBuffer@@QAE_NPB_W@Z ; CUniBuffer::SetText
; Line 731
  0003c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _rcCaret$[ebp], 0
  00043	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _rcCaret$[ebp+4], 0
  0004a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rcCaret$[ebp+8], 0
  00051	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rcCaret$[ebp+12], 0
; Line 733
  00058	8d 45 d8	 lea	 eax, DWORD PTR _nX$[ebp]
  0005b	50		 push	 eax
  0005c	6a 00		 push	 0
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  00067	52		 push	 edx
  00068	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	83 c1 54	 add	 ecx, 84			; 00000054H
  0006e	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 734
  00073	8d 45 cc	 lea	 eax, DWORD PTR _nXFirst$[ebp]
  00076	50		 push	 eax
  00077	6a 00		 push	 0
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	8b 91 30 01 00
	00		 mov	 edx, DWORD PTR [ecx+304]
  00082	52		 push	 edx
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	83 c1 54	 add	 ecx, 84			; 00000054H
  00089	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 735
  0008e	6a 01		 push	 1
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	83 c1 20	 add	 ecx, 32			; 00000020H
  00096	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0009b	8b 00		 mov	 eax, DWORD PTR [eax]
  0009d	89 45 c4	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 742
  000a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  000a6	03 55 d8	 add	 edx, DWORD PTR _nX$[ebp]
  000a9	2b 55 cc	 sub	 edx, DWORD PTR _nXFirst$[ebp]
  000ac	89 55 b0	 mov	 DWORD PTR _rc$[ebp], edx
  000af	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  000b5	89 4d b4	 mov	 DWORD PTR _rc$[ebp+4], ecx
  000b8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bb	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  000be	03 45 d8	 add	 eax, DWORD PTR _nX$[ebp]
  000c1	2b 45 cc	 sub	 eax, DWORD PTR _nXFirst$[ebp]
  000c4	89 45 b8	 mov	 DWORD PTR _rc$[ebp+8], eax
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  000cd	89 55 bc	 mov	 DWORD PTR _rc$[ebp+12], edx
; Line 743
  000d0	6a ff		 push	 -1
  000d2	8d 45 b0	 lea	 eax, DWORD PTR _rc$[ebp]
  000d5	50		 push	 eax
  000d6	8b 4d c4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  000d9	51		 push	 ecx
  000da	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  000df	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  000e4	50		 push	 eax
  000e5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  000eb	e8 00 00 00 00	 call	 ?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
; Line 748
  000f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8b 4d b8	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  000f6	3b 48 78	 cmp	 ecx, DWORD PTR [eax+120]
  000f9	7e 24		 jle	 SHORT $LN20@RenderComp
; Line 749
  000fb	8b 55 bc	 mov	 edx, DWORD PTR _rc$[ebp+12]
  000fe	2b 55 b4	 sub	 edx, DWORD PTR _rc$[ebp+4]
  00101	8b f4		 mov	 esi, esp
  00103	52		 push	 edx
  00104	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  0010a	2b 4d b0	 sub	 ecx, DWORD PTR _rc$[ebp]
  0010d	51		 push	 ecx
  0010e	8d 55 b0	 lea	 edx, DWORD PTR _rc$[ebp]
  00111	52		 push	 edx
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00118	3b f4		 cmp	 esi, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN20@RenderComp:
; Line 752
  0011f	8b 45 b0	 mov	 eax, DWORD PTR _rc$[ebp]
  00122	89 45 98	 mov	 DWORD PTR _rcFirst$[ebp], eax
  00125	8b 4d b4	 mov	 ecx, DWORD PTR _rc$[ebp+4]
  00128	89 4d 9c	 mov	 DWORD PTR _rcFirst$[ebp+4], ecx
  0012b	8b 55 b8	 mov	 edx, DWORD PTR _rc$[ebp+8]
  0012e	89 55 a0	 mov	 DWORD PTR _rcFirst$[ebp+8], edx
  00131	8b 45 bc	 mov	 eax, DWORD PTR _rc$[ebp+12]
  00134	89 45 a4	 mov	 DWORD PTR _rcFirst$[ebp+12], eax
; Line 755
  00137	8b 4d b0	 mov	 ecx, DWORD PTR _rc$[ebp]
  0013a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A, ecx
  00140	8b 55 b4	 mov	 edx, DWORD PTR _rc$[ebp+4]
  00143	89 15 04 00 00
	00		 mov	 DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A+4, edx
; Line 758
  00149	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014c	8b 88 68 01 00
	00		 mov	 ecx, DWORD PTR [eax+360]
  00152	89 4d 90	 mov	 DWORD PTR _TextColor$[ebp], ecx
; Line 761
  00155	8b 55 90	 mov	 edx, DWORD PTR _TextColor$[ebp]
  00158	52		 push	 edx
  00159	8b 4d c4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0015c	83 c1 44	 add	 ecx, 68			; 00000044H
  0015f	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 762
  00164	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00169	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  0016e	89 45 8c	 mov	 DWORD PTR _pwszComp$[ebp], eax
; Line 763
  00171	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00176	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  0017b	89 45 84	 mov	 DWORD PTR _nCharLeft$[ebp], eax
$LN19@RenderComp:
; Line 769
  0017e	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _bTrail$6[ebp]
  00184	50		 push	 eax
  00185	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _nLastInLine$7[ebp]
  0018b	51		 push	 ecx
  0018c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0018f	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00192	2b 45 b0	 sub	 eax, DWORD PTR _rc$[ebp]
  00195	50		 push	 eax
  00196	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  0019b	e8 00 00 00 00	 call	 ?XtoCP@CUniBuffer@@QAE_NHPAH0@Z ; CUniBuffer::XtoCP
; Line 770
  001a0	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _nLastInLine$7[ebp]
  001a6	51		 push	 ecx
  001a7	8d 55 84	 lea	 edx, DWORD PTR _nCharLeft$[ebp]
  001aa	52		 push	 edx
  001ab	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  001b0	83 c4 08	 add	 esp, 8
  001b3	8b 00		 mov	 eax, DWORD PTR [eax]
  001b5	89 85 64 ff ff
	ff		 mov	 DWORD PTR _nNumCharToDraw$5[ebp], eax
; Line 771
  001bb	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _nNumCharToDraw$5[ebp]
  001c1	51		 push	 ecx
  001c2	8d 55 b0	 lea	 edx, DWORD PTR _rc$[ebp]
  001c5	52		 push	 edx
  001c6	8b 45 c4	 mov	 eax, DWORD PTR _pElement$[ebp]
  001c9	50		 push	 eax
  001ca	8b 4d 8c	 mov	 ecx, DWORD PTR _pwszComp$[ebp]
  001cd	51		 push	 ecx
  001ce	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001d1	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  001d4	e8 00 00 00 00	 call	 ?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
; Line 776
  001d9	e8 00 00 00 00	 call	 ?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ ; CDXUTIMEEditBox::GetPrimaryLanguage
  001de	0f b7 c0	 movzx	 eax, ax
  001e1	83 f8 12	 cmp	 eax, 18			; 00000012H
  001e4	75 49		 jne	 SHORT $LN17@RenderComp
; Line 778
  001e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	0f b6 91 20 01
	00 00		 movzx	 edx, BYTE PTR [ecx+288]
  001f0	85 d2		 test	 edx, edx
  001f2	74 1b		 je	 SHORT $LN16@RenderComp
; Line 780
  001f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f7	8b 88 6c 01 00
	00		 mov	 ecx, DWORD PTR [eax+364]
  001fd	51		 push	 ecx
  001fe	8d 55 b0	 lea	 edx, DWORD PTR _rc$[ebp]
  00201	52		 push	 edx
  00202	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00208	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
; Line 782
  0020d	eb 1e		 jmp	 SHORT $LN15@RenderComp
$LN16@RenderComp:
; Line 787
  0020f	6a 00		 push	 0
  00211	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00214	83 c1 20	 add	 ecx, 32			; 00000020H
  00217	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0021c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021e	ba 04 00 00 00	 mov	 edx, 4
  00223	6b c2 00	 imul	 eax, edx, 0
  00226	8b 4c 01 44	 mov	 ecx, DWORD PTR [ecx+eax+68]
  0022a	89 4d 90	 mov	 DWORD PTR _TextColor$[ebp], ecx
$LN15@RenderComp:
; Line 790
  0022d	eb 19		 jmp	 SHORT $LN14@RenderComp
$LN17@RenderComp:
; Line 793
  0022f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00232	8b 82 6c 01 00
	00		 mov	 eax, DWORD PTR [edx+364]
  00238	50		 push	 eax
  00239	8d 4d b0	 lea	 ecx, DWORD PTR _rc$[ebp]
  0023c	51		 push	 ecx
  0023d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00240	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00243	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
$LN14@RenderComp:
; Line 797
  00248	8b 45 90	 mov	 eax, DWORD PTR _TextColor$[ebp]
  0024b	50		 push	 eax
  0024c	8b 4d c4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0024f	83 c1 44	 add	 ecx, 68			; 00000044H
  00252	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 798
  00257	6a 00		 push	 0
  00259	6a 00		 push	 0
  0025b	8d 4d b0	 lea	 ecx, DWORD PTR _rc$[ebp]
  0025e	51		 push	 ecx
  0025f	8b 55 c4	 mov	 edx, DWORD PTR _pElement$[ebp]
  00262	52		 push	 edx
  00263	8b 45 8c	 mov	 eax, DWORD PTR _pwszComp$[ebp]
  00266	50		 push	 eax
  00267	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026a	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0026d	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 801
  00272	8b 55 84	 mov	 edx, DWORD PTR _nCharLeft$[ebp]
  00275	2b 95 64 ff ff
	ff		 sub	 edx, DWORD PTR _nNumCharToDraw$5[ebp]
  0027b	89 55 84	 mov	 DWORD PTR _nCharLeft$[ebp], edx
; Line 802
  0027e	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _nNumCharToDraw$5[ebp]
  00284	8b 4d 8c	 mov	 ecx, DWORD PTR _pwszComp$[ebp]
  00287	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0028a	89 55 8c	 mov	 DWORD PTR _pwszComp$[ebp], edx
; Line 803
  0028d	83 7d 84 00	 cmp	 DWORD PTR _nCharLeft$[ebp], 0
  00291	7f 02		 jg	 SHORT $LN13@RenderComp
; Line 804
  00293	eb 29		 jmp	 SHORT $LN18@RenderComp
$LN13@RenderComp:
; Line 807
  00295	8b 45 bc	 mov	 eax, DWORD PTR _rc$[ebp+12]
  00298	2b 45 b4	 sub	 eax, DWORD PTR _rc$[ebp+4]
  0029b	8b f4		 mov	 esi, esp
  0029d	50		 push	 eax
  0029e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a1	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  002a4	2b 55 b0	 sub	 edx, DWORD PTR _rc$[ebp]
  002a7	52		 push	 edx
  002a8	8d 45 b0	 lea	 eax, DWORD PTR _rc$[ebp]
  002ab	50		 push	 eax
  002ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  002b2	3b f4		 cmp	 esi, esp
  002b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 808
  002b9	e9 c0 fe ff ff	 jmp	 $LN19@RenderComp
$LN18@RenderComp:
; Line 811
  002be	8b 4d 98	 mov	 ecx, DWORD PTR _rcFirst$[ebp]
  002c1	89 4d b0	 mov	 DWORD PTR _rc$[ebp], ecx
  002c4	8b 55 9c	 mov	 edx, DWORD PTR _rcFirst$[ebp+4]
  002c7	89 55 b4	 mov	 DWORD PTR _rc$[ebp+4], edx
  002ca	8b 45 a0	 mov	 eax, DWORD PTR _rcFirst$[ebp+8]
  002cd	89 45 b8	 mov	 DWORD PTR _rc$[ebp+8], eax
  002d0	8b 4d a4	 mov	 ecx, DWORD PTR _rcFirst$[ebp+12]
  002d3	89 4d bc	 mov	 DWORD PTR _rc$[ebp+12], ecx
; Line 816
  002d6	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _nCharFirst$[ebp], 0
; Line 817
  002e0	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _nXFirst$[ebp], 0
; Line 818
  002e7	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA, -1 ; CDXUTIMEEditBox::s_nFirstTargetConv
; Line 821
  002f1	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  002f6	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  002fb	89 85 58 ff ff
	ff		 mov	 DWORD PTR _pcComp$[ebp], eax
  00301	e8 00 00 00 00	 call	 ?ImeUi_GetCompStringAttr@@YAPAEXZ ; ImeUi_GetCompStringAttr
  00306	89 85 5c ff ff
	ff		 mov	 DWORD PTR _pAttr$[ebp], eax
; Line 822
  0030c	eb 1e		 jmp	 SHORT $LN12@RenderComp
$LN11@RenderComp:
  0030e	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _pcComp$[ebp]
  00314	83 c2 02	 add	 edx, 2
  00317	89 95 58 ff ff
	ff		 mov	 DWORD PTR _pcComp$[ebp], edx
  0031d	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _pAttr$[ebp]
  00323	83 c0 01	 add	 eax, 1
  00326	89 85 5c ff ff
	ff		 mov	 DWORD PTR _pAttr$[ebp], eax
$LN12@RenderComp:
  0032c	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _pcComp$[ebp]
  00332	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00335	85 d2		 test	 edx, edx
  00337	0f 84 0c 02 00
	00		 je	 $LN10@RenderComp
; Line 828
  0033d	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _nXLeft$3[ebp]
  00343	50		 push	 eax
  00344	6a 00		 push	 0
  00346	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  0034b	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  00350	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _pcComp$[ebp]
  00356	2b c8		 sub	 ecx, eax
  00358	d1 f9		 sar	 ecx, 1
  0035a	51		 push	 ecx
  0035b	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00360	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 829
  00365	8d 95 40 ff ff
	ff		 lea	 edx, DWORD PTR _nXRight$2[ebp]
  0036b	52		 push	 edx
  0036c	6a 01		 push	 1
  0036e	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00373	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  00378	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _pcComp$[ebp]
  0037e	2b c8		 sub	 ecx, eax
  00380	d1 f9		 sar	 ecx, 1
  00382	51		 push	 ecx
  00383	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00388	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 833
  0038d	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR _nXRight$2[ebp]
  00393	2b 55 cc	 sub	 edx, DWORD PTR _nXFirst$[ebp]
  00396	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00399	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  0039c	2b 4d b0	 sub	 ecx, DWORD PTR _rc$[ebp]
  0039f	3b d1		 cmp	 edx, ecx
  003a1	7e 55		 jle	 SHORT $LN9@RenderComp
; Line 836
  003a3	8b 55 bc	 mov	 edx, DWORD PTR _rc$[ebp+12]
  003a6	2b 55 b4	 sub	 edx, DWORD PTR _rc$[ebp+4]
  003a9	8b f4		 mov	 esi, esp
  003ab	52		 push	 edx
  003ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003af	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  003b2	2b 4d b0	 sub	 ecx, DWORD PTR _rc$[ebp]
  003b5	51		 push	 ecx
  003b6	8d 55 b0	 lea	 edx, DWORD PTR _rc$[ebp]
  003b9	52		 push	 edx
  003ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  003c0	3b f4		 cmp	 esi, esp
  003c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 839
  003c7	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  003cc	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  003d1	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _pcComp$[ebp]
  003d7	2b c8		 sub	 ecx, eax
  003d9	d1 f9		 sar	 ecx, 1
  003db	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _nCharFirst$[ebp], ecx
; Line 840
  003e1	8d 55 cc	 lea	 edx, DWORD PTR _nXFirst$[ebp]
  003e4	52		 push	 edx
  003e5	6a 00		 push	 0
  003e7	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _nCharFirst$[ebp]
  003ed	50		 push	 eax
  003ee	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  003f3	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
$LN9@RenderComp:
; Line 845
  003f8	e8 00 00 00 00	 call	 ?ImeUi_GetImeCursorChars@@YAKXZ ; ImeUi_GetImeCursorChars
  003fd	8b f0		 mov	 esi, eax
  003ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00404	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  00409	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _pcComp$[ebp]
  0040f	2b c8		 sub	 ecx, eax
  00411	d1 f9		 sar	 ecx, 1
  00413	3b f1		 cmp	 esi, ecx
  00415	75 34		 jne	 SHORT $LN8@RenderComp
; Line 847
  00417	8b 55 b0	 mov	 edx, DWORD PTR _rc$[ebp]
  0041a	89 55 e4	 mov	 DWORD PTR _rcCaret$[ebp], edx
  0041d	8b 45 b4	 mov	 eax, DWORD PTR _rc$[ebp+4]
  00420	89 45 e8	 mov	 DWORD PTR _rcCaret$[ebp+4], eax
  00423	8b 4d b8	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  00426	89 4d ec	 mov	 DWORD PTR _rcCaret$[ebp+8], ecx
  00429	8b 55 bc	 mov	 edx, DWORD PTR _rc$[ebp+12]
  0042c	89 55 f0	 mov	 DWORD PTR _rcCaret$[ebp+12], edx
; Line 848
  0042f	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _nXLeft$3[ebp]
  00435	2b 45 cc	 sub	 eax, DWORD PTR _nXFirst$[ebp]
  00438	8b 4d e4	 mov	 ecx, DWORD PTR _rcCaret$[ebp]
  0043b	8d 54 01 ff	 lea	 edx, DWORD PTR [ecx+eax-1]
  0043f	89 55 e4	 mov	 DWORD PTR _rcCaret$[ebp], edx
; Line 849
  00442	8b 45 e4	 mov	 eax, DWORD PTR _rcCaret$[ebp]
  00445	83 c0 02	 add	 eax, 2
  00448	89 45 ec	 mov	 DWORD PTR _rcCaret$[ebp+8], eax
$LN8@RenderComp:
; Line 853
  0044b	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pAttr$[ebp]
  00451	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00454	83 fa 01	 cmp	 edx, 1
  00457	75 26		 jne	 SHORT $LN7@RenderComp
; Line 855
  00459	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0045c	8b 88 74 01 00
	00		 mov	 ecx, DWORD PTR [eax+372]
  00462	51		 push	 ecx
  00463	8b 4d c4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00466	83 c1 44	 add	 ecx, 68			; 00000044H
  00469	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 856
  0046e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00471	8b 82 78 01 00
	00		 mov	 eax, DWORD PTR [edx+376]
  00477	89 85 54 ff ff
	ff		 mov	 DWORD PTR _bkColor$4[ebp], eax
  0047d	eb 39		 jmp	 SHORT $LN6@RenderComp
$LN7@RenderComp:
; Line 858
  0047f	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pAttr$[ebp]
  00485	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00488	83 fa 03	 cmp	 edx, 3
  0048b	75 26		 jne	 SHORT $LN5@RenderComp
; Line 860
  0048d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00490	8b 88 7c 01 00
	00		 mov	 ecx, DWORD PTR [eax+380]
  00496	51		 push	 ecx
  00497	8b 4d c4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0049a	83 c1 44	 add	 ecx, 68			; 00000044H
  0049d	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 861
  004a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004a5	8b 82 80 01 00
	00		 mov	 eax, DWORD PTR [edx+384]
  004ab	89 85 54 ff ff
	ff		 mov	 DWORD PTR _bkColor$4[ebp], eax
; Line 863
  004b1	eb 05		 jmp	 SHORT $LN6@RenderComp
$LN5@RenderComp:
; Line 865
  004b3	e9 56 fe ff ff	 jmp	 $LN11@RenderComp
$LN6@RenderComp:
; Line 871
  004b8	8b 4d b0	 mov	 ecx, DWORD PTR _rc$[ebp]
  004bb	03 8d 4c ff ff
	ff		 add	 ecx, DWORD PTR _nXLeft$3[ebp]
  004c1	2b 4d cc	 sub	 ecx, DWORD PTR _nXFirst$[ebp]
  004c4	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _rcTarget$1[ebp], ecx
  004ca	8b 55 b4	 mov	 edx, DWORD PTR _rc$[ebp+4]
  004cd	89 95 2c ff ff
	ff		 mov	 DWORD PTR _rcTarget$1[ebp+4], edx
  004d3	8b 45 b0	 mov	 eax, DWORD PTR _rc$[ebp]
  004d6	03 85 40 ff ff
	ff		 add	 eax, DWORD PTR _nXRight$2[ebp]
  004dc	2b 45 cc	 sub	 eax, DWORD PTR _nXFirst$[ebp]
  004df	89 85 30 ff ff
	ff		 mov	 DWORD PTR _rcTarget$1[ebp+8], eax
  004e5	8b 4d bc	 mov	 ecx, DWORD PTR _rc$[ebp+12]
  004e8	89 8d 34 ff ff
	ff		 mov	 DWORD PTR _rcTarget$1[ebp+12], ecx
; Line 872
  004ee	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _bkColor$4[ebp]
  004f4	52		 push	 edx
  004f5	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _rcTarget$1[ebp]
  004fb	50		 push	 eax
  004fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ff	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00502	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
; Line 873
  00507	6a 01		 push	 1
  00509	6a 00		 push	 0
  0050b	8d 95 28 ff ff
	ff		 lea	 edx, DWORD PTR _rcTarget$1[ebp]
  00511	52		 push	 edx
  00512	8b 45 c4	 mov	 eax, DWORD PTR _pElement$[ebp]
  00515	50		 push	 eax
  00516	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _pcComp$[ebp]
  0051c	51		 push	 ecx
  0051d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00520	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00523	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 876
  00528	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA, -1 ; CDXUTIMEEditBox::s_nFirstTargetConv
  0052f	75 13		 jne	 SHORT $LN3@RenderComp
; Line 877
  00531	e8 00 00 00 00	 call	 ?ImeUi_GetCompStringAttr@@YAPAEXZ ; ImeUi_GetCompStringAttr
  00536	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pAttr$[ebp]
  0053c	2b c8		 sub	 ecx, eax
  0053e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA, ecx ; CDXUTIMEEditBox::s_nFirstTargetConv
$LN3@RenderComp:
; Line 878
  00544	e9 c5 fd ff ff	 jmp	 $LN11@RenderComp
$LN10@RenderComp:
; Line 881
  00549	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0054c	0f b6 82 20 01
	00 00		 movzx	 eax, BYTE PTR [edx+288]
  00553	85 c0		 test	 eax, eax
  00555	74 75		 je	 SHORT $LN21@RenderComp
; Line 885
  00557	e8 00 00 00 00	 call	 ?ImeUi_GetImeCursorChars@@YAKXZ ; ImeUi_GetImeCursorChars
  0055c	8b f0		 mov	 esi, eax
  0055e	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00563	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  00568	3b f0		 cmp	 esi, eax
  0056a	75 47		 jne	 SHORT $LN1@RenderComp
; Line 887
  0056c	8d 4d d8	 lea	 ecx, DWORD PTR _nX$[ebp]
  0056f	51		 push	 ecx
  00570	6a 00		 push	 0
  00572	e8 00 00 00 00	 call	 ?ImeUi_GetImeCursorChars@@YAKXZ ; ImeUi_GetImeCursorChars
  00577	50		 push	 eax
  00578	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  0057d	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 888
  00582	8b 55 b0	 mov	 edx, DWORD PTR _rc$[ebp]
  00585	89 55 e4	 mov	 DWORD PTR _rcCaret$[ebp], edx
  00588	8b 45 b4	 mov	 eax, DWORD PTR _rc$[ebp+4]
  0058b	89 45 e8	 mov	 DWORD PTR _rcCaret$[ebp+4], eax
  0058e	8b 4d b8	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  00591	89 4d ec	 mov	 DWORD PTR _rcCaret$[ebp+8], ecx
  00594	8b 55 bc	 mov	 edx, DWORD PTR _rc$[ebp+12]
  00597	89 55 f0	 mov	 DWORD PTR _rcCaret$[ebp+12], edx
; Line 889
  0059a	8b 45 d8	 mov	 eax, DWORD PTR _nX$[ebp]
  0059d	2b 45 cc	 sub	 eax, DWORD PTR _nXFirst$[ebp]
  005a0	8b 4d e4	 mov	 ecx, DWORD PTR _rcCaret$[ebp]
  005a3	8d 54 01 ff	 lea	 edx, DWORD PTR [ecx+eax-1]
  005a7	89 55 e4	 mov	 DWORD PTR _rcCaret$[ebp], edx
; Line 890
  005aa	8b 45 e4	 mov	 eax, DWORD PTR _rcCaret$[ebp]
  005ad	83 c0 02	 add	 eax, 2
  005b0	89 45 ec	 mov	 DWORD PTR _rcCaret$[ebp+8], eax
$LN1@RenderComp:
; Line 893
  005b3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005b6	8b 91 70 01 00
	00		 mov	 edx, DWORD PTR [ecx+368]
  005bc	52		 push	 edx
  005bd	8d 45 e4	 lea	 eax, DWORD PTR _rcCaret$[ebp]
  005c0	50		 push	 eax
  005c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005c4	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  005c7	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
$LN21@RenderComp:
; Line 895
  005cc	52		 push	 edx
  005cd	8b cd		 mov	 ecx, ebp
  005cf	50		 push	 eax
  005d0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN35@RenderComp
  005d6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  005db	58		 pop	 eax
  005dc	5a		 pop	 edx
  005dd	5f		 pop	 edi
  005de	5e		 pop	 esi
  005df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005e2	33 cd		 xor	 ecx, ebp
  005e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005e9	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  005ef	3b ec		 cmp	 ebp, esp
  005f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f6	8b e5		 mov	 esp, ebp
  005f8	5d		 pop	 ebp
  005f9	c3		 ret	 0
  005fa	8b ff		 npad	 2
$LN35@RenderComp:
  005fc	0b 00 00 00	 DD	 11			; 0000000bH
  00600	00 00 00 00	 DD	 $LN34@RenderComp
$LN34@RenderComp:
  00604	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00608	10 00 00 00	 DD	 16			; 00000010H
  0060c	00 00 00 00	 DD	 $LN23@RenderComp
  00610	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00614	04 00 00 00	 DD	 4
  00618	00 00 00 00	 DD	 $LN24@RenderComp
  0061c	cc ff ff ff	 DD	 -52			; ffffffccH
  00620	04 00 00 00	 DD	 4
  00624	00 00 00 00	 DD	 $LN25@RenderComp
  00628	b0 ff ff ff	 DD	 -80			; ffffffb0H
  0062c	10 00 00 00	 DD	 16			; 00000010H
  00630	00 00 00 00	 DD	 $LN26@RenderComp
  00634	98 ff ff ff	 DD	 -104			; ffffff98H
  00638	10 00 00 00	 DD	 16			; 00000010H
  0063c	00 00 00 00	 DD	 $LN27@RenderComp
  00640	84 ff ff ff	 DD	 -124			; ffffff84H
  00644	04 00 00 00	 DD	 4
  00648	00 00 00 00	 DD	 $LN28@RenderComp
  0064c	78 ff ff ff	 DD	 -136			; ffffff78H
  00650	04 00 00 00	 DD	 4
  00654	00 00 00 00	 DD	 $LN29@RenderComp
  00658	6c ff ff ff	 DD	 -148			; ffffff6cH
  0065c	04 00 00 00	 DD	 4
  00660	00 00 00 00	 DD	 $LN30@RenderComp
  00664	4c ff ff ff	 DD	 -180			; ffffff4cH
  00668	04 00 00 00	 DD	 4
  0066c	00 00 00 00	 DD	 $LN31@RenderComp
  00670	40 ff ff ff	 DD	 -192			; ffffff40H
  00674	04 00 00 00	 DD	 4
  00678	00 00 00 00	 DD	 $LN32@RenderComp
  0067c	28 ff ff ff	 DD	 -216			; ffffff28H
  00680	10 00 00 00	 DD	 16			; 00000010H
  00684	00 00 00 00	 DD	 $LN33@RenderComp
$LN33@RenderComp:
  00688	72		 DB	 114			; 00000072H
  00689	63		 DB	 99			; 00000063H
  0068a	54		 DB	 84			; 00000054H
  0068b	61		 DB	 97			; 00000061H
  0068c	72		 DB	 114			; 00000072H
  0068d	67		 DB	 103			; 00000067H
  0068e	65		 DB	 101			; 00000065H
  0068f	74		 DB	 116			; 00000074H
  00690	00		 DB	 0
$LN32@RenderComp:
  00691	6e		 DB	 110			; 0000006eH
  00692	58		 DB	 88			; 00000058H
  00693	52		 DB	 82			; 00000052H
  00694	69		 DB	 105			; 00000069H
  00695	67		 DB	 103			; 00000067H
  00696	68		 DB	 104			; 00000068H
  00697	74		 DB	 116			; 00000074H
  00698	00		 DB	 0
$LN31@RenderComp:
  00699	6e		 DB	 110			; 0000006eH
  0069a	58		 DB	 88			; 00000058H
  0069b	4c		 DB	 76			; 0000004cH
  0069c	65		 DB	 101			; 00000065H
  0069d	66		 DB	 102			; 00000066H
  0069e	74		 DB	 116			; 00000074H
  0069f	00		 DB	 0
$LN30@RenderComp:
  006a0	62		 DB	 98			; 00000062H
  006a1	54		 DB	 84			; 00000054H
  006a2	72		 DB	 114			; 00000072H
  006a3	61		 DB	 97			; 00000061H
  006a4	69		 DB	 105			; 00000069H
  006a5	6c		 DB	 108			; 0000006cH
  006a6	00		 DB	 0
$LN29@RenderComp:
  006a7	6e		 DB	 110			; 0000006eH
  006a8	4c		 DB	 76			; 0000004cH
  006a9	61		 DB	 97			; 00000061H
  006aa	73		 DB	 115			; 00000073H
  006ab	74		 DB	 116			; 00000074H
  006ac	49		 DB	 73			; 00000049H
  006ad	6e		 DB	 110			; 0000006eH
  006ae	4c		 DB	 76			; 0000004cH
  006af	69		 DB	 105			; 00000069H
  006b0	6e		 DB	 110			; 0000006eH
  006b1	65		 DB	 101			; 00000065H
  006b2	00		 DB	 0
$LN28@RenderComp:
  006b3	6e		 DB	 110			; 0000006eH
  006b4	43		 DB	 67			; 00000043H
  006b5	68		 DB	 104			; 00000068H
  006b6	61		 DB	 97			; 00000061H
  006b7	72		 DB	 114			; 00000072H
  006b8	4c		 DB	 76			; 0000004cH
  006b9	65		 DB	 101			; 00000065H
  006ba	66		 DB	 102			; 00000066H
  006bb	74		 DB	 116			; 00000074H
  006bc	00		 DB	 0
$LN27@RenderComp:
  006bd	72		 DB	 114			; 00000072H
  006be	63		 DB	 99			; 00000063H
  006bf	46		 DB	 70			; 00000046H
  006c0	69		 DB	 105			; 00000069H
  006c1	72		 DB	 114			; 00000072H
  006c2	73		 DB	 115			; 00000073H
  006c3	74		 DB	 116			; 00000074H
  006c4	00		 DB	 0
$LN26@RenderComp:
  006c5	72		 DB	 114			; 00000072H
  006c6	63		 DB	 99			; 00000063H
  006c7	00		 DB	 0
$LN25@RenderComp:
  006c8	6e		 DB	 110			; 0000006eH
  006c9	58		 DB	 88			; 00000058H
  006ca	46		 DB	 70			; 00000046H
  006cb	69		 DB	 105			; 00000069H
  006cc	72		 DB	 114			; 00000072H
  006cd	73		 DB	 115			; 00000073H
  006ce	74		 DB	 116			; 00000074H
  006cf	00		 DB	 0
$LN24@RenderComp:
  006d0	6e		 DB	 110			; 0000006eH
  006d1	58		 DB	 88			; 00000058H
  006d2	00		 DB	 0
$LN23@RenderComp:
  006d3	72		 DB	 114			; 00000072H
  006d4	63		 DB	 99			; 00000063H
  006d5	43		 DB	 67			; 00000043H
  006d6	61		 DB	 97			; 00000061H
  006d7	72		 DB	 114			; 00000072H
  006d8	65		 DB	 101			; 00000065H
  006d9	74		 DB	 116			; 00000074H
  006da	00		 DB	 0
?RenderComposition@CDXUTIMEEditBox@@UAEXXZ ENDP		; CDXUTIMEEditBox::RenderComposition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv264 = -824						; size = 4
tv772 = -818						; size = 2
tv769 = -816						; size = 4
tv766 = -812						; size = 4
tv257 = -808						; size = 4
tv755 = -802						; size = 2
tv752 = -800						; size = 4
tv749 = -796						; size = 4
tv254 = -792						; size = 4
tv742 = -786						; size = 2
tv739 = -784						; size = 4
tv736 = -780						; size = 4
tv66 = -776						; size = 4
$T1 = -772						; size = 4
$T2 = -768						; size = 4
$T3 = -764						; size = 4
_nXRight$4 = -756					; size = 4
_nXLeft$5 = -744					; size = 4
_i$6 = -736						; size = 4
_nXCompTrail$7 = -728					; size = 4
_bHasPosition$ = -717					; size = 1
_wszEntry$8 = -712					; size = 64
_i$9 = -644						; size = 4
_wszCand$10 = -636					; size = 512
_i$11 = -120						; size = 4
_nSingleLineHeight$ = -112				; size = 4
_nHeightRequired$ = -104				; size = 4
_nWidthRequired$ = -96					; size = 4
_SelBkColor$ = -88					; size = 4
_SelTextColor$ = -84					; size = 4
_TextBkColor$ = -80					; size = 4
_TextColor$ = -76					; size = 4
_nXComp$ = -68						; size = 4
_nXFirst$ = -56						; size = 4
_nX$ = -44						; size = 4
_nNumEntries$ = -36					; size = 4
_rc$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_bReading$ = 8						; size = 1
?RenderCandidateReadingWindow@CDXUTIMEEditBox@@UAEX_N@Z PROC ; CDXUTIMEEditBox::RenderCandidateReadingWindow
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 513
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 38 03 00
	00		 sub	 esp, 824		; 00000338H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd c8 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-824]
  00012	b9 ce 00 00 00	 mov	 ecx, 206		; 000000ceH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 515
  0002c	0f b6 45 08	 movzx	 eax, BYTE PTR _bReading$[ebp]
  00030	85 c0		 test	 eax, eax
  00032	74 0c		 je	 SHORT $LN47@RenderCand
  00034	c7 85 f8 fc ff
	ff 04 00 00 00	 mov	 DWORD PTR tv66[ebp], 4
  0003e	eb 0a		 jmp	 SHORT $LN48@RenderCand
$LN47@RenderCand:
  00040	c7 85 f8 fc ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv66[ebp], 10	; 0000000aH
$LN48@RenderCand:
  0004a	8b 8d f8 fc ff
	ff		 mov	 ecx, DWORD PTR tv66[ebp]
  00050	89 4d dc	 mov	 DWORD PTR _nNumEntries$[ebp], ecx
; Line 517
  00053	8d 55 d4	 lea	 edx, DWORD PTR _nX$[ebp]
  00056	52		 push	 edx
  00057	6a 00		 push	 0
  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00062	51		 push	 ecx
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 54	 add	 ecx, 84			; 00000054H
  00069	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 518
  0006e	8d 55 c8	 lea	 edx, DWORD PTR _nXFirst$[ebp]
  00071	52		 push	 edx
  00072	6a 00		 push	 0
  00074	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 88 30 01 00
	00		 mov	 ecx, DWORD PTR [eax+304]
  0007d	51		 push	 ecx
  0007e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	83 c1 54	 add	 ecx, 84			; 00000054H
  00084	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 521
  00089	0f b6 55 08	 movzx	 edx, BYTE PTR _bReading$[ebp]
  0008d	85 d2		 test	 edx, edx
  0008f	74 32		 je	 SHORT $LN44@RenderCand
; Line 523
  00091	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00094	8b 88 48 01 00
	00		 mov	 ecx, DWORD PTR [eax+328]
  0009a	89 4d b4	 mov	 DWORD PTR _TextColor$[ebp], ecx
; Line 524
  0009d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
  000a6	89 45 b0	 mov	 DWORD PTR _TextBkColor$[ebp], eax
; Line 525
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	8b 91 50 01 00
	00		 mov	 edx, DWORD PTR [ecx+336]
  000b2	89 55 ac	 mov	 DWORD PTR _SelTextColor$[ebp], edx
; Line 526
  000b5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  000be	89 4d a8	 mov	 DWORD PTR _SelBkColor$[ebp], ecx
; Line 528
  000c1	eb 30		 jmp	 SHORT $LN43@RenderCand
$LN44@RenderCand:
; Line 530
  000c3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c6	8b 82 58 01 00
	00		 mov	 eax, DWORD PTR [edx+344]
  000cc	89 45 b4	 mov	 DWORD PTR _TextColor$[ebp], eax
; Line 531
  000cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	8b 91 5c 01 00
	00		 mov	 edx, DWORD PTR [ecx+348]
  000d8	89 55 b0	 mov	 DWORD PTR _TextBkColor$[ebp], edx
; Line 532
  000db	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000de	8b 88 60 01 00
	00		 mov	 ecx, DWORD PTR [eax+352]
  000e4	89 4d ac	 mov	 DWORD PTR _SelTextColor$[ebp], ecx
; Line 533
  000e7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ea	8b 82 64 01 00
	00		 mov	 eax, DWORD PTR [edx+356]
  000f0	89 45 a8	 mov	 DWORD PTR _SelBkColor$[ebp], eax
$LN43@RenderCand:
; Line 539
  000f3	e8 00 00 00 00	 call	 ?GetLanguage@CDXUTIMEEditBox@@KGGXZ ; CDXUTIMEEditBox::GetLanguage
  000f8	0f b7 c8	 movzx	 ecx, ax
  000fb	81 f9 04 04 00
	00		 cmp	 ecx, 1028		; 00000404H
  00101	75 14		 jne	 SHORT $LN42@RenderCand
  00103	6a 00		 push	 0
  00105	e8 00 00 00 00	 call	 ?GetImeId@CDXUTIMEEditBox@@KGKI@Z ; CDXUTIMEEditBox::GetImeId
  0010a	85 c0		 test	 eax, eax
  0010c	75 09		 jne	 SHORT $LN42@RenderCand
; Line 540
  0010e	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _nXComp$[ebp], 0
  00115	eb 3c		 jmp	 SHORT $LN41@RenderCand
$LN42@RenderCand:
; Line 541
  00117	e8 00 00 00 00	 call	 ?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ ; CDXUTIMEEditBox::GetPrimaryLanguage
  0011c	0f b7 d0	 movzx	 edx, ax
  0011f	83 fa 11	 cmp	 edx, 17			; 00000011H
  00122	75 19		 jne	 SHORT $LN40@RenderCand
; Line 542
  00124	8d 45 bc	 lea	 eax, DWORD PTR _nXComp$[ebp]
  00127	50		 push	 eax
  00128	6a 00		 push	 0
  0012a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA ; CDXUTIMEEditBox::s_nFirstTargetConv
  00130	51		 push	 ecx
  00131	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00136	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 543
  0013b	eb 16		 jmp	 SHORT $LN41@RenderCand
$LN40@RenderCand:
; Line 544
  0013d	8d 55 bc	 lea	 edx, DWORD PTR _nXComp$[ebp]
  00140	52		 push	 edx
  00141	6a 00		 push	 0
  00143	e8 00 00 00 00	 call	 ?ImeUi_GetImeCursorChars@@YAKXZ ; ImeUi_GetImeCursorChars
  00148	50		 push	 eax
  00149	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  0014e	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
$LN41@RenderCand:
; Line 547
  00153	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _nWidthRequired$[ebp], 0
; Line 548
  0015a	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _nHeightRequired$[ebp], 0
; Line 549
  00161	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _nSingleLineHeight$[ebp], 0
; Line 552
  00168	e8 00 00 00 00	 call	 ?ImeUi_IsVerticalCand@@YA_NXZ ; ImeUi_IsVerticalCand
  0016d	0f b6 c0	 movzx	 eax, al
  00170	85 c0		 test	 eax, eax
  00172	74 08		 je	 SHORT $LN36@RenderCand
  00174	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bReading$[ebp]
  00178	85 c9		 test	 ecx, ecx
  0017a	74 1c		 je	 SHORT $LN37@RenderCand
$LN36@RenderCand:
  0017c	e8 00 00 00 00	 call	 ?ImeUi_IsHorizontalReading@@YA_NXZ ; ImeUi_IsHorizontalReading
  00181	0f b6 d0	 movzx	 edx, al
  00184	85 d2		 test	 edx, edx
  00186	0f 85 e7 00 00
	00		 jne	 $LN38@RenderCand
  0018c	0f b6 45 08	 movzx	 eax, BYTE PTR _bReading$[ebp]
  00190	85 c0		 test	 eax, eax
  00192	0f 84 db 00 00
	00		 je	 $LN38@RenderCand
$LN37@RenderCand:
; Line 555
  00198	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _i$11[ebp], 0
  0019f	eb 09		 jmp	 SHORT $LN35@RenderCand
$LN34@RenderCand:
  001a1	8b 4d 88	 mov	 ecx, DWORD PTR _i$11[ebp]
  001a4	83 c1 01	 add	 ecx, 1
  001a7	89 4d 88	 mov	 DWORD PTR _i$11[ebp], ecx
$LN35@RenderCand:
  001aa	8b 55 88	 mov	 edx, DWORD PTR _i$11[ebp]
  001ad	3b 55 dc	 cmp	 edx, DWORD PTR _nNumEntries$[ebp]
  001b0	0f 83 ae 00 00
	00		 jae	 $LN33@RenderCand
; Line 557
  001b6	8b 45 88	 mov	 eax, DWORD PTR _i$11[ebp]
  001b9	50		 push	 eax
  001ba	e8 00 00 00 00	 call	 ?ImeUi_GetCandidate@@YAPA_WI@Z ; ImeUi_GetCandidate
  001bf	83 c4 04	 add	 esp, 4
  001c2	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001c5	85 c9		 test	 ecx, ecx
  001c7	75 05		 jne	 SHORT $LN32@RenderCand
; Line 558
  001c9	e9 96 00 00 00	 jmp	 $LN33@RenderCand
$LN32@RenderCand:
; Line 559
  001ce	8b f4		 mov	 esi, esp
  001d0	6a 00		 push	 0
  001d2	6a 00		 push	 0
  001d4	6a 00		 push	 0
  001d6	6a 00		 push	 0
  001d8	8d 55 e4	 lea	 edx, DWORD PTR _rc$[ebp]
  001db	52		 push	 edx
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  001e2	3b f4		 cmp	 esi, esp
  001e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 560
  001e9	6a ff		 push	 -1
  001eb	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  001ee	50		 push	 eax
  001ef	6a 01		 push	 1
  001f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f4	83 c1 20	 add	 ecx, 32			; 00000020H
  001f7	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  001fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fe	51		 push	 ecx
  001ff	8b 55 88	 mov	 edx, DWORD PTR _i$11[ebp]
  00202	52		 push	 edx
  00203	e8 00 00 00 00	 call	 ?ImeUi_GetCandidate@@YAPA_WI@Z ; ImeUi_GetCandidate
  00208	83 c4 04	 add	 esp, 4
  0020b	50		 push	 eax
  0020c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0020f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00212	e8 00 00 00 00	 call	 ?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
; Line 561
  00217	8b 4d ec	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  0021a	2b 4d e4	 sub	 ecx, DWORD PTR _rc$[ebp]
  0021d	89 8d 04 fd ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  00223	8d 95 04 fd ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00229	52		 push	 edx
  0022a	8d 45 a0	 lea	 eax, DWORD PTR _nWidthRequired$[ebp]
  0022d	50		 push	 eax
  0022e	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  00233	83 c4 08	 add	 esp, 8
  00236	8b 08		 mov	 ecx, DWORD PTR [eax]
  00238	89 4d a0	 mov	 DWORD PTR _nWidthRequired$[ebp], ecx
; Line 562
  0023b	8b 55 f0	 mov	 edx, DWORD PTR _rc$[ebp+12]
  0023e	2b 55 e8	 sub	 edx, DWORD PTR _rc$[ebp+4]
  00241	89 95 00 fd ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  00247	8d 85 00 fd ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0024d	50		 push	 eax
  0024e	8d 4d 90	 lea	 ecx, DWORD PTR _nSingleLineHeight$[ebp]
  00251	51		 push	 ecx
  00252	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  00257	83 c4 08	 add	 esp, 8
  0025a	8b 10		 mov	 edx, DWORD PTR [eax]
  0025c	89 55 90	 mov	 DWORD PTR _nSingleLineHeight$[ebp], edx
; Line 563
  0025f	e9 3d ff ff ff	 jmp	 $LN34@RenderCand
$LN33@RenderCand:
; Line 564
  00264	8b 45 90	 mov	 eax, DWORD PTR _nSingleLineHeight$[ebp]
  00267	0f af 45 dc	 imul	 eax, DWORD PTR _nNumEntries$[ebp]
  0026b	89 45 98	 mov	 DWORD PTR _nHeightRequired$[ebp], eax
; Line 566
  0026e	e9 c4 02 00 00	 jmp	 $LN31@RenderCand
$LN38@RenderCand:
; Line 569
  00273	8b f4		 mov	 esi, esp
  00275	6a 00		 push	 0
  00277	6a 00		 push	 0
  00279	6a 00		 push	 0
  0027b	6a 00		 push	 0
  0027d	8d 4d e4	 lea	 ecx, DWORD PTR _rc$[ebp]
  00280	51		 push	 ecx
  00281	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00287	3b f4		 cmp	 esi, esp
  00289	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 570
  0028e	0f b6 55 08	 movzx	 edx, BYTE PTR _bReading$[ebp]
  00292	85 d2		 test	 edx, edx
  00294	74 2b		 je	 SHORT $LN30@RenderCand
; Line 571
  00296	6a ff		 push	 -1
  00298	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  0029b	50		 push	 eax
  0029c	6a 01		 push	 1
  0029e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a1	83 c1 20	 add	 ecx, 32			; 00000020H
  002a4	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  002a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ab	51		 push	 ecx
  002ac	68 00 00 00 00	 push	 OFFSET ?s_wszReadingString@CDXUTIMEEditBox@@1PA_WA ; CDXUTIMEEditBox::s_wszReadingString
  002b1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002b4	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  002b7	e8 00 00 00 00	 call	 ?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
; Line 572
  002bc	e9 5e 02 00 00	 jmp	 $LN29@RenderCand
$LN30@RenderCand:
; Line 575
  002c1	66 a1 00 00 00
	00		 mov	 ax, WORD PTR $SG159823
  002c7	66 89 85 84 fd
	ff ff		 mov	 WORD PTR _wszCand$10[ebp], ax
  002ce	68 fe 01 00 00	 push	 510			; 000001feH
  002d3	6a 00		 push	 0
  002d5	8d 8d 86 fd ff
	ff		 lea	 ecx, DWORD PTR _wszCand$10[ebp+2]
  002db	51		 push	 ecx
  002dc	e8 00 00 00 00	 call	 _memset
  002e1	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 577
  002e4	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+20, 0
; Line 578
  002ee	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+24, 0
; Line 579
  002f8	c7 85 7c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$9[ebp], 0
  00302	eb 0f		 jmp	 SHORT $LN28@RenderCand
$LN27@RenderCand:
  00304	8b 95 7c fd ff
	ff		 mov	 edx, DWORD PTR _i$9[ebp]
  0030a	83 c2 01	 add	 edx, 1
  0030d	89 95 7c fd ff
	ff		 mov	 DWORD PTR _i$9[ebp], edx
$LN28@RenderCand:
  00313	83 bd 7c fd ff
	ff 0a		 cmp	 DWORD PTR _i$9[ebp], 10	; 0000000aH
  0031a	0f 83 3f 01 00
	00		 jae	 $LN26@RenderCand
; Line 581
  00320	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR _i$9[ebp]
  00326	50		 push	 eax
  00327	e8 00 00 00 00	 call	 ?ImeUi_GetCandidate@@YAPA_WI@Z ; ImeUi_GetCandidate
  0032c	83 c4 04	 add	 esp, 4
  0032f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00332	85 c9		 test	 ecx, ecx
  00334	75 05		 jne	 SHORT $LN25@RenderCand
; Line 582
  00336	e9 24 01 00 00	 jmp	 $LN26@RenderCand
$LN25@RenderCand:
; Line 585
  0033b	8b 95 7c fd ff
	ff		 mov	 edx, DWORD PTR _i$9[ebp]
  00341	52		 push	 edx
  00342	e8 00 00 00 00	 call	 ?ImeUi_GetCandidate@@YAPA_WI@Z ; ImeUi_GetCandidate
  00347	83 c4 04	 add	 esp, 4
  0034a	8b f4		 mov	 esi, esp
  0034c	50		 push	 eax
  0034d	68 00 00 00 00	 push	 OFFSET $SG159835
  00352	6a 20		 push	 32			; 00000020H
  00354	8d 85 38 fd ff
	ff		 lea	 eax, DWORD PTR _wszEntry$8[ebp]
  0035a	50		 push	 eax
  0035b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__swprintf_s
  00361	83 c4 10	 add	 esp, 16			; 00000010H
  00364	3b f4		 cmp	 esi, esp
  00366	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 587
  0036b	e8 00 00 00 00	 call	 ?ImeUi_GetCandidateSelection@@YAKXZ ; ImeUi_GetCandidateSelection
  00370	3b 85 7c fd ff
	ff		 cmp	 eax, DWORD PTR _i$9[ebp]
  00376	0f 85 b9 00 00
	00		 jne	 $LN24@RenderCand
; Line 589
  0037c	8d 8d 84 fd ff
	ff		 lea	 ecx, DWORD PTR _wszCand$10[ebp]
  00382	89 8d f4 fc ff
	ff		 mov	 DWORD PTR tv736[ebp], ecx
  00388	8b 95 f4 fc ff
	ff		 mov	 edx, DWORD PTR tv736[ebp]
  0038e	83 c2 02	 add	 edx, 2
  00391	89 95 f0 fc ff
	ff		 mov	 DWORD PTR tv739[ebp], edx
$LL51@RenderCand:
  00397	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR tv736[ebp]
  0039d	66 8b 08	 mov	 cx, WORD PTR [eax]
  003a0	66 89 8d ee fc
	ff ff		 mov	 WORD PTR tv742[ebp], cx
  003a7	83 85 f4 fc ff
	ff 02		 add	 DWORD PTR tv736[ebp], 2
  003ae	66 83 bd ee fc
	ff ff 00	 cmp	 WORD PTR tv742[ebp], 0
  003b6	75 df		 jne	 SHORT $LL51@RenderCand
  003b8	8b 95 f4 fc ff
	ff		 mov	 edx, DWORD PTR tv736[ebp]
  003be	2b 95 f0 fc ff
	ff		 sub	 edx, DWORD PTR tv739[ebp]
  003c4	d1 fa		 sar	 edx, 1
  003c6	89 95 e8 fc ff
	ff		 mov	 DWORD PTR tv254[ebp], edx
  003cc	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR tv254[ebp]
  003d2	a3 14 00 00 00	 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+20, eax
; Line 590
  003d7	8d 8d 38 fd ff
	ff		 lea	 ecx, DWORD PTR _wszEntry$8[ebp]
  003dd	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv749[ebp], ecx
  003e3	8b 95 e4 fc ff
	ff		 mov	 edx, DWORD PTR tv749[ebp]
  003e9	83 c2 02	 add	 edx, 2
  003ec	89 95 e0 fc ff
	ff		 mov	 DWORD PTR tv752[ebp], edx
$LL52@RenderCand:
  003f2	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR tv749[ebp]
  003f8	66 8b 08	 mov	 cx, WORD PTR [eax]
  003fb	66 89 8d de fc
	ff ff		 mov	 WORD PTR tv755[ebp], cx
  00402	83 85 e4 fc ff
	ff 02		 add	 DWORD PTR tv749[ebp], 2
  00409	66 83 bd de fc
	ff ff 00	 cmp	 WORD PTR tv755[ebp], 0
  00411	75 df		 jne	 SHORT $LL52@RenderCand
  00413	8b 95 e4 fc ff
	ff		 mov	 edx, DWORD PTR tv749[ebp]
  00419	2b 95 e0 fc ff
	ff		 sub	 edx, DWORD PTR tv752[ebp]
  0041f	d1 fa		 sar	 edx, 1
  00421	89 95 d8 fc ff
	ff		 mov	 DWORD PTR tv257[ebp], edx
  00427	8b 85 d8 fc ff
	ff		 mov	 eax, DWORD PTR tv257[ebp]
  0042d	83 e8 01	 sub	 eax, 1
  00430	a3 18 00 00 00	 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+24, eax
$LN24@RenderCand:
; Line 592
  00435	8b f4		 mov	 esi, esp
  00437	8d 8d 38 fd ff
	ff		 lea	 ecx, DWORD PTR _wszEntry$8[ebp]
  0043d	51		 push	 ecx
  0043e	68 00 01 00 00	 push	 256			; 00000100H
  00443	8d 95 84 fd ff
	ff		 lea	 edx, DWORD PTR _wszCand$10[ebp]
  00449	52		 push	 edx
  0044a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  00450	83 c4 0c	 add	 esp, 12			; 0000000cH
  00453	3b f4		 cmp	 esi, esp
  00455	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 593
  0045a	e9 a5 fe ff ff	 jmp	 $LN27@RenderCand
$LN26@RenderCand:
; Line 594
  0045f	8d 85 84 fd ff
	ff		 lea	 eax, DWORD PTR _wszCand$10[ebp]
  00465	89 85 d4 fc ff
	ff		 mov	 DWORD PTR tv766[ebp], eax
  0046b	8b 8d d4 fc ff
	ff		 mov	 ecx, DWORD PTR tv766[ebp]
  00471	83 c1 02	 add	 ecx, 2
  00474	89 8d d0 fc ff
	ff		 mov	 DWORD PTR tv769[ebp], ecx
$LL53@RenderCand:
  0047a	8b 95 d4 fc ff
	ff		 mov	 edx, DWORD PTR tv766[ebp]
  00480	66 8b 02	 mov	 ax, WORD PTR [edx]
  00483	66 89 85 ce fc
	ff ff		 mov	 WORD PTR tv772[ebp], ax
  0048a	83 85 d4 fc ff
	ff 02		 add	 DWORD PTR tv766[ebp], 2
  00491	66 83 bd ce fc
	ff ff 00	 cmp	 WORD PTR tv772[ebp], 0
  00499	75 df		 jne	 SHORT $LL53@RenderCand
  0049b	8b 8d d4 fc ff
	ff		 mov	 ecx, DWORD PTR tv766[ebp]
  004a1	2b 8d d0 fc ff
	ff		 sub	 ecx, DWORD PTR tv769[ebp]
  004a7	d1 f9		 sar	 ecx, 1
  004a9	89 8d c8 fc ff
	ff		 mov	 DWORD PTR tv264[ebp], ecx
  004af	8b 95 c8 fc ff
	ff		 mov	 edx, DWORD PTR tv264[ebp]
  004b5	8d 44 12 fe	 lea	 eax, DWORD PTR [edx+edx-2]
  004b9	89 85 fc fc ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  004bf	81 bd fc fc ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  004c9	73 02		 jae	 SHORT $LN49@RenderCand
  004cb	eb 05		 jmp	 SHORT $LN50@RenderCand
$LN49@RenderCand:
  004cd	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN50@RenderCand:
  004d2	33 c9		 xor	 ecx, ecx
  004d4	8b 95 fc fc ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  004da	66 89 8c 15 84
	fd ff ff	 mov	 WORD PTR _wszCand$10[ebp+edx], cx
; Line 595
  004e2	8d 85 84 fd ff
	ff		 lea	 eax, DWORD PTR _wszCand$10[ebp]
  004e8	50		 push	 eax
  004e9	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  004ee	e8 00 00 00 00	 call	 ?SetText@CUniBuffer@@QAE_NPB_W@Z ; CUniBuffer::SetText
; Line 597
  004f3	6a ff		 push	 -1
  004f5	8d 4d e4	 lea	 ecx, DWORD PTR _rc$[ebp]
  004f8	51		 push	 ecx
  004f9	6a 01		 push	 1
  004fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004fe	83 c1 20	 add	 ecx, 32			; 00000020H
  00501	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00506	8b 10		 mov	 edx, DWORD PTR [eax]
  00508	52		 push	 edx
  00509	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  0050e	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  00513	50		 push	 eax
  00514	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00517	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0051a	e8 00 00 00 00	 call	 ?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
$LN29@RenderCand:
; Line 599
  0051f	8b 4d ec	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  00522	2b 4d e4	 sub	 ecx, DWORD PTR _rc$[ebp]
  00525	89 4d a0	 mov	 DWORD PTR _nWidthRequired$[ebp], ecx
; Line 600
  00528	8b 55 f0	 mov	 edx, DWORD PTR _rc$[ebp+12]
  0052b	2b 55 e8	 sub	 edx, DWORD PTR _rc$[ebp+4]
  0052e	89 55 98	 mov	 DWORD PTR _nHeightRequired$[ebp], edx
  00531	8b 45 98	 mov	 eax, DWORD PTR _nHeightRequired$[ebp]
  00534	89 45 90	 mov	 DWORD PTR _nSingleLineHeight$[ebp], eax
$LN31@RenderCand:
; Line 607
  00537	c6 85 33 fd ff
	ff 00		 mov	 BYTE PTR _bHasPosition$[ebp], 0
; Line 612
  0053e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00541	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A+4
  00547	03 51 7c	 add	 edx, DWORD PTR [ecx+124]
  0054a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0054d	2b 50 74	 sub	 edx, DWORD PTR [eax+116]
  00550	03 55 98	 add	 edx, DWORD PTR _nHeightRequired$[ebp]
  00553	8b f4		 mov	 esi, esp
  00555	52		 push	 edx
  00556	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  0055c	03 4d bc	 add	 ecx, DWORD PTR _nXComp$[ebp]
  0055f	03 4d a0	 add	 ecx, DWORD PTR _nWidthRequired$[ebp]
  00562	51		 push	 ecx
  00563	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00566	a1 04 00 00 00	 mov	 eax, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A+4
  0056b	03 42 7c	 add	 eax, DWORD PTR [edx+124]
  0056e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00571	2b 41 74	 sub	 eax, DWORD PTR [ecx+116]
  00574	50		 push	 eax
  00575	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  0057b	03 55 bc	 add	 edx, DWORD PTR _nXComp$[ebp]
  0057e	52		 push	 edx
  0057f	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  00582	50		 push	 eax
  00583	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00589	3b f4		 cmp	 esi, esp
  0058b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 614
  00590	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00593	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00596	e8 00 00 00 00	 call	 ?GetWidth@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetWidth
  0059b	39 45 ec	 cmp	 DWORD PTR _rc$[ebp+8], eax
  0059e	7e 26		 jle	 SHORT $LN23@RenderCand
; Line 616
  005a0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005a3	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  005a6	e8 00 00 00 00	 call	 ?GetWidth@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetWidth
  005ab	8b 4d ec	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  005ae	2b c8		 sub	 ecx, eax
  005b0	8b 55 e4	 mov	 edx, DWORD PTR _rc$[ebp]
  005b3	2b d1		 sub	 edx, ecx
  005b5	89 55 e4	 mov	 DWORD PTR _rc$[ebp], edx
; Line 617
  005b8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005bb	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  005be	e8 00 00 00 00	 call	 ?GetWidth@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetWidth
  005c3	89 45 ec	 mov	 DWORD PTR _rc$[ebp+8], eax
$LN23@RenderCand:
; Line 619
  005c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005c9	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  005cc	e8 00 00 00 00	 call	 ?GetHeight@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetHeight
  005d1	39 45 f0	 cmp	 DWORD PTR _rc$[ebp+12], eax
  005d4	7f 07		 jg	 SHORT $LN22@RenderCand
; Line 620
  005d6	c6 85 33 fd ff
	ff 01		 mov	 BYTE PTR _bHasPosition$[ebp], 1
$LN22@RenderCand:
; Line 623
  005dd	0f b6 95 33 fd
	ff ff		 movzx	 edx, BYTE PTR _bHasPosition$[ebp]
  005e4	85 d2		 test	 edx, edx
  005e6	75 7c		 jne	 SHORT $LN21@RenderCand
; Line 626
  005e8	8b f4		 mov	 esi, esp
  005ea	a1 04 00 00 00	 mov	 eax, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A+4
  005ef	50		 push	 eax
  005f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  005f6	03 4d bc	 add	 ecx, DWORD PTR _nXComp$[ebp]
  005f9	03 4d a0	 add	 ecx, DWORD PTR _nWidthRequired$[ebp]
  005fc	51		 push	 ecx
  005fd	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A+4
  00603	2b 55 98	 sub	 edx, DWORD PTR _nHeightRequired$[ebp]
  00606	52		 push	 edx
  00607	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  0060c	03 45 bc	 add	 eax, DWORD PTR _nXComp$[ebp]
  0060f	50		 push	 eax
  00610	8d 4d e4	 lea	 ecx, DWORD PTR _rc$[ebp]
  00613	51		 push	 ecx
  00614	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0061a	3b f4		 cmp	 esi, esp
  0061c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 628
  00621	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00624	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00627	e8 00 00 00 00	 call	 ?GetWidth@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetWidth
  0062c	39 45 ec	 cmp	 DWORD PTR _rc$[ebp+8], eax
  0062f	7e 26		 jle	 SHORT $LN20@RenderCand
; Line 630
  00631	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00634	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00637	e8 00 00 00 00	 call	 ?GetWidth@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetWidth
  0063c	8b 4d ec	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  0063f	2b c8		 sub	 ecx, eax
  00641	8b 55 e4	 mov	 edx, DWORD PTR _rc$[ebp]
  00644	2b d1		 sub	 edx, ecx
  00646	89 55 e4	 mov	 DWORD PTR _rc$[ebp], edx
; Line 631
  00649	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0064c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0064f	e8 00 00 00 00	 call	 ?GetWidth@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetWidth
  00654	89 45 ec	 mov	 DWORD PTR _rc$[ebp+8], eax
$LN20@RenderCand:
; Line 633
  00657	83 7d e8 00	 cmp	 DWORD PTR _rc$[ebp+4], 0
  0065b	7c 07		 jl	 SHORT $LN21@RenderCand
; Line 634
  0065d	c6 85 33 fd ff
	ff 01		 mov	 BYTE PTR _bHasPosition$[ebp], 1
$LN21@RenderCand:
; Line 638
  00664	0f b6 8d 33 fd
	ff ff		 movzx	 ecx, BYTE PTR _bHasPosition$[ebp]
  0066b	85 c9		 test	 ecx, ecx
  0066d	75 66		 jne	 SHORT $LN18@RenderCand
; Line 641
  0066f	8d 95 28 fd ff
	ff		 lea	 edx, DWORD PTR _nXCompTrail$7[ebp]
  00675	52		 push	 edx
  00676	6a 01		 push	 1
  00678	e8 00 00 00 00	 call	 ?ImeUi_GetImeCursorChars@@YAKXZ ; ImeUi_GetImeCursorChars
  0067d	50		 push	 eax
  0067e	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00683	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 643
  00688	8b f4		 mov	 esi, esp
  0068a	8b 45 98	 mov	 eax, DWORD PTR _nHeightRequired$[ebp]
  0068d	50		 push	 eax
  0068e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  00694	03 8d 28 fd ff
	ff		 add	 ecx, DWORD PTR _nXCompTrail$7[ebp]
  0069a	03 4d a0	 add	 ecx, DWORD PTR _nWidthRequired$[ebp]
  0069d	51		 push	 ecx
  0069e	6a 00		 push	 0
  006a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  006a6	03 95 28 fd ff
	ff		 add	 edx, DWORD PTR _nXCompTrail$7[ebp]
  006ac	52		 push	 edx
  006ad	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  006b0	50		 push	 eax
  006b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  006b7	3b f4		 cmp	 esi, esp
  006b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 644
  006be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006c1	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  006c4	e8 00 00 00 00	 call	 ?GetWidth@CDXUTDialog@@QBEHXZ ; CDXUTDialog::GetWidth
  006c9	39 45 ec	 cmp	 DWORD PTR _rc$[ebp+8], eax
  006cc	7f 07		 jg	 SHORT $LN18@RenderCand
; Line 645
  006ce	c6 85 33 fd ff
	ff 01		 mov	 BYTE PTR _bHasPosition$[ebp], 1
$LN18@RenderCand:
; Line 649
  006d5	0f b6 95 33 fd
	ff ff		 movzx	 edx, BYTE PTR _bHasPosition$[ebp]
  006dc	85 d2		 test	 edx, edx
  006de	75 3d		 jne	 SHORT $LN16@RenderCand
; Line 652
  006e0	8b f4		 mov	 esi, esp
  006e2	8b 45 98	 mov	 eax, DWORD PTR _nHeightRequired$[ebp]
  006e5	50		 push	 eax
  006e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  006ec	03 4d bc	 add	 ecx, DWORD PTR _nXComp$[ebp]
  006ef	51		 push	 ecx
  006f0	6a 00		 push	 0
  006f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  006f8	03 55 bc	 add	 edx, DWORD PTR _nXComp$[ebp]
  006fb	2b 55 a0	 sub	 edx, DWORD PTR _nWidthRequired$[ebp]
  006fe	52		 push	 edx
  006ff	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  00702	50		 push	 eax
  00703	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00709	3b f4		 cmp	 esi, esp
  0070b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 653
  00710	83 7d ec 00	 cmp	 DWORD PTR _rc$[ebp+8], 0
  00714	7c 07		 jl	 SHORT $LN16@RenderCand
; Line 654
  00716	c6 85 33 fd ff
	ff 01		 mov	 BYTE PTR _bHasPosition$[ebp], 1
$LN16@RenderCand:
; Line 657
  0071d	0f b6 8d 33 fd
	ff ff		 movzx	 ecx, BYTE PTR _bHasPosition$[ebp]
  00724	85 c9		 test	 ecx, ecx
  00726	75 0d		 jne	 SHORT $LN14@RenderCand
; Line 662
  00728	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _rc$[ebp], 0
; Line 663
  0072f	8b 55 a0	 mov	 edx, DWORD PTR _nWidthRequired$[ebp]
  00732	89 55 ec	 mov	 DWORD PTR _rc$[ebp+8], edx
$LN14@RenderCand:
; Line 668
  00735	0f b6 45 08	 movzx	 eax, BYTE PTR _bReading$[ebp]
  00739	85 c0		 test	 eax, eax
  0073b	75 23		 jne	 SHORT $LN13@RenderCand
; Line 669
  0073d	8b 4d e4	 mov	 ecx, DWORD PTR _rc$[ebp]
  00740	89 0d 1c 00 00
	00		 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+28, ecx
  00746	8b 55 e8	 mov	 edx, DWORD PTR _rc$[ebp+4]
  00749	89 15 20 00 00
	00		 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+32, edx
  0074f	8b 45 ec	 mov	 eax, DWORD PTR _rc$[ebp+8]
  00752	a3 24 00 00 00	 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+36, eax
  00757	8b 4d f0	 mov	 ecx, DWORD PTR _rc$[ebp+12]
  0075a	89 0d 28 00 00
	00		 mov	 DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+40, ecx
$LN13@RenderCand:
; Line 672
  00760	8b 55 b0	 mov	 edx, DWORD PTR _TextBkColor$[ebp]
  00763	52		 push	 edx
  00764	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  00767	50		 push	 eax
  00768	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0076b	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0076e	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
; Line 674
  00773	e8 00 00 00 00	 call	 ?ImeUi_IsVerticalCand@@YA_NXZ ; ImeUi_IsVerticalCand
  00778	0f b6 d0	 movzx	 edx, al
  0077b	85 d2		 test	 edx, edx
  0077d	74 08		 je	 SHORT $LN10@RenderCand
  0077f	0f b6 45 08	 movzx	 eax, BYTE PTR _bReading$[ebp]
  00783	85 c0		 test	 eax, eax
  00785	74 1c		 je	 SHORT $LN11@RenderCand
$LN10@RenderCand:
  00787	e8 00 00 00 00	 call	 ?ImeUi_IsHorizontalReading@@YA_NXZ ; ImeUi_IsHorizontalReading
  0078c	0f b6 c8	 movzx	 ecx, al
  0078f	85 c9		 test	 ecx, ecx
  00791	0f 85 dd 00 00
	00		 jne	 $LN12@RenderCand
  00797	0f b6 55 08	 movzx	 edx, BYTE PTR _bReading$[ebp]
  0079b	85 d2		 test	 edx, edx
  0079d	0f 84 d1 00 00
	00		 je	 $LN12@RenderCand
$LN11@RenderCand:
; Line 677
  007a3	c7 85 20 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$6[ebp], 0
  007ad	eb 0f		 jmp	 SHORT $LN9@RenderCand
$LN8@RenderCand:
  007af	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _i$6[ebp]
  007b5	83 c0 01	 add	 eax, 1
  007b8	89 85 20 fd ff
	ff		 mov	 DWORD PTR _i$6[ebp], eax
$LN9@RenderCand:
  007be	8b 8d 20 fd ff
	ff		 mov	 ecx, DWORD PTR _i$6[ebp]
  007c4	3b 4d dc	 cmp	 ecx, DWORD PTR _nNumEntries$[ebp]
  007c7	0f 83 a2 00 00
	00		 jae	 $LN7@RenderCand
; Line 680
  007cd	8b 55 e8	 mov	 edx, DWORD PTR _rc$[ebp+4]
  007d0	03 55 90	 add	 edx, DWORD PTR _nSingleLineHeight$[ebp]
  007d3	89 55 f0	 mov	 DWORD PTR _rc$[ebp+12], edx
; Line 682
  007d6	e8 00 00 00 00	 call	 ?ImeUi_GetCandidateSelection@@YAKXZ ; ImeUi_GetCandidateSelection
  007db	3b 85 20 fd ff
	ff		 cmp	 eax, DWORD PTR _i$6[ebp]
  007e1	75 30		 jne	 SHORT $LN6@RenderCand
; Line 684
  007e3	8b 45 a8	 mov	 eax, DWORD PTR _SelBkColor$[ebp]
  007e6	50		 push	 eax
  007e7	8d 4d e4	 lea	 ecx, DWORD PTR _rc$[ebp]
  007ea	51		 push	 ecx
  007eb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  007ee	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  007f1	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
; Line 685
  007f6	8b 45 ac	 mov	 eax, DWORD PTR _SelTextColor$[ebp]
  007f9	50		 push	 eax
  007fa	6a 01		 push	 1
  007fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	83 c1 20	 add	 ecx, 32			; 00000020H
  00802	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00807	8b 08		 mov	 ecx, DWORD PTR [eax]
  00809	83 c1 44	 add	 ecx, 68			; 00000044H
  0080c	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 687
  00811	eb 1b		 jmp	 SHORT $LN5@RenderCand
$LN6@RenderCand:
; Line 688
  00813	8b 4d b4	 mov	 ecx, DWORD PTR _TextColor$[ebp]
  00816	51		 push	 ecx
  00817	6a 01		 push	 1
  00819	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	83 c1 20	 add	 ecx, 32			; 00000020H
  0081f	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00824	8b 08		 mov	 ecx, DWORD PTR [eax]
  00826	83 c1 44	 add	 ecx, 68			; 00000044H
  00829	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
$LN5@RenderCand:
; Line 690
  0082e	6a 00		 push	 0
  00830	6a 00		 push	 0
  00832	8d 55 e4	 lea	 edx, DWORD PTR _rc$[ebp]
  00835	52		 push	 edx
  00836	6a 01		 push	 1
  00838	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0083b	83 c1 20	 add	 ecx, 32			; 00000020H
  0083e	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00843	8b 00		 mov	 eax, DWORD PTR [eax]
  00845	50		 push	 eax
  00846	8b 8d 20 fd ff
	ff		 mov	 ecx, DWORD PTR _i$6[ebp]
  0084c	51		 push	 ecx
  0084d	e8 00 00 00 00	 call	 ?ImeUi_GetCandidate@@YAPA_WI@Z ; ImeUi_GetCandidate
  00852	83 c4 04	 add	 esp, 4
  00855	50		 push	 eax
  00856	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00859	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0085c	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 692
  00861	8b 45 e8	 mov	 eax, DWORD PTR _rc$[ebp+4]
  00864	03 45 90	 add	 eax, DWORD PTR _nSingleLineHeight$[ebp]
  00867	89 45 e8	 mov	 DWORD PTR _rc$[ebp+4], eax
; Line 693
  0086a	e9 40 ff ff ff	 jmp	 $LN8@RenderCand
$LN7@RenderCand:
; Line 695
  0086f	e9 3e 01 00 00	 jmp	 $LN46@RenderCand
$LN12@RenderCand:
; Line 698
  00874	8b 4d b4	 mov	 ecx, DWORD PTR _TextColor$[ebp]
  00877	51		 push	 ecx
  00878	6a 01		 push	 1
  0087a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0087d	83 c1 20	 add	 ecx, 32			; 00000020H
  00880	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00885	8b 08		 mov	 ecx, DWORD PTR [eax]
  00887	83 c1 44	 add	 ecx, 68			; 00000044H
  0088a	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 699
  0088f	0f b6 55 08	 movzx	 edx, BYTE PTR _bReading$[ebp]
  00893	85 d2		 test	 edx, edx
  00895	74 2a		 je	 SHORT $LN3@RenderCand
; Line 700
  00897	6a 00		 push	 0
  00899	6a 00		 push	 0
  0089b	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  0089e	50		 push	 eax
  0089f	6a 01		 push	 1
  008a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008a4	83 c1 20	 add	 ecx, 32			; 00000020H
  008a7	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  008ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  008ae	51		 push	 ecx
  008af	68 00 00 00 00	 push	 OFFSET ?s_wszReadingString@CDXUTIMEEditBox@@1PA_WA ; CDXUTIMEEditBox::s_wszReadingString
  008b4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  008b7	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  008ba	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 701
  008bf	eb 2e		 jmp	 SHORT $LN2@RenderCand
$LN3@RenderCand:
; Line 702
  008c1	6a 00		 push	 0
  008c3	6a 00		 push	 0
  008c5	8d 45 e4	 lea	 eax, DWORD PTR _rc$[ebp]
  008c8	50		 push	 eax
  008c9	6a 01		 push	 1
  008cb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008ce	83 c1 20	 add	 ecx, 32			; 00000020H
  008d1	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  008d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  008d8	51		 push	 ecx
  008d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  008de	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  008e3	50		 push	 eax
  008e4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  008e7	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  008ea	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN2@RenderCand:
; Line 705
  008ef	0f b6 45 08	 movzx	 eax, BYTE PTR _bReading$[ebp]
  008f3	85 c0		 test	 eax, eax
  008f5	0f 85 b7 00 00
	00		 jne	 $LN46@RenderCand
; Line 708
  008fb	8d 8d 18 fd ff
	ff		 lea	 ecx, DWORD PTR _nXLeft$5[ebp]
  00901	51		 push	 ecx
  00902	6a 00		 push	 0
  00904	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+20
  0090a	52		 push	 edx
  0090b	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  00910	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 709
  00915	8d 85 0c fd ff
	ff		 lea	 eax, DWORD PTR _nXRight$4[ebp]
  0091b	50		 push	 eax
  0091c	6a 00		 push	 0
  0091e	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+20
  00924	03 0d 18 00 00
	00		 add	 ecx, DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+24
  0092a	51		 push	 ecx
  0092b	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  00930	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 711
  00935	8b 55 e4	 mov	 edx, DWORD PTR _rc$[ebp]
  00938	03 95 0c fd ff
	ff		 add	 edx, DWORD PTR _nXRight$4[ebp]
  0093e	89 55 ec	 mov	 DWORD PTR _rc$[ebp+8], edx
; Line 712
  00941	8b 45 e4	 mov	 eax, DWORD PTR _rc$[ebp]
  00944	03 85 18 fd ff
	ff		 add	 eax, DWORD PTR _nXLeft$5[ebp]
  0094a	89 45 e4	 mov	 DWORD PTR _rc$[ebp], eax
; Line 713
  0094d	8b 4d a8	 mov	 ecx, DWORD PTR _SelBkColor$[ebp]
  00950	51		 push	 ecx
  00951	8d 55 e4	 lea	 edx, DWORD PTR _rc$[ebp]
  00954	52		 push	 edx
  00955	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00958	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0095b	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
; Line 714
  00960	8b 4d ac	 mov	 ecx, DWORD PTR _SelTextColor$[ebp]
  00963	51		 push	 ecx
  00964	6a 01		 push	 1
  00966	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00969	83 c1 20	 add	 ecx, 32			; 00000020H
  0096c	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00971	8b 08		 mov	 ecx, DWORD PTR [eax]
  00973	83 c1 44	 add	 ecx, 68			; 00000044H
  00976	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 716
  0097b	6a 00		 push	 0
  0097d	6a 00		 push	 0
  0097f	8d 55 e4	 lea	 edx, DWORD PTR _rc$[ebp]
  00982	52		 push	 edx
  00983	6a 01		 push	 1
  00985	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00988	83 c1 20	 add	 ecx, 32			; 00000020H
  0098b	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00990	8b 00		 mov	 eax, DWORD PTR [eax]
  00992	50		 push	 eax
  00993	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  00998	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  0099d	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+20
  009a3	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  009a6	52		 push	 edx
  009a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009aa	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  009ad	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN46@RenderCand:
; Line 719
  009b2	52		 push	 edx
  009b3	8b cd		 mov	 ecx, ebp
  009b5	50		 push	 eax
  009b6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN66@RenderCand
  009bc	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  009c1	58		 pop	 eax
  009c2	5a		 pop	 edx
  009c3	5f		 pop	 edi
  009c4	5e		 pop	 esi
  009c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009c8	33 cd		 xor	 ecx, ebp
  009ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009cf	81 c4 38 03 00
	00		 add	 esp, 824		; 00000338H
  009d5	3b ec		 cmp	 ebp, esp
  009d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009dc	8b e5		 mov	 esp, ebp
  009de	5d		 pop	 ebp
  009df	c2 04 00	 ret	 4
  009e2	8b ff		 npad	 2
$LN66@RenderCand:
  009e4	0b 00 00 00	 DD	 11			; 0000000bH
  009e8	00 00 00 00	 DD	 $LN65@RenderCand
$LN65@RenderCand:
  009ec	e4 ff ff ff	 DD	 -28			; ffffffe4H
  009f0	10 00 00 00	 DD	 16			; 00000010H
  009f4	00 00 00 00	 DD	 $LN54@RenderCand
  009f8	d4 ff ff ff	 DD	 -44			; ffffffd4H
  009fc	04 00 00 00	 DD	 4
  00a00	00 00 00 00	 DD	 $LN55@RenderCand
  00a04	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00a08	04 00 00 00	 DD	 4
  00a0c	00 00 00 00	 DD	 $LN56@RenderCand
  00a10	bc ff ff ff	 DD	 -68			; ffffffbcH
  00a14	04 00 00 00	 DD	 4
  00a18	00 00 00 00	 DD	 $LN57@RenderCand
  00a1c	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00a20	04 00 00 00	 DD	 4
  00a24	00 00 00 00	 DD	 $LN58@RenderCand
  00a28	90 ff ff ff	 DD	 -112			; ffffff90H
  00a2c	04 00 00 00	 DD	 4
  00a30	00 00 00 00	 DD	 $LN59@RenderCand
  00a34	84 fd ff ff	 DD	 -636			; fffffd84H
  00a38	00 02 00 00	 DD	 512			; 00000200H
  00a3c	00 00 00 00	 DD	 $LN60@RenderCand
  00a40	38 fd ff ff	 DD	 -712			; fffffd38H
  00a44	40 00 00 00	 DD	 64			; 00000040H
  00a48	00 00 00 00	 DD	 $LN61@RenderCand
  00a4c	28 fd ff ff	 DD	 -728			; fffffd28H
  00a50	04 00 00 00	 DD	 4
  00a54	00 00 00 00	 DD	 $LN62@RenderCand
  00a58	18 fd ff ff	 DD	 -744			; fffffd18H
  00a5c	04 00 00 00	 DD	 4
  00a60	00 00 00 00	 DD	 $LN63@RenderCand
  00a64	0c fd ff ff	 DD	 -756			; fffffd0cH
  00a68	04 00 00 00	 DD	 4
  00a6c	00 00 00 00	 DD	 $LN64@RenderCand
$LN64@RenderCand:
  00a70	6e		 DB	 110			; 0000006eH
  00a71	58		 DB	 88			; 00000058H
  00a72	52		 DB	 82			; 00000052H
  00a73	69		 DB	 105			; 00000069H
  00a74	67		 DB	 103			; 00000067H
  00a75	68		 DB	 104			; 00000068H
  00a76	74		 DB	 116			; 00000074H
  00a77	00		 DB	 0
$LN63@RenderCand:
  00a78	6e		 DB	 110			; 0000006eH
  00a79	58		 DB	 88			; 00000058H
  00a7a	4c		 DB	 76			; 0000004cH
  00a7b	65		 DB	 101			; 00000065H
  00a7c	66		 DB	 102			; 00000066H
  00a7d	74		 DB	 116			; 00000074H
  00a7e	00		 DB	 0
$LN62@RenderCand:
  00a7f	6e		 DB	 110			; 0000006eH
  00a80	58		 DB	 88			; 00000058H
  00a81	43		 DB	 67			; 00000043H
  00a82	6f		 DB	 111			; 0000006fH
  00a83	6d		 DB	 109			; 0000006dH
  00a84	70		 DB	 112			; 00000070H
  00a85	54		 DB	 84			; 00000054H
  00a86	72		 DB	 114			; 00000072H
  00a87	61		 DB	 97			; 00000061H
  00a88	69		 DB	 105			; 00000069H
  00a89	6c		 DB	 108			; 0000006cH
  00a8a	00		 DB	 0
$LN61@RenderCand:
  00a8b	77		 DB	 119			; 00000077H
  00a8c	73		 DB	 115			; 00000073H
  00a8d	7a		 DB	 122			; 0000007aH
  00a8e	45		 DB	 69			; 00000045H
  00a8f	6e		 DB	 110			; 0000006eH
  00a90	74		 DB	 116			; 00000074H
  00a91	72		 DB	 114			; 00000072H
  00a92	79		 DB	 121			; 00000079H
  00a93	00		 DB	 0
$LN60@RenderCand:
  00a94	77		 DB	 119			; 00000077H
  00a95	73		 DB	 115			; 00000073H
  00a96	7a		 DB	 122			; 0000007aH
  00a97	43		 DB	 67			; 00000043H
  00a98	61		 DB	 97			; 00000061H
  00a99	6e		 DB	 110			; 0000006eH
  00a9a	64		 DB	 100			; 00000064H
  00a9b	00		 DB	 0
$LN59@RenderCand:
  00a9c	6e		 DB	 110			; 0000006eH
  00a9d	53		 DB	 83			; 00000053H
  00a9e	69		 DB	 105			; 00000069H
  00a9f	6e		 DB	 110			; 0000006eH
  00aa0	67		 DB	 103			; 00000067H
  00aa1	6c		 DB	 108			; 0000006cH
  00aa2	65		 DB	 101			; 00000065H
  00aa3	4c		 DB	 76			; 0000004cH
  00aa4	69		 DB	 105			; 00000069H
  00aa5	6e		 DB	 110			; 0000006eH
  00aa6	65		 DB	 101			; 00000065H
  00aa7	48		 DB	 72			; 00000048H
  00aa8	65		 DB	 101			; 00000065H
  00aa9	69		 DB	 105			; 00000069H
  00aaa	67		 DB	 103			; 00000067H
  00aab	68		 DB	 104			; 00000068H
  00aac	74		 DB	 116			; 00000074H
  00aad	00		 DB	 0
$LN58@RenderCand:
  00aae	6e		 DB	 110			; 0000006eH
  00aaf	57		 DB	 87			; 00000057H
  00ab0	69		 DB	 105			; 00000069H
  00ab1	64		 DB	 100			; 00000064H
  00ab2	74		 DB	 116			; 00000074H
  00ab3	68		 DB	 104			; 00000068H
  00ab4	52		 DB	 82			; 00000052H
  00ab5	65		 DB	 101			; 00000065H
  00ab6	71		 DB	 113			; 00000071H
  00ab7	75		 DB	 117			; 00000075H
  00ab8	69		 DB	 105			; 00000069H
  00ab9	72		 DB	 114			; 00000072H
  00aba	65		 DB	 101			; 00000065H
  00abb	64		 DB	 100			; 00000064H
  00abc	00		 DB	 0
$LN57@RenderCand:
  00abd	6e		 DB	 110			; 0000006eH
  00abe	58		 DB	 88			; 00000058H
  00abf	43		 DB	 67			; 00000043H
  00ac0	6f		 DB	 111			; 0000006fH
  00ac1	6d		 DB	 109			; 0000006dH
  00ac2	70		 DB	 112			; 00000070H
  00ac3	00		 DB	 0
$LN56@RenderCand:
  00ac4	6e		 DB	 110			; 0000006eH
  00ac5	58		 DB	 88			; 00000058H
  00ac6	46		 DB	 70			; 00000046H
  00ac7	69		 DB	 105			; 00000069H
  00ac8	72		 DB	 114			; 00000072H
  00ac9	73		 DB	 115			; 00000073H
  00aca	74		 DB	 116			; 00000074H
  00acb	00		 DB	 0
$LN55@RenderCand:
  00acc	6e		 DB	 110			; 0000006eH
  00acd	58		 DB	 88			; 00000058H
  00ace	00		 DB	 0
$LN54@RenderCand:
  00acf	72		 DB	 114			; 00000072H
  00ad0	63		 DB	 99			; 00000063H
  00ad1	00		 DB	 0
?RenderCandidateReadingWindow@CDXUTIMEEditBox@@UAEX_N@Z ENDP ; CDXUTIMEEditBox::RenderCandidateReadingWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_msg$ = -36						; size = 28
_this$ = -4						; size = 4
?PumpMessage@CDXUTIMEEditBox@@QAEXXZ PROC		; CDXUTIMEEditBox::PumpMessage
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 220
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN3@PumpMessag:
; Line 223
  0001c	8b f4		 mov	 esi, esp
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	8d 45 dc	 lea	 eax, DWORD PTR _msg$[ebp]
  00029	50		 push	 eax
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageW@20
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	85 c0		 test	 eax, eax
  00039	74 5a		 je	 SHORT $LN4@PumpMessag
; Line 225
  0003b	8b f4		 mov	 esi, esp
  0003d	6a 00		 push	 0
  0003f	6a 00		 push	 0
  00041	6a 00		 push	 0
  00043	8d 4d dc	 lea	 ecx, DWORD PTR _msg$[ebp]
  00046	51		 push	 ecx
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageW@16
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	85 c0		 test	 eax, eax
  00056	75 15		 jne	 SHORT $LN1@PumpMessag
; Line 227
  00058	8b f4		 mov	 esi, esp
  0005a	8b 55 e4	 mov	 edx, DWORD PTR _msg$[ebp+8]
  0005d	52		 push	 edx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
  00064	3b f4		 cmp	 esi, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 228
  0006b	eb 28		 jmp	 SHORT $LN4@PumpMessag
$LN1@PumpMessag:
; Line 230
  0006d	8b f4		 mov	 esi, esp
  0006f	8d 45 dc	 lea	 eax, DWORD PTR _msg$[ebp]
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4
  00079	3b f4		 cmp	 esi, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 231
  00080	8b f4		 mov	 esi, esp
  00082	8d 4d dc	 lea	 ecx, DWORD PTR _msg$[ebp]
  00085	51		 push	 ecx
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 232
  00093	eb 87		 jmp	 SHORT $LN3@PumpMessag
$LN4@PumpMessag:
; Line 233
  00095	52		 push	 edx
  00096	8b cd		 mov	 ecx, ebp
  00098	50		 push	 eax
  00099	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@PumpMessag
  0009f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a4	58		 pop	 eax
  000a5	5a		 pop	 edx
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	83 c4 28	 add	 esp, 40			; 00000028H
  000ab	3b ec		 cmp	 ebp, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c3		 ret	 0
  000b6	8b ff		 npad	 2
$LN8@PumpMessag:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN7@PumpMessag
$LN7@PumpMessag:
  000c0	dc ff ff ff	 DD	 -36			; ffffffdcH
  000c4	1c 00 00 00	 DD	 28			; 0000001cH
  000c8	00 00 00 00	 DD	 $LN6@PumpMessag
$LN6@PumpMessag:
  000cc	6d		 DB	 109			; 0000006dH
  000cd	73		 DB	 115			; 00000073H
  000ce	67		 DB	 103			; 00000067H
  000cf	00		 DB	 0
?PumpMessage@CDXUTIMEEditBox@@QAEXXZ ENDP		; CDXUTIMEEditBox::PumpMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnFocusOut@CDXUTIMEEditBox@@UAEXXZ PROC		; CDXUTIMEEditBox::OnFocusOut
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 246
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 247
  0000e	6a 00		 push	 0
  00010	e8 00 00 00 00	 call	 ?ImeUi_FinalizeString@@YAX_N@Z ; ImeUi_FinalizeString
  00015	83 c4 04	 add	 esp, 4
; Line 248
  00018	6a 00		 push	 0
  0001a	e8 00 00 00 00	 call	 ?ImeUi_EnableIme@@YAX_N@Z ; ImeUi_EnableIme
  0001f	83 c4 04	 add	 esp, 4
; Line 249
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?OnFocusOut@CDXUTControl@@UAEXXZ ; CDXUTControl::OnFocusOut
; Line 250
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnFocusOut@CDXUTIMEEditBox@@UAEXXZ ENDP		; CDXUTIMEEditBox::OnFocusOut
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnFocusIn@CDXUTIMEEditBox@@UAEXXZ PROC			; CDXUTIMEEditBox::OnFocusIn
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 238
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 239
  0000e	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?s_bImeFlag@CDXUTIMEEditBox@@1_NA ; CDXUTIMEEditBox::s_bImeFlag
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?ImeUi_EnableIme@@YAX_N@Z ; ImeUi_EnableIme
  0001b	83 c4 04	 add	 esp, 4
; Line 240
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?OnFocusIn@CDXUTEditBox@@UAEXXZ ; CDXUTEditBox::OnFocusIn
; Line 241
  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?OnFocusIn@CDXUTIMEEditBox@@UAEXXZ ENDP			; CDXUTIMEEditBox::OnFocusIn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nWidth$ = -8						; size = 4
_this$ = -4						; size = 4
?UpdateRects@CDXUTIMEEditBox@@UAEXXZ PROC		; CDXUTIMEEditBox::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 160
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 164
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0001e	89 4d f8	 mov	 DWORD PTR _nWidth$[ebp], ecx
; Line 165
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 91 90 01 00
	00		 mov	 edx, DWORD PTR [ecx+400]
  00030	8d 04 42	 lea	 eax, DWORD PTR [edx+eax*2]
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	2b d0		 sub	 edx, eax
  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	89 50 10	 mov	 DWORD PTR [eax+16], edx
; Line 166
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?UpdateRects@CDXUTEditBox@@UAEXXZ ; CDXUTEditBox::UpdateRects
; Line 167
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	8b 55 f8	 mov	 edx, DWORD PTR _nWidth$[ebp]
  0004f	89 51 10	 mov	 DWORD PTR [ecx+16], edx
; Line 170
  00052	8b f4		 mov	 esi, esp
  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0005a	51		 push	 ecx
  0005b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	03 41 10	 add	 eax, DWORD PTR [ecx+16]
  00067	50		 push	 eax
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0006e	50		 push	 eax
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00075	52		 push	 edx
  00076	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00079	05 94 01 00 00	 add	 eax, 404		; 00000194H
  0007e	50		 push	 eax
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 172
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	03 50 10	 add	 edx, DWORD PTR [eax+16]
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	89 51 4c	 mov	 DWORD PTR [ecx+76], edx
; Line 173
  0009e	5e		 pop	 esi
  0009f	83 c4 08	 add	 esp, 8
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
?UpdateRects@CDXUTIMEEditBox@@UAEXXZ ENDP		; CDXUTIMEEditBox::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv257 = -180						; size = 4
tv251 = -176						; size = 4
tv392 = -170						; size = 2
tv389 = -168						; size = 4
tv386 = -164						; size = 4
tv216 = -160						; size = 4
tv193 = -156						; size = 4
tv192 = -152						; size = 4
tv184 = -148						; size = 4
tv179 = -144						; size = 4
tv178 = -140						; size = 4
tv171 = -136						; size = 4
tv158 = -132						; size = 4
tv78 = -128						; size = 4
_i$1 = -124						; size = 4
_nEntryStart$2 = -120					; size = 4
_nCandidate$3 = -116					; size = 4
_nTrail$4 = -108					; size = 4
_nCharHit$5 = -96					; size = 4
_nStrike$6 = -88					; size = 4
_nNumToHit$7 = -84					; size = 4
_nVirtKey$8 = -77					; size = 1
_nRow$9 = -76						; size = 4
_nSendCount$10 = -72					; size = 4
_nVirtKey$11 = -65					; size = 1
_nSendCount$12 = -64					; size = 4
_nVirtKey$13 = -57					; size = 1
_nClauseSelected$14 = -56				; size = 4
_nClauseClicked$15 = -52				; size = 4
_nTrail$16 = -44					; size = 4
_nCharHit$17 = -36					; size = 4
_nCharBodyHit$18 = -28					; size = 4
_nCompStrWidth$19 = -16					; size = 4
_pFont$20 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTIMEEditBox@@UAE_NIABUtagPOINT@@IJ@Z PROC ; CDXUTIMEEditBox::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 309
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 4c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-180]
  00012	b9 2d 00 00 00	 mov	 ecx, 45			; 0000002dH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 310
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00029	85 c9		 test	 ecx, ecx
  0002b	74 0b		 je	 SHORT $LN41@HandleMous
  0002d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00030	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00034	85 c0		 test	 eax, eax
  00036	75 07		 jne	 SHORT $LN42@HandleMous
$LN41@HandleMous:
; Line 311
  00038	32 c0		 xor	 al, al
  0003a	e9 96 04 00 00	 jmp	 $LN43@HandleMous
$LN42@HandleMous:
; Line 313
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00042	89 4d 80	 mov	 DWORD PTR tv78[ebp], ecx
  00045	81 7d 80 01 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 513 ; 00000201H
  0004c	74 0e		 je	 SHORT $LN38@HandleMous
  0004e	81 7d 80 03 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 515 ; 00000203H
  00055	74 05		 je	 SHORT $LN38@HandleMous
  00057	e9 61 04 00 00	 jmp	 $LN39@HandleMous
$LN38@HandleMous:
; Line 318
  0005c	6a 09		 push	 9
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 20	 add	 ecx, 32			; 00000020H
  00064	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00069	8b 10		 mov	 edx, DWORD PTR [eax]
  0006b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006e	50		 push	 eax
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00075	e8 00 00 00 00	 call	 ?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialog::GetFont
  0007a	89 45 f8	 mov	 DWORD PTR _pFont$20[ebp], eax
; Line 322
  0007d	8d 55 f0	 lea	 edx, DWORD PTR _nCompStrWidth$19[ebp]
  00080	52		 push	 edx
  00081	6a 00		 push	 0
  00083	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00088	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  0008d	50		 push	 eax
  0008e	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00093	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 327
  00098	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  000a1	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000a3	0f 8f 0b 02 00
	00		 jg	 $LN37@HandleMous
  000a9	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  000ac	a1 04 00 00 00	 mov	 eax, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A+4
  000b1	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000b4	0f 8f fa 01 00
	00		 jg	 $LN37@HandleMous
  000ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  000c0	03 4d f0	 add	 ecx, DWORD PTR _nCompStrWidth$19[ebp]
  000c3	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  000c6	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  000c8	0f 8e e6 01 00
	00		 jle	 $LN37@HandleMous
  000ce	8b 45 f8	 mov	 eax, DWORD PTR _pFont$20[ebp]
  000d1	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A+4
  000d7	03 88 08 02 00
	00		 add	 ecx, DWORD PTR [eax+520]
  000dd	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  000e0	3b 4a 04	 cmp	 ecx, DWORD PTR [edx+4]
  000e3	0f 8e cb 01 00
	00		 jle	 $LN37@HandleMous
; Line 333
  000e9	8d 45 d4	 lea	 eax, DWORD PTR _nTrail$16[ebp]
  000ec	50		 push	 eax
  000ed	8d 4d e4	 lea	 ecx, DWORD PTR _nCharBodyHit$18[ebp]
  000f0	51		 push	 ecx
  000f1	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  000f4	8b 02		 mov	 eax, DWORD PTR [edx]
  000f6	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?s_ptCompString@CDXUTIMEEditBox@@1UtagPOINT@@A
  000fc	50		 push	 eax
  000fd	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00102	e8 00 00 00 00	 call	 ?XtoCP@CUniBuffer@@QAE_NHPAH0@Z ; CUniBuffer::XtoCP
; Line 334
  00107	83 7d d4 00	 cmp	 DWORD PTR _nTrail$16[ebp], 0
  0010b	74 1a		 je	 SHORT $LN36@HandleMous
  0010d	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00112	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  00117	39 45 e4	 cmp	 DWORD PTR _nCharBodyHit$18[ebp], eax
  0011a	7d 0b		 jge	 SHORT $LN36@HandleMous
; Line 335
  0011c	8b 4d e4	 mov	 ecx, DWORD PTR _nCharBodyHit$18[ebp]
  0011f	83 c1 01	 add	 ecx, 1
  00122	89 4d dc	 mov	 DWORD PTR _nCharHit$17[ebp], ecx
; Line 336
  00125	eb 06		 jmp	 SHORT $LN35@HandleMous
$LN36@HandleMous:
; Line 337
  00127	8b 55 e4	 mov	 edx, DWORD PTR _nCharBodyHit$18[ebp]
  0012a	89 55 dc	 mov	 DWORD PTR _nCharHit$17[ebp], edx
$LN35@HandleMous:
; Line 340
  0012d	e8 00 00 00 00	 call	 ?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ ; CDXUTIMEEditBox::GetPrimaryLanguage
  00132	0f b7 c0	 movzx	 eax, ax
  00135	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv158[ebp], eax
  0013b	83 bd 7c ff ff
	ff 04		 cmp	 DWORD PTR tv158[ebp], 4
  00142	0f 84 e2 00 00
	00		 je	 $LN24@HandleMous
  00148	83 bd 7c ff ff
	ff 11		 cmp	 DWORD PTR tv158[ebp], 17 ; 00000011H
  0014f	74 05		 je	 SHORT $LN32@HandleMous
  00151	e9 57 01 00 00	 jmp	 $LN33@HandleMous
$LN32@HandleMous:
; Line 348
  00156	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA, -1 ; CDXUTIMEEditBox::s_nFirstTargetConv
  0015d	0f 84 c7 00 00
	00		 je	 $LN24@HandleMous
; Line 350
  00163	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _nClauseClicked$15[ebp], 0
$LN30@HandleMous:
; Line 351
  0016a	8b 4d cc	 mov	 ecx, DWORD PTR _nClauseClicked$15[ebp]
  0016d	8b 14 8d 04 00
	00 00		 mov	 edx, DWORD PTR ?s_adwCompStringClause@CDXUTIMEEditBox@@1PAKA[ecx*4+4]
  00174	3b 55 e4	 cmp	 edx, DWORD PTR _nCharBodyHit$18[ebp]
  00177	7f 0b		 jg	 SHORT $LN29@HandleMous
; Line 352
  00179	8b 45 cc	 mov	 eax, DWORD PTR _nClauseClicked$15[ebp]
  0017c	83 c0 01	 add	 eax, 1
  0017f	89 45 cc	 mov	 DWORD PTR _nClauseClicked$15[ebp], eax
  00182	eb e6		 jmp	 SHORT $LN30@HandleMous
$LN29@HandleMous:
; Line 354
  00184	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _nClauseSelected$14[ebp], 0
$LN28@HandleMous:
; Line 355
  0018b	8b 4d c8	 mov	 ecx, DWORD PTR _nClauseSelected$14[ebp]
  0018e	8b 14 8d 04 00
	00 00		 mov	 edx, DWORD PTR ?s_adwCompStringClause@CDXUTIMEEditBox@@1PAKA[ecx*4+4]
  00195	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?s_nFirstTargetConv@CDXUTIMEEditBox@@1HA ; CDXUTIMEEditBox::s_nFirstTargetConv
  0019b	7f 0b		 jg	 SHORT $LN27@HandleMous
; Line 356
  0019d	8b 45 c8	 mov	 eax, DWORD PTR _nClauseSelected$14[ebp]
  001a0	83 c0 01	 add	 eax, 1
  001a3	89 45 c8	 mov	 DWORD PTR _nClauseSelected$14[ebp], eax
  001a6	eb e3		 jmp	 SHORT $LN28@HandleMous
$LN27@HandleMous:
; Line 358
  001a8	8b 4d cc	 mov	 ecx, DWORD PTR _nClauseClicked$15[ebp]
  001ab	3b 4d c8	 cmp	 ecx, DWORD PTR _nClauseSelected$14[ebp]
  001ae	7e 0c		 jle	 SHORT $LN45@HandleMous
  001b0	c7 85 78 ff ff
	ff 27 00 00 00	 mov	 DWORD PTR tv171[ebp], 39 ; 00000027H
  001ba	eb 0a		 jmp	 SHORT $LN46@HandleMous
$LN45@HandleMous:
  001bc	c7 85 78 ff ff
	ff 25 00 00 00	 mov	 DWORD PTR tv171[ebp], 37 ; 00000025H
$LN46@HandleMous:
  001c6	8a 95 78 ff ff
	ff		 mov	 dl, BYTE PTR tv171[ebp]
  001cc	88 55 c7	 mov	 BYTE PTR _nVirtKey$13[ebp], dl
; Line 359
  001cf	8b 45 cc	 mov	 eax, DWORD PTR _nClauseClicked$15[ebp]
  001d2	2b 45 c8	 sub	 eax, DWORD PTR _nClauseSelected$14[ebp]
  001d5	99		 cdq
  001d6	33 c2		 xor	 eax, edx
  001d8	2b c2		 sub	 eax, edx
  001da	89 45 c0	 mov	 DWORD PTR _nSendCount$12[ebp], eax
$LN26@HandleMous:
; Line 360
  001dd	8b 45 c0	 mov	 eax, DWORD PTR _nSendCount$12[ebp]
  001e0	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv178[ebp], eax
  001e6	8b 4d c0	 mov	 ecx, DWORD PTR _nSendCount$12[ebp]
  001e9	83 e9 01	 sub	 ecx, 1
  001ec	89 4d c0	 mov	 DWORD PTR _nSendCount$12[ebp], ecx
  001ef	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR tv178[ebp], 0
  001f6	7e 0c		 jle	 SHORT $LN47@HandleMous
  001f8	c7 85 70 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv179[ebp], 1
  00202	eb 0a		 jmp	 SHORT $LN48@HandleMous
$LN47@HandleMous:
  00204	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv179[ebp], 0
$LN48@HandleMous:
  0020e	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR tv179[ebp], 0
  00215	74 0c		 je	 SHORT $LN25@HandleMous
; Line 361
  00217	0f b6 55 c7	 movzx	 edx, BYTE PTR _nVirtKey$13[ebp]
  0021b	52		 push	 edx
  0021c	e8 00 00 00 00	 call	 ?SendKey@CDXUTIMEEditBox@@KGXE@Z ; CDXUTIMEEditBox::SendKey
  00221	eb ba		 jmp	 SHORT $LN26@HandleMous
$LN25@HandleMous:
; Line 363
  00223	b0 01		 mov	 al, 1
  00225	e9 ab 02 00 00	 jmp	 $LN43@HandleMous
$LN24@HandleMous:
; Line 371
  0022a	e8 00 00 00 00	 call	 ?ImeUi_GetImeCursorChars@@YAKXZ ; ImeUi_GetImeCursorChars
  0022f	39 45 dc	 cmp	 DWORD PTR _nCharHit$17[ebp], eax
  00232	7e 0c		 jle	 SHORT $LN49@HandleMous
  00234	c7 85 6c ff ff
	ff 27 00 00 00	 mov	 DWORD PTR tv184[ebp], 39 ; 00000027H
  0023e	eb 0a		 jmp	 SHORT $LN50@HandleMous
$LN49@HandleMous:
  00240	c7 85 6c ff ff
	ff 25 00 00 00	 mov	 DWORD PTR tv184[ebp], 37 ; 00000025H
$LN50@HandleMous:
  0024a	8a 85 6c ff ff
	ff		 mov	 al, BYTE PTR tv184[ebp]
  00250	88 45 bf	 mov	 BYTE PTR _nVirtKey$11[ebp], al
; Line 372
  00253	e8 00 00 00 00	 call	 ?ImeUi_GetImeCursorChars@@YAKXZ ; ImeUi_GetImeCursorChars
  00258	8b 4d dc	 mov	 ecx, DWORD PTR _nCharHit$17[ebp]
  0025b	2b c8		 sub	 ecx, eax
  0025d	8b c1		 mov	 eax, ecx
  0025f	99		 cdq
  00260	33 c2		 xor	 eax, edx
  00262	2b c2		 sub	 eax, edx
  00264	89 45 b8	 mov	 DWORD PTR _nSendCount$10[ebp], eax
$LN23@HandleMous:
; Line 373
  00267	8b 55 b8	 mov	 edx, DWORD PTR _nSendCount$10[ebp]
  0026a	89 95 68 ff ff
	ff		 mov	 DWORD PTR tv192[ebp], edx
  00270	8b 45 b8	 mov	 eax, DWORD PTR _nSendCount$10[ebp]
  00273	83 e8 01	 sub	 eax, 1
  00276	89 45 b8	 mov	 DWORD PTR _nSendCount$10[ebp], eax
  00279	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR tv192[ebp], 0
  00280	7e 0c		 jle	 SHORT $LN51@HandleMous
  00282	c7 85 64 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv193[ebp], 1
  0028c	eb 0a		 jmp	 SHORT $LN52@HandleMous
$LN51@HandleMous:
  0028e	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv193[ebp], 0
$LN52@HandleMous:
  00298	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR tv193[ebp], 0
  0029f	74 0c		 je	 SHORT $LN33@HandleMous
; Line 374
  002a1	0f b6 4d bf	 movzx	 ecx, BYTE PTR _nVirtKey$11[ebp]
  002a5	51		 push	 ecx
  002a6	e8 00 00 00 00	 call	 ?SendKey@CDXUTIMEEditBox@@KGXE@Z ; CDXUTIMEEditBox::SendKey
  002ab	eb ba		 jmp	 SHORT $LN23@HandleMous
$LN33@HandleMous:
; Line 379
  002ad	b0 01		 mov	 al, 1
  002af	e9 21 02 00 00	 jmp	 $LN43@HandleMous
$LN37@HandleMous:
; Line 383
  002b4	e8 00 00 00 00	 call	 ?ImeUi_IsShowCandListWindow@@YA_NXZ ; ImeUi_IsShowCandListWindow
  002b9	0f b6 d0	 movzx	 edx, al
  002bc	85 d2		 test	 edx, edx
  002be	0f 84 f9 01 00
	00		 je	 $LN39@HandleMous
  002c4	8b f4		 mov	 esi, esp
  002c6	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  002c9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002cc	51		 push	 ecx
  002cd	8b 10		 mov	 edx, DWORD PTR [eax]
  002cf	52		 push	 edx
  002d0	68 1c 00 00 00	 push	 OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+28
  002d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  002db	3b f4		 cmp	 esi, esp
  002dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e2	85 c0		 test	 eax, eax
  002e4	0f 84 d3 01 00
	00		 je	 $LN39@HandleMous
; Line 385
  002ea	e8 00 00 00 00	 call	 ?ImeUi_IsVerticalCand@@YA_NXZ ; ImeUi_IsVerticalCand
  002ef	0f b6 c0	 movzx	 eax, al
  002f2	85 c0		 test	 eax, eax
  002f4	0f 84 c1 00 00
	00		 je	 $LN20@HandleMous
; Line 390
  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  002fd	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00300	2b 05 20 00 00
	00		 sub	 eax, DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+32
  00306	8b 4d f8	 mov	 ecx, DWORD PTR _pFont$20[ebp]
  00309	99		 cdq
  0030a	f7 b9 08 02 00
	00		 idiv	 DWORD PTR [ecx+520]
  00310	89 45 b4	 mov	 DWORD PTR _nRow$9[ebp], eax
; Line 392
  00313	e8 00 00 00 00	 call	 ?ImeUi_GetCandidateCount@@YAKXZ ; ImeUi_GetCandidateCount
  00318	39 45 b4	 cmp	 DWORD PTR _nRow$9[ebp], eax
  0031b	0f 8d 95 00 00
	00		 jge	 $LN19@HandleMous
; Line 396
  00321	e8 00 00 00 00	 call	 ?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ ; CDXUTIMEEditBox::GetPrimaryLanguage
  00326	0f b7 d0	 movzx	 edx, ax
  00329	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv216[ebp], edx
  0032f	83 bd 60 ff ff
	ff 04		 cmp	 DWORD PTR tv216[ebp], 4
  00336	74 14		 je	 SHORT $LN16@HandleMous
  00338	83 bd 60 ff ff
	ff 11		 cmp	 DWORD PTR tv216[ebp], 17 ; 00000011H
  0033f	74 19		 je	 SHORT $LN15@HandleMous
  00341	83 bd 60 ff ff
	ff 12		 cmp	 DWORD PTR tv216[ebp], 18 ; 00000012H
  00348	74 02		 je	 SHORT $LN16@HandleMous
  0034a	eb 6a		 jmp	 SHORT $LN19@HandleMous
$LN16@HandleMous:
; Line 401
  0034c	8b 45 b4	 mov	 eax, DWORD PTR _nRow$9[ebp]
  0034f	83 c0 31	 add	 eax, 49			; 00000031H
  00352	50		 push	 eax
  00353	e8 00 00 00 00	 call	 ?SendKey@CDXUTIMEEditBox@@KGXE@Z ; CDXUTIMEEditBox::SendKey
; Line 402
  00358	eb 5c		 jmp	 SHORT $LN19@HandleMous
$LN15@HandleMous:
; Line 409
  0035a	e8 00 00 00 00	 call	 ?ImeUi_GetCandidateSelection@@YAKXZ ; ImeUi_GetCandidateSelection
  0035f	39 45 b4	 cmp	 DWORD PTR _nRow$9[ebp], eax
  00362	7e 06		 jle	 SHORT $LN14@HandleMous
; Line 410
  00364	c6 45 b3 28	 mov	 BYTE PTR _nVirtKey$8[ebp], 40 ; 00000028H
; Line 411
  00368	eb 04		 jmp	 SHORT $LN13@HandleMous
$LN14@HandleMous:
; Line 412
  0036a	c6 45 b3 26	 mov	 BYTE PTR _nVirtKey$8[ebp], 38 ; 00000026H
$LN13@HandleMous:
; Line 413
  0036e	e8 00 00 00 00	 call	 ?ImeUi_GetCandidateSelection@@YAKXZ ; ImeUi_GetCandidateSelection
  00373	8b 4d b4	 mov	 ecx, DWORD PTR _nRow$9[ebp]
  00376	2b c8		 sub	 ecx, eax
  00378	8b c1		 mov	 eax, ecx
  0037a	99		 cdq
  0037b	33 c2		 xor	 eax, edx
  0037d	2b c2		 sub	 eax, edx
  0037f	89 45 ac	 mov	 DWORD PTR _nNumToHit$7[ebp], eax
; Line 414
  00382	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _nStrike$6[ebp], 0
  00389	eb 09		 jmp	 SHORT $LN12@HandleMous
$LN11@HandleMous:
  0038b	8b 55 a8	 mov	 edx, DWORD PTR _nStrike$6[ebp]
  0038e	83 c2 01	 add	 edx, 1
  00391	89 55 a8	 mov	 DWORD PTR _nStrike$6[ebp], edx
$LN12@HandleMous:
  00394	8b 45 a8	 mov	 eax, DWORD PTR _nStrike$6[ebp]
  00397	3b 45 ac	 cmp	 eax, DWORD PTR _nNumToHit$7[ebp]
  0039a	7d 0c		 jge	 SHORT $LN10@HandleMous
; Line 415
  0039c	0f b6 4d b3	 movzx	 ecx, BYTE PTR _nVirtKey$8[ebp]
  003a0	51		 push	 ecx
  003a1	e8 00 00 00 00	 call	 ?SendKey@CDXUTIMEEditBox@@KGXE@Z ; CDXUTIMEEditBox::SendKey
  003a6	eb e3		 jmp	 SHORT $LN11@HandleMous
$LN10@HandleMous:
; Line 418
  003a8	6a 27		 push	 39			; 00000027H
  003aa	e8 00 00 00 00	 call	 ?SendKey@CDXUTIMEEditBox@@KGXE@Z ; CDXUTIMEEditBox::SendKey
; Line 419
  003af	6a 25		 push	 37			; 00000025H
  003b1	e8 00 00 00 00	 call	 ?SendKey@CDXUTIMEEditBox@@KGXE@Z ; CDXUTIMEEditBox::SendKey
$LN19@HandleMous:
; Line 425
  003b6	e9 fe 00 00 00	 jmp	 $LN9@HandleMous
$LN20@HandleMous:
; Line 432
  003bb	8d 55 94	 lea	 edx, DWORD PTR _nTrail$4[ebp]
  003be	52		 push	 edx
  003bf	8d 45 a0	 lea	 eax, DWORD PTR _nCharHit$5[ebp]
  003c2	50		 push	 eax
  003c3	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  003c6	8b 11		 mov	 edx, DWORD PTR [ecx]
  003c8	2b 15 1c 00 00
	00		 sub	 edx, DWORD PTR ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A+28
  003ce	52		 push	 edx
  003cf	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  003d4	e8 00 00 00 00	 call	 ?XtoCP@CUniBuffer@@QAE_NHPAH0@Z ; CUniBuffer::XtoCP
; Line 435
  003d9	e8 00 00 00 00	 call	 ?ImeUi_GetCandidateCount@@YAKXZ ; ImeUi_GetCandidateCount
  003de	83 e8 01	 sub	 eax, 1
  003e1	89 45 8c	 mov	 DWORD PTR _nCandidate$3[ebp], eax
; Line 437
  003e4	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _nEntryStart$2[ebp], 0
; Line 438
  003eb	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  003f2	eb 09		 jmp	 SHORT $LN8@HandleMous
$LN7@HandleMous:
  003f4	8b 45 84	 mov	 eax, DWORD PTR _i$1[ebp]
  003f7	83 c0 01	 add	 eax, 1
  003fa	89 45 84	 mov	 DWORD PTR _i$1[ebp], eax
$LN8@HandleMous:
  003fd	e8 00 00 00 00	 call	 ?ImeUi_GetCandidateCount@@YAKXZ ; ImeUi_GetCandidateCount
  00402	39 45 84	 cmp	 DWORD PTR _i$1[ebp], eax
  00405	0f 83 80 00 00
	00		 jae	 $LN6@HandleMous
; Line 440
  0040b	8b 4d a0	 mov	 ecx, DWORD PTR _nCharHit$5[ebp]
  0040e	3b 4d 88	 cmp	 ecx, DWORD PTR _nEntryStart$2[ebp]
  00411	7c 68		 jl	 SHORT $LN5@HandleMous
; Line 443
  00413	8b 55 84	 mov	 edx, DWORD PTR _i$1[ebp]
  00416	52		 push	 edx
  00417	e8 00 00 00 00	 call	 ?ImeUi_GetCandidate@@YAPA_WI@Z ; ImeUi_GetCandidate
  0041c	83 c4 04	 add	 esp, 4
  0041f	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv386[ebp], eax
  00425	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv386[ebp]
  0042b	83 c0 02	 add	 eax, 2
  0042e	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv389[ebp], eax
$LL53@HandleMous:
  00434	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv386[ebp]
  0043a	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0043d	66 89 95 56 ff
	ff ff		 mov	 WORD PTR tv392[ebp], dx
  00444	83 85 5c ff ff
	ff 02		 add	 DWORD PTR tv386[ebp], 2
  0044b	66 83 bd 56 ff
	ff ff 00	 cmp	 WORD PTR tv392[ebp], 0
  00453	75 df		 jne	 SHORT $LL53@HandleMous
  00455	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv386[ebp]
  0045b	2b 85 58 ff ff
	ff		 sub	 eax, DWORD PTR tv389[ebp]
  00461	d1 f8		 sar	 eax, 1
  00463	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv251[ebp], eax
  00469	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv251[ebp]
  0046f	8b 55 88	 mov	 edx, DWORD PTR _nEntryStart$2[ebp]
  00472	8d 44 0a 01	 lea	 eax, DWORD PTR [edx+ecx+1]
  00476	89 45 88	 mov	 DWORD PTR _nEntryStart$2[ebp], eax
; Line 445
  00479	eb 0b		 jmp	 SHORT $LN4@HandleMous
$LN5@HandleMous:
; Line 449
  0047b	8b 4d 84	 mov	 ecx, DWORD PTR _i$1[ebp]
  0047e	83 e9 01	 sub	 ecx, 1
  00481	89 4d 8c	 mov	 DWORD PTR _nCandidate$3[ebp], ecx
; Line 450
  00484	eb 05		 jmp	 SHORT $LN6@HandleMous
$LN4@HandleMous:
; Line 452
  00486	e9 69 ff ff ff	 jmp	 $LN7@HandleMous
$LN6@HandleMous:
; Line 455
  0048b	e8 00 00 00 00	 call	 ?GetPrimaryLanguage@CDXUTIMEEditBox@@KGGXZ ; CDXUTIMEEditBox::GetPrimaryLanguage
  00490	0f b7 d0	 movzx	 edx, ax
  00493	89 95 4c ff ff
	ff		 mov	 DWORD PTR tv257[ebp], edx
  00499	83 bd 4c ff ff
	ff 04		 cmp	 DWORD PTR tv257[ebp], 4
  004a0	74 0b		 je	 SHORT $LN1@HandleMous
  004a2	83 bd 4c ff ff
	ff 12		 cmp	 DWORD PTR tv257[ebp], 18 ; 00000012H
  004a9	74 02		 je	 SHORT $LN1@HandleMous
  004ab	eb 0c		 jmp	 SHORT $LN9@HandleMous
$LN1@HandleMous:
; Line 460
  004ad	8b 45 8c	 mov	 eax, DWORD PTR _nCandidate$3[ebp]
  004b0	83 c0 31	 add	 eax, 49			; 00000031H
  004b3	50		 push	 eax
  004b4	e8 00 00 00 00	 call	 ?SendKey@CDXUTIMEEditBox@@KGXE@Z ; CDXUTIMEEditBox::SendKey
$LN9@HandleMous:
; Line 465
  004b9	b0 01		 mov	 al, 1
  004bb	eb 18		 jmp	 SHORT $LN43@HandleMous
$LN39@HandleMous:
; Line 471
  004bd	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  004c0	51		 push	 ecx
  004c1	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  004c4	52		 push	 edx
  004c5	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  004c8	50		 push	 eax
  004c9	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  004cc	51		 push	 ecx
  004cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004d0	e8 00 00 00 00	 call	 ?HandleMouse@CDXUTEditBox@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTEditBox::HandleMouse
$LN43@HandleMous:
; Line 472
  004d5	52		 push	 edx
  004d6	8b cd		 mov	 ecx, ebp
  004d8	50		 push	 eax
  004d9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN60@HandleMous
  004df	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004e4	58		 pop	 eax
  004e5	5a		 pop	 edx
  004e6	5f		 pop	 edi
  004e7	5e		 pop	 esi
  004e8	81 c4 b4 00 00
	00		 add	 esp, 180		; 000000b4H
  004ee	3b ec		 cmp	 ebp, esp
  004f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004f5	8b e5		 mov	 esp, ebp
  004f7	5d		 pop	 ebp
  004f8	c2 10 00	 ret	 16			; 00000010H
  004fb	90		 npad	 1
$LN60@HandleMous:
  004fc	05 00 00 00	 DD	 5
  00500	00 00 00 00	 DD	 $LN59@HandleMous
$LN59@HandleMous:
  00504	f0 ff ff ff	 DD	 -16			; fffffff0H
  00508	04 00 00 00	 DD	 4
  0050c	00 00 00 00	 DD	 $LN54@HandleMous
  00510	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00514	04 00 00 00	 DD	 4
  00518	00 00 00 00	 DD	 $LN55@HandleMous
  0051c	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00520	04 00 00 00	 DD	 4
  00524	00 00 00 00	 DD	 $LN56@HandleMous
  00528	a0 ff ff ff	 DD	 -96			; ffffffa0H
  0052c	04 00 00 00	 DD	 4
  00530	00 00 00 00	 DD	 $LN57@HandleMous
  00534	94 ff ff ff	 DD	 -108			; ffffff94H
  00538	04 00 00 00	 DD	 4
  0053c	00 00 00 00	 DD	 $LN58@HandleMous
$LN58@HandleMous:
  00540	6e		 DB	 110			; 0000006eH
  00541	54		 DB	 84			; 00000054H
  00542	72		 DB	 114			; 00000072H
  00543	61		 DB	 97			; 00000061H
  00544	69		 DB	 105			; 00000069H
  00545	6c		 DB	 108			; 0000006cH
  00546	00		 DB	 0
$LN57@HandleMous:
  00547	6e		 DB	 110			; 0000006eH
  00548	43		 DB	 67			; 00000043H
  00549	68		 DB	 104			; 00000068H
  0054a	61		 DB	 97			; 00000061H
  0054b	72		 DB	 114			; 00000072H
  0054c	48		 DB	 72			; 00000048H
  0054d	69		 DB	 105			; 00000069H
  0054e	74		 DB	 116			; 00000074H
  0054f	00		 DB	 0
$LN56@HandleMous:
  00550	6e		 DB	 110			; 0000006eH
  00551	54		 DB	 84			; 00000054H
  00552	72		 DB	 114			; 00000072H
  00553	61		 DB	 97			; 00000061H
  00554	69		 DB	 105			; 00000069H
  00555	6c		 DB	 108			; 0000006cH
  00556	00		 DB	 0
$LN55@HandleMous:
  00557	6e		 DB	 110			; 0000006eH
  00558	43		 DB	 67			; 00000043H
  00559	68		 DB	 104			; 00000068H
  0055a	61		 DB	 97			; 00000061H
  0055b	72		 DB	 114			; 00000072H
  0055c	42		 DB	 66			; 00000042H
  0055d	6f		 DB	 111			; 0000006fH
  0055e	64		 DB	 100			; 00000064H
  0055f	79		 DB	 121			; 00000079H
  00560	48		 DB	 72			; 00000048H
  00561	69		 DB	 105			; 00000069H
  00562	74		 DB	 116			; 00000074H
  00563	00		 DB	 0
$LN54@HandleMous:
  00564	6e		 DB	 110			; 0000006eH
  00565	43		 DB	 67			; 00000043H
  00566	6f		 DB	 111			; 0000006fH
  00567	6d		 DB	 109			; 0000006dH
  00568	70		 DB	 112			; 00000070H
  00569	53		 DB	 83			; 00000053H
  0056a	74		 DB	 116			; 00000074H
  0056b	72		 DB	 114			; 00000072H
  0056c	57		 DB	 87			; 00000057H
  0056d	69		 DB	 105			; 00000069H
  0056e	64		 DB	 100			; 00000064H
  0056f	74		 DB	 116			; 00000074H
  00570	68		 DB	 104			; 00000068H
  00571	00		 DB	 0
?HandleMouse@CDXUTIMEEditBox@@UAE_NIABUtagPOINT@@IJ@Z ENDP ; CDXUTIMEEditBox::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv85 = -24						; size = 4
_trapped$ = -20						; size = 4
_trappedData$ = -9					; size = 1
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@CDXUTIMEEditBox@@UAE_NIIJ@Z PROC		; CDXUTIMEEditBox::MsgProc
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 478
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 479
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00028	85 c9		 test	 ecx, ecx
  0002a	74 0b		 je	 SHORT $LN6@MsgProc
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00033	85 c0		 test	 eax, eax
  00035	75 07		 jne	 SHORT $LN7@MsgProc
$LN6@MsgProc:
; Line 480
  00037	32 c0		 xor	 al, al
  00039	e9 b7 00 00 00	 jmp	 $LN8@MsgProc
$LN7@MsgProc:
; Line 486
  0003e	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?m_bIMEStaticMsgProcCalled@CDXUTIMEEditBox@@1_NA ; CDXUTIMEEditBox::m_bIMEStaticMsgProcCalled
  00045	85 c9		 test	 ecx, ecx
  00047	74 09		 je	 SHORT $LN10@MsgProc
  00049	ba 00 00 00 00	 mov	 edx, OFFSET $SG159737
  0004e	85 d2		 test	 edx, edx
  00050	75 21		 jne	 SHORT $LN11@MsgProc
$LN10@MsgProc:
  00052	8b f4		 mov	 esi, esp
  00054	68 e6 01 00 00	 push	 486			; 000001e6H
  00059	68 00 00 00 00	 push	 OFFSET $SG159738
  0005e	68 00 00 00 00	 push	 OFFSET $SG159739
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@MsgProc:
; Line 488
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00076	89 4d e8	 mov	 DWORD PTR tv85[ebp], ecx
  00079	83 7d e8 02	 cmp	 DWORD PTR tv85[ebp], 2
  0007d	74 02		 je	 SHORT $LN3@MsgProc
  0007f	eb 05		 jmp	 SHORT $LN4@MsgProc
$LN3@MsgProc:
; Line 491
  00081	e8 00 00 00 00	 call	 ?ImeUi_Uninitialize@@YAXXZ ; ImeUi_Uninitialize
$LN4@MsgProc:
; Line 496
  00086	8d 55 f7	 lea	 edx, DWORD PTR _trappedData$[ebp]
  00089	89 55 ec	 mov	 DWORD PTR _trapped$[ebp], edx
; Line 498
  0008c	8b 45 ec	 mov	 eax, DWORD PTR _trapped$[ebp]
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
; Line 499
  00092	e8 00 00 00 00	 call	 ?ImeUi_IsEnabled@@YA_NXZ ; ImeUi_IsEnabled
  00097	0f b6 c8	 movzx	 ecx, al
  0009a	85 c9		 test	 ecx, ecx
  0009c	75 16		 jne	 SHORT $LN2@MsgProc
; Line 500
  0009e	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  000a1	52		 push	 edx
  000a2	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  000a9	51		 push	 ecx
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?MsgProc@CDXUTEditBox@@UAE_NIIJ@Z ; CDXUTEditBox::MsgProc
  000b2	eb 41		 jmp	 SHORT $LN8@MsgProc
$LN2@MsgProc:
; Line 502
  000b4	8b 55 ec	 mov	 edx, DWORD PTR _trapped$[ebp]
  000b7	52		 push	 edx
  000b8	8d 45 10	 lea	 eax, DWORD PTR _lParam$[ebp]
  000bb	50		 push	 eax
  000bc	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  000bf	51		 push	 ecx
  000c0	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  000c3	52		 push	 edx
  000c4	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?ImeUi_ProcessMessage@@YAJPAUHWND__@@IIAAJPA_N@Z ; ImeUi_ProcessMessage
  000cf	83 c4 14	 add	 esp, 20			; 00000014H
; Line 503
  000d2	8b 45 ec	 mov	 eax, DWORD PTR _trapped$[ebp]
  000d5	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000d8	85 c9		 test	 ecx, ecx
  000da	75 14		 jne	 SHORT $LN1@MsgProc
; Line 504
  000dc	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  000df	52		 push	 edx
  000e0	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  000e3	50		 push	 eax
  000e4	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  000e7	51		 push	 ecx
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	e8 00 00 00 00	 call	 ?MsgProc@CDXUTEditBox@@UAE_NIIJ@Z ; CDXUTEditBox::MsgProc
$LN1@MsgProc:
; Line 506
  000f0	8b 55 ec	 mov	 edx, DWORD PTR _trapped$[ebp]
  000f3	8a 02		 mov	 al, BYTE PTR [edx]
$LN8@MsgProc:
; Line 507
  000f5	52		 push	 edx
  000f6	8b cd		 mov	 ecx, ebp
  000f8	50		 push	 eax
  000f9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@MsgProc
  000ff	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00104	58		 pop	 eax
  00105	5a		 pop	 edx
  00106	5e		 pop	 esi
  00107	83 c4 18	 add	 esp, 24			; 00000018H
  0010a	3b ec		 cmp	 ebp, esp
  0010c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 0c 00	 ret	 12			; 0000000cH
  00117	90		 npad	 1
$LN14@MsgProc:
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN13@MsgProc
$LN13@MsgProc:
  00120	f7 ff ff ff	 DD	 -9			; fffffff7H
  00124	01 00 00 00	 DD	 1
  00128	00 00 00 00	 DD	 $LN12@MsgProc
$LN12@MsgProc:
  0012c	74		 DB	 116			; 00000074H
  0012d	72		 DB	 114			; 00000072H
  0012e	61		 DB	 97			; 00000061H
  0012f	70		 DB	 112			; 00000070H
  00130	70		 DB	 112			; 00000070H
  00131	65		 DB	 101			; 00000065H
  00132	64		 DB	 100			; 00000064H
  00133	44		 DB	 68			; 00000044H
  00134	61		 DB	 97			; 00000061H
  00135	74		 DB	 116			; 00000074H
  00136	61		 DB	 97			; 00000061H
  00137	00		 DB	 0
?MsgProc@CDXUTIMEEditBox@@UAE_NIIJ@Z ENDP		; CDXUTIMEEditBox::MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pElement$ = -36					; size = 4
_rc$1 = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTIMEEditBox@@UAEXM@Z PROC			; CDXUTIMEEditBox::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 923
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00031	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 924
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0003b	85 c9		 test	 ecx, ecx
  0003d	75 05		 jne	 SHORT $LN7@Render
; Line 925
  0003f	e9 6f 01 00 00	 jmp	 $LN8@Render
$LN7@Render:
; Line 929
  00044	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00047	83 ba 90 01 00
	00 00		 cmp	 DWORD PTR [edx+400], 0
  0004e	75 67		 jne	 SHORT $LN6@Render
; Line 934
  00050	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _rc$1[ebp], 0
  00057	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _rc$1[ebp+4], 0
  0005e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rc$1[ebp+8], 0
  00065	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rc$1[ebp+12], 0
; Line 935
  0006c	6a ff		 push	 -1
  0006e	8d 45 e4	 lea	 eax, DWORD PTR _rc$1[ebp]
  00071	50		 push	 eax
  00072	6a 09		 push	 9
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	83 c1 20	 add	 ecx, 32			; 00000020H
  0007a	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0007f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00081	51		 push	 ecx
  00082	68 00 00 00 00	 push	 OFFSET $SG159936
  00087	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0008d	e8 00 00 00 00	 call	 ?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
; Line 936
  00092	8b 45 ec	 mov	 eax, DWORD PTR _rc$1[ebp+8]
  00095	2b 45 e4	 sub	 eax, DWORD PTR _rc$1[ebp]
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	89 81 90 01 00
	00		 mov	 DWORD PTR [ecx+400], eax
; Line 939
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	8b 02		 mov	 eax, DWORD PTR [edx]
  000a6	8b f4		 mov	 esi, esp
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  000ae	ff d2		 call	 edx
  000b0	3b f4		 cmp	 esi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@Render:
; Line 943
  000b7	51		 push	 ecx
  000b8	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	e8 00 00 00 00	 call	 ?Render@CDXUTEditBox@@UAEXM@Z ; CDXUTEditBox::Render
; Line 945
  000ca	6a 01		 push	 1
  000cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	e8 00 00 00 00	 call	 ?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
  000d4	89 45 dc	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 946
  000d7	83 7d dc 00	 cmp	 DWORD PTR _pElement$[ebp], 0
  000db	74 3a		 je	 SHORT $LN5@Render
; Line 948
  000dd	8b 45 dc	 mov	 eax, DWORD PTR _pElement$[ebp]
  000e0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000e3	51		 push	 ecx
  000e4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  000ea	e8 00 00 00 00	 call	 ?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialog::GetFont
  000ef	50		 push	 eax
  000f0	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  000f5	e8 00 00 00 00	 call	 ?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z ; CUniBuffer::SetFontNode
; Line 949
  000fa	8b 45 dc	 mov	 eax, DWORD PTR _pElement$[ebp]
  000fd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00100	51		 push	 ecx
  00101	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00107	e8 00 00 00 00	 call	 ?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialog::GetFont
  0010c	50		 push	 eax
  0010d	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CandList@CDXUTIMEEditBox@@1UCCandList@1@A ; CDXUTIMEEditBox::s_CandList
  00112	e8 00 00 00 00	 call	 ?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z ; CUniBuffer::SetFontNode
$LN5@Render:
; Line 956
  00117	6a 01		 push	 1
  00119	6a 01		 push	 1
  0011b	e8 00 00 00 00	 call	 ?ImeUi_RenderUI@@YAX_N0@Z ; ImeUi_RenderUI
  00120	83 c4 08	 add	 esp, 8
; Line 958
  00123	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00126	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  0012a	85 c9		 test	 ecx, ecx
  0012c	0f 84 81 00 00
	00		 je	 $LN1@Render
; Line 961
  00132	8b f4		 mov	 esi, esp
  00134	51		 push	 ecx
  00135	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0013a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00142	8b 02		 mov	 eax, DWORD PTR [edx]
  00144	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	8b 50 58	 mov	 edx, DWORD PTR [eax+88]
  0014a	ff d2		 call	 edx
  0014c	3b f4		 cmp	 esi, esp
  0014e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 966
  00153	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00156	8b 10		 mov	 edx, DWORD PTR [eax]
  00158	8b f4		 mov	 esi, esp
  0015a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  00160	ff d0		 call	 eax
  00162	3b f4		 cmp	 esi, esp
  00164	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 971
  00169	e8 00 00 00 00	 call	 ?ImeUi_IsShowReadingWindow@@YA_NXZ ; ImeUi_IsShowReadingWindow
  0016e	0f b6 c8	 movzx	 ecx, al
  00171	85 c9		 test	 ecx, ecx
  00173	74 1a		 je	 SHORT $LN3@Render
; Line 973
  00175	8b f4		 mov	 esi, esp
  00177	6a 01		 push	 1
  00179	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0017c	8b 02		 mov	 eax, DWORD PTR [edx]
  0017e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00181	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  00184	ff d2		 call	 edx
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	eb 24		 jmp	 SHORT $LN1@Render
$LN3@Render:
; Line 974
  0018f	e8 00 00 00 00	 call	 ?ImeUi_IsShowCandListWindow@@YA_NXZ ; ImeUi_IsShowCandListWindow
  00194	0f b6 c0	 movzx	 eax, al
  00197	85 c0		 test	 eax, eax
  00199	74 18		 je	 SHORT $LN1@Render
; Line 976
  0019b	8b f4		 mov	 esi, esp
  0019d	6a 00		 push	 0
  0019f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  001aa	ff d0		 call	 eax
  001ac	3b f4		 cmp	 esi, esp
  001ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Render:
$LN8@Render:
; Line 978
  001b3	52		 push	 edx
  001b4	8b cd		 mov	 ecx, ebp
  001b6	50		 push	 eax
  001b7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@Render
  001bd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001c2	58		 pop	 eax
  001c3	5a		 pop	 edx
  001c4	5e		 pop	 esi
  001c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c8	33 cd		 xor	 ecx, ebp
  001ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001cf	83 c4 24	 add	 esp, 36			; 00000024H
  001d2	3b ec		 cmp	 ebp, esp
  001d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d9	8b e5		 mov	 esp, ebp
  001db	5d		 pop	 ebp
  001dc	c2 04 00	 ret	 4
  001df	90		 npad	 1
$LN12@Render:
  001e0	01 00 00 00	 DD	 1
  001e4	00 00 00 00	 DD	 $LN11@Render
$LN11@Render:
  001e8	e4 ff ff ff	 DD	 -28			; ffffffe4H
  001ec	10 00 00 00	 DD	 16			; 00000010H
  001f0	00 00 00 00	 DD	 $LN10@Render
$LN10@Render:
  001f4	72		 DB	 114			; 00000072H
  001f5	63		 DB	 99			; 00000063H
  001f6	00		 DB	 0
?Render@CDXUTIMEEditBox@@UAEXM@Z ENDP			; CDXUTIMEEditBox::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bFlag$ = 8						; size = 1
?SetImeEnableFlag@CDXUTIMEEditBox@@SGX_N@Z PROC		; CDXUTIMEEditBox::SetImeEnableFlag
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 983
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 984
  00003	8a 45 08	 mov	 al, BYTE PTR _bFlag$[ebp]
  00006	a2 00 00 00 00	 mov	 BYTE PTR ?s_bImeFlag@CDXUTIMEEditBox@@1_NA, al ; CDXUTIMEEditBox::s_bImeFlag
; Line 985
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?SetImeEnableFlag@CDXUTIMEEditBox@@SGX_N@Z ENDP		; CDXUTIMEEditBox::SetImeEnableFlag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?StaticMsgProc@CDXUTIMEEditBox@@SG_NPAUHWND__@@IIJ@Z PROC ; CDXUTIMEEditBox::StaticMsgProc
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 256
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 260
  0000b	e8 00 00 00 00	 call	 ?ImeUi_IsEnabled@@YA_NXZ ; ImeUi_IsEnabled
  00010	0f b6 c0	 movzx	 eax, al
  00013	85 c0		 test	 eax, eax
  00015	75 07		 jne	 SHORT $LN8@StaticMsgP
; Line 261
  00017	32 c0		 xor	 al, al
  00019	e9 b8 00 00 00	 jmp	 $LN9@StaticMsgP
$LN8@StaticMsgP:
; Line 264
  0001e	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bIMEStaticMsgProcCalled@CDXUTIMEEditBox@@1_NA, 1 ; CDXUTIMEEditBox::m_bIMEStaticMsgProcCalled
; Line 267
  00025	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00028	89 4d fc	 mov	 DWORD PTR tv67[ebp], ecx
  0002b	81 7d fc 0e 01
	00 00		 cmp	 DWORD PTR tv67[ebp], 270 ; 0000010eH
  00032	77 1d		 ja	 SHORT $LN11@StaticMsgP
  00034	81 7d fc 0e 01
	00 00		 cmp	 DWORD PTR tv67[ebp], 270 ; 0000010eH
  0003b	74 6e		 je	 SHORT $LN2@StaticMsgP
  0003d	83 7d fc 51	 cmp	 DWORD PTR tv67[ebp], 81	; 00000051H
  00041	74 22		 je	 SHORT $LN5@StaticMsgP
  00043	81 7d fc 0d 01
	00 00		 cmp	 DWORD PTR tv67[ebp], 269 ; 0000010dH
  0004a	74 42		 je	 SHORT $LN3@StaticMsgP
  0004c	e9 83 00 00 00	 jmp	 $LN6@StaticMsgP
$LN11@StaticMsgP:
  00051	81 7d fc 0f 01
	00 00		 cmp	 DWORD PTR tv67[ebp], 271 ; 0000010fH
  00058	74 69		 je	 SHORT $LN1@StaticMsgP
  0005a	81 7d fc 81 02
	00 00		 cmp	 DWORD PTR tv67[ebp], 641 ; 00000281H
  00061	74 13		 je	 SHORT $LN4@StaticMsgP
  00063	eb 6f		 jmp	 SHORT $LN6@StaticMsgP
$LN5@StaticMsgP:
; Line 270
  00065	68 00 00 00 00	 push	 OFFSET $SG159628
  0006a	e8 00 00 00 00	 call	 ?DXUTOutputDebugStringW@@YAXPB_WZZ ; DXUTOutputDebugStringW
  0006f	83 c4 04	 add	 esp, 4
; Line 273
  00072	b0 01		 mov	 al, 1
  00074	eb 60		 jmp	 SHORT $LN9@StaticMsgP
$LN4@StaticMsgP:
; Line 276
  00076	68 00 00 00 00	 push	 OFFSET $SG159630
  0007b	e8 00 00 00 00	 call	 ?DXUTOutputDebugStringW@@YAXPB_WZZ ; DXUTOutputDebugStringW
  00080	83 c4 04	 add	 esp, 4
; Line 280
  00083	c7 45 14 00 00
	00 00		 mov	 DWORD PTR _lParam$[ebp], 0
; Line 281
  0008a	32 c0		 xor	 al, al
  0008c	eb 48		 jmp	 SHORT $LN9@StaticMsgP
$LN3@StaticMsgP:
; Line 287
  0008e	68 00 00 00 00	 push	 OFFSET $SG159632
  00093	e8 00 00 00 00	 call	 ?DXUTOutputDebugStringW@@YAXPB_WZZ ; DXUTOutputDebugStringW
  00098	83 c4 04	 add	 esp, 4
; Line 288
  0009b	e8 00 00 00 00	 call	 ?ResetCompositionString@CDXUTIMEEditBox@@KGXXZ ; CDXUTIMEEditBox::ResetCompositionString
; Line 291
  000a0	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?s_bHideCaret@CDXUTEditBox@@1_NA, 1 ; CDXUTEditBox::s_bHideCaret
; Line 292
  000a7	b0 01		 mov	 al, 1
  000a9	eb 2b		 jmp	 SHORT $LN9@StaticMsgP
$LN2@StaticMsgP:
; Line 294
  000ab	68 00 00 00 00	 push	 OFFSET $SG159634
  000b0	e8 00 00 00 00	 call	 ?DXUTOutputDebugStringW@@YAXPB_WZZ ; DXUTOutputDebugStringW
  000b5	83 c4 04	 add	 esp, 4
; Line 295
  000b8	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?s_bHideCaret@CDXUTEditBox@@1_NA, 0 ; CDXUTEditBox::s_bHideCaret
; Line 296
  000bf	32 c0		 xor	 al, al
  000c1	eb 13		 jmp	 SHORT $LN9@StaticMsgP
$LN1@StaticMsgP:
; Line 298
  000c3	68 00 00 00 00	 push	 OFFSET $SG159636
  000c8	e8 00 00 00 00	 call	 ?DXUTOutputDebugStringW@@YAXPB_WZZ ; DXUTOutputDebugStringW
  000cd	83 c4 04	 add	 esp, 4
; Line 299
  000d0	32 c0		 xor	 al, al
  000d2	eb 02		 jmp	 SHORT $LN9@StaticMsgP
$LN6@StaticMsgP:
; Line 302
  000d4	32 c0		 xor	 al, al
$LN9@StaticMsgP:
; Line 303
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b ec		 cmp	 ebp, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 10 00	 ret	 16			; 00000010H
?StaticMsgProc@CDXUTIMEEditBox@@SG_NPAUHWND__@@IIJ@Z ENDP ; CDXUTIMEEditBox::StaticMsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
?Initialize@CDXUTIMEEditBox@@SGXPAUHWND__@@@Z PROC	; CDXUTIMEEditBox::Initialize
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 990
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 991
  00003	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ImeUiCallback_DrawRect@@3P6GXHHHHK@ZA, 0 ; ImeUiCallback_DrawRect
; Line 992
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__malloc
  00012	a3 00 00 00 00	 mov	 DWORD PTR ?ImeUiCallback_Malloc@@3P6APAXI@ZA, eax ; ImeUiCallback_Malloc
; Line 993
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp__free
  0001d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ImeUiCallback_Free@@3P6AXPAX@ZA, ecx ; ImeUiCallback_Free
; Line 994
  00023	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ImeUiCallback_DrawFans@@3P6GXPBUIMEUI_VERTEX@@I@ZA, 0 ; ImeUiCallback_DrawFans
; Line 996
  0002d	6a 00		 push	 0
  0002f	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ?ImeUi_Initialize@@YA_NPAUHWND__@@_N@Z ; ImeUi_Initialize
  00038	83 c4 08	 add	 esp, 8
; Line 998
  0003b	68 00 01 00 00	 push	 256			; 00000100H
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_CompString@CDXUTIMEEditBox@@1VCUniBuffer@@A ; CDXUTIMEEditBox::s_CompString
  00045	e8 00 00 00 00	 call	 ?SetBufferSize@CUniBuffer@@QAE_NH@Z ; CUniBuffer::SetBufferSize
; Line 999
  0004a	6a 01		 push	 1
  0004c	e8 00 00 00 00	 call	 ?ImeUi_EnableIme@@YAX_N@Z ; ImeUi_EnableIme
  00051	83 c4 04	 add	 esp, 4
; Line 1000
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?Initialize@CDXUTIMEEditBox@@SGXPAUHWND__@@@Z ENDP	; CDXUTIMEEditBox::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rcTexture$ = -140					; size = 16
_Element$ = -116					; size = 108
__$ArrayPad$ = -4					; size = 4
_pDialog$ = 8						; size = 4
?InitDefaultElements@CDXUTIMEEditBox@@SAXPAVCDXUTDialog@@@Z PROC ; CDXUTIMEEditBox::InitDefaultElements
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 70
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 70 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-144]
  00011	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 75
  00027	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0CDXUTElement@@QAE@XZ
; Line 78
  0002f	6a 00		 push	 0
  00031	68 00 00 00 ff	 push	 -16777216		; ff000000H
  00036	6a 00		 push	 0
  00038	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  0003b	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 81
  00040	8b f4		 mov	 esi, esp
  00042	6a 71		 push	 113			; 00000071H
  00044	68 f1 00 00 00	 push	 241			; 000000f1H
  00049	6a 5a		 push	 90			; 0000005aH
  0004b	6a 0e		 push	 14			; 0000000eH
  0004d	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00053	50		 push	 eax
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 82
  00061	6a ff		 push	 -1
  00063	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00069	51		 push	 ecx
  0006a	6a 00		 push	 0
  0006c	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  0006f	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 83
  00074	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  00077	52		 push	 edx
  00078	6a 00		 push	 0
  0007a	6a 07		 push	 7
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0007f	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 84
  00084	8b f4		 mov	 esi, esp
  00086	6a 5a		 push	 90			; 0000005aH
  00088	6a 0e		 push	 14			; 0000000eH
  0008a	6a 52		 push	 82			; 00000052H
  0008c	6a 08		 push	 8
  0008e	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 85
  000a2	6a ff		 push	 -1
  000a4	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  000aa	51		 push	 ecx
  000ab	6a 00		 push	 0
  000ad	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  000b0	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 86
  000b5	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  000b8	52		 push	 edx
  000b9	6a 01		 push	 1
  000bb	6a 07		 push	 7
  000bd	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  000c0	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 87
  000c5	8b f4		 mov	 esi, esp
  000c7	6a 5a		 push	 90			; 0000005aH
  000c9	68 f1 00 00 00	 push	 241			; 000000f1H
  000ce	6a 52		 push	 82			; 00000052H
  000d0	6a 0e		 push	 14			; 0000000eH
  000d2	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  000d8	50		 push	 eax
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  000df	3b f4		 cmp	 esi, esp
  000e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 88
  000e6	6a ff		 push	 -1
  000e8	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  000ee	51		 push	 ecx
  000ef	6a 00		 push	 0
  000f1	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  000f4	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 89
  000f9	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  000fc	52		 push	 edx
  000fd	6a 02		 push	 2
  000ff	6a 07		 push	 7
  00101	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00104	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 90
  00109	8b f4		 mov	 esi, esp
  0010b	6a 5a		 push	 90			; 0000005aH
  0010d	68 f6 00 00 00	 push	 246			; 000000f6H
  00112	6a 52		 push	 82			; 00000052H
  00114	68 f1 00 00 00	 push	 241			; 000000f1H
  00119	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  0011f	50		 push	 eax
  00120	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00126	3b f4		 cmp	 esi, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 91
  0012d	6a ff		 push	 -1
  0012f	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00135	51		 push	 ecx
  00136	6a 00		 push	 0
  00138	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  0013b	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 92
  00140	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  00143	52		 push	 edx
  00144	6a 03		 push	 3
  00146	6a 07		 push	 7
  00148	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0014b	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 93
  00150	8b f4		 mov	 esi, esp
  00152	6a 71		 push	 113			; 00000071H
  00154	6a 0e		 push	 14			; 0000000eH
  00156	6a 5a		 push	 90			; 0000005aH
  00158	6a 08		 push	 8
  0015a	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00160	50		 push	 eax
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00167	3b f4		 cmp	 esi, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 94
  0016e	6a ff		 push	 -1
  00170	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00176	51		 push	 ecx
  00177	6a 00		 push	 0
  00179	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  0017c	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 95
  00181	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  00184	52		 push	 edx
  00185	6a 04		 push	 4
  00187	6a 07		 push	 7
  00189	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0018c	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 96
  00191	8b f4		 mov	 esi, esp
  00193	6a 71		 push	 113			; 00000071H
  00195	68 f6 00 00 00	 push	 246			; 000000f6H
  0019a	6a 5a		 push	 90			; 0000005aH
  0019c	68 f1 00 00 00	 push	 241			; 000000f1H
  001a1	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  001a7	50		 push	 eax
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  001ae	3b f4		 cmp	 esi, esp
  001b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 97
  001b5	6a ff		 push	 -1
  001b7	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  001bd	51		 push	 ecx
  001be	6a 00		 push	 0
  001c0	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  001c3	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 98
  001c8	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  001cb	52		 push	 edx
  001cc	6a 05		 push	 5
  001ce	6a 07		 push	 7
  001d0	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  001d3	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 99
  001d8	8b f4		 mov	 esi, esp
  001da	6a 79		 push	 121			; 00000079H
  001dc	6a 0e		 push	 14			; 0000000eH
  001de	6a 71		 push	 113			; 00000071H
  001e0	6a 08		 push	 8
  001e2	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  001e8	50		 push	 eax
  001e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  001ef	3b f4		 cmp	 esi, esp
  001f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 100
  001f6	6a ff		 push	 -1
  001f8	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  001fe	51		 push	 ecx
  001ff	6a 00		 push	 0
  00201	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  00204	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 101
  00209	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  0020c	52		 push	 edx
  0020d	6a 06		 push	 6
  0020f	6a 07		 push	 7
  00211	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00214	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 102
  00219	8b f4		 mov	 esi, esp
  0021b	6a 79		 push	 121			; 00000079H
  0021d	68 f1 00 00 00	 push	 241			; 000000f1H
  00222	6a 71		 push	 113			; 00000071H
  00224	6a 0e		 push	 14			; 0000000eH
  00226	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  0022c	50		 push	 eax
  0022d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00233	3b f4		 cmp	 esi, esp
  00235	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 103
  0023a	6a ff		 push	 -1
  0023c	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00242	51		 push	 ecx
  00243	6a 00		 push	 0
  00245	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  00248	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 104
  0024d	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  00250	52		 push	 edx
  00251	6a 07		 push	 7
  00253	6a 07		 push	 7
  00255	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00258	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 105
  0025d	8b f4		 mov	 esi, esp
  0025f	6a 79		 push	 121			; 00000079H
  00261	68 f6 00 00 00	 push	 246			; 000000f6H
  00266	6a 71		 push	 113			; 00000071H
  00268	68 f1 00 00 00	 push	 241			; 000000f1H
  0026d	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00273	50		 push	 eax
  00274	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0027a	3b f4		 cmp	 esi, esp
  0027c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 106
  00281	6a ff		 push	 -1
  00283	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00289	51		 push	 ecx
  0028a	6a 00		 push	 0
  0028c	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  0028f	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 107
  00294	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  00297	52		 push	 edx
  00298	6a 08		 push	 8
  0029a	6a 07		 push	 7
  0029c	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0029f	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 109
  002a4	8b f4		 mov	 esi, esp
  002a6	6a 36		 push	 54			; 00000036H
  002a8	68 88 00 00 00	 push	 136			; 00000088H
  002ad	6a 00		 push	 0
  002af	6a 00		 push	 0
  002b1	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  002b7	50		 push	 eax
  002b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  002be	3b f4		 cmp	 esi, esp
  002c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 110
  002c5	6a ff		 push	 -1
  002c7	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  002cd	51		 push	 ecx
  002ce	6a 00		 push	 0
  002d0	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  002d3	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 111
  002d8	6a 05		 push	 5
  002da	68 00 00 00 ff	 push	 -16777216		; ff000000H
  002df	6a 00		 push	 0
  002e1	8d 4d 8c	 lea	 ecx, DWORD PTR _Element$[ebp]
  002e4	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 112
  002e9	8d 55 8c	 lea	 edx, DWORD PTR _Element$[ebp]
  002ec	52		 push	 edx
  002ed	6a 09		 push	 9
  002ef	6a 07		 push	 7
  002f1	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  002f4	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 113
  002f9	52		 push	 edx
  002fa	8b cd		 mov	 ecx, ebp
  002fc	50		 push	 eax
  002fd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@InitDefaul
  00303	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00308	58		 pop	 eax
  00309	5a		 pop	 edx
  0030a	5f		 pop	 edi
  0030b	5e		 pop	 esi
  0030c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0030f	33 cd		 xor	 ecx, ebp
  00311	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00316	81 c4 90 00 00
	00		 add	 esp, 144		; 00000090H
  0031c	3b ec		 cmp	 ebp, esp
  0031e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00323	8b e5		 mov	 esp, ebp
  00325	5d		 pop	 ebp
  00326	c3		 ret	 0
  00327	90		 npad	 1
$LN6@InitDefaul:
  00328	02 00 00 00	 DD	 2
  0032c	00 00 00 00	 DD	 $LN5@InitDefaul
$LN5@InitDefaul:
  00330	8c ff ff ff	 DD	 -116			; ffffff8cH
  00334	6c 00 00 00	 DD	 108			; 0000006cH
  00338	00 00 00 00	 DD	 $LN3@InitDefaul
  0033c	74 ff ff ff	 DD	 -140			; ffffff74H
  00340	10 00 00 00	 DD	 16			; 00000010H
  00344	00 00 00 00	 DD	 $LN4@InitDefaul
$LN4@InitDefaul:
  00348	72		 DB	 114			; 00000072H
  00349	63		 DB	 99			; 00000063H
  0034a	54		 DB	 84			; 00000054H
  0034b	65		 DB	 101			; 00000065H
  0034c	78		 DB	 120			; 00000078H
  0034d	74		 DB	 116			; 00000074H
  0034e	75		 DB	 117			; 00000075H
  0034f	72		 DB	 114			; 00000072H
  00350	65		 DB	 101			; 00000065H
  00351	00		 DB	 0
$LN3@InitDefaul:
  00352	45		 DB	 69			; 00000045H
  00353	6c		 DB	 108			; 0000006cH
  00354	65		 DB	 101			; 00000065H
  00355	6d		 DB	 109			; 0000006dH
  00356	65		 DB	 101			; 00000065H
  00357	6e		 DB	 110			; 0000006eH
  00358	74		 DB	 116			; 00000074H
  00359	00		 DB	 0
?InitDefaultElements@CDXUTIMEEditBox@@SAXPAVCDXUTDialog@@@Z ENDP ; CDXUTIMEEditBox::InitDefaultElements
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDXUTIMEEditBox@@UAE@XZ PROC				; CDXUTIMEEditBox::~CDXUTIMEEditBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 146
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTIMEEditBox@@6B@
; Line 147
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ??1CDXUTEditBox@@UAE@XZ	; CDXUTEditBox::~CDXUTEditBox
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??1CDXUTIMEEditBox@@UAE@XZ ENDP				; CDXUTIMEEditBox::~CDXUTIMEEditBox
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDialog$ = 8						; size = 4
??0CDXUTIMEEditBox@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTIMEEditBox::CDXUTIMEEditBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 118
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z ; CDXUTEditBox::CDXUTEditBox
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTIMEEditBox@@6B@
; Line 119
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 41 34 07 00
	00 00		 mov	 DWORD PTR [ecx+52], 7
; Line 120
  0002b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00031	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 122
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	c7 81 90 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+400], 0
; Line 123
  00041	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00044	c7 82 48 01 00
	00 ff ff ff bc	 mov	 DWORD PTR [edx+328], -1124073473 ; bcffffffH
; Line 124
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	c7 80 4c 01 00
	00 00 00 00 80	 mov	 DWORD PTR [eax+332], -2147483648 ; 80000000H
; Line 125
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	c7 81 50 01 00
	00 00 00 ff ff	 mov	 DWORD PTR [ecx+336], -65536 ; ffff0000H
; Line 126
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	c7 82 54 01 00
	00 50 50 50 80	 mov	 DWORD PTR [edx+340], -2142220208 ; 80505050H
; Line 127
  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	c7 80 58 01 00
	00 c8 c8 c8 ff	 mov	 DWORD PTR [eax+344], -3618616 ; ffc8c8c8H
; Line 128
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	c7 81 5c 01 00
	00 00 00 00 80	 mov	 DWORD PTR [ecx+348], -2147483648 ; 80000000H
; Line 129
  0008f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00092	c7 82 60 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [edx+352], -1
; Line 130
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	c7 80 64 01 00
	00 9e 9e 9e 80	 mov	 DWORD PTR [eax+356], -2137088354 ; 809e9e9eH
; Line 131
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	c7 81 68 01 00
	00 ff c8 c8 ff	 mov	 DWORD PTR [ecx+360], -3618561 ; ffc8c8ffH
; Line 132
  000b6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b9	c7 82 6c 01 00
	00 00 00 00 c6	 mov	 DWORD PTR [edx+364], -973078528 ; c6000000H
; Line 133
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	c7 80 70 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+368], -1
; Line 134
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	c7 81 74 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+372], -1
; Line 135
  000dd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 82 78 01 00
	00 96 96 96 ff	 mov	 DWORD PTR [edx+376], -6908266 ; ff969696H
; Line 136
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	c7 80 7c 01 00
	00 00 ff ff ff	 mov	 DWORD PTR [eax+380], -256 ; ffffff00H
; Line 137
  000f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	c7 81 80 01 00
	00 96 96 96 ff	 mov	 DWORD PTR [ecx+384], -6908266 ; ff969696H
; Line 138
  00104	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00107	c7 82 84 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [edx+388], -1
; Line 139
  00111	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00114	c7 80 88 01 00
	00 00 00 00 ff	 mov	 DWORD PTR [eax+392], -16777216 ; ff000000H
; Line 140
  0011e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	c7 81 8c 01 00
	00 80 80 80 ff	 mov	 DWORD PTR [ecx+396], -8355712 ; ff808080H
; Line 141
  0012b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	83 c4 04	 add	 esp, 4
  00131	3b ec		 cmp	 ebp, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 04 00	 ret	 4
??0CDXUTIMEEditBox@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTIMEEditBox::CDXUTIMEEditBox
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_pEditBox$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pDialog$ = 8						; size = 4
_ID$ = 12						; size = 4
_strText$ = 16						; size = 4
_x$ = 20						; size = 4
_y$ = 24						; size = 4
_width$ = 28						; size = 4
_height$ = 32						; size = 4
_bIsDefault$ = 36					; size = 1
_ppCreated$ = 40					; size = 4
?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z PROC ; CDXUTIMEEditBox::CreateIMEEditBox
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutguiime.cpp
; Line 46
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 47
  00036	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0003b	68 a8 01 00 00	 push	 424			; 000001a8H
  00040	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00045	83 c4 08	 add	 esp, 8
  00048	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00052	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00056	74 11		 je	 SHORT $LN6@CreateIMEE
  00058	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0005f	e8 00 00 00 00	 call	 ??0CDXUTIMEEditBox@@QAE@PAVCDXUTDialog@@@Z ; CDXUTIMEEditBox::CDXUTIMEEditBox
  00064	89 45 e4	 mov	 DWORD PTR tv74[ebp], eax
  00067	eb 07		 jmp	 SHORT $LN7@CreateIMEE
$LN6@CreateIMEE:
  00069	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@CreateIMEE:
  00070	8b 4d e4	 mov	 ecx, DWORD PTR tv74[ebp]
  00073	89 4d ec	 mov	 DWORD PTR $T3[ebp], ecx
  00076	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007d	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp]
  00080	89 55 f0	 mov	 DWORD PTR _pEditBox$[ebp], edx
; Line 49
  00083	83 7d 28 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00087	74 08		 je	 SHORT $LN3@CreateIMEE
; Line 50
  00089	8b 45 28	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0008c	8b 4d f0	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  0008f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@CreateIMEE:
; Line 52
  00091	83 7d f0 00	 cmp	 DWORD PTR _pEditBox$[ebp], 0
  00095	75 07		 jne	 SHORT $LN2@CreateIMEE
; Line 53
  00097	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  0009c	eb 4b		 jmp	 SHORT $LN4@CreateIMEE
$LN2@CreateIMEE:
; Line 56
  0009e	8b 55 0c	 mov	 edx, DWORD PTR _ID$[ebp]
  000a1	52		 push	 edx
  000a2	8b 4d f0	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000a5	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 57
  000aa	8b 45 18	 mov	 eax, DWORD PTR _y$[ebp]
  000ad	50		 push	 eax
  000ae	8b 4d 14	 mov	 ecx, DWORD PTR _x$[ebp]
  000b1	51		 push	 ecx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000b5	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 58
  000ba	8b 55 20	 mov	 edx, DWORD PTR _height$[ebp]
  000bd	52		 push	 edx
  000be	8b 45 1c	 mov	 eax, DWORD PTR _width$[ebp]
  000c1	50		 push	 eax
  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000c5	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 59
  000ca	8b 4d f0	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000cd	8a 55 24	 mov	 dl, BYTE PTR _bIsDefault$[ebp]
  000d0	88 51 07	 mov	 BYTE PTR [ecx+7], dl
; Line 61
  000d3	83 7d 10 00	 cmp	 DWORD PTR _strText$[ebp], 0
  000d7	74 0e		 je	 SHORT $LN1@CreateIMEE
; Line 62
  000d9	6a 00		 push	 0
  000db	8b 45 10	 mov	 eax, DWORD PTR _strText$[ebp]
  000de	50		 push	 eax
  000df	8b 4d f0	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000e2	e8 00 00 00 00	 call	 ?SetText@CDXUTEditBox@@QAEXPB_W_N@Z ; CDXUTEditBox::SetText
$LN1@CreateIMEE:
; Line 64
  000e7	33 c0		 xor	 eax, eax
$LN4@CreateIMEE:
; Line 65
  000e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f3	59		 pop	 ecx
  000f4	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f7	3b ec		 cmp	 ebp, esp
  000f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateIMEEditBox@CDXUTIMEEditBox@@SAJPAVCDXUTDialog@@HPB_WHHHH_NPAPAV1@@Z ENDP ; CDXUTIMEEditBox::CreateIMEEditBox
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTextColor@CDXUTEditBox@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Color$ = 8						; size = 4
?SetTextColor@CDXUTEditBox@@UAEXK@Z PROC		; CDXUTEditBox::SetTextColor, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1072
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _Color$[ebp]
  00014	89 88 34 01 00
	00		 mov	 DWORD PTR [eax+308], ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetTextColor@CDXUTEditBox@@UAEXK@Z ENDP		; CDXUTEditBox::SetTextColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanHaveFocus@CDXUTEditBox@@UAE_NXZ
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
?CanHaveFocus@CDXUTEditBox@@UAE_NXZ PROC		; CDXUTEditBox::CanHaveFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1060
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1061
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 14		 je	 SHORT $LN3@CanHaveFoc
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	0f b6 42 40	 movzx	 eax, BYTE PTR [edx+64]
  00029	85 c0		 test	 eax, eax
  0002b	74 09		 je	 SHORT $LN3@CanHaveFoc
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@CanHaveFoc
$LN3@CanHaveFoc:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@CanHaveFoc:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 1062
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?CanHaveFocus@CDXUTEditBox@@UAE_NXZ ENDP		; CDXUTEditBox::CanHaveFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pFontNode$ = 8						; size = 4
?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z PROC	; CUniBuffer::SetFontNode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1013
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pFontNode$[ebp]
  00014	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z ENDP	; CUniBuffer::SetFontNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuffer@CUniBuffer@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBuffer@CUniBuffer@@QBEPB_WXZ PROC			; CUniBuffer::GetBuffer, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1004
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1005
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1006
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?GetBuffer@CUniBuffer@@QBEPB_WXZ ENDP			; CUniBuffer::GetBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTextSize@CUniBuffer@@QBEHXZ
_TEXT	SEGMENT
tv67 = -20						; size = 4
tv76 = -14						; size = 2
tv73 = -12						; size = 4
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?GetTextSize@CUniBuffer@@QBEHXZ PROC			; CUniBuffer::GetTextSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1002
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	89 4d f8	 mov	 DWORD PTR tv70[ebp], ecx
  00025	8b 55 f8	 mov	 edx, DWORD PTR tv70[ebp]
  00028	83 c2 02	 add	 edx, 2
  0002b	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LL3@GetTextSiz:
  0002e	8b 45 f8	 mov	 eax, DWORD PTR tv70[ebp]
  00031	66 8b 08	 mov	 cx, WORD PTR [eax]
  00034	66 89 4d f2	 mov	 WORD PTR tv76[ebp], cx
  00038	83 45 f8 02	 add	 DWORD PTR tv70[ebp], 2
  0003c	66 83 7d f2 00	 cmp	 WORD PTR tv76[ebp], 0
  00041	75 eb		 jne	 SHORT $LL3@GetTextSiz
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv70[ebp]
  00046	2b 55 f4	 sub	 edx, DWORD PTR tv73[ebp]
  00049	d1 fa		 sar	 edx, 1
  0004b	89 55 ec	 mov	 DWORD PTR tv67[ebp], edx
  0004e	8b 45 ec	 mov	 eax, DWORD PTR tv67[ebp]
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?GetTextSize@CUniBuffer@@QBEHXZ ENDP			; CUniBuffer::GetTextSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1183
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1185
  00020	8b f4		 mov	 esi, esp
  00022	68 a1 04 00 00	 push	 1185			; 000004a1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 a2 04 00 00	 push	 1186			; 000004a2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 a2 04 00 00	 push	 1186			; 000004a2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1193
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1194
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iElement$ = 8						; size = 4
?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z PROC	; CDXUTControl::GetElement, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 547
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _iElement$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 20	 add	 ecx, 32			; 00000020H
  00018	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z ENDP	; CDXUTControl::GetElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetSize@CDXUTControl@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetSize@CDXUTControl@@QAEXHH@Z PROC			; CDXUTControl::SetSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 534
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 535
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _width$[ebp]
  00015	89 48 10	 mov	 DWORD PTR [eax+16], ecx
; Line 536
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  0001e	89 42 14	 mov	 DWORD PTR [edx+20], eax
; Line 537
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 11		 mov	 edx, DWORD PTR [ecx]
  00026	8b f4		 mov	 esi, esp
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0002e	ff d0		 call	 eax
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 538
  00037	5e		 pop	 esi
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?SetSize@CDXUTControl@@QAEXHH@Z ENDP			; CDXUTControl::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetLocation@CDXUTControl@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetLocation@CDXUTControl@@QAEXHH@Z PROC		; CDXUTControl::SetLocation, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 528
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 529
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00015	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 530
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0001e	89 42 0c	 mov	 DWORD PTR [edx+12], eax
; Line 531
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 11		 mov	 edx, DWORD PTR [ecx]
  00026	8b f4		 mov	 esi, esp
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0002e	ff d0		 call	 eax
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 532
  00037	5e		 pop	 esi
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?SetLocation@CDXUTControl@@QAEXHH@Z ENDP		; CDXUTControl::SetLocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetID@CDXUTControl@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetID@CDXUTControl@@QAEXH@Z PROC			; CDXUTControl::SetID, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 525
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ID$[ebp]
  00014	89 48 30	 mov	 DWORD PTR [eax+48], ecx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetID@CDXUTControl@@QAEXH@Z ENDP			; CDXUTControl::SetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetVisible@CDXUTControl@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVisible@CDXUTControl@@UBE_NXZ PROC			; CDXUTControl::GetVisible, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 520
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetVisible@CDXUTControl@@UBE_NXZ ENDP			; CDXUTControl::GetVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetVisible@CDXUTControl@@UAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bVisible$ = 8						; size = 1
?SetVisible@CDXUTControl@@UAEX_N@Z PROC			; CDXUTControl::SetVisible, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 519
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 4d 08	 mov	 cl, BYTE PTR _bVisible$[ebp]
  00014	88 48 04	 mov	 BYTE PTR [eax+4], cl
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetVisible@CDXUTControl@@UAEX_N@Z ENDP			; CDXUTControl::SetVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetEnabled@CDXUTControl@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEnabled@CDXUTControl@@UBE_NXZ PROC			; CDXUTControl::GetEnabled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 518
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 40 40	 mov	 al, BYTE PTR [eax+64]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetEnabled@CDXUTControl@@UBE_NXZ ENDP			; CDXUTControl::GetEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetEnabled@CDXUTControl@@UAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bEnabled$ = 8						; size = 1
?SetEnabled@CDXUTControl@@UAEX_N@Z PROC			; CDXUTControl::SetEnabled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 4d 08	 mov	 cl, BYTE PTR _bEnabled$[ebp]
  00014	88 48 40	 mov	 BYTE PTR [eax+64], cl
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetEnabled@CDXUTControl@@UAEX_N@Z ENDP			; CDXUTControl::SetEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z PROC	; CDXUTControl::ContainsPoint, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 515
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	8b f4		 mov	 esi, esp
  0001a	8b 45 08	 mov	 eax, DWORD PTR _pt$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	51		 push	 ecx
  00021	8b 10		 mov	 edx, DWORD PTR [eax]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c0 44	 add	 eax, 68			; 00000044H
  0002a	50		 push	 eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	85 c0		 test	 eax, eax
  0003a	74 09		 je	 SHORT $LN3@ContainsPo
  0003c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00043	eb 07		 jmp	 SHORT $LN4@ContainsPo
$LN3@ContainsPo:
  00045	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@ContainsPo:
  0004c	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z ENDP	; CDXUTControl::ContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnHotkey@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnHotkey@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnHotkey, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 513
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?OnHotkey@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnMouseLeave@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnMouseLeave@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnMouseLeave, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 512
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 05 00	 mov	 BYTE PTR [eax+5], 0
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnMouseLeave@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnMouseLeave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnMouseEnter@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnMouseEnter@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnMouseEnter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 511
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 05 01	 mov	 BYTE PTR [eax+5], 1
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnMouseEnter@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnMouseEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnFocusOut@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnFocusOut@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnFocusOut, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 510
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnFocusOut@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnFocusOut
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnInit@CDXUTControl@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInit@CDXUTControl@@UAEJXZ PROC			; CDXUTControl::OnInit, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 479
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	33 c0		 xor	 eax, eax
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnInit@CDXUTControl@@UAEJXZ ENDP			; CDXUTControl::OnInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHeight@CDXUTDialog@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHeight@CDXUTDialog@@QBEHXZ PROC			; CDXUTDialog::GetHeight, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 260
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 24 02 00
	00		 mov	 eax, DWORD PTR [eax+548]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetHeight@CDXUTDialog@@QBEHXZ ENDP			; CDXUTDialog::GetHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWidth@CDXUTDialog@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWidth@CDXUTDialog@@QBEHXZ PROC			; CDXUTDialog::GetWidth, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 259
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 20 02 00
	00		 mov	 eax, DWORD PTR [eax+544]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetWidth@CDXUTDialog@@QBEHXZ ENDP			; CDXUTDialog::GetWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CDXUTElement@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDXUTElement@@QAE@XZ PROC				; CDXUTElement::CDXUTElement, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00014	e8 00 00 00 00	 call	 ??0DXUTBlendColor@@QAE@XZ
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 44	 add	 ecx, 68			; 00000044H
  0001f	e8 00 00 00 00	 call	 ??0DXUTBlendColor@@QAE@XZ
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??0CDXUTElement@@QAE@XZ ENDP				; CDXUTElement::CDXUTElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTBlendColor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTBlendColor@@QAE@XZ PROC				; DXUTBlendColor::DXUTBlendColor, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 18	 add	 ecx, 24			; 00000018H
  00014	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@XZ ; DirectX::XMFLOAT4::XMFLOAT4
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0DXUTBlendColor@@QAE@XZ ENDP				; DXUTBlendColor::DXUTBlendColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 578
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT4@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
END
