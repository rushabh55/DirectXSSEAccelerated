; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\New Scratch\DXUT\Optional\DXUTgui.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?s_fTimeRefresh@CDXUTDialog@@0NA		; CDXUTDialog::s_fTimeRefresh
PUBLIC	?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
PUBLIC	?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlPressed
PUBLIC	?s_bHideCaret@CDXUTEditBox@@1_NA		; CDXUTEditBox::s_bHideCaret
PUBLIC	?g_strUIEffectFile@@3PADA			; g_strUIEffectFile
PUBLIC	?g_pFontBuffer11@@3PAUID3D11Buffer@@A		; g_pFontBuffer11
PUBLIC	?g_FontBufferBytes11@@3IA			; g_FontBufferBytes11
PUBLIC	?g_pFont11@@3PAUID3D11ShaderResourceView@@A	; g_pFont11
PUBLIC	?g_pInputLayout11@@3PAUID3D11InputLayout@@A	; g_pInputLayout11
PUBLIC	_WKPDID_D3DDebugObjectName
_BSS	SEGMENT
?s_fTimeRefresh@CDXUTDialog@@0NA DQ 01H DUP (?)		; CDXUTDialog::s_fTimeRefresh
?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A DD 01H DUP (?) ; CDXUTDialog::s_pControlFocus
?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A DD 01H DUP (?) ; CDXUTDialog::s_pControlPressed
?s_bHideCaret@CDXUTEditBox@@1_NA DB 01H DUP (?)		; CDXUTEditBox::s_bHideCaret
	ALIGN	4

?g_pFontBuffer11@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pFontBuffer11
?g_FontBufferBytes11@@3IA DD 01H DUP (?)		; g_FontBufferBytes11
?g_pFont11@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pFont11
?g_pInputLayout11@@3PAUID3D11InputLayout@@A DD 01H DUP (?) ; g_pInputLayout11
_BSS	ENDS
;	COMDAT _WKPDID_D3DDebugObjectName
CONST	SEGMENT
_WKPDID_D3DDebugObjectName DD 0429b8c22H
	DW	09188H
	DW	04b0cH
	DB	087H
	DB	042H
	DB	0acH
	DB	0b0H
	DB	0bfH
	DB	085H
	DB	0c2H
	DB	00H
CONST	ENDS
_DATA	SEGMENT
?g_strUIEffectFile@@3PADA DB 'Texture2D g_Texture;SamplerState Sampler{  '
	DB	'  Filter = MIN_MAG_MIP_LINEAR;    AddressU = Wrap;    Address'
	DB	'V = Wrap;};BlendState UIBlend{    AlphaToCoverageEnable = FAL'
	DB	'SE;    BlendEnable[0] = TRUE;    SrcBlend = SRC_ALPHA;    Des'
	DB	'tBlend = INV_SRC_ALPHA;    BlendOp = ADD;    SrcBlendAlpha = '
	DB	'ONE;    DestBlendAlpha = ZERO;    BlendOpAlpha = ADD;    Rend'
	DB	'erTargetWriteMask[0] = 0x0F;};BlendState NoBlending{    Blend'
	DB	'Enable[0] = FALSE;    RenderTargetWriteMask[0] = 0x0F;};Depth'
	DB	'StencilState DisableDepth{    DepthEnable = false;};DepthSten'
	DB	'cilState EnableDepth{    DepthEnable = true;};struct VS_OUTPU'
	DB	'T{    float4 Pos : POSITION;    float4 Dif : COLOR;    float2'
	DB	' Tex : TEXCOORD;};VS_OUTPUT VS( float3 vPos : POSITION,      '
	DB	'        float4 Dif : COLOR,              float2 vTexCoord0 : '
	DB	'TEXCOORD ){    VS_OUTPUT Output;    Output.Pos = float4( vPos'
	DB	', 1.0f );    Output.Dif = Dif;    Output.Tex = vTexCoord0;   '
	DB	' return Output;}float4 PS( VS_OUTPUT In ) : SV_Target{    ret'
	DB	'urn g_Texture.Sample( Sampler, In.Tex ) * In.Dif;}float4 PSUn'
	DB	'tex( VS_OUTPUT In ) : SV_Target{    return In.Dif;}technique1'
	DB	'0 RenderUI{    pass P0    {        SetVertexShader( CompileSh'
	DB	'ader( vs_4_0, VS() ) );        SetGeometryShader( NULL );    '
	DB	'    SetPixelShader( CompileShader( ps_4_0, PS() ) );        S'
	DB	'etDepthStencilState( DisableDepth, 0 );        SetBlendState('
	DB	' UIBlend, float4( 0.0f, 0.0f, 0.0f, 0.0f ), 0xFFFFFFFF );    '
	DB	'}}technique10 RenderUIUntex{    pass P0    {        SetVertex'
	DB	'Shader( CompileShader( vs_4_0, VS() ) );        SetGeometrySh'
	DB	'ader( NULL );        SetPixelShader( CompileShader( ps_4_0, P'
	DB	'SUntex() ) );        SetDepthStencilState( DisableDepth, 0 );'
	DB	'        SetBlendState( UIBlend, float4( 0.0f, 0.0f, 0.0f, 0.0'
	DB	'f ), 0xFFFFFFFF );    }}technique10 RestoreState{    pass P0 '
	DB	'   {        SetDepthStencilState( EnableDepth, 0 );        Se'
	DB	'tBlendState( NoBlending, float4( 0.0f, 0.0f, 0.0f, 0.0f ), 0x'
	DB	'FFFFFFFF );    }}', 00H			; g_strUIEffectFile
_DATA	ENDS
CONST	SEGMENT
$SG160768 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'a', 00H, 'n', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'D', 00H, '3', 00H, 'D', 00H, '1', 00H
	DB	'1', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'L', 00H, '"', 00H, 'T', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i'
	DB	00H, 'x', 00H, ' ', 00H, 'h', 00H, 'o', 00H, 'o', 00H, 'k', 00H
	DB	' ', 00H, 'u', 00H, 'p', 00H, ' ', 00H, 'C', 00H, 'D', 00H, 'X'
	DB	00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'o', 00H, 'g', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u'
	DB	00H, 'r', 00H, 'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'n', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'o'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, 's', 00H, '.', 00H, ' ', 00H
	DB	' ', 00H, 'S', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'm', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H
	DB	' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H, 'e'
	DB	00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, '"', 00H
	DB	00H, 00H
$SG160800 DB	' ', 00H, '(', 00H, 'M', 00H, 'i', 00H, 'n', 00H, 'i', 00H
	DB	'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG161846 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG161847 DB	'p', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'l', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H
$SG161849 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG161850 DB	'p', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'l', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H
$SG161968 DB	'A', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG160830 DB	'T', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'x', 00H
	DB	' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'C'
	DB	00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, ':', 00H, ':', 00H, 'I'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, '.', 00H, ' '
	DB	00H, ' ', 00H, 'S', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's'
	DB	00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H
	DB	'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, '.'
	DB	00H, 00H, 00H
$SG160831 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG160270 DB	'DXUTgui.cpp', 00H
$SG160832 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'a', 00H, 'n', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'L', 00H, '"', 00H, 'T', 00H, 'o', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'x', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, ' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H
	DB	'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g'
	DB	00H, ':', 00H, ':', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'(', 00H, ')', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 's'
	DB	00H, 't', 00H, '.', 00H, ' ', 00H, ' ', 00H, 'S', 00H, 'e', 00H
	DB	'e', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, 's', 00H, '.', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG160851 DB	'T', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'x', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'C', 00H
	DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a'
	DB	00H, 'l', 00H, 'o', 00H, 'g', 00H, ':', 00H, ':', 00H, 'I', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H, 'f'
	DB	00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, '.', 00H, ' ', 00H
	DB	' ', 00H, 'S', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'm', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H
	DB	' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H, 'e'
	DB	00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, '.', 00H
	DB	00H, 00H
$SG160852 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG160853 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'a', 00H, 'n', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'L', 00H, '"', 00H, 'T', 00H, 'o', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'x', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i'
	DB	00H, 's', 00H, ',', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T'
	DB	00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H
	DB	':', 00H, ':', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, '('
	DB	00H, ')', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 's', 00H
	DB	't', 00H, '.', 00H, ' ', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'e'
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 's', 00H, '.', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG160869 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG160275 DB	'DXUTgui.cpp', 00H
$SG160868 DB	'T', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'x', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'C', 00H
	DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a'
	DB	00H, 'l', 00H, 'o', 00H, 'g', 00H, ':', 00H, ':', 00H, 'I', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H, 'f'
	DB	00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, '.', 00H, ' ', 00H
	DB	' ', 00H, 'S', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'm', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H
	DB	' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H, 'e'
	DB	00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, '.', 00H
	DB	00H, 00H
$SG160870 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'a', 00H, 'n', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'L', 00H, '"', 00H, 'T', 00H, 'o', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'x', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i'
	DB	00H, 's', 00H, ',', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T'
	DB	00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H
	DB	':', 00H, ':', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, '('
	DB	00H, ')', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 's', 00H
	DB	't', 00H, '.', 00H, ' ', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'e'
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 's', 00H, '.', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG161946 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG161317 DB	'DXUTgui.cpp', 00H
$SG161945 DB	'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, ':', 00H, ' '
	DB	00H, 'M', 00H, 'u', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'o', 00H, 'g', 00H, 's', 00H, ' ', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'r', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'l', 00H, 'y', 00H, ' ', 00H
	DB	'c', 00H, 'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'h', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG160265 DB	'U', 00H, 'I', 00H, '\', 00H, 'F', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, '.', 00H, 'd', 00H, 'd', 00H, 's', 00H, 00H, 00H
$SG162346 DB	'vs_4_0_level_9_1', 00H
	ORG $+3
$SG160269 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'D', 00H, 'X', 00H, 'S', 00H, 'D', 00H, 'K'
	DB	00H, 'M', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'F', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'c', 00H, 'h', 00H, '('
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'M', 00H, 'A', 00H, 'X', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'T'
	DB	00H, 'H', 00H, ',', 00H, ' ', 00H, 'L', 00H, '"', 00H, 'U', 00H
	DB	'I', 00H, '\', 00H, '\', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, '.', 00H, 'd', 00H, 'd', 00H, 's', 00H, '"', 00H, ' ', 00H
	DB	')', 00H, 00H, 00H
$SG164370 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG160274 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'D', 00H, 'D', 00H, 'S', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, 'F', 00H, 'r', 00H, 'o', 00H
	DB	'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '(', 00H, ' '
	DB	00H, 'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, '1', 00H, '1', 00H
	DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ','
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, '1', 00H, '1', 00H, ' '
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG164371 DB	'n', 00H, 'C', 00H, 'P', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'n'
	DB	00H, 'C', 00H, 'P', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'm', 00H, '_', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, '.', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H
$SG161316 DB	'p', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H
	DB	'o', 00H, 'l', 00H, '-', 00H, '>', 00H, 'O', 00H, 'n', 00H, 'I'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG164394 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164395 DB	'w', 00H, 's', 00H, 'z', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H
$SG163371 DB	'n', 00H, 'e', 00H, 'w', 00H, 00H, 00H
$SG162347 DB	'VS', 00H
	ORG $+1
$SG163372 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG162348 DB	'none', 00H
	ORG $+3
$SG162352 DB	'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '(', 00H, ' ', 00H, 'g'
	DB	00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'U', 00H, 'I', 00H
	DB	'E', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ',', 00H, ' ', 00H, 'g', 00H
	DB	'_', 00H, 'u', 00H, 'U', 00H, 'I', 00H, 'E', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ',', 00H, ' '
	DB	00H, '"', 00H, 'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' '
	DB	00H, '"', 00H, 'V', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'v', 00H, 's', 00H, '_', 00H, '4', 00H, '_', 00H, '0'
	DB	00H, '_', 00H, 'l', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l', 00H
	DB	'_', 00H, '9', 00H, '_', 00H, '1', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '0', 00H, '_', 00H
	DB	'S', 00H, 'H', 00H, 'A', 00H, 'D', 00H, 'E', 00H, 'R', 00H, '_'
	DB	00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'B', 00H, 'A', 00H, 'C', 00H, 'K', 00H, 'W', 00H, 'A'
	DB	00H, 'R', 00H, 'D', 00H, 'S', 00H, '_', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, 'P', 00H, 'A', 00H, 'T', 00H, 'I', 00H, 'B', 00H, 'I'
	DB	00H, 'L', 00H, 'I', 00H, 'T', 00H, 'Y', 00H, ',', 00H, ' ', 00H
	DB	'0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'V', 00H, 'S'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ' ', 00H, ')', 00H, 00H, 00H
$SG161328 DB	'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, ':', 00H, ':'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG162353 DB	'DXUTgui.cpp', 00H
$SG161329 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164402 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG162354 DB	'ps_4_0_level_9_1', 00H
	ORG $+3
$SG164403 DB	's', 00H, 't', 00H, 'r', 00H, 'D', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 00H, 00H
$SG162355 DB	'PS', 00H
	ORG $+1
$SG162356 DB	'none', 00H
	ORG $+3
$SG162360 DB	'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '(', 00H, ' ', 00H, 'g'
	DB	00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'U', 00H, 'I', 00H
	DB	'E', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ',', 00H, ' ', 00H, 'g', 00H
	DB	'_', 00H, 'u', 00H, 'U', 00H, 'I', 00H, 'E', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ',', 00H, ' '
	DB	00H, '"', 00H, 'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' '
	DB	00H, '"', 00H, 'P', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'p', 00H, 's', 00H, '_', 00H, '4', 00H, '_', 00H, '0'
	DB	00H, '_', 00H, 'l', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l', 00H
	DB	'_', 00H, '9', 00H, '_', 00H, '1', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '0', 00H, '_', 00H
	DB	'S', 00H, 'H', 00H, 'A', 00H, 'D', 00H, 'E', 00H, 'R', 00H, '_'
	DB	00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'B', 00H, 'A', 00H, 'C', 00H, 'K', 00H, 'W', 00H, 'A'
	DB	00H, 'R', 00H, 'D', 00H, 'S', 00H, '_', 00H, 'C', 00H, 'O', 00H
	DB	'M', 00H, 'P', 00H, 'A', 00H, 'T', 00H, 'I', 00H, 'B', 00H, 'I'
	DB	00H, 'L', 00H, 'I', 00H, 'T', 00H, 'Y', 00H, ',', 00H, ' ', 00H
	DB	'0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'P', 00H, 'S'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ' ', 00H, ')', 00H, 00H, 00H
$SG162361 DB	'DXUTgui.cpp', 00H
$SG162362 DB	'ps_4_0_level_9_1', 00H
	ORG $+3
$SG162363 DB	'PSUntex', 00H
$SG162364 DB	'none', 00H
	ORG $+3
$SG162368 DB	'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '(', 00H, ' ', 00H, 'g'
	DB	00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'U', 00H, 'I', 00H
	DB	'E', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ',', 00H, ' ', 00H, 'g', 00H
	DB	'_', 00H, 'u', 00H, 'U', 00H, 'I', 00H, 'E', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ',', 00H, ' '
	DB	00H, '"', 00H, 'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' '
	DB	00H, '"', 00H, 'P', 00H, 'S', 00H, 'U', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, '"', 00H, ',', 00H, ' ', 00H, '"', 00H, 'p'
	DB	00H, 's', 00H, '_', 00H, '4', 00H, '_', 00H, '0', 00H, '_', 00H
	DB	'l', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l', 00H, '_', 00H, '9'
	DB	00H, '_', 00H, '1', 00H, '"', 00H, ',', 00H, ' ', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, '1', 00H, '0', 00H, '_', 00H, 'S', 00H, 'H'
	DB	00H, 'A', 00H, 'D', 00H, 'E', 00H, 'R', 00H, '_', 00H, 'E', 00H
	DB	'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'B'
	DB	00H, 'A', 00H, 'C', 00H, 'K', 00H, 'W', 00H, 'A', 00H, 'R', 00H
	DB	'D', 00H, 'S', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P'
	DB	00H, 'A', 00H, 'T', 00H, 'I', 00H, 'B', 00H, 'I', 00H, 'L', 00H
	DB	'I', 00H, 'T', 00H, 'Y', 00H, ',', 00H, ' ', 00H, '0', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'p', 00H, 'P', 00H, 'S', 00H, 'U', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'B', 00H, 'l', 00H, 'o'
	DB	00H, 'b', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H
	DB	'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ' ', 00H, ')', 00H, 00H
	DB	00H
$SG162369 DB	'DXUTgui.cpp', 00H
$SG162373 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'S', 00H, 'h'
	DB	00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, ' ', 00H
	DB	'p', 00H, 'V', 00H, 'S', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b'
	DB	00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	')', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'V', 00H, 'S', 00H, 'B'
	DB	00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H
	DB	')', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l'
	DB	00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'm', 00H, '_', 00H, 'p', 00H, 'V', 00H, 'S', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H
	DB	'1', 00H, '1', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG162374 DB	'DXUTgui.cpp', 00H
$SG162375 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162379 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'P', 00H
	DB	'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'S', 00H, 'h', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, ' ', 00H, 'p', 00H
	DB	'P', 00H, 'S', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H
	DB	',', 00H, ' ', 00H, 'p', 00H, 'P', 00H, 'S', 00H, 'B', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H
	DB	',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'm', 00H
	DB	'_', 00H, 'p', 00H, 'P', 00H, 'S', 00H, 'R', 00H, 'e', 00H, 'n'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 'U', 00H, 'I', 00H, '1', 00H
	DB	'1', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG162380 DB	'DXUTgui.cpp', 00H
$SG162381 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162386 DB	'DXUTgui.cpp', 00H
$SG162385 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'P', 00H
	DB	'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'S', 00H, 'h', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, ' ', 00H, 'p', 00H
	DB	'P', 00H, 'S', 00H, 'U', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H
	DB	'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H, ' '
	DB	00H, 'p', 00H, 'P', 00H, 'S', 00H, 'U', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'P', 00H
	DB	'S', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'U', 00H, 'I', 00H, 'U', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'x', 00H, '1', 00H, '1', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG162387 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162393 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D', 00H
	DB	'e', 00H, 'p', 00H, 't', 00H, 'h', 00H, 'S', 00H, 't', 00H, 'e'
	DB	00H, 'n', 00H, 'c', 00H, 'i', 00H, 'l', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, '(', 00H, ' ', 00H, '&', 00H, 'D'
	DB	00H, 'S', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'D', 00H, 'e'
	DB	00H, 'p', 00H, 't', 00H, 'h', 00H, 'S', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 'c', 00H, 'i', 00H, 'l', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'U', 00H, 'I', 00H, '1', 00H, '1', 00H
	DB	' ', 00H, ')', 00H, 00H, 00H
$SG162394 DB	'DXUTgui.cpp', 00H
$SG162395 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG160350 DB	'DXUT Text11', 00H
$SG162400 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'R', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'r', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, '(', 00H, ' ', 00H, '&', 00H, 'R', 00H, 'S', 00H, 'D'
	DB	00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'm', 00H, '_', 00H, 'p', 00H, 'R', 00H, 'a', 00H, 's', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H, 'I'
	DB	00H, '1', 00H, '1', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG162401 DB	'DXUTgui.cpp', 00H
$SG162402 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162409 DB	'DXUTgui.cpp', 00H
$SG162408 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, '(', 00H, ' ', 00H, '&', 00H, 'B', 00H
	DB	'S', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'U', 00H, 'I', 00H, '1', 00H, '1', 00H, ' ', 00H
	DB	')', 00H, 00H, 00H
$SG162410 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162418 DB	'DXUTgui.cpp', 00H
$SG162417 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'r', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, '(', 00H, ' ', 00H
	DB	'&', 00H, 'S', 00H, 'S', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'm', 00H, '_', 00H, 'p', 00H
	DB	'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'r'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'I', 00H, '1', 00H, '1', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG162419 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162428 DB	'POSITION', 00H
	ORG $+3
$SG162429 DB	'COLOR', 00H
	ORG $+2
$SG162430 DB	'TEXCOORD', 00H
	ORG $+3
$SG162440 DB	'DXUTgui.cpp', 00H
$SG162439 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'I', 00H
	DB	'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'L', 00H, 'a', 00H, 'y'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, '(', 00H, ' ', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'o', 00H, 'u', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'A', 00H, 'R', 00H, 'R', 00H, 'A', 00H, 'Y', 00H, 'S', 00H
	DB	'I', 00H, 'Z', 00H, 'E', 00H, '(', 00H, ' ', 00H, 'l', 00H, 'a'
	DB	00H, 'y', 00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, ')', 00H
	DB	',', 00H, ' ', 00H, 'p', 00H, 'V', 00H, 'S', 00H, 'B', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'V'
	DB	00H, 'S', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H
	DB	'>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, '&', 00H, 'm'
	DB	00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'L', 00H, 'a', 00H, 'y', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, '1', 00H, '1', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG162441 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162451 DB	'DXUTgui.cpp', 00H
$SG162450 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, ' '
	DB	00H, '&', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'D', 00H, 'e', 00H
	DB	's', 00H, 'c', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l'
	DB	00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'&', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'V', 00H, 'B', 00H, 'S'
	DB	00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, 'Q', 00H
	DB	'u', 00H, 'a', 00H, 'd', 00H, '1', 00H, '1', 00H, ' ', 00H, ')'
	DB	00H, 00H, 00H
$SG162452 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG162529 DB	'CDXUTDialogResourceManager', 00H
	ORG $+1
$SG163600 DB	'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'b', 00H, 'o', 00H, 'B', 00H, 'o', 00H, 'x'
	DB	00H, ':', 00H, ':', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, 00H, 00H
	ORG $+2
$SG163601 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164662 DB	'%', 00H, '.', 00H, '4', 00H, 'f', 00H, ' ', 00H, 00H, 00H
$SG160557 DB	'T', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'x', 00H
	DB	' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'C'
	DB	00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, ':', 00H, ':', 00H, 'I'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, '.', 00H, ' '
	DB	00H, ' ', 00H, 'S', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's'
	DB	00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H
	DB	'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, '.'
	DB	00H, 00H, 00H
$SG160558 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG162683 DB	'DXUT GUI Texture', 00H
	ORG $+3
$SG160559 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'a', 00H, 'n', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'L', 00H, '"', 00H, 'T', 00H, 'o', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'x', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, ' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H
	DB	'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g'
	DB	00H, ':', 00H, ':', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'(', 00H, ')', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 's'
	DB	00H, 't', 00H, '.', 00H, ' ', 00H, ' ', 00H, 'S', 00H, 'e', 00H
	DB	'e', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, 's', 00H, '.', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG164725 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164726 DB	'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG162681 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'G', 00H, 'U', 00H, 'I'
	DB	00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, 'F', 00H, 'r', 00H, 'o', 00H, 'm', 00H, 'I', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'l', 00H
	DB	'A', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, 00H, 00H
$SG162682 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164735 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164736 DB	'm', 00H, '_', 00H, 'n', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG162688 DB	'DXUT GUI Texture', 00H
	ORG $+3
$SG164758 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164759 DB	'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG164777 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164778 DB	'w', 00H, 's', 00H, 'z', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H
$SG164794 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164795 DB	'p', 00H, 'X', 00H, 00H, 00H
	ORG $+2
$SG164810 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG164811 DB	'p', 00H, 'C', 00H, 'P', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, 'p', 00H, 'n', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG160766 DB	'T', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'x', 00H
	DB	' ', 00H, 'h', 00H, 'o', 00H, 'o', 00H, 'k', 00H, ' ', 00H, 'u'
	DB	00H, 'p', 00H, ' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H
	DB	'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g'
	DB	00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'n', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, 's', 00H, '.', 00H, ' ', 00H, ' ', 00H, 'S'
	DB	00H, 'e', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 't', 00H
	DB	'a', 00H, 'i', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG160767 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'g', 00H, 'u', 00H
	DB	'i', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	_powf
PUBLIC	??0XMFLOAT2@DirectX@@QAE@XZ			; DirectX::XMFLOAT2::XMFLOAT2
PUBLIC	??0XMFLOAT2@DirectX@@QAE@MM@Z			; DirectX::XMFLOAT2::XMFLOAT2
PUBLIC	??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z		; DirectX::XMFLOAT2::operator=
PUBLIC	??0XMFLOAT3@DirectX@@QAE@XZ			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT3@DirectX@@QAE@MMM@Z			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z		; DirectX::XMFLOAT3::operator=
PUBLIC	??0XMFLOAT4@DirectX@@QAE@XZ			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??0XMFLOAT4@DirectX@@QAE@MMMM@Z			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z		; DirectX::XMFLOAT4::operator=
PUBLIC	?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
PUBLIC	?XMStoreFloat4@DirectX@@YQXPAUXMFLOAT4@1@T__m128@@@Z ; DirectX::XMStoreFloat4
PUBLIC	?XMVectorLerp@DirectX@@YQ?AT__m128@@T2@0M@Z	; DirectX::XMVectorLerp
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	?Init@DXUTBlendColor@@QAEXKKK@Z			; DXUTBlendColor::Init
PUBLIC	?Blend@DXUTBlendColor@@QAEXIMM@Z		; DXUTBlendColor::Blend
PUBLIC	?SetCurrent@DXUTBlendColor@@QAEXK@Z		; DXUTBlendColor::SetCurrent
PUBLIC	??0DXUTBlendColor@@QAE@XZ			; DXUTBlendColor::DXUTBlendColor
PUBLIC	??4DXUTBlendColor@@QAEAAU0@ABU0@@Z		; DXUTBlendColor::operator=
PUBLIC	?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z	; CDXUTElement::SetTexture
PUBLIC	?SetFont@CDXUTElement@@QAEXIKK@Z		; CDXUTElement::SetFont
PUBLIC	?Refresh@CDXUTElement@@QAEXXZ			; CDXUTElement::Refresh
PUBLIC	??0CDXUTElement@@QAE@XZ				; CDXUTElement::CDXUTElement
PUBLIC	??4CDXUTElement@@QAEAAV0@ABV0@@Z		; CDXUTElement::operator=
PUBLIC	??0CDXUTDialog@@QAE@XZ				; CDXUTDialog::CDXUTDialog
PUBLIC	??1CDXUTDialog@@QAE@XZ				; CDXUTDialog::~CDXUTDialog
PUBLIC	?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_N@Z ; CDXUTDialog::Init
PUBLIC	?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_NPB_W@Z ; CDXUTDialog::Init
PUBLIC	?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_NPB_WPAUHINSTANCE__@@@Z ; CDXUTDialog::Init
PUBLIC	?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z	; CDXUTDialog::MsgProc
PUBLIC	?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z ; CDXUTDialog::AddStatic
PUBLIC	?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z ; CDXUTDialog::AddButton
PUBLIC	?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z ; CDXUTDialog::AddCheckBox
PUBLIC	?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z ; CDXUTDialog::AddRadioButton
PUBLIC	?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z ; CDXUTDialog::AddComboBox
PUBLIC	?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z ; CDXUTDialog::AddSlider
PUBLIC	?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z ; CDXUTDialog::AddEditBox
PUBLIC	?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z ; CDXUTDialog::AddListBox
PUBLIC	?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
PUBLIC	?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::InitControl
PUBLIC	?GetComboBox@CDXUTDialog@@QBEPAVCDXUTComboBox@@H@Z ; CDXUTDialog::GetComboBox
PUBLIC	?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z ; CDXUTDialog::GetControl
PUBLIC	?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z ; CDXUTDialog::GetControl
PUBLIC	?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z ; CDXUTDialog::GetControlAtPoint
PUBLIC	?GetControlEnabled@CDXUTDialog@@QBE_NH@Z	; CDXUTDialog::GetControlEnabled
PUBLIC	?SetControlEnabled@CDXUTDialog@@QAEXH_N@Z	; CDXUTDialog::SetControlEnabled
PUBLIC	?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z	; CDXUTDialog::ClearRadioButtonGroup
PUBLIC	?ClearComboBox@CDXUTDialog@@QAEXH@Z		; CDXUTDialog::ClearComboBox
PUBLIC	?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
PUBLIC	?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z ; CDXUTDialog::GetDefaultElement
PUBLIC	?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
PUBLIC	?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
PUBLIC	?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z	; CDXUTDialog::DrawRect
PUBLIC	?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
PUBLIC	?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ; CDXUTDialog::CalcTextRect
PUBLIC	?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
PUBLIC	?SetBackgroundColors@CDXUTDialog@@QAEXKKKK@Z	; CDXUTDialog::SetBackgroundColors
PUBLIC	?GetNextControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ; CDXUTDialog::GetNextControl
PUBLIC	?GetPrevControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ; CDXUTDialog::GetPrevControl
PUBLIC	?RemoveControl@CDXUTDialog@@QAEXH@Z		; CDXUTDialog::RemoveControl
PUBLIC	?RemoveAllControls@CDXUTDialog@@QAEXXZ		; CDXUTDialog::RemoveAllControls
PUBLIC	?SetCallback@CDXUTDialog@@QAEXP6GXIHPAVCDXUTControl@@PAX@Z1@Z ; CDXUTDialog::SetCallback
PUBLIC	?EnableKeyboardInput@CDXUTDialog@@QAEX_N@Z	; CDXUTDialog::EnableKeyboardInput
PUBLIC	?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ	; CDXUTDialog::IsKeyboardInputEnabled
PUBLIC	?Refresh@CDXUTDialog@@QAEXXZ			; CDXUTDialog::Refresh
PUBLIC	?OnRender@CDXUTDialog@@QAEJM@Z			; CDXUTDialog::OnRender
PUBLIC	?SetFont@CDXUTDialog@@QAEJIPB_WJJ@Z		; CDXUTDialog::SetFont
PUBLIC	?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z	; CDXUTDialog::GetFont
PUBLIC	?SetTexture@CDXUTDialog@@QAEJIPB_W@Z		; CDXUTDialog::SetTexture
PUBLIC	?SetTexture@CDXUTDialog@@QAEJIPB_WPAUHINSTANCE__@@@Z ; CDXUTDialog::SetTexture
PUBLIC	?GetTexture@CDXUTDialog@@QBEPAUDXUTTextureNode@@I@Z ; CDXUTDialog::GetTexture
PUBLIC	?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ ; CDXUTDialog::GetManager
PUBLIC	?ClearFocus@CDXUTDialog@@SGXXZ			; CDXUTDialog::ClearFocus
PUBLIC	?FocusDefaultControl@CDXUTDialog@@QAEXXZ	; CDXUTDialog::FocusDefaultControl
PUBLIC	?InitDefaultElements@CDXUTDialog@@AAEXXZ	; CDXUTDialog::InitDefaultElements
PUBLIC	?OnMouseMove@CDXUTDialog@@AAEXABUtagPOINT@@@Z	; CDXUTDialog::OnMouseMove
PUBLIC	?OnMouseUp@CDXUTDialog@@AAEXABUtagPOINT@@@Z	; CDXUTDialog::OnMouseUp
PUBLIC	?SetNextDialog@CDXUTDialog@@AAEXPAV1@@Z		; CDXUTDialog::SetNextDialog
PUBLIC	?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z		; CDXUTDialog::OnCycleFocus
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
PUBLIC	?max_size@?$allocator@H@std@@QBEIXZ		; std::allocator<int>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z ; std::allocator_traits<std::allocator<int> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<int> >::_Wrap_alloc<std::allocator<int> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEPAHI@Z ; std::_Wrap_alloc<std::allocator<int> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z ; std::_Wrap_alloc<std::allocator<int> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<int> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<int> >::~_Vector_val<std::_Simple_types<int> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::~_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::push_back
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
PUBLIC	?_Unused_capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::_Unused_capacity
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z ; std::vector<int,std::allocator<int> >::operator[]
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
PUBLIC	?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
PUBLIC	?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
PUBLIC	?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ; std::vector<int,std::allocator<int> >::_Inside
PUBLIC	?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reallocate
PUBLIC	?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
PUBLIC	??0?$allocator@PAVCDXUTControl@@@std@@QAE@XZ	; std::allocator<CDXUTControl *>::allocator<CDXUTControl *>
PUBLIC	?deallocate@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@I@Z ; std::allocator<CDXUTControl *>::deallocate
PUBLIC	?allocate@?$allocator@PAVCDXUTControl@@@std@@QAEPAPAVCDXUTControl@@I@Z ; std::allocator<CDXUTControl *>::allocate
PUBLIC	?construct@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@ABQAV3@@Z ; std::allocator<CDXUTControl *>::construct
PUBLIC	?max_size@?$allocator@PAVCDXUTControl@@@std@@QBEIXZ ; std::allocator<CDXUTControl *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAIABV?$allocator@PAVCDXUTControl@@@2@@Z ; std::allocator_traits<std::allocator<CDXUTControl *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::_Wrap_alloc<std::allocator<CDXUTControl *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEPAPAVCDXUTControl@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTControl *> >::_Vector_val<std::_Simple_types<CDXUTControl *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTControl *> >::~_Vector_val<std::_Simple_types<CDXUTControl *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
PUBLIC	??0?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::vector<CDXUTControl *,std::allocator<CDXUTControl *> >
PUBLIC	??1?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::~vector<CDXUTControl *,std::allocator<CDXUTControl *> >
PUBLIC	?capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
PUBLIC	?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
PUBLIC	?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
PUBLIC	?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
PUBLIC	?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Make_iter
PUBLIC	?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
PUBLIC	?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
PUBLIC	?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
PUBLIC	?max_size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::max_size
PUBLIC	?empty@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE_NXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::empty
PUBLIC	??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::operator[]
PUBLIC	?push_back@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXABQAVCDXUTControl@@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::push_back
PUBLIC	?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::erase
PUBLIC	?clear@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::clear
PUBLIC	?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEII@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBE_NPBQAVCDXUTControl@@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Orphan_range
PUBLIC	??0?$allocator@PAUDXUTElementHolder@@@std@@QAE@XZ ; std::allocator<DXUTElementHolder *>::allocator<DXUTElementHolder *>
PUBLIC	?deallocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ; std::allocator<DXUTElementHolder *>::deallocate
PUBLIC	?allocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEPAPAUDXUTElementHolder@@I@Z ; std::allocator<DXUTElementHolder *>::allocate
PUBLIC	?construct@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU3@@Z ; std::allocator<DXUTElementHolder *>::construct
PUBLIC	?max_size@?$allocator@PAUDXUTElementHolder@@@std@@QBEIXZ ; std::allocator<DXUTElementHolder *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAIABV?$allocator@PAUDXUTElementHolder@@@2@@Z ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::_Wrap_alloc<std::allocator<DXUTElementHolder *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEPAPAUDXUTElementHolder@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTElementHolder *> >::_Vector_val<std::_Simple_types<DXUTElementHolder *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTElementHolder *> >::~_Vector_val<std::_Simple_types<DXUTElementHolder *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
PUBLIC	??0?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
PUBLIC	??1?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::~vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
PUBLIC	?capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
PUBLIC	?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
PUBLIC	?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
PUBLIC	?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
PUBLIC	?cbegin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cbegin
PUBLIC	?cend@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cend
PUBLIC	?size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::size
PUBLIC	?max_size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::max_size
PUBLIC	?push_back@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXABQAUDXUTElementHolder@@@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::push_back
PUBLIC	?clear@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::clear
PUBLIC	?_Destroy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXPAPAUDXUTElementHolder@@0@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEII@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBE_NPBQAUDXUTElementHolder@@@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Orphan_range
PUBLIC	??0DXUTSpriteVertex@@QAE@XZ			; DXUTSpriteVertex::DXUTSpriteVertex
PUBLIC	??0CDXUTDialogResourceManager@@QAE@XZ		; CDXUTDialogResourceManager::CDXUTDialogResourceManager
PUBLIC	??1CDXUTDialogResourceManager@@QAE@XZ		; CDXUTDialogResourceManager::~CDXUTDialogResourceManager
PUBLIC	?MsgProc@CDXUTDialogResourceManager@@QAE_NPAUHWND__@@IIJ@Z ; CDXUTDialogResourceManager::MsgProc
PUBLIC	?OnD3D11CreateDevice@CDXUTDialogResourceManager@@QAEJPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::OnD3D11CreateDevice
PUBLIC	?OnD3D11ResizedSwapChain@CDXUTDialogResourceManager@@QAEJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@@Z ; CDXUTDialogResourceManager::OnD3D11ResizedSwapChain
PUBLIC	?OnD3D11ReleasingSwapChain@CDXUTDialogResourceManager@@QAEXXZ ; CDXUTDialogResourceManager::OnD3D11ReleasingSwapChain
PUBLIC	?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ ; CDXUTDialogResourceManager::OnD3D11DestroyDevice
PUBLIC	?StoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::StoreD3D11State
PUBLIC	?RestoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::RestoreD3D11State
PUBLIC	?ApplyRenderUI11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::ApplyRenderUI11
PUBLIC	?ApplyRenderUIUntex11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::ApplyRenderUIUntex11
PUBLIC	?BeginSprites11@CDXUTDialogResourceManager@@QAEXXZ ; CDXUTDialogResourceManager::BeginSprites11
PUBLIC	?EndSprites11@CDXUTDialogResourceManager@@QAEXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::EndSprites11
PUBLIC	?GetD3D11Device@CDXUTDialogResourceManager@@QBEPAUID3D11Device@@XZ ; CDXUTDialogResourceManager::GetD3D11Device
PUBLIC	?GetD3D11DeviceContext@CDXUTDialogResourceManager@@QBEPAUID3D11DeviceContext@@XZ ; CDXUTDialogResourceManager::GetD3D11DeviceContext
PUBLIC	?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialogResourceManager::GetFontNode
PUBLIC	?GetTextureNode@CDXUTDialogResourceManager@@QBEPAUDXUTTextureNode@@I@Z ; CDXUTDialogResourceManager::GetTextureNode
PUBLIC	?AddFont@CDXUTDialogResourceManager@@QAEHPB_WJJ@Z ; CDXUTDialogResourceManager::AddFont
PUBLIC	?AddTexture@CDXUTDialogResourceManager@@QAEHPB_W@Z ; CDXUTDialogResourceManager::AddTexture
PUBLIC	?AddTexture@CDXUTDialogResourceManager@@QAEHPB_WPAUHINSTANCE__@@@Z ; CDXUTDialogResourceManager::AddTexture
PUBLIC	?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z ; CDXUTDialogResourceManager::RegisterDialog
PUBLIC	?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z ; CDXUTDialogResourceManager::UnregisterDialog
PUBLIC	?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ ; CDXUTDialogResourceManager::EnableKeyboardInputForAllDialogs
PUBLIC	??0?$allocator@UDXUTSpriteVertex@@@std@@QAE@XZ	; std::allocator<DXUTSpriteVertex>::allocator<DXUTSpriteVertex>
PUBLIC	?deallocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ; std::allocator<DXUTSpriteVertex>::deallocate
PUBLIC	?allocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEPAUDXUTSpriteVertex@@I@Z ; std::allocator<DXUTSpriteVertex>::allocate
PUBLIC	?construct@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@ABU3@@Z ; std::allocator<DXUTSpriteVertex>::construct
PUBLIC	?max_size@?$allocator@UDXUTSpriteVertex@@@std@@QBEIXZ ; std::allocator<DXUTSpriteVertex>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAIABV?$allocator@UDXUTSpriteVertex@@@2@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEPAUDXUTSpriteVertex@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >::~_Vector_val<std::_Simple_types<DXUTSpriteVertex> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
PUBLIC	??0?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
PUBLIC	??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::~vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
PUBLIC	?capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Unused_capacity
PUBLIC	?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
PUBLIC	?max_size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::max_size
PUBLIC	?empty@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBE_NXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::empty
PUBLIC	??A?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEAAUDXUTSpriteVertex@@I@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::operator[]
PUBLIC	?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
PUBLIC	?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::clear
PUBLIC	?_Destroy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXPAUDXUTSpriteVertex@@0@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEII@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Grow_to
PUBLIC	?_Inside@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBE_NPBUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Inside
PUBLIC	?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reserve
PUBLIC	?_Tidy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Tidy
PUBLIC	?_Xlen@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Orphan_range
PUBLIC	??0?$allocator@PAVCDXUTDialog@@@std@@QAE@XZ	; std::allocator<CDXUTDialog *>::allocator<CDXUTDialog *>
PUBLIC	?deallocate@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ; std::allocator<CDXUTDialog *>::deallocate
PUBLIC	?allocate@?$allocator@PAVCDXUTDialog@@@std@@QAEPAPAVCDXUTDialog@@I@Z ; std::allocator<CDXUTDialog *>::allocate
PUBLIC	?construct@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV3@@Z ; std::allocator<CDXUTDialog *>::construct
PUBLIC	?max_size@?$allocator@PAVCDXUTDialog@@@std@@QBEIXZ ; std::allocator<CDXUTDialog *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAIABV?$allocator@PAVCDXUTDialog@@@2@@Z ; std::allocator_traits<std::allocator<CDXUTDialog *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::_Wrap_alloc<std::allocator<CDXUTDialog *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEPAPAVCDXUTDialog@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTDialog *> >::_Vector_val<std::_Simple_types<CDXUTDialog *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTDialog *> >::~_Vector_val<std::_Simple_types<CDXUTDialog *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
PUBLIC	??0?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
PUBLIC	??1?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::~vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
PUBLIC	?capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
PUBLIC	?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
PUBLIC	?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end
PUBLIC	?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end
PUBLIC	?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Make_iter
PUBLIC	?rbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rbegin
PUBLIC	?rend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rend
PUBLIC	?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cbegin
PUBLIC	?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
PUBLIC	?crbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crbegin
PUBLIC	?crend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crend
PUBLIC	?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
PUBLIC	?max_size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::max_size
PUBLIC	?empty@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE_NXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::empty
PUBLIC	??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
PUBLIC	?push_back@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXABQAVCDXUTDialog@@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::push_back
PUBLIC	?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::erase
PUBLIC	?_Destroy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEII@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBE_NPBQAVCDXUTDialog@@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Orphan_range
PUBLIC	?CreateTexture11@CDXUTDialogResourceManager@@IAEJI@Z ; CDXUTDialogResourceManager::CreateTexture11
PUBLIC	??0?$allocator@PAUDXUTTextureNode@@@std@@QAE@XZ	; std::allocator<DXUTTextureNode *>::allocator<DXUTTextureNode *>
PUBLIC	?deallocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ; std::allocator<DXUTTextureNode *>::deallocate
PUBLIC	?allocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEPAPAUDXUTTextureNode@@I@Z ; std::allocator<DXUTTextureNode *>::allocate
PUBLIC	?construct@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU3@@Z ; std::allocator<DXUTTextureNode *>::construct
PUBLIC	?max_size@?$allocator@PAUDXUTTextureNode@@@std@@QBEIXZ ; std::allocator<DXUTTextureNode *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTTextureNode@@@2@@Z ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::_Wrap_alloc<std::allocator<DXUTTextureNode *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEPAPAUDXUTTextureNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTTextureNode *> >::_Vector_val<std::_Simple_types<DXUTTextureNode *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTTextureNode *> >::~_Vector_val<std::_Simple_types<DXUTTextureNode *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
PUBLIC	??0?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
PUBLIC	??1?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::~vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
PUBLIC	?capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::begin
PUBLIC	?end@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::end
PUBLIC	?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
PUBLIC	?max_size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::max_size
PUBLIC	??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEABQAUDXUTTextureNode@@I@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
PUBLIC	??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEAAPAUDXUTTextureNode@@I@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
PUBLIC	?push_back@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXABQAUDXUTTextureNode@@@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::push_back
PUBLIC	?clear@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::clear
PUBLIC	?_Destroy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXPAPAUDXUTTextureNode@@0@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEII@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBE_NPBQAUDXUTTextureNode@@@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Orphan_range
PUBLIC	??0?$allocator@PAUDXUTFontNode@@@std@@QAE@XZ	; std::allocator<DXUTFontNode *>::allocator<DXUTFontNode *>
PUBLIC	?deallocate@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ; std::allocator<DXUTFontNode *>::deallocate
PUBLIC	?allocate@?$allocator@PAUDXUTFontNode@@@std@@QAEPAPAUDXUTFontNode@@I@Z ; std::allocator<DXUTFontNode *>::allocate
PUBLIC	?construct@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU3@@Z ; std::allocator<DXUTFontNode *>::construct
PUBLIC	?max_size@?$allocator@PAUDXUTFontNode@@@std@@QBEIXZ ; std::allocator<DXUTFontNode *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTFontNode@@@2@@Z ; std::allocator_traits<std::allocator<DXUTFontNode *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::_Wrap_alloc<std::allocator<DXUTFontNode *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEPAPAUDXUTFontNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTFontNode *> >::_Vector_val<std::_Simple_types<DXUTFontNode *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTFontNode *> >::~_Vector_val<std::_Simple_types<DXUTFontNode *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
PUBLIC	??0?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >
PUBLIC	??1?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::~vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >
PUBLIC	?capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::begin
PUBLIC	?end@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::end
PUBLIC	?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
PUBLIC	?max_size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::max_size
PUBLIC	??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEABQAUDXUTFontNode@@I@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[]
PUBLIC	??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEAAPAUDXUTFontNode@@I@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[]
PUBLIC	?push_back@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXABQAUDXUTFontNode@@@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::push_back
PUBLIC	?clear@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::clear
PUBLIC	?_Destroy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXPAPAUDXUTFontNode@@0@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEII@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBE_NPBQAUDXUTFontNode@@@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Orphan_range
PUBLIC	??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z		; CDXUTControl::CDXUTControl
PUBLIC	??1CDXUTControl@@UAE@XZ				; CDXUTControl::~CDXUTControl
PUBLIC	?OnInit@CDXUTControl@@UAEJXZ			; CDXUTControl::OnInit
PUBLIC	?Refresh@CDXUTControl@@UAEXXZ			; CDXUTControl::Refresh
PUBLIC	?Render@CDXUTControl@@UAEXM@Z			; CDXUTControl::Render
PUBLIC	?MsgProc@CDXUTControl@@UAE_NIIJ@Z		; CDXUTControl::MsgProc
PUBLIC	?HandleKeyboard@CDXUTControl@@UAE_NIIJ@Z	; CDXUTControl::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTControl@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTControl::HandleMouse
PUBLIC	?CanHaveFocus@CDXUTControl@@UAE_NXZ		; CDXUTControl::CanHaveFocus
PUBLIC	?OnFocusIn@CDXUTControl@@UAEXXZ			; CDXUTControl::OnFocusIn
PUBLIC	?OnFocusOut@CDXUTControl@@UAEXXZ		; CDXUTControl::OnFocusOut
PUBLIC	?OnMouseEnter@CDXUTControl@@UAEXXZ		; CDXUTControl::OnMouseEnter
PUBLIC	?OnMouseLeave@CDXUTControl@@UAEXXZ		; CDXUTControl::OnMouseLeave
PUBLIC	?OnHotkey@CDXUTControl@@UAEXXZ			; CDXUTControl::OnHotkey
PUBLIC	?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z ; CDXUTControl::ContainsPoint
PUBLIC	?SetEnabled@CDXUTControl@@UAEX_N@Z		; CDXUTControl::SetEnabled
PUBLIC	?GetEnabled@CDXUTControl@@UBE_NXZ		; CDXUTControl::GetEnabled
PUBLIC	?SetVisible@CDXUTControl@@UAEX_N@Z		; CDXUTControl::SetVisible
PUBLIC	?GetVisible@CDXUTControl@@UBE_NXZ		; CDXUTControl::GetVisible
PUBLIC	?GetType@CDXUTControl@@QBEIXZ			; CDXUTControl::GetType
PUBLIC	?GetID@CDXUTControl@@QBEHXZ			; CDXUTControl::GetID
PUBLIC	?SetID@CDXUTControl@@QAEXH@Z			; CDXUTControl::SetID
PUBLIC	?SetLocation@CDXUTControl@@QAEXHH@Z		; CDXUTControl::SetLocation
PUBLIC	?SetSize@CDXUTControl@@QAEXHH@Z			; CDXUTControl::SetSize
PUBLIC	?SetHotkey@CDXUTControl@@QAEXI@Z		; CDXUTControl::SetHotkey
PUBLIC	?GetHotkey@CDXUTControl@@QBEIXZ			; CDXUTControl::GetHotkey
PUBLIC	?SetTextColor@CDXUTControl@@UAEXK@Z		; CDXUTControl::SetTextColor
PUBLIC	?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
PUBLIC	?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z ; CDXUTControl::SetElement
PUBLIC	??0?$allocator@PAVCDXUTElement@@@std@@QAE@XZ	; std::allocator<CDXUTElement *>::allocator<CDXUTElement *>
PUBLIC	?deallocate@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@I@Z ; std::allocator<CDXUTElement *>::deallocate
PUBLIC	?allocate@?$allocator@PAVCDXUTElement@@@std@@QAEPAPAVCDXUTElement@@I@Z ; std::allocator<CDXUTElement *>::allocate
PUBLIC	?construct@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@ABQAV3@@Z ; std::allocator<CDXUTElement *>::construct
PUBLIC	?max_size@?$allocator@PAVCDXUTElement@@@std@@QBEIXZ ; std::allocator<CDXUTElement *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAIABV?$allocator@PAVCDXUTElement@@@2@@Z ; std::allocator_traits<std::allocator<CDXUTElement *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::_Wrap_alloc<std::allocator<CDXUTElement *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEPAPAVCDXUTElement@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTElement *> >::_Vector_val<std::_Simple_types<CDXUTElement *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTElement *> >::~_Vector_val<std::_Simple_types<CDXUTElement *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
PUBLIC	??0?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::vector<CDXUTElement *,std::allocator<CDXUTElement *> >
PUBLIC	??1?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::~vector<CDXUTElement *,std::allocator<CDXUTElement *> >
PUBLIC	?capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::begin
PUBLIC	?end@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::end
PUBLIC	?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
PUBLIC	?max_size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::max_size
PUBLIC	??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
PUBLIC	??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
PUBLIC	?push_back@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXABQAVCDXUTElement@@@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::push_back
PUBLIC	?clear@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::clear
PUBLIC	?_Destroy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXPAPAVCDXUTElement@@0@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEII@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBE_NPBQAVCDXUTElement@@@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Orphan_range
PUBLIC	?UpdateRects@CDXUTControl@@MAEXXZ		; CDXUTControl::UpdateRects
PUBLIC	??_GCDXUTControl@@UAEPAXI@Z			; CDXUTControl::`scalar deleting destructor'
PUBLIC	??0DXUTElementHolder@@QAE@XZ			; DXUTElementHolder::DXUTElementHolder
PUBLIC	??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z		; CDXUTStatic::CDXUTStatic
PUBLIC	?Render@CDXUTStatic@@UAEXM@Z			; CDXUTStatic::Render
PUBLIC	?ContainsPoint@CDXUTStatic@@UAE_NABUtagPOINT@@@Z ; CDXUTStatic::ContainsPoint
PUBLIC	?GetTextCopy@CDXUTStatic@@QBEJPA_WI@Z		; CDXUTStatic::GetTextCopy
PUBLIC	?SetText@CDXUTStatic@@QAEJPB_W@Z		; CDXUTStatic::SetText
PUBLIC	??1CDXUTStatic@@UAE@XZ				; CDXUTStatic::~CDXUTStatic
PUBLIC	??_GCDXUTStatic@@UAEPAXI@Z			; CDXUTStatic::`scalar deleting destructor'
PUBLIC	??0CDXUTButton@@QAE@PAVCDXUTDialog@@@Z		; CDXUTButton::CDXUTButton
PUBLIC	?HandleKeyboard@CDXUTButton@@UAE_NIIJ@Z		; CDXUTButton::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTButton@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTButton::HandleMouse
PUBLIC	?OnHotkey@CDXUTButton@@UAEXXZ			; CDXUTButton::OnHotkey
PUBLIC	?ContainsPoint@CDXUTButton@@UAE_NABUtagPOINT@@@Z ; CDXUTButton::ContainsPoint
PUBLIC	?CanHaveFocus@CDXUTButton@@UAE_NXZ		; CDXUTButton::CanHaveFocus
PUBLIC	?Render@CDXUTButton@@UAEXM@Z			; CDXUTButton::Render
PUBLIC	??1CDXUTButton@@UAE@XZ				; CDXUTButton::~CDXUTButton
PUBLIC	??_GCDXUTButton@@UAEPAXI@Z			; CDXUTButton::`scalar deleting destructor'
PUBLIC	??0CDXUTCheckBox@@QAE@PAVCDXUTDialog@@@Z	; CDXUTCheckBox::CDXUTCheckBox
PUBLIC	?HandleKeyboard@CDXUTCheckBox@@UAE_NIIJ@Z	; CDXUTCheckBox::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTCheckBox@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTCheckBox::HandleMouse
PUBLIC	?OnHotkey@CDXUTCheckBox@@UAEXXZ			; CDXUTCheckBox::OnHotkey
PUBLIC	?ContainsPoint@CDXUTCheckBox@@UAE_NABUtagPOINT@@@Z ; CDXUTCheckBox::ContainsPoint
PUBLIC	?UpdateRects@CDXUTCheckBox@@UAEXXZ		; CDXUTCheckBox::UpdateRects
PUBLIC	?Render@CDXUTCheckBox@@UAEXM@Z			; CDXUTCheckBox::Render
PUBLIC	?SetChecked@CDXUTCheckBox@@QAEX_N@Z		; CDXUTCheckBox::SetChecked
PUBLIC	?SetCheckedInternal@CDXUTCheckBox@@MAEX_N0@Z	; CDXUTCheckBox::SetCheckedInternal
PUBLIC	??1CDXUTCheckBox@@UAE@XZ			; CDXUTCheckBox::~CDXUTCheckBox
PUBLIC	??_GCDXUTCheckBox@@UAEPAXI@Z			; CDXUTCheckBox::`scalar deleting destructor'
PUBLIC	??0CDXUTRadioButton@@QAE@PAVCDXUTDialog@@@Z	; CDXUTRadioButton::CDXUTRadioButton
PUBLIC	?HandleKeyboard@CDXUTRadioButton@@UAE_NIIJ@Z	; CDXUTRadioButton::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTRadioButton@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTRadioButton::HandleMouse
PUBLIC	?OnHotkey@CDXUTRadioButton@@UAEXXZ		; CDXUTRadioButton::OnHotkey
PUBLIC	?SetChecked@CDXUTRadioButton@@QAEX_N0@Z		; CDXUTRadioButton::SetChecked
PUBLIC	?SetButtonGroup@CDXUTRadioButton@@QAEXI@Z	; CDXUTRadioButton::SetButtonGroup
PUBLIC	?GetButtonGroup@CDXUTRadioButton@@QBEIXZ	; CDXUTRadioButton::GetButtonGroup
PUBLIC	?SetCheckedInternal@CDXUTRadioButton@@MAEX_N00@Z ; CDXUTRadioButton::SetCheckedInternal
PUBLIC	??1CDXUTRadioButton@@UAE@XZ			; CDXUTRadioButton::~CDXUTRadioButton
PUBLIC	??_GCDXUTRadioButton@@UAEPAXI@Z			; CDXUTRadioButton::`scalar deleting destructor'
PUBLIC	??0CDXUTScrollBar@@QAE@PAVCDXUTDialog@@@Z	; CDXUTScrollBar::CDXUTScrollBar
PUBLIC	??1CDXUTScrollBar@@UAE@XZ			; CDXUTScrollBar::~CDXUTScrollBar
PUBLIC	?HandleKeyboard@CDXUTScrollBar@@UAE_NIIJ@Z	; CDXUTScrollBar::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTScrollBar::HandleMouse
PUBLIC	?MsgProc@CDXUTScrollBar@@UAE_NIIJ@Z		; CDXUTScrollBar::MsgProc
PUBLIC	?Render@CDXUTScrollBar@@UAEXM@Z			; CDXUTScrollBar::Render
PUBLIC	?UpdateRects@CDXUTScrollBar@@UAEXXZ		; CDXUTScrollBar::UpdateRects
PUBLIC	?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z		; CDXUTScrollBar::SetTrackRange
PUBLIC	?GetTrackPos@CDXUTScrollBar@@QBEHXZ		; CDXUTScrollBar::GetTrackPos
PUBLIC	?GetPageSize@CDXUTScrollBar@@QBEHXZ		; CDXUTScrollBar::GetPageSize
PUBLIC	?SetPageSize@CDXUTScrollBar@@QAEXH@Z		; CDXUTScrollBar::SetPageSize
PUBLIC	?Scroll@CDXUTScrollBar@@QAEXH@Z			; CDXUTScrollBar::Scroll
PUBLIC	?ShowItem@CDXUTScrollBar@@QAEXH@Z		; CDXUTScrollBar::ShowItem
PUBLIC	?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ		; CDXUTScrollBar::UpdateThumbRect
PUBLIC	?Cap@CDXUTScrollBar@@IAEXXZ			; CDXUTScrollBar::Cap
PUBLIC	??_GCDXUTScrollBar@@UAEPAXI@Z			; CDXUTScrollBar::`scalar deleting destructor'
PUBLIC	??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z		; CDXUTListBox::CDXUTListBox
PUBLIC	??1CDXUTListBox@@UAE@XZ				; CDXUTListBox::~CDXUTListBox
PUBLIC	?OnInit@CDXUTListBox@@UAEJXZ			; CDXUTListBox::OnInit
PUBLIC	?CanHaveFocus@CDXUTListBox@@UAE_NXZ		; CDXUTListBox::CanHaveFocus
PUBLIC	?HandleKeyboard@CDXUTListBox@@UAE_NIIJ@Z	; CDXUTListBox::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTListBox@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTListBox::HandleMouse
PUBLIC	?MsgProc@CDXUTListBox@@UAE_NIIJ@Z		; CDXUTListBox::MsgProc
PUBLIC	?Render@CDXUTListBox@@UAEXM@Z			; CDXUTListBox::Render
PUBLIC	?UpdateRects@CDXUTListBox@@UAEXXZ		; CDXUTListBox::UpdateRects
PUBLIC	?SetStyle@CDXUTListBox@@QAEXK@Z			; CDXUTListBox::SetStyle
PUBLIC	?AddItem@CDXUTListBox@@QAEJPB_WPAX@Z		; CDXUTListBox::AddItem
PUBLIC	?InsertItem@CDXUTListBox@@QAEJHPB_WPAX@Z	; CDXUTListBox::InsertItem
PUBLIC	?RemoveItem@CDXUTListBox@@QAEXH@Z		; CDXUTListBox::RemoveItem
PUBLIC	?RemoveAllItems@CDXUTListBox@@QAEXXZ		; CDXUTListBox::RemoveAllItems
PUBLIC	?GetItem@CDXUTListBox@@QBEPAUDXUTListBoxItem@@H@Z ; CDXUTListBox::GetItem
PUBLIC	?GetSelectedIndex@CDXUTListBox@@QBEHH@Z		; CDXUTListBox::GetSelectedIndex
PUBLIC	?SelectItem@CDXUTListBox@@QAEXH@Z		; CDXUTListBox::SelectItem
PUBLIC	??0?$allocator@PAUDXUTListBoxItem@@@std@@QAE@XZ	; std::allocator<DXUTListBoxItem *>::allocator<DXUTListBoxItem *>
PUBLIC	?deallocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ; std::allocator<DXUTListBoxItem *>::deallocate
PUBLIC	?allocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z ; std::allocator<DXUTListBoxItem *>::allocate
PUBLIC	?construct@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU3@@Z ; std::allocator<DXUTListBoxItem *>::construct
PUBLIC	?max_size@?$allocator@PAUDXUTListBoxItem@@@std@@QBEIXZ ; std::allocator<DXUTListBoxItem *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTListBoxItem@@@2@@Z ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >::~_Vector_val<std::_Simple_types<DXUTListBoxItem *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
PUBLIC	??0?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >
PUBLIC	??1?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::~vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >
PUBLIC	?capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::begin
PUBLIC	?end@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::end
PUBLIC	?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Make_iter
PUBLIC	?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
PUBLIC	?max_size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::max_size
PUBLIC	?empty@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE_NXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::empty
PUBLIC	??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEABQAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
PUBLIC	??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
PUBLIC	?push_back@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXABQAUDXUTListBoxItem@@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::push_back
PUBLIC	?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::erase
PUBLIC	?clear@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::clear
PUBLIC	?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEII@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBE_NPBQAUDXUTListBoxItem@@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Orphan_range
PUBLIC	??_GCDXUTListBox@@UAEPAXI@Z			; CDXUTListBox::`scalar deleting destructor'
PUBLIC	??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z	; CDXUTComboBox::CDXUTComboBox
PUBLIC	??1CDXUTComboBox@@UAE@XZ			; CDXUTComboBox::~CDXUTComboBox
PUBLIC	?SetTextColor@CDXUTComboBox@@UAEXK@Z		; CDXUTComboBox::SetTextColor
PUBLIC	?OnInit@CDXUTComboBox@@UAEJXZ			; CDXUTComboBox::OnInit
PUBLIC	?HandleKeyboard@CDXUTComboBox@@UAE_NIIJ@Z	; CDXUTComboBox::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTComboBox@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTComboBox::HandleMouse
PUBLIC	?OnHotkey@CDXUTComboBox@@UAEXXZ			; CDXUTComboBox::OnHotkey
PUBLIC	?CanHaveFocus@CDXUTComboBox@@UAE_NXZ		; CDXUTComboBox::CanHaveFocus
PUBLIC	?OnFocusOut@CDXUTComboBox@@UAEXXZ		; CDXUTComboBox::OnFocusOut
PUBLIC	?Render@CDXUTComboBox@@UAEXM@Z			; CDXUTComboBox::Render
PUBLIC	?UpdateRects@CDXUTComboBox@@UAEXXZ		; CDXUTComboBox::UpdateRects
PUBLIC	?AddItem@CDXUTComboBox@@QAEJPB_WPAX@Z		; CDXUTComboBox::AddItem
PUBLIC	?RemoveAllItems@CDXUTComboBox@@QAEXXZ		; CDXUTComboBox::RemoveAllItems
PUBLIC	?RemoveItem@CDXUTComboBox@@QAEXI@Z		; CDXUTComboBox::RemoveItem
PUBLIC	?ContainsItem@CDXUTComboBox@@QAE_NPB_WI@Z	; CDXUTComboBox::ContainsItem
PUBLIC	?FindItem@CDXUTComboBox@@QBEHPB_WI@Z		; CDXUTComboBox::FindItem
PUBLIC	?GetItemData@CDXUTComboBox@@QBEPAXPB_W@Z	; CDXUTComboBox::GetItemData
PUBLIC	?GetItemData@CDXUTComboBox@@QBEPAXH@Z		; CDXUTComboBox::GetItemData
PUBLIC	?GetSelectedData@CDXUTComboBox@@QBEPAXXZ	; CDXUTComboBox::GetSelectedData
PUBLIC	?GetSelectedItem@CDXUTComboBox@@QBEPAUDXUTComboBoxItem@@XZ ; CDXUTComboBox::GetSelectedItem
PUBLIC	?GetNumItems@CDXUTComboBox@@QAEIXZ		; CDXUTComboBox::GetNumItems
PUBLIC	?SetSelectedByIndex@CDXUTComboBox@@QAEJI@Z	; CDXUTComboBox::SetSelectedByIndex
PUBLIC	?SetSelectedByText@CDXUTComboBox@@QAEJPB_W@Z	; CDXUTComboBox::SetSelectedByText
PUBLIC	?SetSelectedByData@CDXUTComboBox@@QAEJPAX@Z	; CDXUTComboBox::SetSelectedByData
PUBLIC	??0?$allocator@PAUDXUTComboBoxItem@@@std@@QAE@XZ ; std::allocator<DXUTComboBoxItem *>::allocator<DXUTComboBoxItem *>
PUBLIC	?deallocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ; std::allocator<DXUTComboBoxItem *>::deallocate
PUBLIC	?allocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z ; std::allocator<DXUTComboBoxItem *>::allocate
PUBLIC	?construct@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU3@@Z ; std::allocator<DXUTComboBoxItem *>::construct
PUBLIC	?max_size@?$allocator@PAUDXUTComboBoxItem@@@std@@QBEIXZ ; std::allocator<DXUTComboBoxItem *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTComboBoxItem@@@2@@Z ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >::~_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
PUBLIC	??0?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >
PUBLIC	??1?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::~vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >
PUBLIC	?capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::begin
PUBLIC	?end@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::end
PUBLIC	?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Make_iter
PUBLIC	?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
PUBLIC	?max_size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::max_size
PUBLIC	??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
PUBLIC	??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
PUBLIC	?push_back@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXABQAUDXUTComboBoxItem@@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::push_back
PUBLIC	?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::erase
PUBLIC	?clear@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::clear
PUBLIC	?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEII@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBE_NPBQAUDXUTComboBoxItem@@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Orphan_range
PUBLIC	??_GCDXUTComboBox@@UAEPAXI@Z			; CDXUTComboBox::`scalar deleting destructor'
PUBLIC	??0CDXUTSlider@@QAE@PAVCDXUTDialog@@@Z		; CDXUTSlider::CDXUTSlider
PUBLIC	?ContainsPoint@CDXUTSlider@@UAE_NABUtagPOINT@@@Z ; CDXUTSlider::ContainsPoint
PUBLIC	?CanHaveFocus@CDXUTSlider@@UAE_NXZ		; CDXUTSlider::CanHaveFocus
PUBLIC	?HandleKeyboard@CDXUTSlider@@UAE_NIIJ@Z		; CDXUTSlider::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTSlider@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTSlider::HandleMouse
PUBLIC	?UpdateRects@CDXUTSlider@@UAEXXZ		; CDXUTSlider::UpdateRects
PUBLIC	?Render@CDXUTSlider@@UAEXM@Z			; CDXUTSlider::Render
PUBLIC	?SetValue@CDXUTSlider@@QAEXH@Z			; CDXUTSlider::SetValue
PUBLIC	?SetRange@CDXUTSlider@@QAEXHH@Z			; CDXUTSlider::SetRange
PUBLIC	?SetValueInternal@CDXUTSlider@@IAEXH_N@Z	; CDXUTSlider::SetValueInternal
PUBLIC	?ValueFromPos@CDXUTSlider@@IAEHH@Z		; CDXUTSlider::ValueFromPos
PUBLIC	??1CDXUTSlider@@UAE@XZ				; CDXUTSlider::~CDXUTSlider
PUBLIC	??_GCDXUTSlider@@UAEPAXI@Z			; CDXUTSlider::`scalar deleting destructor'
PUBLIC	??0CUniBuffer@@QAE@H@Z				; CUniBuffer::CUniBuffer
PUBLIC	??1CUniBuffer@@QAE@XZ				; CUniBuffer::~CUniBuffer
PUBLIC	?GetBufferSize@CUniBuffer@@QBEIXZ		; CUniBuffer::GetBufferSize
PUBLIC	?SetBufferSize@CUniBuffer@@QAE_NH@Z		; CUniBuffer::SetBufferSize
PUBLIC	?GetTextSize@CUniBuffer@@QBEHXZ			; CUniBuffer::GetTextSize
PUBLIC	?GetBuffer@CUniBuffer@@QBEPB_WXZ		; CUniBuffer::GetBuffer
PUBLIC	??ACUniBuffer@@QAEAA_WH@Z			; CUniBuffer::operator[]
PUBLIC	?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z ; CUniBuffer::SetFontNode
PUBLIC	?Clear@CUniBuffer@@QAEXXZ			; CUniBuffer::Clear
PUBLIC	?InsertChar@CUniBuffer@@QAE_NH_W@Z		; CUniBuffer::InsertChar
PUBLIC	?RemoveChar@CUniBuffer@@QAE_NH@Z		; CUniBuffer::RemoveChar
PUBLIC	?InsertString@CUniBuffer@@QAE_NHPB_WH@Z		; CUniBuffer::InsertString
PUBLIC	?SetText@CUniBuffer@@QAE_NPB_W@Z		; CUniBuffer::SetText
PUBLIC	?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z		; CUniBuffer::CPtoX
PUBLIC	?XtoCP@CUniBuffer@@QAE_NHPAH0@Z			; CUniBuffer::XtoCP
PUBLIC	?GetPriorItemPos@CUniBuffer@@QAEXHPAH@Z		; CUniBuffer::GetPriorItemPos
PUBLIC	?GetNextItemPos@CUniBuffer@@QAEXHPAH@Z		; CUniBuffer::GetNextItemPos
PUBLIC	?Analyse@CUniBuffer@@AAEJXZ			; CUniBuffer::Analyse
PUBLIC	??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z		; CDXUTEditBox::CDXUTEditBox
PUBLIC	??1CDXUTEditBox@@UAE@XZ				; CDXUTEditBox::~CDXUTEditBox
PUBLIC	?HandleKeyboard@CDXUTEditBox@@UAE_NIIJ@Z	; CDXUTEditBox::HandleKeyboard
PUBLIC	?HandleMouse@CDXUTEditBox@@UAE_NIABUtagPOINT@@IJ@Z ; CDXUTEditBox::HandleMouse
PUBLIC	?MsgProc@CDXUTEditBox@@UAE_NIIJ@Z		; CDXUTEditBox::MsgProc
PUBLIC	?UpdateRects@CDXUTEditBox@@UAEXXZ		; CDXUTEditBox::UpdateRects
PUBLIC	?CanHaveFocus@CDXUTEditBox@@UAE_NXZ		; CDXUTEditBox::CanHaveFocus
PUBLIC	?Render@CDXUTEditBox@@UAEXM@Z			; CDXUTEditBox::Render
PUBLIC	?OnFocusIn@CDXUTEditBox@@UAEXXZ			; CDXUTEditBox::OnFocusIn
PUBLIC	?SetText@CDXUTEditBox@@QAEXPB_W_N@Z		; CDXUTEditBox::SetText
PUBLIC	?GetTextCopy@CDXUTEditBox@@QBEJPA_WI@Z		; CDXUTEditBox::GetTextCopy
PUBLIC	?ClearText@CDXUTEditBox@@QAEXXZ			; CDXUTEditBox::ClearText
PUBLIC	?SetTextColor@CDXUTEditBox@@UAEXK@Z		; CDXUTEditBox::SetTextColor
PUBLIC	?ParseFloatArray@CDXUTEditBox@@QAEXPAMH@Z	; CDXUTEditBox::ParseFloatArray
PUBLIC	?SetTextFloatArray@CDXUTEditBox@@QAEXPBMH@Z	; CDXUTEditBox::SetTextFloatArray
PUBLIC	?PlaceCaret@CDXUTEditBox@@IAEXH@Z		; CDXUTEditBox::PlaceCaret
PUBLIC	?DeleteSelectionText@CDXUTEditBox@@IAEXXZ	; CDXUTEditBox::DeleteSelectionText
PUBLIC	?ResetCaretBlink@CDXUTEditBox@@IAEXXZ		; CDXUTEditBox::ResetCaretBlink
PUBLIC	?CopyToClipboard@CDXUTEditBox@@IAEXXZ		; CDXUTEditBox::CopyToClipboard
PUBLIC	?PasteFromClipboard@CDXUTEditBox@@IAEXXZ	; CDXUTEditBox::PasteFromClipboard
PUBLIC	??_GCDXUTEditBox@@UAEPAXI@Z			; CDXUTEditBox::`scalar deleting destructor'
PUBLIC	?BeginText11@@YAXXZ				; BeginText11
PUBLIC	?DrawText11DXUT@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WABUtagRECT@@UXMFLOAT4@DirectX@@MM_N@Z ; DrawText11DXUT
PUBLIC	?EndText11@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ; EndText11
PUBLIC	?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ; D3DCOLOR_TO_D3DCOLORVALUE
PUBLIC	?RectWidth@@YAHAAUtagRECT@@@Z			; RectWidth
PUBLIC	?RectHeight@@YAHAAUtagRECT@@@Z			; RectHeight
PUBLIC	?InitFont11@@YAJPAUID3D11Device@@PAUID3D11InputLayout@@@Z ; InitFont11
PUBLIC	?EndFont11@@YAXXZ				; EndFont11
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>
PUBLIC	??4?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::operator=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	?_Rechecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV12@PBQAVCDXUTDialog@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Rechecked
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEPBQAVCDXUTDialog@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Unchecked
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
PUBLIC	??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator--
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=
PUBLIC	??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator-
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
PUBLIC	??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator<
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator=
PUBLIC	??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
PUBLIC	?base@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::base
PUBLIC	??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator*
PUBLIC	??E?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAEAAV01@XZ ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator++
PUBLIC	??1?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@XZ ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::~_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
PUBLIC	??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@ABV01@@Z ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
PUBLIC	??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??E?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::operator++
PUBLIC	??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::~reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??$?9V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z ; std::find<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,CDXUTDialog *>
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEAAPAVCDXUTDialog@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEABQAUDXUTFontNode@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEAAPAUDXUTFontNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEABQAUDXUTTextureNode@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEABQAVCDXUTElement@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEAAPAVCDXUTElement@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTComboBoxItem@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YAABHABH0@Z			; std::min<int>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTListBoxItem@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTListBoxItem@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
PUBLIC	??$addressof@H@std@@YAPAHAAH@Z			; std::addressof<int>
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
PUBLIC	??$construct@HH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAH$$QAH@Z ; std::_Wrap_alloc<std::allocator<int> >::construct<int,int>
PUBLIC	??$addressof@QAVCDXUTControl@@@std@@YAPBQAVCDXUTControl@@ABQAV1@@Z ; std::addressof<CDXUTControl * const>
PUBLIC	??$construct@PAVCDXUTControl@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>
PUBLIC	??$construct@PAVCDXUTControl@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>
PUBLIC	??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00@Z ; std::_Move<CDXUTControl * *,CDXUTControl * *>
PUBLIC	??$addressof@QAUDXUTElementHolder@@@std@@YAPBQAUDXUTElementHolder@@ABQAU1@@Z ; std::addressof<DXUTElementHolder * const>
PUBLIC	??$construct@PAUDXUTElementHolder@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>
PUBLIC	??$construct@PAUDXUTElementHolder@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>
PUBLIC	??$addressof@$$CBUDXUTSpriteVertex@@@std@@YAPBUDXUTSpriteVertex@@ABU1@@Z ; std::addressof<DXUTSpriteVertex const >
PUBLIC	??$construct@UDXUTSpriteVertex@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
PUBLIC	??$construct@UDXUTSpriteVertex@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>
PUBLIC	??$addressof@QAVCDXUTDialog@@@std@@YAPBQAVCDXUTDialog@@ABQAV1@@Z ; std::addressof<CDXUTDialog * const>
PUBLIC	??$construct@PAVCDXUTDialog@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>
PUBLIC	??$construct@PAVCDXUTDialog@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>
PUBLIC	??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00@Z ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>
PUBLIC	??$addressof@QAUDXUTTextureNode@@@std@@YAPBQAUDXUTTextureNode@@ABQAU1@@Z ; std::addressof<DXUTTextureNode * const>
PUBLIC	??$construct@PAUDXUTTextureNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>
PUBLIC	??$construct@PAUDXUTTextureNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>
PUBLIC	??$addressof@QAUDXUTFontNode@@@std@@YAPBQAUDXUTFontNode@@ABQAU1@@Z ; std::addressof<DXUTFontNode * const>
PUBLIC	??$construct@PAUDXUTFontNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>
PUBLIC	??$construct@PAUDXUTFontNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>
PUBLIC	??$addressof@QAVCDXUTElement@@@std@@YAPBQAVCDXUTElement@@ABQAV1@@Z ; std::addressof<CDXUTElement * const>
PUBLIC	??$construct@PAVCDXUTElement@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>
PUBLIC	??$construct@PAVCDXUTElement@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>
PUBLIC	??$addressof@QAUDXUTListBoxItem@@@std@@YAPBQAUDXUTListBoxItem@@ABQAU1@@Z ; std::addressof<DXUTListBoxItem * const>
PUBLIC	??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
PUBLIC	??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>
PUBLIC	??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00@Z ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>
PUBLIC	??$addressof@QAUDXUTComboBoxItem@@@std@@YAPBQAUDXUTComboBoxItem@@ABQAU1@@Z ; std::addressof<DXUTComboBoxItem * const>
PUBLIC	??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
PUBLIC	??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>
PUBLIC	??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00@Z ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
PUBLIC	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
PUBLIC	??$_Umove@PAPAVCDXUTControl@@@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEPAPAVCDXUTControl@@PAPAV2@00@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Umove<CDXUTControl * *>
PUBLIC	??$_Umove@PAPAUDXUTElementHolder@@@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEPAPAUDXUTElementHolder@@PAPAU2@00@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Umove<DXUTElementHolder * *>
PUBLIC	??$_Umove@PAUDXUTSpriteVertex@@@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEPAUDXUTSpriteVertex@@PAU2@00@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Umove<DXUTSpriteVertex *>
PUBLIC	??$_Umove@PAPAVCDXUTDialog@@@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEPAPAVCDXUTDialog@@PAPAV2@00@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Umove<CDXUTDialog * *>
PUBLIC	??$_Umove@PAPAUDXUTTextureNode@@@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEPAPAUDXUTTextureNode@@PAPAU2@00@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Umove<DXUTTextureNode * *>
PUBLIC	??$_Umove@PAPAUDXUTFontNode@@@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEPAPAUDXUTFontNode@@PAPAU2@00@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Umove<DXUTFontNode * *>
PUBLIC	??$_Umove@PAPAVCDXUTElement@@@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEPAPAVCDXUTElement@@PAPAV2@00@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Umove<CDXUTElement * *>
PUBLIC	??$_Umove@PAPAUDXUTListBoxItem@@@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEPAPAUDXUTListBoxItem@@PAPAU2@00@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Umove<DXUTListBoxItem * *>
PUBLIC	??$_Umove@PAPAUDXUTComboBoxItem@@@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEPAPAUDXUTComboBoxItem@@PAPAU2@00@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Umove<DXUTComboBoxItem * *>
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
PUBLIC	??$_Allocate@PAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@IPAPAV1@@Z ; std::_Allocate<CDXUTControl *>
PUBLIC	??$_Allocate@PAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@IPAPAU1@@Z ; std::_Allocate<DXUTElementHolder *>
PUBLIC	??$_Allocate@UDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@IPAU1@@Z ; std::_Allocate<DXUTSpriteVertex>
PUBLIC	??$_Allocate@PAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@IPAPAV1@@Z ; std::_Allocate<CDXUTDialog *>
PUBLIC	??$_Allocate@PAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@IPAPAU1@@Z ; std::_Allocate<DXUTTextureNode *>
PUBLIC	??$_Allocate@PAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@IPAPAU1@@Z ; std::_Allocate<DXUTFontNode *>
PUBLIC	??$_Allocate@PAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@IPAPAV1@@Z ; std::_Allocate<CDXUTElement *>
PUBLIC	??$_Allocate@PAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@IPAPAU1@@Z ; std::_Allocate<DXUTListBoxItem *>
PUBLIC	??$_Allocate@PAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@IPAPAU1@@Z ; std::_Allocate<DXUTComboBoxItem *>
PUBLIC	??$?8V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@@Z ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>
PUBLIC	??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@AAV10@PBQAVCDXUTDialog@@@Z ; std::_Rechecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
PUBLIC	??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z	; std::_Debug_lt<int const &,int const &>
PUBLIC	??$construct@HH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAH$$QAH@Z ; std::allocator_traits<std::allocator<int> >::construct<int,int>
PUBLIC	??$forward@AAPAVCDXUTControl@@@std@@YAAAPAVCDXUTControl@@AAPAV1@@Z ; std::forward<CDXUTControl * &>
PUBLIC	??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@AAPAV3@@Z ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>
PUBLIC	??$forward@ABQAVCDXUTControl@@@std@@YAABQAVCDXUTControl@@ABQAV1@@Z ; std::forward<CDXUTControl * const &>
PUBLIC	??$construct@PAVCDXUTControl@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@ABQAV3@@Z ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>
PUBLIC	??$_Ptr_cat@PAVCDXUTControl@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTControl@@0@Z ; std::_Ptr_cat<CDXUTControl *,CDXUTControl *>
PUBLIC	??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<CDXUTControl * *,CDXUTControl * *>
PUBLIC	??$forward@AAPAUDXUTElementHolder@@@std@@YAAAPAUDXUTElementHolder@@AAPAU1@@Z ; std::forward<DXUTElementHolder * &>
PUBLIC	??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>
PUBLIC	??$forward@ABQAUDXUTElementHolder@@@std@@YAABQAUDXUTElementHolder@@ABQAU1@@Z ; std::forward<DXUTElementHolder * const &>
PUBLIC	??$construct@PAUDXUTElementHolder@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>
PUBLIC	??$forward@AAUDXUTSpriteVertex@@@std@@YAAAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex &>
PUBLIC	??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@AAU3@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
PUBLIC	??$forward@ABUDXUTSpriteVertex@@@std@@YAABUDXUTSpriteVertex@@ABU1@@Z ; std::forward<DXUTSpriteVertex const &>
PUBLIC	??$construct@UDXUTSpriteVertex@@ABU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@ABU3@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>
PUBLIC	??$forward@AAPAVCDXUTDialog@@@std@@YAAAPAVCDXUTDialog@@AAPAV1@@Z ; std::forward<CDXUTDialog * &>
PUBLIC	??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@AAPAV3@@Z ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>
PUBLIC	??$forward@ABQAVCDXUTDialog@@@std@@YAABQAVCDXUTDialog@@ABQAV1@@Z ; std::forward<CDXUTDialog * const &>
PUBLIC	??$construct@PAVCDXUTDialog@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@ABQAV3@@Z ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>
PUBLIC	??$_Ptr_cat@PAVCDXUTDialog@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTDialog@@0@Z ; std::_Ptr_cat<CDXUTDialog *,CDXUTDialog *>
PUBLIC	??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>
PUBLIC	??$forward@AAPAUDXUTTextureNode@@@std@@YAAAPAUDXUTTextureNode@@AAPAU1@@Z ; std::forward<DXUTTextureNode * &>
PUBLIC	??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>
PUBLIC	??$forward@ABQAUDXUTTextureNode@@@std@@YAABQAUDXUTTextureNode@@ABQAU1@@Z ; std::forward<DXUTTextureNode * const &>
PUBLIC	??$construct@PAUDXUTTextureNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>
PUBLIC	??$forward@AAPAUDXUTFontNode@@@std@@YAAAPAUDXUTFontNode@@AAPAU1@@Z ; std::forward<DXUTFontNode * &>
PUBLIC	??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>
PUBLIC	??$forward@ABQAUDXUTFontNode@@@std@@YAABQAUDXUTFontNode@@ABQAU1@@Z ; std::forward<DXUTFontNode * const &>
PUBLIC	??$construct@PAUDXUTFontNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>
PUBLIC	??$forward@AAPAVCDXUTElement@@@std@@YAAAPAVCDXUTElement@@AAPAV1@@Z ; std::forward<CDXUTElement * &>
PUBLIC	??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@AAPAV3@@Z ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>
PUBLIC	??$forward@ABQAVCDXUTElement@@@std@@YAABQAVCDXUTElement@@ABQAV1@@Z ; std::forward<CDXUTElement * const &>
PUBLIC	??$construct@PAVCDXUTElement@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@ABQAV3@@Z ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>
PUBLIC	??$forward@AAPAUDXUTListBoxItem@@@std@@YAAAPAUDXUTListBoxItem@@AAPAU1@@Z ; std::forward<DXUTListBoxItem * &>
PUBLIC	??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
PUBLIC	??$forward@ABQAUDXUTListBoxItem@@@std@@YAABQAUDXUTListBoxItem@@ABQAU1@@Z ; std::forward<DXUTListBoxItem * const &>
PUBLIC	??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>
PUBLIC	??$_Ptr_cat@PAUDXUTListBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTListBoxItem@@0@Z ; std::_Ptr_cat<DXUTListBoxItem *,DXUTListBoxItem *>
PUBLIC	??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>
PUBLIC	??$forward@AAPAUDXUTComboBoxItem@@@std@@YAAAPAUDXUTComboBoxItem@@AAPAU1@@Z ; std::forward<DXUTComboBoxItem * &>
PUBLIC	??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
PUBLIC	??$forward@ABQAUDXUTComboBoxItem@@@std@@YAABQAUDXUTComboBoxItem@@ABQAU1@@Z ; std::forward<DXUTComboBoxItem * const &>
PUBLIC	??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>
PUBLIC	??$_Ptr_cat@PAUDXUTComboBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTComboBoxItem@@0@Z ; std::_Ptr_cat<DXUTComboBoxItem *,DXUTComboBoxItem *>
PUBLIC	??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
PUBLIC	??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
PUBLIC	??$_Ptr_cat@PAUDXUTElementHolder@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTElementHolder@@0@Z ; std::_Ptr_cat<DXUTElementHolder *,DXUTElementHolder *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
PUBLIC	??$_Ptr_cat@UDXUTSpriteVertex@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUTSpriteVertex@@0@Z ; std::_Ptr_cat<DXUTSpriteVertex,DXUTSpriteVertex>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
PUBLIC	??$_Ptr_cat@PAUDXUTTextureNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTTextureNode@@0@Z ; std::_Ptr_cat<DXUTTextureNode *,DXUTTextureNode *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
PUBLIC	??$_Ptr_cat@PAUDXUTFontNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTFontNode@@0@Z ; std::_Ptr_cat<DXUTFontNode *,DXUTFontNode *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
PUBLIC	??$_Ptr_cat@PAVCDXUTElement@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTElement@@0@Z ; std::_Ptr_cat<CDXUTElement *,CDXUTElement *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
PUBLIC	??$_Uninitialized_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ; std::_Uninitialized_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >
PUBLIC	??$_Uninitialized_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ; std::_Uninitialized_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
PUBLIC	??$_Uninitialized_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
PUBLIC	??$_Uninitialized_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
PUBLIC	??$_Uninitialized_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ; std::_Uninitialized_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
PUBLIC	??$_Uninitialized_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
PUBLIC	??$_Uninitialized_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
PUBLIC	??$_Uninitialized_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ; std::_Uninitialized_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
PUBLIC	??$_Uninitialized_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
PUBLIC	??$_Uninitialized_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
PUBLIC	??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Equal<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
PUBLIC	??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>
PUBLIC	??$forward@ABH@std@@YAABHABH@Z			; std::forward<int const &>
PUBLIC	??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
PUBLIC	??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z ; std::allocator<int>::construct<int,int>
PUBLIC	??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z ; std::allocator<CDXUTControl *>::construct<CDXUTControl *,CDXUTControl * &>
PUBLIC	??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z ; std::allocator<DXUTElementHolder *>::construct<DXUTElementHolder *,DXUTElementHolder * &>
PUBLIC	??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
PUBLIC	??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z ; std::allocator<CDXUTDialog *>::construct<CDXUTDialog *,CDXUTDialog * &>
PUBLIC	??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z ; std::allocator<DXUTTextureNode *>::construct<DXUTTextureNode *,DXUTTextureNode * &>
PUBLIC	??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z ; std::allocator<DXUTFontNode *>::construct<DXUTFontNode *,DXUTFontNode * &>
PUBLIC	??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z ; std::allocator<CDXUTElement *>::construct<CDXUTElement *,CDXUTElement * &>
PUBLIC	??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z ; std::allocator<DXUTListBoxItem *>::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
PUBLIC	??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z ; std::allocator<DXUTComboBoxItem *>::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
PUBLIC	??$destroy@UDXUTSpriteVertex@@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>
PUBLIC	??$_Unchecked@PAH@std@@YAPAHPAH@Z		; std::_Unchecked<int *>
PUBLIC	??$_Uninit_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ; std::_Uninit_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >
PUBLIC	??$_Rechecked@PAHPAH@std@@YAAAPAHAAPAHPAH@Z	; std::_Rechecked<int *,int *>
PUBLIC	??$_Unchecked@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ; std::_Unchecked<CDXUTControl * *>
PUBLIC	??$_Uninit_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ; std::_Uninit_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
PUBLIC	??$_Rechecked@PAPAVCDXUTControl@@PAPAV1@@std@@YAAAPAPAVCDXUTControl@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<CDXUTControl * *,CDXUTControl * *>
PUBLIC	??$_Unchecked@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ; std::_Unchecked<DXUTElementHolder * *>
PUBLIC	??$_Uninit_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ; std::_Uninit_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
PUBLIC	??$_Rechecked@PAPAUDXUTElementHolder@@PAPAU1@@std@@YAAAPAPAUDXUTElementHolder@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTElementHolder * *,DXUTElementHolder * *>
PUBLIC	??$_Unchecked@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ; std::_Unchecked<DXUTSpriteVertex *>
PUBLIC	??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
PUBLIC	??$_Rechecked@PAUDXUTSpriteVertex@@PAU1@@std@@YAAAPAUDXUTSpriteVertex@@AAPAU1@PAU1@@Z ; std::_Rechecked<DXUTSpriteVertex *,DXUTSpriteVertex *>
PUBLIC	??$_Unchecked@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ; std::_Unchecked<CDXUTDialog * *>
PUBLIC	??$_Uninit_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ; std::_Uninit_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
PUBLIC	??$_Rechecked@PAPAVCDXUTDialog@@PAPAV1@@std@@YAAAPAPAVCDXUTDialog@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<CDXUTDialog * *,CDXUTDialog * *>
PUBLIC	??$_Unchecked@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ; std::_Unchecked<DXUTTextureNode * *>
PUBLIC	??$_Uninit_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ; std::_Uninit_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
PUBLIC	??$_Rechecked@PAPAUDXUTTextureNode@@PAPAU1@@std@@YAAAPAPAUDXUTTextureNode@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTTextureNode * *,DXUTTextureNode * *>
PUBLIC	??$_Unchecked@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ; std::_Unchecked<DXUTFontNode * *>
PUBLIC	??$_Uninit_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ; std::_Uninit_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
PUBLIC	??$_Rechecked@PAPAUDXUTFontNode@@PAPAU1@@std@@YAAAPAPAUDXUTFontNode@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTFontNode * *,DXUTFontNode * *>
PUBLIC	??$_Unchecked@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ; std::_Unchecked<CDXUTElement * *>
PUBLIC	??$_Uninit_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ; std::_Uninit_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
PUBLIC	??$_Rechecked@PAPAVCDXUTElement@@PAPAV1@@std@@YAAAPAPAVCDXUTElement@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<CDXUTElement * *,CDXUTElement * *>
PUBLIC	??$_Unchecked@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTListBoxItem * *>
PUBLIC	??$_Uninit_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ; std::_Uninit_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
PUBLIC	??$_Rechecked@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTListBoxItem@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTListBoxItem * *,DXUTListBoxItem * *>
PUBLIC	??$_Unchecked@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTComboBoxItem * *>
PUBLIC	??$_Uninit_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ; std::_Uninit_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
PUBLIC	??$_Rechecked@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTComboBoxItem@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
PUBLIC	??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
PUBLIC	??$?RABHABH@?$less@X@std@@QBE_NABH0@Z		; std::less<void>::operator()<int const &,int const &>
PUBLIC	??$destroy@UDXUTSpriteVertex@@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>
PUBLIC	??$_Val_type@PAH@std@@YAPAHPAH@Z		; std::_Val_type<int *>
PUBLIC	??$_Uninit_move@HHH@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<int,int,int>
PUBLIC	??$_Val_type@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ; std::_Val_type<CDXUTControl * *>
PUBLIC	??$_Uninit_move@PAVCDXUTControl@@PAV1@PAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDXUTControl *,CDXUTControl *,CDXUTControl *>
PUBLIC	??$_Val_type@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ; std::_Val_type<DXUTElementHolder * *>
PUBLIC	??$_Uninit_move@PAUDXUTElementHolder@@PAU1@PAU1@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTElementHolder *,DXUTElementHolder *,DXUTElementHolder *>
PUBLIC	??$_Val_type@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ; std::_Val_type<DXUTSpriteVertex *>
PUBLIC	??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::allocator<DXUTSpriteVertex>,DXUTSpriteVertex>
PUBLIC	??$_Val_type@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ; std::_Val_type<CDXUTDialog * *>
PUBLIC	??$_Uninit_move@PAVCDXUTDialog@@PAV1@PAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDXUTDialog *,CDXUTDialog *,CDXUTDialog *>
PUBLIC	??$_Val_type@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ; std::_Val_type<DXUTTextureNode * *>
PUBLIC	??$_Uninit_move@PAUDXUTTextureNode@@PAU1@PAU1@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTTextureNode *,DXUTTextureNode *,DXUTTextureNode *>
PUBLIC	??$_Val_type@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ; std::_Val_type<DXUTFontNode * *>
PUBLIC	??$_Uninit_move@PAUDXUTFontNode@@PAU1@PAU1@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTFontNode *,DXUTFontNode *,DXUTFontNode *>
PUBLIC	??$_Val_type@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ; std::_Val_type<CDXUTElement * *>
PUBLIC	??$_Uninit_move@PAVCDXUTElement@@PAV1@PAV1@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDXUTElement *,CDXUTElement *,CDXUTElement *>
PUBLIC	??$_Val_type@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ; std::_Val_type<DXUTListBoxItem * *>
PUBLIC	??$_Uninit_move@PAUDXUTListBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTListBoxItem *,DXUTListBoxItem *,DXUTListBoxItem *>
PUBLIC	??$_Val_type@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ; std::_Val_type<DXUTComboBoxItem * *>
PUBLIC	??$_Uninit_move@PAUDXUTComboBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTComboBoxItem *,DXUTComboBoxItem *,DXUTComboBoxItem *>
PUBLIC	??$destroy@UDXUTSpriteVertex@@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@@Z ; std::allocator<DXUTSpriteVertex>::destroy<DXUTSpriteVertex>
PUBLIC	??$_Debug_range@PAH@std@@YAXPAH0PB_WI@Z		; std::_Debug_range<int *>
PUBLIC	??$_Debug_pointer@H@std@@YAXPAHPB_WI@Z		; std::_Debug_pointer<int>
PUBLIC	??$_Debug_range@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WI@Z ; std::_Debug_range<CDXUTControl * *>
PUBLIC	??$_Debug_pointer@PAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@PB_WI@Z ; std::_Debug_pointer<CDXUTControl *>
PUBLIC	??$_Debug_range@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WI@Z ; std::_Debug_range<DXUTElementHolder * *>
PUBLIC	??$_Debug_pointer@PAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@PB_WI@Z ; std::_Debug_pointer<DXUTElementHolder *>
PUBLIC	??$_Debug_range@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WI@Z ; std::_Debug_range<DXUTSpriteVertex *>
PUBLIC	??$_Debug_pointer@UDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@PB_WI@Z ; std::_Debug_pointer<DXUTSpriteVertex>
PUBLIC	??$construct@UDXUTSpriteVertex@@U1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>
PUBLIC	??$_Debug_range@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WI@Z ; std::_Debug_range<CDXUTDialog * *>
PUBLIC	??$_Debug_pointer@PAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@PB_WI@Z ; std::_Debug_pointer<CDXUTDialog *>
PUBLIC	??$_Debug_range@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WI@Z ; std::_Debug_range<DXUTTextureNode * *>
PUBLIC	??$_Debug_pointer@PAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@PB_WI@Z ; std::_Debug_pointer<DXUTTextureNode *>
PUBLIC	??$_Debug_range@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WI@Z ; std::_Debug_range<DXUTFontNode * *>
PUBLIC	??$_Debug_pointer@PAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@PB_WI@Z ; std::_Debug_pointer<DXUTFontNode *>
PUBLIC	??$_Debug_range@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WI@Z ; std::_Debug_range<CDXUTElement * *>
PUBLIC	??$_Debug_pointer@PAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@PB_WI@Z ; std::_Debug_pointer<CDXUTElement *>
PUBLIC	??$_Debug_range@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WI@Z ; std::_Debug_range<DXUTListBoxItem * *>
PUBLIC	??$_Debug_pointer@PAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTListBoxItem *>
PUBLIC	??$_Debug_range@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WI@Z ; std::_Debug_range<DXUTComboBoxItem * *>
PUBLIC	??$_Debug_pointer@PAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTComboBoxItem *>
PUBLIC	??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z ; std::_Iter_cat<int *>
PUBLIC	??$_Debug_range2@PAH@std@@YAXPAH0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<int *>
PUBLIC	??$_Iter_cat@PAPAVCDXUTControl@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTControl@@@Z ; std::_Iter_cat<CDXUTControl * *>
PUBLIC	??$_Debug_range2@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CDXUTControl * *>
PUBLIC	??$_Iter_cat@PAPAUDXUTElementHolder@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTElementHolder@@@Z ; std::_Iter_cat<DXUTElementHolder * *>
PUBLIC	??$_Debug_range2@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTElementHolder * *>
PUBLIC	??$_Iter_cat@PAUDXUTSpriteVertex@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUTSpriteVertex@@@Z ; std::_Iter_cat<DXUTSpriteVertex *>
PUBLIC	??$_Debug_range2@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTSpriteVertex *>
PUBLIC	??$forward@UDXUTSpriteVertex@@@std@@YA$$QAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex>
PUBLIC	??$construct@UDXUTSpriteVertex@@U1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>
PUBLIC	??$_Iter_cat@PAPAVCDXUTDialog@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTDialog@@@Z ; std::_Iter_cat<CDXUTDialog * *>
PUBLIC	??$_Debug_range2@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CDXUTDialog * *>
PUBLIC	??$_Iter_cat@PAPAUDXUTTextureNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTTextureNode@@@Z ; std::_Iter_cat<DXUTTextureNode * *>
PUBLIC	??$_Debug_range2@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTTextureNode * *>
PUBLIC	??$_Iter_cat@PAPAUDXUTFontNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTFontNode@@@Z ; std::_Iter_cat<DXUTFontNode * *>
PUBLIC	??$_Debug_range2@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTFontNode * *>
PUBLIC	??$_Iter_cat@PAPAVCDXUTElement@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTElement@@@Z ; std::_Iter_cat<CDXUTElement * *>
PUBLIC	??$_Debug_range2@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CDXUTElement * *>
PUBLIC	??$_Iter_cat@PAPAUDXUTListBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTListBoxItem@@@Z ; std::_Iter_cat<DXUTListBoxItem * *>
PUBLIC	??$_Debug_range2@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTListBoxItem * *>
PUBLIC	??$_Iter_cat@PAPAUDXUTComboBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTComboBoxItem@@@Z ; std::_Iter_cat<DXUTComboBoxItem * *>
PUBLIC	??$_Debug_range2@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTComboBoxItem * *>
PUBLIC	??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex>
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_7CDXUTControl@@6B@				; CDXUTControl::`vftable'
PUBLIC	??_7CDXUTStatic@@6B@				; CDXUTStatic::`vftable'
PUBLIC	??_7CDXUTButton@@6B@				; CDXUTButton::`vftable'
PUBLIC	??_7CDXUTCheckBox@@6B@				; CDXUTCheckBox::`vftable'
PUBLIC	??_7CDXUTRadioButton@@6B@			; CDXUTRadioButton::`vftable'
PUBLIC	??_7CDXUTScrollBar@@6B@				; CDXUTScrollBar::`vftable'
PUBLIC	??_7CDXUTListBox@@6B@				; CDXUTListBox::`vftable'
PUBLIC	??_7CDXUTComboBox@@6B@				; CDXUTComboBox::`vftable'
PUBLIC	??_7CDXUTSlider@@6B@				; CDXUTSlider::`vftable'
PUBLIC	??_7CDXUTEditBox@@6B@				; CDXUTEditBox::`vftable'
PUBLIC	?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1HC@HBCEAHKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl?$AAo?$AAc@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1LG@LOFDFDLG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$CK@ ; `string'
PUBLIC	??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1MC@PPMNDGOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAS?$AAp?$AAr?$AAi?$AAt?$AAe?$AAV?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1LC@FGIBGBJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAD?$AAi?$AAa?$AAl?$AAo?$AAg?$AA?5?$AA?$CK?$AA?0@ ; `string'
PUBLIC	??_C@_1MG@LCIEHLLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAN?$AAo@ ; `string'
PUBLIC	??_C@_1LK@BMEBJNCM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAF?$AAo?$AAn?$AAt?$AAN?$AAo?$AAd?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@ ; `string'
PUBLIC	??_C@_1MG@CFBLHEIG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAL?$AAi?$AAs?$AAt?$AAB?$AAo?$AAx?$AAI?$AAt@ ; `string'
PUBLIC	??_C@_1MK@BPGBLFNH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAm?$AAb?$AAo?$AAB?$AAo?$AAx?$AAI@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1PC@LCHCOHCA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1PE@BHIFBKJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OG@LHDFBDGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OI@LHGMBFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OE@DNPOOEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OG@IMDMGEPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@OEIJAKGE@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1OG@HPAONIDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_1NO@GEPBEGLJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1OI@FBJKENND@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OK@BOBHABPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OO@JBDIDCFE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PA@KKGPKDHC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OG@MGFHFIJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OI@LBIFFPFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PA@PDJMOHH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PC@KAMNPECF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OO@ILLLNOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PA@LEDFBGDH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1OM@BBFNGLMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OA@KPONDLEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
PUBLIC	??_C@_1OG@PJEOGMLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OC@GPGLLJFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OI@FMJIDCDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OA@PPHMHHME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PC@NFLPPMGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OK@DANGDFEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PA@MBEHBOHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OI@DAOAKOFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_R4CDXUTControl@@6B@				; CDXUTControl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTControl@@@8			; CDXUTControl `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTControl@@8				; CDXUTControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTControl@@8				; CDXUTControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTControl@@8			; CDXUTControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDXUTButton@@6B@				; CDXUTButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTButton@@@8				; CDXUTButton `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTButton@@8				; CDXUTButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTButton@@8				; CDXUTButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTButton@@8			; CDXUTButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDXUTStatic@@8			; CDXUTStatic::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDXUTStatic@@@8				; CDXUTStatic `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTStatic@@8				; CDXUTStatic::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTStatic@@8				; CDXUTStatic::`RTTI Base Class Array'
PUBLIC	??_R4CDXUTStatic@@6B@				; CDXUTStatic::`RTTI Complete Object Locator'
PUBLIC	??_R4CDXUTCheckBox@@6B@				; CDXUTCheckBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTCheckBox@@@8			; CDXUTCheckBox `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTCheckBox@@8				; CDXUTCheckBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTCheckBox@@8				; CDXUTCheckBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTCheckBox@@8			; CDXUTCheckBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDXUTRadioButton@@6B@			; CDXUTRadioButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTRadioButton@@@8			; CDXUTRadioButton `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTRadioButton@@8			; CDXUTRadioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTRadioButton@@8			; CDXUTRadioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTRadioButton@@8		; CDXUTRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDXUTComboBox@@6B@				; CDXUTComboBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTComboBox@@@8			; CDXUTComboBox `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTComboBox@@8				; CDXUTComboBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTComboBox@@8				; CDXUTComboBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTComboBox@@8			; CDXUTComboBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDXUTSlider@@6B@				; CDXUTSlider::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTSlider@@@8				; CDXUTSlider `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTSlider@@8				; CDXUTSlider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTSlider@@8				; CDXUTSlider::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTSlider@@8			; CDXUTSlider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDXUTEditBox@@6B@				; CDXUTEditBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTEditBox@@@8			; CDXUTEditBox `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTEditBox@@8				; CDXUTEditBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTEditBox@@8				; CDXUTEditBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTEditBox@@8			; CDXUTEditBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDXUTListBox@@6B@				; CDXUTListBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTListBox@@@8			; CDXUTListBox `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTListBox@@8				; CDXUTListBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTListBox@@8				; CDXUTListBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTListBox@@8			; CDXUTListBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDXUTScrollBar@@6B@			; CDXUTScrollBar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDXUTScrollBar@@@8			; CDXUTScrollBar `RTTI Type Descriptor'
PUBLIC	??_R3CDXUTScrollBar@@8				; CDXUTScrollBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDXUTScrollBar@@8				; CDXUTScrollBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDXUTScrollBar@@8			; CDXUTScrollBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3a83126f
PUBLIC	__real@3c2c7691
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f19999a
PUBLIC	__real@3f333333
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f666666
PUBLIC	__real@3f7d70a4
PUBLIC	__real@3f800000
PUBLIC	__real@3fa00000
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fd51eb851eb851f
PUBLIC	__real@40000000
PUBLIC	__real@41200000
PUBLIC	__real@41700000
PUBLIC	__real@41f00000
PUBLIC	__real@42280000
PUBLIC	__real@437f0000
PUBLIC	__real@7f7fffff
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp__wcscat_s:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcsnlen:PROC
EXTRN	__imp___wcsnicmp:PROC
EXTRN	__imp__GlobalAlloc@8:PROC
EXTRN	__imp__GlobalLock@4:PROC
EXTRN	__imp__GlobalUnlock@4:PROC
EXTRN	__imp__GlobalFree@4:PROC
EXTRN	__imp__OpenClipboard@4:PROC
EXTRN	__imp__CloseClipboard@0:PROC
EXTRN	__imp__SetClipboardData@8:PROC
EXTRN	__imp__GetClipboardData@4:PROC
EXTRN	__imp__EmptyClipboard@0:PROC
EXTRN	__imp__GetKeyState@4:PROC
EXTRN	__imp__SetCapture@4:PROC
EXTRN	__imp__ReleaseCapture@0:PROC
EXTRN	__imp__GetCaretBlinkTime@0:PROC
EXTRN	__imp__SetRect@20:PROC
EXTRN	__imp__SetRectEmpty@4:PROC
EXTRN	__imp__InflateRect@12:PROC
EXTRN	__imp__IntersectRect@12:PROC
EXTRN	__imp__OffsetRect@12:PROC
EXTRN	__imp__PtInRect@12:PROC
EXTRN	__imp__SystemParametersInfoW@16:PROC
EXTRN	__imp__wcstod:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	??_U@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	??3@YAXPAXABUnothrow_t@std@@@Z:PROC		; operator delete
EXTRN	__imp__swprintf_s:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_D3DCompile@44:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	_DXTraceW@20:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ:PROC	; DXUTGetD3D11Device
EXTRN	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ:PROC ; DXUTGetD3D11DeviceContext
EXTRN	?DXUTGetHWND@@YGPAUHWND__@@XZ:PROC		; DXUTGetHWND
EXTRN	?DXUTGetTime@@YGNXZ:PROC			; DXUTGetTime
EXTRN	?DXUTGetAutomation@@YG_NXZ:PROC			; DXUTGetAutomation
EXTRN	?GetAbsoluteTime@CDXUTTimer@@QBENXZ:PROC	; CDXUTTimer::GetAbsoluteTime
EXTRN	?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ:PROC	; DXUTGetGlobalTimer
EXTRN	?DXUTTrace@@YGJPBDKJPB_W_N@Z:PROC		; DXUTTrace
EXTRN	_ScriptStringAnalyse@52:PROC
EXTRN	_ScriptStringFree@4:PROC
EXTRN	_ScriptString_pcOutChars@4:PROC
EXTRN	_ScriptString_pLogAttr@4:PROC
EXTRN	_ScriptStringCPtoX@16:PROC
EXTRN	_ScriptStringXtoCP@16:PROC
EXTRN	_ScriptApplyDigitSubstitution@12:PROC
EXTRN	??_ECDXUTControl@@UAEPAXI@Z:PROC		; CDXUTControl::`vector deleting destructor'
EXTRN	??_ECDXUTStatic@@UAEPAXI@Z:PROC			; CDXUTStatic::`vector deleting destructor'
EXTRN	??_ECDXUTButton@@UAEPAXI@Z:PROC			; CDXUTButton::`vector deleting destructor'
EXTRN	??_ECDXUTCheckBox@@UAEPAXI@Z:PROC		; CDXUTCheckBox::`vector deleting destructor'
EXTRN	??_ECDXUTRadioButton@@UAEPAXI@Z:PROC		; CDXUTRadioButton::`vector deleting destructor'
EXTRN	??_ECDXUTScrollBar@@UAEPAXI@Z:PROC		; CDXUTScrollBar::`vector deleting destructor'
EXTRN	??_ECDXUTListBox@@UAEPAXI@Z:PROC		; CDXUTListBox::`vector deleting destructor'
EXTRN	??_ECDXUTComboBox@@UAEPAXI@Z:PROC		; CDXUTComboBox::`vector deleting destructor'
EXTRN	??_ECDXUTSlider@@UAEPAXI@Z:PROC			; CDXUTSlider::`vector deleting destructor'
EXTRN	??_ECDXUTEditBox@@UAEPAXI@Z:PROC		; CDXUTEditBox::`vector deleting destructor'
EXTRN	?DXUTCreateGUITextureFromInternalArray@@YGJPAUID3D11Device@@PAPAUID3D11Texture2D@@@Z:PROC ; DXUTCreateGUITextureFromInternalArray
EXTRN	?DXUTFindDXSDKMediaFileCch@@YGJPA_WHPB_W@Z:PROC	; DXUTFindDXSDKMediaFileCch
EXTRN	?CreateDDSTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@IPAW4DDS_ALPHA_MODE@1@@Z:PROC ; DirectX::CreateDDSTextureFromFile
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___libm_sse2_powf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A DB 010H DUP (?) ; g_FontVertices
_BSS	ENDS
;	COMDAT ?bSBInit@?5??Render@CDXUTComboBox@@UAEXM@Z@4_NA
_BSS	SEGMENT
?bSBInit@?5??Render@CDXUTComboBox@@UAEXM@Z@4_NA DB 01H DUP (?) ; `CDXUTComboBox::Render'::`6'::bSBInit
_BSS	ENDS
;	COMDAT ?ThumbOffsetY@?1??HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z@4HA
_BSS	SEGMENT
?ThumbOffsetY@?1??HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z@4HA DD 01H DUP (?) ; `CDXUTScrollBar::HandleMouse'::`2'::ThumbOffsetY
_BSS	ENDS
;	COMDAT ?bSBInit@?6??Render@CDXUTListBox@@UAEXM@Z@4_NA
_BSS	SEGMENT
?bSBInit@?6??Render@CDXUTListBox@@UAEXM@Z@4_NA DB 01H DUP (?) ; `CDXUTListBox::Render'::`7'::bSBInit
_BSS	ENDS
CRT$XCU	SEGMENT
_g_FontVertices$initializer$ DD FLAT:??__Eg_FontVertices@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+038
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@42280000
CONST	SEGMENT
__real@42280000 DD 042280000r			; 42
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fd51eb851eb851f
CONST	SEGMENT
__real@3fd51eb851eb851f DQ 03fd51eb851eb851fr	; 0.33
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3fa00000
CONST	SEGMENT
__real@3fa00000 DD 03fa00000r			; 1.25
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3c2c7691
CONST	SEGMENT
__real@3c2c7691 DD 03c2c7691r			; 0.0105263
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTScrollBar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTScrollBar@@8 DD FLAT:??_R0?AVCDXUTScrollBar@@@8 ; CDXUTScrollBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTScrollBar@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTScrollBar@@8
rdata$r	SEGMENT
??_R2CDXUTScrollBar@@8 DD FLAT:??_R1A@?0A@EA@CDXUTScrollBar@@8 ; CDXUTScrollBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTScrollBar@@8
rdata$r	SEGMENT
??_R3CDXUTScrollBar@@8 DD 00H				; CDXUTScrollBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDXUTScrollBar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTScrollBar@@@8
data$r	SEGMENT
??_R0?AVCDXUTScrollBar@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTScrollBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTScrollBar@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTScrollBar@@6B@
rdata$r	SEGMENT
??_R4CDXUTScrollBar@@6B@ DD 00H				; CDXUTScrollBar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTScrollBar@@@8
	DD	FLAT:??_R3CDXUTScrollBar@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTListBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTListBox@@8 DD FLAT:??_R0?AVCDXUTListBox@@@8 ; CDXUTListBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTListBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTListBox@@8
rdata$r	SEGMENT
??_R2CDXUTListBox@@8 DD FLAT:??_R1A@?0A@EA@CDXUTListBox@@8 ; CDXUTListBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTListBox@@8
rdata$r	SEGMENT
??_R3CDXUTListBox@@8 DD 00H				; CDXUTListBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDXUTListBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTListBox@@@8
data$r	SEGMENT
??_R0?AVCDXUTListBox@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTListBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTListBox@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTListBox@@6B@
rdata$r	SEGMENT
??_R4CDXUTListBox@@6B@ DD 00H				; CDXUTListBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTListBox@@@8
	DD	FLAT:??_R3CDXUTListBox@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTEditBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTEditBox@@8 DD FLAT:??_R0?AVCDXUTEditBox@@@8 ; CDXUTEditBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTEditBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTEditBox@@8
rdata$r	SEGMENT
??_R2CDXUTEditBox@@8 DD FLAT:??_R1A@?0A@EA@CDXUTEditBox@@8 ; CDXUTEditBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTEditBox@@8
rdata$r	SEGMENT
??_R3CDXUTEditBox@@8 DD 00H				; CDXUTEditBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDXUTEditBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTEditBox@@@8
data$r	SEGMENT
??_R0?AVCDXUTEditBox@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTEditBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTEditBox@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTEditBox@@6B@
rdata$r	SEGMENT
??_R4CDXUTEditBox@@6B@ DD 00H				; CDXUTEditBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTEditBox@@@8
	DD	FLAT:??_R3CDXUTEditBox@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTSlider@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTSlider@@8 DD FLAT:??_R0?AVCDXUTSlider@@@8 ; CDXUTSlider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTSlider@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTSlider@@8
rdata$r	SEGMENT
??_R2CDXUTSlider@@8 DD FLAT:??_R1A@?0A@EA@CDXUTSlider@@8 ; CDXUTSlider::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTSlider@@8
rdata$r	SEGMENT
??_R3CDXUTSlider@@8 DD 00H				; CDXUTSlider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDXUTSlider@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTSlider@@@8
data$r	SEGMENT
??_R0?AVCDXUTSlider@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTSlider `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTSlider@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTSlider@@6B@
rdata$r	SEGMENT
??_R4CDXUTSlider@@6B@ DD 00H				; CDXUTSlider::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTSlider@@@8
	DD	FLAT:??_R3CDXUTSlider@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTComboBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTComboBox@@8 DD FLAT:??_R0?AVCDXUTComboBox@@@8 ; CDXUTComboBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTComboBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTComboBox@@8
rdata$r	SEGMENT
??_R2CDXUTComboBox@@8 DD FLAT:??_R1A@?0A@EA@CDXUTComboBox@@8 ; CDXUTComboBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTButton@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTStatic@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTComboBox@@8
rdata$r	SEGMENT
??_R3CDXUTComboBox@@8 DD 00H				; CDXUTComboBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDXUTComboBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTComboBox@@@8
data$r	SEGMENT
??_R0?AVCDXUTComboBox@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTComboBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTComboBox@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTComboBox@@6B@
rdata$r	SEGMENT
??_R4CDXUTComboBox@@6B@ DD 00H				; CDXUTComboBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTComboBox@@@8
	DD	FLAT:??_R3CDXUTComboBox@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTRadioButton@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTRadioButton@@8 DD FLAT:??_R0?AVCDXUTRadioButton@@@8 ; CDXUTRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTRadioButton@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTRadioButton@@8
rdata$r	SEGMENT
??_R2CDXUTRadioButton@@8 DD FLAT:??_R1A@?0A@EA@CDXUTRadioButton@@8 ; CDXUTRadioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTCheckBox@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTButton@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTStatic@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTRadioButton@@8
rdata$r	SEGMENT
??_R3CDXUTRadioButton@@8 DD 00H				; CDXUTRadioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDXUTRadioButton@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTRadioButton@@@8
data$r	SEGMENT
??_R0?AVCDXUTRadioButton@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTRadioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTRadioButton@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTRadioButton@@6B@
rdata$r	SEGMENT
??_R4CDXUTRadioButton@@6B@ DD 00H			; CDXUTRadioButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTRadioButton@@@8
	DD	FLAT:??_R3CDXUTRadioButton@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTCheckBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTCheckBox@@8 DD FLAT:??_R0?AVCDXUTCheckBox@@@8 ; CDXUTCheckBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTCheckBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTCheckBox@@8
rdata$r	SEGMENT
??_R2CDXUTCheckBox@@8 DD FLAT:??_R1A@?0A@EA@CDXUTCheckBox@@8 ; CDXUTCheckBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTButton@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTStatic@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTCheckBox@@8
rdata$r	SEGMENT
??_R3CDXUTCheckBox@@8 DD 00H				; CDXUTCheckBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDXUTCheckBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTCheckBox@@@8
data$r	SEGMENT
??_R0?AVCDXUTCheckBox@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTCheckBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTCheckBox@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTCheckBox@@6B@
rdata$r	SEGMENT
??_R4CDXUTCheckBox@@6B@ DD 00H				; CDXUTCheckBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTCheckBox@@@8
	DD	FLAT:??_R3CDXUTCheckBox@@8
rdata$r	ENDS
;	COMDAT ??_R4CDXUTStatic@@6B@
rdata$r	SEGMENT
??_R4CDXUTStatic@@6B@ DD 00H				; CDXUTStatic::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTStatic@@@8
	DD	FLAT:??_R3CDXUTStatic@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTStatic@@8
rdata$r	SEGMENT
??_R2CDXUTStatic@@8 DD FLAT:??_R1A@?0A@EA@CDXUTStatic@@8 ; CDXUTStatic::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTStatic@@8
rdata$r	SEGMENT
??_R3CDXUTStatic@@8 DD 00H				; CDXUTStatic::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDXUTStatic@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTStatic@@@8
data$r	SEGMENT
??_R0?AVCDXUTStatic@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTStatic `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTStatic@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTStatic@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTStatic@@8 DD FLAT:??_R0?AVCDXUTStatic@@@8 ; CDXUTStatic::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTStatic@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTButton@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTButton@@8 DD FLAT:??_R0?AVCDXUTButton@@@8 ; CDXUTButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTButton@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTButton@@8
rdata$r	SEGMENT
??_R2CDXUTButton@@8 DD FLAT:??_R1A@?0A@EA@CDXUTButton@@8 ; CDXUTButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDXUTStatic@@8
	DD	FLAT:??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R3CDXUTButton@@8
rdata$r	SEGMENT
??_R3CDXUTButton@@8 DD 00H				; CDXUTButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CDXUTButton@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTButton@@@8
data$r	SEGMENT
??_R0?AVCDXUTButton@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTButton@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTButton@@6B@
rdata$r	SEGMENT
??_R4CDXUTButton@@6B@ DD 00H				; CDXUTButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTButton@@@8
	DD	FLAT:??_R3CDXUTButton@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDXUTControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDXUTControl@@8 DD FLAT:??_R0?AVCDXUTControl@@@8 ; CDXUTControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R2CDXUTControl@@8
rdata$r	SEGMENT
??_R2CDXUTControl@@8 DD FLAT:??_R1A@?0A@EA@CDXUTControl@@8 ; CDXUTControl::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDXUTControl@@8
rdata$r	SEGMENT
??_R3CDXUTControl@@8 DD 00H				; CDXUTControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDXUTControl@@@8
data$r	SEGMENT
??_R0?AVCDXUTControl@@@8 DD FLAT:??_7type_info@@6B@	; CDXUTControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDXUTControl@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDXUTControl@@6B@
rdata$r	SEGMENT
??_R4CDXUTControl@@6B@ DD 00H				; CDXUTControl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDXUTControl@@@8
	DD	FLAT:??_R3CDXUTControl@@8
rdata$r	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H, 'g'
	DB	00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@DAOAKOFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OI@DAOAKOFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PA@MBEHBOHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@MBEHBOHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+'
	DB	00H, '=', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@DANGDFEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OK@DANGDFEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b'
	DB	00H, 'o', 00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@NFLPPMGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PC@NFLPPMGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b'
	DB	00H, 'o', 00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, '=', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@PPHMHHME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OA@PPHMHHME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@FMJIDCDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OI@FMJIDCDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@GPGLLJFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OC@GPGLLJFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'N', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H
	DB	't', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@PJEOGMLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OG@PJEOGMLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'o', 00H, 'g', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '+', 00H, '=', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@KPONDLEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OA@KPONDLEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'r', 00H, 'o', 00H, 'l', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1OM@BBFNGLMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OM@BBFNGLMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'H', 00H, 'o', 00H, 'l', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1PA@LEDFBGDH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@LEDFBGDH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+'
	DB	00H, '+', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OO@ILLLNOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OO@ILLLNOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@KAMNPECF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PC@KAMNPECF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b'
	DB	00H, 'o', 00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '+', 00H, '+', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1PA@PDJMOHH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@PDJMOHH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b'
	DB	00H, 'o', 00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '*', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@LBIFFPFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OI@LBIFFPFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@MGFHFIJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OG@MGFHFIJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '*', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1PA@KKGPKDHC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PA@KKGPKDHC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+'
	DB	00H, '+', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OO@JBDIDCFE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OO@JBDIDCFE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@BOBHABPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OK@BOBHABPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'N', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@FBJKENND@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OI@FBJKENND@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'N', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NO@GEPBEGLJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1NO@GEPBEGLJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'o', 00H, 'g', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@HPAONIDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OG@HPAONIDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'o', 00H, 'g', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '-', 00H, '-', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@OEIJAKGE@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@OEIJAKGE@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@IMDMGEPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OG@IMDMGEPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'o', 00H, 'g', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '+', 00H, '+', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@DNPOOEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OE@DNPOOEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'o', 00H, 'g', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '*', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@LHGMBFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OI@LHGMBFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'r', 00H, 'o', 00H, 'l', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@LHDFBDGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OG@LHDFBDGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'r', 00H, 'o', 00H, 'l', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '*', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1PE@BHIFBKJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PE@BHIFBKJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'H', 00H, 'o', 00H, 'l', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@LCHCOHCA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PC@LCHCOHCA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'H', 00H, 'o', 00H, 'l', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MK@BPGBLFNH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAm?$AAb?$AAo?$AAB?$AAo?$AAx?$AAI@
CONST	SEGMENT
??_C@_1MK@BPGBLFNH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAm?$AAb?$AAo?$AAB?$AAo?$AAx?$AAI@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b'
	DB	00H, 'o', 00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, ' ', 00H, '*', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@CFBLHEIG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAL?$AAi?$AAs?$AAt?$AAB?$AAo?$AAx?$AAI?$AAt@
CONST	SEGMENT
??_C@_1MG@CFBLHEIG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAL?$AAi?$AAs?$AAt?$AAB?$AAo?$AAx?$AAI?$AAt@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D'
	DB	00H, 'X', 00H, 'U', 00H, 'T', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'B', 00H, 'o', 00H, 'x', 00H, 'I', 00H, 't', 00H, 'e'
	DB	00H, 'm', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@
CONST	SEGMENT
??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'E'
	DB	00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@BMEBJNCM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAF?$AAo?$AAn?$AAt?$AAN?$AAo?$AAd?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1LK@BMEBJNCM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAF?$AAo?$AAn?$AAt?$AAN?$AAo?$AAd?$AAe?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'N', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '*', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T'
	DB	00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'N', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@LCIEHLLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAN?$AAo@
CONST	SEGMENT
??_C@_1MG@LCIEHLLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAN?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D'
	DB	00H, 'X', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@FGIBGBJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAD?$AAi?$AAa?$AAl?$AAo?$AAg?$AA?5?$AA?$CK?$AA?0@
CONST	SEGMENT
??_C@_1LC@FGIBGBJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAD?$AAi?$AAa?$AAl?$AAo?$AAg?$AA?5?$AA?$CK?$AA?0@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i', 00H, 'a', 00H, 'l'
	DB	00H, 'o', 00H, 'g', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'D', 00H, 'i'
	DB	00H, 'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@PPMNDGOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAS?$AAp?$AAr?$AAi?$AAt?$AAe?$AAV?$AAe?$AAr@
CONST	SEGMENT
??_C@_1MC@PPMNDGOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAS?$AAp?$AAr?$AAi?$AAt?$AAe?$AAV?$AAe?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'S', 00H, 'p', 00H, 'r', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'x', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H, 'X'
	DB	00H, 'U', 00H, 'T', 00H, 'S', 00H, 'p', 00H, 'r', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'e'
	DB	00H, 'x', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@LOFDFDLG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$CK@
CONST	SEGMENT
??_C@_1LG@LOFDFDLG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$CK@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'D', 00H
	DB	'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'r', 00H, 'o', 00H, 'l', 00H, ' ', 00H, '*', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'C', 00H, 'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H
	DB	' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@HBCEAHKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl?$AAo?$AAc@
CONST	SEGMENT
??_C@_1HC@HBCEAHKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl?$AAo?$AAc@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CDXUTEditBox@@6B@
CONST	SEGMENT
??_7CDXUTEditBox@@6B@ DD FLAT:??_R4CDXUTEditBox@@6B@	; CDXUTEditBox::`vftable'
	DD	FLAT:??_ECDXUTEditBox@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTEditBox@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTEditBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTEditBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTEditBox@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTEditBox@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTEditBox@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTControl@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTEditBox@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTEditBox@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CDXUTSlider@@6B@
CONST	SEGMENT
??_7CDXUTSlider@@6B@ DD FLAT:??_R4CDXUTSlider@@6B@	; CDXUTSlider::`vftable'
	DD	FLAT:??_ECDXUTSlider@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTSlider@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTSlider@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTSlider@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTSlider@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTControl@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTSlider@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTSlider@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CDXUTComboBox@@6B@
CONST	SEGMENT
??_7CDXUTComboBox@@6B@ DD FLAT:??_R4CDXUTComboBox@@6B@	; CDXUTComboBox::`vftable'
	DD	FLAT:??_ECDXUTComboBox@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTComboBox@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTComboBox@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTComboBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTComboBox@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTComboBox@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTComboBox@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTComboBox@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTButton@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTComboBox@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTComboBox@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CDXUTListBox@@6B@
CONST	SEGMENT
??_7CDXUTListBox@@6B@ DD FLAT:??_R4CDXUTListBox@@6B@	; CDXUTListBox::`vftable'
	DD	FLAT:??_ECDXUTListBox@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTListBox@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTListBox@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTListBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTListBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTListBox@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTListBox@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTControl@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTListBox@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CDXUTScrollBar@@6B@
CONST	SEGMENT
??_7CDXUTScrollBar@@6B@ DD FLAT:??_R4CDXUTScrollBar@@6B@ ; CDXUTScrollBar::`vftable'
	DD	FLAT:??_ECDXUTScrollBar@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTScrollBar@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTScrollBar@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTScrollBar@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTControl@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTControl@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTScrollBar@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CDXUTRadioButton@@6B@
CONST	SEGMENT
??_7CDXUTRadioButton@@6B@ DD FLAT:??_R4CDXUTRadioButton@@6B@ ; CDXUTRadioButton::`vftable'
	DD	FLAT:??_ECDXUTRadioButton@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTCheckBox@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTRadioButton@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTRadioButton@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTButton@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTRadioButton@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTCheckBox@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTCheckBox@@UAEXXZ
	DD	FLAT:?SetCheckedInternal@CDXUTCheckBox@@MAEX_N0@Z
	DD	FLAT:?SetCheckedInternal@CDXUTRadioButton@@MAEX_N00@Z
CONST	ENDS
;	COMDAT ??_7CDXUTCheckBox@@6B@
CONST	SEGMENT
??_7CDXUTCheckBox@@6B@ DD FLAT:??_R4CDXUTCheckBox@@6B@	; CDXUTCheckBox::`vftable'
	DD	FLAT:??_ECDXUTCheckBox@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTCheckBox@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTCheckBox@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTCheckBox@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTButton@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTCheckBox@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTCheckBox@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTCheckBox@@UAEXXZ
	DD	FLAT:?SetCheckedInternal@CDXUTCheckBox@@MAEX_N0@Z
CONST	ENDS
;	COMDAT ??_7CDXUTButton@@6B@
CONST	SEGMENT
??_7CDXUTButton@@6B@ DD FLAT:??_R4CDXUTButton@@6B@	; CDXUTButton::`vftable'
	DD	FLAT:??_ECDXUTButton@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTButton@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTButton@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTButton@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTButton@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTButton@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTButton@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTControl@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CDXUTStatic@@6B@
CONST	SEGMENT
??_7CDXUTStatic@@6B@ DD FLAT:??_R4CDXUTStatic@@6B@	; CDXUTStatic::`vftable'
	DD	FLAT:??_ECDXUTStatic@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTStatic@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTControl@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTControl@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTControl@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTStatic@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTControl@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CDXUTControl@@6B@
CONST	SEGMENT
??_7CDXUTControl@@6B@ DD FLAT:??_R4CDXUTControl@@6B@	; CDXUTControl::`vftable'
	DD	FLAT:??_ECDXUTControl@@UAEPAXI@Z
	DD	FLAT:?OnInit@CDXUTControl@@UAEJXZ
	DD	FLAT:?Refresh@CDXUTControl@@UAEXXZ
	DD	FLAT:?Render@CDXUTControl@@UAEXM@Z
	DD	FLAT:?MsgProc@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleKeyboard@CDXUTControl@@UAE_NIIJ@Z
	DD	FLAT:?HandleMouse@CDXUTControl@@UAE_NIABUtagPOINT@@IJ@Z
	DD	FLAT:?CanHaveFocus@CDXUTControl@@UAE_NXZ
	DD	FLAT:?OnFocusIn@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnFocusOut@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseEnter@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnMouseLeave@CDXUTControl@@UAEXXZ
	DD	FLAT:?OnHotkey@CDXUTControl@@UAEXXZ
	DD	FLAT:?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z
	DD	FLAT:?SetEnabled@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetEnabled@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetVisible@CDXUTControl@@UAEX_N@Z
	DD	FLAT:?GetVisible@CDXUTControl@@UBE_NXZ
	DD	FLAT:?SetTextColor@CDXUTControl@@UAEXK@Z
	DD	FLAT:?UpdateRects@CDXUTControl@@MAEXXZ
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'p'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ DB 'p', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z$0
__ehfuncinfo$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z$0
__ehfuncinfo$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z$0
__ehfuncinfo$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z$0
__ehfuncinfo$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z$0
__ehfuncinfo$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z$0
__ehfuncinfo$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z$2
__ehfuncinfo$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z$2
__ehfuncinfo$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ$0
__ehfuncinfo$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??1CDXUTEditBox@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDXUTEditBox@@UAE@XZ$0
__unwindtable$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z$0
__unwindtable$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z$0
__unwindtable$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z$0
__unwindtable$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z$0
__unwindtable$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z$0
__unwindtable$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z$0
__unwindtable$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z$0
__unwindtable$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z$0
__unwindtable$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z$0
__unwindtable$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z$1
__unwindtable$?RemoveAllItems@CDXUTComboBox@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveAllItems@CDXUTComboBox@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveAllItems@CDXUTComboBox@@QAEXXZ$1
__unwindtable$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z$1
__unwindtable$?RemoveAllItems@CDXUTListBox@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveAllItems@CDXUTListBox@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveAllItems@CDXUTListBox@@QAEXXZ$1
__unwindtable$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z$1
__unwindtable$?Refresh@CDXUTControl@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Refresh@CDXUTControl@@UAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Refresh@CDXUTControl@@UAEXXZ$1
__unwindtable$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ$1
__unwindtable$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z$1
__unwindtable$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z$1
__unwindtable$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ$1
__unwindtable$?FocusDefaultControl@CDXUTDialog@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FocusDefaultControl@CDXUTDialog@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FocusDefaultControl@CDXUTDialog@@QAEXXZ$1
__unwindtable$?OnRender@CDXUTDialog@@QAEJM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRender@CDXUTDialog@@QAEJM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnRender@CDXUTDialog@@QAEJM@Z$1
__unwindtable$?Refresh@CDXUTDialog@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Refresh@CDXUTDialog@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Refresh@CDXUTDialog@@QAEXXZ$1
__unwindtable$?RemoveAllControls@CDXUTDialog@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveAllControls@CDXUTDialog@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveAllControls@CDXUTDialog@@QAEXXZ$1
__unwindtable$?RemoveControl@CDXUTDialog@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveControl@CDXUTDialog@@QAEXH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveControl@CDXUTDialog@@QAEXH@Z$1
__unwindtable$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z$1
__unwindtable$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z$1
__unwindtable$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z$1
__unwindtable$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z$1
__unwindtable$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z$1
__unwindtable$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z$1
__unwindtable$?RemoveItem@CDXUTComboBox@@QAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveItem@CDXUTComboBox@@QAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveItem@CDXUTComboBox@@QAEXI@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveItem@CDXUTComboBox@@QAEXI@Z$1
__unwindtable$??1CDXUTComboBox@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDXUTComboBox@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDXUTComboBox@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDXUTComboBox@@UAE@XZ$2
__unwindtable$?RemoveItem@CDXUTListBox@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveItem@CDXUTListBox@@QAEXH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveItem@CDXUTListBox@@QAEXH@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveItem@CDXUTListBox@@QAEXH@Z$1
__unwindtable$??1CDXUTListBox@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDXUTListBox@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDXUTListBox@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDXUTListBox@@UAE@XZ$2
__unwindtable$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z$2
__unwindtable$??1CDXUTControl@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDXUTControl@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDXUTControl@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDXUTControl@@UAE@XZ$2
__unwindtable$??0CDXUTDialogResourceManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDXUTDialogResourceManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDXUTDialogResourceManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDXUTDialogResourceManager@@QAE@XZ$2
__unwindtable$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z$2
__unwindtable$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$3
__unwindtable$??0CDXUTDialog@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDXUTDialog@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDXUTDialog@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDXUTDialog@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDXUTDialog@@QAE@XZ$3
__ehfuncinfo$??1CDXUTEditBox@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDXUTEditBox@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemoveItem@CDXUTComboBox@@QAEXI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RemoveItem@CDXUTComboBox@@QAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemoveAllItems@CDXUTComboBox@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveAllItems@CDXUTComboBox@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1CDXUTComboBox@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CDXUTComboBox@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemoveAllItems@CDXUTListBox@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveAllItems@CDXUTListBox@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemoveItem@CDXUTListBox@@QAEXH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RemoveItem@CDXUTListBox@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1CDXUTListBox@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CDXUTListBox@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Refresh@CDXUTControl@@UAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Refresh@CDXUTControl@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1CDXUTControl@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CDXUTControl@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1CDXUTDialogResourceManager@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CDXUTDialogResourceManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CDXUTDialogResourceManager@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CDXUTDialogResourceManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FocusDefaultControl@CDXUTDialog@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?FocusDefaultControl@CDXUTDialog@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnRender@CDXUTDialog@@QAEJM@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnRender@CDXUTDialog@@QAEJM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Refresh@CDXUTDialog@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Refresh@CDXUTDialog@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemoveAllControls@CDXUTDialog@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveAllControls@CDXUTDialog@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RemoveControl@CDXUTDialog@@QAEXH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveControl@CDXUTDialog@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1CDXUTDialog@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1CDXUTDialog@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CDXUTDialog@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CDXUTDialog@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CDXUTDialog@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDXUTDialog@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDXUTDialog@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDXUTDialog@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CDXUTDialog@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CDXUTDialog@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CDXUTDialog@@QAE@XZ$5
__unwindtable$??1CDXUTDialogResourceManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$7
__unwindtable$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$11
	DD	04H
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$12
	DD	04H
	DD	FLAT:__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$13
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z PROC ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00021	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00024	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  0003b	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003e	50		 push	 eax
  0003f	6a 24		 push	 36			; 00000024H
  00041	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00046	83 c4 08	 add	 esp, 8
  00049	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00057	74 20		 je	 SHORT $LN3@construct
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 ??$forward@UDXUTSpriteVertex@@@std@@YA$$QAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex>
  00062	83 c4 04	 add	 esp, 4
  00065	b9 09 00 00 00	 mov	 ecx, 9
  0006a	8b f0		 mov	 esi, eax
  0006c	8b 7d e8	 mov	 edi, DWORD PTR $T2[ebp]
  0006f	f3 a5		 rep movsd
  00071	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00074	89 55 e4	 mov	 DWORD PTR tv74[ebp], edx
  00077	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00079	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  00080	8b 45 e4	 mov	 eax, DWORD PTR tv74[ebp]
  00083	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z ENDP ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTComboBoxItem *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTComboBoxItem *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAUDXUTComboBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTComboBoxItem@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAUDXUTComboBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTComboBoxItem@@@Z PROC ; std::_Iter_cat<DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAUDXUTComboBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTComboBoxItem@@@Z ENDP ; std::_Iter_cat<DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTListBoxItem *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTListBoxItem *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAUDXUTListBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTListBoxItem@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAUDXUTListBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTListBoxItem@@@Z PROC ; std::_Iter_cat<DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAUDXUTListBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTListBoxItem@@@Z ENDP ; std::_Iter_cat<DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<CDXUTElement * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@PB_WI@Z ; std::_Debug_pointer<CDXUTElement *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@PB_WI@Z ; std::_Debug_pointer<CDXUTElement *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<CDXUTElement * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAVCDXUTElement@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTElement@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVCDXUTElement@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTElement@@@Z PROC ; std::_Iter_cat<CDXUTElement * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAVCDXUTElement@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTElement@@@Z ENDP ; std::_Iter_cat<CDXUTElement * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUTFontNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@PB_WI@Z ; std::_Debug_pointer<DXUTFontNode *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@PB_WI@Z ; std::_Debug_pointer<DXUTFontNode *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUTFontNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAUDXUTFontNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTFontNode@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAUDXUTFontNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTFontNode@@@Z PROC ; std::_Iter_cat<DXUTFontNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAUDXUTFontNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTFontNode@@@Z ENDP ; std::_Iter_cat<DXUTFontNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUTTextureNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@PB_WI@Z ; std::_Debug_pointer<DXUTTextureNode *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@PB_WI@Z ; std::_Debug_pointer<DXUTTextureNode *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUTTextureNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAUDXUTTextureNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTTextureNode@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAUDXUTTextureNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTTextureNode@@@Z PROC ; std::_Iter_cat<DXUTTextureNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAUDXUTTextureNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTTextureNode@@@Z ENDP ; std::_Iter_cat<DXUTTextureNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@PB_WI@Z ; std::_Debug_pointer<CDXUTDialog *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@PB_WI@Z ; std::_Debug_pointer<CDXUTDialog *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAVCDXUTDialog@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTDialog@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVCDXUTDialog@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTDialog@@@Z PROC ; std::_Iter_cat<CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAVCDXUTDialog@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTDialog@@@Z ENDP ; std::_Iter_cat<CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@U1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUTSpriteVertex@@U1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@UDXUTSpriteVertex@@@std@@YA$$QAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@U1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@UDXUTSpriteVertex@@U1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@UDXUTSpriteVertex@@@std@@YA$$QAUDXUTSpriteVertex@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UDXUTSpriteVertex@@@std@@YA$$QAUDXUTSpriteVertex@@AAU1@@Z PROC ; std::forward<DXUTSpriteVertex>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@UDXUTSpriteVertex@@@std@@YA$$QAUDXUTSpriteVertex@@AAU1@@Z ENDP ; std::forward<DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUTSpriteVertex *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@UDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@PB_WI@Z ; std::_Debug_pointer<DXUTSpriteVertex>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@UDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@PB_WI@Z ; std::_Debug_pointer<DXUTSpriteVertex>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUTSpriteVertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAUDXUTSpriteVertex@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUTSpriteVertex@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUDXUTSpriteVertex@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUTSpriteVertex@@@Z PROC ; std::_Iter_cat<DXUTSpriteVertex *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAUDXUTSpriteVertex@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUTSpriteVertex@@@Z ENDP ; std::_Iter_cat<DXUTSpriteVertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DXUTElementHolder * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@PB_WI@Z ; std::_Debug_pointer<DXUTElementHolder *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@PB_WI@Z ; std::_Debug_pointer<DXUTElementHolder *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DXUTElementHolder * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAUDXUTElementHolder@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTElementHolder@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAUDXUTElementHolder@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTElementHolder@@@Z PROC ; std::_Iter_cat<DXUTElementHolder * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAUDXUTElementHolder@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTElementHolder@@@Z ENDP ; std::_Iter_cat<DXUTElementHolder * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@PB_WI@Z ; std::_Debug_pointer<CDXUTControl *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@PB_WI@Z ; std::_Debug_pointer<CDXUTControl *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAPAVCDXUTControl@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTControl@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVCDXUTControl@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTControl@@@Z PROC ; std::_Iter_cat<CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAVCDXUTControl@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTControl@@@Z ENDP ; std::_Iter_cat<CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAH@std@@YAXPAH0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAH@std@@YAXPAH0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<int *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@H@std@@YAXPAHPB_WI@Z ; std::_Debug_pointer<int>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00020	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@H@std@@YAXPAHPB_WI@Z ; std::_Debug_pointer<int>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 14	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 10	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  0005b	5e		 pop	 esi
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Debug_range2@PAH@std@@YAXPAH0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z PROC ; std::_Iter_cat<int *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z ENDP ; std::_Iter_cat<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@PB_WI@Z PROC ; std::_Debug_pointer<DXUTComboBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUTComboBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WI@Z PROC ; std::_Debug_range<DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAUDXUTComboBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTComboBoxItem@@@Z ; std::_Iter_cat<DXUTComboBoxItem * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTComboBoxItem * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WI@Z ENDP ; std::_Debug_range<DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@PB_WI@Z PROC ; std::_Debug_pointer<DXUTListBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUTListBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WI@Z PROC ; std::_Debug_range<DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAUDXUTListBoxItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTListBoxItem@@@Z ; std::_Iter_cat<DXUTListBoxItem * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTListBoxItem * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WI@Z ENDP ; std::_Debug_range<DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@PB_WI@Z PROC ; std::_Debug_pointer<CDXUTElement *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@PB_WI@Z ENDP ; std::_Debug_pointer<CDXUTElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WI@Z PROC ; std::_Debug_range<CDXUTElement * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAVCDXUTElement@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTElement@@@Z ; std::_Iter_cat<CDXUTElement * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CDXUTElement * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WI@Z ENDP ; std::_Debug_range<CDXUTElement * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@PB_WI@Z PROC ; std::_Debug_pointer<DXUTFontNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUTFontNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WI@Z PROC ; std::_Debug_range<DXUTFontNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAUDXUTFontNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTFontNode@@@Z ; std::_Iter_cat<DXUTFontNode * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTFontNode * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WI@Z ENDP ; std::_Debug_range<DXUTFontNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@PB_WI@Z PROC ; std::_Debug_pointer<DXUTTextureNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUTTextureNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WI@Z PROC ; std::_Debug_range<DXUTTextureNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAUDXUTTextureNode@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTTextureNode@@@Z ; std::_Iter_cat<DXUTTextureNode * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTTextureNode * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WI@Z ENDP ; std::_Debug_range<DXUTTextureNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@PB_WI@Z PROC ; std::_Debug_pointer<CDXUTDialog *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@PB_WI@Z ENDP ; std::_Debug_pointer<CDXUTDialog *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WI@Z PROC ; std::_Debug_range<CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAVCDXUTDialog@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTDialog@@@Z ; std::_Iter_cat<CDXUTDialog * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CDXUTDialog * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WI@Z ENDP ; std::_Debug_range<CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@U1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUTSpriteVertex@@U1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@UDXUTSpriteVertex@@@std@@YA$$QAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@U1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@UDXUTSpriteVertex@@U1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@UDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@PB_WI@Z PROC ; std::_Debug_pointer<DXUTSpriteVertex>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@UDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WI@Z PROC ; std::_Debug_range<DXUTSpriteVertex *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAUDXUTSpriteVertex@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDXUTSpriteVertex@@@Z ; std::_Iter_cat<DXUTSpriteVertex *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTSpriteVertex *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WI@Z ENDP ; std::_Debug_range<DXUTSpriteVertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@PB_WI@Z PROC ; std::_Debug_pointer<DXUTElementHolder *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@PB_WI@Z ENDP ; std::_Debug_pointer<DXUTElementHolder *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WI@Z PROC ; std::_Debug_range<DXUTElementHolder * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAUDXUTElementHolder@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUDXUTElementHolder@@@Z ; std::_Iter_cat<DXUTElementHolder * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DXUTElementHolder * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WI@Z ENDP ; std::_Debug_range<DXUTElementHolder * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@PAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@PB_WI@Z PROC ; std::_Debug_pointer<CDXUTControl *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@PB_WI@Z ENDP ; std::_Debug_pointer<CDXUTControl *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WI@Z PROC ; std::_Debug_range<CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAVCDXUTControl@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCDXUTControl@@@Z ; std::_Iter_cat<CDXUTControl * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CDXUTControl * *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WI@Z ENDP ; std::_Debug_range<CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@H@std@@YAXPAHPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@H@std@@YAXPAHPB_WI@Z PROC		; std::_Debug_pointer<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 553
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@H@std@@YAXPAHPB_WI@Z ENDP		; std::_Debug_pointer<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAH@std@@YAXPAH0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAH@std@@YAXPAH0PB_WI@Z PROC		; std::_Debug_range<int *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 584
  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z ; std::_Iter_cat<int *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$_Debug_range2@PAH@std@@YAXPAH0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<int *>
  00036	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??$_Debug_range@PAH@std@@YAXPAH0PB_WI@Z ENDP		; std::_Debug_range<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUTSpriteVertex@@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDXUTSpriteVertex@@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@@Z PROC ; std::allocator<DXUTSpriteVertex>::destroy<DXUTSpriteVertex>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@UDXUTSpriteVertex@@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@@Z ENDP ; std::allocator<DXUTSpriteVertex>::destroy<DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUTComboBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUTComboBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUTComboBoxItem *,DXUTComboBoxItem *,DXUTComboBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@0PB_WI@Z ; std::_Debug_range<DXUTComboBoxItem * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTComboBoxItem@@@std@@YAXPAPAUDXUTComboBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTComboBoxItem *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAUDXUTComboBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUTComboBoxItem *,DXUTComboBoxItem *,DXUTComboBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z PROC ; std::_Val_type<DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ENDP ; std::_Val_type<DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUTListBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUTListBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUTListBoxItem *,DXUTListBoxItem *,DXUTListBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@0PB_WI@Z ; std::_Debug_range<DXUTListBoxItem * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTListBoxItem@@@std@@YAXPAPAUDXUTListBoxItem@@PB_WI@Z ; std::_Debug_pointer<DXUTListBoxItem *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAUDXUTListBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUTListBoxItem *,DXUTListBoxItem *,DXUTListBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z PROC ; std::_Val_type<DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ENDP ; std::_Val_type<DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAVCDXUTElement@@PAV1@PAV1@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVCDXUTElement@@PAV1@PAV1@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<CDXUTElement *,CDXUTElement *,CDXUTElement *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@0PB_WI@Z ; std::_Debug_range<CDXUTElement * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTElement@@@std@@YAXPAPAVCDXUTElement@@PB_WI@Z ; std::_Debug_pointer<CDXUTElement *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAVCDXUTElement@@PAV1@PAV1@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CDXUTElement *,CDXUTElement *,CDXUTElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z PROC ; std::_Val_type<CDXUTElement * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ENDP ; std::_Val_type<CDXUTElement * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUTFontNode@@PAU1@PAU1@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUTFontNode@@PAU1@PAU1@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUTFontNode *,DXUTFontNode *,DXUTFontNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@0PB_WI@Z ; std::_Debug_range<DXUTFontNode * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTFontNode@@@std@@YAXPAPAUDXUTFontNode@@PB_WI@Z ; std::_Debug_pointer<DXUTFontNode *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAUDXUTFontNode@@PAU1@PAU1@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUTFontNode *,DXUTFontNode *,DXUTFontNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z PROC ; std::_Val_type<DXUTFontNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ENDP ; std::_Val_type<DXUTFontNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUTTextureNode@@PAU1@PAU1@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUTTextureNode@@PAU1@PAU1@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUTTextureNode *,DXUTTextureNode *,DXUTTextureNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@0PB_WI@Z ; std::_Debug_range<DXUTTextureNode * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTTextureNode@@@std@@YAXPAPAUDXUTTextureNode@@PB_WI@Z ; std::_Debug_pointer<DXUTTextureNode *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAUDXUTTextureNode@@PAU1@PAU1@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUTTextureNode *,DXUTTextureNode *,DXUTTextureNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z PROC ; std::_Val_type<DXUTTextureNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ENDP ; std::_Val_type<DXUTTextureNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAVCDXUTDialog@@PAV1@PAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVCDXUTDialog@@PAV1@PAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<CDXUTDialog *,CDXUTDialog *,CDXUTDialog *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@0PB_WI@Z ; std::_Debug_range<CDXUTDialog * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTDialog@@@std@@YAXPAPAVCDXUTDialog@@PB_WI@Z ; std::_Debug_pointer<CDXUTDialog *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAVCDXUTDialog@@PAV1@PAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CDXUTDialog *,CDXUTDialog *,CDXUTDialog *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z PROC ; std::_Val_type<CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ENDP ; std::_Val_type<CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::allocator<DXUTSpriteVertex>,DXUTSpriteVertex>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	51		 push	 ecx
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00031	68 b6 01 00 00	 push	 438			; 000001b6H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00042	51		 push	 ecx
  00043	e8 00 00 00 00	 call	 ??$_Debug_range@PAUDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@0PB_WI@Z ; std::_Debug_range<DXUTSpriteVertex *>
  00048	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0004b	68 b7 01 00 00	 push	 439			; 000001b7H
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00055	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00058	52		 push	 edx
  00059	e8 00 00 00 00	 call	 ??$_Debug_pointer@UDXUTSpriteVertex@@@std@@YAXPAUDXUTSpriteVertex@@PB_WI@Z ; std::_Debug_pointer<DXUTSpriteVertex>
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00061	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00064	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0006e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00070	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00073	83 c1 24	 add	 ecx, 36			; 00000024H
  00076	89 4d 10	 mov	 DWORD PTR __Dest$[ebp], ecx
  00079	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0007c	83 c2 24	 add	 edx, 36			; 00000024H
  0007f	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
  00082	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00085	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00088	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008d	51		 push	 ecx
  0008e	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00091	52		 push	 edx
  00092	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00095	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@U1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex>
  0009a	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  0009c	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  0009e	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000a0	8b 45 ec	 mov	 eax, DWORD PTR __Next$[ebp]
  000a3	83 c0 24	 add	 eax, 36			; 00000024H
  000a6	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000a9	8b 4d ec	 mov	 ecx, DWORD PTR __Next$[ebp]
  000ac	3b 4d 10	 cmp	 ecx, DWORD PTR __Dest$[ebp]
  000af	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000b1	8b 55 ec	 mov	 edx, DWORD PTR __Next$[ebp]
  000b4	52		 push	 edx
  000b5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000b8	e8 00 00 00 00	 call	 ??$destroy@UDXUTSpriteVertex@@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>
  000bd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000bf	6a 00		 push	 0
  000c1	6a 00		 push	 0
  000c3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000c8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000cd	c3		 ret	 0
$LN10@Uninit_mov:
  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000d5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000de	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	83 c4 14	 add	 esp, 20			; 00000014H
  000f2	3b ec		 cmp	 ebp, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::allocator<DXUTSpriteVertex>,DXUTSpriteVertex>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z PROC ; std::_Val_type<DXUTSpriteVertex *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ENDP ; std::_Val_type<DXUTSpriteVertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUTElementHolder@@PAU1@PAU1@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDXUTElementHolder@@PAU1@PAU1@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DXUTElementHolder *,DXUTElementHolder *,DXUTElementHolder *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@0PB_WI@Z ; std::_Debug_range<DXUTElementHolder * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAUDXUTElementHolder@@@std@@YAXPAPAUDXUTElementHolder@@PB_WI@Z ; std::_Debug_pointer<DXUTElementHolder *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAUDXUTElementHolder@@PAU1@PAU1@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DXUTElementHolder *,DXUTElementHolder *,DXUTElementHolder *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z PROC ; std::_Val_type<DXUTElementHolder * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ENDP ; std::_Val_type<DXUTElementHolder * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAVCDXUTControl@@PAV1@PAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVCDXUTControl@@PAV1@PAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<CDXUTControl *,CDXUTControl *,CDXUTControl *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAPAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@0PB_WI@Z ; std::_Debug_range<CDXUTControl * *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVCDXUTControl@@@std@@YAXPAPAVCDXUTControl@@PB_WI@Z ; std::_Debug_pointer<CDXUTControl *>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@PAVCDXUTControl@@PAV1@PAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CDXUTControl *,CDXUTControl *,CDXUTControl *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z PROC ; std::_Val_type<CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ENDP ; std::_Val_type<CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@HHH@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@HHH@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<int,int,int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 470
  0000c	68 d6 01 00 00	 push	 470			; 000001d6H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$_Debug_range@PAH@std@@YAXPAH0PB_WI@Z ; std::_Debug_range<int *>
  00023	83 c4 10	 add	 esp, 16			; 00000010H
; Line 471
  00026	68 d7 01 00 00	 push	 471			; 000001d7H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00030	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ??$_Debug_pointer@H@std@@YAXPAHPB_WI@Z ; std::_Debug_pointer<int>
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 472
  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00042	c1 f8 02	 sar	 eax, 2
  00045	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 474
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	c1 e1 02	 shl	 ecx, 2
  0004e	8b f4		 mov	 esi, esp
  00050	51		 push	 ecx
  00051	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00054	52		 push	 edx
  00055	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0006c	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
; Line 475
  0006f	5e		 pop	 esi
  00070	83 c4 04	 add	 esp, 4
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??$_Uninit_move@HHH@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAH@std@@YAPAHPAH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAH@std@@YAPAHPAH@Z PROC			; std::_Val_type<int *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 646
  00003	33 c0		 xor	 eax, eax
; Line 647
  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAH@std@@YAPAHPAH@Z ENDP			; std::_Val_type<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUTSpriteVertex@@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UDXUTSpriteVertex@@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@@Z PROC ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@UDXUTSpriteVertex@@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@@Z ; std::allocator<DXUTSpriteVertex>::destroy<DXUTSpriteVertex>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@UDXUTSpriteVertex@@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@@Z ENDP ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?RABHABH@?$less@X@std@@QBE_NABH0@Z PROC		; std::less<void>::operator()<int const &,int const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 263
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 268
  00017	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00021	7d 09		 jge	 SHORT $LN3@operator
  00023	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  0002a	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN4@operator:
  00033	8a 45 f8	 mov	 al, BYTE PTR tv65[ebp]
; Line 269
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ENDP		; std::less<void>::operator()<int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@PB_WI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 540
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 541
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTComboBoxItem@@AAPAPAU1@PAPAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTComboBoxItem@@AAPAPAU1@PAPAU1@@Z PROC ; std::_Rechecked<DXUTComboBoxItem * *,DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTComboBoxItem@@AAPAPAU1@PAPAU1@@Z ENDP ; std::_Rechecked<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTComboBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTComboBoxItem@@0@Z ; std::_Ptr_cat<DXUTComboBoxItem *,DXUTComboBoxItem *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ; std::_Val_type<DXUTComboBoxItem * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUTComboBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTComboBoxItem *,DXUTComboBoxItem *,DXUTComboBoxItem *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z PROC ; std::_Unchecked<DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ENDP ; std::_Unchecked<DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTListBoxItem@@AAPAPAU1@PAPAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTListBoxItem@@AAPAPAU1@PAPAU1@@Z PROC ; std::_Rechecked<DXUTListBoxItem * *,DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTListBoxItem@@AAPAPAU1@PAPAU1@@Z ENDP ; std::_Rechecked<DXUTListBoxItem * *,DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTListBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTListBoxItem@@0@Z ; std::_Ptr_cat<DXUTListBoxItem *,DXUTListBoxItem *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ; std::_Val_type<DXUTListBoxItem * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUTListBoxItem@@PAU1@PAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTListBoxItem *,DXUTListBoxItem *,DXUTListBoxItem *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z PROC ; std::_Unchecked<DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ENDP ; std::_Unchecked<DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAVCDXUTElement@@PAPAV1@@std@@YAAAPAPAVCDXUTElement@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVCDXUTElement@@PAPAV1@@std@@YAAAPAPAVCDXUTElement@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<CDXUTElement * *,CDXUTElement * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAVCDXUTElement@@PAPAV1@@std@@YAAAPAPAVCDXUTElement@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<CDXUTElement * *,CDXUTElement * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z PROC ; std::_Uninit_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTElement@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTElement@@0@Z ; std::_Ptr_cat<CDXUTElement *,CDXUTElement *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ; std::_Val_type<CDXUTElement * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVCDXUTElement@@PAV1@PAV1@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDXUTElement *,CDXUTElement *,CDXUTElement *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ENDP ; std::_Uninit_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z PROC ; std::_Unchecked<CDXUTElement * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ENDP ; std::_Unchecked<CDXUTElement * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAUDXUTFontNode@@PAPAU1@@std@@YAAAPAPAUDXUTFontNode@@AAPAPAU1@PAPAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAUDXUTFontNode@@PAPAU1@@std@@YAAAPAPAUDXUTFontNode@@AAPAPAU1@PAPAU1@@Z PROC ; std::_Rechecked<DXUTFontNode * *,DXUTFontNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAUDXUTFontNode@@PAPAU1@@std@@YAAAPAPAUDXUTFontNode@@AAPAPAU1@PAPAU1@@Z ENDP ; std::_Rechecked<DXUTFontNode * *,DXUTFontNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTFontNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTFontNode@@0@Z ; std::_Ptr_cat<DXUTFontNode *,DXUTFontNode *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ; std::_Val_type<DXUTFontNode * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUTFontNode@@PAU1@PAU1@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTFontNode *,DXUTFontNode *,DXUTFontNode *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z PROC ; std::_Unchecked<DXUTFontNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ENDP ; std::_Unchecked<DXUTFontNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAUDXUTTextureNode@@PAPAU1@@std@@YAAAPAPAUDXUTTextureNode@@AAPAPAU1@PAPAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAUDXUTTextureNode@@PAPAU1@@std@@YAAAPAPAUDXUTTextureNode@@AAPAPAU1@PAPAU1@@Z PROC ; std::_Rechecked<DXUTTextureNode * *,DXUTTextureNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAUDXUTTextureNode@@PAPAU1@@std@@YAAAPAPAUDXUTTextureNode@@AAPAPAU1@PAPAU1@@Z ENDP ; std::_Rechecked<DXUTTextureNode * *,DXUTTextureNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTTextureNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTTextureNode@@0@Z ; std::_Ptr_cat<DXUTTextureNode *,DXUTTextureNode *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ; std::_Val_type<DXUTTextureNode * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUTTextureNode@@PAU1@PAU1@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTTextureNode *,DXUTTextureNode *,DXUTTextureNode *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z PROC ; std::_Unchecked<DXUTTextureNode * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ENDP ; std::_Unchecked<DXUTTextureNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAVCDXUTDialog@@PAPAV1@@std@@YAAAPAPAVCDXUTDialog@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVCDXUTDialog@@PAPAV1@@std@@YAAAPAPAVCDXUTDialog@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<CDXUTDialog * *,CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAVCDXUTDialog@@PAPAV1@@std@@YAAAPAPAVCDXUTDialog@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<CDXUTDialog * *,CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z PROC ; std::_Uninit_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTDialog@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTDialog@@0@Z ; std::_Ptr_cat<CDXUTDialog *,CDXUTDialog *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ; std::_Val_type<CDXUTDialog * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVCDXUTDialog@@PAV1@PAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDXUTDialog *,CDXUTDialog *,CDXUTDialog *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ENDP ; std::_Uninit_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z PROC ; std::_Unchecked<CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ENDP ; std::_Unchecked<CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAUDXUTSpriteVertex@@PAU1@@std@@YAAAPAUDXUTSpriteVertex@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUDXUTSpriteVertex@@PAU1@@std@@YAAAPAUDXUTSpriteVertex@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<DXUTSpriteVertex *,DXUTSpriteVertex *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAUDXUTSpriteVertex@@PAU1@@std@@YAAAPAUDXUTSpriteVertex@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<DXUTSpriteVertex *,DXUTSpriteVertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@UDXUTSpriteVertex@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUTSpriteVertex@@0@Z ; std::_Ptr_cat<DXUTSpriteVertex,DXUTSpriteVertex>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ; std::_Val_type<DXUTSpriteVertex *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@V?$allocator@UDXUTSpriteVertex@@@std@@U1@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::allocator<DXUTSpriteVertex>,DXUTSpriteVertex>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z PROC ; std::_Unchecked<DXUTSpriteVertex *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ENDP ; std::_Unchecked<DXUTSpriteVertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAUDXUTElementHolder@@PAPAU1@@std@@YAAAPAPAUDXUTElementHolder@@AAPAPAU1@PAPAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAUDXUTElementHolder@@PAPAU1@@std@@YAAAPAPAUDXUTElementHolder@@AAPAPAU1@PAPAU1@@Z PROC ; std::_Rechecked<DXUTElementHolder * *,DXUTElementHolder * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAUDXUTElementHolder@@PAPAU1@@std@@YAAAPAPAUDXUTElementHolder@@AAPAPAU1@PAPAU1@@Z ENDP ; std::_Rechecked<DXUTElementHolder * *,DXUTElementHolder * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z PROC ; std::_Uninit_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTElementHolder@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTElementHolder@@0@Z ; std::_Ptr_cat<DXUTElementHolder *,DXUTElementHolder *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ; std::_Val_type<DXUTElementHolder * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUTElementHolder@@PAU1@PAU1@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DXUTElementHolder *,DXUTElementHolder *,DXUTElementHolder *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ENDP ; std::_Uninit_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z PROC ; std::_Unchecked<DXUTElementHolder * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ENDP ; std::_Unchecked<DXUTElementHolder * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAPAVCDXUTControl@@PAPAV1@@std@@YAAAPAPAVCDXUTControl@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVCDXUTControl@@PAPAV1@@std@@YAAAPAPAVCDXUTControl@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<CDXUTControl * *,CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAVCDXUTControl@@PAPAV1@@std@@YAAAPAPAVCDXUTControl@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<CDXUTControl * *,CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z PROC ; std::_Uninit_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTControl@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTControl@@0@Z ; std::_Ptr_cat<CDXUTControl *,CDXUTControl *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ; std::_Val_type<CDXUTControl * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVCDXUTControl@@PAV1@PAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDXUTControl *,CDXUTControl *,CDXUTControl *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ENDP ; std::_Uninit_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z PROC ; std::_Unchecked<CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ENDP ; std::_Unchecked<CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAHPAH@std@@YAAAPAHAAPAHPAH@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAHPAH@std@@YAAAPAHAAPAHPAH@Z PROC	; std::_Rechecked<int *,int *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 289
  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAHPAH@std@@YAAAPAHAAPAHPAH@Z ENDP	; std::_Rechecked<int *,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z PROC ; std::_Uninit_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 484
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAH@std@@YAPAHPAH@Z ; std::_Val_type<int *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@HHH@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<int,int,int>
  00045	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ENDP ; std::_Uninit_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAH@std@@YAPAHPAH@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAH@std@@YAPAHPAH@Z PROC			; std::_Unchecked<int *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 281
  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAH@std@@YAPAHPAH@Z ENDP			; std::_Unchecked<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDXUTSpriteVertex@@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDXUTSpriteVertex@@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@UDXUTSpriteVertex@@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@UDXUTSpriteVertex@@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z PROC ; std::allocator<DXUTComboBoxItem *>::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTComboBoxItem@@@std@@YAAAPAUDXUTComboBoxItem@@AAPAU1@@Z ; std::forward<DXUTComboBoxItem * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z ENDP ; std::allocator<DXUTComboBoxItem *>::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z PROC ; std::allocator<DXUTListBoxItem *>::construct<DXUTListBoxItem *,DXUTListBoxItem * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTListBoxItem@@@std@@YAAAPAUDXUTListBoxItem@@AAPAU1@@Z ; std::forward<DXUTListBoxItem * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z ENDP ; std::allocator<DXUTListBoxItem *>::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z PROC ; std::allocator<CDXUTElement *>::construct<CDXUTElement *,CDXUTElement * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTElement@@@std@@YAAAPAVCDXUTElement@@AAPAV1@@Z ; std::forward<CDXUTElement * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z ENDP ; std::allocator<CDXUTElement *>::construct<CDXUTElement *,CDXUTElement * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z PROC ; std::allocator<DXUTFontNode *>::construct<DXUTFontNode *,DXUTFontNode * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTFontNode@@@std@@YAAAPAUDXUTFontNode@@AAPAU1@@Z ; std::forward<DXUTFontNode * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z ENDP ; std::allocator<DXUTFontNode *>::construct<DXUTFontNode *,DXUTFontNode * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z PROC ; std::allocator<DXUTTextureNode *>::construct<DXUTTextureNode *,DXUTTextureNode * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTTextureNode@@@std@@YAAAPAUDXUTTextureNode@@AAPAU1@@Z ; std::forward<DXUTTextureNode * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z ENDP ; std::allocator<DXUTTextureNode *>::construct<DXUTTextureNode *,DXUTTextureNode * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z PROC ; std::allocator<CDXUTDialog *>::construct<CDXUTDialog *,CDXUTDialog * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTDialog@@@std@@YAAAPAVCDXUTDialog@@AAPAV1@@Z ; std::forward<CDXUTDialog * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z ENDP ; std::allocator<CDXUTDialog *>::construct<CDXUTDialog *,CDXUTDialog * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z PROC ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00021	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00024	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  0003b	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003e	50		 push	 eax
  0003f	6a 24		 push	 36			; 00000024H
  00041	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00046	83 c4 08	 add	 esp, 8
  00049	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00057	74 20		 je	 SHORT $LN3@construct
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 ??$forward@AAUDXUTSpriteVertex@@@std@@YAAAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex &>
  00062	83 c4 04	 add	 esp, 4
  00065	b9 09 00 00 00	 mov	 ecx, 9
  0006a	8b f0		 mov	 esi, eax
  0006c	8b 7d e8	 mov	 edi, DWORD PTR $T2[ebp]
  0006f	f3 a5		 rep movsd
  00071	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00074	89 55 e4	 mov	 DWORD PTR tv74[ebp], edx
  00077	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00079	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  00080	8b 45 e4	 mov	 eax, DWORD PTR tv74[ebp]
  00083	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z ENDP ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z PROC ; std::allocator<DXUTElementHolder *>::construct<DXUTElementHolder *,DXUTElementHolder * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTElementHolder@@@std@@YAAAPAUDXUTElementHolder@@AAPAU1@@Z ; std::forward<DXUTElementHolder * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z ENDP ; std::allocator<DXUTElementHolder *>::construct<DXUTElementHolder *,DXUTElementHolder * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z PROC ; std::allocator<CDXUTControl *>::construct<CDXUTControl *,CDXUTControl * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTControl@@@std@@YAAAPAVCDXUTControl@@AAPAV1@@Z ; std::forward<CDXUTControl * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z ENDP ; std::allocator<CDXUTControl *>::construct<CDXUTControl *,CDXUTControl * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z PROC	; std::allocator<int>::construct<int,int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z ENDP	; std::allocator<int>::construct<int,int>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 520
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 521
  00004	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0001a	83 c4 04	 add	 esp, 4
  0001d	50		 push	 eax
  0001e	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  00021	e8 00 00 00 00	 call	 ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ; std::less<void>::operator()<int const &,int const &>
  00026	0f b6 d0	 movzx	 edx, al
  00029	85 d2		 test	 edx, edx
  0002b	75 06		 jne	 SHORT $LN3@Debug_lt_p
; Line 522
  0002d	32 c0		 xor	 al, al
  0002f	eb 4c		 jmp	 SHORT $LN4@Debug_lt_p
  00031	eb 48		 jmp	 SHORT $LN2@Debug_lt_p
$LN3@Debug_lt_p:
; Line 523
  00033	8b 45 0c	 mov	 eax, DWORD PTR __Left$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0003c	83 c4 04	 add	 esp, 4
  0003f	50		 push	 eax
  00040	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  00050	e8 00 00 00 00	 call	 ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ; std::less<void>::operator()<int const &,int const &>
  00055	0f b6 d0	 movzx	 edx, al
  00058	85 d2		 test	 edx, edx
  0005a	74 1f		 je	 SHORT $LN2@Debug_lt_p
; Line 524
  0005c	8b f4		 mov	 esi, esp
  0005e	8b 45 18	 mov	 eax, DWORD PTR __Line$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 14	 mov	 ecx, DWORD PTR __File$[ebp]
  00065	51		 push	 ecx
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
  00074	3b f4		 cmp	 esi, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_lt_p:
; Line 525
  0007b	b0 01		 mov	 al, 1
$LN4@Debug_lt_p:
; Line 526
  0007d	5e		 pop	 esi
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABH@std@@YAABHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABH@std@@YAABHABH@Z PROC			; std::forward<int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABH@std@@YAABHABH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3025
  00003	eb 09		 jmp	 SHORT $LN4@Find
$LN3@Find:
  00005	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00008	83 c0 04	 add	 eax, 4
  0000b	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN4@Find:
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00011	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00014	74 10		 je	 SHORT $LN2@Find
; Line 3026
  00016	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00019	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0001c	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00020	75 02		 jne	 SHORT $LN1@Find
; Line 3027
  00022	eb 02		 jmp	 SHORT $LN2@Find
$LN1@Find:
; Line 3028
  00024	eb df		 jmp	 SHORT $LN3@Find
$LN2@Find:
  00026	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; Line 3029
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 571
  0002a	8d 45 14	 lea	 eax, DWORD PTR __Last$[ebp]
  0002d	50		 push	 eax
  0002e	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  00031	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
  00036	0f b6 c8	 movzx	 ecx, al
  00039	85 c9		 test	 ecx, ecx
  0003b	74 5a		 je	 SHORT $LN2@Debug_rang
; Line 573
  0003d	8b 55 24	 mov	 edx, DWORD PTR __Line$[ebp]
  00040	52		 push	 edx
  00041	8b 45 20	 mov	 eax, DWORD PTR __File$[ebp]
  00044	50		 push	 eax
  00045	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  00048	51		 push	 ecx
  00049	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  00051	8b 55 24	 mov	 edx, DWORD PTR __Line$[ebp]
  00054	52		 push	 edx
  00055	8b 45 20	 mov	 eax, DWORD PTR __File$[ebp]
  00058	50		 push	 eax
  00059	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  00065	8d 55 08	 lea	 edx, DWORD PTR __First$[ebp]
  00068	52		 push	 edx
  00069	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  0006c	e8 00 00 00 00	 call	 ??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator<
  00071	0f b6 c0	 movzx	 eax, al
  00074	85 c0		 test	 eax, eax
  00076	74 1f		 je	 SHORT $LN2@Debug_rang
; Line 576
  00078	8b f4		 mov	 esi, esp
  0007a	8b 4d 24	 mov	 ecx, DWORD PTR __Line$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 55 20	 mov	 edx, DWORD PTR __File$[ebp]
  00081	52		 push	 edx
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00090	3b f4		 cmp	 esi, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_rang:
; Line 578
  00097	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0009b	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0009e	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000aa	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  000ad	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bc	59		 pop	 ecx
  000bd	5e		 pop	 esi
  000be	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c1	3b ec		 cmp	 ebp, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1:
  00008	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 407
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv74 = -40						; size = 4
tv75 = -36						; size = 4
$T2 = -32						; size = 12
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z PROC ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Equal<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 872
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 874
  00042	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00049	e8 00 00 00 00	 call	 ?base@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::base
  0004e	89 45 dc	 mov	 DWORD PTR tv75[ebp], eax
  00051	8b 4d dc	 mov	 ecx, DWORD PTR tv75[ebp]
  00054	89 4d d8	 mov	 DWORD PTR tv74[ebp], ecx
  00057	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005e	8b 55 d8	 mov	 edx, DWORD PTR tv74[ebp]
  00061	52		 push	 edx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator==
  0006a	88 45 ef	 mov	 BYTE PTR $T3[ebp], al
  0006d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00074	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00077	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0007c	8a 45 ef	 mov	 al, BYTE PTR $T3[ebp]
; Line 875
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	83 c4 28	 add	 esp, 40			; 00000028H
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Equal<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTComboBoxItem * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTComboBoxItem * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTComboBoxItem * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ; std::_Uninit_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTComboBoxItem@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTListBoxItem * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTListBoxItem * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@@Z ; std::_Unchecked<DXUTListBoxItem * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ; std::_Uninit_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAAAPAPAUDXUTListBoxItem@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTListBoxItem * *,DXUTListBoxItem * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z PROC ; std::_Uninitialized_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ; std::_Unchecked<CDXUTElement * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ; std::_Unchecked<CDXUTElement * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@PAPAV1@@Z ; std::_Unchecked<CDXUTElement * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ; std::_Uninit_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAVCDXUTElement@@PAPAV1@@std@@YAAAPAPAVCDXUTElement@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<CDXUTElement * *,CDXUTElement * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ; std::_Unchecked<DXUTFontNode * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ; std::_Unchecked<DXUTFontNode * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@@Z ; std::_Unchecked<DXUTFontNode * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ; std::_Uninit_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAUDXUTFontNode@@PAPAU1@@std@@YAAAPAPAUDXUTFontNode@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTFontNode * *,DXUTFontNode * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ; std::_Unchecked<DXUTTextureNode * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ; std::_Unchecked<DXUTTextureNode * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@@Z ; std::_Unchecked<DXUTTextureNode * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ; std::_Uninit_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAUDXUTTextureNode@@PAPAU1@@std@@YAAAPAPAUDXUTTextureNode@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTTextureNode * *,DXUTTextureNode * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z PROC ; std::_Uninitialized_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ; std::_Unchecked<CDXUTDialog * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ; std::_Unchecked<CDXUTDialog * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@@Z ; std::_Unchecked<CDXUTDialog * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ; std::_Uninit_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAVCDXUTDialog@@PAPAV1@@std@@YAAAPAPAVCDXUTDialog@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<CDXUTDialog * *,CDXUTDialog * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ; std::_Unchecked<DXUTSpriteVertex *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ; std::_Unchecked<DXUTSpriteVertex *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAUDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@PAU1@@Z ; std::_Unchecked<DXUTSpriteVertex *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ; std::_Uninit_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAUDXUTSpriteVertex@@PAU1@@std@@YAAAPAUDXUTSpriteVertex@@AAPAU1@PAU1@@Z ; std::_Rechecked<DXUTSpriteVertex *,DXUTSpriteVertex *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ; std::_Unchecked<DXUTElementHolder * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ; std::_Unchecked<DXUTElementHolder * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@@Z ; std::_Unchecked<DXUTElementHolder * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ; std::_Uninit_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAUDXUTElementHolder@@PAPAU1@@std@@YAAAPAPAUDXUTElementHolder@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<DXUTElementHolder * *,DXUTElementHolder * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z PROC ; std::_Uninitialized_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ; std::_Unchecked<CDXUTControl * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ; std::_Unchecked<CDXUTControl * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@PAPAV1@@Z ; std::_Unchecked<CDXUTControl * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ; std::_Uninit_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAVCDXUTControl@@PAPAV1@@std@@YAAAPAPAVCDXUTControl@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<CDXUTControl * *,CDXUTControl * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z PROC ; std::_Uninitialized_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 495
  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAH@std@@YAPAHPAH@Z ; std::_Unchecked<int *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAH@std@@YAPAHPAH@Z ; std::_Unchecked<int *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAH@std@@YAPAHPAH@Z ; std::_Unchecked<int *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ; std::_Uninit_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAHPAH@std@@YAAAPAHAAPAHPAH@Z ; std::_Rechecked<int *,int *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ENDP ; std::_Uninitialized_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAVCDXUTElement@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTElement@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVCDXUTElement@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTElement@@0@Z PROC ; std::_Ptr_cat<CDXUTElement *,CDXUTElement *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAVCDXUTElement@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTElement@@0@Z ENDP ; std::_Ptr_cat<CDXUTElement *,CDXUTElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAUDXUTFontNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTFontNode@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUDXUTFontNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTFontNode@@0@Z PROC ; std::_Ptr_cat<DXUTFontNode *,DXUTFontNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAUDXUTFontNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTFontNode@@0@Z ENDP ; std::_Ptr_cat<DXUTFontNode *,DXUTFontNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAUDXUTTextureNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTTextureNode@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUDXUTTextureNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTTextureNode@@0@Z PROC ; std::_Ptr_cat<DXUTTextureNode *,DXUTTextureNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAUDXUTTextureNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTTextureNode@@0@Z ENDP ; std::_Ptr_cat<DXUTTextureNode *,DXUTTextureNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 81
  00003	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00005	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00008	83 c0 24	 add	 eax, 36			; 00000024H
  0000b	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00011	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00014	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00016	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00019	52		 push	 edx
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$destroy@UDXUTSpriteVertex@@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::destroy<DXUTSpriteVertex>
  00022	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UDXUTSpriteVertex@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUTSpriteVertex@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UDXUTSpriteVertex@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUTSpriteVertex@@0@Z PROC ; std::_Ptr_cat<DXUTSpriteVertex,DXUTSpriteVertex>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@UDXUTSpriteVertex@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUTSpriteVertex@@0@Z ENDP ; std::_Ptr_cat<DXUTSpriteVertex,DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAUDXUTElementHolder@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTElementHolder@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUDXUTElementHolder@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTElementHolder@@0@Z PROC ; std::_Ptr_cat<DXUTElementHolder *,DXUTElementHolder *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAUDXUTElementHolder@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTElementHolder@@0@Z ENDP ; std::_Ptr_cat<DXUTElementHolder *,DXUTElementHolder *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z PROC ; std::_Ptr_cat<int,int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ENDP ; std::_Ptr_cat<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2428
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2429
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 2431
  00018	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001b	c1 e1 02	 shl	 ecx, 2
  0001e	8b f4		 mov	 esi, esp
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00024	52		 push	 edx
  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2432
  00039	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0003c	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0003f	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
; Line 2433
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAUDXUTComboBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTComboBoxItem@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUDXUTComboBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTComboBoxItem@@0@Z PROC ; std::_Ptr_cat<DXUTComboBoxItem *,DXUTComboBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAUDXUTComboBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTComboBoxItem@@0@Z ENDP ; std::_Ptr_cat<DXUTComboBoxItem *,DXUTComboBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@ABQAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@ABQAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTComboBoxItem@@@std@@YAABQAUDXUTComboBoxItem@@ABQAU1@@Z ; std::forward<DXUTComboBoxItem * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU3@@Z ; std::allocator<DXUTComboBoxItem *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@ABQAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAUDXUTComboBoxItem@@@std@@YAABQAUDXUTComboBoxItem@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUDXUTComboBoxItem@@@std@@YAABQAUDXUTComboBoxItem@@ABQAU1@@Z PROC ; std::forward<DXUTComboBoxItem * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUDXUTComboBoxItem@@@std@@YAABQAUDXUTComboBoxItem@@ABQAU1@@Z ENDP ; std::forward<DXUTComboBoxItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTComboBoxItem@@@std@@YAAAPAUDXUTComboBoxItem@@AAPAU1@@Z ; std::forward<DXUTComboBoxItem * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z ; std::allocator<DXUTComboBoxItem *>::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAUDXUTComboBoxItem@@@std@@YAAAPAUDXUTComboBoxItem@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUDXUTComboBoxItem@@@std@@YAAAPAUDXUTComboBoxItem@@AAPAU1@@Z PROC ; std::forward<DXUTComboBoxItem * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUDXUTComboBoxItem@@@std@@YAAAPAUDXUTComboBoxItem@@AAPAU1@@Z ENDP ; std::forward<DXUTComboBoxItem * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2428
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2429
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 2431
  00018	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001b	c1 e1 02	 shl	 ecx, 2
  0001e	8b f4		 mov	 esi, esp
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00024	52		 push	 edx
  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2432
  00039	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0003c	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0003f	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
; Line 2433
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAUDXUTListBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTListBoxItem@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUDXUTListBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTListBoxItem@@0@Z PROC ; std::_Ptr_cat<DXUTListBoxItem *,DXUTListBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAUDXUTListBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTListBoxItem@@0@Z ENDP ; std::_Ptr_cat<DXUTListBoxItem *,DXUTListBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@ABQAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@ABQAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTListBoxItem@@@std@@YAABQAUDXUTListBoxItem@@ABQAU1@@Z ; std::forward<DXUTListBoxItem * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU3@@Z ; std::allocator<DXUTListBoxItem *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@ABQAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAUDXUTListBoxItem@@@std@@YAABQAUDXUTListBoxItem@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUDXUTListBoxItem@@@std@@YAABQAUDXUTListBoxItem@@ABQAU1@@Z PROC ; std::forward<DXUTListBoxItem * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUDXUTListBoxItem@@@std@@YAABQAUDXUTListBoxItem@@ABQAU1@@Z ENDP ; std::forward<DXUTListBoxItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTListBoxItem@@@std@@YAAAPAUDXUTListBoxItem@@AAPAU1@@Z ; std::forward<DXUTListBoxItem * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z ; std::allocator<DXUTListBoxItem *>::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAUDXUTListBoxItem@@@std@@YAAAPAUDXUTListBoxItem@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUDXUTListBoxItem@@@std@@YAAAPAUDXUTListBoxItem@@AAPAU1@@Z PROC ; std::forward<DXUTListBoxItem * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUDXUTListBoxItem@@@std@@YAAAPAUDXUTListBoxItem@@AAPAU1@@Z ENDP ; std::forward<DXUTListBoxItem * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTElement@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVCDXUTElement@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAVCDXUTElement@@@std@@YAABQAVCDXUTElement@@ABQAV1@@Z ; std::forward<CDXUTElement * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@ABQAV3@@Z ; std::allocator<CDXUTElement *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVCDXUTElement@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAVCDXUTElement@@@std@@YAABQAVCDXUTElement@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVCDXUTElement@@@std@@YAABQAVCDXUTElement@@ABQAV1@@Z PROC ; std::forward<CDXUTElement * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVCDXUTElement@@@std@@YAABQAVCDXUTElement@@ABQAV1@@Z ENDP ; std::forward<CDXUTElement * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@AAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@AAPAV3@@Z PROC ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTElement@@@std@@YAAAPAVCDXUTElement@@AAPAV1@@Z ; std::forward<CDXUTElement * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z ; std::allocator<CDXUTElement *>::construct<CDXUTElement *,CDXUTElement * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@AAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAVCDXUTElement@@@std@@YAAAPAVCDXUTElement@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVCDXUTElement@@@std@@YAAAPAVCDXUTElement@@AAPAV1@@Z PROC ; std::forward<CDXUTElement * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVCDXUTElement@@@std@@YAAAPAVCDXUTElement@@AAPAV1@@Z ENDP ; std::forward<CDXUTElement * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTFontNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@ABQAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTFontNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@ABQAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTFontNode@@@std@@YAABQAUDXUTFontNode@@ABQAU1@@Z ; std::forward<DXUTFontNode * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU3@@Z ; std::allocator<DXUTFontNode *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTFontNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@ABQAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAUDXUTFontNode@@@std@@YAABQAUDXUTFontNode@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUDXUTFontNode@@@std@@YAABQAUDXUTFontNode@@ABQAU1@@Z PROC ; std::forward<DXUTFontNode * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUDXUTFontNode@@@std@@YAABQAUDXUTFontNode@@ABQAU1@@Z ENDP ; std::forward<DXUTFontNode * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTFontNode@@@std@@YAAAPAUDXUTFontNode@@AAPAU1@@Z ; std::forward<DXUTFontNode * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z ; std::allocator<DXUTFontNode *>::construct<DXUTFontNode *,DXUTFontNode * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAUDXUTFontNode@@@std@@YAAAPAUDXUTFontNode@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUDXUTFontNode@@@std@@YAAAPAUDXUTFontNode@@AAPAU1@@Z PROC ; std::forward<DXUTFontNode * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUDXUTFontNode@@@std@@YAAAPAUDXUTFontNode@@AAPAU1@@Z ENDP ; std::forward<DXUTFontNode * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTTextureNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@ABQAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTTextureNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@ABQAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTTextureNode@@@std@@YAABQAUDXUTTextureNode@@ABQAU1@@Z ; std::forward<DXUTTextureNode * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU3@@Z ; std::allocator<DXUTTextureNode *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTTextureNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@ABQAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAUDXUTTextureNode@@@std@@YAABQAUDXUTTextureNode@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUDXUTTextureNode@@@std@@YAABQAUDXUTTextureNode@@ABQAU1@@Z PROC ; std::forward<DXUTTextureNode * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUDXUTTextureNode@@@std@@YAABQAUDXUTTextureNode@@ABQAU1@@Z ENDP ; std::forward<DXUTTextureNode * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTTextureNode@@@std@@YAAAPAUDXUTTextureNode@@AAPAU1@@Z ; std::forward<DXUTTextureNode * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z ; std::allocator<DXUTTextureNode *>::construct<DXUTTextureNode *,DXUTTextureNode * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAUDXUTTextureNode@@@std@@YAAAPAUDXUTTextureNode@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUDXUTTextureNode@@@std@@YAAAPAUDXUTTextureNode@@AAPAU1@@Z PROC ; std::forward<DXUTTextureNode * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUDXUTTextureNode@@@std@@YAAAPAUDXUTTextureNode@@AAPAU1@@Z ENDP ; std::forward<DXUTTextureNode * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2428
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2429
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 2431
  00018	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001b	c1 e1 02	 shl	 ecx, 2
  0001e	8b f4		 mov	 esi, esp
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00024	52		 push	 edx
  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2432
  00039	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0003c	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0003f	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
; Line 2433
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAVCDXUTDialog@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTDialog@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVCDXUTDialog@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTDialog@@0@Z PROC ; std::_Ptr_cat<CDXUTDialog *,CDXUTDialog *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAVCDXUTDialog@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTDialog@@0@Z ENDP ; std::_Ptr_cat<CDXUTDialog *,CDXUTDialog *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTDialog@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVCDXUTDialog@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAVCDXUTDialog@@@std@@YAABQAVCDXUTDialog@@ABQAV1@@Z ; std::forward<CDXUTDialog * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV3@@Z ; std::allocator<CDXUTDialog *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVCDXUTDialog@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAVCDXUTDialog@@@std@@YAABQAVCDXUTDialog@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVCDXUTDialog@@@std@@YAABQAVCDXUTDialog@@ABQAV1@@Z PROC ; std::forward<CDXUTDialog * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVCDXUTDialog@@@std@@YAABQAVCDXUTDialog@@ABQAV1@@Z ENDP ; std::forward<CDXUTDialog * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@AAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@AAPAV3@@Z PROC ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTDialog@@@std@@YAAAPAVCDXUTDialog@@AAPAV1@@Z ; std::forward<CDXUTDialog * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z ; std::allocator<CDXUTDialog *>::construct<CDXUTDialog *,CDXUTDialog * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@AAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAVCDXUTDialog@@@std@@YAAAPAVCDXUTDialog@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVCDXUTDialog@@@std@@YAAAPAVCDXUTDialog@@AAPAV1@@Z PROC ; std::forward<CDXUTDialog * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVCDXUTDialog@@@std@@YAAAPAVCDXUTDialog@@AAPAV1@@Z ENDP ; std::forward<CDXUTDialog * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@ABU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@ABU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUTSpriteVertex@@ABU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@ABU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABUDXUTSpriteVertex@@@std@@YAABUDXUTSpriteVertex@@ABU1@@Z ; std::forward<DXUTSpriteVertex const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@ABU3@@Z ; std::allocator<DXUTSpriteVertex>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@UDXUTSpriteVertex@@ABU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@ABU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABUDXUTSpriteVertex@@@std@@YAABUDXUTSpriteVertex@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUDXUTSpriteVertex@@@std@@YAABUDXUTSpriteVertex@@ABU1@@Z PROC ; std::forward<DXUTSpriteVertex const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABUDXUTSpriteVertex@@@std@@YAABUDXUTSpriteVertex@@ABU1@@Z ENDP ; std::forward<DXUTSpriteVertex const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@AAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@AAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAUDXUTSpriteVertex@@@std@@YAAAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z ; std::allocator<DXUTSpriteVertex>::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@AAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAUDXUTSpriteVertex@@@std@@YAAAUDXUTSpriteVertex@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUDXUTSpriteVertex@@@std@@YAAAUDXUTSpriteVertex@@AAU1@@Z PROC ; std::forward<DXUTSpriteVertex &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAUDXUTSpriteVertex@@@std@@YAAAUDXUTSpriteVertex@@AAU1@@Z ENDP ; std::forward<DXUTSpriteVertex &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTElementHolder@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@ABQAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTElementHolder@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@ABQAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTElementHolder@@@std@@YAABQAUDXUTElementHolder@@ABQAU1@@Z ; std::forward<DXUTElementHolder * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU3@@Z ; std::allocator<DXUTElementHolder *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTElementHolder@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@ABQAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAUDXUTElementHolder@@@std@@YAABQAUDXUTElementHolder@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUDXUTElementHolder@@@std@@YAABQAUDXUTElementHolder@@ABQAU1@@Z PROC ; std::forward<DXUTElementHolder * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAUDXUTElementHolder@@@std@@YAABQAUDXUTElementHolder@@ABQAU1@@Z ENDP ; std::forward<DXUTElementHolder * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTElementHolder@@@std@@YAAAPAUDXUTElementHolder@@AAPAU1@@Z ; std::forward<DXUTElementHolder * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z ; std::allocator<DXUTElementHolder *>::construct<DXUTElementHolder *,DXUTElementHolder * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAUDXUTElementHolder@@@std@@YAAAPAUDXUTElementHolder@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUDXUTElementHolder@@@std@@YAAAPAUDXUTElementHolder@@AAPAU1@@Z PROC ; std::forward<DXUTElementHolder * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAUDXUTElementHolder@@@std@@YAAAPAUDXUTElementHolder@@AAPAU1@@Z ENDP ; std::forward<DXUTElementHolder * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<CDXUTControl * *,CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2428
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2429
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
; Line 2431
  00018	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001b	c1 e1 02	 shl	 ecx, 2
  0001e	8b f4		 mov	 esi, esp
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00024	52		 push	 edx
  00025	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2432
  00039	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0003c	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0003f	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
; Line 2433
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<CDXUTControl * *,CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAVCDXUTControl@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTControl@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVCDXUTControl@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTControl@@0@Z PROC ; std::_Ptr_cat<CDXUTControl *,CDXUTControl *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAVCDXUTControl@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTControl@@0@Z ENDP ; std::_Ptr_cat<CDXUTControl *,CDXUTControl *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTControl@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVCDXUTControl@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAVCDXUTControl@@@std@@YAABQAVCDXUTControl@@ABQAV1@@Z ; std::forward<CDXUTControl * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@ABQAV3@@Z ; std::allocator<CDXUTControl *>::construct
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVCDXUTControl@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABQAVCDXUTControl@@@std@@YAABQAVCDXUTControl@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVCDXUTControl@@@std@@YAABQAVCDXUTControl@@ABQAV1@@Z PROC ; std::forward<CDXUTControl * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVCDXUTControl@@@std@@YAABQAVCDXUTControl@@ABQAV1@@Z ENDP ; std::forward<CDXUTControl * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@AAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@AAPAV3@@Z PROC ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTControl@@@std@@YAAAPAVCDXUTControl@@AAPAV1@@Z ; std::forward<CDXUTControl * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z ; std::allocator<CDXUTControl *>::construct<CDXUTControl *,CDXUTControl * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@AAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAVCDXUTControl@@@std@@YAAAPAVCDXUTControl@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVCDXUTControl@@@std@@YAAAPAVCDXUTControl@@AAPAV1@@Z PROC ; std::forward<CDXUTControl * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVCDXUTControl@@@std@@YAAAPAVCDXUTControl@@AAPAV1@@Z ENDP ; std::forward<CDXUTControl * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@HH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAH$$QAH@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@HH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAH$$QAH@Z PROC ; std::allocator_traits<std::allocator<int> >::construct<int,int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z ; std::allocator<int>::construct<int,int>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@HH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAH$$QAH@Z ENDP ; std::allocator_traits<std::allocator<int> >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z PROC		; std::_Debug_lt<int const &,int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 534
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  00017	52		 push	 edx
  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  0002e	83 c4 04	 add	 esp, 4
  00031	50		 push	 eax
  00032	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
  0003c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 535
  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ENDP		; std::_Debug_lt<int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@AAV10@PBQAVCDXUTDialog@@@Z
_TEXT	SEGMENT
__Iter$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@AAV10@PBQAVCDXUTDialog@@@Z PROC ; std::_Rechecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 273
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 274
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Iter$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Rechecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV12@PBQAVCDXUTDialog@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Rechecked
; Line 275
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@AAV10@PBQAVCDXUTDialog@@@Z ENDP ; std::_Rechecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@@Z PROC ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 3045
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	0f b6 4d ff	 movzx	 ecx, BYTE PTR $T1[ebp]
  00014	51		 push	 ecx
  00015	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  00018	52		 push	 edx
  00019	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 ??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>
  00026	83 c4 10	 add	 esp, 16			; 00000010H
; Line 3046
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@@Z ENDP ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 264
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 265
  00031	8d 4d 08	 lea	 ecx, DWORD PTR __Iter$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEPBQAVCDXUTDialog@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Unchecked
  00039	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00043	8d 4d 08	 lea	 ecx, DWORD PTR __Iter$[ebp]
  00046	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0004b	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
; Line 266
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR __Iter$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
tv140 = -36						; size = 4
tv137 = -32						; size = 4
tv143 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 584
  00043	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00046	50		 push	 eax
  00047	8d 4d f3	 lea	 ecx, DWORD PTR $T4[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  00050	83 c4 08	 add	 esp, 8
  00053	8a 10		 mov	 dl, BYTE PTR [eax]
  00055	0f b6 c2	 movzx	 eax, dl
  00058	50		 push	 eax
  00059	8b 4d 24	 mov	 ecx, DWORD PTR __Line$[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 20	 mov	 edx, DWORD PTR __File$[ebp]
  00060	52		 push	 edx
  00061	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00064	8b cc		 mov	 ecx, esp
  00066	89 65 ec	 mov	 DWORD PTR $T3[ebp], esp
  00069	8d 45 14	 lea	 eax, DWORD PTR __Last$[ebp]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  00072	89 45 e4	 mov	 DWORD PTR tv143[ebp], eax
  00075	8b 4d e4	 mov	 ecx, DWORD PTR tv143[ebp]
  00078	89 4d e0	 mov	 DWORD PTR tv137[ebp], ecx
  0007b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0007f	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00082	8b cc		 mov	 ecx, esp
  00084	89 65 e8	 mov	 DWORD PTR $T2[ebp], esp
  00087	8d 55 08	 lea	 edx, DWORD PTR __First$[ebp]
  0008a	52		 push	 edx
  0008b	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  00090	89 45 dc	 mov	 DWORD PTR tv140[ebp], eax
  00093	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00097	e8 00 00 00 00	 call	 ??$_Debug_range2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  0009c	83 c4 24	 add	 esp, 36			; 00000024H
; Line 585
  0009f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000a3	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  000a6	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b2	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  000b5	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	83 c4 24	 add	 esp, 36			; 00000024H
  000c8	3b ec		 cmp	 ebp, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z$0:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z$1:
  00008	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z$2:
  00010	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?8V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 1141
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1142
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE_NABV01@@Z ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Equal<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
; Line 1143
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$?8V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@IPAPAU1@@Z PROC ; std::_Allocate<DXUTComboBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@IPAPAU1@@Z ENDP ; std::_Allocate<DXUTComboBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@IPAPAU1@@Z PROC ; std::_Allocate<DXUTListBoxItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@IPAPAU1@@Z ENDP ; std::_Allocate<DXUTListBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@IPAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@IPAPAV1@@Z PROC ; std::_Allocate<CDXUTElement *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@IPAPAV1@@Z ENDP ; std::_Allocate<CDXUTElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@IPAPAU1@@Z PROC ; std::_Allocate<DXUTFontNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@IPAPAU1@@Z ENDP ; std::_Allocate<DXUTFontNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@IPAPAU1@@Z PROC ; std::_Allocate<DXUTTextureNode *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@IPAPAU1@@Z ENDP ; std::_Allocate<DXUTTextureNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@IPAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@IPAPAV1@@Z PROC ; std::_Allocate<CDXUTDialog *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@IPAPAV1@@Z ENDP ; std::_Allocate<CDXUTDialog *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@UDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@IPAU1@@Z PROC ; std::_Allocate<DXUTSpriteVertex>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 2e		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 c7 71
	1c 07		 cmp	 DWORD PTR __Count$[ebp], 119304647 ; 071c71c7H
  00022	77 16		 ja	 SHORT $LN1@Allocate
  00024	6b 45 08 24	 imul	 eax, DWORD PTR __Count$[ebp], 36
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002e	83 c4 04	 add	 esp, 4
  00031	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00034	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00038	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003a	8b f4		 mov	 esi, esp
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  00049	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004c	5e		 pop	 esi
  0004d	83 c4 04	 add	 esp, 4
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
??$_Allocate@UDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@IPAU1@@Z ENDP ; std::_Allocate<DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@IPAPAU1@@Z PROC ; std::_Allocate<DXUTElementHolder *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@IPAPAU1@@Z ENDP ; std::_Allocate<DXUTElementHolder *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@PAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@IPAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@IPAPAV1@@Z PROC ; std::_Allocate<CDXUTControl *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@PAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@IPAPAV1@@Z ENDP ; std::_Allocate<CDXUTControl *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 02	 shl	 eax, 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAUDXUTComboBoxItem@@@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEPAPAUDXUTComboBoxItem@@PAPAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUDXUTComboBoxItem@@@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEPAPAUDXUTComboBoxItem@@PAPAU2@00@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Umove<DXUTComboBoxItem * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUDXUTComboBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTComboBoxItem * *,DXUTComboBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAUDXUTComboBoxItem@@@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEPAPAUDXUTComboBoxItem@@PAPAU2@00@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Umove<DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAUDXUTListBoxItem@@@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEPAPAUDXUTListBoxItem@@PAPAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUDXUTListBoxItem@@@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEPAPAUDXUTListBoxItem@@PAPAU2@00@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Umove<DXUTListBoxItem * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUDXUTListBoxItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTListBoxItem * *,DXUTListBoxItem * *,std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAUDXUTListBoxItem@@@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEPAPAUDXUTListBoxItem@@PAPAU2@00@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Umove<DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAVCDXUTElement@@@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEPAPAVCDXUTElement@@PAPAV2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVCDXUTElement@@@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEPAPAVCDXUTElement@@PAPAV2@00@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Umove<CDXUTElement * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDXUTElement@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAPAPAVCDXUTElement@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ; std::_Uninitialized_move<CDXUTElement * *,CDXUTElement * *,std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAVCDXUTElement@@@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEPAPAVCDXUTElement@@PAPAV2@00@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Umove<CDXUTElement * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAUDXUTFontNode@@@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEPAPAUDXUTFontNode@@PAPAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUDXUTFontNode@@@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEPAPAUDXUTFontNode@@PAPAU2@00@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Umove<DXUTFontNode * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUDXUTFontNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAPAPAUDXUTFontNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTFontNode * *,DXUTFontNode * *,std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAUDXUTFontNode@@@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEPAPAUDXUTFontNode@@PAPAU2@00@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Umove<DXUTFontNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAUDXUTTextureNode@@@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEPAPAUDXUTTextureNode@@PAPAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUDXUTTextureNode@@@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEPAPAUDXUTTextureNode@@PAPAU2@00@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Umove<DXUTTextureNode * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUDXUTTextureNode@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAPAPAUDXUTTextureNode@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTTextureNode * *,DXUTTextureNode * *,std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAUDXUTTextureNode@@@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEPAPAUDXUTTextureNode@@PAPAU2@00@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Umove<DXUTTextureNode * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAVCDXUTDialog@@@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEPAPAVCDXUTDialog@@PAPAV2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVCDXUTDialog@@@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEPAPAVCDXUTDialog@@PAPAV2@00@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Umove<CDXUTDialog * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDXUTDialog@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ; std::_Uninitialized_move<CDXUTDialog * *,CDXUTDialog * *,std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAVCDXUTDialog@@@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEPAPAVCDXUTDialog@@PAPAV2@00@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Umove<CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAUDXUTSpriteVertex@@@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEPAUDXUTSpriteVertex@@PAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUDXUTSpriteVertex@@@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEPAUDXUTSpriteVertex@@PAU2@00@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Umove<DXUTSpriteVertex *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUDXUTSpriteVertex@@PAU1@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAPAUDXUTSpriteVertex@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTSpriteVertex *,DXUTSpriteVertex *,std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAUDXUTSpriteVertex@@@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEPAUDXUTSpriteVertex@@PAU2@00@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Umove<DXUTSpriteVertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAUDXUTElementHolder@@@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEPAPAUDXUTElementHolder@@PAPAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUDXUTElementHolder@@@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEPAPAUDXUTElementHolder@@PAPAU2@00@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Umove<DXUTElementHolder * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUDXUTElementHolder@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAPAPAUDXUTElementHolder@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ; std::_Uninitialized_move<DXUTElementHolder * *,DXUTElementHolder * *,std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAUDXUTElementHolder@@@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEPAPAUDXUTElementHolder@@PAPAU2@00@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Umove<DXUTElementHolder * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAPAVCDXUTControl@@@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEPAPAVCDXUTControl@@PAPAV2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVCDXUTControl@@@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEPAPAVCDXUTControl@@PAPAV2@00@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Umove<CDXUTControl * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDXUTControl@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAPAPAVCDXUTControl@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ; std::_Uninitialized_move<CDXUTControl * *,CDXUTControl * *,std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAPAVCDXUTControl@@@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEPAPAVCDXUTControl@@PAPAV2@00@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Umove<CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove<int *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
; Line 1648
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ; std::_Uninitialized_move<int *,int *,std::_Wrap_alloc<std::allocator<int> > >
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  0003e	52		 push	 edx
  0003f	8b cd		 mov	 ecx, ebp
  00041	50		 push	 eax
  00042	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  00048	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004d	58		 pop	 eax
  0004e	5a		 pop	 edx
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
  0005f	90		 npad	 1
$LN5@Umove:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  00068	f7 ff ff ff	 DD	 -9			; fffffff7H
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00074	5f		 DB	 95			; 0000005fH
  00075	41		 DB	 65			; 00000041H
  00076	6c		 DB	 108			; 0000006cH
  00077	76		 DB	 118			; 00000076H
  00078	61		 DB	 97			; 00000061H
  00079	6c		 DB	 108			; 0000006cH
  0007a	00		 DB	 0
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTComboBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTComboBoxItem@@0@Z ; std::_Ptr_cat<DXUTComboBoxItem *,DXUTComboBoxItem *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTListBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTListBoxItem@@0@Z ; std::_Ptr_cat<DXUTListBoxItem *,DXUTListBoxItem *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTElement@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTElement@@0@Z ; std::_Ptr_cat<CDXUTElement *,CDXUTElement *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTFontNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTFontNode@@0@Z ; std::_Ptr_cat<DXUTFontNode *,DXUTFontNode *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTTextureNode@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTTextureNode@@0@Z ; std::_Ptr_cat<DXUTTextureNode *,DXUTTextureNode *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTDialog@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTDialog@@0@Z ; std::_Ptr_cat<CDXUTDialog *,CDXUTDialog *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@UDXUTSpriteVertex@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDXUTSpriteVertex@@0@Z ; std::_Ptr_cat<DXUTSpriteVertex,DXUTSpriteVertex>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTElementHolder@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTElementHolder@@0@Z ; std::_Ptr_cat<DXUTElementHolder *,DXUTElementHolder *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTControl@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTControl@@0@Z ; std::_Ptr_cat<CDXUTControl *,CDXUTControl *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z ; std::_Ptr_cat<int,int>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00@Z PROC ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2441
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTComboBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTComboBoxItem@@0@Z ; std::_Ptr_cat<DXUTComboBoxItem *,DXUTComboBoxItem *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2442
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00@Z ENDP ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTComboBoxItem@@@std@@YAABQAUDXUTComboBoxItem@@ABQAU1@@Z ; std::forward<DXUTComboBoxItem * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTComboBoxItem@@@std@@YAAAPAUDXUTComboBoxItem@@AAPAU1@@Z ; std::forward<DXUTComboBoxItem * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTComboBoxItem@@@1@PAPAUDXUTComboBoxItem@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAUDXUTComboBoxItem@@@std@@YAPBQAUDXUTComboBoxItem@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUDXUTComboBoxItem@@@std@@YAPBQAUDXUTComboBoxItem@@ABQAU1@@Z PROC ; std::addressof<DXUTComboBoxItem * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUDXUTComboBoxItem@@@std@@YAPBQAUDXUTComboBoxItem@@ABQAU1@@Z ENDP ; std::addressof<DXUTComboBoxItem * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00@Z PROC ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2441
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAUDXUTListBoxItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUDXUTListBoxItem@@0@Z ; std::_Ptr_cat<DXUTListBoxItem *,DXUTListBoxItem *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2442
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00@Z ENDP ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTListBoxItem@@@std@@YAABQAUDXUTListBoxItem@@ABQAU1@@Z ; std::forward<DXUTListBoxItem * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTListBoxItem@@@std@@YAAAPAUDXUTListBoxItem@@AAPAU1@@Z ; std::forward<DXUTListBoxItem * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAXAAV?$allocator@PAUDXUTListBoxItem@@@1@PAPAUDXUTListBoxItem@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAUDXUTListBoxItem@@@std@@YAPBQAUDXUTListBoxItem@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUDXUTListBoxItem@@@std@@YAPBQAUDXUTListBoxItem@@ABQAU1@@Z PROC ; std::addressof<DXUTListBoxItem * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUDXUTListBoxItem@@@std@@YAPBQAUDXUTListBoxItem@@ABQAU1@@Z ENDP ; std::addressof<DXUTListBoxItem * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTElement@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTElement@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAVCDXUTElement@@@std@@YAABQAVCDXUTElement@@ABQAV1@@Z ; std::forward<CDXUTElement * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTElement@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@ABQAV3@@Z ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVCDXUTElement@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTElement@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTElement@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTElement@@@std@@YAAAPAVCDXUTElement@@AAPAV1@@Z ; std::forward<CDXUTElement * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTElement@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTElement@@@1@PAPAVCDXUTElement@@AAPAV3@@Z ; std::allocator_traits<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVCDXUTElement@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAVCDXUTElement@@@std@@YAPBQAVCDXUTElement@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVCDXUTElement@@@std@@YAPBQAVCDXUTElement@@ABQAV1@@Z PROC ; std::addressof<CDXUTElement * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAVCDXUTElement@@@std@@YAPBQAVCDXUTElement@@ABQAV1@@Z ENDP ; std::addressof<CDXUTElement * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTFontNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTFontNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTFontNode@@@std@@YAABQAUDXUTFontNode@@ABQAU1@@Z ; std::forward<DXUTFontNode * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTFontNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTFontNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTFontNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTFontNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTFontNode@@@std@@YAAAPAUDXUTFontNode@@AAPAU1@@Z ; std::forward<DXUTFontNode * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTFontNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTFontNode@@@1@PAPAUDXUTFontNode@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTFontNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAUDXUTFontNode@@@std@@YAPBQAUDXUTFontNode@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUDXUTFontNode@@@std@@YAPBQAUDXUTFontNode@@ABQAU1@@Z PROC ; std::addressof<DXUTFontNode * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUDXUTFontNode@@@std@@YAPBQAUDXUTFontNode@@ABQAU1@@Z ENDP ; std::addressof<DXUTFontNode * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTTextureNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTTextureNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTTextureNode@@@std@@YAABQAUDXUTTextureNode@@ABQAU1@@Z ; std::forward<DXUTTextureNode * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTTextureNode@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTTextureNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTTextureNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTTextureNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTTextureNode@@@std@@YAAAPAUDXUTTextureNode@@AAPAU1@@Z ; std::forward<DXUTTextureNode * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTTextureNode@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAXAAV?$allocator@PAUDXUTTextureNode@@@1@PAPAUDXUTTextureNode@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTTextureNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAUDXUTTextureNode@@@std@@YAPBQAUDXUTTextureNode@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUDXUTTextureNode@@@std@@YAPBQAUDXUTTextureNode@@ABQAU1@@Z PROC ; std::addressof<DXUTTextureNode * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUDXUTTextureNode@@@std@@YAPBQAUDXUTTextureNode@@ABQAU1@@Z ENDP ; std::addressof<DXUTTextureNode * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00@Z PROC ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2441
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTDialog@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTDialog@@0@Z ; std::_Ptr_cat<CDXUTDialog *,CDXUTDialog *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2442
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00@Z ENDP ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTDialog@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTDialog@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAVCDXUTDialog@@@std@@YAABQAVCDXUTDialog@@ABQAV1@@Z ; std::forward<CDXUTDialog * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTDialog@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@ABQAV3@@Z ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVCDXUTDialog@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTDialog@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTDialog@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTDialog@@@std@@YAAAPAVCDXUTDialog@@AAPAV1@@Z ; std::forward<CDXUTDialog * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTDialog@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTDialog@@@1@PAPAVCDXUTDialog@@AAPAV3@@Z ; std::allocator_traits<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVCDXUTDialog@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAVCDXUTDialog@@@std@@YAPBQAVCDXUTDialog@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVCDXUTDialog@@@std@@YAPBQAVCDXUTDialog@@ABQAV1@@Z PROC ; std::addressof<CDXUTDialog * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAVCDXUTDialog@@@std@@YAPBQAVCDXUTDialog@@ABQAV1@@Z ENDP ; std::addressof<CDXUTDialog * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@ABU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUTSpriteVertex@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@ABU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABUDXUTSpriteVertex@@@std@@YAABUDXUTSpriteVertex@@ABU1@@Z ; std::forward<DXUTSpriteVertex const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@ABU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@ABU3@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@UDXUTSpriteVertex@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@ABU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDXUTSpriteVertex@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDXUTSpriteVertex@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAUDXUTSpriteVertex@@@std@@YAAAUDXUTSpriteVertex@@AAU1@@Z ; std::forward<DXUTSpriteVertex &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@AAU1@@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAXAAV?$allocator@UDXUTSpriteVertex@@@1@PAUDXUTSpriteVertex@@AAU3@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@UDXUTSpriteVertex@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@$$CBUDXUTSpriteVertex@@@std@@YAPBUDXUTSpriteVertex@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUDXUTSpriteVertex@@@std@@YAPBUDXUTSpriteVertex@@ABU1@@Z PROC ; std::addressof<DXUTSpriteVertex const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@$$CBUDXUTSpriteVertex@@@std@@YAPBUDXUTSpriteVertex@@ABU1@@Z ENDP ; std::addressof<DXUTSpriteVertex const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTElementHolder@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTElementHolder@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAUDXUTElementHolder@@@std@@YAABQAUDXUTElementHolder@@ABQAU1@@Z ; std::forward<DXUTElementHolder * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTElementHolder@@ABQAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@ABQAU3@@Z ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTElementHolder@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAUDXUTElementHolder@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUDXUTElementHolder@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAUDXUTElementHolder@@@std@@YAAAPAUDXUTElementHolder@@AAPAU1@@Z ; std::forward<DXUTElementHolder * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAUDXUTElementHolder@@AAPAU1@@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAXAAV?$allocator@PAUDXUTElementHolder@@@1@PAPAUDXUTElementHolder@@AAPAU3@@Z ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAUDXUTElementHolder@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAUDXUTElementHolder@@@std@@YAPBQAUDXUTElementHolder@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUDXUTElementHolder@@@std@@YAPBQAUDXUTElementHolder@@ABQAU1@@Z PROC ; std::addressof<DXUTElementHolder * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAUDXUTElementHolder@@@std@@YAPBQAUDXUTElementHolder@@ABQAU1@@Z ENDP ; std::addressof<DXUTElementHolder * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00@Z PROC ; std::_Move<CDXUTControl * *,CDXUTControl * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2441
  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVCDXUTControl@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCDXUTControl@@0@Z ; std::_Ptr_cat<CDXUTControl *,CDXUTControl *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<CDXUTControl * *,CDXUTControl * *>
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2442
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00@Z ENDP ; std::_Move<CDXUTControl * *,CDXUTControl * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTControl@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTControl@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAVCDXUTControl@@@std@@YAABQAVCDXUTControl@@ABQAV1@@Z ; std::forward<CDXUTControl * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTControl@@ABQAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@ABQAV3@@Z ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVCDXUTControl@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PAVCDXUTControl@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVCDXUTControl@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAVCDXUTControl@@@std@@YAAAPAVCDXUTControl@@AAPAV1@@Z ; std::forward<CDXUTControl * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTControl@@AAPAV1@@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAXAAV?$allocator@PAVCDXUTControl@@@1@PAPAVCDXUTControl@@AAPAV3@@Z ; std::allocator_traits<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVCDXUTControl@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@QAVCDXUTControl@@@std@@YAPBQAVCDXUTControl@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVCDXUTControl@@@std@@YAPBQAVCDXUTControl@@ABQAV1@@Z PROC ; std::addressof<CDXUTControl * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAVCDXUTControl@@@std@@YAPBQAVCDXUTControl@@ABQAV1@@Z ENDP ; std::addressof<CDXUTControl * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@HH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAH$$QAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@HH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAH$$QAH@Z PROC ; std::_Wrap_alloc<std::allocator<int> >::construct<int,int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@HH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAH$$QAH@Z ; std::allocator_traits<std::allocator<int> >::construct<int,int>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@HH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAH$$QAH@Z ENDP ; std::_Wrap_alloc<std::allocator<int> >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@H@std@@YAPAHAAH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@H@std@@YAPAHAAH@Z PROC			; std::addressof<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@H@std@@YAPAHAAH@Z ENDP			; std::addressof<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 365
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
; Line 366
  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	50		 push	 eax
  0004d	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 367
  0005c	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0005f	51		 push	 ecx
  00060	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00063	e8 00 00 00 00	 call	 ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=
  00068	50		 push	 eax
  00069	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  00071	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  00074	83 ca 01	 or	 edx, 1
  00077	89 55 d8	 mov	 DWORD PTR $T2[ebp], edx
  0007a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00081	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00084	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
  00089	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 368
  0008c	52		 push	 edx
  0008d	8b cd		 mov	 ecx, ebp
  0008f	50		 push	 eax
  00090	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  00096	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009b	58		 pop	 eax
  0009c	5a		 pop	 edx
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	83 c4 28	 add	 esp, 40			; 00000028H
  000ab	3b ec		 cmp	 ebp, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 08 00	 ret	 8
$LN9@operator:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000c0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000c4	0c 00 00 00	 DD	 12			; 0000000cH
  000c8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000cc	5f		 DB	 95			; 0000005fH
  000cd	54		 DB	 84			; 00000054H
  000ce	6d		 DB	 109			; 0000006dH
  000cf	70		 DB	 112			; 00000070H
  000d0	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 360
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=
; Line 361
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 362
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTListBoxItem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTListBoxItem@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTListBoxItem@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTListBoxItem@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@DAOAKOFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 157
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 36		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00021	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  00024	8d 34 91	 lea	 esi, DWORD PTR [ecx+edx*4]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002f	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00032	72 1d		 jb	 SHORT $LN1@operator
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00045	8d 14 8a	 lea	 edx, DWORD PTR [edx+ecx*4]
  00048	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  0004b	0f 83 86 00 00
	00		 jae	 $LN2@operator
$LN1@operator:
; Line 159
  00051	8b f4		 mov	 esi, esp
  00053	68 9f 00 00 00	 push	 159			; 0000009fH
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 160
  00072	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00077	85 c0		 test	 eax, eax
  00079	74 04		 je	 SHORT $LN5@operator
  0007b	33 c9		 xor	 ecx, ecx
  0007d	75 30		 jne	 SHORT $LN6@operator
$LN5@operator:
  0007f	8b f4		 mov	 esi, esp
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0008b	6a 00		 push	 0
  0008d	68 a0 00 00 00	 push	 160			; 000000a0H
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00097	6a 02		 push	 2
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0009f	83 c4 18	 add	 esp, 24			; 00000018H
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	83 f8 01	 cmp	 eax, 1
  000ac	75 01		 jne	 SHORT $LN6@operator
  000ae	cc		 int	 3
$LN6@operator:
  000af	8b f4		 mov	 esi, esp
  000b1	6a 00		 push	 0
  000b3	68 a0 00 00 00	 push	 160			; 000000a0H
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_1PA@MBEHBOHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000cd	83 c4 14	 add	 esp, 20			; 00000014H
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 170
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  000e0	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 171
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 172
  000ec	5e		 pop	 esi
  000ed	83 c4 04	 add	 esp, 4
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1PA@LEDFBGDH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTListBoxItem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTListBoxItem@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OO@ILLLNOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTListBoxItem@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTListBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTListBoxItem *,int,DXUTListBoxItem * const *,DXUTListBoxItem * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$min@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YAABHABH0@Z PROC				; std::min<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4121
  00014	68 19 10 00 00	 push	 4121			; 00001019H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ; std::_Debug_lt<int const &,int const &>
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	0f b6 d0	 movzx	 edx, al
  00031	85 d2		 test	 edx, edx
  00033	74 08		 je	 SHORT $LN3@min
  00035	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00038	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0003b	eb 06		 jmp	 SHORT $LN4@min
$LN3@min:
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00040	89 4d f8	 mov	 DWORD PTR tv71[ebp], ecx
$LN4@min:
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv71[ebp]
  00046	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
; Line 4122
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$min@H@std@@YAABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4087
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 4088
  00014	68 f8 0f 00 00	 push	 4088			; 00000ff8H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@HALMDPKM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ; std::_Debug_lt<int const &,int const &>
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	0f b6 d0	 movzx	 edx, al
  00031	85 d2		 test	 edx, edx
  00033	74 08		 je	 SHORT $LN3@max
  00035	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00038	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0003b	eb 06		 jmp	 SHORT $LN4@max
$LN3@max:
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00040	89 4d f8	 mov	 DWORD PTR tv71[ebp], ecx
$LN4@max:
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv71[ebp]
  00046	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
; Line 4089
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 365
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
; Line 366
  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	50		 push	 eax
  0004d	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 367
  0005c	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0005f	51		 push	 ecx
  00060	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00063	e8 00 00 00 00	 call	 ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=
  00068	50		 push	 eax
  00069	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  00071	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  00074	83 ca 01	 or	 edx, 1
  00077	89 55 d8	 mov	 DWORD PTR $T2[ebp], edx
  0007a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00081	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00084	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
  00089	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 368
  0008c	52		 push	 edx
  0008d	8b cd		 mov	 ecx, ebp
  0008f	50		 push	 eax
  00090	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  00096	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009b	58		 pop	 eax
  0009c	5a		 pop	 edx
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	83 c4 28	 add	 esp, 40			; 00000028H
  000ab	3b ec		 cmp	 ebp, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 08 00	 ret	 8
$LN9@operator:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000c0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000c4	0c 00 00 00	 DD	 12			; 0000000cH
  000c8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000cc	5f		 DB	 95			; 0000005fH
  000cd	54		 DB	 84			; 00000054H
  000ce	6d		 DB	 109			; 0000006dH
  000cf	70		 DB	 112			; 00000070H
  000d0	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 360
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=
; Line 361
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 362
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTComboBoxItem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTComboBoxItem@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTComboBoxItem@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@DANGDFEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 157
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 36		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00021	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  00024	8d 34 91	 lea	 esi, DWORD PTR [ecx+edx*4]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002f	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00032	72 1d		 jb	 SHORT $LN1@operator
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00045	8d 14 8a	 lea	 edx, DWORD PTR [edx+ecx*4]
  00048	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  0004b	0f 83 86 00 00
	00		 jae	 $LN2@operator
$LN1@operator:
; Line 159
  00051	8b f4		 mov	 esi, esp
  00053	68 9f 00 00 00	 push	 159			; 0000009fH
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 160
  00072	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00077	85 c0		 test	 eax, eax
  00079	74 04		 je	 SHORT $LN5@operator
  0007b	33 c9		 xor	 ecx, ecx
  0007d	75 30		 jne	 SHORT $LN6@operator
$LN5@operator:
  0007f	8b f4		 mov	 esi, esp
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0008b	6a 00		 push	 0
  0008d	68 a0 00 00 00	 push	 160			; 000000a0H
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00097	6a 02		 push	 2
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0009f	83 c4 18	 add	 esp, 24			; 00000018H
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	83 f8 01	 cmp	 eax, 1
  000ac	75 01		 jne	 SHORT $LN6@operator
  000ae	cc		 int	 3
$LN6@operator:
  000af	8b f4		 mov	 esi, esp
  000b1	6a 00		 push	 0
  000b3	68 a0 00 00 00	 push	 160			; 000000a0H
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_1PC@NFLPPMGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000cd	83 c4 14	 add	 esp, 20			; 00000014H
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 170
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  000e0	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 171
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 172
  000ec	5e		 pop	 esi
  000ed	83 c4 04	 add	 esp, 4
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1PC@KAMNPECF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1PA@PDJMOHH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTComboBoxItem@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTComboBoxItem *,int,DXUTComboBoxItem * const *,DXUTComboBoxItem * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEAAPAVCDXUTElement@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEAAPAVCDXUTElement@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEABQAVCDXUTElement@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEAAPAVCDXUTElement@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@PPHMHHME@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@LBIFFPFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEABQAVCDXUTElement@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEABQAVCDXUTElement@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@MGFHFIJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEABQAVCDXUTElement@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTElement@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTElement *,int,CDXUTElement * const *,CDXUTElement * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEABQAUDXUTTextureNode@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@FMJIDCDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1PA@KKGPKDHC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEABQAUDXUTTextureNode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEABQAUDXUTTextureNode@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OO@JBDIDCFE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEABQAUDXUTTextureNode@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTTextureNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTTextureNode *,int,DXUTTextureNode * const *,DXUTTextureNode * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEAAPAUDXUTFontNode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEAAPAUDXUTFontNode@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEABQAUDXUTFontNode@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEAAPAUDXUTFontNode@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@GPGLLJFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@BOBHABPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEABQAUDXUTFontNode@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEABQAUDXUTFontNode@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@FBJKENND@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEABQAUDXUTFontNode@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTFontNode@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTFontNode *,int,DXUTFontNode * const *,DXUTFontNode * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 365
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
; Line 366
  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	50		 push	 eax
  0004d	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 367
  0005c	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0005f	51		 push	 ecx
  00060	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00063	e8 00 00 00 00	 call	 ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=
  00068	50		 push	 eax
  00069	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  00071	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  00074	83 ca 01	 or	 edx, 1
  00077	89 55 d8	 mov	 DWORD PTR $T2[ebp], edx
  0007a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00081	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00084	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00089	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 368
  0008c	52		 push	 edx
  0008d	8b cd		 mov	 ecx, ebp
  0008f	50		 push	 eax
  00090	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  00096	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009b	58		 pop	 eax
  0009c	5a		 pop	 edx
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	83 c4 28	 add	 esp, 40			; 00000028H
  000ab	3b ec		 cmp	 ebp, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 08 00	 ret	 8
$LN9@operator:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000c0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000c4	0c 00 00 00	 DD	 12			; 0000000cH
  000c8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000cc	5f		 DB	 95			; 0000005fH
  000cd	54		 DB	 84			; 00000054H
  000ce	6d		 DB	 109			; 0000006dH
  000cf	70		 DB	 112			; 00000070H
  000d0	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 360
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=
; Line 361
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 362
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEAAPAVCDXUTDialog@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEAAPAVCDXUTDialog@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEAAPAVCDXUTDialog@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z
_TEXT	SEGMENT
tv130 = -64						; size = 4
tv184 = -60						; size = 4
tv183 = -56						; size = 4
tv180 = -52						; size = 4
tv179 = -48						; size = 4
tv176 = -44						; size = 4
tv173 = -40						; size = 4
tv128 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
$T6 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Val$ = 36						; size = 4
??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z PROC ; std::find<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,CDXUTDialog *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3051
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00018	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	50		 push	 eax
  0002c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00035	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 3052
  00043	68 ec 0b 00 00	 push	 3052			; 00000becH
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00050	8b cc		 mov	 ecx, esp
  00052	89 65 f0	 mov	 DWORD PTR $T6[ebp], esp
  00055	8d 45 18	 lea	 eax, DWORD PTR __Last$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  0005e	89 45 dc	 mov	 DWORD PTR tv128[ebp], eax
  00061	8b 4d dc	 mov	 ecx, DWORD PTR tv128[ebp]
  00064	89 4d d8	 mov	 DWORD PTR tv173[ebp], ecx
  00067	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0006e	8b cc		 mov	 ecx, esp
  00070	89 65 ec	 mov	 DWORD PTR $T5[ebp], esp
  00073	8d 55 0c	 lea	 edx, DWORD PTR __First$[ebp]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  0007c	89 45 d4	 mov	 DWORD PTR tv176[ebp], eax
  0007f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00083	e8 00 00 00 00	 call	 ??$_Debug_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  00088	83 c4 20	 add	 esp, 32			; 00000020H
; Line 3054
  0008b	8b 45 24	 mov	 eax, DWORD PTR __Val$[ebp]
  0008e	50		 push	 eax
  0008f	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00092	8b cc		 mov	 ecx, esp
  00094	89 65 e8	 mov	 DWORD PTR $T4[ebp], esp
  00097	8d 55 18	 lea	 edx, DWORD PTR __Last$[ebp]
  0009a	52		 push	 edx
  0009b	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  000a0	89 45 d0	 mov	 DWORD PTR tv179[ebp], eax
  000a3	e8 00 00 00 00	 call	 ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ab	89 45 cc	 mov	 DWORD PTR tv180[ebp], eax
  000ae	8b 45 cc	 mov	 eax, DWORD PTR tv180[ebp]
  000b1	50		 push	 eax
  000b2	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000b5	8b cc		 mov	 ecx, esp
  000b7	89 65 e4	 mov	 DWORD PTR $T3[ebp], esp
  000ba	8d 55 0c	 lea	 edx, DWORD PTR __First$[ebp]
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  000c3	89 45 c8	 mov	 DWORD PTR tv183[ebp], eax
  000c6	e8 00 00 00 00	 call	 ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAPBQAVCDXUTDialog@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ce	89 45 c4	 mov	 DWORD PTR tv184[ebp], eax
  000d1	8b 45 c4	 mov	 eax, DWORD PTR tv184[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??$_Find@PBQAVCDXUTDialog@@PAV1@@std@@YAPBQAVCDXUTDialog@@PBQAV1@0ABQAV1@@Z ; std::_Find<CDXUTDialog * const *,CDXUTDialog *>
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
  000dd	89 45 c0	 mov	 DWORD PTR tv130[ebp], eax
  000e0	8b 4d c0	 mov	 ecx, DWORD PTR tv130[ebp]
  000e3	51		 push	 ecx
  000e4	8d 55 0c	 lea	 edx, DWORD PTR __First$[ebp]
  000e7	52		 push	 edx
  000e8	e8 00 00 00 00	 call	 ??$_Rechecked@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@AAV10@PBQAVCDXUTDialog@@@Z ; std::_Rechecked<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  000ed	83 c4 08	 add	 esp, 8
  000f0	50		 push	 eax
  000f1	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000f4	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  000f9	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  000fc	83 c8 01	 or	 eax, 1
  000ff	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  00102	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00106	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00109	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0010e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00115	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  00118	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0011d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 3055
  00120	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00123	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012a	59		 pop	 ecx
  0012b	5f		 pop	 edi
  0012c	83 c4 40	 add	 esp, 64			; 00000040H
  0012f	3b ec		 cmp	 ebp, esp
  00131	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z$0:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z$1:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z$2:
  00010	8b 4d f0	 mov	 ecx, DWORD PTR $T6[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z ENDP ; std::find<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,CDXUTDialog *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?9V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator!=<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 1149
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1150
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$?8V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  00018	83 c4 08	 add	 esp, 8
  0001b	0f b6 d0	 movzx	 edx, al
  0001e	85 d2		 test	 edx, edx
  00020	75 09		 jne	 SHORT $LN3@operator
  00022	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00029	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00032	8a 45 fc	 mov	 al, BYTE PTR tv69[ebp]
; Line 1151
  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??$?9V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator!=<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::~reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::~reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 1063
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1064
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAEAAV01@XZ ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator++
; Line 1065
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1066
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
tv93 = -28						; size = 4
tv92 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 12
??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z PROC ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 1041
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00040	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00043	8b cc		 mov	 ecx, esp
  00045	89 65 ec	 mov	 DWORD PTR $T2[ebp], esp
  00048	8d 45 08	 lea	 eax, DWORD PTR __Right$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  00051	89 45 e8	 mov	 DWORD PTR tv92[ebp], eax
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
  0005c	89 45 e4	 mov	 DWORD PTR tv93[ebp], eax
; Line 1042
  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	8d 4d 08	 lea	 ecx, DWORD PTR __Right$[ebp]
  00069	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0006e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR __Right$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z ENDP ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@ABV01@@Z PROC ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@ABV01@@Z ENDP ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@XZ PROC ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::~_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@XZ ENDP ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::~_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAEAAV01@XZ PROC ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 845
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 846
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator--
; Line 847
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 848
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAEAAV01@XZ ENDP ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ PROC ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 834
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 835
  00042	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00045	50		 push	 eax
  00046	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 836
  00055	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00058	e8 00 00 00 00	 call	 ??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator--
  0005d	8b c8		 mov	 ecx, eax
  0005f	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
  00064	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  00067	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006e	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00071	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00076	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
; Line 837
  00079	52		 push	 edx
  0007a	8b cd		 mov	 ecx, ebp
  0007c	50		 push	 eax
  0007d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@operator
  00083	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00088	58		 pop	 eax
  00089	5a		 pop	 edx
  0008a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00094	59		 pop	 ecx
  00095	83 c4 28	 add	 esp, 40			; 00000028H
  00098	3b ec		 cmp	 ebp, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
  000a3	90		 npad	 1
$LN7@operator:
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000ac	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000b0	0c 00 00 00	 DD	 12			; 0000000cH
  000b4	00 00 00 00	 DD	 $LN4@operator
$LN4@operator:
  000b8	5f		 DB	 95			; 0000005fH
  000b9	54		 DB	 84			; 00000054H
  000ba	6d		 DB	 109			; 0000006dH
  000bb	70		 DB	 112			; 00000070H
  000bc	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ ENDP ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator*
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?base@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?base@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ PROC ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 829
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 830
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0002d	83 c9 01	 or	 ecx, 1
  00030	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  00033	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 831
  00036	83 c4 08	 add	 esp, 8
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?base@?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ENDP ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 12
??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z PROC ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 818
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00034	8d 45 08	 lea	 eax, DWORD PTR __Right$[ebp]
  00037	50		 push	 eax
  00038	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
; Line 819
  00040	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00047	8d 4d 08	 lea	 ecx, DWORD PTR __Right$[ebp]
  0004a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0004f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	83 c4 10	 add	 esp, 16			; 00000010H
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR __Right$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z ENDP ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1NO@GEPBEGLJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator<, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 214
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 215
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Compat
; Line 216
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	73 09		 jae	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 217
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??M?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator-, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 192
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 193
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Compat
; Line 194
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00020	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00023	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  00026	c1 f8 02	 sar	 eax, 2
; Line 195
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 157
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 36		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00021	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  00024	8d 34 91	 lea	 esi, DWORD PTR [ecx+edx*4]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002f	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00032	72 1d		 jb	 SHORT $LN1@operator
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00045	8d 14 8a	 lea	 edx, DWORD PTR [edx+ecx*4]
  00048	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  0004b	0f 83 86 00 00
	00		 jae	 $LN2@operator
$LN1@operator:
; Line 159
  00051	8b f4		 mov	 esi, esp
  00053	68 9f 00 00 00	 push	 159			; 0000009fH
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 160
  00072	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00077	85 c0		 test	 eax, eax
  00079	74 04		 je	 SHORT $LN5@operator
  0007b	33 c9		 xor	 ecx, ecx
  0007d	75 30		 jne	 SHORT $LN6@operator
$LN5@operator:
  0007f	8b f4		 mov	 esi, esp
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0008b	6a 00		 push	 0
  0008d	68 a0 00 00 00	 push	 160			; 000000a0H
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00097	6a 02		 push	 2
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0009f	83 c4 18	 add	 esp, 24			; 00000018H
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	83 f8 01	 cmp	 eax, 1
  000ac	75 01		 jne	 SHORT $LN6@operator
  000ae	cc		 int	 3
$LN6@operator:
  000af	8b f4		 mov	 esi, esp
  000b1	6a 00		 push	 0
  000b3	68 a0 00 00 00	 push	 160			; 000000a0H
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@PJEOGMLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000cd	83 c4 14	 add	 esp, 20			; 00000014H
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 170
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  000e0	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 171
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 172
  000ec	5e		 pop	 esi
  000ed	83 c4 04	 add	 esp, 4
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 124
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 128
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 20		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 17		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	0f 87 86 00 00
	00		 ja	 $LN2@operator
$LN1@operator:
; Line 130
  0003b	8b f4		 mov	 esi, esp
  0003d	68 82 00 00 00	 push	 130			; 00000082H
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@OEIJAKGE@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 131
  0005c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00061	85 c0		 test	 eax, eax
  00063	74 04		 je	 SHORT $LN5@operator
  00065	33 c9		 xor	 ecx, ecx
  00067	75 30		 jne	 SHORT $LN6@operator
$LN5@operator:
  00069	8b f4		 mov	 esi, esp
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00075	6a 00		 push	 0
  00077	68 83 00 00 00	 push	 131			; 00000083H
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00081	6a 02		 push	 2
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00089	83 c4 18	 add	 esp, 24			; 00000018H
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	83 f8 01	 cmp	 eax, 1
  00096	75 01		 jne	 SHORT $LN6@operator
  00098	cc		 int	 3
$LN6@operator:
  00099	8b f4		 mov	 esi, esp
  0009b	6a 00		 push	 0
  0009d	68 83 00 00 00	 push	 131			; 00000083H
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@HPAONIDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b7	83 c4 14	 add	 esp, 20			; 00000014H
  000ba	3b f4		 cmp	 esi, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 141
  000c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c7	83 e9 04	 sub	 ecx, 4
  000ca	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cd	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 142
  000d0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 143
  000d3	5e		 pop	 esi
  000d4	83 c4 04	 add	 esp, 4
  000d7	3b ec		 cmp	 ebp, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@IMDMGEPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@DNPOOEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEPBQAVCDXUTDialog@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEPBQAVCDXUTDialog@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Unchecked, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 60
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 61
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 62
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEPBQAVCDXUTDialog@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Rechecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV12@PBQAVCDXUTDialog@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Rechecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV12@PBQAVCDXUTDialog@@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Rechecked, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 54
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 55
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00014	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 56
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 57
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?_Rechecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV12@PBQAVCDXUTDialog@@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Rechecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@KPONDLEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@LHGMBFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@LHDFBDGG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVCDXUTControl@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,CDXUTControl *,int,CDXUTControl * const *,CDXUTControl * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 334
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
; Line 335
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 336
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 324
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
; Line 325
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
; Line 307
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 238
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1a		 je	 SHORT $LN1@Compat
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 84 86 00 00
	00		 je	 $LN3@Compat
$LN1@Compat:
; Line 240
  00035	8b f4		 mov	 esi, esp
  00037	68 f0 00 00 00	 push	 240			; 000000f0H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00056	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  0005b	85 c0		 test	 eax, eax
  0005d	74 04		 je	 SHORT $LN5@Compat
  0005f	33 c9		 xor	 ecx, ecx
  00061	75 30		 jne	 SHORT $LN6@Compat
$LN5@Compat:
  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006f	6a 00		 push	 0
  00071	68 f1 00 00 00	 push	 241			; 000000f1H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007b	6a 02		 push	 2
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 01		 jne	 SHORT $LN6@Compat
  00092	cc		 int	 3
$LN6@Compat:
  00093	8b f4		 mov	 esi, esp
  00095	6a 00		 push	 0
  00097	68 f1 00 00 00	 push	 241			; 000000f1H
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1OM@BBFNGLMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b1	83 c4 14	 add	 esp, 20			; 00000014H
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Compat:
; Line 243
  000bb	5e		 pop	 esi
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 211
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Compat
; Line 205
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  00041	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 206
  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 1c		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 13		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00035	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 101
  00037	8b f4		 mov	 esi, esp
  00039	6a 65		 push	 101			; 00000065H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 102
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN5@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	6a 66		 push	 102			; 00000066H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00077	6a 02		 push	 2
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 01		 jne	 SHORT $LN6@operator
  0008e	cc		 int	 3
$LN6@operator:
  0008f	8b f4		 mov	 esi, esp
  00091	6a 00		 push	 0
  00093	6a 66		 push	 102			; 00000066H
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_1PE@BHIFBKJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 112
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ba	83 c1 04	 add	 ecx, 4
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 113
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 114
  000c6	5e		 pop	 esi
  000c7	83 c4 04	 add	 esp, 4
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 2f		 je	 SHORT $LN1@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 26		 je	 SHORT $LN1@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	72 13		 jb	 SHORT $LN1@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00045	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00048	77 7d		 ja	 SHORT $LN2@operator
$LN1@operator:
; Line 72
  0004a	8b f4		 mov	 esi, esp
  0004c	6a 48		 push	 72			; 00000048H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 73
  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0006d	85 c0		 test	 eax, eax
  0006f	74 04		 je	 SHORT $LN5@operator
  00071	33 c9		 xor	 ecx, ecx
  00073	75 2d		 jne	 SHORT $LN6@operator
$LN5@operator:
  00075	8b f4		 mov	 esi, esp
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  00081	6a 00		 push	 0
  00083	6a 49		 push	 73			; 00000049H
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008a	6a 02		 push	 2
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 01		 jne	 SHORT $LN6@operator
  000a1	cc		 int	 3
$LN6@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	6a 00		 push	 0
  000a6	6a 49		 push	 73			; 00000049H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1PC@LCHCOHCA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bd	83 c4 14	 add	 esp, 20			; 00000014H
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:
; Line 86
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 87
  000cd	5e		 pop	 esi
  000ce	83 c4 04	 add	 esp, 4
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 48
  00045	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUDXUTElementHolder@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DXUTElementHolder *,int,DXUTElementHolder * const *,DXUTElementHolder * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?EndFont11@@YAXXZ PROC					; EndFont11
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 231
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 232
  00004	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A, 0 ; g_pFontBuffer11
  0000b	74 26		 je	 SHORT $LN2@EndFont11
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8b f4		 mov	 esi, esp
  00016	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  0001c	52		 push	 edx
  0001d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00020	ff d0		 call	 eax
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A, 0 ; g_pFontBuffer11
$LN2@EndFont11:
; Line 233
  00033	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_FontBufferBytes11@@3IA, 0 ; g_FontBufferBytes11
; Line 234
  0003d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pFont11@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pFont11
  00044	74 26		 je	 SHORT $LN3@EndFont11
  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pFont11@@3PAUID3D11ShaderResourceView@@A ; g_pFont11
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	8b f4		 mov	 esi, esp
  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pFont11@@3PAUID3D11ShaderResourceView@@A ; g_pFont11
  00055	50		 push	 eax
  00056	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00059	ff d1		 call	 ecx
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pFont11@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pFont11
$LN3@EndFont11:
; Line 235
  0006c	5e		 pop	 esi
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?EndFont11@@YAXXZ ENDP					; EndFont11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_str$ = -532						; size = 520
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3d11Device$ = 8					; size = 4
_pInputLayout$ = 12					; size = 4
?InitFont11@@YAJPAUID3D11Device@@PAUID3D11InputLayout@@@Z PROC ; InitFont11
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 217
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 02 00
	00		 sub	 esp, 536		; 00000218H
  00009	57		 push	 edi
  0000a	8d bd e8 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-536]
  00010	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00021	33 c5		 xor	 eax, ebp
  00023	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 218
  00026	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 220
  0002d	68 00 00 00 00	 push	 OFFSET $SG160265
  00032	68 04 01 00 00	 push	 260			; 00000104H
  00037	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?DXUTFindDXSDKMediaFileCch@@YGJPA_WHPB_W@Z ; DXUTFindDXSDKMediaFileCch
  00043	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  00046	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004a	7d 1c		 jge	 SHORT $LN2@InitFont11
  0004c	6a 01		 push	 1
  0004e	68 00 00 00 00	 push	 OFFSET $SG160269
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00056	51		 push	 ecx
  00057	68 dc 00 00 00	 push	 220			; 000000dcH
  0005c	68 00 00 00 00	 push	 OFFSET $SG160270
  00061	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00066	eb 4f		 jmp	 SHORT $LN3@InitFont11
$LN2@InitFont11:
; Line 222
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	68 00 00 00 00	 push	 OFFSET ?g_pFont11@@3PAUID3D11ShaderResourceView@@A ; g_pFont11
  00071	6a 00		 push	 0
  00073	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _str$[ebp]
  00079	52		 push	 edx
  0007a	8b 45 08	 mov	 eax, DWORD PTR _pd3d11Device$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?CreateDDSTextureFromFile@DirectX@@YAJPAUID3D11Device@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@IPAW4DDS_ALPHA_MODE@1@@Z ; DirectX::CreateDDSTextureFromFile
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  00089	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008d	7d 1c		 jge	 SHORT $LN1@InitFont11
  0008f	6a 01		 push	 1
  00091	68 00 00 00 00	 push	 OFFSET $SG160274
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00099	51		 push	 ecx
  0009a	68 de 00 00 00	 push	 222			; 000000deH
  0009f	68 00 00 00 00	 push	 OFFSET $SG160275
  000a4	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000a9	eb 0c		 jmp	 SHORT $LN3@InitFont11
$LN1@InitFont11:
; Line 224
  000ab	8b 55 0c	 mov	 edx, DWORD PTR _pInputLayout$[ebp]
  000ae	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_pInputLayout11@@3PAUID3D11InputLayout@@A, edx ; g_pInputLayout11
; Line 225
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN3@InitFont11:
; Line 226
  000b7	52		 push	 edx
  000b8	8b cd		 mov	 ecx, ebp
  000ba	50		 push	 eax
  000bb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@InitFont11
  000c1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c6	58		 pop	 eax
  000c7	5a		 pop	 edx
  000c8	5f		 pop	 edi
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	81 c4 18 02 00
	00		 add	 esp, 536		; 00000218H
  000d9	3b ec		 cmp	 ebp, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
$LN7@InitFont11:
  000e4	01 00 00 00	 DD	 1
  000e8	00 00 00 00	 DD	 $LN6@InitFont11
$LN6@InitFont11:
  000ec	ec fd ff ff	 DD	 -532			; fffffdecH
  000f0	08 02 00 00	 DD	 520			; 00000208H
  000f4	00 00 00 00	 DD	 $LN5@InitFont11
$LN5@InitFont11:
  000f8	73		 DB	 115			; 00000073H
  000f9	74		 DB	 116			; 00000074H
  000fa	72		 DB	 114			; 00000072H
  000fb	00		 DB	 0
?InitFont11@@YAJPAUID3D11Device@@PAUID3D11InputLayout@@@Z ENDP ; InitFont11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fg_FontVertices@@YAXXZ
text$yd	SEGMENT
??__Fg_FontVertices@@YAXXZ PROC				; `dynamic atexit destructor for 'g_FontVertices'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00008	e8 00 00 00 00	 call	 ??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::~vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__Fg_FontVertices@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_FontVertices''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_FontVertices@@YAXXZ
text$di	SEGMENT
??__Eg_FontVertices@@YAXXZ PROC				; `dynamic initializer for 'g_FontVertices'', COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 211
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00008	e8 00 00 00 00	 call	 ??0?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
  0000d	68 00 00 00 00	 push	 OFFSET ??__Fg_FontVertices@@YAXXZ ; `dynamic atexit destructor for 'g_FontVertices''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__Eg_FontVertices@@YAXXZ ENDP				; `dynamic initializer for 'g_FontVertices''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RectHeight@@YAHAAUtagRECT@@@Z
_TEXT	SEGMENT
_rc$ = 8						; size = 4
?RectHeight@@YAHAAUtagRECT@@@Z PROC			; RectHeight, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 200
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 201
  00003	8b 45 08	 mov	 eax, DWORD PTR _rc$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _rc$[ebp]
  00009	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
; Line 202
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?RectHeight@@YAHAAUtagRECT@@@Z ENDP			; RectHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RectWidth@@YAHAAUtagRECT@@@Z
_TEXT	SEGMENT
_rc$ = 8						; size = 4
?RectWidth@@YAHAAUtagRECT@@@Z PROC			; RectWidth, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 196
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 197
  00003	8b 45 08	 mov	 eax, DWORD PTR _rc$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _rc$[ebp]
  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	2b 01		 sub	 eax, DWORD PTR [ecx]
; Line 198
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?RectWidth@@YAHAAUtagRECT@@@Z ENDP			; RectWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z
_TEXT	SEGMENT
tv147 = -48						; size = 8
tv144 = -40						; size = 4
tv138 = -36						; size = 8
tv135 = -28						; size = 4
tv129 = -24						; size = 8
tv94 = -16						; size = 4
tv88 = -12						; size = 8
tv85 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_c$ = 12						; size = 4
?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z PROC ; D3DCOLOR_TO_D3DCOLORVALUE, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 50
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	57		 push	 edi
  00007	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
; Line 54
  00016	8b 45 0c	 mov	 eax, DWORD PTR _c$[ebp]
  00019	c1 e8 18	 shr	 eax, 24			; 00000018H
  0001c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00021	89 45 fc	 mov	 DWORD PTR tv85[ebp], eax
  00024	f2 0f 2a 45 fc	 cvtsi2sd xmm0, DWORD PTR tv85[ebp]
  00029	8b 4d fc	 mov	 ecx, DWORD PTR tv85[ebp]
  0002c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0002f	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  00038	f2 0f 11 45 f4	 movsd	 QWORD PTR tv88[ebp], xmm0
  0003d	f2 0f 5a 45 f4	 cvtsd2ss xmm0, QWORD PTR tv88[ebp]
  00042	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  0004a	51		 push	 ecx
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	8b 55 0c	 mov	 edx, DWORD PTR _c$[ebp]
  00053	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00059	89 55 f0	 mov	 DWORD PTR tv94[ebp], edx
  0005c	f2 0f 2a 45 f0	 cvtsi2sd xmm0, DWORD PTR tv94[ebp]
  00061	8b 45 f0	 mov	 eax, DWORD PTR tv94[ebp]
  00064	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00067	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00070	f2 0f 11 45 e8	 movsd	 QWORD PTR tv129[ebp], xmm0
  00075	f2 0f 5a 45 e8	 cvtsd2ss xmm0, QWORD PTR tv129[ebp]
  0007a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  00082	51		 push	 ecx
  00083	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00088	8b 4d 0c	 mov	 ecx, DWORD PTR _c$[ebp]
  0008b	c1 e9 08	 shr	 ecx, 8
  0008e	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00094	89 4d e4	 mov	 DWORD PTR tv135[ebp], ecx
  00097	f2 0f 2a 45 e4	 cvtsi2sd xmm0, DWORD PTR tv135[ebp]
  0009c	8b 55 e4	 mov	 edx, DWORD PTR tv135[ebp]
  0009f	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  000a2	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  000ab	f2 0f 11 45 dc	 movsd	 QWORD PTR tv138[ebp], xmm0
  000b0	f2 0f 5a 45 dc	 cvtsd2ss xmm0, QWORD PTR tv138[ebp]
  000b5	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  000bd	51		 push	 ecx
  000be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c3	8b 45 0c	 mov	 eax, DWORD PTR _c$[ebp]
  000c6	c1 e8 10	 shr	 eax, 16			; 00000010H
  000c9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000ce	89 45 d8	 mov	 DWORD PTR tv144[ebp], eax
  000d1	f2 0f 2a 45 d8	 cvtsi2sd xmm0, DWORD PTR tv144[ebp]
  000d6	8b 4d d8	 mov	 ecx, DWORD PTR tv144[ebp]
  000d9	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000dc	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  000e5	f2 0f 11 45 d0	 movsd	 QWORD PTR tv147[ebp], xmm0
  000ea	f2 0f 5a 45 d0	 cvtsd2ss xmm0, QWORD PTR tv147[ebp]
  000ef	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@437f0000
  000f7	51		 push	 ecx
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00100	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@MMMM@Z ; DirectX::XMFLOAT4::XMFLOAT4
  00105	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 55
  00108	5f		 pop	 edi
  00109	83 c4 30	 add	 esp, 48			; 00000030H
  0010c	3b ec		 cmp	 ebp, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ENDP ; D3DCOLOR_TO_D3DCOLORVALUE
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_Offset$ = -124						; size = 4
_Stride$ = -112						; size = 4
_pOldTexture$ = -100					; size = 4
_MappedResource$ = -88					; size = 12
_destRegion$ = -68					; size = 24
_BufferDesc$1 = -36					; size = 24
_FontDataBytes$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3d11DeviceContext$ = 12				; size = 4
?EndText11@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z PROC ; EndText11
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 344
  00024	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00029	e8 00 00 00 00	 call	 ?empty@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBE_NXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::empty
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	74 05		 je	 SHORT $LN6@EndText11
; Line 345
  00035	e9 87 02 00 00	 jmp	 $LN7@EndText11
$LN6@EndText11:
; Line 348
  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  0003f	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  00044	6b c8 24	 imul	 ecx, eax, 36
  00047	89 4d f8	 mov	 DWORD PTR _FontDataBytes$[ebp], ecx
; Line 349
  0004a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_FontBufferBytes11@@3IA ; g_FontBufferBytes11
  00050	3b 55 f8	 cmp	 edx, DWORD PTR _FontDataBytes$[ebp]
  00053	0f 83 b0 00 00
	00		 jae	 $LN5@EndText11
; Line 351
  00059	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A, 0 ; g_pFontBuffer11
  00060	74 26		 je	 SHORT $LN4@EndText11
  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	8b f4		 mov	 esi, esp
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  00071	52		 push	 edx
  00072	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00075	ff d0		 call	 eax
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A, 0 ; g_pFontBuffer11
$LN4@EndText11:
; Line 352
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _FontDataBytes$[ebp]
  0008b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_FontBufferBytes11@@3IA, ecx ; g_FontBufferBytes11
; Line 355
  00091	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_FontBufferBytes11@@3IA ; g_FontBufferBytes11
  00097	89 55 dc	 mov	 DWORD PTR _BufferDesc$1[ebp], edx
; Line 356
  0009a	c7 45 e0 02 00
	00 00		 mov	 DWORD PTR _BufferDesc$1[ebp+4], 2
; Line 357
  000a1	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR _BufferDesc$1[ebp+8], 1
; Line 358
  000a8	c7 45 e8 00 00
	01 00		 mov	 DWORD PTR _BufferDesc$1[ebp+12], 65536 ; 00010000H
; Line 359
  000af	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _BufferDesc$1[ebp+16], 0
; Line 361
  000b6	8b f4		 mov	 esi, esp
  000b8	68 00 00 00 00	 push	 OFFSET ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  000bd	6a 00		 push	 0
  000bf	8d 45 dc	 lea	 eax, DWORD PTR _BufferDesc$1[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  000c6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c8	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  000cf	ff d1		 call	 ecx
  000d1	3b f4		 cmp	 esi, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	85 c0		 test	 eax, eax
  000da	7d 19		 jge	 SHORT $LN3@EndText11
; Line 363
  000dc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A, 0 ; g_pFontBuffer11
; Line 364
  000e6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_FontBufferBytes11@@3IA, 0 ; g_FontBufferBytes11
; Line 365
  000f0	e9 cc 01 00 00	 jmp	 $LN7@EndText11
$LN3@EndText11:
; Line 367
  000f5	68 00 00 00 00	 push	 OFFSET $SG160350
  000fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  00100	52		 push	 edx
  00101	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00106	83 c4 08	 add	 esp, 8
$LN5@EndText11:
; Line 372
  00109	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp], 0
; Line 373
  00110	8b 45 f8	 mov	 eax, DWORD PTR _FontDataBytes$[ebp]
  00113	89 45 c8	 mov	 DWORD PTR _destRegion$[ebp+12], eax
; Line 374
  00116	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+4], 0
; Line 375
  0011d	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+16], 1
; Line 376
  00124	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+8], 0
; Line 377
  0012b	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+20], 1
; Line 379
  00132	8b f4		 mov	 esi, esp
  00134	8d 4d a8	 lea	 ecx, DWORD PTR _MappedResource$[ebp]
  00137	51		 push	 ecx
  00138	6a 00		 push	 0
  0013a	6a 04		 push	 4
  0013c	6a 00		 push	 0
  0013e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  00144	52		 push	 edx
  00145	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  00148	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014a	8b 55 0c	 mov	 edx, DWORD PTR _pd3d11DeviceContext$[ebp]
  0014d	52		 push	 edx
  0014e	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00151	ff d0		 call	 eax
  00153	3b f4		 cmp	 esi, esp
  00155	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015a	85 c0		 test	 eax, eax
  0015c	75 3c		 jne	 SHORT $LN2@EndText11
; Line 381
  0015e	8b 4d f8	 mov	 ecx, DWORD PTR _FontDataBytes$[ebp]
  00161	51		 push	 ecx
  00162	6a 00		 push	 0
  00164	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00169	e8 00 00 00 00	 call	 ??A?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEAAUDXUTSpriteVertex@@I@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::operator[]
  0016e	50		 push	 eax
  0016f	8b 55 a8	 mov	 edx, DWORD PTR _MappedResource$[ebp]
  00172	52		 push	 edx
  00173	e8 00 00 00 00	 call	 _memcpy
  00178	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 382
  0017b	8b f4		 mov	 esi, esp
  0017d	6a 00		 push	 0
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  00184	50		 push	 eax
  00185	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3d11DeviceContext$[ebp]
  00188	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018a	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  0018d	50		 push	 eax
  0018e	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  00191	ff d1		 call	 ecx
  00193	3b f4		 cmp	 esi, esp
  00195	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@EndText11:
; Line 385
  0019a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _pOldTexture$[ebp], 0
; Line 386
  001a1	8b f4		 mov	 esi, esp
  001a3	8d 55 9c	 lea	 edx, DWORD PTR _pOldTexture$[ebp]
  001a6	52		 push	 edx
  001a7	6a 01		 push	 1
  001a9	6a 00		 push	 0
  001ab	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  001ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b0	8b 55 0c	 mov	 edx, DWORD PTR _pd3d11DeviceContext$[ebp]
  001b3	52		 push	 edx
  001b4	8b 81 24 01 00
	00		 mov	 eax, DWORD PTR [ecx+292]
  001ba	ff d0		 call	 eax
  001bc	3b f4		 cmp	 esi, esp
  001be	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 387
  001c3	8b f4		 mov	 esi, esp
  001c5	68 00 00 00 00	 push	 OFFSET ?g_pFont11@@3PAUID3D11ShaderResourceView@@A ; g_pFont11
  001ca	6a 01		 push	 1
  001cc	6a 00		 push	 0
  001ce	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3d11DeviceContext$[ebp]
  001d1	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d3	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  001d6	50		 push	 eax
  001d7	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001da	ff d1		 call	 ecx
  001dc	3b f4		 cmp	 esi, esp
  001de	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 390
  001e3	c7 45 90 24 00
	00 00		 mov	 DWORD PTR _Stride$[ebp], 36 ; 00000024H
; Line 391
  001ea	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _Offset$[ebp], 0
; Line 392
  001f1	8b f4		 mov	 esi, esp
  001f3	8d 55 84	 lea	 edx, DWORD PTR _Offset$[ebp]
  001f6	52		 push	 edx
  001f7	8d 45 90	 lea	 eax, DWORD PTR _Stride$[ebp]
  001fa	50		 push	 eax
  001fb	68 00 00 00 00	 push	 OFFSET ?g_pFontBuffer11@@3PAUID3D11Buffer@@A ; g_pFontBuffer11
  00200	6a 01		 push	 1
  00202	6a 00		 push	 0
  00204	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3d11DeviceContext$[ebp]
  00207	8b 11		 mov	 edx, DWORD PTR [ecx]
  00209	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  0020c	50		 push	 eax
  0020d	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00210	ff d1		 call	 ecx
  00212	3b f4		 cmp	 esi, esp
  00214	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 393
  00219	8b f4		 mov	 esi, esp
  0021b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pInputLayout11@@3PAUID3D11InputLayout@@A ; g_pInputLayout11
  00221	52		 push	 edx
  00222	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  00225	8b 08		 mov	 ecx, DWORD PTR [eax]
  00227	8b 55 0c	 mov	 edx, DWORD PTR _pd3d11DeviceContext$[ebp]
  0022a	52		 push	 edx
  0022b	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  0022e	ff d0		 call	 eax
  00230	3b f4		 cmp	 esi, esp
  00232	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 394
  00237	8b f4		 mov	 esi, esp
  00239	6a 04		 push	 4
  0023b	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3d11DeviceContext$[ebp]
  0023e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00240	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  00243	50		 push	 eax
  00244	8b 4a 60	 mov	 ecx, DWORD PTR [edx+96]
  00247	ff d1		 call	 ecx
  00249	3b f4		 cmp	 esi, esp
  0024b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 395
  00250	8b f4		 mov	 esi, esp
  00252	6a 00		 push	 0
  00254	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00259	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  0025e	50		 push	 eax
  0025f	8b 55 0c	 mov	 edx, DWORD PTR _pd3d11DeviceContext$[ebp]
  00262	8b 02		 mov	 eax, DWORD PTR [edx]
  00264	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3d11DeviceContext$[ebp]
  00267	51		 push	 ecx
  00268	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  0026b	ff d2		 call	 edx
  0026d	3b f4		 cmp	 esi, esp
  0026f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 397
  00274	8b f4		 mov	 esi, esp
  00276	8d 45 9c	 lea	 eax, DWORD PTR _pOldTexture$[ebp]
  00279	50		 push	 eax
  0027a	6a 01		 push	 1
  0027c	6a 00		 push	 0
  0027e	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3d11DeviceContext$[ebp]
  00281	8b 11		 mov	 edx, DWORD PTR [ecx]
  00283	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  00286	50		 push	 eax
  00287	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0028a	ff d1		 call	 ecx
  0028c	3b f4		 cmp	 esi, esp
  0028e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 398
  00293	83 7d 9c 00	 cmp	 DWORD PTR _pOldTexture$[ebp], 0
  00297	74 1e		 je	 SHORT $LN1@EndText11
  00299	8b 55 9c	 mov	 edx, DWORD PTR _pOldTexture$[ebp]
  0029c	8b 02		 mov	 eax, DWORD PTR [edx]
  0029e	8b f4		 mov	 esi, esp
  002a0	8b 4d 9c	 mov	 ecx, DWORD PTR _pOldTexture$[ebp]
  002a3	51		 push	 ecx
  002a4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  002a7	ff d2		 call	 edx
  002a9	3b f4		 cmp	 esi, esp
  002ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b0	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _pOldTexture$[ebp], 0
$LN1@EndText11:
; Line 400
  002b7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  002bc	e8 00 00 00 00	 call	 ?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::clear
$LN7@EndText11:
; Line 401
  002c1	52		 push	 edx
  002c2	8b cd		 mov	 ecx, ebp
  002c4	50		 push	 eax
  002c5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@EndText11
  002cb	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002d0	58		 pop	 eax
  002d1	5a		 pop	 edx
  002d2	5f		 pop	 edi
  002d3	5e		 pop	 esi
  002d4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002d7	33 cd		 xor	 ecx, ebp
  002d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002de	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  002e4	3b ec		 cmp	 ebp, esp
  002e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002eb	8b e5		 mov	 esp, ebp
  002ed	5d		 pop	 ebp
  002ee	c3		 ret	 0
  002ef	90		 npad	 1
$LN16@EndText11:
  002f0	06 00 00 00	 DD	 6
  002f4	00 00 00 00	 DD	 $LN15@EndText11
$LN15@EndText11:
  002f8	dc ff ff ff	 DD	 -36			; ffffffdcH
  002fc	18 00 00 00	 DD	 24			; 00000018H
  00300	00 00 00 00	 DD	 $LN9@EndText11
  00304	bc ff ff ff	 DD	 -68			; ffffffbcH
  00308	18 00 00 00	 DD	 24			; 00000018H
  0030c	00 00 00 00	 DD	 $LN10@EndText11
  00310	a8 ff ff ff	 DD	 -88			; ffffffa8H
  00314	0c 00 00 00	 DD	 12			; 0000000cH
  00318	00 00 00 00	 DD	 $LN11@EndText11
  0031c	9c ff ff ff	 DD	 -100			; ffffff9cH
  00320	04 00 00 00	 DD	 4
  00324	00 00 00 00	 DD	 $LN12@EndText11
  00328	90 ff ff ff	 DD	 -112			; ffffff90H
  0032c	04 00 00 00	 DD	 4
  00330	00 00 00 00	 DD	 $LN13@EndText11
  00334	84 ff ff ff	 DD	 -124			; ffffff84H
  00338	04 00 00 00	 DD	 4
  0033c	00 00 00 00	 DD	 $LN14@EndText11
$LN14@EndText11:
  00340	4f		 DB	 79			; 0000004fH
  00341	66		 DB	 102			; 00000066H
  00342	66		 DB	 102			; 00000066H
  00343	73		 DB	 115			; 00000073H
  00344	65		 DB	 101			; 00000065H
  00345	74		 DB	 116			; 00000074H
  00346	00		 DB	 0
$LN13@EndText11:
  00347	53		 DB	 83			; 00000053H
  00348	74		 DB	 116			; 00000074H
  00349	72		 DB	 114			; 00000072H
  0034a	69		 DB	 105			; 00000069H
  0034b	64		 DB	 100			; 00000064H
  0034c	65		 DB	 101			; 00000065H
  0034d	00		 DB	 0
$LN12@EndText11:
  0034e	70		 DB	 112			; 00000070H
  0034f	4f		 DB	 79			; 0000004fH
  00350	6c		 DB	 108			; 0000006cH
  00351	64		 DB	 100			; 00000064H
  00352	54		 DB	 84			; 00000054H
  00353	65		 DB	 101			; 00000065H
  00354	78		 DB	 120			; 00000078H
  00355	74		 DB	 116			; 00000074H
  00356	75		 DB	 117			; 00000075H
  00357	72		 DB	 114			; 00000072H
  00358	65		 DB	 101			; 00000065H
  00359	00		 DB	 0
$LN11@EndText11:
  0035a	4d		 DB	 77			; 0000004dH
  0035b	61		 DB	 97			; 00000061H
  0035c	70		 DB	 112			; 00000070H
  0035d	70		 DB	 112			; 00000070H
  0035e	65		 DB	 101			; 00000065H
  0035f	64		 DB	 100			; 00000064H
  00360	52		 DB	 82			; 00000052H
  00361	65		 DB	 101			; 00000065H
  00362	73		 DB	 115			; 00000073H
  00363	6f		 DB	 111			; 0000006fH
  00364	75		 DB	 117			; 00000075H
  00365	72		 DB	 114			; 00000072H
  00366	63		 DB	 99			; 00000063H
  00367	65		 DB	 101			; 00000065H
  00368	00		 DB	 0
$LN10@EndText11:
  00369	64		 DB	 100			; 00000064H
  0036a	65		 DB	 101			; 00000065H
  0036b	73		 DB	 115			; 00000073H
  0036c	74		 DB	 116			; 00000074H
  0036d	52		 DB	 82			; 00000052H
  0036e	65		 DB	 101			; 00000065H
  0036f	67		 DB	 103			; 00000067H
  00370	69		 DB	 105			; 00000069H
  00371	6f		 DB	 111			; 0000006fH
  00372	6e		 DB	 110			; 0000006eH
  00373	00		 DB	 0
$LN9@EndText11:
  00374	42		 DB	 66			; 00000042H
  00375	75		 DB	 117			; 00000075H
  00376	66		 DB	 102			; 00000066H
  00377	66		 DB	 102			; 00000066H
  00378	65		 DB	 101			; 00000065H
  00379	72		 DB	 114			; 00000072H
  0037a	44		 DB	 68			; 00000044H
  0037b	65		 DB	 101			; 00000065H
  0037c	73		 DB	 115			; 00000073H
  0037d	63		 DB	 99			; 00000063H
  0037e	00		 DB	 0
?EndText11@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ENDP ; EndText11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -256						; size = 4
tv317 = -250						; size = 2
tv314 = -248						; size = 4
tv311 = -244						; size = 4
$T1 = -240						; size = 8
$T2 = -232						; size = 12
$T3 = -220						; size = 8
$T4 = -212						; size = 12
$T5 = -200						; size = 8
$T6 = -192						; size = 12
$T7 = -180						; size = 8
$T8 = -172						; size = 12
$T9 = -160						; size = 8
$T10 = -152						; size = 12
$T11 = -140						; size = 8
$T12 = -132						; size = 12
_fTexRight$13 = -120					; size = 4
_fTexLeft$14 = -116					; size = 4
_fRectBottom$15 = -112					; size = 4
_fRectRight$16 = -108					; size = 4
_SpriteVertex$17 = -100					; size = 36
_i$18 = -60						; size = 4
_fDepth$ = -56						; size = 4
_fTexBottom$ = -52					; size = 4
_fTexTop$ = -48						; size = 4
_fOriginalLeft$ = -44					; size = 4
_fcentery$19 = -40					; size = 4
_fcenterx$20 = -36					; size = 4
_fRectBottom$21 = -32					; size = 4
_fRectRight$22 = -28					; size = 4
_NumChars$ = -24					; size = 4
_fRectTop$ = -20					; size = 4
_fRectLeft$ = -16					; size = 4
_fGlyphSizeY$ = -12					; size = 4
_fGlyphSizeX$ = -8					; size = 4
_fCharTexSizeX$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3d11DeviceContext$ = 12				; size = 4
_strText$ = 16						; size = 4
_rcScreen$ = 20						; size = 4
_vFontColor$ = 24					; size = 16
_fBBWidth$ = 40						; size = 4
_fBBHeight$ = 44					; size = 4
_bCenter$ = 48						; size = 1
?DrawText11DXUT@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WABUtagRECT@@UXMFLOAT4@DirectX@@MM_N@Z PROC ; DrawText11DXUT
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 250
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	57		 push	 edi
  0000a	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00010	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
; Line 251
  0001c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3c2c7691
  00024	f3 0f 11 45 fc	 movss	 DWORD PTR _fCharTexSizeX$[ebp], xmm0
; Line 254
  00029	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  00031	f3 0f 5e 45 28	 divss	 xmm0, DWORD PTR _fBBWidth$[ebp]
  00036	f3 0f 11 45 f8	 movss	 DWORD PTR _fGlyphSizeX$[ebp], xmm0
; Line 255
  0003b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42280000
  00043	f3 0f 5e 45 2c	 divss	 xmm0, DWORD PTR _fBBHeight$[ebp]
  00048	f3 0f 11 45 f4	 movss	 DWORD PTR _fGlyphSizeY$[ebp], xmm0
; Line 258
  0004d	8b 45 14	 mov	 eax, DWORD PTR _rcScreen$[ebp]
  00050	f3 0f 2a 00	 cvtsi2ss xmm0, DWORD PTR [eax]
  00054	f3 0f 5e 45 28	 divss	 xmm0, DWORD PTR _fBBWidth$[ebp]
  00059	f3 0f 11 45 f0	 movss	 DWORD PTR _fRectLeft$[ebp], xmm0
; Line 259
  0005e	8b 4d 14	 mov	 ecx, DWORD PTR _rcScreen$[ebp]
  00061	f3 0f 2a 41 04	 cvtsi2ss xmm0, DWORD PTR [ecx+4]
  00066	f3 0f 5e 45 2c	 divss	 xmm0, DWORD PTR _fBBHeight$[ebp]
  0006b	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00073	f3 0f 5c c8	 subss	 xmm1, xmm0
  00077	f3 0f 11 4d ec	 movss	 DWORD PTR _fRectTop$[ebp], xmm1
; Line 261
  0007c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  00081	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00089	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00091	f3 0f 11 45 f0	 movss	 DWORD PTR _fRectLeft$[ebp], xmm0
; Line 262
  00096	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  0009b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  000a3	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  000ab	f3 0f 11 45 ec	 movss	 DWORD PTR _fRectTop$[ebp], xmm0
; Line 264
  000b0	8b 55 10	 mov	 edx, DWORD PTR _strText$[ebp]
  000b3	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv311[ebp], edx
  000b9	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv311[ebp]
  000bf	83 c0 02	 add	 eax, 2
  000c2	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv314[ebp], eax
$LL11@DrawText11:
  000c8	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv311[ebp]
  000ce	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000d1	66 89 95 06 ff
	ff ff		 mov	 WORD PTR tv317[ebp], dx
  000d8	83 85 0c ff ff
	ff 02		 add	 DWORD PTR tv311[ebp], 2
  000df	66 83 bd 06 ff
	ff ff 00	 cmp	 WORD PTR tv317[ebp], 0
  000e7	75 df		 jne	 SHORT $LL11@DrawText11
  000e9	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv311[ebp]
  000ef	2b 85 08 ff ff
	ff		 sub	 eax, DWORD PTR tv314[ebp]
  000f5	d1 f8		 sar	 eax, 1
  000f7	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv79[ebp], eax
  000fd	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR tv79[ebp]
  00103	89 4d e8	 mov	 DWORD PTR _NumChars$[ebp], ecx
; Line 265
  00106	0f b6 55 30	 movzx	 edx, BYTE PTR _bCenter$[ebp]
  0010a	85 d2		 test	 edx, edx
  0010c	0f 84 cf 00 00
	00		 je	 $LN8@DrawText11
; Line 266
  00112	8b 45 14	 mov	 eax, DWORD PTR _rcScreen$[ebp]
  00115	f3 0f 2a 40 08	 cvtsi2ss xmm0, DWORD PTR [eax+8]
  0011a	f3 0f 5e 45 28	 divss	 xmm0, DWORD PTR _fBBWidth$[ebp]
  0011f	f3 0f 11 45 e4	 movss	 DWORD PTR _fRectRight$22[ebp], xmm0
; Line 267
  00124	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fRectRight$22[ebp]
  00129	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00131	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00139	f3 0f 11 45 e4	 movss	 DWORD PTR _fRectRight$22[ebp], xmm0
; Line 268
  0013e	8b 4d 14	 mov	 ecx, DWORD PTR _rcScreen$[ebp]
  00141	f3 0f 2a 41 0c	 cvtsi2ss xmm0, DWORD PTR [ecx+12]
  00146	f3 0f 5e 45 2c	 divss	 xmm0, DWORD PTR _fBBHeight$[ebp]
  0014b	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00153	f3 0f 5c c8	 subss	 xmm1, xmm0
  00157	f3 0f 11 4d e0	 movss	 DWORD PTR _fRectBottom$21[ebp], xmm1
; Line 269
  0015c	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fRectBottom$21[ebp]
  00161	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00169	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00171	f3 0f 11 45 e0	 movss	 DWORD PTR _fRectBottom$21[ebp], xmm0
; Line 270
  00176	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fRectRight$22[ebp]
  0017b	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  00180	f3 0f 2a 4d e8	 cvtsi2ss xmm1, DWORD PTR _NumChars$[ebp]
  00185	f3 0f 59 4d f8	 mulss	 xmm1, DWORD PTR _fGlyphSizeX$[ebp]
  0018a	f3 0f 5c c1	 subss	 xmm0, xmm1
  0018e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00196	f3 0f 11 45 dc	 movss	 DWORD PTR _fcenterx$20[ebp], xmm0
; Line 271
  0019b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  001a0	f3 0f 5c 45 e0	 subss	 xmm0, DWORD PTR _fRectBottom$21[ebp]
  001a5	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  001ad	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _fGlyphSizeY$[ebp]
  001b2	f3 0f 5c c1	 subss	 xmm0, xmm1
  001b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  001be	f3 0f 11 45 d8	 movss	 DWORD PTR _fcentery$19[ebp], xmm0
; Line 272
  001c3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  001c8	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _fcenterx$20[ebp]
  001cd	f3 0f 11 45 f0	 movss	 DWORD PTR _fRectLeft$[ebp], xmm0
; Line 273
  001d2	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  001d7	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _fcentery$19[ebp]
  001dc	f3 0f 11 45 ec	 movss	 DWORD PTR _fRectTop$[ebp], xmm0
$LN8@DrawText11:
; Line 275
  001e1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  001e6	f3 0f 11 45 d4	 movss	 DWORD PTR _fOriginalLeft$[ebp], xmm0
; Line 276
  001eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  001f3	f3 0f 11 45 d0	 movss	 DWORD PTR _fTexTop$[ebp], xmm0
; Line 277
  001f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00200	f3 0f 11 45 cc	 movss	 DWORD PTR _fTexBottom$[ebp], xmm0
; Line 279
  00205	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0020d	f3 0f 11 45 c8	 movss	 DWORD PTR _fDepth$[ebp], xmm0
; Line 280
  00212	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$18[ebp], 0
  00219	eb 09		 jmp	 SHORT $LN7@DrawText11
$LN6@DrawText11:
  0021b	8b 55 c4	 mov	 edx, DWORD PTR _i$18[ebp]
  0021e	83 c2 01	 add	 edx, 1
  00221	89 55 c4	 mov	 DWORD PTR _i$18[ebp], edx
$LN7@DrawText11:
  00224	8b 45 c4	 mov	 eax, DWORD PTR _i$18[ebp]
  00227	3b 45 e8	 cmp	 eax, DWORD PTR _NumChars$[ebp]
  0022a	0f 8d 86 03 00
	00		 jge	 $LN5@DrawText11
; Line 282
  00230	8b 4d c4	 mov	 ecx, DWORD PTR _i$18[ebp]
  00233	8b 55 10	 mov	 edx, DWORD PTR _strText$[ebp]
  00236	0f b7 04 4a	 movzx	 eax, WORD PTR [edx+ecx*2]
  0023a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0023d	75 1d		 jne	 SHORT $LN4@DrawText11
; Line 284
  0023f	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _fOriginalLeft$[ebp]
  00244	f3 0f 11 45 f0	 movss	 DWORD PTR _fRectLeft$[ebp], xmm0
; Line 285
  00249	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  0024e	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _fGlyphSizeY$[ebp]
  00253	f3 0f 11 45 ec	 movss	 DWORD PTR _fRectTop$[ebp], xmm0
; Line 287
  00258	eb c1		 jmp	 SHORT $LN6@DrawText11
  0025a	eb 20		 jmp	 SHORT $LN2@DrawText11
$LN4@DrawText11:
; Line 289
  0025c	8b 4d c4	 mov	 ecx, DWORD PTR _i$18[ebp]
  0025f	8b 55 10	 mov	 edx, DWORD PTR _strText$[ebp]
  00262	0f b7 04 4a	 movzx	 eax, WORD PTR [edx+ecx*2]
  00266	83 f8 20	 cmp	 eax, 32			; 00000020H
  00269	7c 0f		 jl	 SHORT $LN1@DrawText11
  0026b	8b 4d c4	 mov	 ecx, DWORD PTR _i$18[ebp]
  0026e	8b 55 10	 mov	 edx, DWORD PTR _strText$[ebp]
  00271	0f b7 04 4a	 movzx	 eax, WORD PTR [edx+ecx*2]
  00275	83 f8 7e	 cmp	 eax, 126		; 0000007eH
  00278	7e 02		 jle	 SHORT $LN2@DrawText11
$LN1@DrawText11:
; Line 291
  0027a	eb 9f		 jmp	 SHORT $LN6@DrawText11
$LN2@DrawText11:
; Line 295
  0027c	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  0027f	e8 00 00 00 00	 call	 ??0DXUTSpriteVertex@@QAE@XZ
; Line 296
  00284	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  00289	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _fGlyphSizeX$[ebp]
  0028e	f3 0f 11 45 94	 movss	 DWORD PTR _fRectRight$16[ebp], xmm0
; Line 297
  00293	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  00298	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _fGlyphSizeY$[ebp]
  0029d	f3 0f 11 45 90	 movss	 DWORD PTR _fRectBottom$15[ebp], xmm0
; Line 298
  002a2	8b 4d c4	 mov	 ecx, DWORD PTR _i$18[ebp]
  002a5	8b 55 10	 mov	 edx, DWORD PTR _strText$[ebp]
  002a8	0f b7 04 4a	 movzx	 eax, WORD PTR [edx+ecx*2]
  002ac	83 e8 20	 sub	 eax, 32			; 00000020H
  002af	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  002b3	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _fCharTexSizeX$[ebp]
  002b8	f3 0f 11 45 8c	 movss	 DWORD PTR _fTexLeft$14[ebp], xmm0
; Line 299
  002bd	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _fTexLeft$14[ebp]
  002c2	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _fCharTexSizeX$[ebp]
  002c7	f3 0f 11 45 88	 movss	 DWORD PTR _fTexRight$13[ebp], xmm0
; Line 302
  002cc	51		 push	 ecx
  002cd	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  002d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d7	51		 push	 ecx
  002d8	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  002dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e2	51		 push	 ecx
  002e3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  002e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ed	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  002f3	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  002f8	50		 push	 eax
  002f9	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  002fc	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 303
  00301	51		 push	 ecx
  00302	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _fTexTop$[ebp]
  00307	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030c	51		 push	 ecx
  0030d	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _fTexLeft$14[ebp]
  00312	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00317	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  0031d	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  00322	50		 push	 eax
  00323	8d 4d b8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+28]
  00326	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 304
  0032b	8d 4d 18	 lea	 ecx, DWORD PTR _vFontColor$[ebp]
  0032e	51		 push	 ecx
  0032f	8d 4d a8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+12]
  00332	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 305
  00337	8d 55 9c	 lea	 edx, DWORD PTR _SpriteVertex$17[ebp]
  0033a	52		 push	 edx
  0033b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00340	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 307
  00345	51		 push	 ecx
  00346	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  0034b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00350	51		 push	 ecx
  00351	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  00356	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035b	51		 push	 ecx
  0035c	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fRectRight$16[ebp]
  00361	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00366	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  0036c	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00371	50		 push	 eax
  00372	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  00375	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 308
  0037a	51		 push	 ecx
  0037b	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _fTexTop$[ebp]
  00380	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00385	51		 push	 ecx
  00386	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _fTexRight$13[ebp]
  0038b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00390	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00396	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  0039b	50		 push	 eax
  0039c	8d 4d b8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+28]
  0039f	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 309
  003a4	8d 45 18	 lea	 eax, DWORD PTR _vFontColor$[ebp]
  003a7	50		 push	 eax
  003a8	8d 4d a8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+12]
  003ab	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 310
  003b0	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  003b3	51		 push	 ecx
  003b4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  003b9	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 312
  003be	51		 push	 ecx
  003bf	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  003c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c9	51		 push	 ecx
  003ca	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _fRectBottom$15[ebp]
  003cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d4	51		 push	 ecx
  003d5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  003da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003df	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  003e5	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  003ea	50		 push	 eax
  003eb	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  003ee	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 313
  003f3	51		 push	 ecx
  003f4	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _fTexBottom$[ebp]
  003f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003fe	51		 push	 ecx
  003ff	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _fTexLeft$14[ebp]
  00404	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00409	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0040f	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  00414	50		 push	 eax
  00415	8d 4d b8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+28]
  00418	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 314
  0041d	8d 55 18	 lea	 edx, DWORD PTR _vFontColor$[ebp]
  00420	52		 push	 edx
  00421	8d 4d a8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+12]
  00424	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 315
  00429	8d 45 9c	 lea	 eax, DWORD PTR _SpriteVertex$17[ebp]
  0042c	50		 push	 eax
  0042d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00432	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 318
  00437	51		 push	 ecx
  00438	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  0043d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00442	51		 push	 ecx
  00443	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  00448	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044d	51		 push	 ecx
  0044e	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fRectRight$16[ebp]
  00453	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00458	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0045e	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00463	50		 push	 eax
  00464	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  00467	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 319
  0046c	51		 push	 ecx
  0046d	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _fTexTop$[ebp]
  00472	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00477	51		 push	 ecx
  00478	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _fTexRight$13[ebp]
  0047d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00482	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00488	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  0048d	50		 push	 eax
  0048e	8d 4d b8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+28]
  00491	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 320
  00496	8d 4d 18	 lea	 ecx, DWORD PTR _vFontColor$[ebp]
  00499	51		 push	 ecx
  0049a	8d 4d a8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+12]
  0049d	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 321
  004a2	8d 55 9c	 lea	 edx, DWORD PTR _SpriteVertex$17[ebp]
  004a5	52		 push	 edx
  004a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  004ab	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 323
  004b0	51		 push	 ecx
  004b1	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  004b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004bb	51		 push	 ecx
  004bc	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _fRectBottom$15[ebp]
  004c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c6	51		 push	 ecx
  004c7	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fRectRight$16[ebp]
  004cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d1	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  004d7	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  004dc	50		 push	 eax
  004dd	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  004e0	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 324
  004e5	51		 push	 ecx
  004e6	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _fTexBottom$[ebp]
  004eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f0	51		 push	 ecx
  004f1	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _fTexRight$13[ebp]
  004f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fb	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00501	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  00506	50		 push	 eax
  00507	8d 4d b8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+28]
  0050a	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 325
  0050f	8d 45 18	 lea	 eax, DWORD PTR _vFontColor$[ebp]
  00512	50		 push	 eax
  00513	8d 4d a8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+12]
  00516	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 326
  0051b	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  0051e	51		 push	 ecx
  0051f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00524	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 328
  00529	51		 push	 ecx
  0052a	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  0052f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00534	51		 push	 ecx
  00535	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _fRectBottom$15[ebp]
  0053a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053f	51		 push	 ecx
  00540	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  00545	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054a	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00550	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00555	50		 push	 eax
  00556	8d 4d 9c	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp]
  00559	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 329
  0055e	51		 push	 ecx
  0055f	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _fTexBottom$[ebp]
  00564	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00569	51		 push	 ecx
  0056a	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _fTexLeft$14[ebp]
  0056f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00574	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0057a	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  0057f	50		 push	 eax
  00580	8d 4d b8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+28]
  00583	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 330
  00588	8d 55 18	 lea	 edx, DWORD PTR _vFontColor$[ebp]
  0058b	52		 push	 edx
  0058c	8d 4d a8	 lea	 ecx, DWORD PTR _SpriteVertex$17[ebp+12]
  0058f	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 331
  00594	8d 45 9c	 lea	 eax, DWORD PTR _SpriteVertex$17[ebp]
  00597	50		 push	 eax
  00598	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  0059d	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 333
  005a2	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  005a7	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _fGlyphSizeX$[ebp]
  005ac	f3 0f 11 45 f0	 movss	 DWORD PTR _fRectLeft$[ebp], xmm0
; Line 335
  005b1	e9 65 fc ff ff	 jmp	 $LN6@DrawText11
$LN5@DrawText11:
; Line 338
  005b6	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3d11DeviceContext$[ebp]
  005b9	51		 push	 ecx
  005ba	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  005bd	52		 push	 edx
  005be	e8 00 00 00 00	 call	 ?EndText11@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ; EndText11
  005c3	83 c4 08	 add	 esp, 8
; Line 339
  005c6	52		 push	 edx
  005c7	8b cd		 mov	 ecx, ebp
  005c9	50		 push	 eax
  005ca	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@DrawText11
  005d0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  005d5	58		 pop	 eax
  005d6	5a		 pop	 edx
  005d7	5f		 pop	 edi
  005d8	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  005de	3b ec		 cmp	 ebp, esp
  005e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005e5	8b e5		 mov	 esp, ebp
  005e7	5d		 pop	 ebp
  005e8	c3		 ret	 0
  005e9	8d 49 00	 npad	 3
$LN14@DrawText11:
  005ec	01 00 00 00	 DD	 1
  005f0	00 00 00 00	 DD	 $LN13@DrawText11
$LN13@DrawText11:
  005f4	9c ff ff ff	 DD	 -100			; ffffff9cH
  005f8	24 00 00 00	 DD	 36			; 00000024H
  005fc	00 00 00 00	 DD	 $LN12@DrawText11
$LN12@DrawText11:
  00600	53		 DB	 83			; 00000053H
  00601	70		 DB	 112			; 00000070H
  00602	72		 DB	 114			; 00000072H
  00603	69		 DB	 105			; 00000069H
  00604	74		 DB	 116			; 00000074H
  00605	65		 DB	 101			; 00000065H
  00606	56		 DB	 86			; 00000056H
  00607	65		 DB	 101			; 00000065H
  00608	72		 DB	 114			; 00000072H
  00609	74		 DB	 116			; 00000074H
  0060a	65		 DB	 101			; 00000065H
  0060b	78		 DB	 120			; 00000078H
  0060c	00		 DB	 0
?DrawText11DXUT@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WABUtagRECT@@UXMFLOAT4@DirectX@@MM_N@Z ENDP ; DrawText11DXUT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?BeginText11@@YAXXZ PROC				; BeginText11
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 241
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_FontVertices@@3V?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@A ; g_FontVertices
  00008	e8 00 00 00 00	 call	 ?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::clear
; Line 242
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?BeginText11@@YAXXZ ENDP				; BeginText11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTEditBox@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTEditBox@@UAEPAXI@Z PROC			; CDXUTEditBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTEditBox@@UAE@XZ	; CDXUTEditBox::~CDXUTEditBox
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTEditBox@@UAEPAXI@Z ENDP			; CDXUTEditBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv87 = -28						; size = 4
tv148 = -22						; size = 2
tv145 = -20						; size = 4
tv142 = -16						; size = 4
_pwszText$1 = -12					; size = 4
_handle$2 = -8						; size = 4
_this$ = -4						; size = 4
?PasteFromClipboard@CDXUTEditBox@@IAEXXZ PROC		; CDXUTEditBox::PasteFromClipboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5661
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00021	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5662
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?DeleteSelectionText@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::DeleteSelectionText
; Line 5664
  0002c	8b f4		 mov	 esi, esp
  0002e	6a 00		 push	 0
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OpenClipboard@4
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	85 c0		 test	 eax, eax
  0003f	0f 84 d8 00 00
	00		 je	 $LN5@PasteFromC
; Line 5666
  00045	8b f4		 mov	 esi, esp
  00047	6a 0d		 push	 13			; 0000000dH
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClipboardData@4
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	89 45 f8	 mov	 DWORD PTR _handle$2[ebp], eax
; Line 5667
  00059	83 7d f8 00	 cmp	 DWORD PTR _handle$2[ebp], 0
  0005d	0f 84 ab 00 00
	00		 je	 $LN3@PasteFromC
; Line 5671
  00063	8b f4		 mov	 esi, esp
  00065	8b 45 f8	 mov	 eax, DWORD PTR _handle$2[ebp]
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalLock@4
  0006f	3b f4		 cmp	 esi, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	89 45 f4	 mov	 DWORD PTR _pwszText$1[ebp], eax
; Line 5672
  00079	83 7d f4 00	 cmp	 DWORD PTR _pwszText$1[ebp], 0
  0007d	0f 84 8b 00 00
	00		 je	 $LN3@PasteFromC
; Line 5675
  00083	6a ff		 push	 -1
  00085	8b 4d f4	 mov	 ecx, DWORD PTR _pwszText$1[ebp]
  00088	51		 push	 ecx
  00089	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00092	50		 push	 eax
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	83 c1 54	 add	 ecx, 84			; 00000054H
  00099	e8 00 00 00 00	 call	 ?InsertString@CUniBuffer@@QAE_NHPB_WH@Z ; CUniBuffer::InsertString
  0009e	0f b6 c8	 movzx	 ecx, al
  000a1	85 c9		 test	 ecx, ecx
  000a3	74 44		 je	 SHORT $LN1@PasteFromC
; Line 5676
  000a5	8b 55 f4	 mov	 edx, DWORD PTR _pwszText$1[ebp]
  000a8	89 55 f0	 mov	 DWORD PTR tv142[ebp], edx
  000ab	8b 45 f0	 mov	 eax, DWORD PTR tv142[ebp]
  000ae	83 c0 02	 add	 eax, 2
  000b1	89 45 ec	 mov	 DWORD PTR tv145[ebp], eax
$LL7@PasteFromC:
  000b4	8b 4d f0	 mov	 ecx, DWORD PTR tv142[ebp]
  000b7	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000ba	66 89 55 ea	 mov	 WORD PTR tv148[ebp], dx
  000be	83 45 f0 02	 add	 DWORD PTR tv142[ebp], 2
  000c2	66 83 7d ea 00	 cmp	 WORD PTR tv148[ebp], 0
  000c7	75 eb		 jne	 SHORT $LL7@PasteFromC
  000c9	8b 45 f0	 mov	 eax, DWORD PTR tv142[ebp]
  000cc	2b 45 ec	 sub	 eax, DWORD PTR tv145[ebp]
  000cf	d1 f8		 sar	 eax, 1
  000d1	89 45 e4	 mov	 DWORD PTR tv87[ebp], eax
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  000dd	03 55 e4	 add	 edx, DWORD PTR tv87[ebp]
  000e0	52		 push	 edx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
$LN1@PasteFromC:
; Line 5677
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  000f5	89 90 2c 01 00
	00		 mov	 DWORD PTR [eax+300], edx
; Line 5678
  000fb	8b f4		 mov	 esi, esp
  000fd	8b 45 f8	 mov	 eax, DWORD PTR _handle$2[ebp]
  00100	50		 push	 eax
  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalUnlock@4
  00107	3b f4		 cmp	 esi, esp
  00109	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@PasteFromC:
; Line 5681
  0010e	8b f4		 mov	 esi, esp
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseClipboard@0
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@PasteFromC:
; Line 5683
  0011d	5e		 pop	 esi
  0011e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00121	3b ec		 cmp	 ebp, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c3		 ret	 0
?PasteFromClipboard@CDXUTEditBox@@IAEXXZ ENDP		; CDXUTEditBox::PasteFromClipboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nLast$1 = -20						; size = 4
_nFirst$2 = -16						; size = 4
_pwszText$3 = -12					; size = 4
_hBlock$4 = -8						; size = 4
_this$ = -4						; size = 4
?CopyToClipboard@CDXUTEditBox@@IAEXXZ PROC		; CDXUTEditBox::CopyToClipboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5629
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5631
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 90 24 01 00
	00		 mov	 edx, DWORD PTR [eax+292]
  0002a	3b 91 2c 01 00
	00		 cmp	 edx, DWORD PTR [ecx+300]
  00030	0f 84 46 01 00
	00		 je	 $LN6@CopyToClip
  00036	8b f4		 mov	 esi, esp
  00038	6a 00		 push	 0
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OpenClipboard@4
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	85 c0		 test	 eax, eax
  00049	0f 84 2d 01 00
	00		 je	 $LN6@CopyToClip
; Line 5633
  0004f	8b f4		 mov	 esi, esp
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EmptyClipboard@0
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5635
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 54	 add	 ecx, 84			; 00000054H
  00064	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  00069	8d 44 00 02	 lea	 eax, DWORD PTR [eax+eax+2]
  0006d	8b f4		 mov	 esi, esp
  0006f	50		 push	 eax
  00070	6a 02		 push	 2
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalAlloc@8
  00078	3b f4		 cmp	 esi, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	89 45 f8	 mov	 DWORD PTR _hBlock$4[ebp], eax
; Line 5636
  00082	83 7d f8 00	 cmp	 DWORD PTR _hBlock$4[ebp], 0
  00086	0f 84 c8 00 00
	00		 je	 $LN4@CopyToClip
; Line 5638
  0008c	8b f4		 mov	 esi, esp
  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _hBlock$4[ebp]
  00091	51		 push	 ecx
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalLock@4
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	89 45 f4	 mov	 DWORD PTR _pwszText$3[ebp], eax
; Line 5639
  000a2	83 7d f4 00	 cmp	 DWORD PTR _pwszText$3[ebp], 0
  000a6	0f 84 93 00 00
	00		 je	 $LN3@CopyToClip
; Line 5641
  000ac	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000af	81 c2 2c 01 00
	00		 add	 edx, 300		; 0000012cH
  000b5	52		 push	 edx
  000b6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	05 24 01 00 00	 add	 eax, 292		; 00000124H
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  000c4	83 c4 08	 add	 esp, 8
  000c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c9	89 4d f0	 mov	 DWORD PTR _nFirst$2[ebp], ecx
; Line 5642
  000cc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cf	81 c2 2c 01 00
	00		 add	 edx, 300		; 0000012cH
  000d5	52		 push	 edx
  000d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	05 24 01 00 00	 add	 eax, 292		; 00000124H
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  000e4	83 c4 08	 add	 esp, 8
  000e7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e9	89 4d ec	 mov	 DWORD PTR _nLast$1[ebp], ecx
; Line 5643
  000ec	8b 55 ec	 mov	 edx, DWORD PTR _nLast$1[ebp]
  000ef	2b 55 f0	 sub	 edx, DWORD PTR _nFirst$2[ebp]
  000f2	85 d2		 test	 edx, edx
  000f4	7e 27		 jle	 SHORT $LN2@CopyToClip
; Line 5645
  000f6	8b 45 ec	 mov	 eax, DWORD PTR _nLast$1[ebp]
  000f9	2b 45 f0	 sub	 eax, DWORD PTR _nFirst$2[ebp]
  000fc	d1 e0		 shl	 eax, 1
  000fe	50		 push	 eax
  000ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	83 c1 54	 add	 ecx, 84			; 00000054H
  00105	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  0010a	8b 4d f0	 mov	 ecx, DWORD PTR _nFirst$2[ebp]
  0010d	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  00110	52		 push	 edx
  00111	8b 45 f4	 mov	 eax, DWORD PTR _pwszText$3[ebp]
  00114	50		 push	 eax
  00115	e8 00 00 00 00	 call	 _memcpy
  0011a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@CopyToClip:
; Line 5647
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _nLast$1[ebp]
  00120	2b 4d f0	 sub	 ecx, DWORD PTR _nFirst$2[ebp]
  00123	33 d2		 xor	 edx, edx
  00125	8b 45 f4	 mov	 eax, DWORD PTR _pwszText$3[ebp]
  00128	66 89 14 48	 mov	 WORD PTR [eax+ecx*2], dx
; Line 5648
  0012c	8b f4		 mov	 esi, esp
  0012e	8b 4d f8	 mov	 ecx, DWORD PTR _hBlock$4[ebp]
  00131	51		 push	 ecx
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalUnlock@4
  00138	3b f4		 cmp	 esi, esp
  0013a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@CopyToClip:
; Line 5650
  0013f	8b f4		 mov	 esi, esp
  00141	8b 55 f8	 mov	 edx, DWORD PTR _hBlock$4[ebp]
  00144	52		 push	 edx
  00145	6a 0d		 push	 13			; 0000000dH
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetClipboardData@8
  0014d	3b f4		 cmp	 esi, esp
  0014f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@CopyToClip:
; Line 5652
  00154	8b f4		 mov	 esi, esp
  00156	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseClipboard@0
  0015c	3b f4		 cmp	 esi, esp
  0015e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5654
  00163	83 7d f8 00	 cmp	 DWORD PTR _hBlock$4[ebp], 0
  00167	74 13		 je	 SHORT $LN6@CopyToClip
; Line 5655
  00169	8b f4		 mov	 esi, esp
  0016b	8b 45 f8	 mov	 eax, DWORD PTR _hBlock$4[ebp]
  0016e	50		 push	 eax
  0016f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalFree@4
  00175	3b f4		 cmp	 esi, esp
  00177	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@CopyToClip:
; Line 5657
  0017c	5e		 pop	 esi
  0017d	83 c4 14	 add	 esp, 20			; 00000014H
  00180	3b ec		 cmp	 ebp, esp
  00182	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
?CopyToClipboard@CDXUTEditBox@@IAEXXZ ENDP		; CDXUTEditBox::CopyToClipboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetCaretBlink@CDXUTEditBox@@IAEXXZ PROC		; CDXUTEditBox::ResetCaretBlink
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6211
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6212
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 80 20 01 00
	00 01		 mov	 BYTE PTR [eax+288], 1
; Line 6213
  00018	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?GetAbsoluteTime@CDXUTTimer@@QBENXZ ; CDXUTTimer::GetAbsoluteTime
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	dd 99 18 01 00
	00		 fstp	 QWORD PTR [ecx+280]
; Line 6214
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ENDP		; CDXUTEditBox::ResetCaretBlink
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$1 = -16						; size = 4
_nLast$ = -12						; size = 4
_nFirst$ = -8						; size = 4
_this$ = -4						; size = 4
?DeleteSelectionText@CDXUTEditBox@@IAEXXZ PROC		; CDXUTEditBox::DeleteSelectionText
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5588
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5589
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 24 01 00
	00		 add	 ecx, 292		; 00000124H
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  00032	83 c4 08	 add	 esp, 8
  00035	8b 10		 mov	 edx, DWORD PTR [eax]
  00037	89 55 f8	 mov	 DWORD PTR _nFirst$[ebp], edx
; Line 5590
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	81 c1 24 01 00
	00		 add	 ecx, 292		; 00000124H
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  00052	83 c4 08	 add	 esp, 8
  00055	8b 10		 mov	 edx, DWORD PTR [eax]
  00057	89 55 f4	 mov	 DWORD PTR _nLast$[ebp], edx
; Line 5592
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _nFirst$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5593
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00072	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax
; Line 5595
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _nFirst$[ebp]
  0007b	89 4d f0	 mov	 DWORD PTR _i$1[ebp], ecx
  0007e	eb 09		 jmp	 SHORT $LN3@DeleteSele
$LN2@DeleteSele:
  00080	8b 55 f0	 mov	 edx, DWORD PTR _i$1[ebp]
  00083	83 c2 01	 add	 edx, 1
  00086	89 55 f0	 mov	 DWORD PTR _i$1[ebp], edx
$LN3@DeleteSele:
  00089	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  0008c	3b 45 f4	 cmp	 eax, DWORD PTR _nLast$[ebp]
  0008f	7d 11		 jge	 SHORT $LN4@DeleteSele
; Line 5596
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _nFirst$[ebp]
  00094	51		 push	 ecx
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	83 c1 54	 add	 ecx, 84			; 00000054H
  0009b	e8 00 00 00 00	 call	 ?RemoveChar@CUniBuffer@@QAE_NH@Z ; CUniBuffer::RemoveChar
  000a0	eb de		 jmp	 SHORT $LN2@DeleteSele
$LN4@DeleteSele:
; Line 5597
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	3b ec		 cmp	 ebp, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
?DeleteSelectionText@CDXUTEditBox@@IAEXXZ ENDP		; CDXUTEditBox::DeleteSelectionText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nXNew1st$1 = -76					; size = 4
_nNewTrail$2 = -64					; size = 4
_nCPNew1st$3 = -52					; size = 4
_nXNewLeft$4 = -44					; size = 4
_nX2$ = -36						; size = 4
_nX$ = -24						; size = 4
_nX1st$ = -12						; size = 4
_this$ = -4						; size = 4
_nCP$ = 8						; size = 4
?PlaceCaret@CDXUTEditBox@@IAEXH@Z PROC			; CDXUTEditBox::PlaceCaret
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5506
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000c	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5507
  0001c	83 7d 08 00	 cmp	 DWORD PTR _nCP$[ebp], 0
  00020	7c 10		 jl	 SHORT $LN9@PlaceCaret
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	83 c1 54	 add	 ecx, 84			; 00000054H
  00028	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  0002d	39 45 08	 cmp	 DWORD PTR _nCP$[ebp], eax
  00030	7e 21		 jle	 SHORT $LN10@PlaceCaret
$LN9@PlaceCaret:
  00032	8b f4		 mov	 esi, esp
  00034	68 83 15 00 00	 push	 5507			; 00001583H
  00039	68 00 00 00 00	 push	 OFFSET $SG164370
  0003e	68 00 00 00 00	 push	 OFFSET $SG164371
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN10@PlaceCaret:
; Line 5508
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 55 08	 mov	 edx, DWORD PTR _nCP$[ebp]
  00059	89 91 24 01 00
	00		 mov	 DWORD PTR [ecx+292], edx
; Line 5512
  0005f	8d 45 f4	 lea	 eax, DWORD PTR _nX1st$[ebp]
  00062	50		 push	 eax
  00063	6a 00		 push	 0
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	8b 91 30 01 00
	00		 mov	 edx, DWORD PTR [ecx+304]
  0006e	52		 push	 edx
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	83 c1 54	 add	 ecx, 84			; 00000054H
  00075	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 5513
  0007a	8d 45 e8	 lea	 eax, DWORD PTR _nX$[ebp]
  0007d	50		 push	 eax
  0007e	6a 00		 push	 0
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _nCP$[ebp]
  00083	51		 push	 ecx
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	83 c1 54	 add	 ecx, 84			; 00000054H
  0008a	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 5515
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	83 c1 54	 add	 ecx, 84			; 00000054H
  00095	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  0009a	39 45 08	 cmp	 DWORD PTR _nCP$[ebp], eax
  0009d	75 08		 jne	 SHORT $LN6@PlaceCaret
; Line 5516
  0009f	8b 55 e8	 mov	 edx, DWORD PTR _nX$[ebp]
  000a2	89 55 dc	 mov	 DWORD PTR _nX2$[ebp], edx
; Line 5517
  000a5	eb 15		 jmp	 SHORT $LN5@PlaceCaret
$LN6@PlaceCaret:
; Line 5518
  000a7	8d 45 dc	 lea	 eax, DWORD PTR _nX2$[ebp]
  000aa	50		 push	 eax
  000ab	6a 01		 push	 1
  000ad	8b 4d 08	 mov	 ecx, DWORD PTR _nCP$[ebp]
  000b0	51		 push	 ecx
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	83 c1 54	 add	 ecx, 84			; 00000054H
  000b7	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
$LN5@PlaceCaret:
; Line 5522
  000bc	8b 55 e8	 mov	 edx, DWORD PTR _nX$[ebp]
  000bf	3b 55 f4	 cmp	 edx, DWORD PTR _nX1st$[ebp]
  000c2	7d 0e		 jge	 SHORT $LN4@PlaceCaret
; Line 5525
  000c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 4d 08	 mov	 ecx, DWORD PTR _nCP$[ebp]
  000ca	89 88 30 01 00
	00		 mov	 DWORD PTR [eax+304], ecx
; Line 5527
  000d0	eb 77		 jmp	 SHORT $LN7@PlaceCaret
$LN4@PlaceCaret:
; Line 5529
  000d2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d5	83 c2 70	 add	 edx, 112		; 00000070H
  000d8	52		 push	 edx
  000d9	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  000de	83 c4 04	 add	 esp, 4
  000e1	03 45 f4	 add	 eax, DWORD PTR _nX1st$[ebp]
  000e4	39 45 dc	 cmp	 DWORD PTR _nX2$[ebp], eax
  000e7	7e 60		 jle	 SHORT $LN7@PlaceCaret
; Line 5532
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	83 c0 70	 add	 eax, 112		; 00000070H
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  000f5	83 c4 04	 add	 esp, 4
  000f8	8b 4d dc	 mov	 ecx, DWORD PTR _nX2$[ebp]
  000fb	2b c8		 sub	 ecx, eax
  000fd	89 4d d4	 mov	 DWORD PTR _nXNewLeft$4[ebp], ecx
; Line 5536
  00100	8d 55 c0	 lea	 edx, DWORD PTR _nNewTrail$2[ebp]
  00103	52		 push	 edx
  00104	8d 45 cc	 lea	 eax, DWORD PTR _nCPNew1st$3[ebp]
  00107	50		 push	 eax
  00108	8b 4d d4	 mov	 ecx, DWORD PTR _nXNewLeft$4[ebp]
  0010b	51		 push	 ecx
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	83 c1 54	 add	 ecx, 84			; 00000054H
  00112	e8 00 00 00 00	 call	 ?XtoCP@CUniBuffer@@QAE_NHPAH0@Z ; CUniBuffer::XtoCP
; Line 5542
  00117	8d 55 b4	 lea	 edx, DWORD PTR _nXNew1st$1[ebp]
  0011a	52		 push	 edx
  0011b	6a 00		 push	 0
  0011d	8b 45 cc	 mov	 eax, DWORD PTR _nCPNew1st$3[ebp]
  00120	50		 push	 eax
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	83 c1 54	 add	 ecx, 84			; 00000054H
  00127	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 5543
  0012c	8b 4d b4	 mov	 ecx, DWORD PTR _nXNew1st$1[ebp]
  0012f	3b 4d d4	 cmp	 ecx, DWORD PTR _nXNewLeft$4[ebp]
  00132	7d 09		 jge	 SHORT $LN1@PlaceCaret
; Line 5544
  00134	8b 55 cc	 mov	 edx, DWORD PTR _nCPNew1st$3[ebp]
  00137	83 c2 01	 add	 edx, 1
  0013a	89 55 cc	 mov	 DWORD PTR _nCPNew1st$3[ebp], edx
$LN1@PlaceCaret:
; Line 5546
  0013d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00140	8b 4d cc	 mov	 ecx, DWORD PTR _nCPNew1st$3[ebp]
  00143	89 88 30 01 00
	00		 mov	 DWORD PTR [eax+304], ecx
$LN7@PlaceCaret:
; Line 5548
  00149	52		 push	 edx
  0014a	8b cd		 mov	 ecx, ebp
  0014c	50		 push	 eax
  0014d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@PlaceCaret
  00153	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00158	58		 pop	 eax
  00159	5a		 pop	 edx
  0015a	5f		 pop	 edi
  0015b	5e		 pop	 esi
  0015c	83 c4 50	 add	 esp, 80			; 00000050H
  0015f	3b ec		 cmp	 ebp, esp
  00161	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 04 00	 ret	 4
$LN18@PlaceCaret:
  0016c	06 00 00 00	 DD	 6
  00170	00 00 00 00	 DD	 $LN17@PlaceCaret
$LN17@PlaceCaret:
  00174	f4 ff ff ff	 DD	 -12			; fffffff4H
  00178	04 00 00 00	 DD	 4
  0017c	00 00 00 00	 DD	 $LN11@PlaceCaret
  00180	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00184	04 00 00 00	 DD	 4
  00188	00 00 00 00	 DD	 $LN12@PlaceCaret
  0018c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00190	04 00 00 00	 DD	 4
  00194	00 00 00 00	 DD	 $LN13@PlaceCaret
  00198	cc ff ff ff	 DD	 -52			; ffffffccH
  0019c	04 00 00 00	 DD	 4
  001a0	00 00 00 00	 DD	 $LN14@PlaceCaret
  001a4	c0 ff ff ff	 DD	 -64			; ffffffc0H
  001a8	04 00 00 00	 DD	 4
  001ac	00 00 00 00	 DD	 $LN15@PlaceCaret
  001b0	b4 ff ff ff	 DD	 -76			; ffffffb4H
  001b4	04 00 00 00	 DD	 4
  001b8	00 00 00 00	 DD	 $LN16@PlaceCaret
$LN16@PlaceCaret:
  001bc	6e		 DB	 110			; 0000006eH
  001bd	58		 DB	 88			; 00000058H
  001be	4e		 DB	 78			; 0000004eH
  001bf	65		 DB	 101			; 00000065H
  001c0	77		 DB	 119			; 00000077H
  001c1	31		 DB	 49			; 00000031H
  001c2	73		 DB	 115			; 00000073H
  001c3	74		 DB	 116			; 00000074H
  001c4	00		 DB	 0
$LN15@PlaceCaret:
  001c5	6e		 DB	 110			; 0000006eH
  001c6	4e		 DB	 78			; 0000004eH
  001c7	65		 DB	 101			; 00000065H
  001c8	77		 DB	 119			; 00000077H
  001c9	54		 DB	 84			; 00000054H
  001ca	72		 DB	 114			; 00000072H
  001cb	61		 DB	 97			; 00000061H
  001cc	69		 DB	 105			; 00000069H
  001cd	6c		 DB	 108			; 0000006cH
  001ce	00		 DB	 0
$LN14@PlaceCaret:
  001cf	6e		 DB	 110			; 0000006eH
  001d0	43		 DB	 67			; 00000043H
  001d1	50		 DB	 80			; 00000050H
  001d2	4e		 DB	 78			; 0000004eH
  001d3	65		 DB	 101			; 00000065H
  001d4	77		 DB	 119			; 00000077H
  001d5	31		 DB	 49			; 00000031H
  001d6	73		 DB	 115			; 00000073H
  001d7	74		 DB	 116			; 00000074H
  001d8	00		 DB	 0
$LN13@PlaceCaret:
  001d9	6e		 DB	 110			; 0000006eH
  001da	58		 DB	 88			; 00000058H
  001db	32		 DB	 50			; 00000032H
  001dc	00		 DB	 0
$LN12@PlaceCaret:
  001dd	6e		 DB	 110			; 0000006eH
  001de	58		 DB	 88			; 00000058H
  001df	00		 DB	 0
$LN11@PlaceCaret:
  001e0	6e		 DB	 110			; 0000006eH
  001e1	58		 DB	 88			; 00000058H
  001e2	31		 DB	 49			; 00000031H
  001e3	73		 DB	 115			; 00000073H
  001e4	74		 DB	 116			; 00000074H
  001e5	00		 DB	 0
?PlaceCaret@CDXUTEditBox@@IAEXH@Z ENDP			; CDXUTEditBox::PlaceCaret
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv87 = -1216						; size = 4
tv161 = -1210						; size = 2
tv158 = -1208						; size = 4
tv155 = -1204						; size = 4
tv83 = -1200						; size = 4
tv149 = -1194						; size = 2
tv146 = -1192						; size = 4
tv143 = -1188						; size = 4
$T1 = -1184						; size = 4
_i$2 = -1180						; size = 4
_wszTmp$ = -1172					; size = 128
_wszBuffer$ = -1036					; size = 1024
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pNumbers$ = 8						; size = 4
_nCount$ = 12						; size = 4
?SetTextFloatArray@CDXUTEditBox@@QAEXPBMH@Z PROC	; CDXUTEditBox::SetTextFloatArray
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6185
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 04 00
	00		 sub	 esp, 1216		; 000004c0H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 40 fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1216]
  00012	b9 30 01 00 00	 mov	 ecx, 304		; 00000130H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6189
  0002c	33 c0		 xor	 eax, eax
  0002e	66 89 85 f4 fb
	ff ff		 mov	 WORD PTR _wszBuffer$[ebp], ax
  00035	68 fe 03 00 00	 push	 1022			; 000003feH
  0003a	6a 00		 push	 0
  0003c	8d 8d f6 fb ff
	ff		 lea	 ecx, DWORD PTR _wszBuffer$[ebp+2]
  00042	51		 push	 ecx
  00043	e8 00 00 00 00	 call	 _memset
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 6192
  0004b	83 7d 08 00	 cmp	 DWORD PTR _pNumbers$[ebp], 0
  0004f	75 05		 jne	 SHORT $LN5@SetTextFlo
; Line 6193
  00051	e9 77 01 00 00	 jmp	 $LN6@SetTextFlo
$LN5@SetTextFlo:
; Line 6195
  00056	c7 85 64 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2[ebp], 0
  00060	eb 0f		 jmp	 SHORT $LN4@SetTextFlo
$LN3@SetTextFlo:
  00062	8b 95 64 fb ff
	ff		 mov	 edx, DWORD PTR _i$2[ebp]
  00068	83 c2 01	 add	 edx, 1
  0006b	89 95 64 fb ff
	ff		 mov	 DWORD PTR _i$2[ebp], edx
$LN4@SetTextFlo:
  00071	8b 85 64 fb ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  00077	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  0007a	7d 5d		 jge	 SHORT $LN2@SetTextFlo
; Line 6197
  0007c	8b 8d 64 fb ff
	ff		 mov	 ecx, DWORD PTR _i$2[ebp]
  00082	8b 55 08	 mov	 edx, DWORD PTR _pNumbers$[ebp]
  00085	f3 0f 5a 04 8a	 cvtss2sd xmm0, DWORD PTR [edx+ecx*4]
  0008a	8b f4		 mov	 esi, esp
  0008c	83 ec 08	 sub	 esp, 8
  0008f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00094	68 00 00 00 00	 push	 OFFSET $SG164662
  00099	6a 40		 push	 64			; 00000040H
  0009b	8d 85 6c fb ff
	ff		 lea	 eax, DWORD PTR _wszTmp$[ebp]
  000a1	50		 push	 eax
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__swprintf_s
  000a8	83 c4 14	 add	 esp, 20			; 00000014H
  000ab	3b f4		 cmp	 esi, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6198
  000b2	8b f4		 mov	 esi, esp
  000b4	8d 8d 6c fb ff
	ff		 lea	 ecx, DWORD PTR _wszTmp$[ebp]
  000ba	51		 push	 ecx
  000bb	68 00 02 00 00	 push	 512			; 00000200H
  000c0	8d 95 f4 fb ff
	ff		 lea	 edx, DWORD PTR _wszBuffer$[ebp]
  000c6	52		 push	 edx
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6199
  000d7	eb 89		 jmp	 SHORT $LN3@SetTextFlo
$LN2@SetTextFlo:
; Line 6202
  000d9	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  000dd	0f 8e d9 00 00
	00		 jle	 $LN1@SetTextFlo
  000e3	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _wszBuffer$[ebp]
  000e9	89 85 5c fb ff
	ff		 mov	 DWORD PTR tv143[ebp], eax
  000ef	8b 8d 5c fb ff
	ff		 mov	 ecx, DWORD PTR tv143[ebp]
  000f5	83 c1 02	 add	 ecx, 2
  000f8	89 8d 58 fb ff
	ff		 mov	 DWORD PTR tv146[ebp], ecx
$LL10@SetTextFlo:
  000fe	8b 95 5c fb ff
	ff		 mov	 edx, DWORD PTR tv143[ebp]
  00104	66 8b 02	 mov	 ax, WORD PTR [edx]
  00107	66 89 85 56 fb
	ff ff		 mov	 WORD PTR tv149[ebp], ax
  0010e	83 85 5c fb ff
	ff 02		 add	 DWORD PTR tv143[ebp], 2
  00115	66 83 bd 56 fb
	ff ff 00	 cmp	 WORD PTR tv149[ebp], 0
  0011d	75 df		 jne	 SHORT $LL10@SetTextFlo
  0011f	8b 8d 5c fb ff
	ff		 mov	 ecx, DWORD PTR tv143[ebp]
  00125	2b 8d 58 fb ff
	ff		 sub	 ecx, DWORD PTR tv146[ebp]
  0012b	d1 f9		 sar	 ecx, 1
  0012d	89 8d 50 fb ff
	ff		 mov	 DWORD PTR tv83[ebp], ecx
  00133	0f 84 83 00 00
	00		 je	 $LN1@SetTextFlo
; Line 6203
  00139	8d 95 f4 fb ff
	ff		 lea	 edx, DWORD PTR _wszBuffer$[ebp]
  0013f	89 95 4c fb ff
	ff		 mov	 DWORD PTR tv155[ebp], edx
  00145	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR tv155[ebp]
  0014b	83 c0 02	 add	 eax, 2
  0014e	89 85 48 fb ff
	ff		 mov	 DWORD PTR tv158[ebp], eax
$LL11@SetTextFlo:
  00154	8b 8d 4c fb ff
	ff		 mov	 ecx, DWORD PTR tv155[ebp]
  0015a	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0015d	66 89 95 46 fb
	ff ff		 mov	 WORD PTR tv161[ebp], dx
  00164	83 85 4c fb ff
	ff 02		 add	 DWORD PTR tv155[ebp], 2
  0016b	66 83 bd 46 fb
	ff ff 00	 cmp	 WORD PTR tv161[ebp], 0
  00173	75 df		 jne	 SHORT $LL11@SetTextFlo
  00175	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR tv155[ebp]
  0017b	2b 85 48 fb ff
	ff		 sub	 eax, DWORD PTR tv158[ebp]
  00181	d1 f8		 sar	 eax, 1
  00183	89 85 40 fb ff
	ff		 mov	 DWORD PTR tv87[ebp], eax
  00189	8b 8d 40 fb ff
	ff		 mov	 ecx, DWORD PTR tv87[ebp]
  0018f	8d 54 09 fe	 lea	 edx, DWORD PTR [ecx+ecx-2]
  00193	89 95 60 fb ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  00199	81 bd 60 fb ff
	ff 00 04 00 00	 cmp	 DWORD PTR $T1[ebp], 1024 ; 00000400H
  001a3	73 02		 jae	 SHORT $LN8@SetTextFlo
  001a5	eb 05		 jmp	 SHORT $LN9@SetTextFlo
$LN8@SetTextFlo:
  001a7	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN9@SetTextFlo:
  001ac	33 c0		 xor	 eax, eax
  001ae	8b 8d 60 fb ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  001b4	66 89 84 0d f4
	fb ff ff	 mov	 WORD PTR _wszBuffer$[ebp+ecx], ax
$LN1@SetTextFlo:
; Line 6205
  001bc	6a 00		 push	 0
  001be	8d 95 f4 fb ff
	ff		 lea	 edx, DWORD PTR _wszBuffer$[ebp]
  001c4	52		 push	 edx
  001c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	e8 00 00 00 00	 call	 ?SetText@CDXUTEditBox@@QAEXPB_W_N@Z ; CDXUTEditBox::SetText
$LN6@SetTextFlo:
; Line 6206
  001cd	52		 push	 edx
  001ce	8b cd		 mov	 ecx, ebp
  001d0	50		 push	 eax
  001d1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@SetTextFlo
  001d7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001dc	58		 pop	 eax
  001dd	5a		 pop	 edx
  001de	5f		 pop	 edi
  001df	5e		 pop	 esi
  001e0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e3	33 cd		 xor	 ecx, ebp
  001e5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ea	81 c4 c0 04 00
	00		 add	 esp, 1216		; 000004c0H
  001f0	3b ec		 cmp	 ebp, esp
  001f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 08 00	 ret	 8
  001fd	8d 49 00	 npad	 3
$LN15@SetTextFlo:
  00200	02 00 00 00	 DD	 2
  00204	00 00 00 00	 DD	 $LN14@SetTextFlo
$LN14@SetTextFlo:
  00208	f4 fb ff ff	 DD	 -1036			; fffffbf4H
  0020c	00 04 00 00	 DD	 1024			; 00000400H
  00210	00 00 00 00	 DD	 $LN12@SetTextFlo
  00214	6c fb ff ff	 DD	 -1172			; fffffb6cH
  00218	80 00 00 00	 DD	 128			; 00000080H
  0021c	00 00 00 00	 DD	 $LN13@SetTextFlo
$LN13@SetTextFlo:
  00220	77		 DB	 119			; 00000077H
  00221	73		 DB	 115			; 00000073H
  00222	7a		 DB	 122			; 0000007aH
  00223	54		 DB	 84			; 00000054H
  00224	6d		 DB	 109			; 0000006dH
  00225	70		 DB	 112			; 00000070H
  00226	00		 DB	 0
$LN12@SetTextFlo:
  00227	77		 DB	 119			; 00000077H
  00228	73		 DB	 115			; 00000073H
  00229	7a		 DB	 122			; 0000007aH
  0022a	42		 DB	 66			; 00000042H
  0022b	75		 DB	 117			; 00000075H
  0022c	66		 DB	 102			; 00000066H
  0022d	66		 DB	 102			; 00000066H
  0022e	65		 DB	 101			; 00000065H
  0022f	72		 DB	 114			; 00000072H
  00230	00		 DB	 0
?SetTextFloatArray@CDXUTEditBox@@QAEXPBMH@Z ENDP	; CDXUTEditBox::SetTextFloatArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -160						; size = 4
$T2 = -156						; size = 4
_nTokenLen$3 = -152					; size = 4
_wszToken$ = -144					; size = 120
_pEnd$ = -20						; size = 4
_pToken$ = -16						; size = 4
_nWritten$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pNumbers$ = 8						; size = 4
_nCount$ = 12						; size = 4
?ParseFloatArray@CDXUTEditBox@@QAEXPAMH@Z PROC		; CDXUTEditBox::ParseFloatArray
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6151
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 60 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-160]
  00012	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6152
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nWritten$[ebp], 0
; Line 6156
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 54	 add	 ecx, 84			; 00000054H
  00039	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  0003e	89 45 f0	 mov	 DWORD PTR _pToken$[ebp], eax
$LN8@ParseFloat:
; Line 6157
  00041	8b 45 f4	 mov	 eax, DWORD PTR _nWritten$[ebp]
  00044	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  00047	0f 8d 07 01 00
	00		 jge	 $LN7@ParseFloat
  0004d	8b 4d f0	 mov	 ecx, DWORD PTR _pToken$[ebp]
  00050	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00053	85 d2		 test	 edx, edx
  00055	0f 84 f9 00 00
	00		 je	 $LN7@ParseFloat
$LN6@ParseFloat:
; Line 6160
  0005b	8b 45 f0	 mov	 eax, DWORD PTR _pToken$[ebp]
  0005e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00061	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00064	75 0b		 jne	 SHORT $LN5@ParseFloat
; Line 6161
  00066	8b 55 f0	 mov	 edx, DWORD PTR _pToken$[ebp]
  00069	83 c2 02	 add	 edx, 2
  0006c	89 55 f0	 mov	 DWORD PTR _pToken$[ebp], edx
  0006f	eb ea		 jmp	 SHORT $LN6@ParseFloat
$LN5@ParseFloat:
; Line 6163
  00071	8b 45 f0	 mov	 eax, DWORD PTR _pToken$[ebp]
  00074	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00077	85 c9		 test	 ecx, ecx
  00079	75 05		 jne	 SHORT $LN4@ParseFloat
; Line 6164
  0007b	e9 d4 00 00 00	 jmp	 $LN7@ParseFloat
$LN4@ParseFloat:
; Line 6167
  00080	8b 55 f0	 mov	 edx, DWORD PTR _pToken$[ebp]
  00083	89 55 ec	 mov	 DWORD PTR _pEnd$[ebp], edx
$LN3@ParseFloat:
; Line 6168
  00086	8b 45 ec	 mov	 eax, DWORD PTR _pEnd$[ebp]
  00089	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0008c	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  0008f	74 21		 je	 SHORT $LN1@ParseFloat
  00091	8b 55 ec	 mov	 edx, DWORD PTR _pEnd$[ebp]
  00094	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00097	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  0009a	74 16		 je	 SHORT $LN1@ParseFloat
  0009c	8b 4d ec	 mov	 ecx, DWORD PTR _pEnd$[ebp]
  0009f	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  000a2	83 fa 30	 cmp	 edx, 48			; 00000030H
  000a5	7c 16		 jl	 SHORT $LN2@ParseFloat
  000a7	8b 45 ec	 mov	 eax, DWORD PTR _pEnd$[ebp]
  000aa	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000ad	83 f9 39	 cmp	 ecx, 57			; 00000039H
  000b0	7f 0b		 jg	 SHORT $LN2@ParseFloat
$LN1@ParseFloat:
; Line 6169
  000b2	8b 55 ec	 mov	 edx, DWORD PTR _pEnd$[ebp]
  000b5	83 c2 02	 add	 edx, 2
  000b8	89 55 ec	 mov	 DWORD PTR _pEnd$[ebp], edx
  000bb	eb c9		 jmp	 SHORT $LN3@ParseFloat
$LN2@ParseFloat:
; Line 6172
  000bd	8b 45 ec	 mov	 eax, DWORD PTR _pEnd$[ebp]
  000c0	2b 45 f0	 sub	 eax, DWORD PTR _pToken$[ebp]
  000c3	d1 f8		 sar	 eax, 1
  000c5	89 85 64 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000cb	c7 85 60 ff ff
	ff 3b 00 00 00	 mov	 DWORD PTR $T1[ebp], 59	; 0000003bH
  000d5	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000db	51		 push	 ecx
  000dc	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  000e8	83 c4 08	 add	 esp, 8
  000eb	8b 00		 mov	 eax, DWORD PTR [eax]
  000ed	89 85 68 ff ff
	ff		 mov	 DWORD PTR _nTokenLen$3[ebp], eax
; Line 6173
  000f3	8b f4		 mov	 esi, esp
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR _pToken$[ebp]
  000f8	51		 push	 ecx
  000f9	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _nTokenLen$3[ebp]
  000ff	52		 push	 edx
  00100	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _wszToken$[ebp]
  00106	50		 push	 eax
  00107	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0010d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00110	3b f4		 cmp	 esi, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6174
  00117	8b f4		 mov	 esi, esp
  00119	6a 00		 push	 0
  0011b	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _wszToken$[ebp]
  00121	51		 push	 ecx
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcstod
  00128	83 c4 08	 add	 esp, 8
  0012b	3b f4		 cmp	 esi, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00132	8b 55 08	 mov	 edx, DWORD PTR _pNumbers$[ebp]
  00135	d9 1a		 fstp	 DWORD PTR [edx]
; Line 6175
  00137	8b 45 f4	 mov	 eax, DWORD PTR _nWritten$[ebp]
  0013a	83 c0 01	 add	 eax, 1
  0013d	89 45 f4	 mov	 DWORD PTR _nWritten$[ebp], eax
; Line 6176
  00140	8b 4d 08	 mov	 ecx, DWORD PTR _pNumbers$[ebp]
  00143	83 c1 04	 add	 ecx, 4
  00146	89 4d 08	 mov	 DWORD PTR _pNumbers$[ebp], ecx
; Line 6177
  00149	8b 55 ec	 mov	 edx, DWORD PTR _pEnd$[ebp]
  0014c	89 55 f0	 mov	 DWORD PTR _pToken$[ebp], edx
; Line 6178
  0014f	e9 ed fe ff ff	 jmp	 $LN8@ParseFloat
$LN7@ParseFloat:
; Line 6179
  00154	52		 push	 edx
  00155	8b cd		 mov	 ecx, ebp
  00157	50		 push	 eax
  00158	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@ParseFloat
  0015e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00163	58		 pop	 eax
  00164	5a		 pop	 edx
  00165	5f		 pop	 edi
  00166	5e		 pop	 esi
  00167	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016a	33 cd		 xor	 ecx, ebp
  0016c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00171	81 c4 a0 00 00
	00		 add	 esp, 160		; 000000a0H
  00177	3b ec		 cmp	 ebp, esp
  00179	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017e	8b e5		 mov	 esp, ebp
  00180	5d		 pop	 ebp
  00181	c2 08 00	 ret	 8
$LN13@ParseFloat:
  00184	01 00 00 00	 DD	 1
  00188	00 00 00 00	 DD	 $LN12@ParseFloat
$LN12@ParseFloat:
  0018c	70 ff ff ff	 DD	 -144			; ffffff70H
  00190	78 00 00 00	 DD	 120			; 00000078H
  00194	00 00 00 00	 DD	 $LN11@ParseFloat
$LN11@ParseFloat:
  00198	77		 DB	 119			; 00000077H
  00199	73		 DB	 115			; 00000073H
  0019a	7a		 DB	 122			; 0000007aH
  0019b	54		 DB	 84			; 00000054H
  0019c	6f		 DB	 111			; 0000006fH
  0019d	6b		 DB	 107			; 0000006bH
  0019e	65		 DB	 101			; 00000065H
  0019f	6e		 DB	 110			; 0000006eH
  001a0	00		 DB	 0
?ParseFloatArray@CDXUTEditBox@@QAEXPAMH@Z ENDP		; CDXUTEditBox::ParseFloatArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTextColor@CDXUTEditBox@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Color$ = 8						; size = 4
?SetTextColor@CDXUTEditBox@@UAEXK@Z PROC		; CDXUTEditBox::SetTextColor, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1072
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _Color$[ebp]
  00014	89 88 34 01 00
	00		 mov	 DWORD PTR [eax+308], ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetTextColor@CDXUTEditBox@@UAEXK@Z ENDP		; CDXUTEditBox::SetTextColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearText@CDXUTEditBox@@QAEXXZ PROC			; CDXUTEditBox::ClearText
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5553
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5554
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 54	 add	 ecx, 84			; 00000054H
  00014	e8 00 00 00 00	 call	 ?Clear@CUniBuffer@@QAEXXZ ; CUniBuffer::Clear
; Line 5555
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 80 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+304], 0
; Line 5556
  00026	6a 00		 push	 0
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5557
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	c7 81 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+300], 0
; Line 5558
  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?ClearText@CDXUTEditBox@@QAEXXZ ENDP			; CDXUTEditBox::ClearText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_strDest$ = 8						; size = 4
_bufferCount$ = 12					; size = 4
?GetTextCopy@CDXUTEditBox@@QBEJPA_WI@Z PROC		; CDXUTEditBox::GetTextCopy
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5578
  0000f	83 7d 08 00	 cmp	 DWORD PTR _strDest$[ebp], 0
  00013	75 21		 jne	 SHORT $LN3@GetTextCop
  00015	8b f4		 mov	 esi, esp
  00017	68 ca 15 00 00	 push	 5578			; 000015caH
  0001c	68 00 00 00 00	 push	 OFFSET $SG164402
  00021	68 00 00 00 00	 push	 OFFSET $SG164403
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@GetTextCop:
; Line 5580
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 54	 add	 ecx, 84			; 00000054H
  0003c	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  00041	8b f4		 mov	 esi, esp
  00043	50		 push	 eax
  00044	8b 4d 0c	 mov	 ecx, DWORD PTR _bufferCount$[ebp]
  00047	51		 push	 ecx
  00048	8b 55 08	 mov	 edx, DWORD PTR _strDest$[ebp]
  0004b	52		 push	 edx
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5582
  0005c	33 c0		 xor	 eax, eax
; Line 5583
  0005e	5e		 pop	 esi
  0005f	83 c4 04	 add	 esp, 4
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 08 00	 ret	 8
?GetTextCopy@CDXUTEditBox@@QBEJPA_WI@Z ENDP		; CDXUTEditBox::GetTextCopy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -8						; size = 4
_this$ = -4						; size = 4
_wszText$ = 8						; size = 4
_bSelected$ = 12					; size = 1
?SetText@CDXUTEditBox@@QAEXPB_W_N@Z PROC		; CDXUTEditBox::SetText
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5563
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5564
  00018	83 7d 08 00	 cmp	 DWORD PTR _wszText$[ebp], 0
  0001c	75 21		 jne	 SHORT $LN3@SetText
  0001e	8b f4		 mov	 esi, esp
  00020	68 bc 15 00 00	 push	 5564			; 000015bcH
  00025	68 00 00 00 00	 push	 OFFSET $SG164394
  0002a	68 00 00 00 00	 push	 OFFSET $SG164395
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@SetText:
; Line 5566
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _wszText$[ebp]
  00042	51		 push	 ecx
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 54	 add	 ecx, 84			; 00000054H
  00049	e8 00 00 00 00	 call	 ?SetText@CUniBuffer@@QAE_NPB_W@Z ; CUniBuffer::SetText
; Line 5567
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00051	c7 82 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+304], 0
; Line 5569
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 54	 add	 ecx, 84			; 00000054H
  00061	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  00066	50		 push	 eax
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5570
  0006f	0f b6 45 0c	 movzx	 eax, BYTE PTR _bSelected$[ebp]
  00073	85 c0		 test	 eax, eax
  00075	74 09		 je	 SHORT $LN4@SetText
  00077	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
  0007e	eb 0c		 jmp	 SHORT $LN5@SetText
$LN4@SetText:
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  00089	89 55 f8	 mov	 DWORD PTR tv82[ebp], edx
$LN5@SetText:
  0008c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR tv82[ebp]
  00092	89 88 2c 01 00
	00		 mov	 DWORD PTR [eax+300], ecx
; Line 5571
  00098	5e		 pop	 esi
  00099	83 c4 08	 add	 esp, 8
  0009c	3b ec		 cmp	 ebp, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 08 00	 ret	 8
?SetText@CDXUTEditBox@@QAEXPB_W_N@Z ENDP		; CDXUTEditBox::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnFocusIn@CDXUTEditBox@@UAEXXZ PROC			; CDXUTEditBox::OnFocusIn
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5884
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5885
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?OnFocusIn@CDXUTControl@@UAEXXZ ; CDXUTControl::OnFocusIn
; Line 5887
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 5888
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?OnFocusIn@CDXUTEditBox@@UAEXXZ ENDP			; CDXUTEditBox::OnFocusIn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv303 = -140						; size = 4
tv470 = -136						; size = 8
_nRightEdgeX$1 = -124					; size = 4
_rcCaret$2 = -112					; size = 16
_nFirstToRender$3 = -92					; size = 4
_nTemp$4 = -88						; size = 4
_nSelRightX$5 = -84					; size = 4
_nSelLeftX$6 = -80					; size = 4
_rcSelection$ = -72					; size = 16
_nXFirst$ = -48						; size = 4
_e$7 = -40						; size = 4
_pElement$ = -36					; size = 4
_nCaretX$ = -28						; size = 4
_nSelStartX$ = -16					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTEditBox@@UAEXM@Z PROC			; CDXUTEditBox::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6036
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 74 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-140]
  00012	b9 23 00 00 00	 mov	 ecx, 35			; 00000023H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6037
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00033	85 c9		 test	 ecx, ecx
  00035	75 05		 jne	 SHORT $LN13@Render
; Line 6038
  00037	e9 30 04 00 00	 jmp	 $LN14@Render
$LN13@Render:
; Line 6040
  0003c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _nSelStartX$[ebp], 0
  00043	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _nCaretX$[ebp], 0
; Line 6042
  0004a	6a 00		 push	 0
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z ; CDXUTControl::GetElement
  00054	89 45 dc	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 6043
  00057	83 7d dc 00	 cmp	 DWORD PTR _pElement$[ebp], 0
  0005b	74 30		 je	 SHORT $LN12@Render
; Line 6045
  0005d	8b 55 dc	 mov	 edx, DWORD PTR _pElement$[ebp]
  00060	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00063	50		 push	 eax
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0006a	e8 00 00 00 00	 call	 ?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialog::GetFont
  0006f	50		 push	 eax
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 54	 add	 ecx, 84			; 00000054H
  00076	e8 00 00 00 00	 call	 ?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z ; CUniBuffer::SetFontNode
; Line 6046
  0007b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007e	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00084	50		 push	 eax
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
$LN12@Render:
; Line 6051
  0008d	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _e$7[ebp], 0
  00094	eb 09		 jmp	 SHORT $LN11@Render
$LN10@Render:
  00096	8b 4d d8	 mov	 ecx, DWORD PTR _e$7[ebp]
  00099	83 c1 01	 add	 ecx, 1
  0009c	89 4d d8	 mov	 DWORD PTR _e$7[ebp], ecx
$LN11@Render:
  0009f	83 7d d8 09	 cmp	 DWORD PTR _e$7[ebp], 9
  000a3	7d 6a		 jge	 SHORT $LN9@Render
; Line 6053
  000a5	8b 55 d8	 mov	 edx, DWORD PTR _e$7[ebp]
  000a8	52		 push	 edx
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	83 c1 20	 add	 ecx, 32			; 00000020H
  000af	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 45 dc	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 6054
  000b9	51		 push	 ecx
  000ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  000c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c7	51		 push	 ecx
  000c8	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	6a 00		 push	 0
  000d4	8b 4d dc	 mov	 ecx, DWORD PTR _pElement$[ebp]
  000d7	83 c1 1c	 add	 ecx, 28			; 0000001cH
  000da	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 6056
  000df	51		 push	 ecx
  000e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  000e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ed	8b 4d d8	 mov	 ecx, DWORD PTR _e$7[ebp]
  000f0	c1 e1 04	 shl	 ecx, 4
  000f3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f6	8d 84 0a 80 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+128]
  000fd	50		 push	 eax
  000fe	8b 4d dc	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00101	51		 push	 ecx
  00102	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00105	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00108	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 6057
  0010d	eb 87		 jmp	 SHORT $LN10@Render
$LN9@Render:
; Line 6063
  0010f	8d 45 d0	 lea	 eax, DWORD PTR _nXFirst$[ebp]
  00112	50		 push	 eax
  00113	6a 00		 push	 0
  00115	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	8b 91 30 01 00
	00		 mov	 edx, DWORD PTR [ecx+304]
  0011e	52		 push	 edx
  0011f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	83 c1 54	 add	 ecx, 84			; 00000054H
  00125	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 6068
  0012a	8d 45 e4	 lea	 eax, DWORD PTR _nCaretX$[ebp]
  0012d	50		 push	 eax
  0012e	6a 00		 push	 0
  00130	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  00139	52		 push	 edx
  0013a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	83 c1 54	 add	 ecx, 84			; 00000054H
  00140	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 6069
  00145	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00148	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	8b 90 24 01 00
	00		 mov	 edx, DWORD PTR [eax+292]
  00151	3b 91 2c 01 00
	00		 cmp	 edx, DWORD PTR [ecx+300]
  00157	74 1d		 je	 SHORT $LN8@Render
; Line 6070
  00159	8d 45 f0	 lea	 eax, DWORD PTR _nSelStartX$[ebp]
  0015c	50		 push	 eax
  0015d	6a 00		 push	 0
  0015f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00162	8b 91 2c 01 00
	00		 mov	 edx, DWORD PTR [ecx+300]
  00168	52		 push	 edx
  00169	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0016c	83 c1 54	 add	 ecx, 84			; 00000054H
  0016f	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 6071
  00174	eb 06		 jmp	 SHORT $LN7@Render
$LN8@Render:
; Line 6072
  00176	8b 45 e4	 mov	 eax, DWORD PTR _nCaretX$[ebp]
  00179	89 45 f0	 mov	 DWORD PTR _nSelStartX$[ebp], eax
$LN7@Render:
; Line 6078
  0017c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00182	8b 81 24 01 00
	00		 mov	 eax, DWORD PTR [ecx+292]
  00188	3b 82 2c 01 00
	00		 cmp	 eax, DWORD PTR [edx+300]
  0018e	0f 84 a5 00 00
	00		 je	 $LN6@Render
; Line 6080
  00194	8b 4d e4	 mov	 ecx, DWORD PTR _nCaretX$[ebp]
  00197	89 4d b0	 mov	 DWORD PTR _nSelLeftX$6[ebp], ecx
  0019a	8b 55 f0	 mov	 edx, DWORD PTR _nSelStartX$[ebp]
  0019d	89 55 ac	 mov	 DWORD PTR _nSelRightX$5[ebp], edx
; Line 6082
  001a0	8b 45 b0	 mov	 eax, DWORD PTR _nSelLeftX$6[ebp]
  001a3	3b 45 ac	 cmp	 eax, DWORD PTR _nSelRightX$5[ebp]
  001a6	7e 12		 jle	 SHORT $LN5@Render
; Line 6084
  001a8	8b 4d b0	 mov	 ecx, DWORD PTR _nSelLeftX$6[ebp]
  001ab	89 4d a8	 mov	 DWORD PTR _nTemp$4[ebp], ecx
  001ae	8b 55 ac	 mov	 edx, DWORD PTR _nSelRightX$5[ebp]
  001b1	89 55 b0	 mov	 DWORD PTR _nSelLeftX$6[ebp], edx
  001b4	8b 45 a8	 mov	 eax, DWORD PTR _nTemp$4[ebp]
  001b7	89 45 ac	 mov	 DWORD PTR _nSelRightX$5[ebp], eax
$LN5@Render:
; Line 6087
  001ba	8b f4		 mov	 esi, esp
  001bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bf	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  001c2	52		 push	 edx
  001c3	8b 45 ac	 mov	 eax, DWORD PTR _nSelRightX$5[ebp]
  001c6	50		 push	 eax
  001c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  001cd	52		 push	 edx
  001ce	8b 45 b0	 mov	 eax, DWORD PTR _nSelLeftX$6[ebp]
  001d1	50		 push	 eax
  001d2	8d 4d b8	 lea	 ecx, DWORD PTR _rcSelection$[ebp]
  001d5	51		 push	 ecx
  001d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  001dc	3b f4		 cmp	 esi, esp
  001de	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6088
  001e3	8b f4		 mov	 esi, esp
  001e5	6a 00		 push	 0
  001e7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001ea	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  001ed	2b 45 d0	 sub	 eax, DWORD PTR _nXFirst$[ebp]
  001f0	50		 push	 eax
  001f1	8d 4d b8	 lea	 ecx, DWORD PTR _rcSelection$[ebp]
  001f4	51		 push	 ecx
  001f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  001fb	3b f4		 cmp	 esi, esp
  001fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6089
  00202	8b f4		 mov	 esi, esp
  00204	8d 55 b8	 lea	 edx, DWORD PTR _rcSelection$[ebp]
  00207	52		 push	 edx
  00208	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0020b	83 c0 70	 add	 eax, 112		; 00000070H
  0020e	50		 push	 eax
  0020f	8d 4d b8	 lea	 ecx, DWORD PTR _rcSelection$[ebp]
  00212	51		 push	 ecx
  00213	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IntersectRect@12
  00219	3b f4		 cmp	 esi, esp
  0021b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6091
  00220	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00223	8b 82 3c 01 00
	00		 mov	 eax, DWORD PTR [edx+316]
  00229	50		 push	 eax
  0022a	8d 4d b8	 lea	 ecx, DWORD PTR _rcSelection$[ebp]
  0022d	51		 push	 ecx
  0022e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00231	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00234	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
$LN6@Render:
; Line 6098
  00239	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0023c	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00242	51		 push	 ecx
  00243	6a 00		 push	 0
  00245	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00248	83 c1 20	 add	 ecx, 32			; 00000020H
  0024b	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00250	8b 08		 mov	 ecx, DWORD PTR [eax]
  00252	83 c1 44	 add	 ecx, 68			; 00000044H
  00255	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 6099
  0025a	6a 00		 push	 0
  0025c	6a 00		 push	 0
  0025e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00261	83 c2 70	 add	 edx, 112		; 00000070H
  00264	52		 push	 edx
  00265	6a 00		 push	 0
  00267	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026a	83 c1 20	 add	 ecx, 32			; 00000020H
  0026d	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00272	8b 00		 mov	 eax, DWORD PTR [eax]
  00274	50		 push	 eax
  00275	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00278	83 c1 54	 add	 ecx, 84			; 00000054H
  0027b	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  00280	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	8b 91 30 01 00
	00		 mov	 edx, DWORD PTR [ecx+304]
  00289	8d 04 50	 lea	 eax, DWORD PTR [eax+edx*2]
  0028c	50		 push	 eax
  0028d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00290	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00293	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 6102
  00298	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0029b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0029e	8b 8a 24 01 00
	00		 mov	 ecx, DWORD PTR [edx+292]
  002a4	3b 88 2c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+300]
  002aa	0f 84 89 00 00
	00		 je	 $LN4@Render
; Line 6104
  002b0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002b3	81 c2 24 01 00
	00		 add	 edx, 292		; 00000124H
  002b9	52		 push	 edx
  002ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002bd	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  002c2	50		 push	 eax
  002c3	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  002c8	83 c4 08	 add	 esp, 8
  002cb	50		 push	 eax
  002cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002cf	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  002db	83 c4 08	 add	 esp, 8
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	89 55 a4	 mov	 DWORD PTR _nFirstToRender$3[ebp], edx
; Line 6105
  002e3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002e6	8b 88 38 01 00
	00		 mov	 ecx, DWORD PTR [eax+312]
  002ec	51		 push	 ecx
  002ed	6a 00		 push	 0
  002ef	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f2	83 c1 20	 add	 ecx, 32			; 00000020H
  002f5	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  002fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fc	83 c1 44	 add	 ecx, 68			; 00000044H
  002ff	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 6107
  00304	6a 00		 push	 0
  00306	6a 00		 push	 0
  00308	8d 55 b8	 lea	 edx, DWORD PTR _rcSelection$[ebp]
  0030b	52		 push	 edx
  0030c	6a 00		 push	 0
  0030e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00311	83 c1 20	 add	 ecx, 32			; 00000020H
  00314	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00319	8b 00		 mov	 eax, DWORD PTR [eax]
  0031b	50		 push	 eax
  0031c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0031f	83 c1 54	 add	 ecx, 84			; 00000054H
  00322	e8 00 00 00 00	 call	 ?GetBuffer@CUniBuffer@@QBEPB_WXZ ; CUniBuffer::GetBuffer
  00327	8b 4d a4	 mov	 ecx, DWORD PTR _nFirstToRender$3[ebp]
  0032a	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  0032d	52		 push	 edx
  0032e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00331	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00334	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN4@Render:
; Line 6113
  00339	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  0033e	8b c8		 mov	 ecx, eax
  00340	e8 00 00 00 00	 call	 ?GetAbsoluteTime@CDXUTTimer@@QBENXZ ; CDXUTTimer::GetAbsoluteTime
  00345	dd 9d 78 ff ff
	ff		 fstp	 QWORD PTR tv470[ebp]
  0034b	f2 0f 10 85 78
	ff ff ff	 movsd	 xmm0, QWORD PTR tv470[ebp]
  00353	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00356	f2 0f 5c 81 18
	01 00 00	 subsd	 xmm0, QWORD PTR [ecx+280]
  0035e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00361	66 0f 2f 82 10
	01 00 00	 comisd	 xmm0, QWORD PTR [edx+272]
  00369	72 48		 jb	 SHORT $LN3@Render
; Line 6115
  0036b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0036e	0f b6 88 20 01
	00 00		 movzx	 ecx, BYTE PTR [eax+288]
  00375	85 c9		 test	 ecx, ecx
  00377	75 0c		 jne	 SHORT $LN16@Render
  00379	c7 85 74 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv303[ebp], 1
  00383	eb 0a		 jmp	 SHORT $LN17@Render
$LN16@Render:
  00385	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv303[ebp], 0
$LN17@Render:
  0038f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00392	8a 85 74 ff ff
	ff		 mov	 al, BYTE PTR tv303[ebp]
  00398	88 82 20 01 00
	00		 mov	 BYTE PTR [edx+288], al
; Line 6116
  0039e	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  003a3	8b c8		 mov	 ecx, eax
  003a5	e8 00 00 00 00	 call	 ?GetAbsoluteTime@CDXUTTimer@@QBENXZ ; CDXUTTimer::GetAbsoluteTime
  003aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ad	dd 99 18 01 00
	00		 fstp	 QWORD PTR [ecx+280]
$LN3@Render:
; Line 6122
  003b3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003b6	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  003ba	85 c0		 test	 eax, eax
  003bc	0f 84 aa 00 00
	00		 je	 $LN2@Render
  003c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c5	0f b6 91 20 01
	00 00		 movzx	 edx, BYTE PTR [ecx+288]
  003cc	85 d2		 test	 edx, edx
  003ce	0f 84 98 00 00
	00		 je	 $LN2@Render
  003d4	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?s_bHideCaret@CDXUTEditBox@@1_NA ; CDXUTEditBox::s_bHideCaret
  003db	85 c0		 test	 eax, eax
  003dd	0f 85 89 00 00
	00		 jne	 $LN2@Render
; Line 6129
  003e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003e6	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  003e9	2b 55 d0	 sub	 edx, DWORD PTR _nXFirst$[ebp]
  003ec	8b 45 e4	 mov	 eax, DWORD PTR _nCaretX$[ebp]
  003ef	8d 4c 02 ff	 lea	 ecx, DWORD PTR [edx+eax-1]
  003f3	89 4d 90	 mov	 DWORD PTR _rcCaret$2[ebp], ecx
  003f6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003f9	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  003fc	89 45 94	 mov	 DWORD PTR _rcCaret$2[ebp+4], eax
  003ff	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00402	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  00405	2b 55 d0	 sub	 edx, DWORD PTR _nXFirst$[ebp]
  00408	8b 45 e4	 mov	 eax, DWORD PTR _nCaretX$[ebp]
  0040b	8d 4c 02 01	 lea	 ecx, DWORD PTR [edx+eax+1]
  0040f	89 4d 98	 mov	 DWORD PTR _rcCaret$2[ebp+8], ecx
  00412	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00415	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00418	89 45 9c	 mov	 DWORD PTR _rcCaret$2[ebp+12], eax
; Line 6133
  0041b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0041e	0f b6 91 28 01
	00 00		 movzx	 edx, BYTE PTR [ecx+296]
  00425	85 d2		 test	 edx, edx
  00427	75 2a		 jne	 SHORT $LN1@Render
; Line 6137
  00429	8d 45 84	 lea	 eax, DWORD PTR _nRightEdgeX$1[ebp]
  0042c	50		 push	 eax
  0042d	6a 01		 push	 1
  0042f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00432	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  00438	52		 push	 edx
  00439	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0043c	83 c1 54	 add	 ecx, 84			; 00000054H
  0043f	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 6138
  00444	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00447	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  0044a	2b 4d d0	 sub	 ecx, DWORD PTR _nXFirst$[ebp]
  0044d	03 4d 84	 add	 ecx, DWORD PTR _nRightEdgeX$1[ebp]
  00450	89 4d 98	 mov	 DWORD PTR _rcCaret$2[ebp+8], ecx
$LN1@Render:
; Line 6141
  00453	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00456	8b 82 40 01 00
	00		 mov	 eax, DWORD PTR [edx+320]
  0045c	50		 push	 eax
  0045d	8d 4d 90	 lea	 ecx, DWORD PTR _rcCaret$2[ebp]
  00460	51		 push	 ecx
  00461	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00464	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00467	e8 00 00 00 00	 call	 ?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ; CDXUTDialog::DrawRect
$LN2@Render:
$LN14@Render:
; Line 6143
  0046c	52		 push	 edx
  0046d	8b cd		 mov	 ecx, ebp
  0046f	50		 push	 eax
  00470	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN25@Render
  00476	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0047b	58		 pop	 eax
  0047c	5a		 pop	 edx
  0047d	5f		 pop	 edi
  0047e	5e		 pop	 esi
  0047f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00482	33 cd		 xor	 ecx, ebp
  00484	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00489	81 c4 8c 00 00
	00		 add	 esp, 140		; 0000008cH
  0048f	3b ec		 cmp	 ebp, esp
  00491	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00496	8b e5		 mov	 esp, ebp
  00498	5d		 pop	 ebp
  00499	c2 04 00	 ret	 4
$LN25@Render:
  0049c	06 00 00 00	 DD	 6
  004a0	00 00 00 00	 DD	 $LN24@Render
$LN24@Render:
  004a4	f0 ff ff ff	 DD	 -16			; fffffff0H
  004a8	04 00 00 00	 DD	 4
  004ac	00 00 00 00	 DD	 $LN18@Render
  004b0	e4 ff ff ff	 DD	 -28			; ffffffe4H
  004b4	04 00 00 00	 DD	 4
  004b8	00 00 00 00	 DD	 $LN19@Render
  004bc	d0 ff ff ff	 DD	 -48			; ffffffd0H
  004c0	04 00 00 00	 DD	 4
  004c4	00 00 00 00	 DD	 $LN20@Render
  004c8	b8 ff ff ff	 DD	 -72			; ffffffb8H
  004cc	10 00 00 00	 DD	 16			; 00000010H
  004d0	00 00 00 00	 DD	 $LN21@Render
  004d4	90 ff ff ff	 DD	 -112			; ffffff90H
  004d8	10 00 00 00	 DD	 16			; 00000010H
  004dc	00 00 00 00	 DD	 $LN22@Render
  004e0	84 ff ff ff	 DD	 -124			; ffffff84H
  004e4	04 00 00 00	 DD	 4
  004e8	00 00 00 00	 DD	 $LN23@Render
$LN23@Render:
  004ec	6e		 DB	 110			; 0000006eH
  004ed	52		 DB	 82			; 00000052H
  004ee	69		 DB	 105			; 00000069H
  004ef	67		 DB	 103			; 00000067H
  004f0	68		 DB	 104			; 00000068H
  004f1	74		 DB	 116			; 00000074H
  004f2	45		 DB	 69			; 00000045H
  004f3	64		 DB	 100			; 00000064H
  004f4	67		 DB	 103			; 00000067H
  004f5	65		 DB	 101			; 00000065H
  004f6	58		 DB	 88			; 00000058H
  004f7	00		 DB	 0
$LN22@Render:
  004f8	72		 DB	 114			; 00000072H
  004f9	63		 DB	 99			; 00000063H
  004fa	43		 DB	 67			; 00000043H
  004fb	61		 DB	 97			; 00000061H
  004fc	72		 DB	 114			; 00000072H
  004fd	65		 DB	 101			; 00000065H
  004fe	74		 DB	 116			; 00000074H
  004ff	00		 DB	 0
$LN21@Render:
  00500	72		 DB	 114			; 00000072H
  00501	63		 DB	 99			; 00000063H
  00502	53		 DB	 83			; 00000053H
  00503	65		 DB	 101			; 00000065H
  00504	6c		 DB	 108			; 0000006cH
  00505	65		 DB	 101			; 00000065H
  00506	63		 DB	 99			; 00000063H
  00507	74		 DB	 116			; 00000074H
  00508	69		 DB	 105			; 00000069H
  00509	6f		 DB	 111			; 0000006fH
  0050a	6e		 DB	 110			; 0000006eH
  0050b	00		 DB	 0
$LN20@Render:
  0050c	6e		 DB	 110			; 0000006eH
  0050d	58		 DB	 88			; 00000058H
  0050e	46		 DB	 70			; 00000046H
  0050f	69		 DB	 105			; 00000069H
  00510	72		 DB	 114			; 00000072H
  00511	73		 DB	 115			; 00000073H
  00512	74		 DB	 116			; 00000074H
  00513	00		 DB	 0
$LN19@Render:
  00514	6e		 DB	 110			; 0000006eH
  00515	43		 DB	 67			; 00000043H
  00516	61		 DB	 97			; 00000061H
  00517	72		 DB	 114			; 00000072H
  00518	65		 DB	 101			; 00000065H
  00519	74		 DB	 116			; 00000074H
  0051a	58		 DB	 88			; 00000058H
  0051b	00		 DB	 0
$LN18@Render:
  0051c	6e		 DB	 110			; 0000006eH
  0051d	53		 DB	 83			; 00000053H
  0051e	65		 DB	 101			; 00000065H
  0051f	6c		 DB	 108			; 0000006cH
  00520	53		 DB	 83			; 00000053H
  00521	74		 DB	 116			; 00000074H
  00522	61		 DB	 97			; 00000061H
  00523	72		 DB	 114			; 00000072H
  00524	74		 DB	 116			; 00000074H
  00525	58		 DB	 88			; 00000058H
  00526	00		 DB	 0
?Render@CDXUTEditBox@@UAEXM@Z ENDP			; CDXUTEditBox::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanHaveFocus@CDXUTEditBox@@UAE_NXZ
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
?CanHaveFocus@CDXUTEditBox@@UAE_NXZ PROC		; CDXUTEditBox::CanHaveFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1060
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1061
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 14		 je	 SHORT $LN3@CanHaveFoc
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	0f b6 42 40	 movzx	 eax, BYTE PTR [edx+64]
  00029	85 c0		 test	 eax, eax
  0002b	74 09		 je	 SHORT $LN3@CanHaveFoc
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@CanHaveFoc
$LN3@CanHaveFoc:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@CanHaveFoc:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 1062
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?CanHaveFocus@CDXUTEditBox@@UAE_NXZ ENDP		; CDXUTEditBox::CanHaveFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateRects@CDXUTEditBox@@UAEXXZ PROC			; CDXUTEditBox::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5602
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5603
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?UpdateRects@CDXUTControl@@MAEXXZ ; CDXUTControl::UpdateRects
; Line 5606
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 c0 44	 add	 eax, 68			; 00000044H
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 70	 add	 ecx, 112		; 00000070H
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	89 11		 mov	 DWORD PTR [ecx], edx
  00027	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0002a	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00033	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00036	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 5608
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  0003f	f7 da		 neg	 edx
  00041	8b f4		 mov	 esi, esp
  00043	52		 push	 edx
  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  0004a	f7 d9		 neg	 ecx
  0004c	51		 push	 ecx
  0004d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00050	83 c2 70	 add	 edx, 112		; 00000070H
  00053	52		 push	 edx
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5611
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	83 c0 70	 add	 eax, 112		; 00000070H
  00067	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0006c	6b d1 00	 imul	 edx, ecx, 0
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	8d 94 11 80 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+128]
  00079	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007b	89 0a		 mov	 DWORD PTR [edx], ecx
  0007d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00080	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00083	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00086	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00089	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0008c	89 42 0c	 mov	 DWORD PTR [edx+12], eax
; Line 5612
  0008f	8b f4		 mov	 esi, esp
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  00097	52		 push	 edx
  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  0009e	51		 push	 ecx
  0009f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  000ac	52		 push	 edx
  000ad	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000b2	c1 e0 00	 shl	 eax, 0
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	8d 94 01 80 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+128]
  000bf	52		 push	 edx
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5613
  000cd	8b f4		 mov	 esi, esp
  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  000d5	51		 push	 ecx
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  000dc	50		 push	 eax
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  000e3	52		 push	 edx
  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  000ea	51		 push	 ecx
  000eb	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  000f0	d1 e2		 shl	 edx, 1
  000f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	8d 8c 10 80 00
	00 00		 lea	 ecx, DWORD PTR [eax+edx+128]
  000fc	51		 push	 ecx
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5614
  0010a	8b f4		 mov	 esi, esp
  0010c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010f	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00112	50		 push	 eax
  00113	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00119	52		 push	 edx
  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00120	51		 push	 ecx
  00121	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00124	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00127	50		 push	 eax
  00128	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0012d	6b d1 03	 imul	 edx, ecx, 3
  00130	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00133	8d 8c 10 80 00
	00 00		 lea	 ecx, DWORD PTR [eax+edx+128]
  0013a	51		 push	 ecx
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00141	3b f4		 cmp	 esi, esp
  00143	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5615
  00148	8b f4		 mov	 esi, esp
  0014a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0014d	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00150	50		 push	 eax
  00151	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  00157	52		 push	 edx
  00158	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015b	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  0015e	51		 push	 ecx
  0015f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00162	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00165	50		 push	 eax
  00166	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0016b	c1 e1 02	 shl	 ecx, 2
  0016e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00171	8d 84 0a 80 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+128]
  00178	50		 push	 eax
  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0017f	3b f4		 cmp	 esi, esp
  00181	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5616
  00186	8b f4		 mov	 esi, esp
  00188	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  0018e	52		 push	 edx
  0018f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00192	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00195	51		 push	 ecx
  00196	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00199	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0019c	50		 push	 eax
  0019d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a0	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  001a3	52		 push	 edx
  001a4	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001a9	6b c8 05	 imul	 ecx, eax, 5
  001ac	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001af	8d 84 0a 80 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+128]
  001b6	50		 push	 eax
  001b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  001bd	3b f4		 cmp	 esi, esp
  001bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5617
  001c4	8b f4		 mov	 esi, esp
  001c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c9	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  001cc	52		 push	 edx
  001cd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d0	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  001d3	51		 push	 ecx
  001d4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d7	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  001da	50		 push	 eax
  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  001e1	52		 push	 edx
  001e2	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001e7	6b c8 06	 imul	 ecx, eax, 6
  001ea	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001ed	8d 84 0a 80 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+128]
  001f4	50		 push	 eax
  001f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  001fb	3b f4		 cmp	 esi, esp
  001fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5618
  00202	8b f4		 mov	 esi, esp
  00204	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00207	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  0020a	52		 push	 edx
  0020b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0020e	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  00211	51		 push	 ecx
  00212	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00215	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00218	50		 push	 eax
  00219	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021c	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  0021f	52		 push	 edx
  00220	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00225	6b c8 07	 imul	 ecx, eax, 7
  00228	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0022b	8d 84 0a 80 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+128]
  00232	50		 push	 eax
  00233	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00239	3b f4		 cmp	 esi, esp
  0023b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5619
  00240	8b f4		 mov	 esi, esp
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00245	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00248	52		 push	 edx
  00249	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0024c	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0024f	51		 push	 ecx
  00250	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00253	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00256	50		 push	 eax
  00257	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025a	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  0025d	52		 push	 edx
  0025e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00263	c1 e0 03	 shl	 eax, 3
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00269	8d 94 01 80 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+128]
  00270	52		 push	 edx
  00271	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00277	3b f4		 cmp	 esi, esp
  00279	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5622
  0027e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00281	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  00284	f7 d9		 neg	 ecx
  00286	8b f4		 mov	 esi, esp
  00288	51		 push	 ecx
  00289	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0028c	8b 42 6c	 mov	 eax, DWORD PTR [edx+108]
  0028f	f7 d8		 neg	 eax
  00291	50		 push	 eax
  00292	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00295	83 c1 70	 add	 ecx, 112		; 00000070H
  00298	51		 push	 ecx
  00299	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
  0029f	3b f4		 cmp	 esi, esp
  002a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5623
  002a6	5e		 pop	 esi
  002a7	83 c4 04	 add	 esp, 4
  002aa	3b ec		 cmp	 ebp, esp
  002ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b1	8b e5		 mov	 esp, ebp
  002b3	5d		 pop	 ebp
  002b4	c3		 ret	 0
?UpdateRects@CDXUTEditBox@@UAEXXZ ENDP			; CDXUTEditBox::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -12						; size = 4
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@CDXUTEditBox@@UAE_NIIJ@Z PROC			; CDXUTEditBox::MsgProc
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5894
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5897
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00025	85 c9		 test	 ecx, ecx
  00027	74 0b		 je	 SHORT $LN23@MsgProc
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00030	85 c0		 test	 eax, eax
  00032	75 07		 jne	 SHORT $LN24@MsgProc
$LN23@MsgProc:
; Line 5898
  00034	32 c0		 xor	 al, al
  00036	e9 9d 02 00 00	 jmp	 $LN25@MsgProc
$LN24@MsgProc:
; Line 5900
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003e	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  00041	81 7d f8 00 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 256 ; 00000100H
  00048	0f 82 88 02 00
	00		 jb	 $LN21@MsgProc
  0004e	81 7d f8 01 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 257 ; 00000101H
  00055	76 0e		 jbe	 SHORT $LN20@MsgProc
  00057	81 7d f8 02 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 258 ; 00000102H
  0005e	74 0c		 je	 SHORT $LN19@MsgProc
  00060	e9 71 02 00 00	 jmp	 $LN21@MsgProc
$LN20@MsgProc:
; Line 5906
  00065	b0 01		 mov	 al, 1
  00067	e9 6c 02 00 00	 jmp	 $LN25@MsgProc
$LN19@MsgProc:
; Line 5910
  0006c	0f b7 55 0c	 movzx	 edx, WORD PTR _wParam$[ebp]
  00070	89 55 f4	 mov	 DWORD PTR tv80[ebp], edx
  00073	8b 45 f4	 mov	 eax, DWORD PTR tv80[ebp]
  00076	83 e8 01	 sub	 eax, 1
  00079	89 45 f4	 mov	 DWORD PTR tv80[ebp], eax
  0007c	83 7d f4 1c	 cmp	 DWORD PTR tv80[ebp], 28	; 0000001cH
  00080	0f 87 61 01 00
	00		 ja	 $LN5@MsgProc
  00086	8b 4d f4	 mov	 ecx, DWORD PTR tv80[ebp]
  00089	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN27@MsgProc[ecx]
  00090	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN28@MsgProc[edx*4]
$LN16@MsgProc:
; Line 5917
  00097	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	8b 90 24 01 00
	00		 mov	 edx, DWORD PTR [eax+292]
  000a3	3b 91 2c 01 00
	00		 cmp	 edx, DWORD PTR [ecx+300]
  000a9	74 20		 je	 SHORT $LN15@MsgProc
; Line 5919
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	e8 00 00 00 00	 call	 ?DeleteSelectionText@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::DeleteSelectionText
; Line 5920
  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	50		 push	 eax
  000b7	6a 01		 push	 1
  000b9	68 02 06 00 00	 push	 1538			; 00000602H
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  000c4	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
  000c9	eb 5e		 jmp	 SHORT $LN14@MsgProc
$LN15@MsgProc:
; Line 5922
  000cb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	83 ba 24 01 00
	00 00		 cmp	 DWORD PTR [edx+292], 0
  000d5	7e 52		 jle	 SHORT $LN14@MsgProc
; Line 5925
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  000e0	83 e9 01	 sub	 ecx, 1
  000e3	51		 push	 ecx
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5926
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  000f8	89 8a 2c 01 00
	00		 mov	 DWORD PTR [edx+300], ecx
; Line 5927
  000fe	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00101	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00107	50		 push	 eax
  00108	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	83 c1 54	 add	 ecx, 84			; 00000054H
  0010e	e8 00 00 00 00	 call	 ?RemoveChar@CUniBuffer@@QAE_NH@Z ; CUniBuffer::RemoveChar
; Line 5928
  00113	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	51		 push	 ecx
  00117	6a 01		 push	 1
  00119	68 02 06 00 00	 push	 1538			; 00000602H
  0011e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00121	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00124	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN14@MsgProc:
; Line 5930
  00129	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 5931
  00131	e9 9c 01 00 00	 jmp	 $LN17@MsgProc
$LN12@MsgProc:
; Line 5937
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?CopyToClipboard@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::CopyToClipboard
; Line 5940
  0013e	0f b7 45 0c	 movzx	 eax, WORD PTR _wParam$[ebp]
  00142	83 f8 18	 cmp	 eax, 24			; 00000018H
  00145	75 1e		 jne	 SHORT $LN11@MsgProc
; Line 5942
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?DeleteSelectionText@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::DeleteSelectionText
; Line 5943
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	51		 push	 ecx
  00153	6a 01		 push	 1
  00155	68 02 06 00 00	 push	 1538			; 00000602H
  0015a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0015d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00160	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN11@MsgProc:
; Line 5946
  00165	e9 68 01 00 00	 jmp	 $LN17@MsgProc
$LN10@MsgProc:
; Line 5952
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?PasteFromClipboard@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::PasteFromClipboard
; Line 5953
  00172	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00175	50		 push	 eax
  00176	6a 01		 push	 1
  00178	68 02 06 00 00	 push	 1538			; 00000602H
  0017d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00183	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 5954
  00188	e9 45 01 00 00	 jmp	 $LN17@MsgProc
$LN9@MsgProc:
; Line 5959
  0018d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00190	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00193	8b 8a 2c 01 00
	00		 mov	 ecx, DWORD PTR [edx+300]
  00199	3b 88 24 01 00
	00		 cmp	 ecx, DWORD PTR [eax+292]
  0019f	75 21		 jne	 SHORT $LN8@MsgProc
; Line 5961
  001a1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001a4	c7 82 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+300], 0
; Line 5962
  001ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b1	83 c1 54	 add	 ecx, 84			; 00000054H
  001b4	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  001b9	50		 push	 eax
  001ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
$LN8@MsgProc:
; Line 5964
  001c2	e9 0b 01 00 00	 jmp	 $LN17@MsgProc
$LN7@MsgProc:
; Line 5968
  001c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ca	50		 push	 eax
  001cb	6a 01		 push	 1
  001cd	68 01 06 00 00	 push	 1537			; 00000601H
  001d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d5	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  001d8	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 5969
  001dd	e9 f0 00 00 00	 jmp	 $LN17@MsgProc
$LN6@MsgProc:
; Line 5995
  001e2	e9 eb 00 00 00	 jmp	 $LN17@MsgProc
$LN5@MsgProc:
; Line 6002
  001e7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ed	8b 8a 24 01 00
	00		 mov	 ecx, DWORD PTR [edx+292]
  001f3	3b 88 2c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+300]
  001f9	74 08		 je	 SHORT $LN4@MsgProc
; Line 6003
  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	e8 00 00 00 00	 call	 ?DeleteSelectionText@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::DeleteSelectionText
$LN4@MsgProc:
; Line 6008
  00203	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00206	0f b6 82 28 01
	00 00		 movzx	 eax, BYTE PTR [edx+296]
  0020d	85 c0		 test	 eax, eax
  0020f	75 5b		 jne	 SHORT $LN3@MsgProc
  00211	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00214	83 c1 54	 add	 ecx, 84			; 00000054H
  00217	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  0021c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021f	39 81 24 01 00
	00		 cmp	 DWORD PTR [ecx+292], eax
  00225	7d 45		 jge	 SHORT $LN3@MsgProc
; Line 6010
  00227	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0022a	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00230	50		 push	 eax
  00231	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00234	83 c1 54	 add	 ecx, 84			; 00000054H
  00237	e8 00 00 00 00	 call	 ??ACUniBuffer@@QAEAA_WH@Z ; CUniBuffer::operator[]
  0023c	66 8b 4d 0c	 mov	 cx, WORD PTR _wParam$[ebp]
  00240	66 89 08	 mov	 WORD PTR [eax], cx
; Line 6011
  00243	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00246	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  0024c	83 c0 01	 add	 eax, 1
  0024f	50		 push	 eax
  00250	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00253	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 6012
  00258	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0025e	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00264	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax
; Line 6014
  0026a	eb 48		 jmp	 SHORT $LN2@MsgProc
$LN3@MsgProc:
; Line 6017
  0026c	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wParam$[ebp]
  00270	51		 push	 ecx
  00271	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00274	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  0027a	50		 push	 eax
  0027b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027e	83 c1 54	 add	 ecx, 84			; 00000054H
  00281	e8 00 00 00 00	 call	 ?InsertChar@CUniBuffer@@QAE_NH_W@Z ; CUniBuffer::InsertChar
  00286	0f b6 c8	 movzx	 ecx, al
  00289	85 c9		 test	 ecx, ecx
  0028b	74 27		 je	 SHORT $LN2@MsgProc
; Line 6019
  0028d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00290	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00296	83 c0 01	 add	 eax, 1
  00299	50		 push	 eax
  0029a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029d	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 6020
  002a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002a8	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  002ae	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax
$LN2@MsgProc:
; Line 6023
  002b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b7	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 6024
  002bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002bf	51		 push	 ecx
  002c0	6a 01		 push	 1
  002c2	68 02 06 00 00	 push	 1538			; 00000602H
  002c7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002ca	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  002cd	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN17@MsgProc:
; Line 6027
  002d2	b0 01		 mov	 al, 1
  002d4	eb 02		 jmp	 SHORT $LN25@MsgProc
$LN21@MsgProc:
; Line 6030
  002d6	32 c0		 xor	 al, al
$LN25@MsgProc:
; Line 6031
  002d8	83 c4 0c	 add	 esp, 12			; 0000000cH
  002db	3b ec		 cmp	 ebp, esp
  002dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e2	8b e5		 mov	 esp, ebp
  002e4	5d		 pop	 ebp
  002e5	c2 0c 00	 ret	 12			; 0000000cH
$LN28@MsgProc:
  002e8	00 00 00 00	 DD	 $LN9@MsgProc
  002ec	00 00 00 00	 DD	 $LN6@MsgProc
  002f0	00 00 00 00	 DD	 $LN12@MsgProc
  002f4	00 00 00 00	 DD	 $LN16@MsgProc
  002f8	00 00 00 00	 DD	 $LN7@MsgProc
  002fc	00 00 00 00	 DD	 $LN10@MsgProc
$LN27@MsgProc:
  00300	00		 DB	 0
  00301	01		 DB	 1
  00302	02		 DB	 2
  00303	01		 DB	 1
  00304	01		 DB	 1
  00305	01		 DB	 1
  00306	01		 DB	 1
  00307	03		 DB	 3
  00308	01		 DB	 1
  00309	01		 DB	 1
  0030a	01		 DB	 1
  0030b	01		 DB	 1
  0030c	04		 DB	 4
  0030d	01		 DB	 1
  0030e	01		 DB	 1
  0030f	01		 DB	 1
  00310	01		 DB	 1
  00311	01		 DB	 1
  00312	01		 DB	 1
  00313	01		 DB	 1
  00314	01		 DB	 1
  00315	05		 DB	 5
  00316	01		 DB	 1
  00317	02		 DB	 2
  00318	01		 DB	 1
  00319	01		 DB	 1
  0031a	01		 DB	 1
  0031b	01		 DB	 1
  0031c	01		 DB	 1
?MsgProc@CDXUTEditBox@@UAE_NIIJ@Z ENDP			; CDXUTEditBox::MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -80						; size = 4
_nX1st$1 = -72						; size = 4
_nTrail$2 = -60						; size = 4
_nCP$3 = -48						; size = 4
_nX1st$4 = -36						; size = 4
_nTrail$5 = -24						; size = 4
_nCP$6 = -12						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTEditBox@@UAE_NIABUtagPOINT@@IJ@Z PROC	; CDXUTEditBox::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5819
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d b0	 lea	 edi, DWORD PTR [ebp-80]
  0000c	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5823
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00023	85 c9		 test	 ecx, ecx
  00025	74 0b		 je	 SHORT $LN15@HandleMous
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0002e	85 c0		 test	 eax, eax
  00030	75 07		 jne	 SHORT $LN16@HandleMous
$LN15@HandleMous:
; Line 5824
  00032	32 c0		 xor	 al, al
  00034	e9 c4 01 00 00	 jmp	 $LN17@HandleMous
$LN16@HandleMous:
; Line 5826
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003c	89 4d b0	 mov	 DWORD PTR tv78[ebp], ecx
  0003f	8b 55 b0	 mov	 edx, DWORD PTR tv78[ebp]
  00042	81 ea 00 02 00
	00		 sub	 edx, 512		; 00000200H
  00048	89 55 b0	 mov	 DWORD PTR tv78[ebp], edx
  0004b	83 7d b0 03	 cmp	 DWORD PTR tv78[ebp], 3
  0004f	0f 87 a6 01 00
	00		 ja	 $LN13@HandleMous
  00055	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  00058	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN27@HandleMous[eax*4]
$LN12@HandleMous:
; Line 5831
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	0f b6 51 06	 movzx	 edx, BYTE PTR [ecx+6]
  00066	85 d2		 test	 edx, edx
  00068	75 0f		 jne	 SHORT $LN11@HandleMous
; Line 5832
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00074	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN11@HandleMous:
; Line 5834
  00079	8b f4		 mov	 esi, esp
  0007b	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  0007e	52		 push	 edx
  0007f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 10		 mov	 edx, DWORD PTR [eax]
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0008a	ff d0		 call	 eax
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	0f b6 c8	 movzx	 ecx, al
  00096	85 c9		 test	 ecx, ecx
  00098	75 07		 jne	 SHORT $LN10@HandleMous
; Line 5835
  0009a	32 c0		 xor	 al, al
  0009c	e9 5c 01 00 00	 jmp	 $LN17@HandleMous
$LN10@HandleMous:
; Line 5837
  000a1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	c6 82 44 01 00
	00 01		 mov	 BYTE PTR [edx+324], 1
; Line 5838
  000ab	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  000b0	8b f4		 mov	 esi, esp
  000b2	50		 push	 eax
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5841
  000c0	8d 45 dc	 lea	 eax, DWORD PTR _nX1st$4[ebp]
  000c3	50		 push	 eax
  000c4	6a 00		 push	 0
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	8b 91 30 01 00
	00		 mov	 edx, DWORD PTR [ecx+304]
  000cf	52		 push	 edx
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	83 c1 54	 add	 ecx, 84			; 00000054H
  000d6	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 5842
  000db	8d 45 e8	 lea	 eax, DWORD PTR _nTrail$5[ebp]
  000de	50		 push	 eax
  000df	8d 4d f4	 lea	 ecx, DWORD PTR _nCP$6[ebp]
  000e2	51		 push	 ecx
  000e3	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000eb	2b 48 70	 sub	 ecx, DWORD PTR [eax+112]
  000ee	03 4d dc	 add	 ecx, DWORD PTR _nX1st$4[ebp]
  000f1	51		 push	 ecx
  000f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	83 c1 54	 add	 ecx, 84			; 00000054H
  000f8	e8 00 00 00 00	 call	 ?XtoCP@CUniBuffer@@QAE_NHPAH0@Z ; CUniBuffer::XtoCP
  000fd	0f b6 d0	 movzx	 edx, al
  00100	85 d2		 test	 edx, edx
  00102	74 4d		 je	 SHORT $LN9@HandleMous
; Line 5845
  00104	83 7d e8 00	 cmp	 DWORD PTR _nTrail$5[ebp], 0
  00108	74 21		 je	 SHORT $LN8@HandleMous
  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	83 c1 54	 add	 ecx, 84			; 00000054H
  00110	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  00115	39 45 f4	 cmp	 DWORD PTR _nCP$6[ebp], eax
  00118	7d 11		 jge	 SHORT $LN8@HandleMous
; Line 5846
  0011a	8b 45 f4	 mov	 eax, DWORD PTR _nCP$6[ebp]
  0011d	83 c0 01	 add	 eax, 1
  00120	50		 push	 eax
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5847
  00129	eb 0c		 jmp	 SHORT $LN7@HandleMous
$LN8@HandleMous:
; Line 5848
  0012b	8b 4d f4	 mov	 ecx, DWORD PTR _nCP$6[ebp]
  0012e	51		 push	 ecx
  0012f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
$LN7@HandleMous:
; Line 5849
  00137	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0013a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00143	89 8a 2c 01 00
	00		 mov	 DWORD PTR [edx+300], ecx
; Line 5850
  00149	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
$LN9@HandleMous:
; Line 5852
  00151	b0 01		 mov	 al, 1
  00153	e9 a5 00 00 00	 jmp	 $LN17@HandleMous
$LN6@HandleMous:
; Line 5856
  00158	8b f4		 mov	 esi, esp
  0015a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  00160	3b f4		 cmp	 esi, esp
  00162	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5857
  00167	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0016a	c6 82 44 01 00
	00 00		 mov	 BYTE PTR [edx+324], 0
; Line 5858
  00171	e9 85 00 00 00	 jmp	 $LN13@HandleMous
$LN5@HandleMous:
; Line 5861
  00176	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00179	0f b6 88 44 01
	00 00		 movzx	 ecx, BYTE PTR [eax+324]
  00180	85 c9		 test	 ecx, ecx
  00182	74 77		 je	 SHORT $LN13@HandleMous
; Line 5865
  00184	8d 55 b8	 lea	 edx, DWORD PTR _nX1st$1[ebp]
  00187	52		 push	 edx
  00188	6a 00		 push	 0
  0018a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018d	8b 88 30 01 00
	00		 mov	 ecx, DWORD PTR [eax+304]
  00193	51		 push	 ecx
  00194	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	83 c1 54	 add	 ecx, 84			; 00000054H
  0019a	e8 00 00 00 00	 call	 ?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ; CUniBuffer::CPtoX
; Line 5866
  0019f	8d 55 c4	 lea	 edx, DWORD PTR _nTrail$2[ebp]
  001a2	52		 push	 edx
  001a3	8d 45 d0	 lea	 eax, DWORD PTR _nCP$3[ebp]
  001a6	50		 push	 eax
  001a7	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  001aa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001ad	8b 01		 mov	 eax, DWORD PTR [ecx]
  001af	2b 42 70	 sub	 eax, DWORD PTR [edx+112]
  001b2	03 45 b8	 add	 eax, DWORD PTR _nX1st$1[ebp]
  001b5	50		 push	 eax
  001b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b9	83 c1 54	 add	 ecx, 84			; 00000054H
  001bc	e8 00 00 00 00	 call	 ?XtoCP@CUniBuffer@@QAE_NHPAH0@Z ; CUniBuffer::XtoCP
  001c1	0f b6 c8	 movzx	 ecx, al
  001c4	85 c9		 test	 ecx, ecx
  001c6	74 33		 je	 SHORT $LN13@HandleMous
; Line 5869
  001c8	83 7d c4 00	 cmp	 DWORD PTR _nTrail$2[ebp], 0
  001cc	74 21		 je	 SHORT $LN2@HandleMous
  001ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d1	83 c1 54	 add	 ecx, 84			; 00000054H
  001d4	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  001d9	39 45 d0	 cmp	 DWORD PTR _nCP$3[ebp], eax
  001dc	7d 11		 jge	 SHORT $LN2@HandleMous
; Line 5870
  001de	8b 55 d0	 mov	 edx, DWORD PTR _nCP$3[ebp]
  001e1	83 c2 01	 add	 edx, 1
  001e4	52		 push	 edx
  001e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e8	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5871
  001ed	eb 0c		 jmp	 SHORT $LN13@HandleMous
$LN2@HandleMous:
; Line 5872
  001ef	8b 45 d0	 mov	 eax, DWORD PTR _nCP$3[ebp]
  001f2	50		 push	 eax
  001f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f6	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
$LN13@HandleMous:
; Line 5878
  001fb	32 c0		 xor	 al, al
$LN17@HandleMous:
; Line 5879
  001fd	52		 push	 edx
  001fe	8b cd		 mov	 ecx, ebp
  00200	50		 push	 eax
  00201	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN26@HandleMous
  00207	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0020c	58		 pop	 eax
  0020d	5a		 pop	 edx
  0020e	5f		 pop	 edi
  0020f	5e		 pop	 esi
  00210	83 c4 50	 add	 esp, 80			; 00000050H
  00213	3b ec		 cmp	 ebp, esp
  00215	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021a	8b e5		 mov	 esp, ebp
  0021c	5d		 pop	 ebp
  0021d	c2 10 00	 ret	 16			; 00000010H
$LN26@HandleMous:
  00220	06 00 00 00	 DD	 6
  00224	00 00 00 00	 DD	 $LN25@HandleMous
$LN25@HandleMous:
  00228	f4 ff ff ff	 DD	 -12			; fffffff4H
  0022c	04 00 00 00	 DD	 4
  00230	00 00 00 00	 DD	 $LN19@HandleMous
  00234	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00238	04 00 00 00	 DD	 4
  0023c	00 00 00 00	 DD	 $LN20@HandleMous
  00240	dc ff ff ff	 DD	 -36			; ffffffdcH
  00244	04 00 00 00	 DD	 4
  00248	00 00 00 00	 DD	 $LN21@HandleMous
  0024c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00250	04 00 00 00	 DD	 4
  00254	00 00 00 00	 DD	 $LN22@HandleMous
  00258	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0025c	04 00 00 00	 DD	 4
  00260	00 00 00 00	 DD	 $LN23@HandleMous
  00264	b8 ff ff ff	 DD	 -72			; ffffffb8H
  00268	04 00 00 00	 DD	 4
  0026c	00 00 00 00	 DD	 $LN24@HandleMous
$LN24@HandleMous:
  00270	6e		 DB	 110			; 0000006eH
  00271	58		 DB	 88			; 00000058H
  00272	31		 DB	 49			; 00000031H
  00273	73		 DB	 115			; 00000073H
  00274	74		 DB	 116			; 00000074H
  00275	00		 DB	 0
$LN23@HandleMous:
  00276	6e		 DB	 110			; 0000006eH
  00277	54		 DB	 84			; 00000054H
  00278	72		 DB	 114			; 00000072H
  00279	61		 DB	 97			; 00000061H
  0027a	69		 DB	 105			; 00000069H
  0027b	6c		 DB	 108			; 0000006cH
  0027c	00		 DB	 0
$LN22@HandleMous:
  0027d	6e		 DB	 110			; 0000006eH
  0027e	43		 DB	 67			; 00000043H
  0027f	50		 DB	 80			; 00000050H
  00280	00		 DB	 0
$LN21@HandleMous:
  00281	6e		 DB	 110			; 0000006eH
  00282	58		 DB	 88			; 00000058H
  00283	31		 DB	 49			; 00000031H
  00284	73		 DB	 115			; 00000073H
  00285	74		 DB	 116			; 00000074H
  00286	00		 DB	 0
$LN20@HandleMous:
  00287	6e		 DB	 110			; 0000006eH
  00288	54		 DB	 84			; 00000054H
  00289	72		 DB	 114			; 00000072H
  0028a	61		 DB	 97			; 00000061H
  0028b	69		 DB	 105			; 00000069H
  0028c	6c		 DB	 108			; 0000006cH
  0028d	00		 DB	 0
$LN19@HandleMous:
  0028e	6e		 DB	 110			; 0000006eH
  0028f	43		 DB	 67			; 00000043H
  00290	50		 DB	 80			; 00000050H
  00291	00		 DB	 0
  00292	8b ff		 npad	 2
$LN27@HandleMous:
  00294	00 00 00 00	 DD	 $LN5@HandleMous
  00298	00 00 00 00	 DD	 $LN12@HandleMous
  0029c	00 00 00 00	 DD	 $LN6@HandleMous
  002a0	00 00 00 00	 DD	 $LN12@HandleMous
?HandleMouse@CDXUTEditBox@@UAE_NIABUtagPOINT@@IJ@Z ENDP	; CDXUTEditBox::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv243 = -24						; size = 4
tv147 = -20						; size = 4
tv79 = -16						; size = 4
tv78 = -12						; size = 4
_bHandled$ = -5						; size = 1
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTEditBox@@UAE_NIIJ@Z PROC		; CDXUTEditBox::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5690
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5693
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00028	85 c9		 test	 ecx, ecx
  0002a	74 0b		 je	 SHORT $LN32@HandleKeyb
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00033	85 c0		 test	 eax, eax
  00035	75 07		 jne	 SHORT $LN33@HandleKeyb
$LN32@HandleKeyb:
; Line 5694
  00037	32 c0		 xor	 al, al
  00039	e9 37 03 00 00	 jmp	 $LN34@HandleKeyb
$LN33@HandleKeyb:
; Line 5696
  0003e	c6 45 fb 00	 mov	 BYTE PTR _bHandled$[ebp], 0
; Line 5698
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00045	89 4d f4	 mov	 DWORD PTR tv78[ebp], ecx
  00048	81 7d f4 00 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 256 ; 00000100H
  0004f	74 05		 je	 SHORT $LN29@HandleKeyb
  00051	e9 1c 03 00 00	 jmp	 $LN30@HandleKeyb
$LN29@HandleKeyb:
; Line 5702
  00056	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00059	89 55 f0	 mov	 DWORD PTR tv79[ebp], edx
  0005c	8b 45 f0	 mov	 eax, DWORD PTR tv79[ebp]
  0005f	83 e8 09	 sub	 eax, 9
  00062	89 45 f0	 mov	 DWORD PTR tv79[ebp], eax
  00065	83 7d f0 25	 cmp	 DWORD PTR tv79[ebp], 37	; 00000025H
  00069	0f 87 e7 02 00
	00		 ja	 $LN1@HandleKeyb
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR tv79[ebp]
  00072	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN40@HandleKeyb[ecx]
  00079	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN41@HandleKeyb[edx*4]
$LN26@HandleKeyb:
; Line 5707
  00080	e9 ed 02 00 00	 jmp	 $LN30@HandleKeyb
$LN25@HandleKeyb:
; Line 5710
  00085	6a 00		 push	 0
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5711
  0008f	8b f4		 mov	 esi, esp
  00091	6a 10		 push	 16			; 00000010H
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00099	3b f4		 cmp	 esi, esp
  0009b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a0	98		 cwde
  000a1	85 c0		 test	 eax, eax
  000a3	7c 12		 jl	 SHORT $LN24@HandleKeyb
; Line 5714
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ab	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  000b1	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax
$LN24@HandleKeyb:
; Line 5715
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 5716
  000bf	c6 45 fb 01	 mov	 BYTE PTR _bHandled$[ebp], 1
; Line 5717
  000c3	e9 aa 02 00 00	 jmp	 $LN30@HandleKeyb
$LN23@HandleKeyb:
; Line 5720
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	83 c1 54	 add	 ecx, 84			; 00000054H
  000ce	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  000d3	50		 push	 eax
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
; Line 5721
  000dc	8b f4		 mov	 esi, esp
  000de	6a 10		 push	 16			; 00000010H
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  000e6	3b f4		 cmp	 esi, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	0f bf c8	 movsx	 ecx, ax
  000f0	85 c9		 test	 ecx, ecx
  000f2	7c 12		 jl	 SHORT $LN22@HandleKeyb
; Line 5724
  000f4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00100	89 8a 2c 01 00
	00		 mov	 DWORD PTR [edx+300], ecx
$LN22@HandleKeyb:
; Line 5725
  00106	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 5726
  0010e	c6 45 fb 01	 mov	 BYTE PTR _bHandled$[ebp], 1
; Line 5727
  00112	e9 5b 02 00 00	 jmp	 $LN30@HandleKeyb
$LN21@HandleKeyb:
; Line 5730
  00117	8b f4		 mov	 esi, esp
  00119	6a 11		 push	 17			; 00000011H
  0011b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00121	3b f4		 cmp	 esi, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	0f bf d0	 movsx	 edx, ax
  0012b	85 d2		 test	 edx, edx
  0012d	7d 0a		 jge	 SHORT $LN20@HandleKeyb
; Line 5733
  0012f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	e8 00 00 00 00	 call	 ?CopyToClipboard@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::CopyToClipboard
  00137	eb 4a		 jmp	 SHORT $LN19@HandleKeyb
$LN20@HandleKeyb:
; Line 5735
  00139	8b f4		 mov	 esi, esp
  0013b	6a 10		 push	 16			; 00000010H
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00143	3b f4		 cmp	 esi, esp
  00145	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014a	98		 cwde
  0014b	85 c0		 test	 eax, eax
  0014d	7d 0a		 jge	 SHORT $LN18@HandleKeyb
; Line 5738
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	e8 00 00 00 00	 call	 ?PasteFromClipboard@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::PasteFromClipboard
; Line 5740
  00157	eb 2a		 jmp	 SHORT $LN19@HandleKeyb
$LN18@HandleKeyb:
; Line 5743
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	0f b6 91 28 01
	00 00		 movzx	 edx, BYTE PTR [ecx+296]
  00163	85 d2		 test	 edx, edx
  00165	75 09		 jne	 SHORT $LN36@HandleKeyb
  00167	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv147[ebp], 1
  0016e	eb 07		 jmp	 SHORT $LN37@HandleKeyb
$LN36@HandleKeyb:
  00170	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN37@HandleKeyb:
  00177	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017a	8a 4d ec	 mov	 cl, BYTE PTR tv147[ebp]
  0017d	88 88 28 01 00
	00		 mov	 BYTE PTR [eax+296], cl
$LN19@HandleKeyb:
; Line 5745
  00183	e9 ea 01 00 00	 jmp	 $LN30@HandleKeyb
$LN16@HandleKeyb:
; Line 5749
  00188	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0018b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018e	8b 8a 24 01 00
	00		 mov	 ecx, DWORD PTR [edx+292]
  00194	3b 88 2c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+300]
  0019a	74 20		 je	 SHORT $LN15@HandleKeyb
; Line 5751
  0019c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019f	e8 00 00 00 00	 call	 ?DeleteSelectionText@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::DeleteSelectionText
; Line 5752
  001a4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001a7	52		 push	 edx
  001a8	6a 01		 push	 1
  001aa	68 02 06 00 00	 push	 1538			; 00000602H
  001af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001b5	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 5754
  001ba	eb 32		 jmp	 SHORT $LN14@HandleKeyb
$LN15@HandleKeyb:
; Line 5757
  001bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001bf	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  001c5	52		 push	 edx
  001c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c9	83 c1 54	 add	 ecx, 84			; 00000054H
  001cc	e8 00 00 00 00	 call	 ?RemoveChar@CUniBuffer@@QAE_NH@Z ; CUniBuffer::RemoveChar
  001d1	0f b6 c0	 movzx	 eax, al
  001d4	85 c0		 test	 eax, eax
  001d6	74 16		 je	 SHORT $LN14@HandleKeyb
; Line 5758
  001d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001db	51		 push	 ecx
  001dc	6a 01		 push	 1
  001de	68 02 06 00 00	 push	 1538			; 00000602H
  001e3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001e6	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  001e9	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN14@HandleKeyb:
; Line 5760
  001ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 5761
  001f6	c6 45 fb 01	 mov	 BYTE PTR _bHandled$[ebp], 1
; Line 5762
  001fa	e9 73 01 00 00	 jmp	 $LN30@HandleKeyb
$LN12@HandleKeyb:
; Line 5765
  001ff	8b f4		 mov	 esi, esp
  00201	6a 11		 push	 17			; 00000011H
  00203	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00209	3b f4		 cmp	 esi, esp
  0020b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00210	98		 cwde
  00211	85 c0		 test	 eax, eax
  00213	7d 33		 jge	 SHORT $LN11@HandleKeyb
; Line 5769
  00215	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00218	81 c1 24 01 00
	00		 add	 ecx, 292		; 00000124H
  0021e	51		 push	 ecx
  0021f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00222	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00228	50		 push	 eax
  00229	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022c	83 c1 54	 add	 ecx, 84			; 00000054H
  0022f	e8 00 00 00 00	 call	 ?GetPriorItemPos@CUniBuffer@@QAEXHPAH@Z ; CUniBuffer::GetPriorItemPos
; Line 5770
  00234	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00237	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  0023d	52		 push	 edx
  0023e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00241	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
  00246	eb 21		 jmp	 SHORT $LN10@HandleKeyb
$LN11@HandleKeyb:
; Line 5772
  00248	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0024b	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00252	7e 15		 jle	 SHORT $LN10@HandleKeyb
; Line 5773
  00254	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00257	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  0025d	83 ea 01	 sub	 edx, 1
  00260	52		 push	 edx
  00261	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00264	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
$LN10@HandleKeyb:
; Line 5774
  00269	8b f4		 mov	 esi, esp
  0026b	6a 10		 push	 16			; 00000010H
  0026d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00273	3b f4		 cmp	 esi, esp
  00275	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027a	98		 cwde
  0027b	85 c0		 test	 eax, eax
  0027d	7c 12		 jl	 SHORT $LN8@HandleKeyb
; Line 5777
  0027f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00285	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  0028b	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax
$LN8@HandleKeyb:
; Line 5778
  00291	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00294	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 5779
  00299	c6 45 fb 01	 mov	 BYTE PTR _bHandled$[ebp], 1
; Line 5780
  0029d	e9 d0 00 00 00	 jmp	 $LN30@HandleKeyb
$LN7@HandleKeyb:
; Line 5783
  002a2	8b f4		 mov	 esi, esp
  002a4	6a 11		 push	 17			; 00000011H
  002a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  002ac	3b f4		 cmp	 esi, esp
  002ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b3	0f bf c8	 movsx	 ecx, ax
  002b6	85 c9		 test	 ecx, ecx
  002b8	7d 33		 jge	 SHORT $LN6@HandleKeyb
; Line 5787
  002ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002bd	81 c2 24 01 00
	00		 add	 edx, 292		; 00000124H
  002c3	52		 push	 edx
  002c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002c7	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  002cd	51		 push	 ecx
  002ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d1	83 c1 54	 add	 ecx, 84			; 00000054H
  002d4	e8 00 00 00 00	 call	 ?GetNextItemPos@CUniBuffer@@QAEXHPAH@Z ; CUniBuffer::GetNextItemPos
; Line 5788
  002d9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002dc	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  002e2	50		 push	 eax
  002e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e6	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
  002eb	eb 2b		 jmp	 SHORT $LN5@HandleKeyb
$LN6@HandleKeyb:
; Line 5790
  002ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f0	83 c1 54	 add	 ecx, 84			; 00000054H
  002f3	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  002f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fb	39 81 24 01 00
	00		 cmp	 DWORD PTR [ecx+292], eax
  00301	7d 15		 jge	 SHORT $LN5@HandleKeyb
; Line 5791
  00303	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00306	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  0030c	83 c0 01	 add	 eax, 1
  0030f	50		 push	 eax
  00310	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00313	e8 00 00 00 00	 call	 ?PlaceCaret@CDXUTEditBox@@IAEXH@Z ; CDXUTEditBox::PlaceCaret
$LN5@HandleKeyb:
; Line 5792
  00318	8b f4		 mov	 esi, esp
  0031a	6a 10		 push	 16			; 00000010H
  0031c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00322	3b f4		 cmp	 esi, esp
  00324	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00329	0f bf c8	 movsx	 ecx, ax
  0032c	85 c9		 test	 ecx, ecx
  0032e	7c 12		 jl	 SHORT $LN3@HandleKeyb
; Line 5795
  00330	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00333	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00336	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  0033c	89 8a 2c 01 00
	00		 mov	 DWORD PTR [edx+300], ecx
$LN3@HandleKeyb:
; Line 5796
  00342	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00345	e8 00 00 00 00	 call	 ?ResetCaretBlink@CDXUTEditBox@@IAEXXZ ; CDXUTEditBox::ResetCaretBlink
; Line 5797
  0034a	c6 45 fb 01	 mov	 BYTE PTR _bHandled$[ebp], 1
; Line 5798
  0034e	eb 22		 jmp	 SHORT $LN30@HandleKeyb
$LN2@HandleKeyb:
; Line 5804
  00350	c6 45 fb 01	 mov	 BYTE PTR _bHandled$[ebp], 1
; Line 5805
  00354	eb 1c		 jmp	 SHORT $LN30@HandleKeyb
$LN1@HandleKeyb:
; Line 5808
  00356	83 7d 0c 1b	 cmp	 DWORD PTR _wParam$[ebp], 27 ; 0000001bH
  0035a	74 09		 je	 SHORT $LN38@HandleKeyb
  0035c	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv243[ebp], 1
  00363	eb 07		 jmp	 SHORT $LN39@HandleKeyb
$LN38@HandleKeyb:
  00365	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv243[ebp], 0
$LN39@HandleKeyb:
  0036c	8a 55 e8	 mov	 dl, BYTE PTR tv243[ebp]
  0036f	88 55 fb	 mov	 BYTE PTR _bHandled$[ebp], dl
$LN30@HandleKeyb:
; Line 5812
  00372	8a 45 fb	 mov	 al, BYTE PTR _bHandled$[ebp]
$LN34@HandleKeyb:
; Line 5813
  00375	5e		 pop	 esi
  00376	83 c4 18	 add	 esp, 24			; 00000018H
  00379	3b ec		 cmp	 ebp, esp
  0037b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00380	8b e5		 mov	 esp, ebp
  00382	5d		 pop	 ebp
  00383	c2 0c 00	 ret	 12			; 0000000cH
  00386	8b ff		 npad	 2
$LN41@HandleKeyb:
  00388	00 00 00 00	 DD	 $LN26@HandleKeyb
  0038c	00 00 00 00	 DD	 $LN23@HandleKeyb
  00390	00 00 00 00	 DD	 $LN25@HandleKeyb
  00394	00 00 00 00	 DD	 $LN12@HandleKeyb
  00398	00 00 00 00	 DD	 $LN2@HandleKeyb
  0039c	00 00 00 00	 DD	 $LN7@HandleKeyb
  003a0	00 00 00 00	 DD	 $LN21@HandleKeyb
  003a4	00 00 00 00	 DD	 $LN16@HandleKeyb
  003a8	00 00 00 00	 DD	 $LN1@HandleKeyb
$LN40@HandleKeyb:
  003ac	00		 DB	 0
  003ad	08		 DB	 8
  003ae	08		 DB	 8
  003af	08		 DB	 8
  003b0	08		 DB	 8
  003b1	08		 DB	 8
  003b2	08		 DB	 8
  003b3	08		 DB	 8
  003b4	08		 DB	 8
  003b5	08		 DB	 8
  003b6	08		 DB	 8
  003b7	08		 DB	 8
  003b8	08		 DB	 8
  003b9	08		 DB	 8
  003ba	08		 DB	 8
  003bb	08		 DB	 8
  003bc	08		 DB	 8
  003bd	08		 DB	 8
  003be	08		 DB	 8
  003bf	08		 DB	 8
  003c0	08		 DB	 8
  003c1	08		 DB	 8
  003c2	08		 DB	 8
  003c3	08		 DB	 8
  003c4	08		 DB	 8
  003c5	08		 DB	 8
  003c6	01		 DB	 1
  003c7	02		 DB	 2
  003c8	03		 DB	 3
  003c9	04		 DB	 4
  003ca	05		 DB	 5
  003cb	04		 DB	 4
  003cc	08		 DB	 8
  003cd	08		 DB	 8
  003ce	08		 DB	 8
  003cf	08		 DB	 8
  003d0	06		 DB	 6
  003d1	07		 DB	 7
?HandleKeyboard@CDXUTEditBox@@UAE_NIIJ@Z ENDP		; CDXUTEditBox::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDXUTEditBox@@UAE@XZ PROC				; CDXUTEditBox::~CDXUTEditBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5497
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDXUTEditBox@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTEditBox@@6B@
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 5498
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	83 c1 54	 add	 ecx, 84			; 00000054H
  00043	e8 00 00 00 00	 call	 ??1CUniBuffer@@QAE@XZ	; CUniBuffer::~CUniBuffer
  00048	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	83 c4 10	 add	 esp, 16			; 00000010H
  00065	3b ec		 cmp	 ebp, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDXUTEditBox@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
__ehhandler$??1CDXUTEditBox@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDXUTEditBox@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDXUTEditBox@@UAE@XZ ENDP				; CDXUTEditBox::~CDXUTEditBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv168 = -28						; size = 8
tv165 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDialog$ = 8						; size = 4
??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTEditBox::CDXUTEditBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5472
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001d	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00020	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00023	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	6a 00		 push	 0
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z ; CDXUTControl::CDXUTControl
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTEditBox@@6B@
  00054	6a 01		 push	 1
  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 54	 add	 ecx, 84			; 00000054H
  0005c	e8 00 00 00 00	 call	 ??0CUniBuffer@@QAE@H@Z	; CUniBuffer::CUniBuffer
  00061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; Line 5473
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	c7 41 34 06 00
	00 00		 mov	 DWORD PTR [ecx+52], 6
; Line 5474
  0006f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00072	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00075	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 5476
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	c7 41 68 05 00
	00 00		 mov	 DWORD PTR [ecx+104], 5
; Line 5477
  00082	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00085	c7 42 6c 04 00
	00 00		 mov	 DWORD PTR [edx+108], 4
; Line 5479
  0008c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	c6 80 20 01 00
	00 01		 mov	 BYTE PTR [eax+288], 1
; Line 5480
  00096	8b f4		 mov	 esi, esp
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCaretBlinkTime@0
  0009e	3b f4		 cmp	 esi, esp
  000a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a5	89 45 ec	 mov	 DWORD PTR tv165[ebp], eax
  000a8	f2 0f 2a 45 ec	 cvtsi2sd xmm0, DWORD PTR tv165[ebp]
  000ad	8b 4d ec	 mov	 ecx, DWORD PTR tv165[ebp]
  000b0	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000b3	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  000bc	f2 0f 11 45 e4	 movsd	 QWORD PTR tv168[ebp], xmm0
  000c1	f2 0f 5a 45 e4	 cvtsd2ss xmm0, QWORD PTR tv168[ebp]
  000c6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3a83126f
  000ce	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000d2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000d5	f2 0f 11 82 10
	01 00 00	 movsd	 QWORD PTR [edx+272], xmm0
; Line 5481
  000dd	e8 00 00 00 00	 call	 ?DXUTGetGlobalTimer@@YGPAVCDXUTTimer@@XZ ; DXUTGetGlobalTimer
  000e2	8b c8		 mov	 ecx, eax
  000e4	e8 00 00 00 00	 call	 ?GetAbsoluteTime@CDXUTTimer@@QBENXZ ; CDXUTTimer::GetAbsoluteTime
  000e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	dd 98 18 01 00
	00		 fstp	 QWORD PTR [eax+280]
; Line 5482
  000f2	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?s_bHideCaret@CDXUTEditBox@@1_NA, 0 ; CDXUTEditBox::s_bHideCaret
; Line 5483
  000f9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	c7 81 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+304], 0
; Line 5484
  00106	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00109	c7 82 34 01 00
	00 10 10 10 ff	 mov	 DWORD PTR [edx+308], -15724528 ; ff101010H
; Line 5485
  00113	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00116	c7 80 38 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+312], -1
; Line 5486
  00120	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00123	c7 81 3c 01 00
	00 5c 32 28 ff	 mov	 DWORD PTR [ecx+316], -14142884 ; ff28325cH
; Line 5487
  0012d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00130	c7 82 40 01 00
	00 00 00 00 ff	 mov	 DWORD PTR [edx+320], -16777216 ; ff000000H
; Line 5488
  0013a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	c7 80 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+300], 0
  00147	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	c7 81 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+292], 0
; Line 5489
  00154	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00157	c6 82 28 01 00
	00 01		 mov	 BYTE PTR [edx+296], 1
; Line 5491
  0015e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00161	c6 80 44 01 00
	00 00		 mov	 BYTE PTR [eax+324], 0
; Line 5492
  00168	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0016f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00172	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00175	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017c	59		 pop	 ecx
  0017d	5e		 pop	 esi
  0017e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00181	3b ec		 cmp	 ebp, esp
  00183	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
__unwindfunclet$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 54	 add	 ecx, 84			; 00000054H
  0000e	e9 00 00 00 00	 jmp	 ??1CUniBuffer@@QAE@XZ	; CUniBuffer::~CUniBuffer
__ehhandler$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTEditBox::CDXUTEditBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv135 = -68						; size = 4
tv175 = -62						; size = 2
tv172 = -60						; size = 4
tv169 = -56						; size = 4
tv95 = -52						; size = 4
tv162 = -46						; size = 2
tv159 = -44						; size = 4
tv156 = -40						; size = 4
_hDC$ = -36						; size = 4
_hr$ = -32						; size = 4
_ScriptState$ = -24					; size = 2
_ScriptControl$ = -12					; size = 4
_this$ = -4						; size = 4
?Analyse@CUniBuffer@@AAEJXZ PROC			; CUniBuffer::Analyse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6258
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  0000b	b9 11 00 00 00	 mov	 ecx, 17			; 00000011H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6259
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00022	74 0c		 je	 SHORT $LN4@Analyse
; Line 6260
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 10	 add	 ecx, 16			; 00000010H
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 _ScriptStringFree@4
$LN4@Analyse:
; Line 6264
  00030	33 d2		 xor	 edx, edx
  00032	89 55 f4	 mov	 DWORD PTR _ScriptControl$[ebp], edx
; Line 6265
  00035	33 c0		 xor	 eax, eax
  00037	66 89 45 e8	 mov	 WORD PTR _ScriptState$[ebp], ax
; Line 6269
  0003b	8d 4d e8	 lea	 ecx, DWORD PTR _ScriptState$[ebp]
  0003e	51		 push	 ecx
  0003f	8d 55 f4	 lea	 edx, DWORD PTR _ScriptControl$[ebp]
  00042	52		 push	 edx
  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 _ScriptApplyDigitSubstitution@12
  0004a	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 6270
  0004d	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00051	7d 08		 jge	 SHORT $LN3@Analyse
; Line 6271
  00053	8b 45 e0	 mov	 eax, DWORD PTR _hr$[ebp]
  00056	e9 d0 00 00 00	 jmp	 $LN5@Analyse
$LN3@Analyse:
; Line 6274
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00062	75 0a		 jne	 SHORT $LN2@Analyse
; Line 6275
  00064	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00069	e9 bd 00 00 00	 jmp	 $LN5@Analyse
$LN2@Analyse:
; Line 6277
  0006e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _hDC$[ebp], 0
; Line 6290
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007a	89 55 d8	 mov	 DWORD PTR tv156[ebp], edx
  0007d	8b 45 d8	 mov	 eax, DWORD PTR tv156[ebp]
  00080	83 c0 02	 add	 eax, 2
  00083	89 45 d4	 mov	 DWORD PTR tv159[ebp], eax
$LL7@Analyse:
  00086	8b 4d d8	 mov	 ecx, DWORD PTR tv156[ebp]
  00089	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0008c	66 89 55 d2	 mov	 WORD PTR tv162[ebp], dx
  00090	83 45 d8 02	 add	 DWORD PTR tv156[ebp], 2
  00094	66 83 7d d2 00	 cmp	 WORD PTR tv162[ebp], 0
  00099	75 eb		 jne	 SHORT $LL7@Analyse
  0009b	8b 45 d8	 mov	 eax, DWORD PTR tv156[ebp]
  0009e	2b 45 d4	 sub	 eax, DWORD PTR tv159[ebp]
  000a1	d1 f8		 sar	 eax, 1
  000a3	89 45 cc	 mov	 DWORD PTR tv95[ebp], eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ab	89 55 c8	 mov	 DWORD PTR tv169[ebp], edx
  000ae	8b 45 c8	 mov	 eax, DWORD PTR tv169[ebp]
  000b1	83 c0 02	 add	 eax, 2
  000b4	89 45 c4	 mov	 DWORD PTR tv172[ebp], eax
$LL8@Analyse:
  000b7	8b 4d c8	 mov	 ecx, DWORD PTR tv169[ebp]
  000ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000bd	66 89 55 c2	 mov	 WORD PTR tv175[ebp], dx
  000c1	83 45 c8 02	 add	 DWORD PTR tv169[ebp], 2
  000c5	66 83 7d c2 00	 cmp	 WORD PTR tv175[ebp], 0
  000ca	75 eb		 jne	 SHORT $LL8@Analyse
  000cc	8b 45 c8	 mov	 eax, DWORD PTR tv169[ebp]
  000cf	2b 45 c4	 sub	 eax, DWORD PTR tv172[ebp]
  000d2	d1 f8		 sar	 eax, 1
  000d4	89 45 bc	 mov	 DWORD PTR tv135[ebp], eax
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	83 c1 10	 add	 ecx, 16			; 00000010H
  000dd	51		 push	 ecx
  000de	6a 00		 push	 0
  000e0	6a 00		 push	 0
  000e2	6a 00		 push	 0
  000e4	8d 55 e8	 lea	 edx, DWORD PTR _ScriptState$[ebp]
  000e7	52		 push	 edx
  000e8	8d 45 f4	 lea	 eax, DWORD PTR _ScriptControl$[ebp]
  000eb	50		 push	 eax
  000ec	6a 00		 push	 0
  000ee	68 e0 10 00 00	 push	 4320			; 000010e0H
  000f3	6a ff		 push	 -1
  000f5	6b 45 cc 03	 imul	 eax, DWORD PTR tv95[ebp], 3
  000f9	99		 cdq
  000fa	2b c2		 sub	 eax, edx
  000fc	d1 f8		 sar	 eax, 1
  000fe	83 c0 10	 add	 eax, 16			; 00000010H
  00101	50		 push	 eax
  00102	8b 4d bc	 mov	 ecx, DWORD PTR tv135[ebp]
  00105	83 c1 01	 add	 ecx, 1
  00108	51		 push	 ecx
  00109	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010c	8b 02		 mov	 eax, DWORD PTR [edx]
  0010e	50		 push	 eax
  0010f	8b 4d dc	 mov	 ecx, DWORD PTR _hDC$[ebp]
  00112	51		 push	 ecx
  00113	e8 00 00 00 00	 call	 _ScriptStringAnalyse@52
  00118	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 6291
  0011b	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0011f	7c 07		 jl	 SHORT $LN1@Analyse
; Line 6292
  00121	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00124	c6 42 0c 00	 mov	 BYTE PTR [edx+12], 0
$LN1@Analyse:
; Line 6293
  00128	8b 45 e0	 mov	 eax, DWORD PTR _hr$[ebp]
$LN5@Analyse:
; Line 6294
  0012b	52		 push	 edx
  0012c	8b cd		 mov	 ecx, ebp
  0012e	50		 push	 eax
  0012f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@Analyse
  00135	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0013a	58		 pop	 eax
  0013b	5a		 pop	 edx
  0013c	5f		 pop	 edi
  0013d	83 c4 44	 add	 esp, 68			; 00000044H
  00140	3b ec		 cmp	 ebp, esp
  00142	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
  0014b	90		 npad	 1
$LN12@Analyse:
  0014c	02 00 00 00	 DD	 2
  00150	00 00 00 00	 DD	 $LN11@Analyse
$LN11@Analyse:
  00154	f4 ff ff ff	 DD	 -12			; fffffff4H
  00158	04 00 00 00	 DD	 4
  0015c	00 00 00 00	 DD	 $LN9@Analyse
  00160	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00164	02 00 00 00	 DD	 2
  00168	00 00 00 00	 DD	 $LN10@Analyse
$LN10@Analyse:
  0016c	53		 DB	 83			; 00000053H
  0016d	63		 DB	 99			; 00000063H
  0016e	72		 DB	 114			; 00000072H
  0016f	69		 DB	 105			; 00000069H
  00170	70		 DB	 112			; 00000070H
  00171	74		 DB	 116			; 00000074H
  00172	53		 DB	 83			; 00000053H
  00173	74		 DB	 116			; 00000074H
  00174	61		 DB	 97			; 00000061H
  00175	74		 DB	 116			; 00000074H
  00176	65		 DB	 101			; 00000065H
  00177	00		 DB	 0
$LN9@Analyse:
  00178	53		 DB	 83			; 00000053H
  00179	63		 DB	 99			; 00000063H
  0017a	72		 DB	 114			; 00000072H
  0017b	69		 DB	 105			; 00000069H
  0017c	70		 DB	 112			; 00000070H
  0017d	74		 DB	 116			; 00000074H
  0017e	43		 DB	 67			; 00000043H
  0017f	6f		 DB	 111			; 0000006fH
  00180	6e		 DB	 110			; 0000006eH
  00181	74		 DB	 116			; 00000074H
  00182	72		 DB	 114			; 00000072H
  00183	6f		 DB	 111			; 0000006fH
  00184	6c		 DB	 108			; 0000006cH
  00185	00		 DB	 0
?Analyse@CUniBuffer@@AAEJXZ ENDP			; CUniBuffer::Analyse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_limit$ = -24						; size = 4
_i$ = -20						; size = 4
_nInitial$ = -16					; size = 4
_pLogAttr$ = -12					; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_nCP$ = 8						; size = 4
_pPrior$ = 12						; size = 4
?GetNextItemPos@CUniBuffer@@QAEXHPAH@Z PROC		; CUniBuffer::GetNextItemPos
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6560
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6561
  00020	8b 45 0c	 mov	 eax, DWORD PTR _pPrior$[ebp]
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _nCP$[ebp]
  00026	89 08		 mov	 DWORD PTR [eax], ecx
; Line 6563
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 6564
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	0f b6 42 0c	 movzx	 eax, BYTE PTR [edx+12]
  00036	85 c0		 test	 eax, eax
  00038	74 0b		 je	 SHORT $LN10@GetNextIte
; Line 6565
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?Analyse@CUniBuffer@@AAEJXZ ; CUniBuffer::Analyse
  00042	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN10@GetNextIte:
; Line 6566
  00045	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00049	7d 05		 jge	 SHORT $LN9@GetNextIte
; Line 6567
  0004b	e9 06 01 00 00	 jmp	 $LN11@GetNextIte
$LN9@GetNextIte:
; Line 6569
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 _ScriptString_pLogAttr@4
  0005c	89 45 f4	 mov	 DWORD PTR _pLogAttr$[ebp], eax
; Line 6570
  0005f	83 7d f4 00	 cmp	 DWORD PTR _pLogAttr$[ebp], 0
  00063	75 05		 jne	 SHORT $LN8@GetNextIte
; Line 6571
  00065	e9 ec 00 00 00	 jmp	 $LN11@GetNextIte
$LN8@GetNextIte:
; Line 6573
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 _ScriptString_pcOutChars@4
  00076	85 c0		 test	 eax, eax
  00078	75 05		 jne	 SHORT $LN7@GetNextIte
; Line 6574
  0007a	e9 d7 00 00 00	 jmp	 $LN11@GetNextIte
$LN7@GetNextIte:
; Line 6575
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 _ScriptString_pcOutChars@4
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 4d f0	 mov	 DWORD PTR _nInitial$[ebp], ecx
; Line 6576
  00090	8b 55 08	 mov	 edx, DWORD PTR _nCP$[ebp]
  00093	83 c2 01	 add	 edx, 1
  00096	3b 55 f0	 cmp	 edx, DWORD PTR _nInitial$[ebp]
  00099	7d 09		 jge	 SHORT $LN6@GetNextIte
; Line 6577
  0009b	8b 45 08	 mov	 eax, DWORD PTR _nCP$[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f0	 mov	 DWORD PTR _nInitial$[ebp], eax
$LN6@GetNextIte:
; Line 6579
  000a4	8b 4d f0	 mov	 ecx, DWORD PTR _nInitial$[ebp]
  000a7	89 4d ec	 mov	 DWORD PTR _i$[ebp], ecx
; Line 6580
  000aa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ad	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 _ScriptString_pcOutChars@4
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	89 4d e8	 mov	 DWORD PTR _limit$[ebp], ecx
$LN5@GetNextIte:
; Line 6581
  000bb	83 7d e8 00	 cmp	 DWORD PTR _limit$[ebp], 0
  000bf	7e 7f		 jle	 SHORT $LN4@GetNextIte
  000c1	8b 55 e8	 mov	 edx, DWORD PTR _limit$[ebp]
  000c4	83 ea 01	 sub	 edx, 1
  000c7	39 55 ec	 cmp	 DWORD PTR _i$[ebp], edx
  000ca	7d 74		 jge	 SHORT $LN4@GetNextIte
; Line 6583
  000cc	8b 45 f4	 mov	 eax, DWORD PTR _pLogAttr$[ebp]
  000cf	03 45 ec	 add	 eax, DWORD PTR _i$[ebp]
  000d2	8a 08		 mov	 cl, BYTE PTR [eax]
  000d4	c0 e9 03	 shr	 cl, 3
  000d7	80 e1 01	 and	 cl, 1
  000da	0f b6 d1	 movzx	 edx, cl
  000dd	85 d2		 test	 edx, edx
  000df	74 0c		 je	 SHORT $LN3@GetNextIte
; Line 6585
  000e1	8b 45 0c	 mov	 eax, DWORD PTR _pPrior$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  000e7	89 08		 mov	 DWORD PTR [eax], ecx
; Line 6586
  000e9	eb 6b		 jmp	 SHORT $LN11@GetNextIte
; Line 6588
  000eb	eb 34		 jmp	 SHORT $LN2@GetNextIte
$LN3@GetNextIte:
; Line 6589
  000ed	8b 55 f4	 mov	 edx, DWORD PTR _pLogAttr$[ebp]
  000f0	03 55 ec	 add	 edx, DWORD PTR _i$[ebp]
  000f3	8a 02		 mov	 al, BYTE PTR [edx]
  000f5	d0 e8		 shr	 al, 1
  000f7	24 01		 and	 al, 1
  000f9	0f b6 c8	 movzx	 ecx, al
  000fc	85 c9		 test	 ecx, ecx
  000fe	74 21		 je	 SHORT $LN2@GetNextIte
  00100	8b 55 f4	 mov	 edx, DWORD PTR _pLogAttr$[ebp]
  00103	03 55 ec	 add	 edx, DWORD PTR _i$[ebp]
  00106	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00109	d0 e8		 shr	 al, 1
  0010b	24 01		 and	 al, 1
  0010d	0f b6 c8	 movzx	 ecx, al
  00110	85 c9		 test	 ecx, ecx
  00112	75 0d		 jne	 SHORT $LN2@GetNextIte
; Line 6591
  00114	8b 55 ec	 mov	 edx, DWORD PTR _i$[ebp]
  00117	83 c2 01	 add	 edx, 1
  0011a	8b 45 0c	 mov	 eax, DWORD PTR _pPrior$[ebp]
  0011d	89 10		 mov	 DWORD PTR [eax], edx
; Line 6592
  0011f	eb 35		 jmp	 SHORT $LN11@GetNextIte
$LN2@GetNextIte:
; Line 6595
  00121	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  00124	83 c1 01	 add	 ecx, 1
  00127	89 4d ec	 mov	 DWORD PTR _i$[ebp], ecx
; Line 6596
  0012a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0012d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 _ScriptString_pcOutChars@4
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	89 4d e8	 mov	 DWORD PTR _limit$[ebp], ecx
; Line 6597
  0013b	e9 7b ff ff ff	 jmp	 $LN5@GetNextIte
$LN4@GetNextIte:
; Line 6599
  00140	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00143	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 _ScriptString_pcOutChars@4
  0014c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014e	83 e9 01	 sub	 ecx, 1
  00151	8b 55 0c	 mov	 edx, DWORD PTR _pPrior$[ebp]
  00154	89 0a		 mov	 DWORD PTR [edx], ecx
$LN11@GetNextIte:
; Line 6600
  00156	83 c4 18	 add	 esp, 24			; 00000018H
  00159	3b ec		 cmp	 ebp, esp
  0015b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00160	8b e5		 mov	 esp, ebp
  00162	5d		 pop	 ebp
  00163	c2 08 00	 ret	 8
?GetNextItemPos@CUniBuffer@@QAEXHPAH@Z ENDP		; CUniBuffer::GetNextItemPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$1 = -16						; size = 4
_nInitial$ = -12					; size = 4
_pLogAttr$ = -8						; size = 4
_this$ = -4						; size = 4
_nCP$ = 8						; size = 4
_pPrior$ = 12						; size = 4
?GetPriorItemPos@CUniBuffer@@QAEXHPAH@Z PROC		; CUniBuffer::GetPriorItemPos
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6528
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6529
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _pPrior$[ebp]
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _nCP$[ebp]
  00020	89 08		 mov	 DWORD PTR [eax], ecx
; Line 6531
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	0f b6 42 0c	 movzx	 eax, BYTE PTR [edx+12]
  00029	85 c0		 test	 eax, eax
  0002b	74 11		 je	 SHORT $LN10@GetPriorIt
; Line 6532
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?Analyse@CUniBuffer@@AAEJXZ ; CUniBuffer::Analyse
  00035	85 c0		 test	 eax, eax
  00037	7d 05		 jge	 SHORT $LN10@GetPriorIt
; Line 6533
  00039	e9 be 00 00 00	 jmp	 $LN11@GetPriorIt
$LN10@GetPriorIt:
; Line 6535
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 _ScriptString_pLogAttr@4
  0004a	89 45 f8	 mov	 DWORD PTR _pLogAttr$[ebp], eax
; Line 6536
  0004d	83 7d f8 00	 cmp	 DWORD PTR _pLogAttr$[ebp], 0
  00051	75 05		 jne	 SHORT $LN8@GetPriorIt
; Line 6537
  00053	e9 a4 00 00 00	 jmp	 $LN11@GetPriorIt
$LN8@GetPriorIt:
; Line 6539
  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 _ScriptString_pcOutChars@4
  00064	85 c0		 test	 eax, eax
  00066	75 05		 jne	 SHORT $LN7@GetPriorIt
; Line 6540
  00068	e9 8f 00 00 00	 jmp	 $LN11@GetPriorIt
$LN7@GetPriorIt:
; Line 6541
  0006d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00070	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 _ScriptString_pcOutChars@4
  00079	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007b	89 4d f4	 mov	 DWORD PTR _nInitial$[ebp], ecx
; Line 6542
  0007e	8b 55 08	 mov	 edx, DWORD PTR _nCP$[ebp]
  00081	83 ea 01	 sub	 edx, 1
  00084	3b 55 f4	 cmp	 edx, DWORD PTR _nInitial$[ebp]
  00087	7d 09		 jge	 SHORT $LN6@GetPriorIt
; Line 6543
  00089	8b 45 08	 mov	 eax, DWORD PTR _nCP$[ebp]
  0008c	83 e8 01	 sub	 eax, 1
  0008f	89 45 f4	 mov	 DWORD PTR _nInitial$[ebp], eax
$LN6@GetPriorIt:
; Line 6544
  00092	8b 4d f4	 mov	 ecx, DWORD PTR _nInitial$[ebp]
  00095	89 4d f0	 mov	 DWORD PTR _i$1[ebp], ecx
  00098	eb 09		 jmp	 SHORT $LN5@GetPriorIt
$LN4@GetPriorIt:
  0009a	8b 55 f0	 mov	 edx, DWORD PTR _i$1[ebp]
  0009d	83 ea 01	 sub	 edx, 1
  000a0	89 55 f0	 mov	 DWORD PTR _i$1[ebp], edx
$LN5@GetPriorIt:
  000a3	83 7d f0 00	 cmp	 DWORD PTR _i$1[ebp], 0
  000a7	7e 4a		 jle	 SHORT $LN3@GetPriorIt
; Line 6547
  000a9	8b 45 f8	 mov	 eax, DWORD PTR _pLogAttr$[ebp]
  000ac	03 45 f0	 add	 eax, DWORD PTR _i$1[ebp]
  000af	8a 08		 mov	 cl, BYTE PTR [eax]
  000b1	c0 e9 03	 shr	 cl, 3
  000b4	80 e1 01	 and	 cl, 1
  000b7	0f b6 d1	 movzx	 edx, cl
  000ba	85 d2		 test	 edx, edx
  000bc	75 29		 jne	 SHORT $LN1@GetPriorIt
  000be	8b 45 f8	 mov	 eax, DWORD PTR _pLogAttr$[ebp]
  000c1	03 45 f0	 add	 eax, DWORD PTR _i$1[ebp]
  000c4	8a 08		 mov	 cl, BYTE PTR [eax]
  000c6	d0 e9		 shr	 cl, 1
  000c8	80 e1 01	 and	 cl, 1
  000cb	0f b6 d1	 movzx	 edx, cl
  000ce	85 d2		 test	 edx, edx
  000d0	75 1f		 jne	 SHORT $LN2@GetPriorIt
  000d2	8b 45 f8	 mov	 eax, DWORD PTR _pLogAttr$[ebp]
  000d5	03 45 f0	 add	 eax, DWORD PTR _i$1[ebp]
  000d8	8a 48 ff	 mov	 cl, BYTE PTR [eax-1]
  000db	d0 e9		 shr	 cl, 1
  000dd	80 e1 01	 and	 cl, 1
  000e0	0f b6 d1	 movzx	 edx, cl
  000e3	85 d2		 test	 edx, edx
  000e5	74 0a		 je	 SHORT $LN2@GetPriorIt
$LN1@GetPriorIt:
; Line 6549
  000e7	8b 45 0c	 mov	 eax, DWORD PTR _pPrior$[ebp]
  000ea	8b 4d f0	 mov	 ecx, DWORD PTR _i$1[ebp]
  000ed	89 08		 mov	 DWORD PTR [eax], ecx
; Line 6550
  000ef	eb 0b		 jmp	 SHORT $LN11@GetPriorIt
$LN2@GetPriorIt:
; Line 6551
  000f1	eb a7		 jmp	 SHORT $LN4@GetPriorIt
$LN3@GetPriorIt:
; Line 6553
  000f3	8b 55 0c	 mov	 edx, DWORD PTR _pPrior$[ebp]
  000f6	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN11@GetPriorIt:
; Line 6554
  000fc	83 c4 10	 add	 esp, 16			; 00000010H
  000ff	3b ec		 cmp	 ebp, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
?GetPriorItemPos@CUniBuffer@@QAEXHPAH@Z ENDP		; CUniBuffer::GetPriorItemPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv94 = -40						; size = 4
tv172 = -34						; size = 2
tv169 = -32						; size = 4
tv166 = -28						; size = 4
tv88 = -24						; size = 4
tv156 = -18						; size = 2
tv153 = -16						; size = 4
tv150 = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_nX$ = 8						; size = 4
_pCP$ = 12						; size = 4
_pnTrail$ = 16						; size = 4
?XtoCP@CUniBuffer@@QAE_NHPAH0@Z PROC			; CUniBuffer::XtoCP
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6486
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6487
  0001c	83 7d 0c 00	 cmp	 DWORD PTR _pCP$[ebp], 0
  00020	74 06		 je	 SHORT $LN10@XtoCP
  00022	83 7d 10 00	 cmp	 DWORD PTR _pnTrail$[ebp], 0
  00026	75 21		 jne	 SHORT $LN11@XtoCP
$LN10@XtoCP:
  00028	8b f4		 mov	 esi, esp
  0002a	68 57 19 00 00	 push	 6487			; 00001957H
  0002f	68 00 00 00 00	 push	 OFFSET $SG164810
  00034	68 00 00 00 00	 push	 OFFSET $SG164811
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@XtoCP:
; Line 6488
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _pCP$[ebp]
  0004c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  00052	8b 55 10	 mov	 edx, DWORD PTR _pnTrail$[ebp]
  00055	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 6490
  0005b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 6491
  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00069	85 c9		 test	 ecx, ecx
  0006b	74 0b		 je	 SHORT $LN7@XtoCP
; Line 6492
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?Analyse@CUniBuffer@@AAEJXZ ; CUniBuffer::Analyse
  00075	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN7@XtoCP:
; Line 6494
  00078	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0007c	7c 3a		 jl	 SHORT $LN6@XtoCP
; Line 6496
  0007e	8b 55 10	 mov	 edx, DWORD PTR _pnTrail$[ebp]
  00081	52		 push	 edx
  00082	8b 45 0c	 mov	 eax, DWORD PTR _pCP$[ebp]
  00085	50		 push	 eax
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _nX$[ebp]
  00089	51		 push	 ecx
  0008a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 _ScriptStringXtoCP@16
  00096	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 6497
  00099	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0009d	7d 19		 jge	 SHORT $LN6@XtoCP
; Line 6499
  0009f	8b 4d 0c	 mov	 ecx, DWORD PTR _pCP$[ebp]
  000a2	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  000a8	8b 55 10	 mov	 edx, DWORD PTR _pnTrail$[ebp]
  000ab	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 6500
  000b1	32 c0		 xor	 al, al
  000b3	e9 ca 00 00 00	 jmp	 $LN8@XtoCP
$LN6@XtoCP:
; Line 6507
  000b8	8b 45 0c	 mov	 eax, DWORD PTR _pCP$[ebp]
  000bb	83 38 ff	 cmp	 DWORD PTR [eax], -1
  000be	75 1f		 jne	 SHORT $LN4@XtoCP
  000c0	8b 4d 10	 mov	 ecx, DWORD PTR _pnTrail$[ebp]
  000c3	83 39 01	 cmp	 DWORD PTR [ecx], 1
  000c6	75 17		 jne	 SHORT $LN4@XtoCP
; Line 6509
  000c8	8b 55 0c	 mov	 edx, DWORD PTR _pCP$[ebp]
  000cb	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
  000d1	8b 45 10	 mov	 eax, DWORD PTR _pnTrail$[ebp]
  000d4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  000da	e9 85 00 00 00	 jmp	 $LN3@XtoCP
$LN4@XtoCP:
; Line 6511
  000df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e4	89 55 f4	 mov	 DWORD PTR tv150[ebp], edx
  000e7	8b 45 f4	 mov	 eax, DWORD PTR tv150[ebp]
  000ea	83 c0 02	 add	 eax, 2
  000ed	89 45 f0	 mov	 DWORD PTR tv153[ebp], eax
$LL12@XtoCP:
  000f0	8b 4d f4	 mov	 ecx, DWORD PTR tv150[ebp]
  000f3	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000f6	66 89 55 ee	 mov	 WORD PTR tv156[ebp], dx
  000fa	83 45 f4 02	 add	 DWORD PTR tv150[ebp], 2
  000fe	66 83 7d ee 00	 cmp	 WORD PTR tv156[ebp], 0
  00103	75 eb		 jne	 SHORT $LL12@XtoCP
  00105	8b 45 f4	 mov	 eax, DWORD PTR tv150[ebp]
  00108	2b 45 f0	 sub	 eax, DWORD PTR tv153[ebp]
  0010b	d1 f8		 sar	 eax, 1
  0010d	89 45 e8	 mov	 DWORD PTR tv88[ebp], eax
  00110	8b 4d 0c	 mov	 ecx, DWORD PTR _pCP$[ebp]
  00113	8b 11		 mov	 edx, DWORD PTR [ecx]
  00115	3b 55 e8	 cmp	 edx, DWORD PTR tv88[ebp]
  00118	7e 4a		 jle	 SHORT $LN3@XtoCP
  0011a	8b 45 10	 mov	 eax, DWORD PTR _pnTrail$[ebp]
  0011d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00120	75 42		 jne	 SHORT $LN3@XtoCP
; Line 6513
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 11		 mov	 edx, DWORD PTR [ecx]
  00127	89 55 e4	 mov	 DWORD PTR tv166[ebp], edx
  0012a	8b 45 e4	 mov	 eax, DWORD PTR tv166[ebp]
  0012d	83 c0 02	 add	 eax, 2
  00130	89 45 e0	 mov	 DWORD PTR tv169[ebp], eax
$LL13@XtoCP:
  00133	8b 4d e4	 mov	 ecx, DWORD PTR tv166[ebp]
  00136	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00139	66 89 55 de	 mov	 WORD PTR tv172[ebp], dx
  0013d	83 45 e4 02	 add	 DWORD PTR tv166[ebp], 2
  00141	66 83 7d de 00	 cmp	 WORD PTR tv172[ebp], 0
  00146	75 eb		 jne	 SHORT $LL13@XtoCP
  00148	8b 45 e4	 mov	 eax, DWORD PTR tv166[ebp]
  0014b	2b 45 e0	 sub	 eax, DWORD PTR tv169[ebp]
  0014e	d1 f8		 sar	 eax, 1
  00150	89 45 d8	 mov	 DWORD PTR tv94[ebp], eax
  00153	8b 4d 0c	 mov	 ecx, DWORD PTR _pCP$[ebp]
  00156	8b 55 d8	 mov	 edx, DWORD PTR tv94[ebp]
  00159	89 11		 mov	 DWORD PTR [ecx], edx
  0015b	8b 45 10	 mov	 eax, DWORD PTR _pnTrail$[ebp]
  0015e	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$LN3@XtoCP:
; Line 6516
  00164	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00168	7d 16		 jge	 SHORT $LN1@XtoCP
; Line 6518
  0016a	8b 4d 0c	 mov	 ecx, DWORD PTR _pCP$[ebp]
  0016d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  00173	8b 55 10	 mov	 edx, DWORD PTR _pnTrail$[ebp]
  00176	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
; Line 6519
  0017c	32 c0		 xor	 al, al
  0017e	eb 02		 jmp	 SHORT $LN8@XtoCP
$LN1@XtoCP:
; Line 6521
  00180	b0 01		 mov	 al, 1
$LN8@XtoCP:
; Line 6522
  00182	5f		 pop	 edi
  00183	5e		 pop	 esi
  00184	83 c4 28	 add	 esp, 40			; 00000028H
  00187	3b ec		 cmp	 ebp, esp
  00189	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018e	8b e5		 mov	 esp, ebp
  00190	5d		 pop	 ebp
  00191	c2 0c 00	 ret	 12			; 0000000cH
?XtoCP@CUniBuffer@@QAE_NHPAH0@Z ENDP			; CUniBuffer::XtoCP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_nCP$ = 8						; size = 4
_bTrail$ = 12						; size = 1
_pX$ = 16						; size = 4
?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z PROC			; CUniBuffer::CPtoX
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6462
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6463
  00018	83 7d 10 00	 cmp	 DWORD PTR _pX$[ebp], 0
  0001c	75 21		 jne	 SHORT $LN6@CPtoX
  0001e	8b f4		 mov	 esi, esp
  00020	68 3f 19 00 00	 push	 6463			; 0000193fH
  00025	68 00 00 00 00	 push	 OFFSET $SG164794
  0002a	68 00 00 00 00	 push	 OFFSET $SG164795
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@CPtoX:
; Line 6464
  0003f	8b 4d 10	 mov	 ecx, DWORD PTR _pX$[ebp]
  00042	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 6466
  00048	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 6467
  0004f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00052	0f b6 42 0c	 movzx	 eax, BYTE PTR [edx+12]
  00056	85 c0		 test	 eax, eax
  00058	74 0b		 je	 SHORT $LN3@CPtoX
; Line 6468
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	e8 00 00 00 00	 call	 ?Analyse@CUniBuffer@@AAEJXZ ; CUniBuffer::Analyse
  00062	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN3@CPtoX:
; Line 6470
  00065	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00069	7c 1c		 jl	 SHORT $LN2@CPtoX
; Line 6471
  0006b	8b 4d 10	 mov	 ecx, DWORD PTR _pX$[ebp]
  0006e	51		 push	 ecx
  0006f	0f b6 55 0c	 movzx	 edx, BYTE PTR _bTrail$[ebp]
  00073	52		 push	 edx
  00074	8b 45 08	 mov	 eax, DWORD PTR _nCP$[ebp]
  00077	50		 push	 eax
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0007e	52		 push	 edx
  0007f	e8 00 00 00 00	 call	 _ScriptStringCPtoX@16
  00084	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$LN2@CPtoX:
; Line 6473
  00087	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008b	7d 0d		 jge	 SHORT $LN1@CPtoX
; Line 6475
  0008d	8b 45 10	 mov	 eax, DWORD PTR _pX$[ebp]
  00090	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 6476
  00096	32 c0		 xor	 al, al
  00098	eb 02		 jmp	 SHORT $LN4@CPtoX
$LN1@CPtoX:
; Line 6479
  0009a	b0 01		 mov	 al, 1
$LN4@CPtoX:
; Line 6480
  0009c	5e		 pop	 esi
  0009d	83 c4 08	 add	 esp, 8
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 0c 00	 ret	 12			; 0000000cH
?CPtoX@CUniBuffer@@QAE_NH_NPAH@Z ENDP			; CUniBuffer::CPtoX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -24						; size = 4
tv134 = -18						; size = 2
tv131 = -16						; size = 4
tv128 = -12						; size = 4
_nRequired$ = -8					; size = 4
_this$ = -4						; size = 4
_wszText$ = 8						; size = 4
?SetText@CUniBuffer@@QAE_NPB_W@Z PROC			; CUniBuffer::SetText
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6435
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6436
  00021	83 7d 08 00	 cmp	 DWORD PTR _wszText$[ebp], 0
  00025	75 21		 jne	 SHORT $LN9@SetText
  00027	8b f4		 mov	 esi, esp
  00029	68 24 19 00 00	 push	 6436			; 00001924H
  0002e	68 00 00 00 00	 push	 OFFSET $SG164777
  00033	68 00 00 00 00	 push	 OFFSET $SG164778
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@SetText:
; Line 6438
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _wszText$[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv128[ebp], ecx
  0004e	8b 55 f4	 mov	 edx, DWORD PTR tv128[ebp]
  00051	83 c2 02	 add	 edx, 2
  00054	89 55 f0	 mov	 DWORD PTR tv131[ebp], edx
$LL10@SetText:
  00057	8b 45 f4	 mov	 eax, DWORD PTR tv128[ebp]
  0005a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0005d	66 89 4d ee	 mov	 WORD PTR tv134[ebp], cx
  00061	83 45 f4 02	 add	 DWORD PTR tv128[ebp], 2
  00065	66 83 7d ee 00	 cmp	 WORD PTR tv134[ebp], 0
  0006a	75 eb		 jne	 SHORT $LL10@SetText
  0006c	8b 55 f4	 mov	 edx, DWORD PTR tv128[ebp]
  0006f	2b 55 f0	 sub	 edx, DWORD PTR tv131[ebp]
  00072	d1 fa		 sar	 edx, 1
  00074	89 55 e8	 mov	 DWORD PTR tv71[ebp], edx
  00077	8b 45 e8	 mov	 eax, DWORD PTR tv71[ebp]
  0007a	83 c0 01	 add	 eax, 1
  0007d	89 45 f8	 mov	 DWORD PTR _nRequired$[ebp], eax
; Line 6441
  00080	81 7d f8 ff ff
	00 00		 cmp	 DWORD PTR _nRequired$[ebp], 65535 ; 0000ffffH
  00087	72 04		 jb	 SHORT $LN5@SetText
; Line 6442
  00089	32 c0		 xor	 al, al
  0008b	eb 63		 jmp	 SHORT $LN7@SetText
$LN5@SetText:
; Line 6444
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?GetBufferSize@CUniBuffer@@QBEIXZ ; CUniBuffer::GetBufferSize
  00095	3b 45 f8	 cmp	 eax, DWORD PTR _nRequired$[ebp]
  00098	73 15		 jae	 SHORT $LN4@SetText
; Line 6445
  0009a	6a ff		 push	 -1
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?SetBufferSize@CUniBuffer@@QAE_NH@Z ; CUniBuffer::SetBufferSize
  000a4	0f b6 c8	 movzx	 ecx, al
  000a7	85 c9		 test	 ecx, ecx
  000a9	75 02		 jne	 SHORT $LN3@SetText
; Line 6446
  000ab	eb 02		 jmp	 SHORT $LN4@SetText
$LN3@SetText:
; Line 6448
  000ad	eb de		 jmp	 SHORT $LN5@SetText
$LN4@SetText:
  000af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	e8 00 00 00 00	 call	 ?GetBufferSize@CUniBuffer@@QBEIXZ ; CUniBuffer::GetBufferSize
  000b7	3b 45 f8	 cmp	 eax, DWORD PTR _nRequired$[ebp]
  000ba	72 32		 jb	 SHORT $LN2@SetText
; Line 6450
  000bc	8b f4		 mov	 esi, esp
  000be	8b 55 08	 mov	 edx, DWORD PTR _wszText$[ebp]
  000c1	52		 push	 edx
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	e8 00 00 00 00	 call	 ?GetBufferSize@CUniBuffer@@QBEIXZ ; CUniBuffer::GetBufferSize
  000ca	50		 push	 eax
  000cb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d0	51		 push	 ecx
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6451
  000e1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1
; Line 6452
  000e8	b0 01		 mov	 al, 1
  000ea	eb 04		 jmp	 SHORT $LN7@SetText
; Line 6454
  000ec	eb 02		 jmp	 SHORT $LN7@SetText
$LN2@SetText:
; Line 6455
  000ee	32 c0		 xor	 al, al
$LN7@SetText:
; Line 6456
  000f0	5e		 pop	 esi
  000f1	83 c4 18	 add	 esp, 24			; 00000018H
  000f4	3b ec		 cmp	 ebp, esp
  000f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 04 00	 ret	 4
?SetText@CUniBuffer@@QAE_NPB_W@Z ENDP			; CUniBuffer::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv137 = -84						; size = 4
tv236 = -78						; size = 2
tv233 = -76						; size = 4
tv230 = -72						; size = 4
tv95 = -68						; size = 4
tv219 = -62						; size = 2
tv216 = -60						; size = 4
tv213 = -56						; size = 4
tv86 = -52						; size = 4
tv204 = -46						; size = 2
tv201 = -44						; size = 4
tv198 = -40						; size = 4
tv78 = -36						; size = 4
tv188 = -30						; size = 2
tv185 = -28						; size = 4
tv182 = -24						; size = 4
tv73 = -20						; size = 4
tv174 = -14						; size = 2
tv171 = -12						; size = 4
tv168 = -8						; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_pStr$ = 12						; size = 4
_nCount$ = 16						; size = 4
?InsertString@CUniBuffer@@QAE_NHPB_WH@Z PROC		; CUniBuffer::InsertString
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6403
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d ac	 lea	 edi, DWORD PTR [ebp-84]
  0000c	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6404
  0001c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00020	7d 21		 jge	 SHORT $LN9@InsertStri
  00022	8b f4		 mov	 esi, esp
  00024	68 04 19 00 00	 push	 6404			; 00001904H
  00029	68 00 00 00 00	 push	 OFFSET $SG164758
  0002e	68 00 00 00 00	 push	 OFFSET $SG164759
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@InsertStri:
; Line 6405
  00043	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00047	7d 07		 jge	 SHORT $LN6@InsertStri
; Line 6406
  00049	32 c0		 xor	 al, al
  0004b	e9 b8 01 00 00	 jmp	 $LN7@InsertStri
$LN6@InsertStri:
; Line 6408
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	89 55 f8	 mov	 DWORD PTR tv168[ebp], edx
  00058	8b 45 f8	 mov	 eax, DWORD PTR tv168[ebp]
  0005b	83 c0 02	 add	 eax, 2
  0005e	89 45 f4	 mov	 DWORD PTR tv171[ebp], eax
$LL10@InsertStri:
  00061	8b 4d f8	 mov	 ecx, DWORD PTR tv168[ebp]
  00064	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00067	66 89 55 f2	 mov	 WORD PTR tv174[ebp], dx
  0006b	83 45 f8 02	 add	 DWORD PTR tv168[ebp], 2
  0006f	66 83 7d f2 00	 cmp	 WORD PTR tv174[ebp], 0
  00074	75 eb		 jne	 SHORT $LL10@InsertStri
  00076	8b 45 f8	 mov	 eax, DWORD PTR tv168[ebp]
  00079	2b 45 f4	 sub	 eax, DWORD PTR tv171[ebp]
  0007c	d1 f8		 sar	 eax, 1
  0007e	89 45 ec	 mov	 DWORD PTR tv73[ebp], eax
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00084	3b 4d ec	 cmp	 ecx, DWORD PTR tv73[ebp]
  00087	7e 07		 jle	 SHORT $LN5@InsertStri
; Line 6409
  00089	32 c0		 xor	 al, al
  0008b	e9 78 01 00 00	 jmp	 $LN7@InsertStri
$LN5@InsertStri:
; Line 6411
  00090	83 7d 10 ff	 cmp	 DWORD PTR _nCount$[ebp], -1
  00094	75 35		 jne	 SHORT $LN4@InsertStri
; Line 6412
  00096	8b 55 0c	 mov	 edx, DWORD PTR _pStr$[ebp]
  00099	89 55 e8	 mov	 DWORD PTR tv182[ebp], edx
  0009c	8b 45 e8	 mov	 eax, DWORD PTR tv182[ebp]
  0009f	83 c0 02	 add	 eax, 2
  000a2	89 45 e4	 mov	 DWORD PTR tv185[ebp], eax
$LL11@InsertStri:
  000a5	8b 4d e8	 mov	 ecx, DWORD PTR tv182[ebp]
  000a8	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000ab	66 89 55 e2	 mov	 WORD PTR tv188[ebp], dx
  000af	83 45 e8 02	 add	 DWORD PTR tv182[ebp], 2
  000b3	66 83 7d e2 00	 cmp	 WORD PTR tv188[ebp], 0
  000b8	75 eb		 jne	 SHORT $LL11@InsertStri
  000ba	8b 45 e8	 mov	 eax, DWORD PTR tv182[ebp]
  000bd	2b 45 e4	 sub	 eax, DWORD PTR tv185[ebp]
  000c0	d1 f8		 sar	 eax, 1
  000c2	89 45 dc	 mov	 DWORD PTR tv78[ebp], eax
  000c5	8b 4d dc	 mov	 ecx, DWORD PTR tv78[ebp]
  000c8	89 4d 10	 mov	 DWORD PTR _nCount$[ebp], ecx
$LN4@InsertStri:
; Line 6415
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  000d3	03 45 10	 add	 eax, DWORD PTR _nCount$[ebp]
  000d6	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  000db	7c 07		 jl	 SHORT $LN3@InsertStri
; Line 6416
  000dd	32 c0		 xor	 al, al
  000df	e9 24 01 00 00	 jmp	 $LN7@InsertStri
$LN3@InsertStri:
; Line 6418
  000e4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 02		 mov	 eax, DWORD PTR [edx]
  000e9	89 45 d8	 mov	 DWORD PTR tv198[ebp], eax
  000ec	8b 4d d8	 mov	 ecx, DWORD PTR tv198[ebp]
  000ef	83 c1 02	 add	 ecx, 2
  000f2	89 4d d4	 mov	 DWORD PTR tv201[ebp], ecx
$LL12@InsertStri:
  000f5	8b 55 d8	 mov	 edx, DWORD PTR tv198[ebp]
  000f8	66 8b 02	 mov	 ax, WORD PTR [edx]
  000fb	66 89 45 d2	 mov	 WORD PTR tv204[ebp], ax
  000ff	83 45 d8 02	 add	 DWORD PTR tv198[ebp], 2
  00103	66 83 7d d2 00	 cmp	 WORD PTR tv204[ebp], 0
  00108	75 eb		 jne	 SHORT $LL12@InsertStri
  0010a	8b 4d d8	 mov	 ecx, DWORD PTR tv198[ebp]
  0010d	2b 4d d4	 sub	 ecx, DWORD PTR tv201[ebp]
  00110	d1 f9		 sar	 ecx, 1
  00112	89 4d cc	 mov	 DWORD PTR tv86[ebp], ecx
  00115	8b 55 cc	 mov	 edx, DWORD PTR tv86[ebp]
  00118	03 55 10	 add	 edx, DWORD PTR _nCount$[ebp]
  0011b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00121	7c 52		 jl	 SHORT $LN2@InsertStri
; Line 6420
  00123	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00126	8b 11		 mov	 edx, DWORD PTR [ecx]
  00128	89 55 c8	 mov	 DWORD PTR tv213[ebp], edx
  0012b	8b 45 c8	 mov	 eax, DWORD PTR tv213[ebp]
  0012e	83 c0 02	 add	 eax, 2
  00131	89 45 c4	 mov	 DWORD PTR tv216[ebp], eax
$LL13@InsertStri:
  00134	8b 4d c8	 mov	 ecx, DWORD PTR tv213[ebp]
  00137	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0013a	66 89 55 c2	 mov	 WORD PTR tv219[ebp], dx
  0013e	83 45 c8 02	 add	 DWORD PTR tv213[ebp], 2
  00142	66 83 7d c2 00	 cmp	 WORD PTR tv219[ebp], 0
  00147	75 eb		 jne	 SHORT $LL13@InsertStri
  00149	8b 45 c8	 mov	 eax, DWORD PTR tv213[ebp]
  0014c	2b 45 c4	 sub	 eax, DWORD PTR tv216[ebp]
  0014f	d1 f8		 sar	 eax, 1
  00151	89 45 bc	 mov	 DWORD PTR tv95[ebp], eax
  00154	8b 4d 10	 mov	 ecx, DWORD PTR _nCount$[ebp]
  00157	8b 55 bc	 mov	 edx, DWORD PTR tv95[ebp]
  0015a	8d 44 0a 01	 lea	 eax, DWORD PTR [edx+ecx+1]
  0015e	50		 push	 eax
  0015f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00162	e8 00 00 00 00	 call	 ?SetBufferSize@CUniBuffer@@QAE_NH@Z ; CUniBuffer::SetBufferSize
  00167	0f b6 c8	 movzx	 ecx, al
  0016a	85 c9		 test	 ecx, ecx
  0016c	75 07		 jne	 SHORT $LN2@InsertStri
; Line 6421
  0016e	32 c0		 xor	 al, al
  00170	e9 93 00 00 00	 jmp	 $LN7@InsertStri
$LN2@InsertStri:
; Line 6425
  00175	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00178	8b 02		 mov	 eax, DWORD PTR [edx]
  0017a	89 45 b8	 mov	 DWORD PTR tv230[ebp], eax
  0017d	8b 4d b8	 mov	 ecx, DWORD PTR tv230[ebp]
  00180	83 c1 02	 add	 ecx, 2
  00183	89 4d b4	 mov	 DWORD PTR tv233[ebp], ecx
$LL14@InsertStri:
  00186	8b 55 b8	 mov	 edx, DWORD PTR tv230[ebp]
  00189	66 8b 02	 mov	 ax, WORD PTR [edx]
  0018c	66 89 45 b2	 mov	 WORD PTR tv236[ebp], ax
  00190	83 45 b8 02	 add	 DWORD PTR tv230[ebp], 2
  00194	66 83 7d b2 00	 cmp	 WORD PTR tv236[ebp], 0
  00199	75 eb		 jne	 SHORT $LL14@InsertStri
  0019b	8b 4d b8	 mov	 ecx, DWORD PTR tv230[ebp]
  0019e	2b 4d b4	 sub	 ecx, DWORD PTR tv233[ebp]
  001a1	d1 f9		 sar	 ecx, 1
  001a3	89 4d ac	 mov	 DWORD PTR tv137[ebp], ecx
  001a6	8b 55 ac	 mov	 edx, DWORD PTR tv137[ebp]
  001a9	2b 55 08	 sub	 edx, DWORD PTR _nIndex$[ebp]
  001ac	8d 44 12 02	 lea	 eax, DWORD PTR [edx+edx+2]
  001b0	8b f4		 mov	 esi, esp
  001b2	50		 push	 eax
  001b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b8	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  001bb	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  001be	51		 push	 ecx
  001bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c2	8b 02		 mov	 eax, DWORD PTR [edx]
  001c4	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  001c7	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  001ca	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  001cd	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  001d0	51		 push	 ecx
  001d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  001d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  001da	3b f4		 cmp	 esi, esp
  001dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6426
  001e1	8b 55 10	 mov	 edx, DWORD PTR _nCount$[ebp]
  001e4	d1 e2		 shl	 edx, 1
  001e6	52		 push	 edx
  001e7	8b 45 0c	 mov	 eax, DWORD PTR _pStr$[ebp]
  001ea	50		 push	 eax
  001eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f0	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  001f3	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  001f6	51		 push	 ecx
  001f7	e8 00 00 00 00	 call	 _memcpy
  001fc	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 6427
  001ff	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00202	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1
; Line 6429
  00206	b0 01		 mov	 al, 1
$LN7@InsertStri:
; Line 6430
  00208	5f		 pop	 edi
  00209	5e		 pop	 esi
  0020a	83 c4 54	 add	 esp, 84			; 00000054H
  0020d	3b ec		 cmp	 ebp, esp
  0020f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00214	8b e5		 mov	 esp, ebp
  00216	5d		 pop	 ebp
  00217	c2 0c 00	 ret	 12			; 0000000cH
?InsertString@CUniBuffer@@QAE_NHPB_WH@Z ENDP		; CUniBuffer::InsertString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -52						; size = 4
tv162 = -46						; size = 2
tv159 = -44						; size = 4
tv156 = -40						; size = 4
tv73 = -36						; size = 4
tv147 = -30						; size = 2
tv144 = -28						; size = 4
tv141 = -24						; size = 4
tv67 = -20						; size = 4
tv134 = -14						; size = 2
tv131 = -12						; size = 4
tv128 = -8						; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?RemoveChar@CUniBuffer@@QAE_NH@Z PROC			; CUniBuffer::RemoveChar
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6385
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0000c	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6386
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d f8	 mov	 DWORD PTR tv128[ebp], ecx
  00024	8b 55 f8	 mov	 edx, DWORD PTR tv128[ebp]
  00027	83 c2 02	 add	 edx, 2
  0002a	89 55 f4	 mov	 DWORD PTR tv131[ebp], edx
$LL5@RemoveChar:
  0002d	8b 45 f8	 mov	 eax, DWORD PTR tv128[ebp]
  00030	66 8b 08	 mov	 cx, WORD PTR [eax]
  00033	66 89 4d f2	 mov	 WORD PTR tv134[ebp], cx
  00037	83 45 f8 02	 add	 DWORD PTR tv128[ebp], 2
  0003b	66 83 7d f2 00	 cmp	 WORD PTR tv134[ebp], 0
  00040	75 eb		 jne	 SHORT $LL5@RemoveChar
  00042	8b 55 f8	 mov	 edx, DWORD PTR tv128[ebp]
  00045	2b 55 f4	 sub	 edx, DWORD PTR tv131[ebp]
  00048	d1 fa		 sar	 edx, 1
  0004a	89 55 ec	 mov	 DWORD PTR tv67[ebp], edx
  0004d	74 3f		 je	 SHORT $LN1@RemoveChar
  0004f	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00053	7c 39		 jl	 SHORT $LN1@RemoveChar
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	89 4d e8	 mov	 DWORD PTR tv141[ebp], ecx
  0005d	8b 55 e8	 mov	 edx, DWORD PTR tv141[ebp]
  00060	83 c2 02	 add	 edx, 2
  00063	89 55 e4	 mov	 DWORD PTR tv144[ebp], edx
$LL6@RemoveChar:
  00066	8b 45 e8	 mov	 eax, DWORD PTR tv141[ebp]
  00069	66 8b 08	 mov	 cx, WORD PTR [eax]
  0006c	66 89 4d e2	 mov	 WORD PTR tv147[ebp], cx
  00070	83 45 e8 02	 add	 DWORD PTR tv141[ebp], 2
  00074	66 83 7d e2 00	 cmp	 WORD PTR tv147[ebp], 0
  00079	75 eb		 jne	 SHORT $LL6@RemoveChar
  0007b	8b 55 e8	 mov	 edx, DWORD PTR tv141[ebp]
  0007e	2b 55 e4	 sub	 edx, DWORD PTR tv144[ebp]
  00081	d1 fa		 sar	 edx, 1
  00083	89 55 dc	 mov	 DWORD PTR tv73[ebp], edx
  00086	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00089	3b 45 dc	 cmp	 eax, DWORD PTR tv73[ebp]
  0008c	7c 04		 jl	 SHORT $LN2@RemoveChar
$LN1@RemoveChar:
; Line 6387
  0008e	32 c0		 xor	 al, al
  00090	eb 6e		 jmp	 SHORT $LN3@RemoveChar
$LN2@RemoveChar:
; Line 6390
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 11		 mov	 edx, DWORD PTR [ecx]
  00097	89 55 d8	 mov	 DWORD PTR tv156[ebp], edx
  0009a	8b 45 d8	 mov	 eax, DWORD PTR tv156[ebp]
  0009d	83 c0 02	 add	 eax, 2
  000a0	89 45 d4	 mov	 DWORD PTR tv159[ebp], eax
$LL7@RemoveChar:
  000a3	8b 4d d8	 mov	 ecx, DWORD PTR tv156[ebp]
  000a6	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000a9	66 89 55 d2	 mov	 WORD PTR tv162[ebp], dx
  000ad	83 45 d8 02	 add	 DWORD PTR tv156[ebp], 2
  000b1	66 83 7d d2 00	 cmp	 WORD PTR tv162[ebp], 0
  000b6	75 eb		 jne	 SHORT $LL7@RemoveChar
  000b8	8b 45 d8	 mov	 eax, DWORD PTR tv156[ebp]
  000bb	2b 45 d4	 sub	 eax, DWORD PTR tv159[ebp]
  000be	d1 f8		 sar	 eax, 1
  000c0	89 45 cc	 mov	 DWORD PTR tv79[ebp], eax
  000c3	8b 4d cc	 mov	 ecx, DWORD PTR tv79[ebp]
  000c6	2b 4d 08	 sub	 ecx, DWORD PTR _nIndex$[ebp]
  000c9	d1 e1		 shl	 ecx, 1
  000cb	8b f4		 mov	 esi, esp
  000cd	51		 push	 ecx
  000ce	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d1	8b 02		 mov	 eax, DWORD PTR [edx]
  000d3	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  000d6	8d 54 48 02	 lea	 edx, DWORD PTR [eax+ecx*2+2]
  000da	52		 push	 edx
  000db	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000de	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e0	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  000e3	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
  000e6	50		 push	 eax
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f0	3b f4		 cmp	 esi, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 6391
  000f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
; Line 6392
  000fe	b0 01		 mov	 al, 1
$LN3@RemoveChar:
; Line 6393
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	83 c4 34	 add	 esp, 52			; 00000034H
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
?RemoveChar@CUniBuffer@@QAE_NH@Z ENDP			; CUniBuffer::RemoveChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv133 = -64						; size = 4
tv200 = -58						; size = 2
tv197 = -56						; size = 4
tv194 = -52						; size = 4
tv82 = -48						; size = 4
tv179 = -42						; size = 2
tv176 = -40						; size = 4
tv173 = -36						; size = 4
tv73 = -32						; size = 4
tv162 = -26						; size = 2
tv159 = -24						; size = 4
tv156 = -20						; size = 4
_src$ = -16						; size = 4
_stop$ = -12						; size = 4
_dest$ = -8						; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_wChar$ = 12						; size = 2
?InsertChar@CUniBuffer@@QAE_NH_W@Z PROC			; CUniBuffer::InsertChar
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6344
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  0000c	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6345
  0001c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00020	7d 21		 jge	 SHORT $LN10@InsertChar
  00022	8b f4		 mov	 esi, esp
  00024	68 c9 18 00 00	 push	 6345			; 000018c9H
  00029	68 00 00 00 00	 push	 OFFSET $SG164725
  0002e	68 00 00 00 00	 push	 OFFSET $SG164726
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN10@InsertChar:
; Line 6347
  00043	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00047	7c 39		 jl	 SHORT $LN6@InsertChar
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	89 55 ec	 mov	 DWORD PTR tv156[ebp], edx
  00051	8b 45 ec	 mov	 eax, DWORD PTR tv156[ebp]
  00054	83 c0 02	 add	 eax, 2
  00057	89 45 e8	 mov	 DWORD PTR tv159[ebp], eax
$LL12@InsertChar:
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR tv156[ebp]
  0005d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00060	66 89 55 e6	 mov	 WORD PTR tv162[ebp], dx
  00064	83 45 ec 02	 add	 DWORD PTR tv156[ebp], 2
  00068	66 83 7d e6 00	 cmp	 WORD PTR tv162[ebp], 0
  0006d	75 eb		 jne	 SHORT $LL12@InsertChar
  0006f	8b 45 ec	 mov	 eax, DWORD PTR tv156[ebp]
  00072	2b 45 e8	 sub	 eax, DWORD PTR tv159[ebp]
  00075	d1 f8		 sar	 eax, 1
  00077	89 45 e0	 mov	 DWORD PTR tv73[ebp], eax
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0007d	3b 4d e0	 cmp	 ecx, DWORD PTR tv73[ebp]
  00080	7e 07		 jle	 SHORT $LN7@InsertChar
$LN6@InsertChar:
; Line 6348
  00082	32 c0		 xor	 al, al
  00084	e9 32 01 00 00	 jmp	 $LN8@InsertChar
$LN7@InsertChar:
; Line 6351
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?GetTextSize@CUniBuffer@@QBEHXZ ; CUniBuffer::GetTextSize
  00091	83 c0 01	 add	 eax, 1
  00094	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00099	7c 07		 jl	 SHORT $LN5@InsertChar
; Line 6352
  0009b	32 c0		 xor	 al, al
  0009d	e9 19 01 00 00	 jmp	 $LN8@InsertChar
$LN5@InsertChar:
; Line 6354
  000a2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	8b 02		 mov	 eax, DWORD PTR [edx]
  000a7	89 45 dc	 mov	 DWORD PTR tv173[ebp], eax
  000aa	8b 4d dc	 mov	 ecx, DWORD PTR tv173[ebp]
  000ad	83 c1 02	 add	 ecx, 2
  000b0	89 4d d8	 mov	 DWORD PTR tv176[ebp], ecx
$LL13@InsertChar:
  000b3	8b 55 dc	 mov	 edx, DWORD PTR tv173[ebp]
  000b6	66 8b 02	 mov	 ax, WORD PTR [edx]
  000b9	66 89 45 d6	 mov	 WORD PTR tv179[ebp], ax
  000bd	83 45 dc 02	 add	 DWORD PTR tv173[ebp], 2
  000c1	66 83 7d d6 00	 cmp	 WORD PTR tv179[ebp], 0
  000c6	75 eb		 jne	 SHORT $LL13@InsertChar
  000c8	8b 4d dc	 mov	 ecx, DWORD PTR tv173[ebp]
  000cb	2b 4d d8	 sub	 ecx, DWORD PTR tv176[ebp]
  000ce	d1 f9		 sar	 ecx, 1
  000d0	89 4d d0	 mov	 DWORD PTR tv82[ebp], ecx
  000d3	8b 55 d0	 mov	 edx, DWORD PTR tv82[ebp]
  000d6	83 c2 01	 add	 edx, 1
  000d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dc	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000df	7c 18		 jl	 SHORT $LN4@InsertChar
; Line 6356
  000e1	6a ff		 push	 -1
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	e8 00 00 00 00	 call	 ?SetBufferSize@CUniBuffer@@QAE_NH@Z ; CUniBuffer::SetBufferSize
  000eb	0f b6 c8	 movzx	 ecx, al
  000ee	85 c9		 test	 ecx, ecx
  000f0	75 07		 jne	 SHORT $LN4@InsertChar
; Line 6357
  000f2	32 c0		 xor	 al, al
  000f4	e9 c2 00 00 00	 jmp	 $LN8@InsertChar
$LN4@InsertChar:
; Line 6360
  000f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fc	83 7a 04 02	 cmp	 DWORD PTR [edx+4], 2
  00100	7d 21		 jge	 SHORT $LN11@InsertChar
  00102	8b f4		 mov	 esi, esp
  00104	68 d8 18 00 00	 push	 6360			; 000018d8H
  00109	68 00 00 00 00	 push	 OFFSET $SG164735
  0010e	68 00 00 00 00	 push	 OFFSET $SG164736
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00119	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011c	3b f4		 cmp	 esi, esp
  0011e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@InsertChar:
; Line 6363
  00123	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00126	8b 11		 mov	 edx, DWORD PTR [ecx]
  00128	89 55 cc	 mov	 DWORD PTR tv194[ebp], edx
  0012b	8b 45 cc	 mov	 eax, DWORD PTR tv194[ebp]
  0012e	83 c0 02	 add	 eax, 2
  00131	89 45 c8	 mov	 DWORD PTR tv197[ebp], eax
$LL14@InsertChar:
  00134	8b 4d cc	 mov	 ecx, DWORD PTR tv194[ebp]
  00137	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0013a	66 89 55 c6	 mov	 WORD PTR tv200[ebp], dx
  0013e	83 45 cc 02	 add	 DWORD PTR tv194[ebp], 2
  00142	66 83 7d c6 00	 cmp	 WORD PTR tv200[ebp], 0
  00147	75 eb		 jne	 SHORT $LL14@InsertChar
  00149	8b 45 cc	 mov	 eax, DWORD PTR tv194[ebp]
  0014c	2b 45 c8	 sub	 eax, DWORD PTR tv197[ebp]
  0014f	d1 f8		 sar	 eax, 1
  00151	89 45 c0	 mov	 DWORD PTR tv133[ebp], eax
  00154	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	8b 11		 mov	 edx, DWORD PTR [ecx]
  00159	8b 45 c0	 mov	 eax, DWORD PTR tv133[ebp]
  0015c	8d 4c 42 02	 lea	 ecx, DWORD PTR [edx+eax*2+2]
  00160	89 4d f8	 mov	 DWORD PTR _dest$[ebp], ecx
; Line 6364
  00163	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00166	8b 02		 mov	 eax, DWORD PTR [edx]
  00168	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0016b	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  0016e	89 55 f4	 mov	 DWORD PTR _stop$[ebp], edx
; Line 6365
  00171	8b 45 f8	 mov	 eax, DWORD PTR _dest$[ebp]
  00174	83 e8 02	 sub	 eax, 2
  00177	89 45 f0	 mov	 DWORD PTR _src$[ebp], eax
$LN2@InsertChar:
; Line 6367
  0017a	8b 4d f8	 mov	 ecx, DWORD PTR _dest$[ebp]
  0017d	3b 4d f4	 cmp	 ecx, DWORD PTR _stop$[ebp]
  00180	76 20		 jbe	 SHORT $LN1@InsertChar
; Line 6369
  00182	8b 55 f8	 mov	 edx, DWORD PTR _dest$[ebp]
  00185	8b 45 f0	 mov	 eax, DWORD PTR _src$[ebp]
  00188	66 8b 08	 mov	 cx, WORD PTR [eax]
  0018b	66 89 0a	 mov	 WORD PTR [edx], cx
  0018e	8b 55 f8	 mov	 edx, DWORD PTR _dest$[ebp]
  00191	83 ea 02	 sub	 edx, 2
  00194	89 55 f8	 mov	 DWORD PTR _dest$[ebp], edx
  00197	8b 45 f0	 mov	 eax, DWORD PTR _src$[ebp]
  0019a	83 e8 02	 sub	 eax, 2
  0019d	89 45 f0	 mov	 DWORD PTR _src$[ebp], eax
; Line 6370
  001a0	eb d8		 jmp	 SHORT $LN2@InsertChar
$LN1@InsertChar:
; Line 6373
  001a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a7	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  001aa	66 8b 4d 0c	 mov	 cx, WORD PTR _wChar$[ebp]
  001ae	66 89 0c 42	 mov	 WORD PTR [edx+eax*2], cx
; Line 6374
  001b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001b5	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1
; Line 6376
  001b9	b0 01		 mov	 al, 1
$LN8@InsertChar:
; Line 6377
  001bb	5f		 pop	 edi
  001bc	5e		 pop	 esi
  001bd	83 c4 40	 add	 esp, 64			; 00000040H
  001c0	3b ec		 cmp	 ebp, esp
  001c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c7	8b e5		 mov	 esp, ebp
  001c9	5d		 pop	 ebp
  001ca	c2 08 00	 ret	 8
?InsertChar@CUniBuffer@@QAE_NH_W@Z ENDP			; CUniBuffer::InsertChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CUniBuffer@@QAEXXZ PROC				; CUniBuffer::Clear
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6334
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	33 d2		 xor	 edx, edx
  00015	66 89 11	 mov	 WORD PTR [ecx], dx
; Line 6335
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
; Line 6336
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?Clear@CUniBuffer@@QAEXXZ ENDP				; CUniBuffer::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pFontNode$ = 8						; size = 4
?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z PROC	; CUniBuffer::SetFontNode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1013
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pFontNode$[ebp]
  00014	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetFontNode@CUniBuffer@@QAEXPAUDXUTFontNode@@@Z ENDP	; CUniBuffer::SetFontNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
??ACUniBuffer@@QAEAA_WH@Z PROC				; CUniBuffer::operator[]
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6322
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6326
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
; Line 6327
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  0001d	8d 04 42	 lea	 eax, DWORD PTR [edx+eax*2]
; Line 6328
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??ACUniBuffer@@QAEAA_WH@Z ENDP				; CUniBuffer::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuffer@CUniBuffer@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBuffer@CUniBuffer@@QBEPB_WXZ PROC			; CUniBuffer::GetBuffer, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1004
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1005
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1006
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?GetBuffer@CUniBuffer@@QBEPB_WXZ ENDP			; CUniBuffer::GetBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTextSize@CUniBuffer@@QBEHXZ
_TEXT	SEGMENT
tv67 = -20						; size = 4
tv76 = -14						; size = 2
tv73 = -12						; size = 4
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?GetTextSize@CUniBuffer@@QBEHXZ PROC			; CUniBuffer::GetTextSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1002
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	89 4d f8	 mov	 DWORD PTR tv70[ebp], ecx
  00025	8b 55 f8	 mov	 edx, DWORD PTR tv70[ebp]
  00028	83 c2 02	 add	 edx, 2
  0002b	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LL3@GetTextSiz:
  0002e	8b 45 f8	 mov	 eax, DWORD PTR tv70[ebp]
  00031	66 8b 08	 mov	 cx, WORD PTR [eax]
  00034	66 89 4d f2	 mov	 WORD PTR tv76[ebp], cx
  00038	83 45 f8 02	 add	 DWORD PTR tv70[ebp], 2
  0003c	66 83 7d f2 00	 cmp	 WORD PTR tv76[ebp], 0
  00041	75 eb		 jne	 SHORT $LL3@GetTextSiz
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv70[ebp]
  00046	2b 55 f4	 sub	 edx, DWORD PTR tv73[ebp]
  00049	d1 fa		 sar	 edx, 1
  0004b	89 55 ec	 mov	 DWORD PTR tv67[ebp], edx
  0004e	8b 45 ec	 mov	 eax, DWORD PTR tv67[ebp]
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?GetTextSize@CUniBuffer@@QBEHXZ ENDP			; CUniBuffer::GetTextSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -28						; size = 4
tv76 = -24						; size = 4
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_pTempBuffer$ = -12					; size = 4
_nAllocateSize$ = -8					; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetBufferSize@CUniBuffer@@QAE_NH@Z PROC		; CUniBuffer::SetBufferSize
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6223
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6226
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	81 78 04 ff ff
	00 00		 cmp	 DWORD PTR [eax+4], 65535 ; 0000ffffH
  0002d	7c 07		 jl	 SHORT $LN4@SetBufferS
; Line 6227
  0002f	32 c0		 xor	 al, al
  00031	e9 e8 00 00 00	 jmp	 $LN5@SetBufferS
$LN4@SetBufferS:
; Line 6230
  00036	83 7d 08 ff	 cmp	 DWORD PTR _nNewSize$[ebp], -1
  0003a	74 17		 je	 SHORT $LN7@SetBufferS
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00042	d1 e2		 shl	 edx, 1
  00044	39 55 08	 cmp	 DWORD PTR _nNewSize$[ebp], edx
  00047	7c 0a		 jl	 SHORT $LN7@SetBufferS
  00049	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  0004c	d1 e0		 shl	 eax, 1
  0004e	89 45 e8	 mov	 DWORD PTR tv76[ebp], eax
  00051	eb 23		 jmp	 SHORT $LN10@SetBufferS
$LN7@SetBufferS:
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0005a	74 0d		 je	 SHORT $LN8@SetBufferS
  0005c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00062	d1 e0		 shl	 eax, 1
  00064	89 45 e4	 mov	 DWORD PTR tv74[ebp], eax
  00067	eb 07		 jmp	 SHORT $LN9@SetBufferS
$LN8@SetBufferS:
  00069	c7 45 e4 00 01
	00 00		 mov	 DWORD PTR tv74[ebp], 256 ; 00000100H
$LN9@SetBufferS:
  00070	8b 4d e4	 mov	 ecx, DWORD PTR tv74[ebp]
  00073	89 4d e8	 mov	 DWORD PTR tv76[ebp], ecx
$LN10@SetBufferS:
  00076	8b 55 e8	 mov	 edx, DWORD PTR tv76[ebp]
  00079	89 55 f8	 mov	 DWORD PTR _nAllocateSize$[ebp], edx
; Line 6233
  0007c	81 7d f8 ff ff
	00 00		 cmp	 DWORD PTR _nAllocateSize$[ebp], 65535 ; 0000ffffH
  00083	7e 07		 jle	 SHORT $LN3@SetBufferS
; Line 6234
  00085	c7 45 f8 ff ff
	00 00		 mov	 DWORD PTR _nAllocateSize$[ebp], 65535 ; 0000ffffH
$LN3@SetBufferS:
; Line 6236
  0008c	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00091	33 c9		 xor	 ecx, ecx
  00093	8b 45 f8	 mov	 eax, DWORD PTR _nAllocateSize$[ebp]
  00096	ba 02 00 00 00	 mov	 edx, 2
  0009b	f7 e2		 mul	 edx
  0009d	0f 90 c1	 seto	 cl
  000a0	f7 d9		 neg	 ecx
  000a2	0b c8		 or	 ecx, eax
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ??_U@YAPAXIABUnothrow_t@std@@@Z ; operator new[]
  000aa	83 c4 08	 add	 esp, 8
  000ad	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  000b0	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  000b3	89 45 f4	 mov	 DWORD PTR _pTempBuffer$[ebp], eax
; Line 6237
  000b6	83 7d f4 00	 cmp	 DWORD PTR _pTempBuffer$[ebp], 0
  000ba	75 04		 jne	 SHORT $LN2@SetBufferS
; Line 6238
  000bc	32 c0		 xor	 al, al
  000be	eb 5e		 jmp	 SHORT $LN5@SetBufferS
$LN2@SetBufferS:
; Line 6240
  000c0	8b 4d f8	 mov	 ecx, DWORD PTR _nAllocateSize$[ebp]
  000c3	d1 e1		 shl	 ecx, 1
  000c5	51		 push	 ecx
  000c6	6a 00		 push	 0
  000c8	8b 55 f4	 mov	 edx, DWORD PTR _pTempBuffer$[ebp]
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 _memset
  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 6242
  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	83 38 00	 cmp	 DWORD PTR [eax], 0
  000da	74 2f		 je	 SHORT $LN1@SetBufferS
; Line 6244
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e2	d1 e2		 shl	 edx, 1
  000e4	52		 push	 edx
  000e5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ea	51		 push	 ecx
  000eb	8b 55 f4	 mov	 edx, DWORD PTR _pTempBuffer$[ebp]
  000ee	52		 push	 edx
  000ef	e8 00 00 00 00	 call	 _memcpy
  000f4	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 6245
  000f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fc	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  000ff	8b 55 ec	 mov	 edx, DWORD PTR $T1[ebp]
  00102	52		 push	 edx
  00103	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00108	83 c4 04	 add	 esp, 4
$LN1@SetBufferS:
; Line 6248
  0010b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010e	8b 4d f4	 mov	 ecx, DWORD PTR _pTempBuffer$[ebp]
  00111	89 08		 mov	 DWORD PTR [eax], ecx
; Line 6249
  00113	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00116	8b 45 f8	 mov	 eax, DWORD PTR _nAllocateSize$[ebp]
  00119	89 42 04	 mov	 DWORD PTR [edx+4], eax
; Line 6250
  0011c	b0 01		 mov	 al, 1
$LN5@SetBufferS:
; Line 6251
  0011e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00121	3b ec		 cmp	 ebp, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 04 00	 ret	 4
?SetBufferSize@CUniBuffer@@QAE_NH@Z ENDP		; CUniBuffer::SetBufferSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBufferSize@CUniBuffer@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBufferSize@CUniBuffer@@QBEIXZ PROC			; CUniBuffer::GetBufferSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 1000
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetBufferSize@CUniBuffer@@QBEIXZ ENDP			; CUniBuffer::GetBufferSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1CUniBuffer@@QAE@XZ PROC				; CUniBuffer::~CUniBuffer
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6313
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6314
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  0001f	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00028	83 c4 04	 add	 esp, 4
; Line 6315
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00032	74 0c		 je	 SHORT $LN2@CUniBuffer
; Line 6316
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 10	 add	 ecx, 16			; 00000010H
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 _ScriptStringFree@4
$LN2@CUniBuffer:
; Line 6317
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??1CUniBuffer@@QAE@XZ ENDP				; CUniBuffer::~CUniBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nInitialSize$ = 8					; size = 4
??0CUniBuffer@@QAE@H@Z PROC				; CUniBuffer::CUniBuffer
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6299
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6300
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 6301
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 6302
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1
; Line 6303
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
; Line 6304
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 6306
  0003c	83 7d 08 00	 cmp	 DWORD PTR _nInitialSize$[ebp], 0
  00040	7e 0c		 jle	 SHORT $LN2@CUniBuffer
; Line 6307
  00042	8b 55 08	 mov	 edx, DWORD PTR _nInitialSize$[ebp]
  00045	52		 push	 edx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetBufferSize@CUniBuffer@@QAE_NH@Z ; CUniBuffer::SetBufferSize
$LN2@CUniBuffer:
; Line 6308
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	83 c4 04	 add	 esp, 4
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
??0CUniBuffer@@QAE@H@Z ENDP				; CUniBuffer::CUniBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTSlider@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTSlider@@UAEPAXI@Z PROC				; CDXUTSlider::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTSlider@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTSlider@@UAEPAXI@Z ENDP				; CDXUTSlider::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDXUTSlider@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDXUTSlider@@UAE@XZ PROC				; CDXUTSlider::~CDXUTSlider, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDXUTSlider@@UAE@XZ ENDP				; CDXUTSlider::~CDXUTSlider
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv136 = -12						; size = 4
_fValuePerPixel$ = -8					; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?ValueFromPos@CDXUTSlider@@IAEHH@Z PROC			; CDXUTSlider::ValueFromPos
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4210
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4211
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00027	2b 51 58	 sub	 edx, DWORD PTR [ecx+88]
  0002a	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 c0 44	 add	 eax, 68			; 00000044H
  00034	50		 push	 eax
  00035	f3 0f 11 45 f4	 movss	 DWORD PTR tv136[ebp], xmm0
  0003a	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  0003f	83 c4 04	 add	 esp, 4
  00042	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00046	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR tv136[ebp]
  0004b	f3 0f 5e c8	 divss	 xmm1, xmm0
  0004f	f3 0f 11 4d f8	 movss	 DWORD PTR _fValuePerPixel$[ebp], xmm1
; Line 4212
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	f3 0f 2a 41 58	 cvtsi2ss xmm0, DWORD PTR [ecx+88]
  0005c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00064	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0006a	2b 42 44	 sub	 eax, DWORD PTR [edx+68]
  0006d	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  00071	f3 0f 59 4d f8	 mulss	 xmm1, DWORD PTR _fValuePerPixel$[ebp]
  00076	f3 0f 58 c1	 addss	 xmm0, xmm1
  0007a	f3 0f 2c c0	 cvttss2si eax, xmm0
; Line 4213
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
?ValueFromPos@CDXUTSlider@@IAEHH@Z ENDP			; CDXUTSlider::ValueFromPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nValue$ = 8						; size = 4
_bFromInput$ = 12					; size = 1
?SetValueInternal@CDXUTSlider@@IAEXH_N@Z PROC		; CDXUTSlider::SetValueInternal
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4374
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4376
  0000f	8d 45 08	 lea	 eax, DWORD PTR _nValue$[ebp]
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 58	 add	 ecx, 88			; 00000058H
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  0001f	83 c4 08	 add	 esp, 8
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	89 55 08	 mov	 DWORD PTR _nValue$[ebp], edx
; Line 4377
  00027	8d 45 08	 lea	 eax, DWORD PTR _nValue$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  00037	83 c4 08	 add	 esp, 8
  0003a	8b 10		 mov	 edx, DWORD PTR [eax]
  0003c	89 55 08	 mov	 DWORD PTR _nValue$[ebp], edx
; Line 4379
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _nValue$[ebp]
  00045	3b 48 54	 cmp	 ecx, DWORD PTR [eax+84]
  00048	75 02		 jne	 SHORT $LN1@SetValueIn
; Line 4380
  0004a	eb 38		 jmp	 SHORT $LN2@SetValueIn
$LN1@SetValueIn:
; Line 4382
  0004c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	8b 45 08	 mov	 eax, DWORD PTR _nValue$[ebp]
  00052	89 42 54	 mov	 DWORD PTR [edx+84], eax
; Line 4383
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b f4		 mov	 esi, esp
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00062	ff d0		 call	 eax
  00064	3b f4		 cmp	 esi, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4385
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	51		 push	 ecx
  0006f	0f b6 55 0c	 movzx	 edx, BYTE PTR _bFromInput$[ebp]
  00073	52		 push	 edx
  00074	68 01 05 00 00	 push	 1281			; 00000501H
  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0007f	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN2@SetValueIn:
; Line 4386
  00084	5e		 pop	 esi
  00085	83 c4 04	 add	 esp, 4
  00088	3b ec		 cmp	 ebp, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 08 00	 ret	 8
?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ENDP		; CDXUTSlider::SetValueInternal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nMin$ = 8						; size = 4
_nMax$ = 12						; size = 4
?SetRange@CDXUTSlider@@QAEXHH@Z PROC			; CDXUTSlider::SetRange
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4364
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4365
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _nMin$[ebp]
  00014	89 48 58	 mov	 DWORD PTR [eax+88], ecx
; Line 4366
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _nMax$[ebp]
  0001d	89 42 5c	 mov	 DWORD PTR [edx+92], eax
; Line 4368
  00020	6a 00		 push	 0
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  00028	52		 push	 edx
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4369
  00031	83 c4 04	 add	 esp, 4
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?SetRange@CDXUTSlider@@QAEXHH@Z ENDP			; CDXUTSlider::SetRange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetValue@CDXUTSlider@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nValue$ = 8						; size = 4
?SetValue@CDXUTSlider@@QAEXH@Z PROC			; CDXUTSlider::SetValue, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 963
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR _nValue$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?SetValue@CDXUTSlider@@QAEXH@Z ENDP			; CDXUTSlider::SetValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv135 = -28						; size = 4
_pElement$ = -24					; size = 4
_fBlendRate$ = -20					; size = 4
_iState$ = -16						; size = 4
_nOffsetY$ = -12					; size = 4
_nOffsetX$ = -8						; size = 4
_this$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTSlider@@UAEXM@Z PROC			; CDXUTSlider::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4391
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4392
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0002a	85 c9		 test	 ecx, ecx
  0002c	75 05		 jne	 SHORT $LN10@Render
; Line 4393
  0002e	e9 75 01 00 00	 jmp	 $LN11@Render
$LN10@Render:
; Line 4395
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nOffsetX$[ebp], 0
; Line 4396
  0003a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nOffsetY$[ebp], 0
; Line 4398
  00041	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 0
; Line 4400
  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0004f	85 c0		 test	 eax, eax
  00051	75 09		 jne	 SHORT $LN9@Render
; Line 4402
  00053	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 2
  0005a	eb 6a		 jmp	 SHORT $LN1@Render
$LN9@Render:
; Line 4404
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00063	85 d2		 test	 edx, edx
  00065	75 09		 jne	 SHORT $LN7@Render
; Line 4406
  00067	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 1
  0006e	eb 56		 jmp	 SHORT $LN1@Render
$LN7@Render:
; Line 4408
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	0f b6 48 6c	 movzx	 ecx, BYTE PTR [eax+108]
  00077	85 c9		 test	 ecx, ecx
  00079	74 17		 je	 SHORT $LN5@Render
; Line 4410
  0007b	c7 45 f0 05 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 5
; Line 4412
  00082	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _nOffsetX$[ebp], 1
; Line 4413
  00089	c7 45 f4 02 00
	00 00		 mov	 DWORD PTR _nOffsetY$[ebp], 2
  00090	eb 34		 jmp	 SHORT $LN1@Render
$LN5@Render:
; Line 4415
  00092	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00095	0f b6 42 05	 movzx	 eax, BYTE PTR [edx+5]
  00099	85 c0		 test	 eax, eax
  0009b	74 17		 je	 SHORT $LN3@Render
; Line 4417
  0009d	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 4
; Line 4419
  000a4	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _nOffsetX$[ebp], -1
; Line 4420
  000ab	c7 45 f4 fe ff
	ff ff		 mov	 DWORD PTR _nOffsetY$[ebp], -2 ; fffffffeH
  000b2	eb 12		 jmp	 SHORT $LN1@Render
$LN3@Render:
; Line 4422
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	0f b6 51 06	 movzx	 edx, BYTE PTR [ecx+6]
  000bb	85 d2		 test	 edx, edx
  000bd	74 07		 je	 SHORT $LN1@Render
; Line 4424
  000bf	c7 45 f0 03 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 3
$LN1@Render:
; Line 4427
  000c6	83 7d f0 05	 cmp	 DWORD PTR _iState$[ebp], 5
  000ca	75 0f		 jne	 SHORT $LN13@Render
  000cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000d4	f3 0f 11 45 e4	 movss	 DWORD PTR tv135[ebp], xmm0
  000d9	eb 0d		 jmp	 SHORT $LN14@Render
$LN13@Render:
  000db	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  000e3	f3 0f 11 45 e4	 movss	 DWORD PTR tv135[ebp], xmm0
$LN14@Render:
  000e8	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv135[ebp]
  000ed	f3 0f 11 45 ec	 movss	 DWORD PTR _fBlendRate$[ebp], xmm0
; Line 4429
  000f2	6a 00		 push	 0
  000f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	83 c1 20	 add	 ecx, 32			; 00000020H
  000fa	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  000ff	8b 00		 mov	 eax, DWORD PTR [eax]
  00101	89 45 e8	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 4432
  00104	51		 push	 ecx
  00105	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  0010a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010f	51		 push	 ecx
  00110	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00115	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011a	8b 4d f0	 mov	 ecx, DWORD PTR _iState$[ebp]
  0011d	51		 push	 ecx
  0011e	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00121	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00124	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 4433
  00129	51		 push	 ecx
  0012a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00132	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00137	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0013a	83 c2 44	 add	 edx, 68			; 00000044H
  0013d	52		 push	 edx
  0013e	8b 45 e8	 mov	 eax, DWORD PTR _pElement$[ebp]
  00141	50		 push	 eax
  00142	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00145	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00148	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 4435
  0014d	6a 01		 push	 1
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	83 c1 20	 add	 ecx, 32			; 00000020H
  00155	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0015a	8b 10		 mov	 edx, DWORD PTR [eax]
  0015c	89 55 e8	 mov	 DWORD PTR _pElement$[ebp], edx
; Line 4438
  0015f	51		 push	 ecx
  00160	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00165	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016a	51		 push	 ecx
  0016b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00170	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00175	8b 45 f0	 mov	 eax, DWORD PTR _iState$[ebp]
  00178	50		 push	 eax
  00179	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0017c	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0017f	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 4439
  00184	51		 push	 ecx
  00185	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  0018d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00195	83 c1 70	 add	 ecx, 112		; 00000070H
  00198	51		 push	 ecx
  00199	8b 55 e8	 mov	 edx, DWORD PTR _pElement$[ebp]
  0019c	52		 push	 edx
  0019d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a0	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001a3	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
$LN11@Render:
; Line 4440
  001a8	83 c4 1c	 add	 esp, 28			; 0000001cH
  001ab	3b ec		 cmp	 ebp, esp
  001ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b2	8b e5		 mov	 esp, ebp
  001b4	5d		 pop	 ebp
  001b5	c2 04 00	 ret	 4
?Render@CDXUTSlider@@UAEXM@Z ENDP			; CDXUTSlider::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv196 = -8						; size = 4
_this$ = -4						; size = 4
?UpdateRects@CDXUTSlider@@UAEXXZ PROC			; CDXUTSlider::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4196
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4197
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?UpdateRects@CDXUTControl@@MAEXXZ ; CDXUTControl::UpdateRects
; Line 4199
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 c0 44	 add	 eax, 68			; 00000044H
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 70	 add	 ecx, 112		; 00000070H
  0002c	8b 10		 mov	 edx, DWORD PTR [eax]
  0002e	89 11		 mov	 DWORD PTR [ecx], edx
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00036	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00039	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0003c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0003f	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 4200
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 70	 add	 ecx, 112		; 00000070H
  00048	51		 push	 ecx
  00049	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  0004e	83 c4 04	 add	 esp, 4
  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	03 42 70	 add	 eax, DWORD PTR [edx+112]
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	89 41 78	 mov	 DWORD PTR [ecx+120], eax
; Line 4201
  0005d	8b f4		 mov	 esi, esp
  0005f	6a 00		 push	 0
  00061	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00064	83 c2 70	 add	 edx, 112		; 00000070H
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  0006d	83 c4 04	 add	 esp, 4
  00070	f7 d8		 neg	 eax
  00072	99		 cdq
  00073	2b c2		 sub	 eax, edx
  00075	d1 f8		 sar	 eax, 1
  00077	50		 push	 eax
  00078	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	83 c0 70	 add	 eax, 112		; 00000070H
  0007e	50		 push	 eax
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4203
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00092	8b 41 54	 mov	 eax, DWORD PTR [ecx+84]
  00095	2b 42 58	 sub	 eax, DWORD PTR [edx+88]
  00098	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	83 c1 44	 add	 ecx, 68			; 00000044H
  000a2	51		 push	 ecx
  000a3	f3 0f 11 45 f8	 movss	 DWORD PTR tv196[ebp], xmm0
  000a8	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  000ad	83 c4 04	 add	 esp, 4
  000b0	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000b4	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR tv196[ebp]
  000b9	f3 0f 59 c8	 mulss	 xmm1, xmm0
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 4a 5c	 mov	 ecx, DWORD PTR [edx+92]
  000c6	2b 48 58	 sub	 ecx, DWORD PTR [eax+88]
  000c9	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000cd	f3 0f 5e c8	 divss	 xmm1, xmm0
  000d1	f3 0f 2c d1	 cvttss2si edx, xmm1
  000d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	89 50 68	 mov	 DWORD PTR [eax+104], edx
; Line 4204
  000db	8b f4		 mov	 esi, esp
  000dd	6a 00		 push	 0
  000df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  000e5	52		 push	 edx
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	83 c0 70	 add	 eax, 112		; 00000070H
  000ec	50		 push	 eax
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  000f3	3b f4		 cmp	 esi, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4205
  000fa	5e		 pop	 esi
  000fb	83 c4 08	 add	 esp, 8
  000fe	3b ec		 cmp	 ebp, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
?UpdateRects@CDXUTSlider@@UAEXXZ ENDP			; CDXUTSlider::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -12						; size = 4
_nScrollAmount$1 = -8					; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTSlider@@UAE_NIABUtagPOINT@@IJ@Z PROC	; CDXUTSlider::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4274
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00026	85 c9		 test	 ecx, ecx
  00028	74 0b		 je	 SHORT $LN15@HandleMous
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00031	85 c0		 test	 eax, eax
  00033	75 07		 jne	 SHORT $LN16@HandleMous
$LN15@HandleMous:
; Line 4275
  00035	32 c0		 xor	 al, al
  00037	e9 0e 02 00 00	 jmp	 $LN17@HandleMous
$LN16@HandleMous:
; Line 4277
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003f	89 4d f4	 mov	 DWORD PTR tv78[ebp], ecx
  00042	8b 55 f4	 mov	 edx, DWORD PTR tv78[ebp]
  00045	81 ea 00 02 00
	00		 sub	 edx, 512		; 00000200H
  0004b	89 55 f4	 mov	 DWORD PTR tv78[ebp], edx
  0004e	83 7d f4 0a	 cmp	 DWORD PTR tv78[ebp], 10	; 0000000aH
  00052	0f 87 f0 01 00
	00		 ja	 $LN13@HandleMous
  00058	8b 45 f4	 mov	 eax, DWORD PTR tv78[ebp]
  0005b	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN19@HandleMous[eax]
  00062	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@HandleMous[ecx*4]
$LN12@HandleMous:
; Line 4282
  00069	8b f4		 mov	 esi, esp
  0006b	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  0006e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00071	50		 push	 eax
  00072	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00074	51		 push	 ecx
  00075	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00078	83 c2 70	 add	 edx, 112		; 00000070H
  0007b	52		 push	 edx
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	85 c0		 test	 eax, eax
  0008b	74 5a		 je	 SHORT $LN11@HandleMous
; Line 4285
  0008d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00090	c6 40 6c 01	 mov	 BYTE PTR [eax+108], 1
; Line 4286
  00094	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00099	8b f4		 mov	 esi, esp
  0009b	50		 push	 eax
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4288
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  000af	8b 02		 mov	 eax, DWORD PTR [edx]
  000b1	89 41 60	 mov	 DWORD PTR [ecx+96], eax
; Line 4290
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ba	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  000bd	2b 42 60	 sub	 eax, DWORD PTR [edx+96]
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	89 41 64	 mov	 DWORD PTR [ecx+100], eax
; Line 4294
  000c6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c9	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  000cd	85 c0		 test	 eax, eax
  000cf	75 0f		 jne	 SHORT $LN10@HandleMous
; Line 4295
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	51		 push	 ecx
  000d5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  000db	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN10@HandleMous:
; Line 4297
  000e0	b0 01		 mov	 al, 1
  000e2	e9 63 01 00 00	 jmp	 $LN17@HandleMous
$LN11@HandleMous:
; Line 4300
  000e7	8b f4		 mov	 esi, esp
  000e9	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  000ec	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ef	51		 push	 ecx
  000f0	8b 10		 mov	 edx, DWORD PTR [eax]
  000f2	52		 push	 edx
  000f3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f6	83 c0 44	 add	 eax, 68			; 00000044H
  000f9	50		 push	 eax
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00100	3b f4		 cmp	 esi, esp
  00102	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00107	85 c0		 test	 eax, eax
  00109	0f 84 92 00 00
	00		 je	 $LN9@HandleMous
; Line 4302
  0010f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  00115	8b 02		 mov	 eax, DWORD PTR [edx]
  00117	89 41 60	 mov	 DWORD PTR [ecx+96], eax
; Line 4303
  0011a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	c7 41 64 00 00
	00 00		 mov	 DWORD PTR [ecx+100], 0
; Line 4304
  00124	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00127	c6 42 6c 01	 mov	 BYTE PTR [edx+108], 1
; Line 4306
  0012b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00132	85 c9		 test	 ecx, ecx
  00134	75 0f		 jne	 SHORT $LN8@HandleMous
; Line 4307
  00136	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00139	52		 push	 edx
  0013a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00140	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN8@HandleMous:
; Line 4309
  00145	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  0014b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	03 50 08	 add	 edx, DWORD PTR [eax+8]
  00151	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  00154	39 11		 cmp	 DWORD PTR [ecx], edx
  00156	7e 1b		 jle	 SHORT $LN7@HandleMous
; Line 4311
  00158	6a 01		 push	 1
  0015a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0015d	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  00160	83 c0 01	 add	 eax, 1
  00163	50		 push	 eax
  00164	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4312
  0016c	b0 01		 mov	 al, 1
  0016e	e9 d7 00 00 00	 jmp	 $LN17@HandleMous
$LN7@HandleMous:
; Line 4315
  00173	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00176	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  00179	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017c	03 50 08	 add	 edx, DWORD PTR [eax+8]
  0017f	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  00182	39 11		 cmp	 DWORD PTR [ecx], edx
  00184	7d 1b		 jge	 SHORT $LN9@HandleMous
; Line 4317
  00186	6a 01		 push	 1
  00188	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0018b	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  0018e	83 e8 01	 sub	 eax, 1
  00191	50		 push	 eax
  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00195	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4318
  0019a	b0 01		 mov	 al, 1
  0019c	e9 a9 00 00 00	 jmp	 $LN17@HandleMous
$LN9@HandleMous:
; Line 4322
  001a1	e9 a2 00 00 00	 jmp	 $LN13@HandleMous
$LN5@HandleMous:
; Line 4327
  001a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a9	0f b6 51 6c	 movzx	 edx, BYTE PTR [ecx+108]
  001ad	85 d2		 test	 edx, edx
  001af	74 30		 je	 SHORT $LN4@HandleMous
; Line 4329
  001b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b4	c6 40 6c 00	 mov	 BYTE PTR [eax+108], 0
; Line 4330
  001b8	8b f4		 mov	 esi, esp
  001ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  001c0	3b f4		 cmp	 esi, esp
  001c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4331
  001c7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	51		 push	 ecx
  001cb	6a 01		 push	 1
  001cd	68 02 05 00 00	 push	 1282			; 00000502H
  001d2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d5	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  001d8	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 4333
  001dd	b0 01		 mov	 al, 1
  001df	eb 69		 jmp	 SHORT $LN17@HandleMous
$LN4@HandleMous:
; Line 4336
  001e1	eb 65		 jmp	 SHORT $LN13@HandleMous
$LN3@HandleMous:
; Line 4341
  001e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001e6	0f b6 48 6c	 movzx	 ecx, BYTE PTR [eax+108]
  001ea	85 c9		 test	 ecx, ecx
  001ec	74 29		 je	 SHORT $LN2@HandleMous
; Line 4343
  001ee	6a 01		 push	 1
  001f0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001f3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001f6	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  001f9	03 01		 add	 eax, DWORD PTR [ecx]
  001fb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001fe	03 42 64	 add	 eax, DWORD PTR [edx+100]
  00201	50		 push	 eax
  00202	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00205	e8 00 00 00 00	 call	 ?ValueFromPos@CDXUTSlider@@IAEHH@Z ; CDXUTSlider::ValueFromPos
  0020a	50		 push	 eax
  0020b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020e	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4344
  00213	b0 01		 mov	 al, 1
  00215	eb 33		 jmp	 SHORT $LN17@HandleMous
$LN2@HandleMous:
; Line 4347
  00217	eb 2f		 jmp	 SHORT $LN13@HandleMous
$LN1@HandleMous:
; Line 4352
  00219	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0021c	c1 e8 10	 shr	 eax, 16			; 00000010H
  0021f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00224	98		 cwde
  00225	99		 cdq
  00226	b9 78 00 00 00	 mov	 ecx, 120		; 00000078H
  0022b	f7 f9		 idiv	 ecx
  0022d	89 45 f8	 mov	 DWORD PTR _nScrollAmount$1[ebp], eax
; Line 4353
  00230	6a 01		 push	 1
  00232	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00235	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  00238	2b 45 f8	 sub	 eax, DWORD PTR _nScrollAmount$1[ebp]
  0023b	50		 push	 eax
  0023c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023f	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4354
  00244	b0 01		 mov	 al, 1
  00246	eb 02		 jmp	 SHORT $LN17@HandleMous
$LN13@HandleMous:
; Line 4358
  00248	32 c0		 xor	 al, al
$LN17@HandleMous:
; Line 4359
  0024a	5e		 pop	 esi
  0024b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0024e	3b ec		 cmp	 ebp, esp
  00250	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00255	8b e5		 mov	 esp, ebp
  00257	5d		 pop	 ebp
  00258	c2 10 00	 ret	 16			; 00000010H
  0025b	90		 npad	 1
$LN20@HandleMous:
  0025c	00 00 00 00	 DD	 $LN3@HandleMous
  00260	00 00 00 00	 DD	 $LN12@HandleMous
  00264	00 00 00 00	 DD	 $LN5@HandleMous
  00268	00 00 00 00	 DD	 $LN1@HandleMous
  0026c	00 00 00 00	 DD	 $LN13@HandleMous
$LN19@HandleMous:
  00270	00		 DB	 0
  00271	01		 DB	 1
  00272	02		 DB	 2
  00273	01		 DB	 1
  00274	04		 DB	 4
  00275	04		 DB	 4
  00276	04		 DB	 4
  00277	04		 DB	 4
  00278	04		 DB	 4
  00279	04		 DB	 4
  0027a	03		 DB	 3
?HandleMouse@CDXUTSlider@@UAE_NIABUtagPOINT@@IJ@Z ENDP	; CDXUTSlider::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv157 = -20						; size = 4
tv142 = -16						; size = 4
tv79 = -12						; size = 4
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTSlider@@UAE_NIIJ@Z PROC		; CDXUTSlider::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4219
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4222
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00024	85 c9		 test	 ecx, ecx
  00026	74 0b		 je	 SHORT $LN12@HandleKeyb
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0002f	85 c0		 test	 eax, eax
  00031	75 07		 jne	 SHORT $LN13@HandleKeyb
$LN12@HandleKeyb:
; Line 4223
  00033	32 c0		 xor	 al, al
  00035	e9 45 01 00 00	 jmp	 $LN14@HandleKeyb
$LN13@HandleKeyb:
; Line 4225
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003d	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  00040	81 7d f8 00 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 256 ; 00000100H
  00047	74 05		 je	 SHORT $LN9@HandleKeyb
  00049	e9 2f 01 00 00	 jmp	 $LN10@HandleKeyb
$LN9@HandleKeyb:
; Line 4229
  0004e	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00051	89 55 f4	 mov	 DWORD PTR tv79[ebp], edx
  00054	8b 45 f4	 mov	 eax, DWORD PTR tv79[ebp]
  00057	83 e8 21	 sub	 eax, 33			; 00000021H
  0005a	89 45 f4	 mov	 DWORD PTR tv79[ebp], eax
  0005d	83 7d f4 07	 cmp	 DWORD PTR tv79[ebp], 7
  00061	0f 87 16 01 00
	00		 ja	 $LN10@HandleKeyb
  00067	8b 4d f4	 mov	 ecx, DWORD PTR tv79[ebp]
  0006a	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@HandleKeyb[ecx*4]
$LN6@HandleKeyb:
; Line 4232
  00071	6a 01		 push	 1
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4233
  00082	b0 01		 mov	 al, 1
  00084	e9 f6 00 00 00	 jmp	 $LN14@HandleKeyb
$LN5@HandleKeyb:
; Line 4236
  00089	6a 01		 push	 1
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  00091	52		 push	 edx
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4237
  0009a	b0 01		 mov	 al, 1
  0009c	e9 de 00 00 00	 jmp	 $LN14@HandleKeyb
$LN4@HandleKeyb:
; Line 4241
  000a1	6a 01		 push	 1
  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  000a9	83 e9 01	 sub	 ecx, 1
  000ac	51		 push	 ecx
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4242
  000b5	b0 01		 mov	 al, 1
  000b7	e9 c3 00 00 00	 jmp	 $LN14@HandleKeyb
$LN3@HandleKeyb:
; Line 4246
  000bc	6a 01		 push	 1
  000be	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c1	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  000c4	83 c0 01	 add	 eax, 1
  000c7	50		 push	 eax
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4247
  000d0	b0 01		 mov	 al, 1
  000d2	e9 a8 00 00 00	 jmp	 $LN14@HandleKeyb
$LN2@HandleKeyb:
; Line 4251
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000dd	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  000e0	2b 42 58	 sub	 eax, DWORD PTR [edx+88]
  000e3	99		 cdq
  000e4	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  000e9	f7 f9		 idiv	 ecx
  000eb	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  000ee	7d 09		 jge	 SHORT $LN16@HandleKeyb
  000f0	c7 45 f0 0a 00
	00 00		 mov	 DWORD PTR tv142[ebp], 10 ; 0000000aH
  000f7	eb 19		 jmp	 SHORT $LN17@HandleKeyb
$LN16@HandleKeyb:
  000f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ff	8b 4a 5c	 mov	 ecx, DWORD PTR [edx+92]
  00102	2b 48 58	 sub	 ecx, DWORD PTR [eax+88]
  00105	8b c1		 mov	 eax, ecx
  00107	99		 cdq
  00108	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0010d	f7 f9		 idiv	 ecx
  0010f	89 45 f0	 mov	 DWORD PTR tv142[ebp], eax
$LN17@HandleKeyb:
  00112	6a 01		 push	 1
  00114	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00117	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  0011a	2b 45 f0	 sub	 eax, DWORD PTR tv142[ebp]
  0011d	50		 push	 eax
  0011e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4252
  00126	b0 01		 mov	 al, 1
  00128	eb 55		 jmp	 SHORT $LN14@HandleKeyb
$LN1@HandleKeyb:
; Line 4256
  0012a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00130	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00133	2b 42 58	 sub	 eax, DWORD PTR [edx+88]
  00136	99		 cdq
  00137	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0013c	f7 f9		 idiv	 ecx
  0013e	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00141	7d 09		 jge	 SHORT $LN18@HandleKeyb
  00143	c7 45 ec 0a 00
	00 00		 mov	 DWORD PTR tv157[ebp], 10 ; 0000000aH
  0014a	eb 19		 jmp	 SHORT $LN19@HandleKeyb
$LN18@HandleKeyb:
  0014c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0014f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00152	8b 4a 5c	 mov	 ecx, DWORD PTR [edx+92]
  00155	2b 48 58	 sub	 ecx, DWORD PTR [eax+88]
  00158	8b c1		 mov	 eax, ecx
  0015a	99		 cdq
  0015b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00160	f7 f9		 idiv	 ecx
  00162	89 45 ec	 mov	 DWORD PTR tv157[ebp], eax
$LN19@HandleKeyb:
  00165	6a 01		 push	 1
  00167	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0016a	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  0016d	03 45 ec	 add	 eax, DWORD PTR tv157[ebp]
  00170	50		 push	 eax
  00171	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	e8 00 00 00 00	 call	 ?SetValueInternal@CDXUTSlider@@IAEXH_N@Z ; CDXUTSlider::SetValueInternal
; Line 4257
  00179	b0 01		 mov	 al, 1
  0017b	eb 02		 jmp	 SHORT $LN14@HandleKeyb
$LN10@HandleKeyb:
; Line 4264
  0017d	32 c0		 xor	 al, al
$LN14@HandleKeyb:
; Line 4265
  0017f	83 c4 14	 add	 esp, 20			; 00000014H
  00182	3b ec		 cmp	 ebp, esp
  00184	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00189	8b e5		 mov	 esp, ebp
  0018b	5d		 pop	 ebp
  0018c	c2 0c 00	 ret	 12			; 0000000cH
  0018f	90		 npad	 1
$LN20@HandleKeyb:
  00190	00 00 00 00	 DD	 $LN1@HandleKeyb
  00194	00 00 00 00	 DD	 $LN2@HandleKeyb
  00198	00 00 00 00	 DD	 $LN5@HandleKeyb
  0019c	00 00 00 00	 DD	 $LN6@HandleKeyb
  001a0	00 00 00 00	 DD	 $LN4@HandleKeyb
  001a4	00 00 00 00	 DD	 $LN3@HandleKeyb
  001a8	00 00 00 00	 DD	 $LN3@HandleKeyb
  001ac	00 00 00 00	 DD	 $LN4@HandleKeyb
?HandleKeyboard@CDXUTSlider@@UAE_NIIJ@Z ENDP		; CDXUTSlider::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanHaveFocus@CDXUTSlider@@UAE_NXZ
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
?CanHaveFocus@CDXUTSlider@@UAE_NXZ PROC			; CDXUTSlider::CanHaveFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 953
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 954
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 14		 je	 SHORT $LN3@CanHaveFoc
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	0f b6 42 40	 movzx	 eax, BYTE PTR [edx+64]
  00029	85 c0		 test	 eax, eax
  0002b	74 09		 je	 SHORT $LN3@CanHaveFoc
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@CanHaveFoc
$LN3@CanHaveFoc:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@CanHaveFoc:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 955
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?CanHaveFocus@CDXUTSlider@@UAE_NXZ ENDP			; CDXUTSlider::CanHaveFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?ContainsPoint@CDXUTSlider@@UAE_NABUtagPOINT@@@Z PROC	; CDXUTSlider::ContainsPoint
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4188
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4190
  00018	8b f4		 mov	 esi, esp
  0001a	8b 45 08	 mov	 eax, DWORD PTR _pt$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	51		 push	 ecx
  00021	8b 10		 mov	 edx, DWORD PTR [eax]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c0 44	 add	 eax, 68			; 00000044H
  0002a	50		 push	 eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	85 c0		 test	 eax, eax
  0003a	75 2d		 jne	 SHORT $LN3@ContainsPo
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _pt$[ebp]
  00041	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00044	52		 push	 edx
  00045	8b 01		 mov	 eax, DWORD PTR [ecx]
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 70	 add	 ecx, 112		; 00000070H
  0004e	51		 push	 ecx
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	85 c0		 test	 eax, eax
  0005e	75 09		 jne	 SHORT $LN3@ContainsPo
  00060	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
  00067	eb 07		 jmp	 SHORT $LN4@ContainsPo
$LN3@ContainsPo:
  00069	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
$LN4@ContainsPo:
  00070	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 4191
  00073	5e		 pop	 esi
  00074	83 c4 08	 add	 esp, 8
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?ContainsPoint@CDXUTSlider@@UAE_NABUtagPOINT@@@Z ENDP	; CDXUTSlider::ContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDialog$ = 8						; size = 4
??0CDXUTSlider@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTSlider::CDXUTSlider
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z ; CDXUTControl::CDXUTControl
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTSlider@@6B@
; Line 4175
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 41 34 05 00
	00 00		 mov	 DWORD PTR [ecx+52], 5
; Line 4176
  0002b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00031	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 4178
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0
; Line 4179
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	c7 42 5c 64 00
	00 00		 mov	 DWORD PTR [edx+92], 100	; 00000064H
; Line 4180
  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c7 40 54 32 00
	00 00		 mov	 DWORD PTR [eax+84], 50	; 00000032H
; Line 4182
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	c6 41 6c 00	 mov	 BYTE PTR [ecx+108], 0
; Line 4183
  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	83 c4 04	 add	 esp, 4
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
??0CDXUTSlider@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTSlider::CDXUTSlider
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTComboBox@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTComboBox@@UAEPAXI@Z PROC			; CDXUTComboBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTComboBox@@UAE@XZ ; CDXUTComboBox::~CDXUTComboBox
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTComboBox@@UAEPAXI@Z ENDP			; CDXUTComboBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEII@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAUDXUTComboBoxItem@@@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEPAPAUDXUTComboBoxItem@@PAPAU2@00@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Umove<DXUTComboBoxItem * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBE_NPBQAUDXUTComboBoxItem@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBE_NPBQAUDXUTComboBoxItem@@@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBE_NPBQAUDXUTComboBoxItem@@@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTComboBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXXZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXXZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -32						; size = 4
tv181 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1438
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1441
  0004b	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00053	3b 45 f0	 cmp	 eax, DWORD PTR _this$[ebp]
  00056	75 16		 jne	 SHORT $LN1@erase
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0005e	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00061	72 0b		 jb	 SHORT $LN1@erase
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00069	3b 45 14	 cmp	 eax, DWORD PTR __Where$[ebp+8]
  0006c	77 21		 ja	 SHORT $LN2@erase
$LN1@erase:
; Line 1442
  0006e	8b f4		 mov	 esi, esp
  00070	68 a2 05 00 00	 push	 1442			; 000005a2H
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@erase:
; Line 1443
  0008f	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  00092	51		 push	 ecx
  00093	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00099	50		 push	 eax
  0009a	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0009d	83 c1 04	 add	 ecx, 4
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ??$_Move@PAPAUDXUTComboBoxItem@@PAPAU1@@std@@YAPAPAUDXUTComboBoxItem@@PAPAU1@00@Z ; std::_Move<DXUTComboBoxItem * *,DXUTComboBoxItem * *>
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1444
  000a9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000af	50		 push	 eax
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000b6	83 ea 04	 sub	 edx, 4
  000b9	52		 push	 edx
  000ba	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Destroy
; Line 1445
  000c2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c8	51		 push	 ecx
  000c9	8b 55 14	 mov	 edx, DWORD PTR __Where$[ebp+8]
  000cc	52		 push	 edx
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Orphan_range
; Line 1446
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000db	83 e9 04	 sub	 ecx, 4
  000de	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1447
  000e4	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000e7	8b cc		 mov	 ecx, esp
  000e9	89 65 ec	 mov	 DWORD PTR $T3[ebp], esp
  000ec	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  000f5	89 45 e4	 mov	 DWORD PTR tv181[ebp], eax
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000fb	51		 push	 ecx
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Make_iter
  00104	89 45 e0	 mov	 DWORD PTR tv182[ebp], eax
  00107	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  0010a	83 ca 01	 or	 edx, 1
  0010d	89 55 e8	 mov	 DWORD PTR $T2[ebp], edx
  00110	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00117	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0011a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
  0011f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1448
  00122	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00125	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012c	59		 pop	 ecx
  0012d	5e		 pop	 esi
  0012e	83 c4 20	 add	 esp, 32			; 00000020H
  00131	3b ec		 cmp	 ebp, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXABQAUDXUTComboBoxItem@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXABQAUDXUTComboBoxItem@@@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTComboBoxItem@@@std@@YAPBQAUDXUTComboBoxItem@@ABQAU1@@Z ; std::addressof<DXUTComboBoxItem * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBE_NPBQAUDXUTComboBoxItem@@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTComboBoxItem@@@std@@YAPBQAUDXUTComboBoxItem@@ABQAU1@@Z ; std::addressof<DXUTComboBoxItem * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAUDXUTComboBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IBEXPAPAUDXUTComboBoxItem@@0@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAUDXUTComboBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::construct<DXUTComboBoxItem *,DXUTComboBoxItem * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXABQAUDXUTComboBoxItem@@@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1MK@BPGBLFNH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAm?$AAb?$AAo?$AAB?$AAo?$AAx?$AAI@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1183
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1185
  00020	8b f4		 mov	 esi, esp
  00022	68 a1 04 00 00	 push	 1185			; 000004a1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 a2 04 00 00	 push	 1186			; 000004a2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 a2 04 00 00	 push	 1186			; 000004a2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1MK@BPGBLFNH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAm?$AAb?$AAo?$AAB?$AAo?$AAx?$AAI@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1193
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1194
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1044
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1045
  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0004b	51		 push	 ecx
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
  00054	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp]
  00057	83 ca 01	 or	 edx, 1
  0005a	89 55 ec	 mov	 DWORD PTR $T2[ebp], edx
  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00067	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
  0006c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1046
  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	83 c4 14	 add	 esp, 20			; 00000014H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Make_iter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTComboBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::~vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@IAEXXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::~vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTComboBoxItem@@@std@@QAE@XZ ; std::allocator<DXUTComboBoxItem *>::allocator<DXUTComboBoxItem *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTComboBoxItem@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >::~_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >::~_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTComboBoxItem@@@2@@Z ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ; std::allocator<DXUTComboBoxItem *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z ; std::allocator<DXUTComboBoxItem *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTComboBoxItem@@@std@@QAE@XZ ; std::allocator<DXUTComboBoxItem *>::allocator<DXUTComboBoxItem *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >::_Wrap_alloc<std::allocator<DXUTComboBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTComboBoxItem@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTComboBoxItem@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAUDXUTComboBoxItem@@@std@@QBEIXZ ; std::allocator<DXUTComboBoxItem *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTComboBoxItem@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUTComboBoxItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAUDXUTComboBoxItem@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUDXUTComboBoxItem@@@std@@QBEIXZ PROC ; std::allocator<DXUTComboBoxItem *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAUDXUTComboBoxItem@@@std@@QBEIXZ ENDP ; std::allocator<DXUTComboBoxItem *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU3@@Z PROC ; std::allocator<DXUTComboBoxItem *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@ABQAU3@@Z ENDP ; std::allocator<DXUTComboBoxItem *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z PROC ; std::allocator<DXUTComboBoxItem *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAUDXUTComboBoxItem@@@std@@YAPAPAUDXUTComboBoxItem@@IPAPAU1@@Z ; std::_Allocate<DXUTComboBoxItem *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEPAPAUDXUTComboBoxItem@@I@Z ENDP ; std::allocator<DXUTComboBoxItem *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z PROC ; std::allocator<DXUTComboBoxItem *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUDXUTComboBoxItem@@@std@@QAEXPAPAUDXUTComboBoxItem@@I@Z ENDP ; std::allocator<DXUTComboBoxItem *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAUDXUTComboBoxItem@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUDXUTComboBoxItem@@@std@@QAE@XZ PROC	; std::allocator<DXUTComboBoxItem *>::allocator<DXUTComboBoxItem *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAUDXUTComboBoxItem@@@std@@QAE@XZ ENDP	; std::allocator<DXUTComboBoxItem *>::allocator<DXUTComboBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pItem$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
?SetSelectedByData@CDXUTComboBox@@QAEJPAX@Z PROC	; CDXUTComboBox::SetSelectedByData
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4153
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@SetSelecte
$LN3@SetSelecte:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@SetSelecte:
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00039	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  0003e	39 45 f8	 cmp	 DWORD PTR _i$2[ebp], eax
  00041	73 59		 jae	 SHORT $LN2@SetSelecte
; Line 4155
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00046	51		 push	 ecx
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00050	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  00055	8b 10		 mov	 edx, DWORD PTR [eax]
  00057	89 55 f4	 mov	 DWORD PTR _pItem$1[ebp], edx
; Line 4157
  0005a	8b 45 f4	 mov	 eax, DWORD PTR _pItem$1[ebp]
  0005d	8b 88 00 02 00
	00		 mov	 ecx, DWORD PTR [eax+512]
  00063	3b 4d 08	 cmp	 ecx, DWORD PTR _pData$[ebp]
  00066	75 32		 jne	 SHORT $LN1@SetSelecte
; Line 4159
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0006e	89 82 60 02 00
	00		 mov	 DWORD PTR [edx+608], eax
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	8b 55 f8	 mov	 edx, DWORD PTR _i$2[ebp]
  0007a	89 91 64 02 00
	00		 mov	 DWORD PTR [ecx+612], edx
; Line 4160
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	50		 push	 eax
  00084	6a 00		 push	 0
  00086	68 01 02 00 00	 push	 513			; 00000201H
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00091	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 4161
  00096	33 c0		 xor	 eax, eax
  00098	eb 07		 jmp	 SHORT $LN5@SetSelecte
$LN1@SetSelecte:
; Line 4163
  0009a	eb 8b		 jmp	 SHORT $LN3@SetSelecte
$LN2@SetSelecte:
; Line 4165
  0009c	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
$LN5@SetSelecte:
; Line 4166
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a4	3b ec		 cmp	 ebp, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
?SetSelectedByData@CDXUTComboBox@@QAEJPAX@Z ENDP	; CDXUTComboBox::SetSelectedByData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_index$ = -8						; size = 4
_this$ = -4						; size = 4
_strText$ = 8						; size = 4
?SetSelectedByText@CDXUTComboBox@@QAEJPB_W@Z PROC	; CDXUTComboBox::SetSelectedByText
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4134
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4135
  00017	83 7d 08 00	 cmp	 DWORD PTR _strText$[ebp], 0
  0001b	75 07		 jne	 SHORT $LN2@SetSelecte
; Line 4136
  0001d	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00022	eb 4e		 jmp	 SHORT $LN3@SetSelecte
$LN2@SetSelecte:
; Line 4138
  00024	6a 00		 push	 0
  00026	8b 45 08	 mov	 eax, DWORD PTR _strText$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?FindItem@CDXUTComboBox@@QBEHPB_WI@Z ; CDXUTComboBox::FindItem
  00032	89 45 f8	 mov	 DWORD PTR _index$[ebp], eax
; Line 4139
  00035	83 7d f8 ff	 cmp	 DWORD PTR _index$[ebp], -1
  00039	75 07		 jne	 SHORT $LN1@SetSelecte
; Line 4140
  0003b	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00040	eb 30		 jmp	 SHORT $LN3@SetSelecte
$LN1@SetSelecte:
; Line 4142
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	8b 55 f8	 mov	 edx, DWORD PTR _index$[ebp]
  00048	89 91 60 02 00
	00		 mov	 DWORD PTR [ecx+608], edx
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _index$[ebp]
  00054	89 88 64 02 00
	00		 mov	 DWORD PTR [eax+612], ecx
; Line 4143
  0005a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	52		 push	 edx
  0005e	6a 00		 push	 0
  00060	68 01 02 00 00	 push	 513			; 00000201H
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006b	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 4145
  00070	33 c0		 xor	 eax, eax
$LN3@SetSelecte:
; Line 4146
  00072	83 c4 08	 add	 esp, 8
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?SetSelectedByText@CDXUTComboBox@@QAEJPB_W@Z ENDP	; CDXUTComboBox::SetSelectedByText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?SetSelectedByIndex@CDXUTComboBox@@QAEJI@Z PROC		; CDXUTComboBox::SetSelectedByIndex
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4121
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetNumItems@CDXUTComboBox@@QAEIXZ ; CDXUTComboBox::GetNumItems
  00016	39 45 08	 cmp	 DWORD PTR _index$[ebp], eax
  00019	72 07		 jb	 SHORT $LN1@SetSelecte
; Line 4122
  0001b	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00020	eb 30		 jmp	 SHORT $LN2@SetSelecte
$LN1@SetSelecte:
; Line 4124
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  00028	89 88 60 02 00
	00		 mov	 DWORD PTR [eax+608], ecx
  0002e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  00034	89 82 64 02 00
	00		 mov	 DWORD PTR [edx+612], eax
; Line 4125
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	68 01 02 00 00	 push	 513			; 00000201H
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0004b	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 4127
  00050	33 c0		 xor	 eax, eax
$LN2@SetSelecte:
; Line 4128
  00052	83 c4 04	 add	 esp, 4
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?SetSelectedByIndex@CDXUTComboBox@@QAEJI@Z ENDP		; CDXUTComboBox::SetSelectedByIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNumItems@CDXUTComboBox@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumItems@CDXUTComboBox@@QAEIXZ PROC			; CDXUTComboBox::GetNumItems, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 918
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00017	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?GetNumItems@CDXUTComboBox@@QAEIXZ ENDP			; CDXUTComboBox::GetNumItems
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSelectedItem@CDXUTComboBox@@QBEPAUDXUTComboBoxItem@@XZ PROC ; CDXUTComboBox::GetSelectedItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4080
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4081
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 b8 60 02 00
	00 00		 cmp	 DWORD PTR [eax+608], 0
  00018	7d 04		 jge	 SHORT $LN1@GetSelecte
; Line 4082
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 1a		 jmp	 SHORT $LN2@GetSelecte
$LN1@GetSelecte:
; Line 4084
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 91 60 02 00
	00		 mov	 edx, DWORD PTR [ecx+608]
  00027	52		 push	 edx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00031	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
$LN2@GetSelecte:
; Line 4085
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?GetSelectedItem@CDXUTComboBox@@QBEPAUDXUTComboBoxItem@@XZ ENDP ; CDXUTComboBox::GetSelectedItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pItem$ = -8						; size = 4
_this$ = -4						; size = 4
?GetSelectedData@CDXUTComboBox@@QBEPAXXZ PROC		; CDXUTComboBox::GetSelectedData
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4069
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4070
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 b8 60 02 00
	00 00		 cmp	 DWORD PTR [eax+608], 0
  00021	7d 04		 jge	 SHORT $LN1@GetSelecte
; Line 4071
  00023	33 c0		 xor	 eax, eax
  00025	eb 26		 jmp	 SHORT $LN2@GetSelecte
$LN1@GetSelecte:
; Line 4073
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 91 60 02 00
	00		 mov	 edx, DWORD PTR [ecx+608]
  00030	52		 push	 edx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  0003a	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  0003f	8b 00		 mov	 eax, DWORD PTR [eax]
  00041	89 45 f8	 mov	 DWORD PTR _pItem$[ebp], eax
; Line 4074
  00044	8b 4d f8	 mov	 ecx, DWORD PTR _pItem$[ebp]
  00047	8b 81 00 02 00
	00		 mov	 eax, DWORD PTR [ecx+512]
$LN2@GetSelecte:
; Line 4075
  0004d	83 c4 08	 add	 esp, 8
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?GetSelectedData@CDXUTComboBox@@QBEPAXXZ ENDP		; CDXUTComboBox::GetSelectedData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetItemData@CDXUTComboBox@@QBEPAXH@Z PROC		; CDXUTComboBox::GetItemData
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4110
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4111
  0000e	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00012	7c 13		 jl	 SHORT $LN1@GetItemDat
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  0001d	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00022	39 45 08	 cmp	 DWORD PTR _nIndex$[ebp], eax
  00025	7c 04		 jl	 SHORT $LN2@GetItemDat
$LN1@GetItemDat:
; Line 4112
  00027	33 c0		 xor	 eax, eax
  00029	eb 1a		 jmp	 SHORT $LN3@GetItemDat
$LN2@GetItemDat:
; Line 4114
  0002b	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00038	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 81 00 02 00
	00		 mov	 eax, DWORD PTR [ecx+512]
$LN3@GetItemDat:
; Line 4115
  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?GetItemData@CDXUTComboBox@@QBEPAXH@Z ENDP		; CDXUTComboBox::GetItemData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pItem$ = -12						; size = 4
_index$ = -8						; size = 4
_this$ = -4						; size = 4
_strText$ = 8						; size = 4
?GetItemData@CDXUTComboBox@@QBEPAXPB_W@Z PROC		; CDXUTComboBox::GetItemData
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4090
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4091
  0001e	6a 00		 push	 0
  00020	8b 45 08	 mov	 eax, DWORD PTR _strText$[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?FindItem@CDXUTComboBox@@QBEHPB_WI@Z ; CDXUTComboBox::FindItem
  0002c	89 45 f8	 mov	 DWORD PTR _index$[ebp], eax
; Line 4092
  0002f	83 7d f8 ff	 cmp	 DWORD PTR _index$[ebp], -1
  00033	75 04		 jne	 SHORT $LN2@GetItemDat
; Line 4094
  00035	33 c0		 xor	 eax, eax
  00037	eb 45		 jmp	 SHORT $LN3@GetItemDat
$LN2@GetItemDat:
; Line 4097
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _index$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00046	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  0004b	8b 10		 mov	 edx, DWORD PTR [eax]
  0004d	89 55 f4	 mov	 DWORD PTR _pItem$[ebp], edx
; Line 4098
  00050	83 7d f4 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  00054	75 1f		 jne	 SHORT $LN1@GetItemDat
; Line 4100
  00056	6a 00		 push	 0
  00058	68 00 00 00 00	 push	 OFFSET $SG163600
  0005d	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00062	68 04 10 00 00	 push	 4100			; 00001004H
  00067	68 00 00 00 00	 push	 OFFSET $SG163601
  0006c	e8 00 00 00 00	 call	 _DXTraceW@20
; Line 4101
  00071	33 c0		 xor	 eax, eax
  00073	eb 09		 jmp	 SHORT $LN3@GetItemDat
$LN1@GetItemDat:
; Line 4104
  00075	8b 45 f4	 mov	 eax, DWORD PTR _pItem$[ebp]
  00078	8b 80 00 02 00
	00		 mov	 eax, DWORD PTR [eax+512]
$LN3@GetItemDat:
; Line 4105
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
?GetItemData@CDXUTComboBox@@QBEPAXPB_W@Z ENDP		; CDXUTComboBox::GetItemData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -32						; size = 4
tv138 = -28						; size = 4
tv133 = -24						; size = 2
tv94 = -22						; size = 2
tv89 = -20						; size = 4
tv90 = -16						; size = 4
_pItem$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_strText$ = 8						; size = 4
_iStart$ = 12						; size = 4
?FindItem@CDXUTComboBox@@QBEHPB_WI@Z PROC		; CDXUTComboBox::FindItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4049
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000e	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00011	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00014	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00017	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001a	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001d	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00020	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00023	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4050
  00026	83 7d 08 00	 cmp	 DWORD PTR _strText$[ebp], 0
  0002a	75 08		 jne	 SHORT $LN5@FindItem
; Line 4051
  0002c	83 c8 ff	 or	 eax, -1
  0002f	e9 b1 00 00 00	 jmp	 $LN6@FindItem
$LN5@FindItem:
; Line 4053
  00034	8b 45 0c	 mov	 eax, DWORD PTR _iStart$[ebp]
  00037	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
  0003a	eb 09		 jmp	 SHORT $LN4@FindItem
$LN3@FindItem:
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  0003f	83 c1 01	 add	 ecx, 1
  00042	89 4d f8	 mov	 DWORD PTR _i$2[ebp], ecx
$LN4@FindItem:
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  0004e	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00053	39 45 f8	 cmp	 DWORD PTR _i$2[ebp], eax
  00056	0f 83 86 00 00
	00		 jae	 $LN2@FindItem
; Line 4055
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _i$2[ebp]
  0005f	52		 push	 edx
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00069	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEABQAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
  00070	89 45 f4	 mov	 DWORD PTR _pItem$1[ebp], eax
; Line 4057
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _strText$[ebp]
  00076	89 4d f0	 mov	 DWORD PTR tv90[ebp], ecx
  00079	8b 55 f4	 mov	 edx, DWORD PTR _pItem$1[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR tv89[ebp], edx
$LL8@FindItem:
  0007f	8b 45 ec	 mov	 eax, DWORD PTR tv89[ebp]
  00082	66 8b 08	 mov	 cx, WORD PTR [eax]
  00085	66 89 4d ea	 mov	 WORD PTR tv94[ebp], cx
  00089	8b 55 f0	 mov	 edx, DWORD PTR tv90[ebp]
  0008c	66 3b 0a	 cmp	 cx, WORD PTR [edx]
  0008f	75 33		 jne	 SHORT $LN9@FindItem
  00091	66 83 7d ea 00	 cmp	 WORD PTR tv94[ebp], 0
  00096	74 23		 je	 SHORT $LN10@FindItem
  00098	8b 45 ec	 mov	 eax, DWORD PTR tv89[ebp]
  0009b	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  0009f	66 89 4d e8	 mov	 WORD PTR tv133[ebp], cx
  000a3	8b 55 f0	 mov	 edx, DWORD PTR tv90[ebp]
  000a6	66 3b 4a 02	 cmp	 cx, WORD PTR [edx+2]
  000aa	75 18		 jne	 SHORT $LN9@FindItem
  000ac	83 45 ec 04	 add	 DWORD PTR tv89[ebp], 4
  000b0	83 45 f0 04	 add	 DWORD PTR tv90[ebp], 4
  000b4	66 83 7d e8 00	 cmp	 WORD PTR tv133[ebp], 0
  000b9	75 c4		 jne	 SHORT $LL8@FindItem
$LN10@FindItem:
  000bb	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
  000c2	eb 08		 jmp	 SHORT $LN11@FindItem
$LN9@FindItem:
  000c4	1b c0		 sbb	 eax, eax
  000c6	83 c8 01	 or	 eax, 1
  000c9	89 45 e4	 mov	 DWORD PTR tv138[ebp], eax
$LN11@FindItem:
  000cc	8b 4d e4	 mov	 ecx, DWORD PTR tv138[ebp]
  000cf	89 4d e0	 mov	 DWORD PTR tv78[ebp], ecx
  000d2	83 7d e0 00	 cmp	 DWORD PTR tv78[ebp], 0
  000d6	75 05		 jne	 SHORT $LN1@FindItem
; Line 4059
  000d8	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  000db	eb 08		 jmp	 SHORT $LN6@FindItem
$LN1@FindItem:
; Line 4061
  000dd	e9 5a ff ff ff	 jmp	 $LN3@FindItem
$LN2@FindItem:
; Line 4063
  000e2	83 c8 ff	 or	 eax, -1
$LN6@FindItem:
; Line 4064
  000e5	83 c4 20	 add	 esp, 32			; 00000020H
  000e8	3b ec		 cmp	 ebp, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 08 00	 ret	 8
?FindItem@CDXUTComboBox@@QBEHPB_WI@Z ENDP		; CDXUTComboBox::FindItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_strText$ = 8						; size = 4
_iStart$ = 12						; size = 4
?ContainsItem@CDXUTComboBox@@QAE_NPB_WI@Z PROC		; CDXUTComboBox::ContainsItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4042
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4043
  00017	8b 45 0c	 mov	 eax, DWORD PTR _iStart$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _strText$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?FindItem@CDXUTComboBox@@QBEHPB_WI@Z ; CDXUTComboBox::FindItem
  00027	83 f8 ff	 cmp	 eax, -1
  0002a	74 09		 je	 SHORT $LN3@ContainsIt
  0002c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00033	eb 07		 jmp	 SHORT $LN4@ContainsIt
$LN3@ContainsIt:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@ContainsIt:
  0003c	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
; Line 4044
  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?ContainsItem@CDXUTComboBox@@QAE_NPB_WI@Z ENDP		; CDXUTComboBox::ContainsItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv156 = -88						; size = 4
tv155 = -84						; size = 4
tv152 = -80						; size = 4
tv158 = -76						; size = 4
$T2 = -72						; size = 12
$T3 = -60						; size = 4
$T4 = -56						; size = 4
$T5 = -52						; size = 12
_pItem$ = -40						; size = 4
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
?RemoveItem@CDXUTComboBox@@QAEXI@Z PROC			; CDXUTComboBox::RemoveItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveItem@CDXUTComboBox@@QAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a8	 lea	 edi, DWORD PTR [ebp-88]
  00019	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4015
  0003a	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0003d	50		 push	 eax
  0003e	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00041	51		 push	 ecx
  00042	8d 55 cc	 lea	 edx, DWORD PTR $T5[ebp]
  00045	52		 push	 edx
  00046	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  0004f	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::begin
  00054	89 45 b4	 mov	 DWORD PTR tv158[ebp], eax
  00057	8b 45 b4	 mov	 eax, DWORD PTR tv158[ebp]
  0005a	89 45 b0	 mov	 DWORD PTR tv152[ebp], eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	8b 4d b0	 mov	 ecx, DWORD PTR tv152[ebp]
  00067	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator+
  0006c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00070	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  00073	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
; Line 4016
  00078	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  0007b	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTComboBoxItem@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d d8	 mov	 DWORD PTR _pItem$[ebp], ecx
; Line 4017
  00085	83 7d d8 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  00089	74 19		 je	 SHORT $LN2@RemoveItem
  0008b	8b 55 d8	 mov	 edx, DWORD PTR _pItem$[ebp]
  0008e	89 55 c8	 mov	 DWORD PTR $T4[ebp], edx
  00091	8b 45 c8	 mov	 eax, DWORD PTR $T4[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0009a	83 c4 04	 add	 esp, 4
  0009d	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pItem$[ebp], 0
$LN2@RemoveItem:
; Line 4018
  000a4	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000a7	8b cc		 mov	 ecx, esp
  000a9	89 65 c4	 mov	 DWORD PTR $T3[ebp], esp
  000ac	8d 55 e0	 lea	 edx, DWORD PTR _it$[ebp]
  000af	52		 push	 edx
  000b0	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  000b5	89 45 ac	 mov	 DWORD PTR tv155[ebp], eax
  000b8	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  000bb	50		 push	 eax
  000bc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  000c5	e8 00 00 00 00	 call	 ?erase@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::erase
  000ca	89 45 a8	 mov	 DWORD PTR tv156[ebp], eax
  000cd	8d 4d b8	 lea	 ecx, DWORD PTR $T2[ebp]
  000d0	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
; Line 4019
  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  000de	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  000e3	50		 push	 eax
  000e4	6a 00		 push	 0
  000e6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  000ef	e8 00 00 00 00	 call	 ?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ; CDXUTScrollBar::SetTrackRange
; Line 4020
  000f4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  000fd	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00102	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	39 81 60 02 00
	00		 cmp	 DWORD PTR [ecx+608], eax
  0010b	7c 1a		 jl	 SHORT $LN1@RemoveItem
; Line 4021
  0010d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00116	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  0011b	83 e8 01	 sub	 eax, 1
  0011e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00121	89 82 60 02 00
	00		 mov	 DWORD PTR [edx+608], eax
$LN1@RemoveItem:
; Line 4022
  00127	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0012e	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00131	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
  00136	52		 push	 edx
  00137	8b cd		 mov	 ecx, ebp
  00139	50		 push	 eax
  0013a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@RemoveItem
  00140	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00145	58		 pop	 eax
  00146	5a		 pop	 edx
  00147	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00151	59		 pop	 ecx
  00152	5f		 pop	 edi
  00153	83 c4 58	 add	 esp, 88			; 00000058H
  00156	3b ec		 cmp	 ebp, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	8b e5		 mov	 esp, ebp
  0015f	5d		 pop	 ebp
  00160	c2 04 00	 ret	 4
  00163	90		 npad	 1
$LN12@RemoveItem:
  00164	01 00 00 00	 DD	 1
  00168	00 00 00 00	 DD	 $LN11@RemoveItem
$LN11@RemoveItem:
  0016c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00170	0c 00 00 00	 DD	 12			; 0000000cH
  00174	00 00 00 00	 DD	 $LN9@RemoveItem
$LN9@RemoveItem:
  00178	69		 DB	 105			; 00000069H
  00179	74		 DB	 116			; 00000074H
  0017a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveItem@CDXUTComboBox@@QAEXI@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveItem@CDXUTComboBox@@QAEXI@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveItem@CDXUTComboBox@@QAEXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveItem@CDXUTComboBox@@QAEXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveItem@CDXUTComboBox@@QAEXI@Z ENDP			; CDXUTComboBox::RemoveItem
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv135 = -68						; size = 4
tv66 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 12
$T4 = -41						; size = 1
_pItem$5 = -40						; size = 4
_it$6 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RemoveAllItems@CDXUTComboBox@@QAEXXZ PROC		; CDXUTComboBox::RemoveAllItems
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4027
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveAllItems@CDXUTComboBox@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00019	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4028
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$6[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00047	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::begin
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	eb 08		 jmp	 SHORT $LN4@RemoveAllI
$LN3@RemoveAllI:
  00055	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00058	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator++
$LN4@RemoveAllI:
  0005d	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  0006a	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::end
  0006f	89 45 c0	 mov	 DWORD PTR tv66[ebp], eax
  00072	8b 55 c0	 mov	 edx, DWORD PTR tv66[ebp]
  00075	89 55 bc	 mov	 DWORD PTR tv135[ebp], edx
  00078	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007c	8b 45 bc	 mov	 eax, DWORD PTR tv135[ebp]
  0007f	50		 push	 eax
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00083	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator!=
  00088	88 45 d7	 mov	 BYTE PTR $T4[ebp], al
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008f	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00092	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
  00097	0f b6 4d d7	 movzx	 ecx, BYTE PTR $T4[ebp]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 2e		 je	 SHORT $LN2@RemoveAllI
; Line 4030
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000a2	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTComboBoxItem@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTComboBoxItem *> > >::operator*
  000a7	8b 10		 mov	 edx, DWORD PTR [eax]
  000a9	89 55 d8	 mov	 DWORD PTR _pItem$5[ebp], edx
; Line 4031
  000ac	83 7d d8 00	 cmp	 DWORD PTR _pItem$5[ebp], 0
  000b0	74 19		 je	 SHORT $LN1@RemoveAllI
  000b2	8b 45 d8	 mov	 eax, DWORD PTR _pItem$5[ebp]
  000b5	89 45 c4	 mov	 DWORD PTR $T2[ebp], eax
  000b8	8b 4d c4	 mov	 ecx, DWORD PTR $T2[ebp]
  000bb	51		 push	 ecx
  000bc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c1	83 c4 04	 add	 esp, 4
  000c4	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pItem$5[ebp], 0
$LN1@RemoveAllI:
  000cb	eb 88		 jmp	 SHORT $LN3@RemoveAllI
$LN2@RemoveAllI:
; Line 4032
  000cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d4	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000d7	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
; Line 4034
  000dc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  000e5	e8 00 00 00 00	 call	 ?clear@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::clear
; Line 4035
  000ea	6a 01		 push	 1
  000ec	6a 00		 push	 0
  000ee	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  000f7	e8 00 00 00 00	 call	 ?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ; CDXUTScrollBar::SetTrackRange
; Line 4036
  000fc	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000ff	c7 82 60 02 00
	00 ff ff ff ff	 mov	 DWORD PTR [edx+608], -1
  00109	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	c7 80 64 02 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+612], -1
; Line 4037
  00116	52		 push	 edx
  00117	8b cd		 mov	 ecx, ebp
  00119	50		 push	 eax
  0011a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@RemoveAllI
  00120	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00125	58		 pop	 eax
  00126	5a		 pop	 edx
  00127	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0012a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00131	59		 pop	 ecx
  00132	5f		 pop	 edi
  00133	83 c4 44	 add	 esp, 68			; 00000044H
  00136	3b ec		 cmp	 ebp, esp
  00138	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c3		 ret	 0
  00141	8d 49 00	 npad	 3
$LN12@RemoveAllI:
  00144	01 00 00 00	 DD	 1
  00148	00 00 00 00	 DD	 $LN11@RemoveAllI
$LN11@RemoveAllI:
  0014c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00150	0c 00 00 00	 DD	 12			; 0000000cH
  00154	00 00 00 00	 DD	 $LN9@RemoveAllI
$LN9@RemoveAllI:
  00158	69		 DB	 105			; 00000069H
  00159	74		 DB	 116			; 00000074H
  0015a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveAllItems@CDXUTComboBox@@QAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveAllItems@CDXUTComboBox@@QAEXXZ$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTComboBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveAllItems@CDXUTComboBox@@QAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveAllItems@CDXUTComboBox@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveAllItems@CDXUTComboBox@@QAEXXZ ENDP		; CDXUTComboBox::RemoveAllItems
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -20						; size = 4
_pItem$ = -12						; size = 4
_this$ = -4						; size = 4
_strText$ = 8						; size = 4
_pData$ = 12						; size = 4
?AddItem@CDXUTComboBox@@QAEJPB_WPAX@Z PROC		; CDXUTComboBox::AddItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3977
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3979
  0001e	83 7d 08 00	 cmp	 DWORD PTR _strText$[ebp], 0
  00022	75 0a		 jne	 SHORT $LN3@AddItem
; Line 3981
  00024	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00029	e9 ef 00 00 00	 jmp	 $LN4@AddItem
$LN3@AddItem:
; Line 3985
  0002e	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00033	68 18 02 00 00	 push	 536			; 00000218H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  0003d	83 c4 08	 add	 esp, 8
  00040	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00043	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00046	89 45 f4	 mov	 DWORD PTR _pItem$[ebp], eax
; Line 3986
  00049	83 7d f4 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  0004d	75 20		 jne	 SHORT $LN2@AddItem
; Line 3988
  0004f	6a 01		 push	 1
  00051	68 00 00 00 00	 push	 OFFSET $SG163371
  00056	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  0005b	68 94 0f 00 00	 push	 3988			; 00000f94H
  00060	68 00 00 00 00	 push	 OFFSET $SG163372
  00065	e8 00 00 00 00	 call	 _DXTraceW@20
  0006a	e9 ae 00 00 00	 jmp	 $LN4@AddItem
$LN2@AddItem:
; Line 3991
  0006f	68 18 02 00 00	 push	 536			; 00000218H
  00074	6a 00		 push	 0
  00076	8b 4d f4	 mov	 ecx, DWORD PTR _pItem$[ebp]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 _memset
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 3992
  00082	8b f4		 mov	 esi, esp
  00084	8b 55 08	 mov	 edx, DWORD PTR _strText$[ebp]
  00087	52		 push	 edx
  00088	68 00 01 00 00	 push	 256			; 00000100H
  0008d	8b 45 f4	 mov	 eax, DWORD PTR _pItem$[ebp]
  00090	50		 push	 eax
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3993
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _pItem$[ebp]
  000a4	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000a7	89 91 00 02 00
	00		 mov	 DWORD PTR [ecx+512], edx
; Line 3995
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _pItem$[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  000ba	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEXABQAUDXUTComboBoxItem@@@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::push_back
; Line 3998
  000bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  000c8	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  000cd	50		 push	 eax
  000ce	6a 00		 push	 0
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  000d9	e8 00 00 00 00	 call	 ?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ; CDXUTScrollBar::SetTrackRange
; Line 4001
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?GetNumItems@CDXUTComboBox@@QAEIXZ ; CDXUTComboBox::GetNumItems
  000e6	83 f8 01	 cmp	 eax, 1
  000e9	75 30		 jne	 SHORT $LN1@AddItem
; Line 4003
  000eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	c7 81 60 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+608], 0
; Line 4004
  000f8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fb	c7 82 64 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+612], 0
; Line 4005
  00105	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	68 01 02 00 00	 push	 513			; 00000201H
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00116	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN1@AddItem:
; Line 4008
  0011b	33 c0		 xor	 eax, eax
$LN4@AddItem:
; Line 4009
  0011d	52		 push	 edx
  0011e	8b cd		 mov	 ecx, ebp
  00120	50		 push	 eax
  00121	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@AddItem
  00127	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0012c	58		 pop	 eax
  0012d	5a		 pop	 edx
  0012e	5e		 pop	 esi
  0012f	83 c4 14	 add	 esp, 20			; 00000014H
  00132	3b ec		 cmp	 ebp, esp
  00134	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c2 08 00	 ret	 8
  0013f	90		 npad	 1
$LN8@AddItem:
  00140	01 00 00 00	 DD	 1
  00144	00 00 00 00	 DD	 $LN7@AddItem
$LN7@AddItem:
  00148	f4 ff ff ff	 DD	 -12			; fffffff4H
  0014c	04 00 00 00	 DD	 4
  00150	00 00 00 00	 DD	 $LN6@AddItem
$LN6@AddItem:
  00154	70		 DB	 112			; 00000070H
  00155	49		 DB	 73			; 00000049H
  00156	74		 DB	 116			; 00000074H
  00157	65		 DB	 101			; 00000065H
  00158	6d		 DB	 109			; 0000006dH
  00159	00		 DB	 0
?AddItem@CDXUTComboBox@@QAEJPB_WPAX@Z ENDP		; CDXUTComboBox::AddItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pFontNode$ = -8					; size = 4
_this$ = -4						; size = 4
?UpdateRects@CDXUTComboBox@@UAEXXZ PROC			; CDXUTComboBox::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3514
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3516
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?UpdateRects@CDXUTControl@@MAEXXZ ; CDXUTControl::UpdateRects
; Line 3518
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 c0 44	 add	 eax, 68			; 00000044H
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	81 c1 48 03 00
	00		 add	 ecx, 840		; 00000348H
  0002f	8b 10		 mov	 edx, DWORD PTR [eax]
  00031	89 11		 mov	 DWORD PTR [ecx], edx
  00033	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00036	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00039	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0003c	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0003f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00042	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 3519
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 48 03 00
	00		 add	 ecx, 840		; 00000348H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  00054	83 c4 04	 add	 esp, 4
  00057	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 8a 50 03 00
	00		 mov	 ecx, DWORD PTR [edx+848]
  00060	2b c8		 sub	 ecx, eax
  00062	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00065	89 8a 48 03 00
	00		 mov	 DWORD PTR [edx+840], ecx
; Line 3521
  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	83 c0 44	 add	 eax, 68			; 00000044H
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0007a	8b 10		 mov	 edx, DWORD PTR [eax]
  0007c	89 11		 mov	 DWORD PTR [ecx], edx
  0007e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00081	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00084	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00087	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0008a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0008d	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 3522
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 82 48 03 00
	00		 mov	 eax, DWORD PTR [edx+840]
  0009c	89 81 40 03 00
	00		 mov	 DWORD PTR [ecx+832], eax
; Line 3524
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  000ab	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ae	81 c2 58 03 00
	00		 add	 edx, 856		; 00000358H
  000b4	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b6	89 02		 mov	 DWORD PTR [edx], eax
  000b8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000bb	89 42 04	 mov	 DWORD PTR [edx+4], eax
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000c4	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  000c7	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
; Line 3525
  000ca	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cd	81 c2 38 03 00
	00		 add	 edx, 824		; 00000338H
  000d3	52		 push	 edx
  000d4	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  000d9	83 c4 04	 add	 esp, 4
  000dc	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000e0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f666666
  000e8	f3 0f 2c c0	 cvttss2si eax, xmm0
  000ec	8b f4		 mov	 esi, esp
  000ee	50		 push	 eax
  000ef	6a 00		 push	 0
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	81 c1 58 03 00
	00		 add	 ecx, 856		; 00000358H
  000fa	51		 push	 ecx
  000fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00101	3b f4		 cmp	 esi, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3526
  00108	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010b	8b 82 64 03 00
	00		 mov	 eax, DWORD PTR [edx+868]
  00111	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00114	03 81 68 02 00
	00		 add	 eax, DWORD PTR [ecx+616]
  0011a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0011d	89 82 64 03 00
	00		 mov	 DWORD PTR [edx+868], eax
; Line 3527
  00123	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00126	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00129	8b 90 60 03 00
	00		 mov	 edx, DWORD PTR [eax+864]
  0012f	2b 91 30 03 00
	00		 sub	 edx, DWORD PTR [ecx+816]
  00135	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00138	89 90 60 03 00
	00		 mov	 DWORD PTR [eax+864], edx
; Line 3529
  0013e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	81 c1 58 03 00
	00		 add	 ecx, 856		; 00000358H
  00147	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0014a	81 c2 68 03 00
	00		 add	 edx, 872		; 00000368H
  00150	8b 01		 mov	 eax, DWORD PTR [ecx]
  00152	89 02		 mov	 DWORD PTR [edx], eax
  00154	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00157	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0015a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015d	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00160	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00163	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
; Line 3530
  00166	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00169	81 c2 58 03 00
	00		 add	 edx, 856		; 00000358H
  0016f	52		 push	 edx
  00170	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  00175	83 c4 04	 add	 esp, 4
  00178	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0017c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  00184	f3 0f 2c c0	 cvttss2si eax, xmm0
  00188	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	03 81 68 03 00
	00		 add	 eax, DWORD PTR [ecx+872]
  00191	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00194	89 82 68 03 00
	00		 mov	 DWORD PTR [edx+872], eax
; Line 3531
  0019a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0019d	05 58 03 00 00	 add	 eax, 856		; 00000358H
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  001a8	83 c4 04	 add	 esp, 4
  001ab	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001af	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  001b7	f3 0f 2c c8	 cvttss2si ecx, xmm0
  001bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001be	8b 82 70 03 00
	00		 mov	 eax, DWORD PTR [edx+880]
  001c4	2b c1		 sub	 eax, ecx
  001c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c9	89 81 70 03 00
	00		 mov	 DWORD PTR [ecx+880], eax
; Line 3532
  001cf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d2	81 c2 58 03 00
	00		 add	 edx, 856		; 00000358H
  001d8	52		 push	 edx
  001d9	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  001de	83 c4 04	 add	 esp, 4
  001e1	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001e5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  001ed	f3 0f 2c c0	 cvttss2si eax, xmm0
  001f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f4	03 81 6c 03 00
	00		 add	 eax, DWORD PTR [ecx+876]
  001fa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001fd	89 82 6c 03 00
	00		 mov	 DWORD PTR [edx+876], eax
; Line 3533
  00203	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00206	05 58 03 00 00	 add	 eax, 856		; 00000358H
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  00211	83 c4 04	 add	 esp, 4
  00214	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00218	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  00220	f3 0f 2c c8	 cvttss2si ecx, xmm0
  00224	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00227	8b 82 74 03 00
	00		 mov	 eax, DWORD PTR [edx+884]
  0022d	2b c1		 sub	 eax, ecx
  0022f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00232	89 81 74 03 00
	00		 mov	 DWORD PTR [ecx+884], eax
; Line 3536
  00238	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0023b	8b 82 5c 03 00
	00		 mov	 eax, DWORD PTR [edx+860]
  00241	83 c0 02	 add	 eax, 2
  00244	50		 push	 eax
  00245	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00248	8b 91 60 03 00
	00		 mov	 edx, DWORD PTR [ecx+864]
  0024e	52		 push	 edx
  0024f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00252	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00258	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 3537
  0025d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00260	05 58 03 00 00	 add	 eax, 856		; 00000358H
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  0026b	83 c4 04	 add	 esp, 4
  0026e	83 e8 02	 sub	 eax, 2
  00271	50		 push	 eax
  00272	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00275	8b 91 30 03 00
	00		 mov	 edx, DWORD PTR [ecx+816]
  0027b	52		 push	 edx
  0027c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027f	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00285	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 3538
  0028a	6a 02		 push	 2
  0028c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0028f	83 c1 20	 add	 ecx, 32			; 00000020H
  00292	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00297	8b 00		 mov	 eax, DWORD PTR [eax]
  00299	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0029c	51		 push	 ecx
  0029d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002a0	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  002a3	e8 00 00 00 00	 call	 ?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ ; CDXUTDialog::GetManager
  002a8	8b c8		 mov	 ecx, eax
  002aa	e8 00 00 00 00	 call	 ?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialogResourceManager::GetFontNode
  002af	89 45 f8	 mov	 DWORD PTR _pFontNode$[ebp], eax
; Line 3539
  002b2	83 7d f8 00	 cmp	 DWORD PTR _pFontNode$[ebp], 0
  002b6	74 4f		 je	 SHORT $LN1@UpdateRect
  002b8	8b 45 f8	 mov	 eax, DWORD PTR _pFontNode$[ebp]
  002bb	83 b8 08 02 00
	00 00		 cmp	 DWORD PTR [eax+520], 0
  002c2	74 43		 je	 SHORT $LN1@UpdateRect
; Line 3541
  002c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c7	81 c1 68 03 00
	00		 add	 ecx, 872		; 00000368H
  002cd	51		 push	 ecx
  002ce	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  002d3	83 c4 04	 add	 esp, 4
  002d6	8b 4d f8	 mov	 ecx, DWORD PTR _pFontNode$[ebp]
  002d9	99		 cdq
  002da	f7 b9 08 02 00
	00		 idiv	 DWORD PTR [ecx+520]
  002e0	50		 push	 eax
  002e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e4	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  002ea	e8 00 00 00 00	 call	 ?SetPageSize@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::SetPageSize
; Line 3545
  002ef	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002f2	8b 82 60 02 00
	00		 mov	 eax, DWORD PTR [edx+608]
  002f8	50		 push	 eax
  002f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fc	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00302	e8 00 00 00 00	 call	 ?ShowItem@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::ShowItem
$LN1@UpdateRect:
; Line 3547
  00307	5e		 pop	 esi
  00308	83 c4 08	 add	 esp, 8
  0030b	3b ec		 cmp	 ebp, esp
  0030d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00312	8b e5		 mov	 esp, ebp
  00314	5d		 pop	 ebp
  00315	c3		 ret	 0
?UpdateRects@CDXUTComboBox@@UAEXXZ ENDP			; CDXUTComboBox::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv344 = -108						; size = 4
_pItem$1 = -104						; size = 4
_rcWindow$ = -96					; size = 16
_fBlendRate$ = -76					; size = 4
_nOffsetY$ = -72					; size = 4
_nOffsetX$ = -68					; size = 4
_rc$2 = -60						; size = 16
_pItem$3 = -40						; size = 4
_i$4 = -36						; size = 4
_nRemainingHeight$5 = -32				; size = 4
_curY$6 = -28						; size = 4
_pFont$ = -24						; size = 4
_pSelectionElement$ = -20				; size = 4
_pElement$ = -16					; size = 4
_iState$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTComboBox@@UAEXM@Z PROC			; CDXUTComboBox::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3830
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 94	 lea	 edi, DWORD PTR [ebp-108]
  0000c	b9 1b 00 00 00	 mov	 ecx, 27			; 0000001bH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3831
  00026	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00029	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0002d	85 c9		 test	 ecx, ecx
  0002f	75 05		 jne	 SHORT $LN26@Render
; Line 3832
  00031	e9 db 05 00 00	 jmp	 $LN27@Render
$LN26@Render:
; Line 3834
  00036	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 0
; Line 3836
  0003d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00040	0f b6 82 34 03
	00 00		 movzx	 eax, BYTE PTR [edx+820]
  00047	85 c0		 test	 eax, eax
  00049	75 07		 jne	 SHORT $LN25@Render
; Line 3837
  0004b	c7 45 f4 02 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 2
$LN25@Render:
; Line 3840
  00052	6a 02		 push	 2
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	83 c1 20	 add	 ecx, 32			; 00000020H
  0005a	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0005f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00061	89 4d f0	 mov	 DWORD PTR _pElement$[ebp], ecx
; Line 3845
  00064	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?bSBInit@?5??Render@CDXUTComboBox@@UAEXM@Z@4_NA
  0006b	85 d2		 test	 edx, edx
  0006d	0f 85 92 00 00
	00		 jne	 $LN24@Render
; Line 3848
  00073	8b 45 f0	 mov	 eax, DWORD PTR _pElement$[ebp]
  00076	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00079	51		 push	 ecx
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00080	e8 00 00 00 00	 call	 ?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ ; CDXUTDialog::GetManager
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialogResourceManager::GetFontNode
  0008c	83 b8 08 02 00
	00 00		 cmp	 DWORD PTR [eax+520], 0
  00093	74 48		 je	 SHORT $LN23@Render
; Line 3850
  00095	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00098	05 68 03 00 00	 add	 eax, 872		; 00000368H
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b f0		 mov	 esi, eax
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	52		 push	 edx
  000af	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b5	e8 00 00 00 00	 call	 ?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ ; CDXUTDialog::GetManager
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialogResourceManager::GetFontNode
  000c1	8b c8		 mov	 ecx, eax
  000c3	8b c6		 mov	 eax, esi
  000c5	99		 cdq
  000c6	f7 b9 08 02 00
	00		 idiv	 DWORD PTR [ecx+520]
  000cc	50		 push	 eax
  000cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  000d6	e8 00 00 00 00	 call	 ?SetPageSize@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::SetPageSize
; Line 3851
  000db	eb 21		 jmp	 SHORT $LN22@Render
$LN23@Render:
; Line 3852
  000dd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	81 c2 68 03 00
	00		 add	 edx, 872		; 00000368H
  000e6	52		 push	 edx
  000e7	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  000ec	83 c4 04	 add	 esp, 4
  000ef	50		 push	 eax
  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  000f9	e8 00 00 00 00	 call	 ?SetPageSize@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::SetPageSize
$LN22@Render:
; Line 3853
  000fe	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bSBInit@?5??Render@CDXUTComboBox@@UAEXM@Z@4_NA, 1
$LN24@Render:
; Line 3857
  00105	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00108	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  0010f	85 c9		 test	 ecx, ecx
  00111	74 2b		 je	 SHORT $LN21@Render
; Line 3858
  00113	8b f4		 mov	 esi, esp
  00115	51		 push	 ecx
  00116	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0011b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00120	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00123	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00129	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0012c	8b 82 70 02 00
	00		 mov	 eax, DWORD PTR [edx+624]
  00132	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00135	ff d2		 call	 edx
  00137	3b f4		 cmp	 esi, esp
  00139	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN21@Render:
; Line 3861
  0013e	51		 push	 ecx
  0013f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00147	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014c	51		 push	 ecx
  0014d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00152	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00157	8b 45 f4	 mov	 eax, DWORD PTR _iState$[ebp]
  0015a	50		 push	 eax
  0015b	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0015e	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00161	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3862
  00166	51		 push	 ecx
  00167	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  0016f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00174	51		 push	 ecx
  00175	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0017a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017f	8b 4d f4	 mov	 ecx, DWORD PTR _iState$[ebp]
  00182	51		 push	 ecx
  00183	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00186	83 c1 44	 add	 ecx, 68			; 00000044H
  00189	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3864
  0018e	51		 push	 ecx
  0018f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  00197	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0019f	81 c2 58 03 00
	00		 add	 edx, 856		; 00000358H
  001a5	52		 push	 edx
  001a6	8b 45 f0	 mov	 eax, DWORD PTR _pElement$[ebp]
  001a9	50		 push	 eax
  001aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  001b0	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 3867
  001b5	6a 03		 push	 3
  001b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 20	 add	 ecx, 32			; 00000020H
  001bd	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	89 55 ec	 mov	 DWORD PTR _pSelectionElement$[ebp], edx
; Line 3868
  001c7	8b 45 f0	 mov	 eax, DWORD PTR _pElement$[ebp]
  001ca	83 c0 34	 add	 eax, 52			; 00000034H
  001cd	50		 push	 eax
  001ce	8b 4d ec	 mov	 ecx, DWORD PTR _pSelectionElement$[ebp]
  001d1	83 c1 34	 add	 ecx, 52			; 00000034H
  001d4	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 3869
  001d9	b9 04 00 00 00	 mov	 ecx, 4
  001de	6b d1 00	 imul	 edx, ecx, 0
  001e1	8b 45 ec	 mov	 eax, DWORD PTR _pSelectionElement$[ebp]
  001e4	8b 4c 10 44	 mov	 ecx, DWORD PTR [eax+edx+68]
  001e8	51		 push	 ecx
  001e9	8b 4d ec	 mov	 ecx, DWORD PTR _pSelectionElement$[ebp]
  001ec	83 c1 44	 add	 ecx, 68			; 00000044H
  001ef	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 3871
  001f4	8b 55 f0	 mov	 edx, DWORD PTR _pElement$[ebp]
  001f7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001fa	50		 push	 eax
  001fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00201	e8 00 00 00 00	 call	 ?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialog::GetFont
  00206	89 45 e8	 mov	 DWORD PTR _pFont$[ebp], eax
; Line 3872
  00209	83 7d e8 00	 cmp	 DWORD PTR _pFont$[ebp], 0
  0020d	0f 84 a9 01 00
	00		 je	 $LN17@Render
; Line 3874
  00213	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00216	8b 82 6c 03 00
	00		 mov	 eax, DWORD PTR [edx+876]
  0021c	89 45 e4	 mov	 DWORD PTR _curY$6[ebp], eax
; Line 3875
  0021f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00222	81 c1 68 03 00
	00		 add	 ecx, 872		; 00000368H
  00228	51		 push	 ecx
  00229	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  0022e	83 c4 04	 add	 esp, 4
  00231	89 45 e0	 mov	 DWORD PTR _nRemainingHeight$5[ebp], eax
; Line 3877
  00234	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00237	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  0023d	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00242	89 45 dc	 mov	 DWORD PTR _i$4[ebp], eax
  00245	eb 09		 jmp	 SHORT $LN19@Render
$LN18@Render:
  00247	8b 55 dc	 mov	 edx, DWORD PTR _i$4[ebp]
  0024a	83 c2 01	 add	 edx, 1
  0024d	89 55 dc	 mov	 DWORD PTR _i$4[ebp], edx
$LN19@Render:
  00250	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00253	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00259	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  0025e	39 45 dc	 cmp	 DWORD PTR _i$4[ebp], eax
  00261	0f 83 55 01 00
	00		 jae	 $LN17@Render
; Line 3879
  00267	8b 45 dc	 mov	 eax, DWORD PTR _i$4[ebp]
  0026a	50		 push	 eax
  0026b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026e	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00274	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  00279	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027b	89 4d d8	 mov	 DWORD PTR _pItem$3[ebp], ecx
; Line 3882
  0027e	8b 55 e8	 mov	 edx, DWORD PTR _pFont$[ebp]
  00281	8b 45 e0	 mov	 eax, DWORD PTR _nRemainingHeight$5[ebp]
  00284	2b 82 08 02 00
	00		 sub	 eax, DWORD PTR [edx+520]
  0028a	89 45 e0	 mov	 DWORD PTR _nRemainingHeight$5[ebp], eax
; Line 3883
  0028d	79 0c		 jns	 SHORT $LN16@Render
; Line 3885
  0028f	8b 4d d8	 mov	 ecx, DWORD PTR _pItem$3[ebp]
  00292	c6 81 14 02 00
	00 00		 mov	 BYTE PTR [ecx+532], 0
; Line 3886
  00299	eb ac		 jmp	 SHORT $LN18@Render
$LN16@Render:
; Line 3889
  0029b	8b 55 e8	 mov	 edx, DWORD PTR _pFont$[ebp]
  0029e	8b 45 e4	 mov	 eax, DWORD PTR _curY$6[ebp]
  002a1	03 82 08 02 00
	00		 add	 eax, DWORD PTR [edx+520]
  002a7	8b f4		 mov	 esi, esp
  002a9	50		 push	 eax
  002aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002ad	8b 91 70 03 00
	00		 mov	 edx, DWORD PTR [ecx+880]
  002b3	52		 push	 edx
  002b4	8b 45 e4	 mov	 eax, DWORD PTR _curY$6[ebp]
  002b7	50		 push	 eax
  002b8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002bb	8b 91 68 03 00
	00		 mov	 edx, DWORD PTR [ecx+872]
  002c1	52		 push	 edx
  002c2	8b 45 d8	 mov	 eax, DWORD PTR _pItem$3[ebp]
  002c5	05 04 02 00 00	 add	 eax, 516		; 00000204H
  002ca	50		 push	 eax
  002cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  002d1	3b f4		 cmp	 esi, esp
  002d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3890
  002d8	8b 4d e8	 mov	 ecx, DWORD PTR _pFont$[ebp]
  002db	8b 55 e4	 mov	 edx, DWORD PTR _curY$6[ebp]
  002de	03 91 08 02 00
	00		 add	 edx, DWORD PTR [ecx+520]
  002e4	89 55 e4	 mov	 DWORD PTR _curY$6[ebp], edx
; Line 3892
  002e7	8b 45 d8	 mov	 eax, DWORD PTR _pItem$3[ebp]
  002ea	c6 80 14 02 00
	00 01		 mov	 BYTE PTR [eax+532], 1
; Line 3894
  002f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f4	0f b6 91 34 03
	00 00		 movzx	 edx, BYTE PTR [ecx+820]
  002fb	85 d2		 test	 edx, edx
  002fd	0f 84 b4 00 00
	00		 je	 $LN13@Render
; Line 3896
  00303	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00306	8b 4d dc	 mov	 ecx, DWORD PTR _i$4[ebp]
  00309	3b 88 64 02 00
	00		 cmp	 ecx, DWORD PTR [eax+612]
  0030f	0f 85 82 00 00
	00		 jne	 $LN14@Render
; Line 3900
  00315	8b 55 d8	 mov	 edx, DWORD PTR _pItem$3[ebp]
  00318	8b 82 10 02 00
	00		 mov	 eax, DWORD PTR [edx+528]
  0031e	83 c0 02	 add	 eax, 2
  00321	8b f4		 mov	 esi, esp
  00323	50		 push	 eax
  00324	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00327	8b 91 60 03 00
	00		 mov	 edx, DWORD PTR [ecx+864]
  0032d	52		 push	 edx
  0032e	8b 45 d8	 mov	 eax, DWORD PTR _pItem$3[ebp]
  00331	8b 88 08 02 00
	00		 mov	 ecx, DWORD PTR [eax+520]
  00337	51		 push	 ecx
  00338	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0033b	8b 82 58 03 00
	00		 mov	 eax, DWORD PTR [edx+856]
  00341	50		 push	 eax
  00342	8d 4d c4	 lea	 ecx, DWORD PTR _rc$2[ebp]
  00345	51		 push	 ecx
  00346	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0034c	3b f4		 cmp	 esi, esp
  0034e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3901
  00353	51		 push	 ecx
  00354	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  0035c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00361	8d 55 c4	 lea	 edx, DWORD PTR _rc$2[ebp]
  00364	52		 push	 edx
  00365	8b 45 ec	 mov	 eax, DWORD PTR _pSelectionElement$[ebp]
  00368	50		 push	 eax
  00369	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0036c	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0036f	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 3902
  00374	6a 00		 push	 0
  00376	6a 00		 push	 0
  00378	8b 55 d8	 mov	 edx, DWORD PTR _pItem$3[ebp]
  0037b	81 c2 04 02 00
	00		 add	 edx, 516		; 00000204H
  00381	52		 push	 edx
  00382	8b 45 ec	 mov	 eax, DWORD PTR _pSelectionElement$[ebp]
  00385	50		 push	 eax
  00386	8b 4d d8	 mov	 ecx, DWORD PTR _pItem$3[ebp]
  00389	51		 push	 ecx
  0038a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0038d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00390	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 3904
  00395	eb 20		 jmp	 SHORT $LN13@Render
$LN14@Render:
; Line 3906
  00397	6a 00		 push	 0
  00399	6a 00		 push	 0
  0039b	8b 45 d8	 mov	 eax, DWORD PTR _pItem$3[ebp]
  0039e	05 04 02 00 00	 add	 eax, 516		; 00000204H
  003a3	50		 push	 eax
  003a4	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  003a7	51		 push	 ecx
  003a8	8b 55 d8	 mov	 edx, DWORD PTR _pItem$3[ebp]
  003ab	52		 push	 edx
  003ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003af	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  003b2	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN13@Render:
; Line 3909
  003b7	e9 8b fe ff ff	 jmp	 $LN18@Render
$LN17@Render:
; Line 3912
  003bc	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _nOffsetX$[ebp], 0
; Line 3913
  003c3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _nOffsetY$[ebp], 0
; Line 3915
  003ca	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 0
; Line 3917
  003d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003d4	0f b6 51 04	 movzx	 edx, BYTE PTR [ecx+4]
  003d8	85 d2		 test	 edx, edx
  003da	75 09		 jne	 SHORT $LN12@Render
; Line 3918
  003dc	c7 45 f4 02 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 2
  003e3	eb 6d		 jmp	 SHORT $LN4@Render
$LN12@Render:
; Line 3919
  003e5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003e8	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  003ec	85 c9		 test	 ecx, ecx
  003ee	75 09		 jne	 SHORT $LN10@Render
; Line 3920
  003f0	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 1
  003f7	eb 59		 jmp	 SHORT $LN4@Render
$LN10@Render:
; Line 3921
  003f9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003fc	0f b6 82 5c 02
	00 00		 movzx	 eax, BYTE PTR [edx+604]
  00403	85 c0		 test	 eax, eax
  00405	74 17		 je	 SHORT $LN8@Render
; Line 3923
  00407	c7 45 f4 05 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 5
; Line 3925
  0040e	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR _nOffsetX$[ebp], 1
; Line 3926
  00415	c7 45 b8 02 00
	00 00		 mov	 DWORD PTR _nOffsetY$[ebp], 2
  0041c	eb 34		 jmp	 SHORT $LN4@Render
$LN8@Render:
; Line 3928
  0041e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00421	0f b6 51 05	 movzx	 edx, BYTE PTR [ecx+5]
  00425	85 d2		 test	 edx, edx
  00427	74 17		 je	 SHORT $LN6@Render
; Line 3930
  00429	c7 45 f4 04 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 4
; Line 3932
  00430	c7 45 bc ff ff
	ff ff		 mov	 DWORD PTR _nOffsetX$[ebp], -1
; Line 3933
  00437	c7 45 b8 fe ff
	ff ff		 mov	 DWORD PTR _nOffsetY$[ebp], -2 ; fffffffeH
  0043e	eb 12		 jmp	 SHORT $LN4@Render
$LN6@Render:
; Line 3935
  00440	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00443	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00447	85 c9		 test	 ecx, ecx
  00449	74 07		 je	 SHORT $LN4@Render
; Line 3936
  0044b	c7 45 f4 03 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 3
$LN4@Render:
; Line 3938
  00452	83 7d f4 05	 cmp	 DWORD PTR _iState$[ebp], 5
  00456	75 0f		 jne	 SHORT $LN29@Render
  00458	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00460	f3 0f 11 45 94	 movss	 DWORD PTR tv344[ebp], xmm0
  00465	eb 0d		 jmp	 SHORT $LN30@Render
$LN29@Render:
  00467	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0046f	f3 0f 11 45 94	 movss	 DWORD PTR tv344[ebp], xmm0
$LN30@Render:
  00474	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv344[ebp]
  00479	f3 0f 11 45 b4	 movss	 DWORD PTR _fBlendRate$[ebp], xmm0
; Line 3941
  0047e	6a 01		 push	 1
  00480	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00483	83 c1 20	 add	 ecx, 32			; 00000020H
  00486	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0048b	8b 10		 mov	 edx, DWORD PTR [eax]
  0048d	89 55 f0	 mov	 DWORD PTR _pElement$[ebp], edx
; Line 3944
  00490	51		 push	 ecx
  00491	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00496	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049b	51		 push	 ecx
  0049c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  004a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a6	8b 45 f4	 mov	 eax, DWORD PTR _iState$[ebp]
  004a9	50		 push	 eax
  004aa	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  004ad	83 c1 1c	 add	 ecx, 28			; 0000001cH
  004b0	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3946
  004b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004b8	81 c1 48 03 00
	00		 add	 ecx, 840		; 00000348H
  004be	8b 11		 mov	 edx, DWORD PTR [ecx]
  004c0	89 55 a0	 mov	 DWORD PTR _rcWindow$[ebp], edx
  004c3	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  004c6	89 45 a4	 mov	 DWORD PTR _rcWindow$[ebp+4], eax
  004c9	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  004cc	89 55 a8	 mov	 DWORD PTR _rcWindow$[ebp+8], edx
  004cf	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  004d2	89 45 ac	 mov	 DWORD PTR _rcWindow$[ebp+12], eax
; Line 3947
  004d5	8b f4		 mov	 esi, esp
  004d7	8b 4d b8	 mov	 ecx, DWORD PTR _nOffsetY$[ebp]
  004da	51		 push	 ecx
  004db	8b 55 bc	 mov	 edx, DWORD PTR _nOffsetX$[ebp]
  004de	52		 push	 edx
  004df	8d 45 a0	 lea	 eax, DWORD PTR _rcWindow$[ebp]
  004e2	50		 push	 eax
  004e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  004e9	3b f4		 cmp	 esi, esp
  004eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3948
  004f0	51		 push	 ecx
  004f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  004f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fe	8d 4d a0	 lea	 ecx, DWORD PTR _rcWindow$[ebp]
  00501	51		 push	 ecx
  00502	8b 55 f0	 mov	 edx, DWORD PTR _pElement$[ebp]
  00505	52		 push	 edx
  00506	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00509	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0050c	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 3950
  00511	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00514	0f b6 91 34 03
	00 00		 movzx	 edx, BYTE PTR [ecx+820]
  0051b	85 d2		 test	 edx, edx
  0051d	74 07		 je	 SHORT $LN3@Render
; Line 3951
  0051f	c7 45 f4 05 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 5
$LN3@Render:
; Line 3954
  00526	6a 00		 push	 0
  00528	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052b	83 c1 20	 add	 ecx, 32			; 00000020H
  0052e	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00533	8b 00		 mov	 eax, DWORD PTR [eax]
  00535	89 45 f0	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 3957
  00538	51		 push	 ecx
  00539	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  0053e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00543	51		 push	 ecx
  00544	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00549	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054e	8b 4d f4	 mov	 ecx, DWORD PTR _iState$[ebp]
  00551	51		 push	 ecx
  00552	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00555	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00558	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3958
  0055d	51		 push	 ecx
  0055e	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00563	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00568	51		 push	 ecx
  00569	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0056e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00573	8b 55 f4	 mov	 edx, DWORD PTR _iState$[ebp]
  00576	52		 push	 edx
  00577	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0057a	83 c1 44	 add	 ecx, 68			; 00000044H
  0057d	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3960
  00582	51		 push	 ecx
  00583	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  0058b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00590	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00593	05 38 03 00 00	 add	 eax, 824		; 00000338H
  00598	50		 push	 eax
  00599	8b 4d f0	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0059c	51		 push	 ecx
  0059d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005a0	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  005a3	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 3962
  005a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005ab	83 b8 60 02 00
	00 00		 cmp	 DWORD PTR [eax+608], 0
  005b2	7c 5d		 jl	 SHORT $LN1@Render
  005b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005b7	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  005bd	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  005c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005c5	39 81 60 02 00
	00		 cmp	 DWORD PTR [ecx+608], eax
  005cb	7d 44		 jge	 SHORT $LN1@Render
; Line 3964
  005cd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005d0	8b 82 60 02 00
	00		 mov	 eax, DWORD PTR [edx+608]
  005d6	50		 push	 eax
  005d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005da	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  005e0	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	89 4d 98	 mov	 DWORD PTR _pItem$1[ebp], ecx
; Line 3965
  005ea	83 7d 98 00	 cmp	 DWORD PTR _pItem$1[ebp], 0
  005ee	74 21		 je	 SHORT $LN1@Render
; Line 3967
  005f0	6a 01		 push	 1
  005f2	6a 00		 push	 0
  005f4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005f7	81 c2 38 03 00
	00		 add	 edx, 824		; 00000338H
  005fd	52		 push	 edx
  005fe	8b 45 f0	 mov	 eax, DWORD PTR _pElement$[ebp]
  00601	50		 push	 eax
  00602	8b 4d 98	 mov	 ecx, DWORD PTR _pItem$1[ebp]
  00605	51		 push	 ecx
  00606	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00609	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0060c	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN1@Render:
$LN27@Render:
; Line 3971
  00611	52		 push	 edx
  00612	8b cd		 mov	 ecx, ebp
  00614	50		 push	 eax
  00615	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN34@Render
  0061b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00620	58		 pop	 eax
  00621	5a		 pop	 edx
  00622	5f		 pop	 edi
  00623	5e		 pop	 esi
  00624	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00627	33 cd		 xor	 ecx, ebp
  00629	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0062e	83 c4 6c	 add	 esp, 108		; 0000006cH
  00631	3b ec		 cmp	 ebp, esp
  00633	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00638	8b e5		 mov	 esp, ebp
  0063a	5d		 pop	 ebp
  0063b	c2 04 00	 ret	 4
  0063e	8b ff		 npad	 2
$LN34@Render:
  00640	02 00 00 00	 DD	 2
  00644	00 00 00 00	 DD	 $LN33@Render
$LN33@Render:
  00648	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0064c	10 00 00 00	 DD	 16			; 00000010H
  00650	00 00 00 00	 DD	 $LN31@Render
  00654	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00658	10 00 00 00	 DD	 16			; 00000010H
  0065c	00 00 00 00	 DD	 $LN32@Render
$LN32@Render:
  00660	72		 DB	 114			; 00000072H
  00661	63		 DB	 99			; 00000063H
  00662	57		 DB	 87			; 00000057H
  00663	69		 DB	 105			; 00000069H
  00664	6e		 DB	 110			; 0000006eH
  00665	64		 DB	 100			; 00000064H
  00666	6f		 DB	 111			; 0000006fH
  00667	77		 DB	 119			; 00000077H
  00668	00		 DB	 0
$LN31@Render:
  00669	72		 DB	 114			; 00000072H
  0066a	63		 DB	 99			; 00000063H
  0066b	00		 DB	 0
?Render@CDXUTComboBox@@UAEXM@Z ENDP			; CDXUTComboBox::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnFocusOut@CDXUTComboBox@@UAEXXZ PROC			; CDXUTComboBox::OnFocusOut
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3553
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?OnFocusOut@CDXUTControl@@UAEXXZ ; CDXUTControl::OnFocusOut
; Line 3555
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c6 80 34 03 00
	00 00		 mov	 BYTE PTR [eax+820], 0
; Line 3556
  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?OnFocusOut@CDXUTComboBox@@UAEXXZ ENDP			; CDXUTComboBox::OnFocusOut
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanHaveFocus@CDXUTComboBox@@UAE_NXZ
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
?CanHaveFocus@CDXUTComboBox@@UAE_NXZ PROC		; CDXUTComboBox::CanHaveFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 887
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 888
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 14		 je	 SHORT $LN3@CanHaveFoc
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	0f b6 42 40	 movzx	 eax, BYTE PTR [edx+64]
  00029	85 c0		 test	 eax, eax
  0002b	74 09		 je	 SHORT $LN3@CanHaveFoc
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@CanHaveFoc
$LN3@CanHaveFoc:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@CanHaveFoc:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 889
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?CanHaveFocus@CDXUTComboBox@@UAE_NXZ ENDP		; CDXUTComboBox::CanHaveFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnHotkey@CDXUTComboBox@@UAEXXZ PROC			; CDXUTComboBox::OnHotkey
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3808
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3809
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  00018	85 c9		 test	 ecx, ecx
  0001a	74 05		 je	 SHORT $LN4@OnHotkey
; Line 3810
  0001c	e9 95 00 00 00	 jmp	 $LN5@OnHotkey
$LN4@OnHotkey:
; Line 3812
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	83 ba 60 02 00
	00 ff		 cmp	 DWORD PTR [edx+608], -1
  0002b	75 05		 jne	 SHORT $LN3@OnHotkey
; Line 3813
  0002d	e9 84 00 00 00	 jmp	 $LN5@OnHotkey
$LN3@OnHotkey:
; Line 3815
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00038	e8 00 00 00 00	 call	 ?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ ; CDXUTDialog::IsKeyboardInputEnabled
  0003d	0f b6 c8	 movzx	 ecx, al
  00040	85 c9		 test	 ecx, ecx
  00042	74 0f		 je	 SHORT $LN2@OnHotkey
; Line 3816
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0004e	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN2@OnHotkey:
; Line 3818
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 91 60 02 00
	00		 mov	 edx, DWORD PTR [ecx+608]
  0005c	83 c2 01	 add	 edx, 1
  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	89 90 60 02 00
	00		 mov	 DWORD PTR [eax+608], edx
; Line 3820
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00071	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	39 81 60 02 00
	00		 cmp	 DWORD PTR [ecx+608], eax
  0007f	7c 0d		 jl	 SHORT $LN1@OnHotkey
; Line 3821
  00081	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00084	c7 82 60 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+608], 0
$LN1@OnHotkey:
; Line 3823
  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	8b 91 60 02 00
	00		 mov	 edx, DWORD PTR [ecx+608]
  0009a	89 90 64 02 00
	00		 mov	 DWORD PTR [eax+612], edx
; Line 3824
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	50		 push	 eax
  000a4	6a 01		 push	 1
  000a6	68 01 02 00 00	 push	 513			; 00000201H
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  000b1	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN5@OnHotkey:
; Line 3825
  000b6	83 c4 04	 add	 esp, 4
  000b9	3b ec		 cmp	 ebp, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?OnHotkey@CDXUTComboBox@@UAEXXZ ENDP			; CDXUTComboBox::OnHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv200 = -44						; size = 4
tv94 = -40						; size = 4
_uLines$1 = -32						; size = 4
_zDelta$2 = -24						; size = 4
_pItem$3 = -20						; size = 4
_i$4 = -16						; size = 4
_pItem$5 = -12						; size = 4
_i$6 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTComboBox@@UAE_NIABUtagPOINT@@IJ@Z PROC ; CDXUTComboBox::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3649
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000c	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3650
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00023	85 c9		 test	 ecx, ecx
  00025	74 0b		 je	 SHORT $LN36@HandleMous
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0002e	85 c0		 test	 eax, eax
  00030	75 07		 jne	 SHORT $LN37@HandleMous
$LN36@HandleMous:
; Line 3651
  00032	32 c0		 xor	 al, al
  00034	e9 ee 04 00 00	 jmp	 $LN38@HandleMous
$LN37@HandleMous:
; Line 3654
  00039	8b f4		 mov	 esi, esp
  0003b	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00042	52		 push	 edx
  00043	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00054	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 82 70 02 00
	00		 mov	 eax, DWORD PTR [edx+624]
  0005d	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00060	ff d2		 call	 edx
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	0f b6 c0	 movzx	 eax, al
  0006c	85 c0		 test	 eax, eax
  0006e	74 07		 je	 SHORT $LN35@HandleMous
; Line 3655
  00070	b0 01		 mov	 al, 1
  00072	e9 b0 04 00 00	 jmp	 $LN38@HandleMous
$LN35@HandleMous:
; Line 3657
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0007a	89 4d d8	 mov	 DWORD PTR tv94[ebp], ecx
  0007d	8b 55 d8	 mov	 edx, DWORD PTR tv94[ebp]
  00080	81 ea 00 02 00
	00		 sub	 edx, 512		; 00000200H
  00086	89 55 d8	 mov	 DWORD PTR tv94[ebp], edx
  00089	83 7d d8 0a	 cmp	 DWORD PTR tv94[ebp], 10	; 0000000aH
  0008d	0f 87 92 04 00
	00		 ja	 $LN33@HandleMous
  00093	8b 45 d8	 mov	 eax, DWORD PTR tv94[ebp]
  00096	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN42@HandleMous[eax]
  0009d	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN46@HandleMous[ecx*4]
$LN32@HandleMous:
; Line 3661
  000a4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a7	0f b6 82 34 03
	00 00		 movzx	 eax, BYTE PTR [edx+820]
  000ae	85 c0		 test	 eax, eax
  000b0	0f 84 b1 00 00
	00		 je	 $LN31@HandleMous
  000b6	8b f4		 mov	 esi, esp
  000b8	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	52		 push	 edx
  000bf	8b 01		 mov	 eax, DWORD PTR [ecx]
  000c1	50		 push	 eax
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	81 c1 58 03 00
	00		 add	 ecx, 856		; 00000358H
  000cb	51		 push	 ecx
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  000d2	3b f4		 cmp	 esi, esp
  000d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d9	85 c0		 test	 eax, eax
  000db	0f 84 86 00 00
	00		 je	 $LN31@HandleMous
; Line 3664
  000e1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$6[ebp], 0
  000e8	eb 09		 jmp	 SHORT $LN30@HandleMous
$LN29@HandleMous:
  000ea	8b 55 f8	 mov	 edx, DWORD PTR _i$6[ebp]
  000ed	83 c2 01	 add	 edx, 1
  000f0	89 55 f8	 mov	 DWORD PTR _i$6[ebp], edx
$LN30@HandleMous:
  000f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  000fc	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  00101	39 45 f8	 cmp	 DWORD PTR _i$6[ebp], eax
  00104	73 5a		 jae	 SHORT $LN28@HandleMous
; Line 3666
  00106	8b 45 f8	 mov	 eax, DWORD PTR _i$6[ebp]
  00109	50		 push	 eax
  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00113	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  00118	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011a	89 4d f4	 mov	 DWORD PTR _pItem$5[ebp], ecx
; Line 3668
  0011d	8b 55 f4	 mov	 edx, DWORD PTR _pItem$5[ebp]
  00120	0f b6 82 14 02
	00 00		 movzx	 eax, BYTE PTR [edx+532]
  00127	85 c0		 test	 eax, eax
  00129	74 33		 je	 SHORT $LN27@HandleMous
  0012b	8b f4		 mov	 esi, esp
  0012d	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  00130	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00133	52		 push	 edx
  00134	8b 01		 mov	 eax, DWORD PTR [ecx]
  00136	50		 push	 eax
  00137	8b 4d f4	 mov	 ecx, DWORD PTR _pItem$5[ebp]
  0013a	81 c1 04 02 00
	00		 add	 ecx, 516		; 00000204H
  00140	51		 push	 ecx
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00147	3b f4		 cmp	 esi, esp
  00149	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014e	85 c0		 test	 eax, eax
  00150	74 0c		 je	 SHORT $LN27@HandleMous
; Line 3670
  00152	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00155	8b 45 f8	 mov	 eax, DWORD PTR _i$6[ebp]
  00158	89 82 64 02 00
	00		 mov	 DWORD PTR [edx+612], eax
$LN27@HandleMous:
; Line 3672
  0015e	eb 8a		 jmp	 SHORT $LN29@HandleMous
$LN28@HandleMous:
; Line 3673
  00160	b0 01		 mov	 al, 1
  00162	e9 c0 03 00 00	 jmp	 $LN38@HandleMous
$LN31@HandleMous:
; Line 3675
  00167	e9 b9 03 00 00	 jmp	 $LN33@HandleMous
$LN26@HandleMous:
; Line 3681
  0016c	8b f4		 mov	 esi, esp
  0016e	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  00171	51		 push	 ecx
  00172	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00175	8b 02		 mov	 eax, DWORD PTR [edx]
  00177	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  0017d	ff d2		 call	 edx
  0017f	3b f4		 cmp	 esi, esp
  00181	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00186	0f b6 c0	 movzx	 eax, al
  00189	85 c0		 test	 eax, eax
  0018b	0f 84 96 00 00
	00		 je	 $LN25@HandleMous
; Line 3684
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	c6 81 5c 02 00
	00 01		 mov	 BYTE PTR [ecx+604], 1
; Line 3685
  0019b	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  001a0	8b f4		 mov	 esi, esp
  001a2	50		 push	 eax
  001a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  001a9	3b f4		 cmp	 esi, esp
  001ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3687
  001b0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001b3	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  001b7	85 c0		 test	 eax, eax
  001b9	75 0f		 jne	 SHORT $LN24@HandleMous
; Line 3688
  001bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001be	51		 push	 ecx
  001bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c2	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  001c5	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN24@HandleMous:
; Line 3691
  001ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001cd	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  001d1	85 c9		 test	 ecx, ecx
  001d3	74 4b		 je	 SHORT $LN23@HandleMous
; Line 3693
  001d5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d8	0f b6 82 34 03
	00 00		 movzx	 eax, BYTE PTR [edx+820]
  001df	85 c0		 test	 eax, eax
  001e1	75 09		 jne	 SHORT $LN40@HandleMous
  001e3	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  001ea	eb 07		 jmp	 SHORT $LN41@HandleMous
$LN40@HandleMous:
  001ec	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv200[ebp], 0
$LN41@HandleMous:
  001f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f6	8a 55 d4	 mov	 dl, BYTE PTR tv200[ebp]
  001f9	88 91 34 03 00
	00		 mov	 BYTE PTR [ecx+820], dl
; Line 3695
  001ff	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00202	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  00209	85 c9		 test	 ecx, ecx
  0020b	75 13		 jne	 SHORT $LN23@HandleMous
; Line 3697
  0020d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00210	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00213	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00217	85 c9		 test	 ecx, ecx
  00219	75 05		 jne	 SHORT $LN23@HandleMous
; Line 3698
  0021b	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
$LN23@HandleMous:
; Line 3702
  00220	b0 01		 mov	 al, 1
  00222	e9 00 03 00 00	 jmp	 $LN38@HandleMous
$LN25@HandleMous:
; Line 3706
  00227	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0022a	0f b6 82 34 03
	00 00		 movzx	 eax, BYTE PTR [edx+820]
  00231	85 c0		 test	 eax, eax
  00233	0f 84 03 01 00
	00		 je	 $LN20@HandleMous
  00239	8b f4		 mov	 esi, esp
  0023b	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  0023e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00241	52		 push	 edx
  00242	8b 01		 mov	 eax, DWORD PTR [ecx]
  00244	50		 push	 eax
  00245	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00248	81 c1 58 03 00
	00		 add	 ecx, 856		; 00000358H
  0024e	51		 push	 ecx
  0024f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00255	3b f4		 cmp	 esi, esp
  00257	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025c	85 c0		 test	 eax, eax
  0025e	0f 84 d8 00 00
	00		 je	 $LN20@HandleMous
; Line 3709
  00264	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00267	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  0026d	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00272	89 45 f0	 mov	 DWORD PTR _i$4[ebp], eax
  00275	eb 09		 jmp	 SHORT $LN19@HandleMous
$LN18@HandleMous:
  00277	8b 55 f0	 mov	 edx, DWORD PTR _i$4[ebp]
  0027a	83 c2 01	 add	 edx, 1
  0027d	89 55 f0	 mov	 DWORD PTR _i$4[ebp], edx
$LN19@HandleMous:
  00280	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00289	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::size
  0028e	39 45 f0	 cmp	 DWORD PTR _i$4[ebp], eax
  00291	0f 83 9e 00 00
	00		 jae	 $LN17@HandleMous
; Line 3711
  00297	8b 45 f0	 mov	 eax, DWORD PTR _i$4[ebp]
  0029a	50		 push	 eax
  0029b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029e	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  002a4	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAEAAPAUDXUTComboBoxItem@@I@Z ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::operator[]
  002a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ab	89 4d ec	 mov	 DWORD PTR _pItem$3[ebp], ecx
; Line 3713
  002ae	8b 55 ec	 mov	 edx, DWORD PTR _pItem$3[ebp]
  002b1	0f b6 82 14 02
	00 00		 movzx	 eax, BYTE PTR [edx+532]
  002b8	85 c0		 test	 eax, eax
  002ba	74 74		 je	 SHORT $LN16@HandleMous
  002bc	8b f4		 mov	 esi, esp
  002be	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  002c1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  002c4	52		 push	 edx
  002c5	8b 01		 mov	 eax, DWORD PTR [ecx]
  002c7	50		 push	 eax
  002c8	8b 4d ec	 mov	 ecx, DWORD PTR _pItem$3[ebp]
  002cb	81 c1 04 02 00
	00		 add	 ecx, 516		; 00000204H
  002d1	51		 push	 ecx
  002d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  002d8	3b f4		 cmp	 esi, esp
  002da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002df	85 c0		 test	 eax, eax
  002e1	74 4d		 je	 SHORT $LN16@HandleMous
; Line 3715
  002e3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002e6	8b 45 f0	 mov	 eax, DWORD PTR _i$4[ebp]
  002e9	89 82 60 02 00
	00		 mov	 DWORD PTR [edx+608], eax
  002ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f2	8b 55 f0	 mov	 edx, DWORD PTR _i$4[ebp]
  002f5	89 91 64 02 00
	00		 mov	 DWORD PTR [ecx+612], edx
; Line 3716
  002fb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002fe	50		 push	 eax
  002ff	6a 01		 push	 1
  00301	68 01 02 00 00	 push	 513			; 00000201H
  00306	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00309	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0030c	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 3717
  00311	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00314	c6 82 34 03 00
	00 00		 mov	 BYTE PTR [edx+820], 0
; Line 3719
  0031b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0031e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00321	0f b6 51 01	 movzx	 edx, BYTE PTR [ecx+1]
  00325	85 d2		 test	 edx, edx
  00327	75 05		 jne	 SHORT $LN15@HandleMous
; Line 3720
  00329	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
$LN15@HandleMous:
; Line 3722
  0032e	eb 05		 jmp	 SHORT $LN17@HandleMous
$LN16@HandleMous:
; Line 3724
  00330	e9 42 ff ff ff	 jmp	 $LN18@HandleMous
$LN17@HandleMous:
; Line 3726
  00335	b0 01		 mov	 al, 1
  00337	e9 eb 01 00 00	 jmp	 $LN38@HandleMous
$LN20@HandleMous:
; Line 3730
  0033c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0033f	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  00346	85 c9		 test	 ecx, ecx
  00348	74 32		 je	 SHORT $LN14@HandleMous
; Line 3732
  0034a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0034d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00350	8b 88 60 02 00
	00		 mov	 ecx, DWORD PTR [eax+608]
  00356	89 8a 64 02 00
	00		 mov	 DWORD PTR [edx+612], ecx
; Line 3734
  0035c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0035f	52		 push	 edx
  00360	6a 01		 push	 1
  00362	68 01 02 00 00	 push	 513			; 00000201H
  00367	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0036a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0036d	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 3735
  00372	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00375	c6 81 34 03 00
	00 00		 mov	 BYTE PTR [ecx+820], 0
$LN14@HandleMous:
; Line 3739
  0037c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0037f	c6 82 5c 02 00
	00 00		 mov	 BYTE PTR [edx+604], 0
; Line 3742
  00386	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00389	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0038c	0f b6 51 01	 movzx	 edx, BYTE PTR [ecx+1]
  00390	85 d2		 test	 edx, edx
  00392	75 05		 jne	 SHORT $LN13@HandleMous
; Line 3744
  00394	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
$LN13@HandleMous:
; Line 3747
  00399	e9 87 01 00 00	 jmp	 $LN33@HandleMous
$LN12@HandleMous:
; Line 3752
  0039e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003a1	0f b6 88 5c 02
	00 00		 movzx	 ecx, BYTE PTR [eax+604]
  003a8	85 c9		 test	 ecx, ecx
  003aa	74 41		 je	 SHORT $LN11@HandleMous
  003ac	8b f4		 mov	 esi, esp
  003ae	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  003b1	52		 push	 edx
  003b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003b5	8b 10		 mov	 edx, DWORD PTR [eax]
  003b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ba	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  003bd	ff d0		 call	 eax
  003bf	3b f4		 cmp	 esi, esp
  003c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003c6	0f b6 c8	 movzx	 ecx, al
  003c9	85 c9		 test	 ecx, ecx
  003cb	74 20		 je	 SHORT $LN11@HandleMous
; Line 3755
  003cd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003d0	c6 82 5c 02 00
	00 00		 mov	 BYTE PTR [edx+604], 0
; Line 3756
  003d7	8b f4		 mov	 esi, esp
  003d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  003df	3b f4		 cmp	 esi, esp
  003e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3757
  003e6	b0 01		 mov	 al, 1
  003e8	e9 3a 01 00 00	 jmp	 $LN38@HandleMous
$LN11@HandleMous:
; Line 3760
  003ed	e9 33 01 00 00	 jmp	 $LN33@HandleMous
$LN10@HandleMous:
; Line 3765
  003f2	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  003f5	c1 e8 10	 shr	 eax, 16			; 00000010H
  003f8	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  003fd	98		 cwde
  003fe	99		 cdq
  003ff	b9 78 00 00 00	 mov	 ecx, 120		; 00000078H
  00404	f7 f9		 idiv	 ecx
  00406	89 45 e8	 mov	 DWORD PTR _zDelta$2[ebp], eax
; Line 3766
  00409	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0040c	0f b6 82 34 03
	00 00		 movzx	 eax, BYTE PTR [edx+820]
  00413	85 c0		 test	 eax, eax
  00415	74 48		 je	 SHORT $LN9@HandleMous
; Line 3768
  00417	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _uLines$1[ebp], 0
; Line 3769
  0041e	8b f4		 mov	 esi, esp
  00420	6a 00		 push	 0
  00422	8d 4d e0	 lea	 ecx, DWORD PTR _uLines$1[ebp]
  00425	51		 push	 ecx
  00426	6a 00		 push	 0
  00428	6a 68		 push	 104			; 00000068H
  0042a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  00430	3b f4		 cmp	 esi, esp
  00432	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00437	85 c0		 test	 eax, eax
  00439	75 07		 jne	 SHORT $LN8@HandleMous
; Line 3770
  0043b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _uLines$1[ebp], 0
$LN8@HandleMous:
; Line 3771
  00442	8b 55 e8	 mov	 edx, DWORD PTR _zDelta$2[ebp]
  00445	f7 da		 neg	 edx
  00447	0f af 55 e0	 imul	 edx, DWORD PTR _uLines$1[ebp]
  0044b	52		 push	 edx
  0044c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0044f	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00455	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 3773
  0045a	e9 c2 00 00 00	 jmp	 $LN7@HandleMous
$LN9@HandleMous:
; Line 3775
  0045f	83 7d e8 00	 cmp	 DWORD PTR _zDelta$2[ebp], 0
  00463	7e 59		 jle	 SHORT $LN6@HandleMous
; Line 3777
  00465	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00468	83 b8 64 02 00
	00 00		 cmp	 DWORD PTR [eax+612], 0
  0046f	7e 4b		 jle	 SHORT $LN5@HandleMous
; Line 3779
  00471	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00474	8b 91 64 02 00
	00		 mov	 edx, DWORD PTR [ecx+612]
  0047a	83 ea 01	 sub	 edx, 1
  0047d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00480	89 90 64 02 00
	00		 mov	 DWORD PTR [eax+612], edx
; Line 3780
  00486	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00489	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0048c	8b 82 64 02 00
	00		 mov	 eax, DWORD PTR [edx+612]
  00492	89 81 60 02 00
	00		 mov	 DWORD PTR [ecx+608], eax
; Line 3782
  00498	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0049b	0f b6 91 34 03
	00 00		 movzx	 edx, BYTE PTR [ecx+820]
  004a2	85 d2		 test	 edx, edx
  004a4	75 16		 jne	 SHORT $LN5@HandleMous
; Line 3783
  004a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004a9	50		 push	 eax
  004aa	6a 01		 push	 1
  004ac	68 01 02 00 00	 push	 513			; 00000201H
  004b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004b4	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  004b7	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN5@HandleMous:
; Line 3786
  004bc	eb 63		 jmp	 SHORT $LN7@HandleMous
$LN6@HandleMous:
; Line 3788
  004be	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004c1	8b b2 64 02 00
	00		 mov	 esi, DWORD PTR [edx+612]
  004c7	83 c6 01	 add	 esi, 1
  004ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004cd	e8 00 00 00 00	 call	 ?GetNumItems@CDXUTComboBox@@QAEIXZ ; CDXUTComboBox::GetNumItems
  004d2	3b f0		 cmp	 esi, eax
  004d4	7d 4b		 jge	 SHORT $LN7@HandleMous
; Line 3790
  004d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004d9	8b 88 64 02 00
	00		 mov	 ecx, DWORD PTR [eax+612]
  004df	83 c1 01	 add	 ecx, 1
  004e2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004e5	89 8a 64 02 00
	00		 mov	 DWORD PTR [edx+612], ecx
; Line 3791
  004eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004f1	8b 91 64 02 00
	00		 mov	 edx, DWORD PTR [ecx+612]
  004f7	89 90 60 02 00
	00		 mov	 DWORD PTR [eax+608], edx
; Line 3793
  004fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00500	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  00507	85 c9		 test	 ecx, ecx
  00509	75 16		 jne	 SHORT $LN7@HandleMous
; Line 3794
  0050b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0050e	52		 push	 edx
  0050f	6a 01		 push	 1
  00511	68 01 02 00 00	 push	 513			; 00000201H
  00516	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00519	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0051c	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN7@HandleMous:
; Line 3798
  00521	b0 01		 mov	 al, 1
  00523	eb 02		 jmp	 SHORT $LN38@HandleMous
$LN33@HandleMous:
; Line 3802
  00525	32 c0		 xor	 al, al
$LN38@HandleMous:
; Line 3803
  00527	52		 push	 edx
  00528	8b cd		 mov	 ecx, ebp
  0052a	50		 push	 eax
  0052b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN45@HandleMous
  00531	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00536	58		 pop	 eax
  00537	5a		 pop	 edx
  00538	5f		 pop	 edi
  00539	5e		 pop	 esi
  0053a	83 c4 2c	 add	 esp, 44			; 0000002cH
  0053d	3b ec		 cmp	 ebp, esp
  0053f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00544	8b e5		 mov	 esp, ebp
  00546	5d		 pop	 ebp
  00547	c2 10 00	 ret	 16			; 00000010H
  0054a	8b ff		 npad	 2
$LN45@HandleMous:
  0054c	01 00 00 00	 DD	 1
  00550	00 00 00 00	 DD	 $LN44@HandleMous
$LN44@HandleMous:
  00554	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00558	04 00 00 00	 DD	 4
  0055c	00 00 00 00	 DD	 $LN43@HandleMous
$LN43@HandleMous:
  00560	75		 DB	 117			; 00000075H
  00561	4c		 DB	 76			; 0000004cH
  00562	69		 DB	 105			; 00000069H
  00563	6e		 DB	 110			; 0000006eH
  00564	65		 DB	 101			; 00000065H
  00565	73		 DB	 115			; 00000073H
  00566	00		 DB	 0
  00567	90		 npad	 1
$LN46@HandleMous:
  00568	00 00 00 00	 DD	 $LN32@HandleMous
  0056c	00 00 00 00	 DD	 $LN26@HandleMous
  00570	00 00 00 00	 DD	 $LN12@HandleMous
  00574	00 00 00 00	 DD	 $LN10@HandleMous
  00578	00 00 00 00	 DD	 $LN33@HandleMous
$LN42@HandleMous:
  0057c	00		 DB	 0
  0057d	01		 DB	 1
  0057e	02		 DB	 2
  0057f	01		 DB	 1
  00580	04		 DB	 4
  00581	04		 DB	 4
  00582	04		 DB	 4
  00583	04		 DB	 4
  00584	04		 DB	 4
  00585	04		 DB	 4
  00586	03		 DB	 3
?HandleMouse@CDXUTComboBox@@UAE_NIABUtagPOINT@@IJ@Z ENDP ; CDXUTComboBox::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv163 = -20						; size = 4
tv94 = -16						; size = 4
tv93 = -12						; size = 4
_REPEAT_MASK$ = -8					; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTComboBox@@UAE_NIIJ@Z PROC		; CDXUTComboBox::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3562
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3563
  0001e	c7 45 f8 00 00
	00 40		 mov	 DWORD PTR _REPEAT_MASK$[ebp], 1073741824 ; 40000000H
; Line 3565
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 0b		 je	 SHORT $LN21@HandleKeyb
  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00037	85 c0		 test	 eax, eax
  00039	75 07		 jne	 SHORT $LN22@HandleKeyb
$LN21@HandleKeyb:
; Line 3566
  0003b	32 c0		 xor	 al, al
  0003d	e9 29 02 00 00	 jmp	 $LN23@HandleKeyb
$LN22@HandleKeyb:
; Line 3569
  00042	8b f4		 mov	 esi, esp
  00044	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00047	51		 push	 ecx
  00048	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  0004b	52		 push	 edx
  0004c	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 82 70 02 00
	00		 mov	 eax, DWORD PTR [edx+624]
  00062	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00065	ff d2		 call	 edx
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	0f b6 c0	 movzx	 eax, al
  00071	85 c0		 test	 eax, eax
  00073	74 07		 je	 SHORT $LN20@HandleKeyb
; Line 3570
  00075	b0 01		 mov	 al, 1
  00077	e9 ef 01 00 00	 jmp	 $LN23@HandleKeyb
$LN20@HandleKeyb:
; Line 3572
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0007f	89 4d f4	 mov	 DWORD PTR tv93[ebp], ecx
  00082	81 7d f4 00 01
	00 00		 cmp	 DWORD PTR tv93[ebp], 256 ; 00000100H
  00089	74 05		 je	 SHORT $LN17@HandleKeyb
  0008b	e9 d9 01 00 00	 jmp	 $LN18@HandleKeyb
$LN17@HandleKeyb:
; Line 3576
  00090	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00093	89 55 f0	 mov	 DWORD PTR tv94[ebp], edx
  00096	8b 45 f0	 mov	 eax, DWORD PTR tv94[ebp]
  00099	83 e8 0d	 sub	 eax, 13			; 0000000dH
  0009c	89 45 f0	 mov	 DWORD PTR tv94[ebp], eax
  0009f	83 7d f0 66	 cmp	 DWORD PTR tv94[ebp], 102 ; 00000066H
  000a3	0f 87 c0 01 00
	00		 ja	 $LN18@HandleKeyb
  000a9	8b 4d f0	 mov	 ecx, DWORD PTR tv94[ebp]
  000ac	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN27@HandleKeyb[ecx]
  000b3	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN28@HandleKeyb[edx*4]
$LN14@HandleKeyb:
; Line 3579
  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  000c4	85 c9		 test	 ecx, ecx
  000c6	74 60		 je	 SHORT $LN13@HandleKeyb
; Line 3581
  000c8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	8b 8a 60 02 00
	00		 mov	 ecx, DWORD PTR [edx+608]
  000d4	3b 88 64 02 00
	00		 cmp	 ecx, DWORD PTR [eax+612]
  000da	74 28		 je	 SHORT $LN12@HandleKeyb
; Line 3583
  000dc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8b 88 64 02 00
	00		 mov	 ecx, DWORD PTR [eax+612]
  000e8	89 8a 60 02 00
	00		 mov	 DWORD PTR [edx+608], ecx
; Line 3584
  000ee	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f1	52		 push	 edx
  000f2	6a 01		 push	 1
  000f4	68 01 02 00 00	 push	 513			; 00000201H
  000f9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ff	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN12@HandleKeyb:
; Line 3586
  00104	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	c6 81 34 03 00
	00 00		 mov	 BYTE PTR [ecx+820], 0
; Line 3588
  0010e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00111	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00114	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00118	85 c9		 test	 ecx, ecx
  0011a	75 05		 jne	 SHORT $LN11@HandleKeyb
; Line 3589
  0011c	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
$LN11@HandleKeyb:
; Line 3591
  00121	b0 01		 mov	 al, 1
  00123	e9 43 01 00 00	 jmp	 $LN23@HandleKeyb
$LN13@HandleKeyb:
; Line 3593
  00128	e9 3c 01 00 00	 jmp	 $LN18@HandleKeyb
$LN10@HandleKeyb:
; Line 3597
  0012d	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  00130	81 e2 00 00 00
	40		 and	 edx, 1073741824		; 40000000H
  00136	74 07		 je	 SHORT $LN9@HandleKeyb
; Line 3598
  00138	b0 01		 mov	 al, 1
  0013a	e9 2c 01 00 00	 jmp	 $LN23@HandleKeyb
$LN9@HandleKeyb:
; Line 3600
  0013f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00142	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  00149	85 c9		 test	 ecx, ecx
  0014b	75 09		 jne	 SHORT $LN25@HandleKeyb
  0014d	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv163[ebp], 1
  00154	eb 07		 jmp	 SHORT $LN26@HandleKeyb
$LN25@HandleKeyb:
  00156	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN26@HandleKeyb:
  0015d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00160	8a 45 ec	 mov	 al, BYTE PTR tv163[ebp]
  00163	88 82 34 03 00
	00		 mov	 BYTE PTR [edx+820], al
; Line 3602
  00169	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016c	0f b6 91 34 03
	00 00		 movzx	 edx, BYTE PTR [ecx+820]
  00173	85 d2		 test	 edx, edx
  00175	75 29		 jne	 SHORT $LN8@HandleKeyb
; Line 3604
  00177	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017a	50		 push	 eax
  0017b	6a 01		 push	 1
  0017d	68 01 02 00 00	 push	 513			; 00000201H
  00182	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00185	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00188	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 3606
  0018d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00190	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00193	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00197	85 c9		 test	 ecx, ecx
  00199	75 05		 jne	 SHORT $LN8@HandleKeyb
; Line 3607
  0019b	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
$LN8@HandleKeyb:
; Line 3610
  001a0	b0 01		 mov	 al, 1
  001a2	e9 c4 00 00 00	 jmp	 $LN23@HandleKeyb
$LN6@HandleKeyb:
; Line 3614
  001a7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001aa	83 ba 64 02 00
	00 00		 cmp	 DWORD PTR [edx+612], 0
  001b1	7e 4b		 jle	 SHORT $LN5@HandleKeyb
; Line 3616
  001b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b6	8b 88 64 02 00
	00		 mov	 ecx, DWORD PTR [eax+612]
  001bc	83 e9 01	 sub	 ecx, 1
  001bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c2	89 8a 64 02 00
	00		 mov	 DWORD PTR [edx+612], ecx
; Line 3617
  001c8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ce	8b 91 64 02 00
	00		 mov	 edx, DWORD PTR [ecx+612]
  001d4	89 90 60 02 00
	00		 mov	 DWORD PTR [eax+608], edx
; Line 3619
  001da	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001dd	0f b6 88 34 03
	00 00		 movzx	 ecx, BYTE PTR [eax+820]
  001e4	85 c9		 test	 ecx, ecx
  001e6	75 16		 jne	 SHORT $LN5@HandleKeyb
; Line 3620
  001e8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001eb	52		 push	 edx
  001ec	6a 01		 push	 1
  001ee	68 01 02 00 00	 push	 513			; 00000201H
  001f3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f6	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001f9	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN5@HandleKeyb:
; Line 3623
  001fe	b0 01		 mov	 al, 1
  00200	eb 69		 jmp	 SHORT $LN23@HandleKeyb
$LN3@HandleKeyb:
; Line 3627
  00202	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00205	8b b1 64 02 00
	00		 mov	 esi, DWORD PTR [ecx+612]
  0020b	83 c6 01	 add	 esi, 1
  0020e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00211	e8 00 00 00 00	 call	 ?GetNumItems@CDXUTComboBox@@QAEIXZ ; CDXUTComboBox::GetNumItems
  00216	3b f0		 cmp	 esi, eax
  00218	7d 4b		 jge	 SHORT $LN2@HandleKeyb
; Line 3629
  0021a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0021d	8b 82 64 02 00
	00		 mov	 eax, DWORD PTR [edx+612]
  00223	83 c0 01	 add	 eax, 1
  00226	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00229	89 81 64 02 00
	00		 mov	 DWORD PTR [ecx+612], eax
; Line 3630
  0022f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00232	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00235	8b 88 64 02 00
	00		 mov	 ecx, DWORD PTR [eax+612]
  0023b	89 8a 60 02 00
	00		 mov	 DWORD PTR [edx+608], ecx
; Line 3632
  00241	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00244	0f b6 82 34 03
	00 00		 movzx	 eax, BYTE PTR [edx+820]
  0024b	85 c0		 test	 eax, eax
  0024d	75 16		 jne	 SHORT $LN2@HandleKeyb
; Line 3633
  0024f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00252	51		 push	 ecx
  00253	6a 01		 push	 1
  00255	68 01 02 00 00	 push	 513			; 00000201H
  0025a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0025d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00260	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN2@HandleKeyb:
; Line 3636
  00265	b0 01		 mov	 al, 1
  00267	eb 02		 jmp	 SHORT $LN23@HandleKeyb
$LN18@HandleKeyb:
; Line 3642
  00269	32 c0		 xor	 al, al
$LN23@HandleKeyb:
; Line 3643
  0026b	5e		 pop	 esi
  0026c	83 c4 14	 add	 esp, 20			; 00000014H
  0026f	3b ec		 cmp	 ebp, esp
  00271	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00276	8b e5		 mov	 esp, ebp
  00278	5d		 pop	 ebp
  00279	c2 0c 00	 ret	 12			; 0000000cH
$LN28@HandleKeyb:
  0027c	00 00 00 00	 DD	 $LN14@HandleKeyb
  00280	00 00 00 00	 DD	 $LN6@HandleKeyb
  00284	00 00 00 00	 DD	 $LN3@HandleKeyb
  00288	00 00 00 00	 DD	 $LN10@HandleKeyb
  0028c	00 00 00 00	 DD	 $LN18@HandleKeyb
$LN27@HandleKeyb:
  00290	00		 DB	 0
  00291	04		 DB	 4
  00292	04		 DB	 4
  00293	04		 DB	 4
  00294	04		 DB	 4
  00295	04		 DB	 4
  00296	04		 DB	 4
  00297	04		 DB	 4
  00298	04		 DB	 4
  00299	04		 DB	 4
  0029a	04		 DB	 4
  0029b	04		 DB	 4
  0029c	04		 DB	 4
  0029d	04		 DB	 4
  0029e	04		 DB	 4
  0029f	04		 DB	 4
  002a0	04		 DB	 4
  002a1	04		 DB	 4
  002a2	04		 DB	 4
  002a3	04		 DB	 4
  002a4	04		 DB	 4
  002a5	04		 DB	 4
  002a6	04		 DB	 4
  002a7	04		 DB	 4
  002a8	01		 DB	 1
  002a9	01		 DB	 1
  002aa	02		 DB	 2
  002ab	02		 DB	 2
  002ac	04		 DB	 4
  002ad	04		 DB	 4
  002ae	04		 DB	 4
  002af	04		 DB	 4
  002b0	04		 DB	 4
  002b1	04		 DB	 4
  002b2	04		 DB	 4
  002b3	04		 DB	 4
  002b4	04		 DB	 4
  002b5	04		 DB	 4
  002b6	04		 DB	 4
  002b7	04		 DB	 4
  002b8	04		 DB	 4
  002b9	04		 DB	 4
  002ba	04		 DB	 4
  002bb	04		 DB	 4
  002bc	04		 DB	 4
  002bd	04		 DB	 4
  002be	04		 DB	 4
  002bf	04		 DB	 4
  002c0	04		 DB	 4
  002c1	04		 DB	 4
  002c2	04		 DB	 4
  002c3	04		 DB	 4
  002c4	04		 DB	 4
  002c5	04		 DB	 4
  002c6	04		 DB	 4
  002c7	04		 DB	 4
  002c8	04		 DB	 4
  002c9	04		 DB	 4
  002ca	04		 DB	 4
  002cb	04		 DB	 4
  002cc	04		 DB	 4
  002cd	04		 DB	 4
  002ce	04		 DB	 4
  002cf	04		 DB	 4
  002d0	04		 DB	 4
  002d1	04		 DB	 4
  002d2	04		 DB	 4
  002d3	04		 DB	 4
  002d4	04		 DB	 4
  002d5	04		 DB	 4
  002d6	04		 DB	 4
  002d7	04		 DB	 4
  002d8	04		 DB	 4
  002d9	04		 DB	 4
  002da	04		 DB	 4
  002db	04		 DB	 4
  002dc	04		 DB	 4
  002dd	04		 DB	 4
  002de	04		 DB	 4
  002df	04		 DB	 4
  002e0	04		 DB	 4
  002e1	04		 DB	 4
  002e2	04		 DB	 4
  002e3	04		 DB	 4
  002e4	04		 DB	 4
  002e5	04		 DB	 4
  002e6	04		 DB	 4
  002e7	04		 DB	 4
  002e8	04		 DB	 4
  002e9	04		 DB	 4
  002ea	04		 DB	 4
  002eb	04		 DB	 4
  002ec	04		 DB	 4
  002ed	04		 DB	 4
  002ee	04		 DB	 4
  002ef	04		 DB	 4
  002f0	04		 DB	 4
  002f1	04		 DB	 4
  002f2	04		 DB	 4
  002f3	04		 DB	 4
  002f4	04		 DB	 4
  002f5	04		 DB	 4
  002f6	03		 DB	 3
?HandleKeyboard@CDXUTComboBox@@UAE_NIIJ@Z ENDP		; CDXUTComboBox::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnInit@CDXUTComboBox@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInit@CDXUTComboBox@@UAEJXZ PROC			; CDXUTComboBox::OnInit, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 878
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	05 70 02 00 00	 add	 eax, 624		; 00000270H
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0001d	e8 00 00 00 00	 call	 ?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::InitControl
; Line 880
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?OnInit@CDXUTComboBox@@UAEJXZ ENDP			; CDXUTComboBox::OnInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pElement$ = -8						; size = 4
_this$ = -4						; size = 4
_Color$ = 8						; size = 4
?SetTextColor@CDXUTComboBox@@UAEXK@Z PROC		; CDXUTComboBox::SetTextColor
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3499
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3500
  00017	6a 00		 push	 0
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 20	 add	 ecx, 32			; 00000020H
  0001f	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	89 45 f8	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 3502
  00029	83 7d f8 00	 cmp	 DWORD PTR _pElement$[ebp], 0
  0002d	74 12		 je	 SHORT $LN2@SetTextCol
; Line 3503
  0002f	b9 04 00 00 00	 mov	 ecx, 4
  00034	6b d1 00	 imul	 edx, ecx, 0
  00037	8b 45 f8	 mov	 eax, DWORD PTR _pElement$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _Color$[ebp]
  0003d	89 4c 10 44	 mov	 DWORD PTR [eax+edx+68], ecx
$LN2@SetTextCol:
; Line 3505
  00041	6a 02		 push	 2
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 20	 add	 ecx, 32			; 00000020H
  00049	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0004e	8b 10		 mov	 edx, DWORD PTR [eax]
  00050	89 55 f8	 mov	 DWORD PTR _pElement$[ebp], edx
; Line 3507
  00053	83 7d f8 00	 cmp	 DWORD PTR _pElement$[ebp], 0
  00057	74 12		 je	 SHORT $LN3@SetTextCol
; Line 3508
  00059	b8 04 00 00 00	 mov	 eax, 4
  0005e	6b c8 00	 imul	 ecx, eax, 0
  00061	8b 55 f8	 mov	 edx, DWORD PTR _pElement$[ebp]
  00064	8b 45 08	 mov	 eax, DWORD PTR _Color$[ebp]
  00067	89 44 0a 44	 mov	 DWORD PTR [edx+ecx+68], eax
$LN3@SetTextCol:
; Line 3509
  0006b	83 c4 08	 add	 esp, 8
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
?SetTextColor@CDXUTComboBox@@UAEXK@Z ENDP		; CDXUTComboBox::SetTextColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDXUTComboBox@@UAE@XZ PROC				; CDXUTComboBox::~CDXUTComboBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDXUTComboBox@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTComboBox@@6B@
  00036	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; Line 3493
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?RemoveAllItems@CDXUTComboBox@@QAEXXZ ; CDXUTComboBox::RemoveAllItems
; Line 3494
  00045	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00052	e8 00 00 00 00	 call	 ??1?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::~vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >
  00057	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00064	e8 00 00 00 00	 call	 ??1CDXUTScrollBar@@UAE@XZ ; CDXUTScrollBar::~CDXUTScrollBar
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1CDXUTButton@@UAE@XZ
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	3b ec		 cmp	 ebp, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDXUTComboBox@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDXUTButton@@UAE@XZ
__unwindfunclet$??1CDXUTComboBox@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00011	e9 00 00 00 00	 jmp	 ??1CDXUTScrollBar@@UAE@XZ ; CDXUTScrollBar::~CDXUTScrollBar
__unwindfunclet$??1CDXUTComboBox@@UAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  0001f	e9 00 00 00 00	 jmp	 ??1?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::~vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >
__ehhandler$??1CDXUTComboBox@@UAE@XZ:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDXUTComboBox@@UAE@XZ
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDXUTComboBox@@UAE@XZ ENDP				; CDXUTComboBox::~CDXUTComboBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDialog$ = 8						; size = 4
??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTComboBox::CDXUTComboBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3477
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	6a 00		 push	 0
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0CDXUTButton@@QAE@PAVCDXUTDialog@@@Z ; CDXUTButton::CDXUTButton
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTComboBox@@6B@
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00054	e8 00 00 00 00	 call	 ??0CDXUTScrollBar@@QAE@PAVCDXUTDialog@@@Z ; CDXUTScrollBar::CDXUTScrollBar
  00059	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	81 c1 78 03 00
	00		 add	 ecx, 888		; 00000378H
  00066	e8 00 00 00 00	 call	 ??0?$vector@PAUDXUTComboBoxItem@@V?$allocator@PAUDXUTComboBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >::vector<DXUTComboBoxItem *,std::allocator<DXUTComboBoxItem *> >
; Line 3478
  0006b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	c7 42 34 04 00
	00 00		 mov	 DWORD PTR [edx+52], 4
; Line 3479
  00075	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0007b	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 3481
  0007e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00081	c7 82 68 02 00
	00 64 00 00 00	 mov	 DWORD PTR [edx+616], 100 ; 00000064H
; Line 3483
  0008b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c7 80 30 03 00
	00 10 00 00 00	 mov	 DWORD PTR [eax+816], 16	; 00000010H
; Line 3484
  00098	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	c6 81 34 03 00
	00 00		 mov	 BYTE PTR [ecx+820], 0
; Line 3485
  000a2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	c7 82 60 02 00
	00 ff ff ff ff	 mov	 DWORD PTR [edx+608], -1
; Line 3486
  000af	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	c7 80 64 02 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+612], -1
; Line 3487
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	83 c4 10	 add	 esp, 16			; 00000010H
  000d4	3b ec		 cmp	 ebp, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDXUTButton@@UAE@XZ
__unwindfunclet$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 70 02 00
	00		 add	 ecx, 624		; 00000270H
  00011	e9 00 00 00 00	 jmp	 ??1CDXUTScrollBar@@UAE@XZ ; CDXUTScrollBar::~CDXUTScrollBar
__ehhandler$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTComboBox::CDXUTComboBox
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTListBox@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTListBox@@UAEPAXI@Z PROC			; CDXUTListBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTListBox@@UAE@XZ	; CDXUTListBox::~CDXUTListBox
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTListBox@@UAEPAXI@Z ENDP			; CDXUTListBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEII@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAUDXUTListBoxItem@@@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEPAPAUDXUTListBoxItem@@PAPAU2@00@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Umove<DXUTListBoxItem * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBE_NPBQAUDXUTListBoxItem@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBE_NPBQAUDXUTListBoxItem@@@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBE_NPBQAUDXUTListBoxItem@@@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@YAXPAPAUDXUTListBoxItem@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -32						; size = 4
tv181 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1438
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1441
  0004b	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00053	3b 45 f0	 cmp	 eax, DWORD PTR _this$[ebp]
  00056	75 16		 jne	 SHORT $LN1@erase
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0005e	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00061	72 0b		 jb	 SHORT $LN1@erase
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00069	3b 45 14	 cmp	 eax, DWORD PTR __Where$[ebp+8]
  0006c	77 21		 ja	 SHORT $LN2@erase
$LN1@erase:
; Line 1442
  0006e	8b f4		 mov	 esi, esp
  00070	68 a2 05 00 00	 push	 1442			; 000005a2H
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@erase:
; Line 1443
  0008f	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  00092	51		 push	 ecx
  00093	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00099	50		 push	 eax
  0009a	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0009d	83 c1 04	 add	 ecx, 4
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ??$_Move@PAPAUDXUTListBoxItem@@PAPAU1@@std@@YAPAPAUDXUTListBoxItem@@PAPAU1@00@Z ; std::_Move<DXUTListBoxItem * *,DXUTListBoxItem * *>
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1444
  000a9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000af	50		 push	 eax
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000b6	83 ea 04	 sub	 edx, 4
  000b9	52		 push	 edx
  000ba	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Destroy
; Line 1445
  000c2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c8	51		 push	 ecx
  000c9	8b 55 14	 mov	 edx, DWORD PTR __Where$[ebp+8]
  000cc	52		 push	 edx
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Orphan_range
; Line 1446
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000db	83 e9 04	 sub	 ecx, 4
  000de	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1447
  000e4	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000e7	8b cc		 mov	 ecx, esp
  000e9	89 65 ec	 mov	 DWORD PTR $T3[ebp], esp
  000ec	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  000f5	89 45 e4	 mov	 DWORD PTR tv181[ebp], eax
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000fb	51		 push	 ecx
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Make_iter
  00104	89 45 e0	 mov	 DWORD PTR tv182[ebp], eax
  00107	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  0010a	83 ca 01	 or	 edx, 1
  0010d	89 55 e8	 mov	 DWORD PTR $T2[ebp], edx
  00110	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00117	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0011a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
  0011f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1448
  00122	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00125	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012c	59		 pop	 ecx
  0012d	5e		 pop	 esi
  0012e	83 c4 20	 add	 esp, 32			; 00000020H
  00131	3b ec		 cmp	 ebp, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXABQAUDXUTListBoxItem@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXABQAUDXUTListBoxItem@@@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTListBoxItem@@@std@@YAPBQAUDXUTListBoxItem@@ABQAU1@@Z ; std::addressof<DXUTListBoxItem * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBE_NPBQAUDXUTListBoxItem@@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTListBoxItem@@@std@@YAPBQAUDXUTListBoxItem@@ABQAU1@@Z ; std::addressof<DXUTListBoxItem * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAUDXUTListBoxItem@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXI@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IBEXPAPAUDXUTListBoxItem@@0@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAUDXUTListBoxItem@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::construct<DXUTListBoxItem *,DXUTListBoxItem * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXABQAUDXUTListBoxItem@@@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1MG@CFBLHEIG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAL?$AAi?$AAs?$AAt?$AAB?$AAo?$AAx?$AAI?$AAt@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEABQAUDXUTListBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEABQAUDXUTListBoxItem@@I@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1183
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1185
  00020	8b f4		 mov	 esi, esp
  00022	68 a1 04 00 00	 push	 1185			; 000004a1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 a2 04 00 00	 push	 1186			; 000004a2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 a2 04 00 00	 push	 1186			; 000004a2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1MG@CFBLHEIG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAL?$AAi?$AAs?$AAt?$AAB?$AAo?$AAx?$AAI?$AAt@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1193
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1194
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEABQAUDXUTListBoxItem@@I@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE_NXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1158
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00020	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00023	75 09		 jne	 SHORT $LN3@empty
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN4@empty
$LN3@empty:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN4@empty:
  00035	8a 45 f8	 mov	 al, BYTE PTR tv75[ebp]
; Line 1159
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?empty@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE_NXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1044
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1045
  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0004b	51		 push	 ecx
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
  00054	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp]
  00057	83 ca 01	 or	 edx, 1
  0005a	89 55 ec	 mov	 DWORD PTR $T2[ebp], edx
  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00067	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
  0006c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1046
  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	83 c4 14	 add	 esp, 20			; 00000014H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Make_iter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@PAPAUDXUTListBoxItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::~vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@IAEXXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::~vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTListBoxItem@@@std@@QAE@XZ ; std::allocator<DXUTListBoxItem *>::allocator<DXUTListBoxItem *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTListBoxItem@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >::~_Vector_val<std::_Simple_types<DXUTListBoxItem *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >::~_Vector_val<std::_Simple_types<DXUTListBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >::_Vector_val<std::_Simple_types<DXUTListBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTListBoxItem@@@2@@Z ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ; std::allocator<DXUTListBoxItem *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z ; std::allocator<DXUTListBoxItem *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTListBoxItem@@@std@@QAE@XZ ; std::allocator<DXUTListBoxItem *>::allocator<DXUTListBoxItem *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >::_Wrap_alloc<std::allocator<DXUTListBoxItem *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTListBoxItem@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTListBoxItem@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAUDXUTListBoxItem@@@std@@QBEIXZ ; std::allocator<DXUTListBoxItem *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@SAIABV?$allocator@PAUDXUTListBoxItem@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUTListBoxItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAUDXUTListBoxItem@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUDXUTListBoxItem@@@std@@QBEIXZ PROC ; std::allocator<DXUTListBoxItem *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAUDXUTListBoxItem@@@std@@QBEIXZ ENDP ; std::allocator<DXUTListBoxItem *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU3@@Z PROC ; std::allocator<DXUTListBoxItem *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@ABQAU3@@Z ENDP ; std::allocator<DXUTListBoxItem *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z PROC ; std::allocator<DXUTListBoxItem *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAUDXUTListBoxItem@@@std@@YAPAPAUDXUTListBoxItem@@IPAPAU1@@Z ; std::_Allocate<DXUTListBoxItem *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEPAPAUDXUTListBoxItem@@I@Z ENDP ; std::allocator<DXUTListBoxItem *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z PROC ; std::allocator<DXUTListBoxItem *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUDXUTListBoxItem@@@std@@QAEXPAPAUDXUTListBoxItem@@I@Z ENDP ; std::allocator<DXUTListBoxItem *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAUDXUTListBoxItem@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUDXUTListBoxItem@@@std@@QAE@XZ PROC	; std::allocator<DXUTListBoxItem *>::allocator<DXUTListBoxItem *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAUDXUTListBoxItem@@@std@@QAE@XZ ENDP	; std::allocator<DXUTListBoxItem *>::allocator<DXUTListBoxItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nOldSelected$ = -8					; size = 4
_this$ = -4						; size = 4
_nNewIndex$ = 8						; size = 4
?SelectItem@CDXUTListBox@@QAEXH@Z PROC			; CDXUTListBox::SelectItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4993
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4995
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00020	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00025	85 c0		 test	 eax, eax
  00027	75 05		 jne	 SHORT $LN5@SelectItem
; Line 4996
  00029	e9 de 00 00 00	 jmp	 $LN6@SelectItem
$LN5@SelectItem:
; Line 4998
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 88 4c 01 00
	00		 mov	 ecx, DWORD PTR [eax+332]
  00037	89 4d f8	 mov	 DWORD PTR _nOldSelected$[ebp], ecx
; Line 5001
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 45 08	 mov	 eax, DWORD PTR _nNewIndex$[ebp]
  00040	89 82 4c 01 00
	00		 mov	 DWORD PTR [edx+332], eax
; Line 5004
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 b9 4c 01 00
	00 00		 cmp	 DWORD PTR [ecx+332], 0
  00050	7d 0d		 jge	 SHORT $LN4@SelectItem
; Line 5005
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	c7 82 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+332], 0
$LN4@SelectItem:
; Line 5006
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00068	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	39 81 4c 01 00
	00		 cmp	 DWORD PTR [ecx+332], eax
  00076	7c 1a		 jl	 SHORT $LN3@SelectItem
; Line 5007
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00081	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00086	83 e8 01	 sub	 eax, 1
  00089	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	89 82 4c 01 00
	00		 mov	 DWORD PTR [edx+332], eax
$LN3@SelectItem:
; Line 5009
  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _nOldSelected$[ebp]
  00098	3b 88 4c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+332]
  0009e	74 56		 je	 SHORT $LN2@SelectItem
; Line 5011
  000a0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	8b 82 48 01 00
	00		 mov	 eax, DWORD PTR [edx+328]
  000a9	83 e0 01	 and	 eax, 1
  000ac	74 21		 je	 SHORT $LN1@SelectItem
; Line 5013
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  000b7	52		 push	 edx
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000c1	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  000c6	8b 00		 mov	 eax, DWORD PTR [eax]
  000c8	c6 80 14 02 00
	00 01		 mov	 BYTE PTR [eax+532], 1
$LN1@SelectItem:
; Line 5017
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d5	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
  000db	89 81 50 01 00
	00		 mov	 DWORD PTR [ecx+336], eax
; Line 5020
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  000ea	52		 push	 edx
  000eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	83 c1 78	 add	 ecx, 120		; 00000078H
  000f1	e8 00 00 00 00	 call	 ?ShowItem@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::ShowItem
$LN2@SelectItem:
; Line 5023
  000f6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f9	50		 push	 eax
  000fa	6a 01		 push	 1
  000fc	68 02 07 00 00	 push	 1794			; 00000702H
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00107	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN6@SelectItem:
; Line 5024
  0010c	83 c4 08	 add	 esp, 8
  0010f	3b ec		 cmp	 ebp, esp
  00111	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 04 00	 ret	 4
?SelectItem@CDXUTListBox@@QAEXH@Z ENDP			; CDXUTListBox::SelectItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pItem$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_nPreviousSelected$ = 8					; size = 4
?GetSelectedIndex@CDXUTListBox@@QBEHH@Z PROC		; CDXUTListBox::GetSelectedIndex
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4966
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4967
  0001e	83 7d 08 ff	 cmp	 DWORD PTR _nPreviousSelected$[ebp], -1
  00022	7d 05		 jge	 SHORT $LN7@GetSelecte
; Line 4968
  00024	83 c8 ff	 or	 eax, -1
  00027	eb 71		 jmp	 SHORT $LN8@GetSelecte
$LN7@GetSelecte:
; Line 4970
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 88 48 01 00
	00		 mov	 ecx, DWORD PTR [eax+328]
  00032	83 e1 01	 and	 ecx, 1
  00035	74 5a		 je	 SHORT $LN6@GetSelecte
; Line 4973
  00037	8b 55 08	 mov	 edx, DWORD PTR _nPreviousSelected$[ebp]
  0003a	83 c2 01	 add	 edx, 1
  0003d	89 55 f8	 mov	 DWORD PTR _i$2[ebp], edx
  00040	eb 09		 jmp	 SHORT $LN5@GetSelecte
$LN4@GetSelecte:
  00042	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00045	83 c0 01	 add	 eax, 1
  00048	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN5@GetSelecte:
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00054	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00059	39 45 f8	 cmp	 DWORD PTR _i$2[ebp], eax
  0005c	7d 2c		 jge	 SHORT $LN3@GetSelecte
; Line 4975
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00061	51		 push	 ecx
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0006b	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEABQAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00070	8b 10		 mov	 edx, DWORD PTR [eax]
  00072	89 55 f4	 mov	 DWORD PTR _pItem$1[ebp], edx
; Line 4977
  00075	8b 45 f4	 mov	 eax, DWORD PTR _pItem$1[ebp]
  00078	0f b6 88 14 02
	00 00		 movzx	 ecx, BYTE PTR [eax+532]
  0007f	85 c9		 test	 ecx, ecx
  00081	74 05		 je	 SHORT $LN2@GetSelecte
; Line 4978
  00083	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00086	eb 12		 jmp	 SHORT $LN8@GetSelecte
$LN2@GetSelecte:
; Line 4979
  00088	eb b8		 jmp	 SHORT $LN4@GetSelecte
$LN3@GetSelecte:
; Line 4981
  0008a	83 c8 ff	 or	 eax, -1
  0008d	eb 0b		 jmp	 SHORT $LN8@GetSelecte
; Line 4983
  0008f	eb 09		 jmp	 SHORT $LN8@GetSelecte
$LN6@GetSelecte:
; Line 4986
  00091	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00094	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
$LN8@GetSelecte:
; Line 4988
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?GetSelectedIndex@CDXUTListBox@@QBEHH@Z ENDP		; CDXUTListBox::GetSelectedIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetItem@CDXUTListBox@@QBEPAUDXUTListBoxItem@@H@Z PROC	; CDXUTListBox::GetItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4950
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4951
  0000e	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00012	7c 13		 jl	 SHORT $LN1@GetItem
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0001d	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00022	39 45 08	 cmp	 DWORD PTR _nIndex$[ebp], eax
  00025	7c 04		 jl	 SHORT $LN2@GetItem
$LN1@GetItem:
; Line 4952
  00027	33 c0		 xor	 eax, eax
  00029	eb 14		 jmp	 SHORT $LN3@GetItem
$LN2@GetItem:
; Line 4954
  0002b	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00038	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEABQAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  0003d	8b 00		 mov	 eax, DWORD PTR [eax]
$LN3@GetItem:
; Line 4955
  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?GetItem@CDXUTListBox@@QBEPAUDXUTListBoxItem@@H@Z ENDP	; CDXUTListBox::GetItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv132 = -68						; size = 4
tv66 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 12
$T4 = -41						; size = 1
_pItem$5 = -40						; size = 4
_it$6 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RemoveAllItems@CDXUTListBox@@QAEXXZ PROC		; CDXUTListBox::RemoveAllItems
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4936
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveAllItems@CDXUTListBox@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00019	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4937
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$6[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00047	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::begin
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	eb 08		 jmp	 SHORT $LN3@RemoveAllI
$LN2@RemoveAllI:
  00055	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00058	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator++
$LN3@RemoveAllI:
  0005d	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0006a	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::end
  0006f	89 45 c0	 mov	 DWORD PTR tv66[ebp], eax
  00072	8b 55 c0	 mov	 edx, DWORD PTR tv66[ebp]
  00075	89 55 bc	 mov	 DWORD PTR tv132[ebp], edx
  00078	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007c	8b 45 bc	 mov	 eax, DWORD PTR tv132[ebp]
  0007f	50		 push	 eax
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00083	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator!=
  00088	88 45 d7	 mov	 BYTE PTR $T4[ebp], al
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008f	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00092	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
  00097	0f b6 4d d7	 movzx	 ecx, BYTE PTR $T4[ebp]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 21		 je	 SHORT $LN1@RemoveAllI
; Line 4939
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000a2	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTListBoxItem@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*
  000a7	8b 10		 mov	 edx, DWORD PTR [eax]
  000a9	89 55 d8	 mov	 DWORD PTR _pItem$5[ebp], edx
; Line 4940
  000ac	8b 45 d8	 mov	 eax, DWORD PTR _pItem$5[ebp]
  000af	89 45 c4	 mov	 DWORD PTR $T2[ebp], eax
  000b2	8b 4d c4	 mov	 ecx, DWORD PTR $T2[ebp]
  000b5	51		 push	 ecx
  000b6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000bb	83 c4 04	 add	 esp, 4
  000be	eb 95		 jmp	 SHORT $LN2@RemoveAllI
$LN1@RemoveAllI:
; Line 4941
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000ca	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
; Line 4943
  000cf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000d8	e8 00 00 00 00	 call	 ?clear@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::clear
; Line 4944
  000dd	6a 01		 push	 1
  000df	6a 00		 push	 0
  000e1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	83 c1 78	 add	 ecx, 120		; 00000078H
  000e7	e8 00 00 00 00	 call	 ?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ; CDXUTScrollBar::SetTrackRange
; Line 4945
  000ec	52		 push	 edx
  000ed	8b cd		 mov	 ecx, ebp
  000ef	50		 push	 eax
  000f0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@RemoveAllI
  000f6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000fb	58		 pop	 eax
  000fc	5a		 pop	 edx
  000fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00107	59		 pop	 ecx
  00108	5f		 pop	 edi
  00109	83 c4 44	 add	 esp, 68			; 00000044H
  0010c	3b ec		 cmp	 ebp, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
  00117	90		 npad	 1
$LN11@RemoveAllI:
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN10@RemoveAllI
$LN10@RemoveAllI:
  00120	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00124	0c 00 00 00	 DD	 12			; 0000000cH
  00128	00 00 00 00	 DD	 $LN8@RemoveAllI
$LN8@RemoveAllI:
  0012c	69		 DB	 105			; 00000069H
  0012d	74		 DB	 116			; 00000074H
  0012e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveAllItems@CDXUTListBox@@QAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveAllItems@CDXUTListBox@@QAEXXZ$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveAllItems@CDXUTListBox@@QAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveAllItems@CDXUTListBox@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveAllItems@CDXUTListBox@@QAEXXZ ENDP		; CDXUTListBox::RemoveAllItems
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv173 = -88						; size = 4
tv172 = -84						; size = 4
tv169 = -80						; size = 4
tv175 = -76						; size = 4
$T2 = -72						; size = 12
$T3 = -60						; size = 4
$T4 = -56						; size = 4
$T5 = -52						; size = 12
_pItem$ = -40						; size = 4
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nIndex$ = 8						; size = 4
?RemoveItem@CDXUTListBox@@QAEXH@Z PROC			; CDXUTListBox::RemoveItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4918
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveItem@CDXUTListBox@@QAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a8	 lea	 edi, DWORD PTR [ebp-88]
  00019	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4919
  0003a	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0003e	7c 13		 jl	 SHORT $LN2@RemoveItem
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00049	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  0004e	39 45 08	 cmp	 DWORD PTR _nIndex$[ebp], eax
  00051	7c 05		 jl	 SHORT $LN3@RemoveItem
$LN2@RemoveItem:
; Line 4920
  00053	e9 02 01 00 00	 jmp	 $LN4@RemoveItem
$LN3@RemoveItem:
; Line 4922
  00058	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0005b	50		 push	 eax
  0005c	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  0005f	51		 push	 ecx
  00060	8d 55 cc	 lea	 edx, DWORD PTR $T5[ebp]
  00063	52		 push	 edx
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0006d	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::begin
  00072	89 45 b4	 mov	 DWORD PTR tv175[ebp], eax
  00075	8b 45 b4	 mov	 eax, DWORD PTR tv175[ebp]
  00078	89 45 b0	 mov	 DWORD PTR tv169[ebp], eax
  0007b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00082	8b 4d b0	 mov	 ecx, DWORD PTR tv169[ebp]
  00085	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator+
  0008a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0008e	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  00091	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
; Line 4923
  00096	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00099	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QBEAAPAUDXUTListBoxItem@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTListBoxItem *> > >::operator*
  0009e	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a0	89 4d d8	 mov	 DWORD PTR _pItem$[ebp], ecx
; Line 4924
  000a3	8b 55 d8	 mov	 edx, DWORD PTR _pItem$[ebp]
  000a6	89 55 c8	 mov	 DWORD PTR $T4[ebp], edx
  000a9	8b 45 c8	 mov	 eax, DWORD PTR $T4[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b2	83 c4 04	 add	 esp, 4
; Line 4925
  000b5	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000b8	8b cc		 mov	 ecx, esp
  000ba	89 65 c4	 mov	 DWORD PTR $T3[ebp], esp
  000bd	8d 55 e0	 lea	 edx, DWORD PTR _it$[ebp]
  000c0	52		 push	 edx
  000c1	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@ABV01@@Z
  000c6	89 45 ac	 mov	 DWORD PTR tv172[ebp], eax
  000c9	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  000cc	50		 push	 eax
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000d6	e8 00 00 00 00	 call	 ?erase@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@2@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::erase
  000db	89 45 a8	 mov	 DWORD PTR tv173[ebp], eax
  000de	8d 4d b8	 lea	 ecx, DWORD PTR $T2[ebp]
  000e1	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
; Line 4926
  000e6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000ef	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  000f4	50		 push	 eax
  000f5	6a 00		 push	 0
  000f7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	83 c1 78	 add	 ecx, 120		; 00000078H
  000fd	e8 00 00 00 00	 call	 ?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ; CDXUTScrollBar::SetTrackRange
; Line 4927
  00102	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0010b	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00110	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	39 81 4c 01 00
	00		 cmp	 DWORD PTR [ecx+332], eax
  00119	7c 1a		 jl	 SHORT $LN1@RemoveItem
; Line 4928
  0011b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00124	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00129	83 e8 01	 sub	 eax, 1
  0012c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0012f	89 82 4c 01 00
	00		 mov	 DWORD PTR [edx+332], eax
$LN1@RemoveItem:
; Line 4930
  00135	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00138	50		 push	 eax
  00139	6a 01		 push	 1
  0013b	68 02 07 00 00	 push	 1794			; 00000702H
  00140	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00146	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 4931
  0014b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00152	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00155	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
$LN4@RemoveItem:
  0015a	52		 push	 edx
  0015b	8b cd		 mov	 ecx, ebp
  0015d	50		 push	 eax
  0015e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@RemoveItem
  00164	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00169	58		 pop	 eax
  0016a	5a		 pop	 edx
  0016b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0016e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00175	59		 pop	 ecx
  00176	5f		 pop	 edi
  00177	83 c4 58	 add	 esp, 88			; 00000058H
  0017a	3b ec		 cmp	 ebp, esp
  0017c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00181	8b e5		 mov	 esp, ebp
  00183	5d		 pop	 ebp
  00184	c2 04 00	 ret	 4
  00187	90		 npad	 1
$LN13@RemoveItem:
  00188	01 00 00 00	 DD	 1
  0018c	00 00 00 00	 DD	 $LN12@RemoveItem
$LN12@RemoveItem:
  00190	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00194	0c 00 00 00	 DD	 12			; 0000000cH
  00198	00 00 00 00	 DD	 $LN10@RemoveItem
$LN10@RemoveItem:
  0019c	69		 DB	 105			; 00000069H
  0019d	74		 DB	 116			; 00000074H
  0019e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveItem@CDXUTListBox@@QAEXH@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveItem@CDXUTListBox@@QAEXH@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTListBoxItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveItem@CDXUTListBox@@QAEXH@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveItem@CDXUTListBox@@QAEXH@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveItem@CDXUTListBox@@QAEXH@Z ENDP			; CDXUTListBox::RemoveItem
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -12						; size = 4
_pNewItem$ = -8						; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_wszText$ = 12						; size = 4
_pData$ = 16						; size = 4
?InsertItem@CDXUTListBox@@QAEJHPB_WPAX@Z PROC		; CDXUTListBox::InsertItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4899
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4900
  0001f	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00024	68 18 02 00 00	 push	 536			; 00000218H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00034	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  00037	89 45 f8	 mov	 DWORD PTR _pNewItem$[ebp], eax
; Line 4901
  0003a	83 7d f8 00	 cmp	 DWORD PTR _pNewItem$[ebp], 0
  0003e	75 0a		 jne	 SHORT $LN1@InsertItem
; Line 4902
  00040	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00045	e9 8b 00 00 00	 jmp	 $LN2@InsertItem
$LN1@InsertItem:
; Line 4904
  0004a	8b f4		 mov	 esi, esp
  0004c	8b 4d 0c	 mov	 ecx, DWORD PTR _wszText$[ebp]
  0004f	51		 push	 ecx
  00050	68 00 01 00 00	 push	 256			; 00000100H
  00055	8b 55 f8	 mov	 edx, DWORD PTR _pNewItem$[ebp]
  00058	52		 push	 edx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4905
  00069	8b 45 f8	 mov	 eax, DWORD PTR _pNewItem$[ebp]
  0006c	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0006f	89 88 00 02 00
	00		 mov	 DWORD PTR [eax+512], ecx
; Line 4906
  00075	8b f4		 mov	 esi, esp
  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	6a 00		 push	 0
  0007f	8b 55 f8	 mov	 edx, DWORD PTR _pNewItem$[ebp]
  00082	81 c2 04 02 00
	00		 add	 edx, 516		; 00000204H
  00088	52		 push	 edx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0008f	3b f4		 cmp	 esi, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4907
  00096	8b 45 f8	 mov	 eax, DWORD PTR _pNewItem$[ebp]
  00099	c6 80 14 02 00
	00 00		 mov	 BYTE PTR [eax+532], 0
; Line 4909
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  000a3	51		 push	 ecx
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000ad	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  000b2	8b 55 f8	 mov	 edx, DWORD PTR _pNewItem$[ebp]
  000b5	89 10		 mov	 DWORD PTR [eax], edx
; Line 4910
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000c0	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  000c5	50		 push	 eax
  000c6	6a 00		 push	 0
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	83 c1 78	 add	 ecx, 120		; 00000078H
  000ce	e8 00 00 00 00	 call	 ?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ; CDXUTScrollBar::SetTrackRange
; Line 4912
  000d3	33 c0		 xor	 eax, eax
$LN2@InsertItem:
; Line 4913
  000d5	5e		 pop	 esi
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d9	3b ec		 cmp	 ebp, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 0c 00	 ret	 12			; 0000000cH
?InsertItem@CDXUTListBox@@QAEJHPB_WPAX@Z ENDP		; CDXUTListBox::InsertItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -20						; size = 4
_pNewItem$ = -12					; size = 4
_this$ = -4						; size = 4
_wszText$ = 8						; size = 4
_pData$ = 12						; size = 4
?AddItem@CDXUTListBox@@QAEJPB_WPAX@Z PROC		; CDXUTListBox::AddItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4879
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4880
  0001e	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00023	68 18 02 00 00	 push	 536			; 00000218H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  0002d	83 c4 08	 add	 esp, 8
  00030	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00033	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  00036	89 45 f4	 mov	 DWORD PTR _pNewItem$[ebp], eax
; Line 4881
  00039	83 7d f4 00	 cmp	 DWORD PTR _pNewItem$[ebp], 0
  0003d	75 0a		 jne	 SHORT $LN1@AddItem
; Line 4882
  0003f	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00044	e9 86 00 00 00	 jmp	 $LN2@AddItem
$LN1@AddItem:
; Line 4884
  00049	8b f4		 mov	 esi, esp
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _wszText$[ebp]
  0004e	51		 push	 ecx
  0004f	68 00 01 00 00	 push	 256			; 00000100H
  00054	8b 55 f4	 mov	 edx, DWORD PTR _pNewItem$[ebp]
  00057	52		 push	 edx
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4885
  00068	8b 45 f4	 mov	 eax, DWORD PTR _pNewItem$[ebp]
  0006b	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0006e	89 88 00 02 00
	00		 mov	 DWORD PTR [eax+512], ecx
; Line 4886
  00074	8b f4		 mov	 esi, esp
  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	6a 00		 push	 0
  0007c	6a 00		 push	 0
  0007e	8b 55 f4	 mov	 edx, DWORD PTR _pNewItem$[ebp]
  00081	81 c2 04 02 00
	00		 add	 edx, 516		; 00000204H
  00087	52		 push	 edx
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4887
  00095	8b 45 f4	 mov	 eax, DWORD PTR _pNewItem$[ebp]
  00098	c6 80 14 02 00
	00 00		 mov	 BYTE PTR [eax+532], 0
; Line 4889
  0009f	8d 4d f4	 lea	 ecx, DWORD PTR _pNewItem$[ebp]
  000a2	51		 push	 ecx
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000ac	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEXABQAUDXUTListBoxItem@@@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::push_back
; Line 4890
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  000bf	50		 push	 eax
  000c0	6a 00		 push	 0
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 c1 78	 add	 ecx, 120		; 00000078H
  000c8	e8 00 00 00 00	 call	 ?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ; CDXUTScrollBar::SetTrackRange
; Line 4892
  000cd	33 c0		 xor	 eax, eax
$LN2@AddItem:
; Line 4893
  000cf	52		 push	 edx
  000d0	8b cd		 mov	 ecx, ebp
  000d2	50		 push	 eax
  000d3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@AddItem
  000d9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000de	58		 pop	 eax
  000df	5a		 pop	 edx
  000e0	5e		 pop	 esi
  000e1	83 c4 14	 add	 esp, 20			; 00000014H
  000e4	3b ec		 cmp	 ebp, esp
  000e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
  000f1	8d 49 00	 npad	 3
$LN6@AddItem:
  000f4	01 00 00 00	 DD	 1
  000f8	00 00 00 00	 DD	 $LN5@AddItem
$LN5@AddItem:
  000fc	f4 ff ff ff	 DD	 -12			; fffffff4H
  00100	04 00 00 00	 DD	 4
  00104	00 00 00 00	 DD	 $LN4@AddItem
$LN4@AddItem:
  00108	70		 DB	 112			; 00000070H
  00109	4e		 DB	 78			; 0000004eH
  0010a	65		 DB	 101			; 00000065H
  0010b	77		 DB	 119			; 00000077H
  0010c	49		 DB	 73			; 00000049H
  0010d	74		 DB	 116			; 00000074H
  0010e	65		 DB	 101			; 00000065H
  0010f	6d		 DB	 109			; 0000006dH
  00110	00		 DB	 0
?AddItem@CDXUTListBox@@QAEJPB_WPAX@Z ENDP		; CDXUTListBox::AddItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStyle@CDXUTListBox@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStyle$ = 8						; size = 4
?SetStyle@CDXUTListBox@@QAEXK@Z PROC			; CDXUTListBox::SetStyle, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 811
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  00014	89 88 48 01 00
	00		 mov	 DWORD PTR [eax+328], ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetStyle@CDXUTListBox@@QAEXK@Z ENDP			; CDXUTListBox::SetStyle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pFontNode$ = -8					; size = 4
_this$ = -4						; size = 4
?UpdateRects@CDXUTListBox@@UAEXXZ PROC			; CDXUTListBox::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4852
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4853
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?UpdateRects@CDXUTControl@@MAEXXZ ; CDXUTControl::UpdateRects
; Line 4855
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 c0 44	 add	 eax, 68			; 00000044H
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 64	 add	 ecx, 100		; 00000064H
  0002c	8b 10		 mov	 edx, DWORD PTR [eax]
  0002e	89 11		 mov	 DWORD PTR [ecx], edx
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00036	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00039	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0003c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0003f	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 4856
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 41 6c	 mov	 eax, DWORD PTR [ecx+108]
  0004b	2b 82 38 01 00
	00		 sub	 eax, DWORD PTR [edx+312]
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	89 41 6c	 mov	 DWORD PTR [ecx+108], eax
; Line 4857
  00057	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 82 3c 01 00
	00		 mov	 eax, DWORD PTR [edx+316]
  00060	f7 d8		 neg	 eax
  00062	8b f4		 mov	 esi, esp
  00064	50		 push	 eax
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	8b 91 3c 01 00
	00		 mov	 edx, DWORD PTR [ecx+316]
  0006e	f7 da		 neg	 edx
  00070	52		 push	 edx
  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	83 c0 64	 add	 eax, 100		; 00000064H
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4858
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	83 c1 64	 add	 ecx, 100		; 00000064H
  0008b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008e	83 c2 54	 add	 edx, 84			; 00000054H
  00091	8b 01		 mov	 eax, DWORD PTR [ecx]
  00093	89 02		 mov	 DWORD PTR [edx], eax
  00095	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00098	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0009b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0009e	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000a1	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  000a4	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
; Line 4859
  000a7	8b f4		 mov	 esi, esp
  000a9	6a 00		 push	 0
  000ab	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ae	8b 82 40 01 00
	00		 mov	 eax, DWORD PTR [edx+320]
  000b4	f7 d8		 neg	 eax
  000b6	50		 push	 eax
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	83 c1 54	 add	 ecx, 84			; 00000054H
  000bd	51		 push	 ecx
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InflateRect@12
  000c4	3b f4		 cmp	 esi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4862
  000cb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  000d1	50		 push	 eax
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
  000db	2b 82 38 01 00
	00		 sub	 eax, DWORD PTR [edx+312]
  000e1	50		 push	 eax
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	83 c1 78	 add	 ecx, 120		; 00000078H
  000e8	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 4863
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000f3	52		 push	 edx
  000f4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 88 38 01 00
	00		 mov	 ecx, DWORD PTR [eax+312]
  000fd	51		 push	 ecx
  000fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	83 c1 78	 add	 ecx, 120		; 00000078H
  00104	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 4864
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	83 c1 20	 add	 ecx, 32			; 00000020H
  00111	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00116	8b 10		 mov	 edx, DWORD PTR [eax]
  00118	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0011b	50		 push	 eax
  0011c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00122	e8 00 00 00 00	 call	 ?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ ; CDXUTDialog::GetManager
  00127	8b c8		 mov	 ecx, eax
  00129	e8 00 00 00 00	 call	 ?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialogResourceManager::GetFontNode
  0012e	89 45 f8	 mov	 DWORD PTR _pFontNode$[ebp], eax
; Line 4865
  00131	83 7d f8 00	 cmp	 DWORD PTR _pFontNode$[ebp], 0
  00135	74 46		 je	 SHORT $LN2@UpdateRect
  00137	8b 55 f8	 mov	 edx, DWORD PTR _pFontNode$[ebp]
  0013a	83 ba 08 02 00
	00 00		 cmp	 DWORD PTR [edx+520], 0
  00141	74 3a		 je	 SHORT $LN2@UpdateRect
; Line 4867
  00143	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00146	83 c0 54	 add	 eax, 84			; 00000054H
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  0014f	83 c4 04	 add	 esp, 4
  00152	8b 4d f8	 mov	 ecx, DWORD PTR _pFontNode$[ebp]
  00155	99		 cdq
  00156	f7 b9 08 02 00
	00		 idiv	 DWORD PTR [ecx+520]
  0015c	50		 push	 eax
  0015d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	83 c1 78	 add	 ecx, 120		; 00000078H
  00163	e8 00 00 00 00	 call	 ?SetPageSize@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::SetPageSize
; Line 4871
  00168	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0016b	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
  00171	50		 push	 eax
  00172	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00175	83 c1 78	 add	 ecx, 120		; 00000078H
  00178	e8 00 00 00 00	 call	 ?ShowItem@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::ShowItem
$LN2@UpdateRect:
; Line 4873
  0017d	5e		 pop	 esi
  0017e	83 c4 08	 add	 esp, 8
  00181	3b ec		 cmp	 ebp, esp
  00183	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c3		 ret	 0
?UpdateRects@CDXUTListBox@@UAEXXZ ENDP			; CDXUTListBox::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bSelectedStyle$1 = -73					; size = 1
_pItem$2 = -72						; size = 4
_i$3 = -68						; size = 4
_rcSel$4 = -60						; size = 16
_rc$5 = -36						; size = 16
_pSelElement$ = -16					; size = 4
_pElement$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTListBox@@UAEXM@Z PROC			; CDXUTListBox::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5380
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000c	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5381
  00026	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00029	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0002d	85 c9		 test	 ecx, ecx
  0002f	75 05		 jne	 SHORT $LN19@Render
; Line 5382
  00031	e9 91 03 00 00	 jmp	 $LN20@Render
$LN19@Render:
; Line 5384
  00036	6a 00		 push	 0
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	83 c1 20	 add	 ecx, 32			; 00000020H
  0003e	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	89 55 f4	 mov	 DWORD PTR _pElement$[ebp], edx
; Line 5385
  00048	51		 push	 ecx
  00049	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00051	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00056	51		 push	 ecx
  00057	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0005c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00061	6a 00		 push	 0
  00063	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00066	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00069	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 5386
  0006e	51		 push	 ecx
  0006f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00077	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007c	51		 push	 ecx
  0007d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	6a 00		 push	 0
  00089	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0008c	83 c1 44	 add	 ecx, 68			; 00000044H
  0008f	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 5388
  00094	6a 01		 push	 1
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	83 c1 20	 add	 ecx, 32			; 00000020H
  0009c	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  000a1	8b 00		 mov	 eax, DWORD PTR [eax]
  000a3	89 45 f0	 mov	 DWORD PTR _pSelElement$[ebp], eax
; Line 5389
  000a6	51		 push	 ecx
  000a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	51		 push	 ecx
  000b5	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	6a 00		 push	 0
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR _pSelElement$[ebp]
  000c4	83 c1 1c	 add	 ecx, 28			; 0000001cH
  000c7	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 5390
  000cc	51		 push	 ecx
  000cd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  000d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000da	51		 push	 ecx
  000db	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e5	6a 00		 push	 0
  000e7	8b 4d f0	 mov	 ecx, DWORD PTR _pSelElement$[ebp]
  000ea	83 c1 44	 add	 ecx, 68			; 00000044H
  000ed	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 5392
  000f2	51		 push	 ecx
  000f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  000fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00100	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	83 c1 44	 add	 ecx, 68			; 00000044H
  00106	51		 push	 ecx
  00107	8b 55 f4	 mov	 edx, DWORD PTR _pElement$[ebp]
  0010a	52		 push	 edx
  0010b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00111	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 5395
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0011f	e8 00 00 00 00	 call	 ?empty@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE_NXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::empty
  00124	0f b6 c8	 movzx	 ecx, al
  00127	85 c9		 test	 ecx, ecx
  00129	0f 85 73 02 00
	00		 jne	 $LN12@Render
; Line 5398
  0012f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00132	83 c2 54	 add	 edx, 84			; 00000054H
  00135	8b 02		 mov	 eax, DWORD PTR [edx]
  00137	89 45 dc	 mov	 DWORD PTR _rc$5[ebp], eax
  0013a	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0013d	89 4d e0	 mov	 DWORD PTR _rc$5[ebp+4], ecx
  00140	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00143	89 45 e4	 mov	 DWORD PTR _rc$5[ebp+8], eax
  00146	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00149	89 4d e8	 mov	 DWORD PTR _rc$5[ebp+12], ecx
; Line 5399
  0014c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0014f	83 c2 64	 add	 edx, 100		; 00000064H
  00152	8b 02		 mov	 eax, DWORD PTR [edx]
  00154	89 45 c4	 mov	 DWORD PTR _rcSel$4[ebp], eax
  00157	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0015a	89 4d c8	 mov	 DWORD PTR _rcSel$4[ebp+4], ecx
  0015d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00160	89 45 cc	 mov	 DWORD PTR _rcSel$4[ebp+8], eax
  00163	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00166	89 4d d0	 mov	 DWORD PTR _rcSel$4[ebp+12], ecx
; Line 5400
  00169	8b 55 f4	 mov	 edx, DWORD PTR _pElement$[ebp]
  0016c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0016f	50		 push	 eax
  00170	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00173	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00176	e8 00 00 00 00	 call	 ?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ ; CDXUTDialog::GetManager
  0017b	8b c8		 mov	 ecx, eax
  0017d	e8 00 00 00 00	 call	 ?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialogResourceManager::GetFontNode
  00182	8b 55 e0	 mov	 edx, DWORD PTR _rc$5[ebp+4]
  00185	03 90 08 02 00
	00		 add	 edx, DWORD PTR [eax+520]
  0018b	89 55 e8	 mov	 DWORD PTR _rc$5[ebp+12], edx
; Line 5403
  0018e	8b 45 e8	 mov	 eax, DWORD PTR _rc$5[ebp+12]
  00191	2b 45 e0	 sub	 eax, DWORD PTR _rc$5[ebp+4]
  00194	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	89 81 44 01 00
	00		 mov	 DWORD PTR [ecx+324], eax
; Line 5406
  0019d	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?bSBInit@?6??Render@CDXUTListBox@@UAEXM@Z@4_NA
  001a4	85 d2		 test	 edx, edx
  001a6	75 55		 jne	 SHORT $LN17@Render
; Line 5409
  001a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ab	83 b8 44 01 00
	00 00		 cmp	 DWORD PTR [eax+324], 0
  001b2	74 27		 je	 SHORT $LN16@Render
; Line 5410
  001b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b7	83 c1 54	 add	 ecx, 84			; 00000054H
  001ba	51		 push	 ecx
  001bb	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  001c0	83 c4 04	 add	 esp, 4
  001c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c6	99		 cdq
  001c7	f7 b9 44 01 00
	00		 idiv	 DWORD PTR [ecx+324]
  001cd	50		 push	 eax
  001ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d1	83 c1 78	 add	 ecx, 120		; 00000078H
  001d4	e8 00 00 00 00	 call	 ?SetPageSize@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::SetPageSize
; Line 5411
  001d9	eb 1b		 jmp	 SHORT $LN15@Render
$LN16@Render:
; Line 5412
  001db	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001de	83 c2 54	 add	 edx, 84			; 00000054H
  001e1	52		 push	 edx
  001e2	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  001e7	83 c4 04	 add	 esp, 4
  001ea	50		 push	 eax
  001eb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ee	83 c1 78	 add	 ecx, 120		; 00000078H
  001f1	e8 00 00 00 00	 call	 ?SetPageSize@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::SetPageSize
$LN15@Render:
; Line 5413
  001f6	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bSBInit@?6??Render@CDXUTListBox@@UAEXM@Z@4_NA, 1
$LN17@Render:
; Line 5416
  001fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00200	8b 48 5c	 mov	 ecx, DWORD PTR [eax+92]
  00203	89 4d e4	 mov	 DWORD PTR _rc$5[ebp+8], ecx
; Line 5417
  00206	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00209	83 c1 78	 add	 ecx, 120		; 00000078H
  0020c	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00211	89 45 bc	 mov	 DWORD PTR _i$3[ebp], eax
  00214	eb 09		 jmp	 SHORT $LN14@Render
$LN13@Render:
  00216	8b 55 bc	 mov	 edx, DWORD PTR _i$3[ebp]
  00219	83 c2 01	 add	 edx, 1
  0021c	89 55 bc	 mov	 DWORD PTR _i$3[ebp], edx
$LN14@Render:
  0021f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00222	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00228	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  0022d	39 45 bc	 cmp	 DWORD PTR _i$3[ebp], eax
  00230	0f 8d 6c 01 00
	00		 jge	 $LN12@Render
; Line 5419
  00236	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00239	8b 4d e8	 mov	 ecx, DWORD PTR _rc$5[ebp+12]
  0023c	3b 48 60	 cmp	 ecx, DWORD PTR [eax+96]
  0023f	7e 05		 jle	 SHORT $LN11@Render
; Line 5420
  00241	e9 5c 01 00 00	 jmp	 $LN12@Render
$LN11@Render:
; Line 5422
  00246	8b 55 bc	 mov	 edx, DWORD PTR _i$3[ebp]
  00249	52		 push	 edx
  0024a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0024d	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00253	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00258	8b 00		 mov	 eax, DWORD PTR [eax]
  0025a	89 45 b8	 mov	 DWORD PTR _pItem$2[ebp], eax
; Line 5426
  0025d	c6 45 b7 00	 mov	 BYTE PTR _bSelectedStyle$1[ebp], 0
; Line 5428
  00261	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00264	8b 91 48 01 00
	00		 mov	 edx, DWORD PTR [ecx+328]
  0026a	83 e2 01	 and	 edx, 1
  0026d	75 17		 jne	 SHORT $LN10@Render
  0026f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00272	8b 4d bc	 mov	 ecx, DWORD PTR _i$3[ebp]
  00275	3b 88 4c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+332]
  0027b	75 09		 jne	 SHORT $LN10@Render
; Line 5429
  0027d	c6 45 b7 01	 mov	 BYTE PTR _bSelectedStyle$1[ebp], 1
  00281	e9 8b 00 00 00	 jmp	 $LN3@Render
$LN10@Render:
; Line 5430
  00286	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00289	8b 82 48 01 00
	00		 mov	 eax, DWORD PTR [edx+328]
  0028f	83 e0 01	 and	 eax, 1
  00292	74 7d		 je	 SHORT $LN3@Render
; Line 5434
  00294	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00297	0f b6 91 54 01
	00 00		 movzx	 edx, BYTE PTR [ecx+340]
  0029e	85 d2		 test	 edx, edx
  002a0	74 5d		 je	 SHORT $LN7@Render
  002a2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a5	8b 4d bc	 mov	 ecx, DWORD PTR _i$3[ebp]
  002a8	3b 88 4c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+332]
  002ae	7c 0e		 jl	 SHORT $LN5@Render
  002b0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002b3	8b 45 bc	 mov	 eax, DWORD PTR _i$3[ebp]
  002b6	3b 82 50 01 00
	00		 cmp	 eax, DWORD PTR [edx+336]
  002bc	7c 1c		 jl	 SHORT $LN6@Render
$LN5@Render:
  002be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c1	8b 55 bc	 mov	 edx, DWORD PTR _i$3[ebp]
  002c4	3b 91 4c 01 00
	00		 cmp	 edx, DWORD PTR [ecx+332]
  002ca	7f 33		 jg	 SHORT $LN7@Render
  002cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002cf	8b 4d bc	 mov	 ecx, DWORD PTR _i$3[ebp]
  002d2	3b 88 50 01 00
	00		 cmp	 ecx, DWORD PTR [eax+336]
  002d8	7e 25		 jle	 SHORT $LN7@Render
$LN6@Render:
; Line 5435
  002da	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002dd	8b 82 50 01 00
	00		 mov	 eax, DWORD PTR [edx+336]
  002e3	50		 push	 eax
  002e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e7	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  002ed	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  002f2	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f4	8a 91 14 02 00
	00		 mov	 dl, BYTE PTR [ecx+532]
  002fa	88 55 b7	 mov	 BYTE PTR _bSelectedStyle$1[ebp], dl
  002fd	eb 12		 jmp	 SHORT $LN3@Render
$LN7@Render:
; Line 5436
  002ff	8b 45 b8	 mov	 eax, DWORD PTR _pItem$2[ebp]
  00302	0f b6 88 14 02
	00 00		 movzx	 ecx, BYTE PTR [eax+532]
  00309	85 c9		 test	 ecx, ecx
  0030b	74 04		 je	 SHORT $LN3@Render
; Line 5437
  0030d	c6 45 b7 01	 mov	 BYTE PTR _bSelectedStyle$1[ebp], 1
$LN3@Render:
; Line 5440
  00311	0f b6 55 b7	 movzx	 edx, BYTE PTR _bSelectedStyle$1[ebp]
  00315	85 d2		 test	 edx, edx
  00317	74 4a		 je	 SHORT $LN2@Render
; Line 5442
  00319	8b 45 e0	 mov	 eax, DWORD PTR _rc$5[ebp+4]
  0031c	89 45 c8	 mov	 DWORD PTR _rcSel$4[ebp+4], eax
  0031f	8b 4d e8	 mov	 ecx, DWORD PTR _rc$5[ebp+12]
  00322	89 4d d0	 mov	 DWORD PTR _rcSel$4[ebp+12], ecx
; Line 5443
  00325	51		 push	 ecx
  00326	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  0032e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00333	8d 55 c4	 lea	 edx, DWORD PTR _rcSel$4[ebp]
  00336	52		 push	 edx
  00337	8b 45 f0	 mov	 eax, DWORD PTR _pSelElement$[ebp]
  0033a	50		 push	 eax
  0033b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0033e	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00341	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 5444
  00346	6a 00		 push	 0
  00348	6a 00		 push	 0
  0034a	8d 55 dc	 lea	 edx, DWORD PTR _rc$5[ebp]
  0034d	52		 push	 edx
  0034e	8b 45 f0	 mov	 eax, DWORD PTR _pSelElement$[ebp]
  00351	50		 push	 eax
  00352	8b 4d b8	 mov	 ecx, DWORD PTR _pItem$2[ebp]
  00355	51		 push	 ecx
  00356	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00359	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0035c	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 5446
  00361	eb 1b		 jmp	 SHORT $LN1@Render
$LN2@Render:
; Line 5447
  00363	6a 00		 push	 0
  00365	6a 00		 push	 0
  00367	8d 45 dc	 lea	 eax, DWORD PTR _rc$5[ebp]
  0036a	50		 push	 eax
  0036b	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0036e	51		 push	 ecx
  0036f	8b 55 b8	 mov	 edx, DWORD PTR _pItem$2[ebp]
  00372	52		 push	 edx
  00373	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00376	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00379	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN1@Render:
; Line 5449
  0037e	8b f4		 mov	 esi, esp
  00380	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00383	8b 91 44 01 00
	00		 mov	 edx, DWORD PTR [ecx+324]
  00389	52		 push	 edx
  0038a	6a 00		 push	 0
  0038c	8d 45 dc	 lea	 eax, DWORD PTR _rc$5[ebp]
  0038f	50		 push	 eax
  00390	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00396	3b f4		 cmp	 esi, esp
  00398	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5450
  0039d	e9 74 fe ff ff	 jmp	 $LN13@Render
$LN12@Render:
; Line 5455
  003a2	8b f4		 mov	 esi, esp
  003a4	51		 push	 ecx
  003a5	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  003aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003b2	83 c1 78	 add	 ecx, 120		; 00000078H
  003b5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003b8	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  003bb	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  003be	ff d2		 call	 edx
  003c0	3b f4		 cmp	 esi, esp
  003c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN20@Render:
; Line 5456
  003c7	52		 push	 edx
  003c8	8b cd		 mov	 ecx, ebp
  003ca	50		 push	 eax
  003cb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN25@Render
  003d1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003d6	58		 pop	 eax
  003d7	5a		 pop	 edx
  003d8	5f		 pop	 edi
  003d9	5e		 pop	 esi
  003da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003dd	33 cd		 xor	 ecx, ebp
  003df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003e4	83 c4 4c	 add	 esp, 76			; 0000004cH
  003e7	3b ec		 cmp	 ebp, esp
  003e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ee	8b e5		 mov	 esp, ebp
  003f0	5d		 pop	 ebp
  003f1	c2 04 00	 ret	 4
$LN25@Render:
  003f4	02 00 00 00	 DD	 2
  003f8	00 00 00 00	 DD	 $LN24@Render
$LN24@Render:
  003fc	dc ff ff ff	 DD	 -36			; ffffffdcH
  00400	10 00 00 00	 DD	 16			; 00000010H
  00404	00 00 00 00	 DD	 $LN22@Render
  00408	c4 ff ff ff	 DD	 -60			; ffffffc4H
  0040c	10 00 00 00	 DD	 16			; 00000010H
  00410	00 00 00 00	 DD	 $LN23@Render
$LN23@Render:
  00414	72		 DB	 114			; 00000072H
  00415	63		 DB	 99			; 00000063H
  00416	53		 DB	 83			; 00000053H
  00417	65		 DB	 101			; 00000065H
  00418	6c		 DB	 108			; 0000006cH
  00419	00		 DB	 0
$LN22@Render:
  0041a	72		 DB	 114			; 00000072H
  0041b	63		 DB	 99			; 00000063H
  0041c	00		 DB	 0
?Render@CDXUTListBox@@UAEXM@Z ENDP			; CDXUTListBox::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@CDXUTListBox@@UAE_NIIJ@Z PROC			; CDXUTListBox::MsgProc
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5363
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5366
  0000e	81 7d 08 15 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 533 ; 00000215H
  00015	75 14		 jne	 SHORT $LN2@MsgProc
; Line 5370
  00017	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  0001c	39 45 10	 cmp	 DWORD PTR _lParam$[ebp], eax
  0001f	74 0a		 je	 SHORT $LN2@MsgProc
; Line 5371
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c6 80 54 01 00
	00 00		 mov	 BYTE PTR [eax+340], 0
$LN2@MsgProc:
; Line 5374
  0002b	32 c0		 xor	 al, al
; Line 5375
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
?MsgProc@CDXUTListBox@@UAE_NIIJ@Z ENDP			; CDXUTListBox::MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv220 = -116						; size = 4
tv145 = -112						; size = 4
$T1 = -108						; size = 4
$T2 = -104						; size = 4
_nScrollAmount$3 = -100					; size = 4
_uLines$4 = -92						; size = 4
_nItem$5 = -84						; size = 4
_n$6 = -80						; size = 4
_nEnd$7 = -76						; size = 4
_pItem$8 = -72						; size = 4
_i$9 = -68						; size = 4
_pItem$10 = -64						; size = 4
_i$11 = -60						; size = 4
_bLastSelected$12 = -53					; size = 1
_nEnd$13 = -52						; size = 4
_nBegin$14 = -48					; size = 4
_pItem$15 = -44						; size = 4
_i$16 = -40						; size = 4
_pItem$17 = -36						; size = 4
_i$18 = -32						; size = 4
_pItem$19 = -28						; size = 4
_i$20 = -24						; size = 4
_nEnd$21 = -20						; size = 4
_nBegin$22 = -16					; size = 4
_pSelItem$23 = -12					; size = 4
_nClicked$24 = -8					; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTListBox@@UAE_NIABUtagPOINT@@IJ@Z PROC	; CDXUTListBox::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5139
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 8c	 lea	 edi, DWORD PTR [ebp-116]
  0000c	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5140
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00023	85 c9		 test	 ecx, ecx
  00025	74 0b		 je	 SHORT $LN52@HandleMous
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0002e	85 c0		 test	 eax, eax
  00030	75 07		 jne	 SHORT $LN53@HandleMous
$LN52@HandleMous:
; Line 5141
  00032	32 c0		 xor	 al, al
  00034	e9 c1 07 00 00	 jmp	 $LN54@HandleMous
$LN53@HandleMous:
; Line 5144
  00039	81 7d 08 01 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 513 ; 00000201H
  00040	75 1a		 jne	 SHORT $LN51@HandleMous
; Line 5145
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	0f b6 51 06	 movzx	 edx, BYTE PTR [ecx+6]
  00049	85 d2		 test	 edx, edx
  0004b	75 0f		 jne	 SHORT $LN51@HandleMous
; Line 5146
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00057	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN51@HandleMous:
; Line 5149
  0005c	8b f4		 mov	 esi, esp
  0005e	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00061	52		 push	 edx
  00062	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  00065	50		 push	 eax
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  00069	51		 push	 ecx
  0006a	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  0006d	52		 push	 edx
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	83 c1 78	 add	 ecx, 120		; 00000078H
  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  0007a	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0007d	ff d0		 call	 eax
  0007f	3b f4		 cmp	 esi, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	0f b6 c8	 movzx	 ecx, al
  00089	85 c9		 test	 ecx, ecx
  0008b	74 07		 je	 SHORT $LN49@HandleMous
; Line 5150
  0008d	b0 01		 mov	 al, 1
  0008f	e9 66 07 00 00	 jmp	 $LN54@HandleMous
$LN49@HandleMous:
; Line 5152
  00094	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00097	89 55 90	 mov	 DWORD PTR tv145[ebp], edx
  0009a	8b 45 90	 mov	 eax, DWORD PTR tv145[ebp]
  0009d	2d 00 02 00 00	 sub	 eax, 512		; 00000200H
  000a2	89 45 90	 mov	 DWORD PTR tv145[ebp], eax
  000a5	83 7d 90 0a	 cmp	 DWORD PTR tv145[ebp], 10 ; 0000000aH
  000a9	0f 87 49 07 00
	00		 ja	 $LN47@HandleMous
  000af	8b 4d 90	 mov	 ecx, DWORD PTR tv145[ebp]
  000b2	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN58@HandleMous[ecx]
  000b9	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN62@HandleMous[edx*4]
$LN46@HandleMous:
; Line 5157
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000c9	e8 00 00 00 00	 call	 ?empty@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBE_NXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::empty
  000ce	0f b6 c0	 movzx	 eax, al
  000d1	85 c0		 test	 eax, eax
  000d3	0f 85 e2 03 00
	00		 jne	 $LN45@HandleMous
  000d9	8b f4		 mov	 esi, esp
  000db	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  000de	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e1	52		 push	 edx
  000e2	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e4	50		 push	 eax
  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	83 c1 64	 add	 ecx, 100		; 00000064H
  000eb	51		 push	 ecx
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	85 c0		 test	 eax, eax
  000fb	0f 84 ba 03 00
	00		 je	 $LN45@HandleMous
; Line 5162
  00101	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00104	83 ba 44 01 00
	00 00		 cmp	 DWORD PTR [edx+324], 0
  0010b	74 2c		 je	 SHORT $LN44@HandleMous
; Line 5163
  0010d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	83 c1 78	 add	 ecx, 120		; 00000078H
  00113	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00118	8b c8		 mov	 ecx, eax
  0011a	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  0011d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00120	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00123	2b 50 58	 sub	 edx, DWORD PTR [eax+88]
  00126	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00129	8b c2		 mov	 eax, edx
  0012b	99		 cdq
  0012c	f7 be 44 01 00
	00		 idiv	 DWORD PTR [esi+324]
  00132	03 c8		 add	 ecx, eax
  00134	89 4d f8	 mov	 DWORD PTR _nClicked$24[ebp], ecx
; Line 5164
  00137	eb 07		 jmp	 SHORT $LN43@HandleMous
$LN44@HandleMous:
; Line 5165
  00139	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _nClicked$24[ebp], -1
$LN43@HandleMous:
; Line 5171
  00140	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	83 c1 78	 add	 ecx, 120		; 00000078H
  00146	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  0014b	39 45 f8	 cmp	 DWORD PTR _nClicked$24[ebp], eax
  0014e	0f 8c 60 03 00
	00		 jl	 $LN42@HandleMous
  00154	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0015d	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00162	39 45 f8	 cmp	 DWORD PTR _nClicked$24[ebp], eax
  00165	0f 8d 49 03 00
	00		 jge	 $LN42@HandleMous
  0016b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016e	83 c1 78	 add	 ecx, 120		; 00000078H
  00171	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00176	8b f0		 mov	 esi, eax
  00178	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017b	83 c1 78	 add	 ecx, 120		; 00000078H
  0017e	e8 00 00 00 00	 call	 ?GetPageSize@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetPageSize
  00183	03 f0		 add	 esi, eax
  00185	39 75 f8	 cmp	 DWORD PTR _nClicked$24[ebp], esi
  00188	0f 8d 26 03 00
	00		 jge	 $LN42@HandleMous
; Line 5173
  0018e	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00193	8b f4		 mov	 esi, esp
  00195	50		 push	 eax
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  0019c	3b f4		 cmp	 esi, esp
  0019e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5174
  001a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a6	c6 80 54 01 00
	00 01		 mov	 BYTE PTR [eax+340], 1
; Line 5179
  001ad	81 7d 08 03 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 515 ; 00000203H
  001b4	75 1d		 jne	 SHORT $LN41@HandleMous
; Line 5181
  001b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b9	51		 push	 ecx
  001ba	6a 01		 push	 1
  001bc	68 01 07 00 00	 push	 1793			; 00000701H
  001c1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c4	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  001c7	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 5182
  001cc	b0 01		 mov	 al, 1
  001ce	e9 27 06 00 00	 jmp	 $LN54@HandleMous
$LN41@HandleMous:
; Line 5185
  001d3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d6	8b 4d f8	 mov	 ecx, DWORD PTR _nClicked$24[ebp]
  001d9	89 88 4c 01 00
	00		 mov	 DWORD PTR [eax+332], ecx
; Line 5186
  001df	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  001e2	83 e2 04	 and	 edx, 4
  001e5	75 12		 jne	 SHORT $LN40@HandleMous
; Line 5187
  001e7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  001f3	89 90 50 01 00
	00		 mov	 DWORD PTR [eax+336], edx
$LN40@HandleMous:
; Line 5192
  001f9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001fc	8b 88 48 01 00
	00		 mov	 ecx, DWORD PTR [eax+328]
  00202	83 e1 01	 and	 ecx, 1
  00205	0f 84 93 02 00
	00		 je	 $LN39@HandleMous
; Line 5196
  0020b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0020e	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
  00214	50		 push	 eax
  00215	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00218	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0021e	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00223	8b 08		 mov	 ecx, DWORD PTR [eax]
  00225	89 4d f4	 mov	 DWORD PTR _pSelItem$23[ebp], ecx
; Line 5197
  00228	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  0022b	83 e2 0c	 and	 edx, 12			; 0000000cH
  0022e	83 fa 08	 cmp	 edx, 8
  00231	75 2f		 jne	 SHORT $LN38@HandleMous
; Line 5201
  00233	8b 45 f4	 mov	 eax, DWORD PTR _pSelItem$23[ebp]
  00236	0f b6 88 14 02
	00 00		 movzx	 ecx, BYTE PTR [eax+532]
  0023d	85 c9		 test	 ecx, ecx
  0023f	75 09		 jne	 SHORT $LN56@HandleMous
  00241	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR tv220[ebp], 1
  00248	eb 07		 jmp	 SHORT $LN57@HandleMous
$LN56@HandleMous:
  0024a	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN57@HandleMous:
  00251	8b 55 f4	 mov	 edx, DWORD PTR _pSelItem$23[ebp]
  00254	8a 45 8c	 mov	 al, BYTE PTR tv220[ebp]
  00257	88 82 14 02 00
	00		 mov	 BYTE PTR [edx+532], al
  0025d	e9 3c 02 00 00	 jmp	 $LN39@HandleMous
$LN38@HandleMous:
; Line 5203
  00262	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00265	83 e1 0c	 and	 ecx, 12			; 0000000cH
  00268	83 f9 04	 cmp	 ecx, 4
  0026b	0f 85 08 01 00
	00		 jne	 $LN36@HandleMous
; Line 5209
  00271	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00274	81 c2 4c 01 00
	00		 add	 edx, 332		; 0000014cH
  0027a	52		 push	 edx
  0027b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0027e	05 50 01 00 00	 add	 eax, 336		; 00000150H
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  00289	83 c4 08	 add	 esp, 8
  0028c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0028e	89 4d f0	 mov	 DWORD PTR _nBegin$22[ebp], ecx
; Line 5210
  00291	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00294	81 c2 4c 01 00
	00		 add	 edx, 332		; 0000014cH
  0029a	52		 push	 edx
  0029b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0029e	05 50 01 00 00	 add	 eax, 336		; 00000150H
  002a3	50		 push	 eax
  002a4	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  002a9	83 c4 08	 add	 esp, 8
  002ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ae	89 4d ec	 mov	 DWORD PTR _nEnd$21[ebp], ecx
; Line 5212
  002b1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$20[ebp], 0
  002b8	eb 09		 jmp	 SHORT $LN35@HandleMous
$LN34@HandleMous:
  002ba	8b 55 e8	 mov	 edx, DWORD PTR _i$20[ebp]
  002bd	83 c2 01	 add	 edx, 1
  002c0	89 55 e8	 mov	 DWORD PTR _i$20[ebp], edx
$LN35@HandleMous:
  002c3	8b 45 e8	 mov	 eax, DWORD PTR _i$20[ebp]
  002c6	3b 45 f0	 cmp	 eax, DWORD PTR _nBegin$22[ebp]
  002c9	7d 23		 jge	 SHORT $LN33@HandleMous
; Line 5214
  002cb	8b 4d e8	 mov	 ecx, DWORD PTR _i$20[ebp]
  002ce	51		 push	 ecx
  002cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d2	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  002d8	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  002dd	8b 10		 mov	 edx, DWORD PTR [eax]
  002df	89 55 e4	 mov	 DWORD PTR _pItem$19[ebp], edx
; Line 5215
  002e2	8b 45 e4	 mov	 eax, DWORD PTR _pItem$19[ebp]
  002e5	c6 80 14 02 00
	00 00		 mov	 BYTE PTR [eax+532], 0
; Line 5216
  002ec	eb cc		 jmp	 SHORT $LN34@HandleMous
$LN33@HandleMous:
; Line 5218
  002ee	8b 4d ec	 mov	 ecx, DWORD PTR _nEnd$21[ebp]
  002f1	83 c1 01	 add	 ecx, 1
  002f4	89 4d e0	 mov	 DWORD PTR _i$18[ebp], ecx
  002f7	eb 09		 jmp	 SHORT $LN32@HandleMous
$LN31@HandleMous:
  002f9	8b 55 e0	 mov	 edx, DWORD PTR _i$18[ebp]
  002fc	83 c2 01	 add	 edx, 1
  002ff	89 55 e0	 mov	 DWORD PTR _i$18[ebp], edx
$LN32@HandleMous:
  00302	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00305	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0030b	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00310	39 45 e0	 cmp	 DWORD PTR _i$18[ebp], eax
  00313	7d 23		 jge	 SHORT $LN30@HandleMous
; Line 5220
  00315	8b 45 e0	 mov	 eax, DWORD PTR _i$18[ebp]
  00318	50		 push	 eax
  00319	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0031c	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00322	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00327	8b 08		 mov	 ecx, DWORD PTR [eax]
  00329	89 4d dc	 mov	 DWORD PTR _pItem$17[ebp], ecx
; Line 5221
  0032c	8b 55 dc	 mov	 edx, DWORD PTR _pItem$17[ebp]
  0032f	c6 82 14 02 00
	00 00		 mov	 BYTE PTR [edx+532], 0
; Line 5222
  00336	eb c1		 jmp	 SHORT $LN31@HandleMous
$LN30@HandleMous:
; Line 5224
  00338	8b 45 f0	 mov	 eax, DWORD PTR _nBegin$22[ebp]
  0033b	89 45 d8	 mov	 DWORD PTR _i$16[ebp], eax
  0033e	eb 09		 jmp	 SHORT $LN29@HandleMous
$LN28@HandleMous:
  00340	8b 4d d8	 mov	 ecx, DWORD PTR _i$16[ebp]
  00343	83 c1 01	 add	 ecx, 1
  00346	89 4d d8	 mov	 DWORD PTR _i$16[ebp], ecx
$LN29@HandleMous:
  00349	8b 55 d8	 mov	 edx, DWORD PTR _i$16[ebp]
  0034c	3b 55 ec	 cmp	 edx, DWORD PTR _nEnd$21[ebp]
  0034f	7f 23		 jg	 SHORT $LN27@HandleMous
; Line 5226
  00351	8b 45 d8	 mov	 eax, DWORD PTR _i$16[ebp]
  00354	50		 push	 eax
  00355	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00358	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0035e	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00363	8b 08		 mov	 ecx, DWORD PTR [eax]
  00365	89 4d d4	 mov	 DWORD PTR _pItem$15[ebp], ecx
; Line 5227
  00368	8b 55 d4	 mov	 edx, DWORD PTR _pItem$15[ebp]
  0036b	c6 82 14 02 00
	00 01		 mov	 BYTE PTR [edx+532], 1
; Line 5228
  00372	eb cc		 jmp	 SHORT $LN28@HandleMous
$LN27@HandleMous:
; Line 5230
  00374	e9 25 01 00 00	 jmp	 $LN39@HandleMous
$LN36@HandleMous:
  00379	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0037c	83 e0 0c	 and	 eax, 12			; 0000000cH
  0037f	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00382	0f 85 c4 00 00
	00		 jne	 $LN25@HandleMous
; Line 5239
  00388	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0038b	81 c1 4c 01 00
	00		 add	 ecx, 332		; 0000014cH
  00391	51		 push	 ecx
  00392	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00395	81 c2 50 01 00
	00		 add	 edx, 336		; 00000150H
  0039b	52		 push	 edx
  0039c	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  003a1	83 c4 08	 add	 esp, 8
  003a4	8b 00		 mov	 eax, DWORD PTR [eax]
  003a6	89 45 d0	 mov	 DWORD PTR _nBegin$14[ebp], eax
; Line 5240
  003a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ac	81 c1 4c 01 00
	00		 add	 ecx, 332		; 0000014cH
  003b2	51		 push	 ecx
  003b3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003b6	81 c2 50 01 00
	00		 add	 edx, 336		; 00000150H
  003bc	52		 push	 edx
  003bd	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  003c2	83 c4 08	 add	 esp, 8
  003c5	8b 00		 mov	 eax, DWORD PTR [eax]
  003c7	89 45 cc	 mov	 DWORD PTR _nEnd$13[ebp], eax
; Line 5244
  003ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	8b 91 50 01 00
	00		 mov	 edx, DWORD PTR [ecx+336]
  003d3	52		 push	 edx
  003d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d7	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  003dd	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  003e2	8b 00		 mov	 eax, DWORD PTR [eax]
  003e4	8a 88 14 02 00
	00		 mov	 cl, BYTE PTR [eax+532]
  003ea	88 4d cb	 mov	 BYTE PTR _bLastSelected$12[ebp], cl
; Line 5245
  003ed	8b 55 d0	 mov	 edx, DWORD PTR _nBegin$14[ebp]
  003f0	83 c2 01	 add	 edx, 1
  003f3	89 55 c4	 mov	 DWORD PTR _i$11[ebp], edx
  003f6	eb 09		 jmp	 SHORT $LN24@HandleMous
$LN23@HandleMous:
  003f8	8b 45 c4	 mov	 eax, DWORD PTR _i$11[ebp]
  003fb	83 c0 01	 add	 eax, 1
  003fe	89 45 c4	 mov	 DWORD PTR _i$11[ebp], eax
$LN24@HandleMous:
  00401	8b 4d c4	 mov	 ecx, DWORD PTR _i$11[ebp]
  00404	3b 4d cc	 cmp	 ecx, DWORD PTR _nEnd$13[ebp]
  00407	7d 25		 jge	 SHORT $LN22@HandleMous
; Line 5247
  00409	8b 55 c4	 mov	 edx, DWORD PTR _i$11[ebp]
  0040c	52		 push	 edx
  0040d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00410	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00416	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  0041b	8b 00		 mov	 eax, DWORD PTR [eax]
  0041d	89 45 c0	 mov	 DWORD PTR _pItem$10[ebp], eax
; Line 5248
  00420	8b 4d c0	 mov	 ecx, DWORD PTR _pItem$10[ebp]
  00423	8a 55 cb	 mov	 dl, BYTE PTR _bLastSelected$12[ebp]
  00426	88 91 14 02 00
	00		 mov	 BYTE PTR [ecx+532], dl
; Line 5249
  0042c	eb ca		 jmp	 SHORT $LN23@HandleMous
$LN22@HandleMous:
; Line 5251
  0042e	8b 45 f4	 mov	 eax, DWORD PTR _pSelItem$23[ebp]
  00431	c6 80 14 02 00
	00 01		 mov	 BYTE PTR [eax+532], 1
; Line 5256
  00438	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0043e	8b 82 50 01 00
	00		 mov	 eax, DWORD PTR [edx+336]
  00444	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax
; Line 5258
  0044a	eb 52		 jmp	 SHORT $LN39@HandleMous
$LN25@HandleMous:
; Line 5264
  0044c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  00453	eb 09		 jmp	 SHORT $LN20@HandleMous
$LN19@HandleMous:
  00455	8b 4d bc	 mov	 ecx, DWORD PTR _i$9[ebp]
  00458	83 c1 01	 add	 ecx, 1
  0045b	89 4d bc	 mov	 DWORD PTR _i$9[ebp], ecx
$LN20@HandleMous:
  0045e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00461	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00467	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  0046c	39 45 bc	 cmp	 DWORD PTR _i$9[ebp], eax
  0046f	7d 23		 jge	 SHORT $LN18@HandleMous
; Line 5266
  00471	8b 55 bc	 mov	 edx, DWORD PTR _i$9[ebp]
  00474	52		 push	 edx
  00475	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00478	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0047e	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00483	8b 00		 mov	 eax, DWORD PTR [eax]
  00485	89 45 b8	 mov	 DWORD PTR _pItem$8[ebp], eax
; Line 5267
  00488	8b 4d b8	 mov	 ecx, DWORD PTR _pItem$8[ebp]
  0048b	c6 81 14 02 00
	00 00		 mov	 BYTE PTR [ecx+532], 0
; Line 5268
  00492	eb c1		 jmp	 SHORT $LN19@HandleMous
$LN18@HandleMous:
; Line 5270
  00494	8b 55 f4	 mov	 edx, DWORD PTR _pSelItem$23[ebp]
  00497	c6 82 14 02 00
	00 01		 mov	 BYTE PTR [edx+532], 1
$LN39@HandleMous:
; Line 5274
  0049e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004a1	50		 push	 eax
  004a2	6a 01		 push	 1
  004a4	68 02 07 00 00	 push	 1794			; 00000702H
  004a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ac	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  004af	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN42@HandleMous:
; Line 5277
  004b4	b0 01		 mov	 al, 1
  004b6	e9 3f 03 00 00	 jmp	 $LN54@HandleMous
$LN45@HandleMous:
; Line 5279
  004bb	e9 38 03 00 00	 jmp	 $LN47@HandleMous
$LN17@HandleMous:
; Line 5283
  004c0	8b f4		 mov	 esi, esp
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  004c8	3b f4		 cmp	 esi, esp
  004ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 5284
  004cf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004d2	c6 82 54 01 00
	00 00		 mov	 BYTE PTR [edx+340], 0
; Line 5286
  004d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004dc	83 b8 4c 01 00
	00 ff		 cmp	 DWORD PTR [eax+332], -1
  004e3	0f 84 14 01 00
	00		 je	 $LN16@HandleMous
; Line 5290
  004e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ec	81 c1 4c 01 00
	00		 add	 ecx, 332		; 0000014cH
  004f2	51		 push	 ecx
  004f3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004f6	81 c2 50 01 00
	00		 add	 edx, 336		; 00000150H
  004fc	52		 push	 edx
  004fd	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  00502	83 c4 08	 add	 esp, 8
  00505	8b 00		 mov	 eax, DWORD PTR [eax]
  00507	89 45 b4	 mov	 DWORD PTR _nEnd$7[ebp], eax
; Line 5292
  0050a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0050d	81 c1 4c 01 00
	00		 add	 ecx, 332		; 0000014cH
  00513	51		 push	 ecx
  00514	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00517	81 c2 50 01 00
	00		 add	 edx, 336		; 00000150H
  0051d	52		 push	 edx
  0051e	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  00523	83 c4 08	 add	 esp, 8
  00526	8b 00		 mov	 eax, DWORD PTR [eax]
  00528	83 c0 01	 add	 eax, 1
  0052b	89 45 b0	 mov	 DWORD PTR _n$6[ebp], eax
  0052e	eb 09		 jmp	 SHORT $LN15@HandleMous
$LN14@HandleMous:
  00530	8b 4d b0	 mov	 ecx, DWORD PTR _n$6[ebp]
  00533	83 c1 01	 add	 ecx, 1
  00536	89 4d b0	 mov	 DWORD PTR _n$6[ebp], ecx
$LN15@HandleMous:
  00539	8b 55 b0	 mov	 edx, DWORD PTR _n$6[ebp]
  0053c	3b 55 b4	 cmp	 edx, DWORD PTR _nEnd$7[ebp]
  0053f	7d 3c		 jge	 SHORT $LN13@HandleMous
; Line 5293
  00541	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00544	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  0054a	51		 push	 ecx
  0054b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0054e	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00554	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00559	8b 30		 mov	 esi, DWORD PTR [eax]
  0055b	8b 55 b0	 mov	 edx, DWORD PTR _n$6[ebp]
  0055e	52		 push	 edx
  0055f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00562	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00568	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  0056d	8b 00		 mov	 eax, DWORD PTR [eax]
  0056f	8a 8e 14 02 00
	00		 mov	 cl, BYTE PTR [esi+532]
  00575	88 88 14 02 00
	00		 mov	 BYTE PTR [eax+532], cl
  0057b	eb b3		 jmp	 SHORT $LN14@HandleMous
$LN13@HandleMous:
; Line 5294
  0057d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00580	8b 82 50 01 00
	00		 mov	 eax, DWORD PTR [edx+336]
  00586	50		 push	 eax
  00587	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0058a	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00590	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00595	8b 30		 mov	 esi, DWORD PTR [eax]
  00597	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0059a	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  005a0	52		 push	 edx
  005a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005a4	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  005aa	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  005af	8b 00		 mov	 eax, DWORD PTR [eax]
  005b1	8a 8e 14 02 00
	00		 mov	 cl, BYTE PTR [esi+532]
  005b7	88 88 14 02 00
	00		 mov	 BYTE PTR [eax+532], cl
; Line 5299
  005bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005c3	8b 8a 50 01 00
	00		 mov	 ecx, DWORD PTR [edx+336]
  005c9	3b 88 4c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+332]
  005cf	74 16		 je	 SHORT $LN12@HandleMous
; Line 5300
  005d1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005d4	52		 push	 edx
  005d5	6a 01		 push	 1
  005d7	68 02 07 00 00	 push	 1794			; 00000702H
  005dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005df	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  005e2	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN12@HandleMous:
; Line 5302
  005e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005ea	51		 push	 ecx
  005eb	6a 01		 push	 1
  005ed	68 03 07 00 00	 push	 1795			; 00000703H
  005f2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005f5	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  005f8	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN16@HandleMous:
; Line 5304
  005fd	32 c0		 xor	 al, al
  005ff	e9 f6 01 00 00	 jmp	 $LN54@HandleMous
$LN11@HandleMous:
; Line 5308
  00604	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00607	0f b6 88 54 01
	00 00		 movzx	 ecx, BYTE PTR [eax+340]
  0060e	85 c9		 test	 ecx, ecx
  00610	0f 84 82 01 00
	00		 je	 $LN10@HandleMous
; Line 5313
  00616	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00619	83 ba 44 01 00
	00 00		 cmp	 DWORD PTR [edx+324], 0
  00620	74 2c		 je	 SHORT $LN9@HandleMous
; Line 5314
  00622	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00625	83 c1 78	 add	 ecx, 120		; 00000078H
  00628	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  0062d	8b c8		 mov	 ecx, eax
  0062f	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  00632	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00635	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00638	2b 50 58	 sub	 edx, DWORD PTR [eax+88]
  0063b	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0063e	8b c2		 mov	 eax, edx
  00640	99		 cdq
  00641	f7 be 44 01 00
	00		 idiv	 DWORD PTR [esi+324]
  00647	03 c8		 add	 ecx, eax
  00649	89 4d ac	 mov	 DWORD PTR _nItem$5[ebp], ecx
; Line 5315
  0064c	eb 07		 jmp	 SHORT $LN8@HandleMous
$LN9@HandleMous:
; Line 5316
  0064e	c7 45 ac ff ff
	ff ff		 mov	 DWORD PTR _nItem$5[ebp], -1
$LN8@HandleMous:
; Line 5322
  00655	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00658	83 c1 78	 add	 ecx, 120		; 00000078H
  0065b	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00660	39 45 ac	 cmp	 DWORD PTR _nItem$5[ebp], eax
  00663	7c 59		 jl	 SHORT $LN7@HandleMous
  00665	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0066e	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00673	39 45 ac	 cmp	 DWORD PTR _nItem$5[ebp], eax
  00676	7d 46		 jge	 SHORT $LN7@HandleMous
  00678	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0067b	83 c1 78	 add	 ecx, 120		; 00000078H
  0067e	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00683	8b f0		 mov	 esi, eax
  00685	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00688	83 c1 78	 add	 ecx, 120		; 00000078H
  0068b	e8 00 00 00 00	 call	 ?GetPageSize@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetPageSize
  00690	03 f0		 add	 esi, eax
  00692	39 75 ac	 cmp	 DWORD PTR _nItem$5[ebp], esi
  00695	7d 27		 jge	 SHORT $LN7@HandleMous
; Line 5324
  00697	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0069a	8b 4d ac	 mov	 ecx, DWORD PTR _nItem$5[ebp]
  0069d	89 88 4c 01 00
	00		 mov	 DWORD PTR [eax+332], ecx
; Line 5325
  006a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  006a6	52		 push	 edx
  006a7	6a 01		 push	 1
  006a9	68 02 07 00 00	 push	 1794			; 00000702H
  006ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006b1	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  006b4	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
  006b9	e9 da 00 00 00	 jmp	 $LN10@HandleMous
$LN7@HandleMous:
; Line 5327
  006be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006c1	83 c1 78	 add	 ecx, 120		; 00000078H
  006c4	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  006c9	39 45 ac	 cmp	 DWORD PTR _nItem$5[ebp], eax
  006cc	7d 3c		 jge	 SHORT $LN5@HandleMous
; Line 5330
  006ce	6a ff		 push	 -1
  006d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006d3	83 c1 78	 add	 ecx, 120		; 00000078H
  006d6	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 5331
  006db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006de	83 c1 78	 add	 ecx, 120		; 00000078H
  006e1	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  006e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006e9	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax
; Line 5332
  006ef	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  006f2	52		 push	 edx
  006f3	6a 01		 push	 1
  006f5	68 02 07 00 00	 push	 1794			; 00000702H
  006fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006fd	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00700	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
  00705	e9 8e 00 00 00	 jmp	 $LN10@HandleMous
$LN5@HandleMous:
; Line 5334
  0070a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0070d	83 c1 78	 add	 ecx, 120		; 00000078H
  00710	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00715	8b f0		 mov	 esi, eax
  00717	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0071a	83 c1 78	 add	 ecx, 120		; 00000078H
  0071d	e8 00 00 00 00	 call	 ?GetPageSize@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetPageSize
  00722	03 f0		 add	 esi, eax
  00724	39 75 ac	 cmp	 DWORD PTR _nItem$5[ebp], esi
  00727	7c 6f		 jl	 SHORT $LN10@HandleMous
; Line 5337
  00729	6a 01		 push	 1
  0072b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0072e	83 c1 78	 add	 ecx, 120		; 00000078H
  00731	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 5339
  00736	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00739	83 c1 78	 add	 ecx, 120		; 00000078H
  0073c	e8 00 00 00 00	 call	 ?GetTrackPos@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetTrackPos
  00741	8b f0		 mov	 esi, eax
  00743	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00746	83 c1 78	 add	 ecx, 120		; 00000078H
  00749	e8 00 00 00 00	 call	 ?GetPageSize@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetPageSize
  0074e	03 f0		 add	 esi, eax
  00750	89 75 98	 mov	 DWORD PTR $T2[ebp], esi
  00753	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00756	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0075c	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00761	89 45 94	 mov	 DWORD PTR $T1[ebp], eax
  00764	8d 4d 98	 lea	 ecx, DWORD PTR $T2[ebp]
  00767	51		 push	 ecx
  00768	8d 55 94	 lea	 edx, DWORD PTR $T1[ebp]
  0076b	52		 push	 edx
  0076c	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  00771	83 c4 08	 add	 esp, 8
  00774	8b 00		 mov	 eax, DWORD PTR [eax]
  00776	83 e8 01	 sub	 eax, 1
  00779	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0077c	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax
; Line 5340
  00782	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00785	52		 push	 edx
  00786	6a 01		 push	 1
  00788	68 02 07 00 00	 push	 1794			; 00000702H
  0078d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00790	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00793	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN10@HandleMous:
; Line 5343
  00798	eb 5e		 jmp	 SHORT $LN47@HandleMous
$LN2@HandleMous:
; Line 5347
  0079a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _uLines$4[ebp], 0
; Line 5348
  007a1	8b f4		 mov	 esi, esp
  007a3	6a 00		 push	 0
  007a5	8d 4d a4	 lea	 ecx, DWORD PTR _uLines$4[ebp]
  007a8	51		 push	 ecx
  007a9	6a 00		 push	 0
  007ab	6a 68		 push	 104			; 00000068H
  007ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemParametersInfoW@16
  007b3	3b f4		 cmp	 esi, esp
  007b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007ba	85 c0		 test	 eax, eax
  007bc	75 07		 jne	 SHORT $LN1@HandleMous
; Line 5349
  007be	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _uLines$4[ebp], 0
$LN1@HandleMous:
; Line 5350
  007c5	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  007c8	c1 ea 10	 shr	 edx, 16			; 00000010H
  007cb	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  007d1	0f bf c2	 movsx	 eax, dx
  007d4	99		 cdq
  007d5	b9 78 00 00 00	 mov	 ecx, 120		; 00000078H
  007da	f7 f9		 idiv	 ecx
  007dc	0f af 45 a4	 imul	 eax, DWORD PTR _uLines$4[ebp]
  007e0	89 45 9c	 mov	 DWORD PTR _nScrollAmount$3[ebp], eax
; Line 5351
  007e3	8b 55 9c	 mov	 edx, DWORD PTR _nScrollAmount$3[ebp]
  007e6	f7 da		 neg	 edx
  007e8	52		 push	 edx
  007e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007ec	83 c1 78	 add	 ecx, 120		; 00000078H
  007ef	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 5352
  007f4	b0 01		 mov	 al, 1
  007f6	eb 02		 jmp	 SHORT $LN54@HandleMous
$LN47@HandleMous:
; Line 5356
  007f8	32 c0		 xor	 al, al
$LN54@HandleMous:
; Line 5357
  007fa	52		 push	 edx
  007fb	8b cd		 mov	 ecx, ebp
  007fd	50		 push	 eax
  007fe	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN61@HandleMous
  00804	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00809	58		 pop	 eax
  0080a	5a		 pop	 edx
  0080b	5f		 pop	 edi
  0080c	5e		 pop	 esi
  0080d	83 c4 74	 add	 esp, 116		; 00000074H
  00810	3b ec		 cmp	 ebp, esp
  00812	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00817	8b e5		 mov	 esp, ebp
  00819	5d		 pop	 ebp
  0081a	c2 10 00	 ret	 16			; 00000010H
  0081d	8d 49 00	 npad	 3
$LN61@HandleMous:
  00820	01 00 00 00	 DD	 1
  00824	00 00 00 00	 DD	 $LN60@HandleMous
$LN60@HandleMous:
  00828	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0082c	04 00 00 00	 DD	 4
  00830	00 00 00 00	 DD	 $LN59@HandleMous
$LN59@HandleMous:
  00834	75		 DB	 117			; 00000075H
  00835	4c		 DB	 76			; 0000004cH
  00836	69		 DB	 105			; 00000069H
  00837	6e		 DB	 110			; 0000006eH
  00838	65		 DB	 101			; 00000065H
  00839	73		 DB	 115			; 00000073H
  0083a	00		 DB	 0
  0083b	90		 npad	 1
$LN62@HandleMous:
  0083c	00 00 00 00	 DD	 $LN11@HandleMous
  00840	00 00 00 00	 DD	 $LN46@HandleMous
  00844	00 00 00 00	 DD	 $LN17@HandleMous
  00848	00 00 00 00	 DD	 $LN2@HandleMous
  0084c	00 00 00 00	 DD	 $LN47@HandleMous
$LN58@HandleMous:
  00850	00		 DB	 0
  00851	01		 DB	 1
  00852	02		 DB	 2
  00853	01		 DB	 1
  00854	04		 DB	 4
  00855	04		 DB	 4
  00856	04		 DB	 4
  00857	04		 DB	 4
  00858	04		 DB	 4
  00859	04		 DB	 4
  0085a	03		 DB	 3
?HandleMouse@CDXUTListBox@@UAE_NIABUtagPOINT@@IJ@Z ENDP	; CDXUTListBox::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv132 = -36						; size = 4
tv94 = -32						; size = 4
tv93 = -28						; size = 4
_n$1 = -24						; size = 4
_nEnd$2 = -20						; size = 4
_pItem$3 = -16						; size = 4
_i$4 = -12						; size = 4
_nOldSelected$5 = -8					; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTListBox@@UAE_NIIJ@Z PROC		; CDXUTListBox::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 5030
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 5031
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00031	85 c9		 test	 ecx, ecx
  00033	74 0b		 je	 SHORT $LN31@HandleKeyb
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0003c	85 c0		 test	 eax, eax
  0003e	75 07		 jne	 SHORT $LN32@HandleKeyb
$LN31@HandleKeyb:
; Line 5032
  00040	32 c0		 xor	 al, al
  00042	e9 2f 03 00 00	 jmp	 $LN33@HandleKeyb
$LN32@HandleKeyb:
; Line 5035
  00047	8b f4		 mov	 esi, esp
  00049	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00050	52		 push	 edx
  00051	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  00054	50		 push	 eax
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 c1 78	 add	 ecx, 120		; 00000078H
  0005b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00061	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00064	ff d2		 call	 edx
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	0f b6 c0	 movzx	 eax, al
  00070	85 c0		 test	 eax, eax
  00072	74 07		 je	 SHORT $LN30@HandleKeyb
; Line 5036
  00074	b0 01		 mov	 al, 1
  00076	e9 fb 02 00 00	 jmp	 $LN33@HandleKeyb
$LN30@HandleKeyb:
; Line 5038
  0007b	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0007e	89 4d e4	 mov	 DWORD PTR tv93[ebp], ecx
  00081	81 7d e4 00 01
	00 00		 cmp	 DWORD PTR tv93[ebp], 256 ; 00000100H
  00088	74 05		 je	 SHORT $LN27@HandleKeyb
  0008a	e9 e5 02 00 00	 jmp	 $LN28@HandleKeyb
$LN27@HandleKeyb:
; Line 5041
  0008f	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00092	89 55 e0	 mov	 DWORD PTR tv94[ebp], edx
  00095	8b 45 e0	 mov	 eax, DWORD PTR tv94[ebp]
  00098	83 e8 20	 sub	 eax, 32			; 00000020H
  0009b	89 45 e0	 mov	 DWORD PTR tv94[ebp], eax
  0009e	83 7d e0 08	 cmp	 DWORD PTR tv94[ebp], 8
  000a2	0f 87 cc 02 00
	00		 ja	 $LN28@HandleKeyb
  000a8	8b 4d e0	 mov	 ecx, DWORD PTR tv94[ebp]
  000ab	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN35@HandleKeyb[ecx]
  000b2	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN36@HandleKeyb[edx*4]
$LN24@HandleKeyb:
; Line 5051
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000c2	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  000c7	85 c0		 test	 eax, eax
  000c9	75 07		 jne	 SHORT $LN23@HandleKeyb
; Line 5052
  000cb	b0 01		 mov	 al, 1
  000cd	e9 a4 02 00 00	 jmp	 $LN33@HandleKeyb
$LN23@HandleKeyb:
; Line 5054
  000d2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d5	8b 88 4c 01 00
	00		 mov	 ecx, DWORD PTR [eax+332]
  000db	89 4d f8	 mov	 DWORD PTR _nOldSelected$5[ebp], ecx
; Line 5057
  000de	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  000e1	89 55 dc	 mov	 DWORD PTR tv132[ebp], edx
  000e4	8b 45 dc	 mov	 eax, DWORD PTR tv132[ebp]
  000e7	83 e8 21	 sub	 eax, 33			; 00000021H
  000ea	89 45 dc	 mov	 DWORD PTR tv132[ebp], eax
  000ed	83 7d dc 07	 cmp	 DWORD PTR tv132[ebp], 7
  000f1	0f 87 ab 00 00
	00		 ja	 $LN21@HandleKeyb
  000f7	8b 4d dc	 mov	 ecx, DWORD PTR tv132[ebp]
  000fa	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN37@HandleKeyb[ecx*4]
$LN20@HandleKeyb:
; Line 5060
  00101	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
  0010a	83 e8 01	 sub	 eax, 1
  0010d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax
  00116	e9 87 00 00 00	 jmp	 $LN21@HandleKeyb
$LN19@HandleKeyb:
; Line 5062
  0011b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0011e	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
  00124	83 c0 01	 add	 eax, 1
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax
  00130	eb 70		 jmp	 SHORT $LN21@HandleKeyb
$LN18@HandleKeyb:
; Line 5064
  00132	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	83 c1 78	 add	 ecx, 120		; 00000078H
  00138	e8 00 00 00 00	 call	 ?GetPageSize@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetPageSize
  0013d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00140	8b 8a 4c 01 00
	00		 mov	 ecx, DWORD PTR [edx+332]
  00146	8d 54 08 ff	 lea	 edx, DWORD PTR [eax+ecx-1]
  0014a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	89 90 4c 01 00
	00		 mov	 DWORD PTR [eax+332], edx
  00153	eb 4d		 jmp	 SHORT $LN21@HandleKeyb
$LN17@HandleKeyb:
; Line 5066
  00155	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00158	83 c1 78	 add	 ecx, 120		; 00000078H
  0015b	e8 00 00 00 00	 call	 ?GetPageSize@CDXUTScrollBar@@QBEHXZ ; CDXUTScrollBar::GetPageSize
  00160	83 e8 01	 sub	 eax, 1
  00163	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  0016c	2b d0		 sub	 edx, eax
  0016e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00171	89 90 4c 01 00
	00		 mov	 DWORD PTR [eax+332], edx
  00177	eb 29		 jmp	 SHORT $LN21@HandleKeyb
$LN16@HandleKeyb:
; Line 5068
  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	c7 81 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+332], 0
  00186	eb 1a		 jmp	 SHORT $LN21@HandleKeyb
$LN15@HandleKeyb:
; Line 5070
  00188	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00191	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00196	83 e8 01	 sub	 eax, 1
  00199	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0019c	89 82 4c 01 00
	00		 mov	 DWORD PTR [edx+332], eax
$LN21@HandleKeyb:
; Line 5074
  001a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a5	83 b8 4c 01 00
	00 00		 cmp	 DWORD PTR [eax+332], 0
  001ac	7d 0d		 jge	 SHORT $LN14@HandleKeyb
; Line 5075
  001ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b1	c7 81 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+332], 0
$LN14@HandleKeyb:
; Line 5076
  001bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001be	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001c4	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  001c9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001cc	39 82 4c 01 00
	00		 cmp	 DWORD PTR [edx+332], eax
  001d2	7c 1a		 jl	 SHORT $LN13@HandleKeyb
; Line 5077
  001d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d7	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001dd	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  001e2	83 e8 01	 sub	 eax, 1
  001e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e8	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax
$LN13@HandleKeyb:
; Line 5079
  001ee	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001f1	8b 45 f8	 mov	 eax, DWORD PTR _nOldSelected$5[ebp]
  001f4	3b 82 4c 01 00
	00		 cmp	 eax, DWORD PTR [edx+332]
  001fa	0f 84 56 01 00
	00		 je	 $LN12@HandleKeyb
; Line 5081
  00200	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00203	8b 91 48 01 00
	00		 mov	 edx, DWORD PTR [ecx+328]
  00209	83 e2 01	 and	 edx, 1
  0020c	0f 84 07 01 00
	00		 je	 $LN11@HandleKeyb
; Line 5086
  00212	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00219	eb 09		 jmp	 SHORT $LN10@HandleKeyb
$LN9@HandleKeyb:
  0021b	8b 45 f4	 mov	 eax, DWORD PTR _i$4[ebp]
  0021e	83 c0 01	 add	 eax, 1
  00221	89 45 f4	 mov	 DWORD PTR _i$4[ebp], eax
$LN10@HandleKeyb:
  00224	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00227	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0022d	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QBEIXZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::size
  00232	39 45 f4	 cmp	 DWORD PTR _i$4[ebp], eax
  00235	7d 23		 jge	 SHORT $LN8@HandleKeyb
; Line 5088
  00237	8b 4d f4	 mov	 ecx, DWORD PTR _i$4[ebp]
  0023a	51		 push	 ecx
  0023b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023e	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00244	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  00249	8b 10		 mov	 edx, DWORD PTR [eax]
  0024b	89 55 f0	 mov	 DWORD PTR _pItem$3[ebp], edx
; Line 5089
  0024e	8b 45 f0	 mov	 eax, DWORD PTR _pItem$3[ebp]
  00251	c6 80 14 02 00
	00 00		 mov	 BYTE PTR [eax+532], 0
; Line 5090
  00258	eb c1		 jmp	 SHORT $LN9@HandleKeyb
$LN8@HandleKeyb:
; Line 5092
  0025a	8b f4		 mov	 esi, esp
  0025c	6a 10		 push	 16			; 00000010H
  0025e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00264	3b f4		 cmp	 esi, esp
  00266	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0026b	0f bf c8	 movsx	 ecx, ax
  0026e	85 c9		 test	 ecx, ecx
  00270	7d 72		 jge	 SHORT $LN7@HandleKeyb
; Line 5096
  00272	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00275	81 c2 4c 01 00
	00		 add	 edx, 332		; 0000014cH
  0027b	52		 push	 edx
  0027c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0027f	05 50 01 00 00	 add	 eax, 336		; 00000150H
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  0028a	83 c4 08	 add	 esp, 8
  0028d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0028f	89 4d ec	 mov	 DWORD PTR _nEnd$2[ebp], ecx
; Line 5098
  00292	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00295	81 c2 4c 01 00
	00		 add	 edx, 332		; 0000014cH
  0029b	52		 push	 edx
  0029c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0029f	05 50 01 00 00	 add	 eax, 336		; 00000150H
  002a4	50		 push	 eax
  002a5	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  002aa	83 c4 08	 add	 esp, 8
  002ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  002af	89 4d e8	 mov	 DWORD PTR _n$1[ebp], ecx
  002b2	eb 09		 jmp	 SHORT $LN6@HandleKeyb
$LN5@HandleKeyb:
  002b4	8b 55 e8	 mov	 edx, DWORD PTR _n$1[ebp]
  002b7	83 c2 01	 add	 edx, 1
  002ba	89 55 e8	 mov	 DWORD PTR _n$1[ebp], edx
$LN6@HandleKeyb:
  002bd	8b 45 e8	 mov	 eax, DWORD PTR _n$1[ebp]
  002c0	3b 45 ec	 cmp	 eax, DWORD PTR _nEnd$2[ebp]
  002c3	7f 1d		 jg	 SHORT $LN4@HandleKeyb
; Line 5099
  002c5	8b 4d e8	 mov	 ecx, DWORD PTR _n$1[ebp]
  002c8	51		 push	 ecx
  002c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002cc	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  002d2	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  002d7	8b 10		 mov	 edx, DWORD PTR [eax]
  002d9	c6 82 14 02 00
	00 01		 mov	 BYTE PTR [edx+532], 1
  002e0	eb d2		 jmp	 SHORT $LN5@HandleKeyb
$LN4@HandleKeyb:
; Line 5101
  002e2	eb 33		 jmp	 SHORT $LN3@HandleKeyb
$LN7@HandleKeyb:
; Line 5103
  002e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002e7	8b 88 4c 01 00
	00		 mov	 ecx, DWORD PTR [eax+332]
  002ed	51		 push	 ecx
  002ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f1	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  002f7	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAEAAPAUDXUTListBoxItem@@I@Z ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::operator[]
  002fc	8b 10		 mov	 edx, DWORD PTR [eax]
  002fe	c6 82 14 02 00
	00 01		 mov	 BYTE PTR [edx+532], 1
; Line 5106
  00305	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00308	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0030b	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  00311	89 90 50 01 00
	00		 mov	 DWORD PTR [eax+336], edx
$LN3@HandleKeyb:
; Line 5109
  00317	eb 12		 jmp	 SHORT $LN2@HandleKeyb
$LN11@HandleKeyb:
; Line 5110
  00319	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0031c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0031f	8b 91 4c 01 00
	00		 mov	 edx, DWORD PTR [ecx+332]
  00325	89 90 50 01 00
	00		 mov	 DWORD PTR [eax+336], edx
$LN2@HandleKeyb:
; Line 5114
  0032b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0032e	8b 88 4c 01 00
	00		 mov	 ecx, DWORD PTR [eax+332]
  00334	51		 push	 ecx
  00335	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00338	83 c1 78	 add	 ecx, 120		; 00000078H
  0033b	e8 00 00 00 00	 call	 ?ShowItem@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::ShowItem
; Line 5118
  00340	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00343	52		 push	 edx
  00344	6a 01		 push	 1
  00346	68 02 07 00 00	 push	 1794			; 00000702H
  0034b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0034e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00351	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN12@HandleKeyb:
; Line 5120
  00356	b0 01		 mov	 al, 1
  00358	eb 1c		 jmp	 SHORT $LN33@HandleKeyb
$LN1@HandleKeyb:
; Line 5126
  0035a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	51		 push	 ecx
  0035e	6a 01		 push	 1
  00360	68 01 07 00 00	 push	 1793			; 00000701H
  00365	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00368	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0036b	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 5127
  00370	b0 01		 mov	 al, 1
  00372	eb 02		 jmp	 SHORT $LN33@HandleKeyb
$LN28@HandleKeyb:
; Line 5132
  00374	32 c0		 xor	 al, al
$LN33@HandleKeyb:
; Line 5133
  00376	5e		 pop	 esi
  00377	83 c4 24	 add	 esp, 36			; 00000024H
  0037a	3b ec		 cmp	 ebp, esp
  0037c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00381	8b e5		 mov	 esp, ebp
  00383	5d		 pop	 ebp
  00384	c2 0c 00	 ret	 12			; 0000000cH
  00387	90		 npad	 1
$LN36@HandleKeyb:
  00388	00 00 00 00	 DD	 $LN1@HandleKeyb
  0038c	00 00 00 00	 DD	 $LN24@HandleKeyb
  00390	00 00 00 00	 DD	 $LN28@HandleKeyb
$LN35@HandleKeyb:
  00394	00		 DB	 0
  00395	01		 DB	 1
  00396	01		 DB	 1
  00397	01		 DB	 1
  00398	01		 DB	 1
  00399	02		 DB	 2
  0039a	01		 DB	 1
  0039b	02		 DB	 2
  0039c	01		 DB	 1
  0039d	8d 49 00	 npad	 3
$LN37@HandleKeyb:
  003a0	00 00 00 00	 DD	 $LN17@HandleKeyb
  003a4	00 00 00 00	 DD	 $LN18@HandleKeyb
  003a8	00 00 00 00	 DD	 $LN15@HandleKeyb
  003ac	00 00 00 00	 DD	 $LN16@HandleKeyb
  003b0	00 00 00 00	 DD	 $LN21@HandleKeyb
  003b4	00 00 00 00	 DD	 $LN20@HandleKeyb
  003b8	00 00 00 00	 DD	 $LN21@HandleKeyb
  003bc	00 00 00 00	 DD	 $LN19@HandleKeyb
?HandleKeyboard@CDXUTListBox@@UAE_NIIJ@Z ENDP		; CDXUTListBox::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanHaveFocus@CDXUTListBox@@UAE_NXZ
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
?CanHaveFocus@CDXUTListBox@@UAE_NXZ PROC		; CDXUTListBox::CanHaveFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 799
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 800
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 14		 je	 SHORT $LN3@CanHaveFoc
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	0f b6 42 40	 movzx	 eax, BYTE PTR [edx+64]
  00029	85 c0		 test	 eax, eax
  0002b	74 09		 je	 SHORT $LN3@CanHaveFoc
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@CanHaveFoc
$LN3@CanHaveFoc:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@CanHaveFoc:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 801
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?CanHaveFocus@CDXUTListBox@@UAE_NXZ ENDP		; CDXUTListBox::CanHaveFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnInit@CDXUTListBox@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInit@CDXUTListBox@@UAEJXZ PROC			; CDXUTListBox::OnInit, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 795
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 796
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 78	 add	 eax, 120		; 00000078H
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0001b	e8 00 00 00 00	 call	 ?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::InitControl
; Line 797
  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?OnInit@CDXUTListBox@@UAEJXZ ENDP			; CDXUTListBox::OnInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDXUTListBox@@UAE@XZ PROC				; CDXUTListBox::~CDXUTListBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4845
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDXUTListBox@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTListBox@@6B@
  00036	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; Line 4846
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?RemoveAllItems@CDXUTListBox@@QAEXXZ ; CDXUTListBox::RemoveAllItems
; Line 4847
  00045	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00052	e8 00 00 00 00	 call	 ??1?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::~vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >
  00057	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 78	 add	 ecx, 120		; 00000078H
  00061	e8 00 00 00 00	 call	 ??1CDXUTScrollBar@@UAE@XZ ; CDXUTScrollBar::~CDXUTScrollBar
  00066	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
  00075	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00078	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007f	59		 pop	 ecx
  00080	83 c4 10	 add	 esp, 16			; 00000010H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDXUTListBox@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
__unwindfunclet$??1CDXUTListBox@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 78	 add	 ecx, 120		; 00000078H
  0000e	e9 00 00 00 00	 jmp	 ??1CDXUTScrollBar@@UAE@XZ ; CDXUTScrollBar::~CDXUTScrollBar
__unwindfunclet$??1CDXUTListBox@@UAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::~vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >
__ehhandler$??1CDXUTListBox@@UAE@XZ:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDXUTListBox@@UAE@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDXUTListBox@@UAE@XZ ENDP				; CDXUTListBox::~CDXUTListBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDialog$ = 8						; size = 4
??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTListBox::CDXUTListBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4828
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	6a 00		 push	 0
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z ; CDXUTControl::CDXUTControl
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTListBox@@6B@
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	83 c1 78	 add	 ecx, 120		; 00000078H
  00051	e8 00 00 00 00	 call	 ??0CDXUTScrollBar@@QAE@PAVCDXUTDialog@@@Z ; CDXUTScrollBar::CDXUTScrollBar
  00056	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00063	e8 00 00 00 00	 call	 ??0?$vector@PAUDXUTListBoxItem@@V?$allocator@PAUDXUTListBoxItem@@@std@@@std@@QAE@XZ ; std::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >::vector<DXUTListBoxItem *,std::allocator<DXUTListBoxItem *> >
; Line 4829
  00068	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	c7 42 34 08 00
	00 00		 mov	 DWORD PTR [edx+52], 8
; Line 4830
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00078	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 4832
  0007b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0007e	c7 82 48 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+328], 0
; Line 4833
  00088	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 80 38 01 00
	00 10 00 00 00	 mov	 DWORD PTR [eax+312], 16	; 00000010H
; Line 4834
  00095	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	c7 81 4c 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+332], -1
; Line 4835
  000a2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	c7 82 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+336], 0
; Line 4836
  000af	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	c6 80 54 01 00
	00 00		 mov	 BYTE PTR [eax+340], 0
; Line 4837
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	c7 81 3c 01 00
	00 06 00 00 00	 mov	 DWORD PTR [ecx+316], 6
; Line 4838
  000c6	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000c9	c7 82 40 01 00
	00 05 00 00 00	 mov	 DWORD PTR [edx+320], 5
; Line 4839
  000d3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d6	c7 80 44 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+324], 0
; Line 4840
  000e0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ea	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f4	59		 pop	 ecx
  000f5	83 c4 10	 add	 esp, 16			; 00000010H
  000f8	3b ec		 cmp	 ebp, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
__unwindfunclet$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 78	 add	 ecx, 120		; 00000078H
  0000e	e9 00 00 00 00	 jmp	 ??1CDXUTScrollBar@@UAE@XZ ; CDXUTScrollBar::~CDXUTScrollBar
__ehhandler$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTListBox::CDXUTListBox
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTScrollBar@@UAEPAXI@Z PROC			; CDXUTScrollBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTScrollBar@@UAE@XZ ; CDXUTScrollBar::~CDXUTScrollBar
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTScrollBar@@UAEPAXI@Z ENDP			; CDXUTScrollBar::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cap@CDXUTScrollBar@@IAEXXZ PROC			; CDXUTScrollBar::Cap
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4812
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4814
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  0001a	3b 91 a0 00 00
	00		 cmp	 edx, DWORD PTR [ecx+160]
  00020	7c 1d		 jl	 SHORT $LN3@Cap
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  0002e	2b 91 a0 00 00
	00		 sub	 edx, DWORD PTR [ecx+160]
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	3b 90 9c 00 00
	00		 cmp	 edx, DWORD PTR [eax+156]
  0003d	7f 14		 jg	 SHORT $LN4@Cap
$LN3@Cap:
; Line 4816
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00045	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  0004b	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax
  00051	eb 3b		 jmp	 SHORT $LN5@Cap
$LN4@Cap:
; Line 4818
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	03 90 9c 00 00
	00		 add	 edx, DWORD PTR [eax+156]
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	3b 91 a4 00 00
	00		 cmp	 edx, DWORD PTR [ecx+164]
  0006e	7e 1e		 jle	 SHORT $LN5@Cap
; Line 4819
  00070	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  0007c	2b 88 9c 00 00
	00		 sub	 ecx, DWORD PTR [eax+156]
  00082	83 c1 01	 add	 ecx, 1
  00085	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00088	89 8a 98 00 00
	00		 mov	 DWORD PTR [edx+152], ecx
$LN5@Cap:
; Line 4820
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
?Cap@CDXUTScrollBar@@IAEXXZ ENDP			; CDXUTScrollBar::Cap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_nMaxPosition$3 = -12					; size = 4
_nThumbHeight$4 = -8					; size = 4
_this$ = -4						; size = 4
?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ PROC		; CDXUTScrollBar::UpdateThumbRect
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4497
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4498
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  0002a	2b 91 a0 00 00
	00		 sub	 edx, DWORD PTR [ecx+160]
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	3b 90 9c 00 00
	00		 cmp	 edx, DWORD PTR [eax+156]
  00039	0f 8e c3 00 00
	00		 jle	 $LN2@UpdateThum
; Line 4501
  0003f	c7 45 f0 08 00
	00 00		 mov	 DWORD PTR $T2[ebp], 8
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 78	 add	 ecx, 120		; 00000078H
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  00052	83 c4 04	 add	 esp, 4
  00055	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00058	0f af 82 9c 00
	00 00		 imul	 eax, DWORD PTR [edx+156]
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00065	8b 89 a4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+164]
  0006b	2b 8a a0 00 00
	00		 sub	 ecx, DWORD PTR [edx+160]
  00071	99		 cdq
  00072	f7 f9		 idiv	 ecx
  00074	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
  00077	8d 55 f0	 lea	 edx, DWORD PTR $T2[ebp]
  0007a	52		 push	 edx
  0007b	8d 45 ec	 lea	 eax, DWORD PTR $T1[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??$max@H@std@@YAABHABH0@Z ; std::max<int>
  00084	83 c4 08	 add	 esp, 8
  00087	8b 08		 mov	 ecx, DWORD PTR [eax]
  00089	89 4d f8	 mov	 DWORD PTR _nThumbHeight$4[ebp], ecx
; Line 4502
  0008c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  00098	2b 88 a0 00 00
	00		 sub	 ecx, DWORD PTR [eax+160]
  0009e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a1	2b 8a 9c 00 00
	00		 sub	 ecx, DWORD PTR [edx+156]
  000a7	89 4d f4	 mov	 DWORD PTR _nMaxPosition$3[ebp], ecx
; Line 4504
  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	8b b0 98 00 00
	00		 mov	 esi, DWORD PTR [eax+152]
  000b6	2b b1 a0 00 00
	00		 sub	 esi, DWORD PTR [ecx+160]
  000bc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	83 c2 78	 add	 edx, 120		; 00000078H
  000c2	52		 push	 edx
  000c3	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  000c8	83 c4 04	 add	 esp, 4
  000cb	2b 45 f8	 sub	 eax, DWORD PTR _nThumbHeight$4[ebp]
  000ce	0f af c6	 imul	 eax, esi
  000d1	99		 cdq
  000d2	f7 7d f4	 idiv	 DWORD PTR _nMaxPosition$3[ebp]
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	03 41 7c	 add	 eax, DWORD PTR [ecx+124]
  000db	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000de	89 82 8c 00 00
	00		 mov	 DWORD PTR [edx+140], eax
; Line 4505
  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  000ed	03 4d f8	 add	 ecx, DWORD PTR _nThumbHeight$4[ebp]
  000f0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f3	89 8a 94 00 00
	00		 mov	 DWORD PTR [edx+148], ecx
; Line 4506
  000f9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	c6 40 54 01	 mov	 BYTE PTR [eax+84], 1
; Line 4509
  00100	eb 19		 jmp	 SHORT $LN3@UpdateThum
$LN2@UpdateThum:
; Line 4512
  00102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00108	8b 82 8c 00 00
	00		 mov	 eax, DWORD PTR [edx+140]
  0010e	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax
; Line 4513
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	c6 41 54 00	 mov	 BYTE PTR [ecx+84], 0
$LN3@UpdateThum:
; Line 4515
  0011b	5e		 pop	 esi
  0011c	83 c4 14	 add	 esp, 20			; 00000014H
  0011f	3b ec		 cmp	 ebp, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c3		 ret	 0
?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ENDP		; CDXUTScrollBar::UpdateThumbRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ShowItem@CDXUTScrollBar@@QAEXH@Z PROC			; CDXUTScrollBar::ShowItem
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4536
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4539
  0000e	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00012	7d 07		 jge	 SHORT $LN5@ShowItem
; Line 4540
  00014	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _nIndex$[ebp], 0
$LN5@ShowItem:
; Line 4542
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00021	3b 88 a4 00 00
	00		 cmp	 ecx, DWORD PTR [eax+164]
  00027	7c 0f		 jl	 SHORT $LN4@ShowItem
; Line 4543
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00032	83 e8 01	 sub	 eax, 1
  00035	89 45 08	 mov	 DWORD PTR _nIndex$[ebp], eax
$LN4@ShowItem:
; Line 4547
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  00041	3b 55 08	 cmp	 edx, DWORD PTR _nIndex$[ebp]
  00044	7e 0e		 jle	 SHORT $LN3@ShowItem
; Line 4548
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0004c	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
  00052	eb 2f		 jmp	 SHORT $LN2@ShowItem
$LN3@ShowItem:
; Line 4549
  00054	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	03 81 9c 00 00
	00		 add	 eax, DWORD PTR [ecx+156]
  00066	3b 45 08	 cmp	 eax, DWORD PTR _nIndex$[ebp]
  00069	7f 18		 jg	 SHORT $LN2@ShowItem
; Line 4550
  0006b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	2b 82 9c 00 00
	00		 sub	 eax, DWORD PTR [edx+156]
  00077	83 c0 01	 add	 eax, 1
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax
$LN2@ShowItem:
; Line 4552
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 4553
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b ec		 cmp	 ebp, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
?ShowItem@CDXUTScrollBar@@QAEXH@Z ENDP			; CDXUTScrollBar::ShowItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nDelta$ = 8						; size = 4
?Scroll@CDXUTScrollBar@@QAEXH@Z PROC			; CDXUTScrollBar::Scroll
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4522
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4524
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00017	03 4d 08	 add	 ecx, DWORD PTR _nDelta$[ebp]
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	89 8a 98 00 00
	00		 mov	 DWORD PTR [edx+152], ecx
; Line 4527
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Cap@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::Cap
; Line 4530
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 4531
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?Scroll@CDXUTScrollBar@@QAEXH@Z ENDP			; CDXUTScrollBar::Scroll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetPageSize@CDXUTScrollBar@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nPageSize$ = 8						; size = 4
?SetPageSize@CDXUTScrollBar@@QAEXH@Z PROC		; CDXUTScrollBar::SetPageSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 732
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 733
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _nPageSize$[ebp]
  00014	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx
; Line 734
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?Cap@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::Cap
; Line 735
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 736
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?SetPageSize@CDXUTScrollBar@@QAEXH@Z ENDP		; CDXUTScrollBar::SetPageSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPageSize@CDXUTScrollBar@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPageSize@CDXUTScrollBar@@QBEHXZ PROC		; CDXUTScrollBar::GetPageSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 730
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetPageSize@CDXUTScrollBar@@QBEHXZ ENDP		; CDXUTScrollBar::GetPageSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTrackPos@CDXUTScrollBar@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTrackPos@CDXUTScrollBar@@QBEHXZ PROC		; CDXUTScrollBar::GetTrackPos, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 723
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 98 00 00
	00		 mov	 eax, DWORD PTR [eax+152]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetTrackPos@CDXUTScrollBar@@QBEHXZ ENDP		; CDXUTScrollBar::GetTrackPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nStart$ = 8						; size = 4
_nEnd$ = 12						; size = 4
?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z PROC		; CDXUTScrollBar::SetTrackRange
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4803
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4804
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _nStart$[ebp]
  00014	89 88 a0 00 00
	00		 mov	 DWORD PTR [eax+160], ecx
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	8b 45 0c	 mov	 eax, DWORD PTR _nEnd$[ebp]
  00020	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
; Line 4805
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?Cap@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::Cap
; Line 4806
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 4807
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
?SetTrackRange@CDXUTScrollBar@@QAEXHH@Z ENDP		; CDXUTScrollBar::SetTrackRange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateRects@CDXUTScrollBar@@UAEXXZ PROC		; CDXUTScrollBar::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4476
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4477
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?UpdateRects@CDXUTControl@@MAEXXZ ; CDXUTControl::UpdateRects
; Line 4482
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 c0 44	 add	 eax, 68			; 00000044H
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  00023	83 c4 04	 add	 esp, 4
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	03 41 48	 add	 eax, DWORD PTR [ecx+72]
  0002c	8b f4		 mov	 esi, esp
  0002e	50		 push	 eax
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00035	50		 push	 eax
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  0003c	52		 push	 edx
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00043	51		 push	 ecx
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	83 c2 58	 add	 edx, 88			; 00000058H
  0004a	52		 push	 edx
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00051	3b f4		 cmp	 esi, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4484
  00058	8b f4		 mov	 esi, esp
  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00067	50		 push	 eax
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	83 c1 44	 add	 ecx, 68			; 00000044H
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  00074	83 c4 04	 add	 esp, 4
  00077	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  0007d	2b c8		 sub	 ecx, eax
  0007f	51		 push	 ecx
  00080	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00086	50		 push	 eax
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	83 c1 68	 add	 ecx, 104		; 00000068H
  0008d	51		 push	 ecx
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00094	3b f4		 cmp	 esi, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4486
  0009b	8b f4		 mov	 esi, esp
  0009d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	8b 42 6c	 mov	 eax, DWORD PTR [edx+108]
  000a3	50		 push	 eax
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  000aa	52		 push	 edx
  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  000b1	51		 push	 ecx
  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  000b8	50		 push	 eax
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	83 c1 78	 add	 ecx, 120		; 00000078H
  000bf	51		 push	 ecx
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4487
  000cd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  000d6	89 8a 88 00 00
	00		 mov	 DWORD PTR [edx+136], ecx
; Line 4488
  000dc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  000e5	89 8a 90 00 00
	00		 mov	 DWORD PTR [edx+144], ecx
; Line 4490
  000eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 4491
  000f3	5e		 pop	 esi
  000f4	83 c4 04	 add	 esp, 4
  000f7	3b ec		 cmp	 ebp, esp
  000f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
?UpdateRects@CDXUTScrollBar@@UAEXXZ ENDP		; CDXUTScrollBar::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv184 = -36						; size = 4
tv136 = -32						; size = 4
tv81 = -28						; size = 4
_pElement$ = -24					; size = 4
_fBlendRate$ = -20					; size = 4
_iState$ = -16						; size = 4
_dCurrTime$1 = -12					; size = 8
_this$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTScrollBar@@UAEXM@Z PROC			; CDXUTScrollBar::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4702
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4703
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00031	85 c9		 test	 ecx, ecx
  00033	75 05		 jne	 SHORT $LN25@Render
; Line 4704
  00035	e9 98 03 00 00	 jmp	 $LN26@Render
$LN25@Render:
; Line 4709
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	83 ba b0 00 00
	00 00		 cmp	 DWORD PTR [edx+176], 0
  00044	0f 84 8d 01 00
	00		 je	 $LN13@Render
; Line 4711
  0004a	e8 00 00 00 00	 call	 ?DXUTGetTime@@YGNXZ	; DXUTGetTime
  0004f	dd 5d f4	 fstp	 QWORD PTR _dCurrTime$1[ebp]
; Line 4712
  00052	8b f4		 mov	 esi, esp
  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0005d	51		 push	 ecx
  0005e	8b 90 a8 00 00
	00		 mov	 edx, DWORD PTR [eax+168]
  00064	52		 push	 edx
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	83 c0 58	 add	 eax, 88			; 00000058H
  0006b	50		 push	 eax
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	85 c0		 test	 eax, eax
  0007b	0f 84 96 00 00
	00		 je	 $LN23@Render
; Line 4714
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0008a	89 55 e4	 mov	 DWORD PTR tv81[ebp], edx
  0008d	83 7d e4 01	 cmp	 DWORD PTR tv81[ebp], 1
  00091	74 08		 je	 SHORT $LN20@Render
  00093	83 7d e4 03	 cmp	 DWORD PTR tv81[ebp], 3
  00097	74 45		 je	 SHORT $LN18@Render
  00099	eb 77		 jmp	 SHORT $LN21@Render
$LN20@Render:
; Line 4717
  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  000a3	f2 0f 5c 80 b8
	00 00 00	 subsd	 xmm0, QWORD PTR [eax+184]
  000ab	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd51eb851eb851f
  000b3	76 27		 jbe	 SHORT $LN19@Render
; Line 4719
  000b5	6a ff		 push	 -1
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 4720
  000bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	c7 81 b0 00 00
	00 03 00 00 00	 mov	 DWORD PTR [ecx+176], 3
; Line 4721
  000cc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cf	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  000d4	f2 0f 11 82 b8
	00 00 00	 movsd	 QWORD PTR [edx+184], xmm0
$LN19@Render:
; Line 4723
  000dc	eb 34		 jmp	 SHORT $LN21@Render
$LN18@Render:
; Line 4725
  000de	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  000e6	f2 0f 5c 80 b8
	00 00 00	 subsd	 xmm0, QWORD PTR [eax+184]
  000ee	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fa999999999999a
  000f6	76 1a		 jbe	 SHORT $LN17@Render
; Line 4727
  000f8	6a ff		 push	 -1
  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 4728
  00102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  0010a	f2 0f 11 81 b8
	00 00 00	 movsd	 QWORD PTR [ecx+184], xmm0
$LN17@Render:
$LN21@Render:
; Line 4733
  00112	e9 c0 00 00 00	 jmp	 $LN13@Render
$LN23@Render:
  00117	8b f4		 mov	 esi, esp
  00119	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0011c	8b 82 ac 00 00
	00		 mov	 eax, DWORD PTR [edx+172]
  00122	50		 push	 eax
  00123	8b 8a a8 00 00
	00		 mov	 ecx, DWORD PTR [edx+168]
  00129	51		 push	 ecx
  0012a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0012d	83 c2 68	 add	 edx, 104		; 00000068H
  00130	52		 push	 edx
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00137	3b f4		 cmp	 esi, esp
  00139	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013e	85 c0		 test	 eax, eax
  00140	0f 84 91 00 00
	00		 je	 $LN13@Render
; Line 4735
  00146	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00149	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0014f	89 4d e0	 mov	 DWORD PTR tv136[ebp], ecx
  00152	83 7d e0 02	 cmp	 DWORD PTR tv136[ebp], 2
  00156	74 08		 je	 SHORT $LN12@Render
  00158	83 7d e0 04	 cmp	 DWORD PTR tv136[ebp], 4
  0015c	74 45		 je	 SHORT $LN10@Render
  0015e	eb 77		 jmp	 SHORT $LN13@Render
$LN12@Render:
; Line 4738
  00160	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00163	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  00168	f2 0f 5c 82 b8
	00 00 00	 subsd	 xmm0, QWORD PTR [edx+184]
  00170	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd51eb851eb851f
  00178	76 27		 jbe	 SHORT $LN11@Render
; Line 4740
  0017a	6a 01		 push	 1
  0017c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017f	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 4741
  00184	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00187	c7 80 b0 00 00
	00 04 00 00 00	 mov	 DWORD PTR [eax+176], 4
; Line 4742
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  00199	f2 0f 11 81 b8
	00 00 00	 movsd	 QWORD PTR [ecx+184], xmm0
$LN11@Render:
; Line 4744
  001a1	eb 34		 jmp	 SHORT $LN13@Render
$LN10@Render:
; Line 4746
  001a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001a6	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  001ab	f2 0f 5c 82 b8
	00 00 00	 subsd	 xmm0, QWORD PTR [edx+184]
  001b3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fa999999999999a
  001bb	76 1a		 jbe	 SHORT $LN9@Render
; Line 4748
  001bd	6a 01		 push	 1
  001bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c2	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 4749
  001c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ca	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _dCurrTime$1[ebp]
  001cf	f2 0f 11 80 b8
	00 00 00	 movsd	 QWORD PTR [eax+184], xmm0
$LN9@Render:
$LN13@Render:
; Line 4756
  001d7	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 0
; Line 4758
  001de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e1	0f b6 51 04	 movzx	 edx, BYTE PTR [ecx+4]
  001e5	85 d2		 test	 edx, edx
  001e7	75 09		 jne	 SHORT $LN8@Render
; Line 4759
  001e9	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 2
  001f0	eb 45		 jmp	 SHORT $LN1@Render
$LN8@Render:
; Line 4760
  001f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f5	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  001f9	85 c9		 test	 ecx, ecx
  001fb	74 0b		 je	 SHORT $LN5@Render
  001fd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00200	0f b6 42 54	 movzx	 eax, BYTE PTR [edx+84]
  00204	85 c0		 test	 eax, eax
  00206	75 09		 jne	 SHORT $LN6@Render
$LN5@Render:
; Line 4761
  00208	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 1
  0020f	eb 26		 jmp	 SHORT $LN1@Render
$LN6@Render:
; Line 4762
  00211	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00214	0f b6 51 05	 movzx	 edx, BYTE PTR [ecx+5]
  00218	85 d2		 test	 edx, edx
  0021a	74 09		 je	 SHORT $LN3@Render
; Line 4763
  0021c	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 4
  00223	eb 12		 jmp	 SHORT $LN1@Render
$LN3@Render:
; Line 4764
  00225	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00228	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  0022c	85 c9		 test	 ecx, ecx
  0022e	74 07		 je	 SHORT $LN1@Render
; Line 4765
  00230	c7 45 f0 03 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 3
$LN1@Render:
; Line 4768
  00237	83 7d f0 05	 cmp	 DWORD PTR _iState$[ebp], 5
  0023b	75 0f		 jne	 SHORT $LN28@Render
  0023d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00245	f3 0f 11 45 dc	 movss	 DWORD PTR tv184[ebp], xmm0
  0024a	eb 0d		 jmp	 SHORT $LN29@Render
$LN28@Render:
  0024c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00254	f3 0f 11 45 dc	 movss	 DWORD PTR tv184[ebp], xmm0
$LN29@Render:
  00259	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR tv184[ebp]
  0025e	f3 0f 11 45 ec	 movss	 DWORD PTR _fBlendRate$[ebp], xmm0
; Line 4771
  00263	6a 00		 push	 0
  00265	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00268	83 c1 20	 add	 ecx, 32			; 00000020H
  0026b	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00270	8b 10		 mov	 edx, DWORD PTR [eax]
  00272	89 55 e8	 mov	 DWORD PTR _pElement$[ebp], edx
; Line 4774
  00275	51		 push	 ecx
  00276	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  0027b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00280	51		 push	 ecx
  00281	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00286	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028b	8b 45 f0	 mov	 eax, DWORD PTR _iState$[ebp]
  0028e	50		 push	 eax
  0028f	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00292	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00295	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 4775
  0029a	51		 push	 ecx
  0029b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  002a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ab	83 c1 78	 add	 ecx, 120		; 00000078H
  002ae	51		 push	 ecx
  002af	8b 55 e8	 mov	 edx, DWORD PTR _pElement$[ebp]
  002b2	52		 push	 edx
  002b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b6	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  002b9	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 4778
  002be	6a 01		 push	 1
  002c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c3	83 c1 20	 add	 ecx, 32			; 00000020H
  002c6	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  002cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  002cd	89 4d e8	 mov	 DWORD PTR _pElement$[ebp], ecx
; Line 4781
  002d0	51		 push	 ecx
  002d1	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  002d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002db	51		 push	 ecx
  002dc	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e6	8b 55 f0	 mov	 edx, DWORD PTR _iState$[ebp]
  002e9	52		 push	 edx
  002ea	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  002ed	83 c1 1c	 add	 ecx, 28			; 0000001cH
  002f0	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 4782
  002f5	51		 push	 ecx
  002f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  002fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00303	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00306	83 c0 58	 add	 eax, 88			; 00000058H
  00309	50		 push	 eax
  0030a	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0030d	51		 push	 ecx
  0030e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00311	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00314	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 4785
  00319	6a 02		 push	 2
  0031b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0031e	83 c1 20	 add	 ecx, 32			; 00000020H
  00321	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00326	8b 00		 mov	 eax, DWORD PTR [eax]
  00328	89 45 e8	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 4788
  0032b	51		 push	 ecx
  0032c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00331	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00336	51		 push	 ecx
  00337	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0033c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00341	8b 4d f0	 mov	 ecx, DWORD PTR _iState$[ebp]
  00344	51		 push	 ecx
  00345	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00348	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0034b	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 4789
  00350	51		 push	 ecx
  00351	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  00359	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00361	83 c2 68	 add	 edx, 104		; 00000068H
  00364	52		 push	 edx
  00365	8b 45 e8	 mov	 eax, DWORD PTR _pElement$[ebp]
  00368	50		 push	 eax
  00369	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0036c	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0036f	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 4792
  00374	6a 03		 push	 3
  00376	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00379	83 c1 20	 add	 ecx, 32			; 00000020H
  0037c	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00381	8b 10		 mov	 edx, DWORD PTR [eax]
  00383	89 55 e8	 mov	 DWORD PTR _pElement$[ebp], edx
; Line 4795
  00386	51		 push	 ecx
  00387	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  0038c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00391	51		 push	 ecx
  00392	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00397	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039c	8b 45 f0	 mov	 eax, DWORD PTR _iState$[ebp]
  0039f	50		 push	 eax
  003a0	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  003a3	83 c1 1c	 add	 ecx, 28			; 0000001cH
  003a6	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 4796
  003ab	51		 push	 ecx
  003ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  003b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003bc	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  003c2	51		 push	 ecx
  003c3	8b 55 e8	 mov	 edx, DWORD PTR _pElement$[ebp]
  003c6	52		 push	 edx
  003c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003ca	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  003cd	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
$LN26@Render:
; Line 4798
  003d2	5e		 pop	 esi
  003d3	83 c4 24	 add	 esp, 36			; 00000024H
  003d6	3b ec		 cmp	 ebp, esp
  003d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003dd	8b e5		 mov	 esp, ebp
  003df	5d		 pop	 ebp
  003e0	c2 04 00	 ret	 4
?Render@CDXUTScrollBar@@UAEXM@Z ENDP			; CDXUTScrollBar::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@CDXUTScrollBar@@UAE_NIIJ@Z PROC		; CDXUTScrollBar::MsgProc
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4685
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4688
  0000e	81 7d 08 15 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 533 ; 00000215H
  00015	75 11		 jne	 SHORT $LN2@MsgProc
; Line 4692
  00017	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  0001c	39 45 10	 cmp	 DWORD PTR _lParam$[ebp], eax
  0001f	74 07		 je	 SHORT $LN2@MsgProc
; Line 4693
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c6 40 55 00	 mov	 BYTE PTR [eax+85], 0
$LN2@MsgProc:
; Line 4696
  00028	32 c0		 xor	 al, al
; Line 4697
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 0c 00	 ret	 12			; 0000000cH
?MsgProc@CDXUTScrollBar@@UAE_NIIJ@Z ENDP		; CDXUTScrollBar::MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv66 = -16						; size = 4
_nMaxThumb$1 = -12					; size = 4
_nMaxFirstItem$2 = -8					; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z PROC ; CDXUTScrollBar::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4576
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	89 88 a8 00 00
	00		 mov	 DWORD PTR [eax+168], ecx
  0002c	89 90 ac 00 00
	00		 mov	 DWORD PTR [eax+172], edx
; Line 4577
  00032	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00035	89 4d f0	 mov	 DWORD PTR tv66[ebp], ecx
  00038	8b 55 f0	 mov	 edx, DWORD PTR tv66[ebp]
  0003b	81 ea 00 02 00
	00		 sub	 edx, 512		; 00000200H
  00041	89 55 f0	 mov	 DWORD PTR tv66[ebp], edx
  00044	83 7d f0 03	 cmp	 DWORD PTR tv66[ebp], 3
  00048	0f 87 c7 03 00
	00		 ja	 $LN17@HandleMous
  0004e	8b 45 f0	 mov	 eax, DWORD PTR tv66[ebp]
  00051	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN21@HandleMous[eax*4]
$LN16@HandleMous:
; Line 4584
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  0005d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00060	52		 push	 edx
  00061	8b 01		 mov	 eax, DWORD PTR [ecx]
  00063	50		 push	 eax
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 58	 add	 ecx, 88			; 00000058H
  0006a	51		 push	 ecx
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	85 c0		 test	 eax, eax
  0007a	74 68		 je	 SHORT $LN15@HandleMous
; Line 4586
  0007c	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00081	8b f4		 mov	 esi, esp
  00083	50		 push	 eax
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4587
  00091	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  0009d	3b 88 a0 00 00
	00		 cmp	 ecx, DWORD PTR [eax+160]
  000a3	7e 15		 jle	 SHORT $LN14@HandleMous
; Line 4588
  000a5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a8	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  000ae	83 e8 01	 sub	 eax, 1
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax
$LN14@HandleMous:
; Line 4589
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 4590
  000c2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c5	c7 82 b0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [edx+176], 1
; Line 4591
  000cf	e8 00 00 00 00	 call	 ?DXUTGetTime@@YGNXZ	; DXUTGetTime
  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	dd 98 b8 00 00
	00		 fstp	 QWORD PTR [eax+184]
; Line 4592
  000dd	b0 01		 mov	 al, 1
  000df	e9 33 03 00 00	 jmp	 $LN19@HandleMous
$LN15@HandleMous:
; Line 4597
  000e4	8b f4		 mov	 esi, esp
  000e6	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  000e9	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ec	52		 push	 edx
  000ed	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ef	50		 push	 eax
  000f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	83 c1 68	 add	 ecx, 104		; 00000068H
  000f6	51		 push	 ecx
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  000fd	3b f4		 cmp	 esi, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	85 c0		 test	 eax, eax
  00106	74 71		 je	 SHORT $LN13@HandleMous
; Line 4599
  00108	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  0010d	8b f4		 mov	 esi, esp
  0010f	50		 push	 eax
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4600
  0011d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00120	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00126	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00129	03 81 9c 00 00
	00		 add	 eax, DWORD PTR [ecx+156]
  0012f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00132	3b 82 a4 00 00
	00		 cmp	 eax, DWORD PTR [edx+164]
  00138	7f 15		 jg	 SHORT $LN12@HandleMous
; Line 4601
  0013a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00143	83 c1 01	 add	 ecx, 1
  00146	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00149	89 8a 98 00 00
	00		 mov	 DWORD PTR [edx+152], ecx
$LN12@HandleMous:
; Line 4602
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 4603
  00157	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015a	c7 80 b0 00 00
	00 02 00 00 00	 mov	 DWORD PTR [eax+176], 2
; Line 4604
  00164	e8 00 00 00 00	 call	 ?DXUTGetTime@@YGNXZ	; DXUTGetTime
  00169	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016c	dd 99 b8 00 00
	00		 fstp	 QWORD PTR [ecx+184]
; Line 4605
  00172	b0 01		 mov	 al, 1
  00174	e9 9e 02 00 00	 jmp	 $LN19@HandleMous
$LN13@HandleMous:
; Line 4610
  00179	8b f4		 mov	 esi, esp
  0017b	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  0017e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00181	50		 push	 eax
  00182	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00184	51		 push	 ecx
  00185	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00188	81 c2 88 00 00
	00		 add	 edx, 136		; 00000088H
  0018e	52		 push	 edx
  0018f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00195	3b f4		 cmp	 esi, esp
  00197	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019c	85 c0		 test	 eax, eax
  0019e	74 37		 je	 SHORT $LN11@HandleMous
; Line 4612
  001a0	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  001a5	8b f4		 mov	 esi, esp
  001a7	50		 push	 eax
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  001ae	3b f4		 cmp	 esi, esp
  001b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4613
  001b5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b8	c6 40 55 01	 mov	 BYTE PTR [eax+85], 1
; Line 4614
  001bc	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  001bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c2	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001c5	2b 82 8c 00 00
	00		 sub	 eax, DWORD PTR [edx+140]
  001cb	a3 00 00 00 00	 mov	 DWORD PTR ?ThumbOffsetY@?1??HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z@4HA, eax
; Line 4615
  001d0	b0 01		 mov	 al, 1
  001d2	e9 40 02 00 00	 jmp	 $LN19@HandleMous
$LN11@HandleMous:
; Line 4621
  001d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001da	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  001dd	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  001e3	3b 02		 cmp	 eax, DWORD PTR [edx]
  001e5	0f 8f a6 00 00
	00		 jg	 $LN7@HandleMous
  001eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ee	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  001f1	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]
  001f7	3b 02		 cmp	 eax, DWORD PTR [edx]
  001f9	0f 8e 92 00 00
	00		 jle	 $LN7@HandleMous
; Line 4623
  001ff	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00204	8b f4		 mov	 esi, esp
  00206	50		 push	 eax
  00207	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  0020d	3b f4		 cmp	 esi, esp
  0020f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4625
  00214	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00217	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  0021a	8b 81 8c 00 00
	00		 mov	 eax, DWORD PTR [ecx+140]
  00220	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00223	7e 2e		 jle	 SHORT $LN9@HandleMous
  00225	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00228	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  0022b	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  0022e	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00231	7f 20		 jg	 SHORT $LN9@HandleMous
; Line 4627
  00233	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00236	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  0023c	83 ea 01	 sub	 edx, 1
  0023f	f7 da		 neg	 edx
  00241	52		 push	 edx
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00245	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 4628
  0024a	b0 01		 mov	 al, 1
  0024c	e9 c6 01 00 00	 jmp	 $LN19@HandleMous
; Line 4630
  00251	eb 3e		 jmp	 SHORT $LN7@HandleMous
$LN9@HandleMous:
; Line 4631
  00253	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00256	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  00259	8b 90 94 00 00
	00		 mov	 edx, DWORD PTR [eax+148]
  0025f	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00262	7f 2d		 jg	 SHORT $LN7@HandleMous
  00264	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00267	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  0026a	8b 90 84 00 00
	00		 mov	 edx, DWORD PTR [eax+132]
  00270	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00273	7e 1c		 jle	 SHORT $LN7@HandleMous
; Line 4633
  00275	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00278	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  0027e	83 e9 01	 sub	 ecx, 1
  00281	51		 push	 ecx
  00282	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00285	e8 00 00 00 00	 call	 ?Scroll@CDXUTScrollBar@@QAEXH@Z ; CDXUTScrollBar::Scroll
; Line 4634
  0028a	b0 01		 mov	 al, 1
  0028c	e9 86 01 00 00	 jmp	 $LN19@HandleMous
$LN7@HandleMous:
; Line 4638
  00291	e9 7f 01 00 00	 jmp	 $LN17@HandleMous
$LN6@HandleMous:
; Line 4643
  00296	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00299	c6 42 55 00	 mov	 BYTE PTR [edx+85], 0
; Line 4644
  0029d	8b f4		 mov	 esi, esp
  0029f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  002a5	3b f4		 cmp	 esi, esp
  002a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4645
  002ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002af	e8 00 00 00 00	 call	 ?UpdateThumbRect@CDXUTScrollBar@@IAEXXZ ; CDXUTScrollBar::UpdateThumbRect
; Line 4646
  002b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b7	c7 80 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+176], 0
; Line 4647
  002c1	e9 4f 01 00 00	 jmp	 $LN17@HandleMous
$LN5@HandleMous:
; Line 4652
  002c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c9	0f b6 51 55	 movzx	 edx, BYTE PTR [ecx+85]
  002cd	85 d2		 test	 edx, edx
  002cf	0f 84 40 01 00
	00		 je	 $LN4@HandleMous
; Line 4654
  002d5	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  002d8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002db	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?ThumbOffsetY@?1??HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z@4HA
  002e1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002e4	2b 8a 8c 00 00
	00		 sub	 ecx, DWORD PTR [edx+140]
  002ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002ed	03 88 94 00 00
	00		 add	 ecx, DWORD PTR [eax+148]
  002f3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002f6	89 8a 94 00 00
	00		 mov	 DWORD PTR [edx+148], ecx
; Line 4655
  002fc	8b 45 0c	 mov	 eax, DWORD PTR _pt$[ebp]
  002ff	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00302	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?ThumbOffsetY@?1??HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z@4HA
  00308	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0030b	89 8a 8c 00 00
	00		 mov	 DWORD PTR [edx+140], ecx
; Line 4656
  00311	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00314	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	8b 90 8c 00 00
	00		 mov	 edx, DWORD PTR [eax+140]
  0031d	3b 51 7c	 cmp	 edx, DWORD PTR [ecx+124]
  00320	7d 2c		 jge	 SHORT $LN3@HandleMous
; Line 4657
  00322	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00325	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00328	8b 50 7c	 mov	 edx, DWORD PTR [eax+124]
  0032b	2b 91 8c 00 00
	00		 sub	 edx, DWORD PTR [ecx+140]
  00331	8b f4		 mov	 esi, esp
  00333	52		 push	 edx
  00334	6a 00		 push	 0
  00336	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00339	05 88 00 00 00	 add	 eax, 136		; 00000088H
  0033e	50		 push	 eax
  0033f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00345	3b f4		 cmp	 esi, esp
  00347	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034c	eb 42		 jmp	 SHORT $LN1@HandleMous
$LN3@HandleMous:
; Line 4658
  0034e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00351	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00354	8b 81 94 00 00
	00		 mov	 eax, DWORD PTR [ecx+148]
  0035a	3b 82 84 00 00
	00		 cmp	 eax, DWORD PTR [edx+132]
  00360	7e 2e		 jle	 SHORT $LN1@HandleMous
; Line 4659
  00362	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00365	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00368	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  0036e	2b 82 94 00 00
	00		 sub	 eax, DWORD PTR [edx+148]
  00374	8b f4		 mov	 esi, esp
  00376	50		 push	 eax
  00377	6a 00		 push	 0
  00379	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0037c	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00382	51		 push	 ecx
  00383	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00389	3b f4		 cmp	 esi, esp
  0038b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@HandleMous:
; Line 4663
  00390	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00393	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00396	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  0039c	2b 88 a0 00 00
	00		 sub	 ecx, DWORD PTR [eax+160]
  003a2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003a5	2b 8a 9c 00 00
	00		 sub	 ecx, DWORD PTR [edx+156]
  003ab	83 c1 01	 add	 ecx, 1
  003ae	89 4d f8	 mov	 DWORD PTR _nMaxFirstItem$2[ebp], ecx
; Line 4664
  003b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003b4	83 c0 78	 add	 eax, 120		; 00000078H
  003b7	50		 push	 eax
  003b8	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  003bd	83 c4 04	 add	 esp, 4
  003c0	8b f0		 mov	 esi, eax
  003c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c5	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  003cb	51		 push	 ecx
  003cc	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  003d1	83 c4 04	 add	 esp, 4
  003d4	2b f0		 sub	 esi, eax
  003d6	89 75 f4	 mov	 DWORD PTR _nMaxThumb$1[ebp], esi
; Line 4669
  003d9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003df	8b 8a 8c 00 00
	00		 mov	 ecx, DWORD PTR [edx+140]
  003e5	2b 48 7c	 sub	 ecx, DWORD PTR [eax+124]
  003e8	8b 75 f8	 mov	 esi, DWORD PTR _nMaxFirstItem$2[ebp]
  003eb	d1 e6		 shl	 esi, 1
  003ed	8b 45 f4	 mov	 eax, DWORD PTR _nMaxThumb$1[ebp]
  003f0	99		 cdq
  003f1	f7 fe		 idiv	 esi
  003f3	03 c8		 add	 ecx, eax
  003f5	0f af 4d f8	 imul	 ecx, DWORD PTR _nMaxFirstItem$2[ebp]
  003f9	8b c1		 mov	 eax, ecx
  003fb	99		 cdq
  003fc	f7 7d f4	 idiv	 DWORD PTR _nMaxThumb$1[ebp]
  003ff	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00402	03 82 a0 00 00
	00		 add	 eax, DWORD PTR [edx+160]
  00408	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0040b	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax
; Line 4671
  00411	b0 01		 mov	 al, 1
  00413	eb 02		 jmp	 SHORT $LN19@HandleMous
$LN4@HandleMous:
$LN17@HandleMous:
; Line 4678
  00415	32 c0		 xor	 al, al
$LN19@HandleMous:
; Line 4679
  00417	5e		 pop	 esi
  00418	83 c4 10	 add	 esp, 16			; 00000010H
  0041b	3b ec		 cmp	 ebp, esp
  0041d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00422	8b e5		 mov	 esp, ebp
  00424	5d		 pop	 ebp
  00425	c2 10 00	 ret	 16			; 00000010H
$LN21@HandleMous:
  00428	00 00 00 00	 DD	 $LN5@HandleMous
  0042c	00 00 00 00	 DD	 $LN16@HandleMous
  00430	00 00 00 00	 DD	 $LN6@HandleMous
  00434	00 00 00 00	 DD	 $LN16@HandleMous
?HandleMouse@CDXUTScrollBar@@UAE_NIABUtagPOINT@@IJ@Z ENDP ; CDXUTScrollBar::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTScrollBar@@UAE_NIIJ@Z PROC		; CDXUTScrollBar::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4559
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 4563
  0000e	32 c0		 xor	 al, al
; Line 4564
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 0c 00	 ret	 12			; 0000000cH
?HandleKeyboard@CDXUTScrollBar@@UAE_NIIJ@Z ENDP		; CDXUTScrollBar::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDXUTScrollBar@@UAE@XZ PROC				; CDXUTScrollBar::~CDXUTScrollBar
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4470
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTScrollBar@@6B@
; Line 4471
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??1CDXUTScrollBar@@UAE@XZ ENDP				; CDXUTScrollBar::~CDXUTScrollBar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDialog$ = 8						; size = 4
??0CDXUTScrollBar@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTScrollBar::CDXUTScrollBar
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 4448
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	6a 00		 push	 0
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z ; CDXUTControl::CDXUTControl
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTScrollBar@@6B@
; Line 4449
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	c7 41 34 09 00
	00 00		 mov	 DWORD PTR [ecx+52], 9
; Line 4450
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00032	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 4452
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	c6 41 54 01	 mov	 BYTE PTR [ecx+84], 1
; Line 4453
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	c6 42 55 00	 mov	 BYTE PTR [edx+85], 0
; Line 4455
  00043	8b f4		 mov	 esi, esp
  00045	6a 00		 push	 0
  00047	6a 00		 push	 0
  00049	6a 00		 push	 0
  0004b	6a 00		 push	 0
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 c0 58	 add	 eax, 88			; 00000058H
  00053	50		 push	 eax
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4456
  00061	8b f4		 mov	 esi, esp
  00063	6a 00		 push	 0
  00065	6a 00		 push	 0
  00067	6a 00		 push	 0
  00069	6a 00		 push	 0
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 68	 add	 ecx, 104		; 00000068H
  00071	51		 push	 ecx
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00078	3b f4		 cmp	 esi, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4457
  0007f	8b f4		 mov	 esi, esp
  00081	6a 00		 push	 0
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	83 c2 78	 add	 edx, 120		; 00000078H
  0008f	52		 push	 edx
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00096	3b f4		 cmp	 esi, esp
  00098	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4458
  0009d	8b f4		 mov	 esi, esp
  0009f	6a 00		 push	 0
  000a1	6a 00		 push	 0
  000a3	6a 00		 push	 0
  000a5	6a 00		 push	 0
  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	05 88 00 00 00	 add	 eax, 136		; 00000088H
  000af	50		 push	 eax
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  000b6	3b f4		 cmp	 esi, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 4459
  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0
; Line 4460
  000ca	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cd	c7 82 9c 00 00
	00 01 00 00 00	 mov	 DWORD PTR [edx+156], 1
; Line 4461
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], 0
; Line 4462
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	c7 81 a4 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+164], 1
; Line 4463
  000f1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f4	c7 82 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+176], 0
; Line 4464
  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00101	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  00109	f2 0f 11 80 b8
	00 00 00	 movsd	 QWORD PTR [eax+184], xmm0
; Line 4465
  00111	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00114	5e		 pop	 esi
  00115	83 c4 04	 add	 esp, 4
  00118	3b ec		 cmp	 ebp, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 04 00	 ret	 4
??0CDXUTScrollBar@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTScrollBar::CDXUTScrollBar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTRadioButton@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTRadioButton@@UAEPAXI@Z PROC			; CDXUTRadioButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTRadioButton@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTRadioButton@@UAEPAXI@Z ENDP			; CDXUTRadioButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDXUTRadioButton@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDXUTRadioButton@@UAE@XZ PROC			; CDXUTRadioButton::~CDXUTRadioButton, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTCheckBox@@UAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDXUTRadioButton@@UAE@XZ ENDP			; CDXUTRadioButton::~CDXUTRadioButton
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bChecked$ = 8						; size = 1
_bClearGroup$ = 12					; size = 1
_bFromInput$ = 16					; size = 1
?SetCheckedInternal@CDXUTRadioButton@@MAEX_N00@Z PROC	; CDXUTRadioButton::SetCheckedInternal
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3463
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3464
  0000e	0f b6 45 08	 movzx	 eax, BYTE PTR _bChecked$[ebp]
  00012	85 c0		 test	 eax, eax
  00014	74 1d		 je	 SHORT $LN1@SetChecked
  00016	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _bClearGroup$[ebp]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 15		 je	 SHORT $LN1@SetChecked
; Line 3465
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 82 84 02 00
	00		 mov	 eax, DWORD PTR [edx+644]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0002e	e8 00 00 00 00	 call	 ?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z ; CDXUTDialog::ClearRadioButtonGroup
$LN1@SetChecked:
; Line 3467
  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8a 45 08	 mov	 al, BYTE PTR _bChecked$[ebp]
  00039	88 82 60 02 00
	00		 mov	 BYTE PTR [edx+608], al
; Line 3468
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	51		 push	 ecx
  00043	0f b6 55 10	 movzx	 edx, BYTE PTR _bFromInput$[ebp]
  00047	52		 push	 edx
  00048	68 01 03 00 00	 push	 769			; 00000301H
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00053	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 3469
  00058	83 c4 04	 add	 esp, 4
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 0c 00	 ret	 12			; 0000000cH
?SetCheckedInternal@CDXUTRadioButton@@MAEX_N00@Z ENDP	; CDXUTRadioButton::SetCheckedInternal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetButtonGroup@CDXUTRadioButton@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetButtonGroup@CDXUTRadioButton@@QBEIXZ PROC		; CDXUTRadioButton::GetButtonGroup, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 698
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 84 02 00
	00		 mov	 eax, DWORD PTR [eax+644]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetButtonGroup@CDXUTRadioButton@@QBEIXZ ENDP		; CDXUTRadioButton::GetButtonGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetButtonGroup@CDXUTRadioButton@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nButtonGroup$ = 8					; size = 4
?SetButtonGroup@CDXUTRadioButton@@QAEXI@Z PROC		; CDXUTRadioButton::SetButtonGroup, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 697
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _nButtonGroup$[ebp]
  00014	89 88 84 02 00
	00		 mov	 DWORD PTR [eax+644], ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetButtonGroup@CDXUTRadioButton@@QAEXI@Z ENDP		; CDXUTRadioButton::SetButtonGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetChecked@CDXUTRadioButton@@QAEX_N0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bChecked$ = 8						; size = 1
_bClearGroup$ = 12					; size = 1
?SetChecked@CDXUTRadioButton@@QAEX_N0@Z PROC		; CDXUTRadioButton::SetChecked, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 696
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	6a 00		 push	 0
  00013	0f b6 45 0c	 movzx	 eax, BYTE PTR _bClearGroup$[ebp]
  00017	50		 push	 eax
  00018	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bChecked$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00020	8b 02		 mov	 eax, DWORD PTR [edx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 50 54	 mov	 edx, DWORD PTR [eax+84]
  00028	ff d2		 call	 edx
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5e		 pop	 esi
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 08 00	 ret	 8
?SetChecked@CDXUTRadioButton@@QAEX_N0@Z ENDP		; CDXUTRadioButton::SetChecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnHotkey@CDXUTRadioButton@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnHotkey@CDXUTRadioButton@@UAEXXZ PROC			; CDXUTRadioButton::OnHotkey, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 691
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 692
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00015	e8 00 00 00 00	 call	 ?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ ; CDXUTDialog::IsKeyboardInputEnabled
  0001a	0f b6 c8	 movzx	 ecx, al
  0001d	85 c9		 test	 ecx, ecx
  0001f	74 0f		 je	 SHORT $LN1@OnHotkey
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	52		 push	 edx
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0002b	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN1@OnHotkey:
; Line 693
  00030	8b f4		 mov	 esi, esp
  00032	6a 01		 push	 1
  00034	6a 01		 push	 1
  00036	6a 01		 push	 1
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  00043	ff d0		 call	 eax
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 694
  0004c	5e		 pop	 esi
  0004d	83 c4 04	 add	 esp, 4
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?OnHotkey@CDXUTRadioButton@@UAEXXZ ENDP			; CDXUTRadioButton::OnHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv190 = -12						; size = 4
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTRadioButton@@UAE_NIABUtagPOINT@@IJ@Z PROC ; CDXUTRadioButton::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3407
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3411
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00026	85 c9		 test	 ecx, ecx
  00028	74 0b		 je	 SHORT $LN9@HandleMous
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00031	85 c0		 test	 eax, eax
  00033	75 07		 jne	 SHORT $LN10@HandleMous
$LN9@HandleMous:
; Line 3412
  00035	32 c0		 xor	 al, al
  00037	e9 33 01 00 00	 jmp	 $LN11@HandleMous
$LN10@HandleMous:
; Line 3414
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003f	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  00042	81 7d f8 01 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 513 ; 00000201H
  00049	74 17		 je	 SHORT $LN6@HandleMous
  0004b	81 7d f8 02 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 514 ; 00000202H
  00052	74 74		 je	 SHORT $LN3@HandleMous
  00054	81 7d f8 03 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 515 ; 00000203H
  0005b	74 05		 je	 SHORT $LN6@HandleMous
  0005d	e9 0b 01 00 00	 jmp	 $LN7@HandleMous
$LN6@HandleMous:
; Line 3419
  00062	8b f4		 mov	 esi, esp
  00064	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  00067	52		 push	 edx
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00073	ff d0		 call	 eax
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	0f b6 c8	 movzx	 ecx, al
  0007f	85 c9		 test	 ecx, ecx
  00081	74 40		 je	 SHORT $LN5@HandleMous
; Line 3422
  00083	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00086	c6 82 5c 02 00
	00 01		 mov	 BYTE PTR [edx+604], 1
; Line 3423
  0008d	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00092	8b f4		 mov	 esi, esp
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3425
  000a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  000a9	85 c9		 test	 ecx, ecx
  000ab	75 0f		 jne	 SHORT $LN4@HandleMous
; Line 3426
  000ad	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	52		 push	 edx
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b7	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN4@HandleMous:
; Line 3428
  000bc	b0 01		 mov	 al, 1
  000be	e9 ac 00 00 00	 jmp	 $LN11@HandleMous
$LN5@HandleMous:
; Line 3431
  000c3	e9 a5 00 00 00	 jmp	 $LN7@HandleMous
$LN3@HandleMous:
; Line 3436
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	0f b6 91 5c 02
	00 00		 movzx	 edx, BYTE PTR [ecx+604]
  000d2	85 d2		 test	 edx, edx
  000d4	0f 84 93 00 00
	00		 je	 $LN7@HandleMous
; Line 3438
  000da	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	c6 80 5c 02 00
	00 00		 mov	 BYTE PTR [eax+604], 0
; Line 3439
  000e4	8b f4		 mov	 esi, esp
  000e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  000ec	3b f4		 cmp	 esi, esp
  000ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3442
  000f3	8b f4		 mov	 esi, esp
  000f5	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  000f8	51		 push	 ecx
  000f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fc	8b 02		 mov	 eax, DWORD PTR [edx]
  000fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00104	ff d2		 call	 edx
  00106	3b f4		 cmp	 esi, esp
  00108	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010d	0f b6 c0	 movzx	 eax, al
  00110	85 c0		 test	 eax, eax
  00112	74 55		 je	 SHORT $LN1@HandleMous
; Line 3444
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	8b 91 84 02 00
	00		 mov	 edx, DWORD PTR [ecx+644]
  0011d	52		 push	 edx
  0011e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00121	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00124	e8 00 00 00 00	 call	 ?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z ; CDXUTDialog::ClearRadioButtonGroup
; Line 3445
  00129	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	0f b6 91 60 02
	00 00		 movzx	 edx, BYTE PTR [ecx+608]
  00133	85 d2		 test	 edx, edx
  00135	75 09		 jne	 SHORT $LN13@HandleMous
  00137	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv190[ebp], 1
  0013e	eb 07		 jmp	 SHORT $LN14@HandleMous
$LN13@HandleMous:
  00140	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv190[ebp], 0
$LN14@HandleMous:
  00147	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014a	8a 4d f4	 mov	 cl, BYTE PTR tv190[ebp]
  0014d	88 88 60 02 00
	00		 mov	 BYTE PTR [eax+608], cl
; Line 3447
  00153	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00156	52		 push	 edx
  00157	6a 01		 push	 1
  00159	68 01 03 00 00	 push	 769			; 00000301H
  0015e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00161	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00164	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN1@HandleMous:
; Line 3450
  00169	b0 01		 mov	 al, 1
  0016b	eb 02		 jmp	 SHORT $LN11@HandleMous
$LN7@HandleMous:
; Line 3457
  0016d	32 c0		 xor	 al, al
$LN11@HandleMous:
; Line 3458
  0016f	5e		 pop	 esi
  00170	83 c4 0c	 add	 esp, 12			; 0000000cH
  00173	3b ec		 cmp	 ebp, esp
  00175	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 10 00	 ret	 16			; 00000010H
?HandleMouse@CDXUTRadioButton@@UAE_NIABUtagPOINT@@IJ@Z ENDP ; CDXUTRadioButton::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv151 = -20						; size = 4
tv86 = -16						; size = 4
tv79 = -12						; size = 4
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTRadioButton@@UAE_NIIJ@Z PROC	; CDXUTRadioButton::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3364
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3367
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00024	85 c9		 test	 ecx, ecx
  00026	74 0b		 je	 SHORT $LN12@HandleKeyb
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0002f	85 c0		 test	 eax, eax
  00031	75 07		 jne	 SHORT $LN13@HandleKeyb
$LN12@HandleKeyb:
; Line 3368
  00033	32 c0		 xor	 al, al
  00035	e9 be 00 00 00	 jmp	 $LN14@HandleKeyb
$LN13@HandleKeyb:
; Line 3370
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003d	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  00040	81 7d f8 00 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 256 ; 00000100H
  00047	74 0e		 je	 SHORT $LN9@HandleKeyb
  00049	81 7d f8 01 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 257 ; 00000101H
  00050	74 24		 je	 SHORT $LN5@HandleKeyb
  00052	e9 9f 00 00 00	 jmp	 $LN10@HandleKeyb
$LN9@HandleKeyb:
; Line 3374
  00057	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  0005a	89 55 f4	 mov	 DWORD PTR tv79[ebp], edx
  0005d	83 7d f4 20	 cmp	 DWORD PTR tv79[ebp], 32	; 00000020H
  00061	74 02		 je	 SHORT $LN6@HandleKeyb
  00063	eb 11		 jmp	 SHORT $LN5@HandleKeyb
$LN6@HandleKeyb:
; Line 3377
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c6 80 5c 02 00
	00 01		 mov	 BYTE PTR [eax+604], 1
; Line 3378
  0006f	b0 01		 mov	 al, 1
  00071	e9 82 00 00 00	 jmp	 $LN14@HandleKeyb
$LN5@HandleKeyb:
; Line 3384
  00076	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00079	89 4d f0	 mov	 DWORD PTR tv86[ebp], ecx
  0007c	83 7d f0 20	 cmp	 DWORD PTR tv86[ebp], 32	; 00000020H
  00080	74 02		 je	 SHORT $LN2@HandleKeyb
  00082	eb 72		 jmp	 SHORT $LN10@HandleKeyb
$LN2@HandleKeyb:
; Line 3387
  00084	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00087	0f b6 82 5c 02
	00 00		 movzx	 eax, BYTE PTR [edx+604]
  0008e	83 f8 01	 cmp	 eax, 1
  00091	75 5f		 jne	 SHORT $LN1@HandleKeyb
; Line 3389
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	c6 81 5c 02 00
	00 00		 mov	 BYTE PTR [ecx+604], 0
; Line 3391
  0009d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	8b 82 84 02 00
	00		 mov	 eax, DWORD PTR [edx+644]
  000a6	50		 push	 eax
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  000ad	e8 00 00 00 00	 call	 ?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z ; CDXUTDialog::ClearRadioButtonGroup
; Line 3392
  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	0f b6 82 60 02
	00 00		 movzx	 eax, BYTE PTR [edx+608]
  000bc	85 c0		 test	 eax, eax
  000be	75 09		 jne	 SHORT $LN16@HandleKeyb
  000c0	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv151[ebp], 1
  000c7	eb 07		 jmp	 SHORT $LN17@HandleKeyb
$LN16@HandleKeyb:
  000c9	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN17@HandleKeyb:
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8a 55 ec	 mov	 dl, BYTE PTR tv151[ebp]
  000d6	88 91 60 02 00
	00		 mov	 BYTE PTR [ecx+608], dl
; Line 3394
  000dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000df	50		 push	 eax
  000e0	6a 01		 push	 1
  000e2	68 01 03 00 00	 push	 769			; 00000301H
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  000ed	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN1@HandleKeyb:
; Line 3396
  000f2	b0 01		 mov	 al, 1
  000f4	eb 02		 jmp	 SHORT $LN14@HandleKeyb
$LN10@HandleKeyb:
; Line 3400
  000f6	32 c0		 xor	 al, al
$LN14@HandleKeyb:
; Line 3401
  000f8	83 c4 14	 add	 esp, 20			; 00000014H
  000fb	3b ec		 cmp	 ebp, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 0c 00	 ret	 12			; 0000000cH
?HandleKeyboard@CDXUTRadioButton@@UAE_NIIJ@Z ENDP	; CDXUTRadioButton::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDialog$ = 8						; size = 4
??0CDXUTRadioButton@@QAE@PAVCDXUTDialog@@@Z PROC	; CDXUTRadioButton::CDXUTRadioButton
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3354
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CDXUTCheckBox@@QAE@PAVCDXUTDialog@@@Z ; CDXUTCheckBox::CDXUTCheckBox
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTRadioButton@@6B@
; Line 3355
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 41 34 03 00
	00 00		 mov	 DWORD PTR [ecx+52], 3
; Line 3356
  0002b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00031	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 3357
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
??0CDXUTRadioButton@@QAE@PAVCDXUTDialog@@@Z ENDP	; CDXUTRadioButton::CDXUTRadioButton
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTCheckBox@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTCheckBox@@UAEPAXI@Z PROC			; CDXUTCheckBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTCheckBox@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTCheckBox@@UAEPAXI@Z ENDP			; CDXUTCheckBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDXUTCheckBox@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDXUTCheckBox@@UAE@XZ PROC				; CDXUTCheckBox::~CDXUTCheckBox, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTButton@@UAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDXUTCheckBox@@UAE@XZ ENDP				; CDXUTCheckBox::~CDXUTCheckBox
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bChecked$ = 8						; size = 1
_bFromInput$ = 12					; size = 1
?SetCheckedInternal@CDXUTCheckBox@@MAEX_N0@Z PROC	; CDXUTCheckBox::SetCheckedInternal
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3283
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3284
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 4d 08	 mov	 cl, BYTE PTR _bChecked$[ebp]
  00014	88 88 60 02 00
	00		 mov	 BYTE PTR [eax+608], cl
; Line 3286
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	52		 push	 edx
  0001e	0f b6 45 0c	 movzx	 eax, BYTE PTR _bFromInput$[ebp]
  00022	50		 push	 eax
  00023	68 01 04 00 00	 push	 1025			; 00000401H
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0002e	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 3287
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?SetCheckedInternal@CDXUTCheckBox@@MAEX_N0@Z ENDP	; CDXUTCheckBox::SetCheckedInternal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetChecked@CDXUTCheckBox@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bChecked$ = 8						; size = 1
?SetChecked@CDXUTCheckBox@@QAEX_N@Z PROC		; CDXUTCheckBox::SetChecked, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 669
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	6a 00		 push	 0
  00013	0f b6 45 08	 movzx	 eax, BYTE PTR _bChecked$[ebp]
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00023	ff d0		 call	 eax
  00025	3b f4		 cmp	 esi, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	5e		 pop	 esi
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?SetChecked@CDXUTCheckBox@@QAEX_N@Z ENDP		; CDXUTCheckBox::SetChecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv147 = -20						; size = 4
_fBlendRate$ = -16					; size = 4
_pElement$ = -12					; size = 4
_iState$ = -8						; size = 4
_this$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTCheckBox@@UAEXM@Z PROC			; CDXUTCheckBox::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3313
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3314
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00024	85 c9		 test	 ecx, ecx
  00026	75 05		 jne	 SHORT $LN11@Render
; Line 3315
  00028	e9 b0 01 00 00	 jmp	 $LN12@Render
$LN11@Render:
; Line 3316
  0002d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 0
; Line 3318
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0003b	85 c0		 test	 eax, eax
  0003d	75 09		 jne	 SHORT $LN10@Render
; Line 3319
  0003f	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 2
  00046	eb 51		 jmp	 SHORT $LN2@Render
$LN10@Render:
; Line 3320
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  0004f	85 d2		 test	 edx, edx
  00051	75 09		 jne	 SHORT $LN8@Render
; Line 3321
  00053	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 1
  0005a	eb 3d		 jmp	 SHORT $LN2@Render
$LN8@Render:
; Line 3322
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	0f b6 88 5c 02
	00 00		 movzx	 ecx, BYTE PTR [eax+604]
  00066	85 c9		 test	 ecx, ecx
  00068	74 09		 je	 SHORT $LN6@Render
; Line 3323
  0006a	c7 45 f8 05 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 5
  00071	eb 26		 jmp	 SHORT $LN2@Render
$LN6@Render:
; Line 3324
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	0f b6 42 05	 movzx	 eax, BYTE PTR [edx+5]
  0007a	85 c0		 test	 eax, eax
  0007c	74 09		 je	 SHORT $LN4@Render
; Line 3325
  0007e	c7 45 f8 04 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 4
  00085	eb 12		 jmp	 SHORT $LN2@Render
$LN4@Render:
; Line 3326
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	0f b6 51 06	 movzx	 edx, BYTE PTR [ecx+6]
  0008e	85 d2		 test	 edx, edx
  00090	74 07		 je	 SHORT $LN2@Render
; Line 3327
  00092	c7 45 f8 03 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 3
$LN2@Render:
; Line 3329
  00099	6a 00		 push	 0
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	83 c1 20	 add	 ecx, 32			; 00000020H
  000a1	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  000a6	8b 00		 mov	 eax, DWORD PTR [eax]
  000a8	89 45 f4	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 3331
  000ab	83 7d f8 05	 cmp	 DWORD PTR _iState$[ebp], 5
  000af	75 0f		 jne	 SHORT $LN14@Render
  000b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000b9	f3 0f 11 45 ec	 movss	 DWORD PTR tv147[ebp], xmm0
  000be	eb 0d		 jmp	 SHORT $LN15@Render
$LN14@Render:
  000c0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  000c8	f3 0f 11 45 ec	 movss	 DWORD PTR tv147[ebp], xmm0
$LN15@Render:
  000cd	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv147[ebp]
  000d2	f3 0f 11 45 f0	 movss	 DWORD PTR _fBlendRate$[ebp], xmm0
; Line 3333
  000d7	51		 push	 ecx
  000d8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	51		 push	 ecx
  000e3	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _iState$[ebp]
  000f0	51		 push	 ecx
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  000f4	83 c1 1c	 add	 ecx, 28			; 0000001cH
  000f7	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3334
  000fc	51		 push	 ecx
  000fd	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00102	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00107	51		 push	 ecx
  00108	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0010d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00112	8b 55 f8	 mov	 edx, DWORD PTR _iState$[ebp]
  00115	52		 push	 edx
  00116	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00119	83 c1 44	 add	 ecx, 68			; 00000044H
  0011c	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3336
  00121	51		 push	 ecx
  00122	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  0012a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00132	05 64 02 00 00	 add	 eax, 612		; 00000264H
  00137	50		 push	 eax
  00138	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0013b	51		 push	 ecx
  0013c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0013f	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00142	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 3337
  00147	6a 00		 push	 0
  00149	6a 00		 push	 0
  0014b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	05 74 02 00 00	 add	 eax, 628		; 00000274H
  00153	50		 push	 eax
  00154	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00157	51		 push	 ecx
  00158	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0015b	83 c2 54	 add	 edx, 84			; 00000054H
  0015e	52		 push	 edx
  0015f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00162	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00165	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 3339
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	0f b6 91 60 02
	00 00		 movzx	 edx, BYTE PTR [ecx+608]
  00174	85 d2		 test	 edx, edx
  00176	75 07		 jne	 SHORT $LN1@Render
; Line 3340
  00178	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 2
$LN1@Render:
; Line 3342
  0017f	6a 01		 push	 1
  00181	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00184	83 c1 20	 add	 ecx, 32			; 00000020H
  00187	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0018c	8b 00		 mov	 eax, DWORD PTR [eax]
  0018e	89 45 f4	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 3344
  00191	51		 push	 ecx
  00192	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00197	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019c	51		 push	 ecx
  0019d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  001a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a7	8b 4d f8	 mov	 ecx, DWORD PTR _iState$[ebp]
  001aa	51		 push	 ecx
  001ab	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  001ae	83 c1 1c	 add	 ecx, 28			; 0000001cH
  001b1	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3345
  001b6	51		 push	 ecx
  001b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  001bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c7	81 c2 64 02 00
	00		 add	 edx, 612		; 00000264H
  001cd	52		 push	 edx
  001ce	8b 45 f4	 mov	 eax, DWORD PTR _pElement$[ebp]
  001d1	50		 push	 eax
  001d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d5	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  001d8	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
$LN12@Render:
; Line 3346
  001dd	83 c4 14	 add	 esp, 20			; 00000014H
  001e0	3b ec		 cmp	 ebp, esp
  001e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e7	8b e5		 mov	 esp, ebp
  001e9	5d		 pop	 ebp
  001ea	c2 04 00	 ret	 4
?Render@CDXUTCheckBox@@UAEXM@Z ENDP			; CDXUTCheckBox::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateRects@CDXUTCheckBox@@UAEXXZ PROC			; CDXUTCheckBox::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3300
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3301
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?UpdateRects@CDXUTControl@@MAEXXZ ; CDXUTControl::UpdateRects
; Line 3303
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c0 44	 add	 eax, 68			; 00000044H
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	81 c1 64 02 00
	00		 add	 ecx, 612		; 00000264H
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	89 11		 mov	 DWORD PTR [ecx], edx
  00029	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0002c	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0002f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00032	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00035	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00038	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 3304
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	81 c1 64 02 00
	00		 add	 ecx, 612		; 00000264H
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 ?RectHeight@@YAHAAUtagRECT@@@Z ; RectHeight
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00050	03 82 64 02 00
	00		 add	 eax, DWORD PTR [edx+612]
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	89 81 6c 02 00
	00		 mov	 DWORD PTR [ecx+620], eax
; Line 3306
  0005f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00062	83 c2 44	 add	 edx, 68			; 00000044H
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	05 74 02 00 00	 add	 eax, 628		; 00000274H
  0006d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0006f	89 08		 mov	 DWORD PTR [eax], ecx
  00071	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00074	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00077	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0007a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0007d	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00080	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 3307
  00083	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00086	05 64 02 00 00	 add	 eax, 612		; 00000264H
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?RectWidth@@YAHAAUtagRECT@@@Z ; RectWidth
  00091	83 c4 04	 add	 esp, 4
  00094	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00098	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3fa00000
  000a0	f3 0f 2c c8	 cvttss2si ecx, xmm0
  000a4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a7	03 8a 74 02 00
	00		 add	 ecx, DWORD PTR [edx+628]
  000ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	89 88 74 02 00
	00		 mov	 DWORD PTR [eax+628], ecx
; Line 3308
  000b6	83 c4 04	 add	 esp, 4
  000b9	3b ec		 cmp	 ebp, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?UpdateRects@CDXUTCheckBox@@UAEXXZ ENDP			; CDXUTCheckBox::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?ContainsPoint@CDXUTCheckBox@@UAE_NABUtagPOINT@@@Z PROC	; CDXUTCheckBox::ContainsPoint
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3292
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3294
  00018	8b f4		 mov	 esi, esp
  0001a	8b 45 08	 mov	 eax, DWORD PTR _pt$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	51		 push	 ecx
  00021	8b 10		 mov	 edx, DWORD PTR [eax]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c0 44	 add	 eax, 68			; 00000044H
  0002a	50		 push	 eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	85 c0		 test	 eax, eax
  0003a	75 30		 jne	 SHORT $LN3@ContainsPo
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _pt$[ebp]
  00041	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00044	52		 push	 edx
  00045	8b 01		 mov	 eax, DWORD PTR [ecx]
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 64 02 00
	00		 add	 ecx, 612		; 00000264H
  00051	51		 push	 ecx
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	85 c0		 test	 eax, eax
  00061	75 09		 jne	 SHORT $LN3@ContainsPo
  00063	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
  0006a	eb 07		 jmp	 SHORT $LN4@ContainsPo
$LN3@ContainsPo:
  0006c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
$LN4@ContainsPo:
  00073	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 3295
  00076	5e		 pop	 esi
  00077	83 c4 08	 add	 esp, 8
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?ContainsPoint@CDXUTCheckBox@@UAE_NABUtagPOINT@@@Z ENDP	; CDXUTCheckBox::ContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnHotkey@CDXUTCheckBox@@UAEXXZ
_TEXT	SEGMENT
tv91 = -5						; size = 1
_this$ = -4						; size = 4
?OnHotkey@CDXUTCheckBox@@UAEXXZ PROC			; CDXUTCheckBox::OnHotkey, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 658
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 659
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001e	e8 00 00 00 00	 call	 ?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ ; CDXUTDialog::IsKeyboardInputEnabled
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	74 0f		 je	 SHORT $LN1@OnHotkey
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00034	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN1@OnHotkey:
; Line 660
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	0f b6 91 60 02
	00 00		 movzx	 edx, BYTE PTR [ecx+608]
  00043	85 d2		 test	 edx, edx
  00045	75 06		 jne	 SHORT $LN4@OnHotkey
  00047	c6 45 fb 01	 mov	 BYTE PTR tv91[ebp], 1
  0004b	eb 04		 jmp	 SHORT $LN5@OnHotkey
$LN4@OnHotkey:
  0004d	c6 45 fb 00	 mov	 BYTE PTR tv91[ebp], 0
$LN5@OnHotkey:
  00051	8b f4		 mov	 esi, esp
  00053	6a 01		 push	 1
  00055	0f b6 45 fb	 movzx	 eax, BYTE PTR tv91[ebp]
  00059	50		 push	 eax
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00065	ff d0		 call	 eax
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 661
  0006e	5e		 pop	 esi
  0006f	83 c4 08	 add	 esp, 8
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?OnHotkey@CDXUTCheckBox@@UAEXXZ ENDP			; CDXUTCheckBox::OnHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv177 = -9						; size = 1
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTCheckBox@@UAE_NIABUtagPOINT@@IJ@Z PROC ; CDXUTCheckBox::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3231
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3235
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00026	85 c9		 test	 ecx, ecx
  00028	74 0b		 je	 SHORT $LN9@HandleMous
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00031	85 c0		 test	 eax, eax
  00033	75 07		 jne	 SHORT $LN10@HandleMous
$LN9@HandleMous:
; Line 3236
  00035	32 c0		 xor	 al, al
  00037	e9 0f 01 00 00	 jmp	 $LN11@HandleMous
$LN10@HandleMous:
; Line 3238
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003f	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  00042	81 7d f8 01 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 513 ; 00000201H
  00049	74 17		 je	 SHORT $LN6@HandleMous
  0004b	81 7d f8 02 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 514 ; 00000202H
  00052	74 74		 je	 SHORT $LN3@HandleMous
  00054	81 7d f8 03 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 515 ; 00000203H
  0005b	74 05		 je	 SHORT $LN6@HandleMous
  0005d	e9 e7 00 00 00	 jmp	 $LN7@HandleMous
$LN6@HandleMous:
; Line 3243
  00062	8b f4		 mov	 esi, esp
  00064	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  00067	52		 push	 edx
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00073	ff d0		 call	 eax
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	0f b6 c8	 movzx	 ecx, al
  0007f	85 c9		 test	 ecx, ecx
  00081	74 40		 je	 SHORT $LN5@HandleMous
; Line 3246
  00083	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00086	c6 82 5c 02 00
	00 01		 mov	 BYTE PTR [edx+604], 1
; Line 3247
  0008d	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00092	8b f4		 mov	 esi, esp
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3249
  000a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  000a9	85 c9		 test	 ecx, ecx
  000ab	75 0f		 jne	 SHORT $LN4@HandleMous
; Line 3250
  000ad	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	52		 push	 edx
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b7	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN4@HandleMous:
; Line 3252
  000bc	b0 01		 mov	 al, 1
  000be	e9 88 00 00 00	 jmp	 $LN11@HandleMous
$LN5@HandleMous:
; Line 3255
  000c3	e9 81 00 00 00	 jmp	 $LN7@HandleMous
$LN3@HandleMous:
; Line 3260
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	0f b6 91 5c 02
	00 00		 movzx	 edx, BYTE PTR [ecx+604]
  000d2	85 d2		 test	 edx, edx
  000d4	74 73		 je	 SHORT $LN7@HandleMous
; Line 3262
  000d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	c6 80 5c 02 00
	00 00		 mov	 BYTE PTR [eax+604], 0
; Line 3263
  000e0	8b f4		 mov	 esi, esp
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  000e8	3b f4		 cmp	 esi, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3266
  000ef	8b f4		 mov	 esi, esp
  000f1	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  000f4	51		 push	 ecx
  000f5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f8	8b 02		 mov	 eax, DWORD PTR [edx]
  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00100	ff d2		 call	 edx
  00102	3b f4		 cmp	 esi, esp
  00104	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00109	0f b6 c0	 movzx	 eax, al
  0010c	85 c0		 test	 eax, eax
  0010e	74 35		 je	 SHORT $LN1@HandleMous
; Line 3267
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	0f b6 91 60 02
	00 00		 movzx	 edx, BYTE PTR [ecx+608]
  0011a	85 d2		 test	 edx, edx
  0011c	75 06		 jne	 SHORT $LN13@HandleMous
  0011e	c6 45 f7 01	 mov	 BYTE PTR tv177[ebp], 1
  00122	eb 04		 jmp	 SHORT $LN14@HandleMous
$LN13@HandleMous:
  00124	c6 45 f7 00	 mov	 BYTE PTR tv177[ebp], 0
$LN14@HandleMous:
  00128	8b f4		 mov	 esi, esp
  0012a	6a 01		 push	 1
  0012c	0f b6 45 f7	 movzx	 eax, BYTE PTR tv177[ebp]
  00130	50		 push	 eax
  00131	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	8b 11		 mov	 edx, DWORD PTR [ecx]
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  0013c	ff d0		 call	 eax
  0013e	3b f4		 cmp	 esi, esp
  00140	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@HandleMous:
; Line 3269
  00145	b0 01		 mov	 al, 1
  00147	eb 02		 jmp	 SHORT $LN11@HandleMous
$LN7@HandleMous:
; Line 3276
  00149	32 c0		 xor	 al, al
$LN11@HandleMous:
; Line 3277
  0014b	5e		 pop	 esi
  0014c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014f	3b ec		 cmp	 ebp, esp
  00151	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 10 00	 ret	 16			; 00000010H
?HandleMouse@CDXUTCheckBox@@UAE_NIABUtagPOINT@@IJ@Z ENDP ; CDXUTCheckBox::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv138 = -17						; size = 1
tv86 = -16						; size = 4
tv79 = -12						; size = 4
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTCheckBox@@UAE_NIIJ@Z PROC		; CDXUTCheckBox::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3192
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3195
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00025	85 c9		 test	 ecx, ecx
  00027	74 0b		 je	 SHORT $LN12@HandleKeyb
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00030	85 c0		 test	 eax, eax
  00032	75 07		 jne	 SHORT $LN13@HandleKeyb
$LN12@HandleKeyb:
; Line 3196
  00034	32 c0		 xor	 al, al
  00036	e9 98 00 00 00	 jmp	 $LN14@HandleKeyb
$LN13@HandleKeyb:
; Line 3198
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0003e	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  00041	81 7d f8 00 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 256 ; 00000100H
  00048	74 0b		 je	 SHORT $LN9@HandleKeyb
  0004a	81 7d f8 01 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 257 ; 00000101H
  00051	74 1e		 je	 SHORT $LN5@HandleKeyb
  00053	eb 7c		 jmp	 SHORT $LN10@HandleKeyb
$LN9@HandleKeyb:
; Line 3202
  00055	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00058	89 55 f4	 mov	 DWORD PTR tv79[ebp], edx
  0005b	83 7d f4 20	 cmp	 DWORD PTR tv79[ebp], 32	; 00000020H
  0005f	74 02		 je	 SHORT $LN6@HandleKeyb
  00061	eb 0e		 jmp	 SHORT $LN5@HandleKeyb
$LN6@HandleKeyb:
; Line 3205
  00063	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00066	c6 80 5c 02 00
	00 01		 mov	 BYTE PTR [eax+604], 1
; Line 3206
  0006d	b0 01		 mov	 al, 1
  0006f	eb 62		 jmp	 SHORT $LN14@HandleKeyb
$LN5@HandleKeyb:
; Line 3212
  00071	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00074	89 4d f0	 mov	 DWORD PTR tv86[ebp], ecx
  00077	83 7d f0 20	 cmp	 DWORD PTR tv86[ebp], 32	; 00000020H
  0007b	74 02		 je	 SHORT $LN2@HandleKeyb
  0007d	eb 52		 jmp	 SHORT $LN10@HandleKeyb
$LN2@HandleKeyb:
; Line 3215
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	0f b6 82 5c 02
	00 00		 movzx	 eax, BYTE PTR [edx+604]
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 3f		 jne	 SHORT $LN1@HandleKeyb
; Line 3217
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	c6 81 5c 02 00
	00 00		 mov	 BYTE PTR [ecx+604], 0
; Line 3218
  00098	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	0f b6 82 60 02
	00 00		 movzx	 eax, BYTE PTR [edx+608]
  000a2	85 c0		 test	 eax, eax
  000a4	75 06		 jne	 SHORT $LN16@HandleKeyb
  000a6	c6 45 ef 01	 mov	 BYTE PTR tv138[ebp], 1
  000aa	eb 04		 jmp	 SHORT $LN17@HandleKeyb
$LN16@HandleKeyb:
  000ac	c6 45 ef 00	 mov	 BYTE PTR tv138[ebp], 0
$LN17@HandleKeyb:
  000b0	8b f4		 mov	 esi, esp
  000b2	6a 01		 push	 1
  000b4	0f b6 4d ef	 movzx	 ecx, BYTE PTR tv138[ebp]
  000b8	51		 push	 ecx
  000b9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bc	8b 02		 mov	 eax, DWORD PTR [edx]
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  000c4	ff d2		 call	 edx
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@HandleKeyb:
; Line 3220
  000cd	b0 01		 mov	 al, 1
  000cf	eb 02		 jmp	 SHORT $LN14@HandleKeyb
$LN10@HandleKeyb:
; Line 3224
  000d1	32 c0		 xor	 al, al
$LN14@HandleKeyb:
; Line 3225
  000d3	5e		 pop	 esi
  000d4	83 c4 14	 add	 esp, 20			; 00000014H
  000d7	3b ec		 cmp	 ebp, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 0c 00	 ret	 12			; 0000000cH
?HandleKeyboard@CDXUTCheckBox@@UAE_NIIJ@Z ENDP		; CDXUTCheckBox::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDialog$ = 8						; size = 4
??0CDXUTCheckBox@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTCheckBox::CDXUTCheckBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CDXUTButton@@QAE@PAVCDXUTDialog@@@Z ; CDXUTButton::CDXUTButton
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTCheckBox@@6B@
; Line 3182
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 41 34 02 00
	00 00		 mov	 DWORD PTR [ecx+52], 2
; Line 3183
  0002b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00031	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 3185
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	c6 81 60 02 00
	00 00		 mov	 BYTE PTR [ecx+608], 0
; Line 3186
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0CDXUTCheckBox@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTCheckBox::CDXUTCheckBox
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTButton@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTButton@@UAEPAXI@Z PROC				; CDXUTButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTButton@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTButton@@UAEPAXI@Z ENDP				; CDXUTButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDXUTButton@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDXUTButton@@UAE@XZ PROC				; CDXUTButton::~CDXUTButton, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTStatic@@UAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDXUTButton@@UAE@XZ ENDP				; CDXUTButton::~CDXUTButton
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv143 = -56						; size = 4
_rcWindow$ = -48					; size = 16
_fBlendRate$ = -28					; size = 4
_pElement$ = -24					; size = 4
_iState$ = -20						; size = 4
_nOffsetY$ = -16					; size = 4
_nOffsetX$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTButton@@UAEXM@Z PROC			; CDXUTButton::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3111
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000c	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3112
  00026	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00029	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0002d	85 c9		 test	 ecx, ecx
  0002f	75 05		 jne	 SHORT $LN10@Render
; Line 3113
  00031	e9 30 02 00 00	 jmp	 $LN11@Render
$LN10@Render:
; Line 3115
  00036	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nOffsetX$[ebp], 0
; Line 3116
  0003d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _nOffsetY$[ebp], 0
; Line 3118
  00044	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 0
; Line 3120
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00052	85 c0		 test	 eax, eax
  00054	75 09		 jne	 SHORT $LN9@Render
; Line 3122
  00056	c7 45 ec 02 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 2
  0005d	eb 6d		 jmp	 SHORT $LN1@Render
$LN9@Render:
; Line 3124
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00066	85 d2		 test	 edx, edx
  00068	75 09		 jne	 SHORT $LN7@Render
; Line 3126
  0006a	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 1
  00071	eb 59		 jmp	 SHORT $LN1@Render
$LN7@Render:
; Line 3128
  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	0f b6 88 5c 02
	00 00		 movzx	 ecx, BYTE PTR [eax+604]
  0007d	85 c9		 test	 ecx, ecx
  0007f	74 17		 je	 SHORT $LN5@Render
; Line 3130
  00081	c7 45 ec 05 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 5
; Line 3132
  00088	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _nOffsetX$[ebp], 1
; Line 3133
  0008f	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR _nOffsetY$[ebp], 2
  00096	eb 34		 jmp	 SHORT $LN1@Render
$LN5@Render:
; Line 3135
  00098	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	0f b6 42 05	 movzx	 eax, BYTE PTR [edx+5]
  0009f	85 c0		 test	 eax, eax
  000a1	74 17		 je	 SHORT $LN3@Render
; Line 3137
  000a3	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 4
; Line 3139
  000aa	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _nOffsetX$[ebp], -1
; Line 3140
  000b1	c7 45 f0 fe ff
	ff ff		 mov	 DWORD PTR _nOffsetY$[ebp], -2 ; fffffffeH
  000b8	eb 12		 jmp	 SHORT $LN1@Render
$LN3@Render:
; Line 3142
  000ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	0f b6 51 06	 movzx	 edx, BYTE PTR [ecx+6]
  000c1	85 d2		 test	 edx, edx
  000c3	74 07		 je	 SHORT $LN1@Render
; Line 3144
  000c5	c7 45 ec 03 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 3
$LN1@Render:
; Line 3148
  000cc	6a 00		 push	 0
  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	83 c1 20	 add	 ecx, 32			; 00000020H
  000d4	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  000d9	8b 00		 mov	 eax, DWORD PTR [eax]
  000db	89 45 e8	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 3150
  000de	83 7d ec 05	 cmp	 DWORD PTR _iState$[ebp], 5
  000e2	75 0f		 jne	 SHORT $LN13@Render
  000e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000ec	f3 0f 11 45 c8	 movss	 DWORD PTR tv143[ebp], xmm0
  000f1	eb 0d		 jmp	 SHORT $LN14@Render
$LN13@Render:
  000f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  000fb	f3 0f 11 45 c8	 movss	 DWORD PTR tv143[ebp], xmm0
$LN14@Render:
  00100	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR tv143[ebp]
  00105	f3 0f 11 45 e4	 movss	 DWORD PTR _fBlendRate$[ebp], xmm0
; Line 3152
  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	83 c1 44	 add	 ecx, 68			; 00000044H
  00110	8b 11		 mov	 edx, DWORD PTR [ecx]
  00112	89 55 d0	 mov	 DWORD PTR _rcWindow$[ebp], edx
  00115	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00118	89 45 d4	 mov	 DWORD PTR _rcWindow$[ebp+4], eax
  0011b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0011e	89 55 d8	 mov	 DWORD PTR _rcWindow$[ebp+8], edx
  00121	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00124	89 45 dc	 mov	 DWORD PTR _rcWindow$[ebp+12], eax
; Line 3153
  00127	8b f4		 mov	 esi, esp
  00129	8b 4d f0	 mov	 ecx, DWORD PTR _nOffsetY$[ebp]
  0012c	51		 push	 ecx
  0012d	8b 55 f4	 mov	 edx, DWORD PTR _nOffsetX$[ebp]
  00130	52		 push	 edx
  00131	8d 45 d0	 lea	 eax, DWORD PTR _rcWindow$[ebp]
  00134	50		 push	 eax
  00135	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3157
  00142	51		 push	 ecx
  00143	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00148	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014d	51		 push	 ecx
  0014e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00153	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00158	8b 4d ec	 mov	 ecx, DWORD PTR _iState$[ebp]
  0015b	51		 push	 ecx
  0015c	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0015f	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00162	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3158
  00167	51		 push	 ecx
  00168	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	51		 push	 ecx
  00173	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00178	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017d	8b 55 ec	 mov	 edx, DWORD PTR _iState$[ebp]
  00180	52		 push	 edx
  00181	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00184	83 c1 44	 add	 ecx, 68			; 00000044H
  00187	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3160
  0018c	51		 push	 ecx
  0018d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00195	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019a	8d 45 d0	 lea	 eax, DWORD PTR _rcWindow$[ebp]
  0019d	50		 push	 eax
  0019e	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  001a1	51		 push	 ecx
  001a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001a5	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  001a8	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 3161
  001ad	6a 01		 push	 1
  001af	6a 00		 push	 0
  001b1	8d 45 d0	 lea	 eax, DWORD PTR _rcWindow$[ebp]
  001b4	50		 push	 eax
  001b5	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  001b8	51		 push	 ecx
  001b9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001bc	83 c2 54	 add	 edx, 84			; 00000054H
  001bf	52		 push	 edx
  001c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c3	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001c6	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
; Line 3164
  001cb	6a 01		 push	 1
  001cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	83 c1 20	 add	 ecx, 32			; 00000020H
  001d3	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  001d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001da	89 4d e8	 mov	 DWORD PTR _pElement$[ebp], ecx
; Line 3167
  001dd	51		 push	 ecx
  001de	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  001e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e8	51		 push	 ecx
  001e9	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  001ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f3	8b 55 ec	 mov	 edx, DWORD PTR _iState$[ebp]
  001f6	52		 push	 edx
  001f7	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  001fa	83 c1 1c	 add	 ecx, 28			; 0000001cH
  001fd	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3168
  00202	51		 push	 ecx
  00203	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fBlendRate$[ebp]
  00208	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020d	51		 push	 ecx
  0020e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00213	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00218	8b 45 ec	 mov	 eax, DWORD PTR _iState$[ebp]
  0021b	50		 push	 eax
  0021c	8b 4d e8	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0021f	83 c1 44	 add	 ecx, 68			; 00000044H
  00222	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 3170
  00227	51		 push	 ecx
  00228	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  00230	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00235	8d 4d d0	 lea	 ecx, DWORD PTR _rcWindow$[ebp]
  00238	51		 push	 ecx
  00239	8b 55 e8	 mov	 edx, DWORD PTR _pElement$[ebp]
  0023c	52		 push	 edx
  0023d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00240	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00243	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 3171
  00248	6a 01		 push	 1
  0024a	6a 00		 push	 0
  0024c	8d 4d d0	 lea	 ecx, DWORD PTR _rcWindow$[ebp]
  0024f	51		 push	 ecx
  00250	8b 55 e8	 mov	 edx, DWORD PTR _pElement$[ebp]
  00253	52		 push	 edx
  00254	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00257	83 c0 54	 add	 eax, 84			; 00000054H
  0025a	50		 push	 eax
  0025b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0025e	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00261	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN11@Render:
; Line 3172
  00266	52		 push	 edx
  00267	8b cd		 mov	 ecx, ebp
  00269	50		 push	 eax
  0026a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@Render
  00270	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00275	58		 pop	 eax
  00276	5a		 pop	 edx
  00277	5f		 pop	 edi
  00278	5e		 pop	 esi
  00279	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0027c	33 cd		 xor	 ecx, ebp
  0027e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00283	83 c4 38	 add	 esp, 56			; 00000038H
  00286	3b ec		 cmp	 ebp, esp
  00288	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0028d	8b e5		 mov	 esp, ebp
  0028f	5d		 pop	 ebp
  00290	c2 04 00	 ret	 4
  00293	90		 npad	 1
$LN17@Render:
  00294	01 00 00 00	 DD	 1
  00298	00 00 00 00	 DD	 $LN16@Render
$LN16@Render:
  0029c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  002a0	10 00 00 00	 DD	 16			; 00000010H
  002a4	00 00 00 00	 DD	 $LN15@Render
$LN15@Render:
  002a8	72		 DB	 114			; 00000072H
  002a9	63		 DB	 99			; 00000063H
  002aa	57		 DB	 87			; 00000057H
  002ab	69		 DB	 105			; 00000069H
  002ac	6e		 DB	 110			; 0000006eH
  002ad	64		 DB	 100			; 00000064H
  002ae	6f		 DB	 111			; 0000006fH
  002af	77		 DB	 119			; 00000077H
  002b0	00		 DB	 0
?Render@CDXUTButton@@UAEXM@Z ENDP			; CDXUTButton::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanHaveFocus@CDXUTButton@@UAE_NXZ
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
?CanHaveFocus@CDXUTButton@@UAE_NXZ PROC			; CDXUTButton::CanHaveFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 636
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 637
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 14		 je	 SHORT $LN3@CanHaveFoc
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	0f b6 42 40	 movzx	 eax, BYTE PTR [edx+64]
  00029	85 c0		 test	 eax, eax
  0002b	74 09		 je	 SHORT $LN3@CanHaveFoc
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@CanHaveFoc
$LN3@CanHaveFoc:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@CanHaveFoc:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 638
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?CanHaveFocus@CDXUTButton@@UAE_NXZ ENDP			; CDXUTButton::CanHaveFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ContainsPoint@CDXUTButton@@UAE_NABUtagPOINT@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?ContainsPoint@CDXUTButton@@UAE_NABUtagPOINT@@@Z PROC	; CDXUTButton::ContainsPoint, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 632
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 633
  00018	8b f4		 mov	 esi, esp
  0001a	8b 45 08	 mov	 eax, DWORD PTR _pt$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	51		 push	 ecx
  00021	8b 10		 mov	 edx, DWORD PTR [eax]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c0 44	 add	 eax, 68			; 00000044H
  0002a	50		 push	 eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	85 c0		 test	 eax, eax
  0003a	74 09		 je	 SHORT $LN3@ContainsPo
  0003c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  00043	eb 07		 jmp	 SHORT $LN4@ContainsPo
$LN3@ContainsPo:
  00045	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@ContainsPo:
  0004c	8a 45 f8	 mov	 al, BYTE PTR tv73[ebp]
; Line 634
  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?ContainsPoint@CDXUTButton@@UAE_NABUtagPOINT@@@Z ENDP	; CDXUTButton::ContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnHotkey@CDXUTButton@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnHotkey@CDXUTButton@@UAEXXZ PROC			; CDXUTButton::OnHotkey, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 626
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 627
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00014	e8 00 00 00 00	 call	 ?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ ; CDXUTDialog::IsKeyboardInputEnabled
  00019	0f b6 c8	 movzx	 ecx, al
  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0f		 je	 SHORT $LN1@OnHotkey
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0002a	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN1@OnHotkey:
; Line 628
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	51		 push	 ecx
  00033	6a 01		 push	 1
  00035	68 01 01 00 00	 push	 257			; 00000101H
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00040	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
; Line 629
  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?OnHotkey@CDXUTButton@@UAEXXZ ENDP			; CDXUTButton::OnHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTButton@@UAE_NIABUtagPOINT@@IJ@Z PROC	; CDXUTButton::HandleMouse
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3058
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3062
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  0001f	85 c9		 test	 ecx, ecx
  00021	74 0b		 je	 SHORT $LN10@HandleMous
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0002a	85 c0		 test	 eax, eax
  0002c	75 07		 jne	 SHORT $LN11@HandleMous
$LN10@HandleMous:
; Line 3063
  0002e	32 c0		 xor	 al, al
  00030	e9 fd 00 00 00	 jmp	 $LN12@HandleMous
$LN11@HandleMous:
; Line 3065
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00038	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  0003b	81 7d f8 01 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 513 ; 00000201H
  00042	74 17		 je	 SHORT $LN7@HandleMous
  00044	81 7d f8 02 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 514 ; 00000202H
  0004b	74 6e		 je	 SHORT $LN4@HandleMous
  0004d	81 7d f8 03 02
	00 00		 cmp	 DWORD PTR tv78[ebp], 515 ; 00000203H
  00054	74 05		 je	 SHORT $LN7@HandleMous
  00056	e9 d5 00 00 00	 jmp	 $LN8@HandleMous
$LN7@HandleMous:
; Line 3070
  0005b	8b f4		 mov	 esi, esp
  0005d	8b 55 0c	 mov	 edx, DWORD PTR _pt$[ebp]
  00060	52		 push	 edx
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0006c	ff d0		 call	 eax
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	0f b6 c8	 movzx	 ecx, al
  00078	85 c9		 test	 ecx, ecx
  0007a	74 3d		 je	 SHORT $LN6@HandleMous
; Line 3073
  0007c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007f	c6 82 5c 02 00
	00 01		 mov	 BYTE PTR [edx+604], 1
; Line 3074
  00086	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  0008b	8b f4		 mov	 esi, esp
  0008d	50		 push	 eax
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  00094	3b f4		 cmp	 esi, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3076
  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  000a2	85 c9		 test	 ecx, ecx
  000a4	75 0f		 jne	 SHORT $LN5@HandleMous
; Line 3077
  000a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a9	52		 push	 edx
  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b0	e8 00 00 00 00	 call	 ?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ; CDXUTDialog::RequestFocus
$LN5@HandleMous:
; Line 3079
  000b5	b0 01		 mov	 al, 1
  000b7	eb 79		 jmp	 SHORT $LN12@HandleMous
$LN6@HandleMous:
; Line 3082
  000b9	eb 75		 jmp	 SHORT $LN8@HandleMous
$LN4@HandleMous:
; Line 3087
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	0f b6 91 5c 02
	00 00		 movzx	 edx, BYTE PTR [ecx+604]
  000c5	85 d2		 test	 edx, edx
  000c7	74 67		 je	 SHORT $LN8@HandleMous
; Line 3089
  000c9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	c6 80 5c 02 00
	00 00		 mov	 BYTE PTR [eax+604], 0
; Line 3090
  000d3	8b f4		 mov	 esi, esp
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 3092
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  000e8	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  000ec	85 c0		 test	 eax, eax
  000ee	75 05		 jne	 SHORT $LN2@HandleMous
; Line 3093
  000f0	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
$LN2@HandleMous:
; Line 3096
  000f5	8b f4		 mov	 esi, esp
  000f7	8b 4d 0c	 mov	 ecx, DWORD PTR _pt$[ebp]
  000fa	51		 push	 ecx
  000fb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fe	8b 02		 mov	 eax, DWORD PTR [edx]
  00100	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00106	ff d2		 call	 edx
  00108	3b f4		 cmp	 esi, esp
  0010a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010f	0f b6 c0	 movzx	 eax, al
  00112	85 c0		 test	 eax, eax
  00114	74 16		 je	 SHORT $LN1@HandleMous
; Line 3097
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	51		 push	 ecx
  0011a	6a 01		 push	 1
  0011c	68 01 01 00 00	 push	 257			; 00000101H
  00121	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00124	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00127	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN1@HandleMous:
; Line 3099
  0012c	b0 01		 mov	 al, 1
  0012e	eb 02		 jmp	 SHORT $LN12@HandleMous
$LN8@HandleMous:
; Line 3106
  00130	32 c0		 xor	 al, al
$LN12@HandleMous:
; Line 3107
  00132	5e		 pop	 esi
  00133	83 c4 08	 add	 esp, 8
  00136	3b ec		 cmp	 ebp, esp
  00138	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c2 10 00	 ret	 16			; 00000010H
?HandleMouse@CDXUTButton@@UAE_NIABUtagPOINT@@IJ@Z ENDP	; CDXUTButton::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -16						; size = 4
tv79 = -12						; size = 4
tv78 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTButton@@UAE_NIIJ@Z PROC		; CDXUTButton::HandleKeyboard
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3019
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3022
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	0f b6 48 40	 movzx	 ecx, BYTE PTR [eax+64]
  00021	85 c9		 test	 ecx, ecx
  00023	74 0b		 je	 SHORT $LN12@HandleKeyb
  00025	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00028	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0002c	85 c0		 test	 eax, eax
  0002e	75 04		 jne	 SHORT $LN13@HandleKeyb
$LN12@HandleKeyb:
; Line 3023
  00030	32 c0		 xor	 al, al
  00032	eb 79		 jmp	 SHORT $LN14@HandleKeyb
$LN13@HandleKeyb:
; Line 3025
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00037	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
  0003a	81 7d f8 00 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 256 ; 00000100H
  00041	74 0b		 je	 SHORT $LN9@HandleKeyb
  00043	81 7d f8 01 01
	00 00		 cmp	 DWORD PTR tv78[ebp], 257 ; 00000101H
  0004a	74 1e		 je	 SHORT $LN5@HandleKeyb
  0004c	eb 5d		 jmp	 SHORT $LN10@HandleKeyb
$LN9@HandleKeyb:
; Line 3029
  0004e	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00051	89 55 f4	 mov	 DWORD PTR tv79[ebp], edx
  00054	83 7d f4 20	 cmp	 DWORD PTR tv79[ebp], 32	; 00000020H
  00058	74 02		 je	 SHORT $LN6@HandleKeyb
  0005a	eb 0e		 jmp	 SHORT $LN5@HandleKeyb
$LN6@HandleKeyb:
; Line 3032
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c6 80 5c 02 00
	00 01		 mov	 BYTE PTR [eax+604], 1
; Line 3033
  00066	b0 01		 mov	 al, 1
  00068	eb 43		 jmp	 SHORT $LN14@HandleKeyb
$LN5@HandleKeyb:
; Line 3039
  0006a	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0006d	89 4d f0	 mov	 DWORD PTR tv82[ebp], ecx
  00070	83 7d f0 20	 cmp	 DWORD PTR tv82[ebp], 32	; 00000020H
  00074	74 02		 je	 SHORT $LN2@HandleKeyb
  00076	eb 33		 jmp	 SHORT $LN10@HandleKeyb
$LN2@HandleKeyb:
; Line 3042
  00078	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	0f b6 82 5c 02
	00 00		 movzx	 eax, BYTE PTR [edx+604]
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 20		 jne	 SHORT $LN1@HandleKeyb
; Line 3044
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c6 81 5c 02 00
	00 00		 mov	 BYTE PTR [ecx+604], 0
; Line 3045
  00091	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00094	52		 push	 edx
  00095	6a 01		 push	 1
  00097	68 01 01 00 00	 push	 257			; 00000101H
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000a2	e8 00 00 00 00	 call	 ?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ; CDXUTDialog::SendEvent
$LN1@HandleKeyb:
; Line 3047
  000a7	b0 01		 mov	 al, 1
  000a9	eb 02		 jmp	 SHORT $LN14@HandleKeyb
$LN10@HandleKeyb:
; Line 3051
  000ab	32 c0		 xor	 al, al
$LN14@HandleKeyb:
; Line 3052
  000ad	83 c4 10	 add	 esp, 16			; 00000010H
  000b0	3b ec		 cmp	 ebp, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 0c 00	 ret	 12			; 0000000cH
?HandleKeyboard@CDXUTButton@@UAE_NIIJ@Z ENDP		; CDXUTButton::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDialog$ = 8						; size = 4
??0CDXUTButton@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTButton::CDXUTButton
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 3007
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z ; CDXUTStatic::CDXUTStatic
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTButton@@6B@
; Line 3008
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0
; Line 3009
  0002b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00031	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 3011
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	c6 81 5c 02 00
	00 00		 mov	 BYTE PTR [ecx+604], 0
; Line 3012
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	c7 42 38 00 00
	00 00		 mov	 DWORD PTR [edx+56], 0
; Line 3013
  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	83 c4 04	 add	 esp, 4
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
??0CDXUTButton@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTButton::CDXUTButton
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTStatic@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTStatic@@UAEPAXI@Z PROC				; CDXUTStatic::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTStatic@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTStatic@@UAEPAXI@Z ENDP				; CDXUTStatic::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDXUTStatic@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDXUTStatic@@UAE@XZ PROC				; CDXUTStatic::~CDXUTStatic, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDXUTStatic@@UAE@XZ ENDP				; CDXUTStatic::~CDXUTStatic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_strText$ = 8						; size = 4
?SetText@CDXUTStatic@@QAEJPB_W@Z PROC			; CDXUTStatic::SetText
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2990
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2991
  0000f	83 7d 08 00	 cmp	 DWORD PTR _strText$[ebp], 0
  00013	75 16		 jne	 SHORT $LN1@SetText
; Line 2993
  00015	b8 02 00 00 00	 mov	 eax, 2
  0001a	6b c8 00	 imul	 ecx, eax, 0
  0001d	33 d2		 xor	 edx, edx
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	66 89 54 08 54	 mov	 WORD PTR [eax+ecx+84], dx
; Line 2994
  00027	33 c0		 xor	 eax, eax
  00029	eb 24		 jmp	 SHORT $LN2@SetText
$LN1@SetText:
; Line 2997
  0002b	8b f4		 mov	 esi, esp
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _strText$[ebp]
  00030	51		 push	 ecx
  00031	68 04 01 00 00	 push	 260			; 00000104H
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	83 c2 54	 add	 edx, 84			; 00000054H
  0003c	52		 push	 edx
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	3b f4		 cmp	 esi, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2998
  0004d	33 c0		 xor	 eax, eax
$LN2@SetText:
; Line 2999
  0004f	5e		 pop	 esi
  00050	83 c4 04	 add	 esp, 4
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?SetText@CDXUTStatic@@QAEJPB_W@Z ENDP			; CDXUTStatic::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_strDest$ = 8						; size = 4
_bufferCount$ = 12					; size = 4
?GetTextCopy@CDXUTStatic@@QBEJPA_WI@Z PROC		; CDXUTStatic::GetTextCopy
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2974
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2976
  0000f	83 7d 08 00	 cmp	 DWORD PTR _strDest$[ebp], 0
  00013	74 06		 je	 SHORT $LN1@GetTextCop
  00015	83 7d 0c 00	 cmp	 DWORD PTR _bufferCount$[ebp], 0
  00019	75 07		 jne	 SHORT $LN2@GetTextCop
$LN1@GetTextCop:
; Line 2978
  0001b	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00020	eb 23		 jmp	 SHORT $LN3@GetTextCop
$LN2@GetTextCop:
; Line 2982
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 c0 54	 add	 eax, 84			; 00000054H
  00028	8b f4		 mov	 esi, esp
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR _bufferCount$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 08	 mov	 edx, DWORD PTR _strDest$[ebp]
  00032	52		 push	 edx
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2984
  00043	33 c0		 xor	 eax, eax
$LN3@GetTextCop:
; Line 2985
  00045	5e		 pop	 esi
  00046	83 c4 04	 add	 esp, 4
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
?GetTextCopy@CDXUTStatic@@QBEJPA_WI@Z ENDP		; CDXUTStatic::GetTextCopy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ContainsPoint@CDXUTStatic@@UAE_NABUtagPOINT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?ContainsPoint@CDXUTStatic@@UAE_NABUtagPOINT@@@Z PROC	; CDXUTStatic::ContainsPoint, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 603
  0000e	32 c0		 xor	 al, al
; Line 604
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?ContainsPoint@CDXUTStatic@@UAE_NABUtagPOINT@@@Z ENDP	; CDXUTStatic::ContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pElement$ = -12					; size = 4
_iState$ = -8						; size = 4
_this$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTStatic@@UAEXM@Z PROC			; CDXUTStatic::Render
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2954
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2955
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00025	85 c9		 test	 ecx, ecx
  00027	75 02		 jne	 SHORT $LN2@Render
; Line 2956
  00029	eb 74		 jmp	 SHORT $LN3@Render
$LN2@Render:
; Line 2958
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 0
; Line 2960
  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	0f b6 42 40	 movzx	 eax, BYTE PTR [edx+64]
  00039	85 c0		 test	 eax, eax
  0003b	75 07		 jne	 SHORT $LN1@Render
; Line 2961
  0003d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _iState$[ebp], 1
$LN1@Render:
; Line 2963
  00044	6a 00		 push	 0
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 20	 add	 ecx, 32			; 00000020H
  0004c	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d f4	 mov	 DWORD PTR _pElement$[ebp], ecx
; Line 2965
  00056	51		 push	 ecx
  00057	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  0005f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00064	51		 push	 ecx
  00065	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0006a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006f	8b 55 f8	 mov	 edx, DWORD PTR _iState$[ebp]
  00072	52		 push	 edx
  00073	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00076	83 c1 44	 add	 ecx, 68			; 00000044H
  00079	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 2967
  0007e	6a 00		 push	 0
  00080	6a 00		 push	 0
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	83 c0 44	 add	 eax, 68			; 00000044H
  00088	50		 push	 eax
  00089	8b 4d f4	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00090	83 c2 54	 add	 edx, 84			; 00000054H
  00093	52		 push	 edx
  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0009a	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN3@Render:
; Line 2968
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 04 00	 ret	 4
?Render@CDXUTStatic@@UAEXM@Z ENDP			; CDXUTStatic::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv173 = -68						; size = 4
tv133 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 12
$T4 = -41						; size = 1
_pElement$5 = -40					; size = 4
_it$6 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDialog$ = 8						; size = 4
??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTStatic::CDXUTStatic
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2936
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00019	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	6a 00		 push	 0
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z ; CDXUTControl::CDXUTControl
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTStatic@@6B@
; Line 2937
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	c7 41 34 01 00
	00 00		 mov	 DWORD PTR [ecx+52], 1
; Line 2938
  0005e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00064	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 2940
  00067	68 08 02 00 00	 push	 520			; 00000208H
  0006c	6a 00		 push	 0
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	83 c1 54	 add	 ecx, 84			; 00000054H
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memset
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2942
  0007d	8d 55 e0	 lea	 edx, DWORD PTR _it$6[ebp]
  00080	52		 push	 edx
  00081	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	83 c1 20	 add	 ecx, 32			; 00000020H
  00087	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::begin
  0008c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00090	eb 08		 jmp	 SHORT $LN4@CDXUTStati
$LN3@CDXUTStati:
  00092	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00095	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
$LN4@CDXUTStati:
  0009a	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	83 c1 20	 add	 ecx, 32			; 00000020H
  000a4	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::end
  000a9	89 45 c0	 mov	 DWORD PTR tv133[ebp], eax
  000ac	8b 4d c0	 mov	 ecx, DWORD PTR tv133[ebp]
  000af	89 4d bc	 mov	 DWORD PTR tv173[ebp], ecx
  000b2	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000b6	8b 55 bc	 mov	 edx, DWORD PTR tv173[ebp]
  000b9	52		 push	 edx
  000ba	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000bd	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator!=
  000c2	88 45 d7	 mov	 BYTE PTR $T4[ebp], al
  000c5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000c9	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  000cc	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
  000d1	0f b6 45 d7	 movzx	 eax, BYTE PTR $T4[ebp]
  000d5	85 c0		 test	 eax, eax
  000d7	74 2e		 je	 SHORT $LN2@CDXUTStati
; Line 2944
  000d9	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000dc	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEAAPAVCDXUTElement@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	89 4d d8	 mov	 DWORD PTR _pElement$5[ebp], ecx
; Line 2945
  000e6	83 7d d8 00	 cmp	 DWORD PTR _pElement$5[ebp], 0
  000ea	74 19		 je	 SHORT $LN1@CDXUTStati
  000ec	8b 55 d8	 mov	 edx, DWORD PTR _pElement$5[ebp]
  000ef	89 55 c4	 mov	 DWORD PTR $T2[ebp], edx
  000f2	8b 45 c4	 mov	 eax, DWORD PTR $T2[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000fb	83 c4 04	 add	 esp, 4
  000fe	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pElement$5[ebp], 0
$LN1@CDXUTStati:
  00105	eb 8b		 jmp	 SHORT $LN3@CDXUTStati
$LN2@CDXUTStati:
; Line 2946
  00107	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0010b	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  0010e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
; Line 2948
  00113	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	83 c1 20	 add	 ecx, 32			; 00000020H
  00119	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::clear
; Line 2949
  0011e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00125	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00128	52		 push	 edx
  00129	8b cd		 mov	 ecx, ebp
  0012b	50		 push	 eax
  0012c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@CDXUTStati
  00132	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00137	58		 pop	 eax
  00138	5a		 pop	 edx
  00139	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0013c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00143	59		 pop	 ecx
  00144	5f		 pop	 edi
  00145	83 c4 44	 add	 esp, 68			; 00000044H
  00148	3b ec		 cmp	 ebp, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 04 00	 ret	 4
  00155	8d 49 00	 npad	 3
$LN13@CDXUTStati:
  00158	01 00 00 00	 DD	 1
  0015c	00 00 00 00	 DD	 $LN12@CDXUTStati
$LN12@CDXUTStati:
  00160	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00164	0c 00 00 00	 DD	 12			; 0000000cH
  00168	00 00 00 00	 DD	 $LN10@CDXUTStati
$LN10@CDXUTStati:
  0016c	69		 DB	 105			; 00000069H
  0016d	74		 DB	 116			; 00000074H
  0016e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
__unwindfunclet$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z$2:
  00010	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTStatic::CDXUTStatic
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTElementHolder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTElementHolder@@QAE@XZ PROC			; DXUTElementHolder::DXUTElementHolder, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 08	 add	 ecx, 8
  00014	e8 00 00 00 00	 call	 ??0CDXUTElement@@QAE@XZ
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0DXUTElementHolder@@QAE@XZ ENDP			; DXUTElementHolder::DXUTElementHolder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDXUTControl@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDXUTControl@@UAEPAXI@Z PROC			; CDXUTControl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDXUTControl@@UAE@XZ	; CDXUTControl::~CDXUTControl
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCDXUTControl@@UAEPAXI@Z ENDP			; CDXUTControl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateRects@CDXUTControl@@MAEXXZ PROC			; CDXUTControl::UpdateRects
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2925
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2926
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	03 4a 14	 add	 ecx, DWORD PTR [edx+20]
  0001b	8b f4		 mov	 esi, esp
  0001d	51		 push	 ecx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  0002a	51		 push	 ecx
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00031	51		 push	 ecx
  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 44	 add	 ecx, 68			; 00000044H
  0003f	51		 push	 ecx
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00046	3b f4		 cmp	 esi, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2927
  0004d	5e		 pop	 esi
  0004e	83 c4 04	 add	 esp, 4
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?UpdateRects@CDXUTControl@@MAEXXZ ENDP			; CDXUTControl::UpdateRects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXPAPAVCDXUTElement@@0@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEII@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEPAPAVCDXUTElement@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAVCDXUTElement@@@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEPAPAVCDXUTElement@@PAPAV2@00@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Umove<CDXUTElement * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXPAPAVCDXUTElement@@0@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBE_NPBQAVCDXUTElement@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBE_NPBQAVCDXUTElement@@@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBE_NPBQAVCDXUTElement@@@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEII@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEII@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXPAPAVCDXUTElement@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXPAPAVCDXUTElement@@0@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@YAXPAPAVCDXUTElement@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTElement *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXPAPAVCDXUTElement@@0@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXPAPAVCDXUTElement@@0@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXABQAVCDXUTElement@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXABQAVCDXUTElement@@@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAVCDXUTElement@@@std@@YAPBQAVCDXUTElement@@ABQAV1@@Z ; std::addressof<CDXUTElement * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBE_NPBQAVCDXUTElement@@@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAVCDXUTElement@@@std@@YAPBQAVCDXUTElement@@ABQAV1@@Z ; std::addressof<CDXUTElement * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTElement@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IBEXPAPAVCDXUTElement@@0@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTElement@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::construct<CDXUTElement *,CDXUTElement * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXABQAVCDXUTElement@@@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1183
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1185
  00020	8b f4		 mov	 esi, esp
  00022	68 a1 04 00 00	 push	 1185			; 000004a1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 a2 04 00 00	 push	 1186			; 000004a2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 a2 04 00 00	 push	 1186			; 000004a2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LG@FALFGADF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAE?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$CK@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1193
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1194
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@PAPAVCDXUTElement@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::~vector<CDXUTElement *,std::allocator<CDXUTElement *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@IAEXXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::~vector<CDXUTElement *,std::allocator<CDXUTElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ PROC ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::vector<CDXUTElement *,std::allocator<CDXUTElement *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAVCDXUTElement@@@std@@QAE@XZ ; std::allocator<CDXUTElement *>::allocator<CDXUTElement *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::vector<CDXUTElement *,std::allocator<CDXUTElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::_Wrap_alloc<std::allocator<CDXUTElement *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTElement *> >::_Vector_val<std::_Simple_types<CDXUTElement *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTElement@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTElement *,std::allocator<CDXUTElement *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CDXUTElement *> >::~_Vector_val<std::_Simple_types<CDXUTElement *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CDXUTElement *> >::~_Vector_val<std::_Simple_types<CDXUTElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CDXUTElement *> >::_Vector_val<std::_Simple_types<CDXUTElement *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CDXUTElement *> >::_Vector_val<std::_Simple_types<CDXUTElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAIABV?$allocator@PAVCDXUTElement@@@2@@Z ; std::allocator_traits<std::allocator<CDXUTElement *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@I@Z ; std::allocator<CDXUTElement *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXPAPAVCDXUTElement@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEPAPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEPAPAVCDXUTElement@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAVCDXUTElement@@@std@@QAEPAPAVCDXUTElement@@I@Z ; std::allocator<CDXUTElement *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEPAPAVCDXUTElement@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::_Wrap_alloc<std::allocator<CDXUTElement *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAVCDXUTElement@@@std@@QAE@XZ ; std::allocator<CDXUTElement *>::allocator<CDXUTElement *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<CDXUTElement *> >::_Wrap_alloc<std::allocator<CDXUTElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAIABV?$allocator@PAVCDXUTElement@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAIABV?$allocator@PAVCDXUTElement@@@2@@Z PROC ; std::allocator_traits<std::allocator<CDXUTElement *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAVCDXUTElement@@@std@@QBEIXZ ; std::allocator<CDXUTElement *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAVCDXUTElement@@@std@@@std@@SAIABV?$allocator@PAVCDXUTElement@@@2@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTElement *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAVCDXUTElement@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVCDXUTElement@@@std@@QBEIXZ PROC ; std::allocator<CDXUTElement *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAVCDXUTElement@@@std@@QBEIXZ ENDP ; std::allocator<CDXUTElement *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@ABQAV3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@ABQAV3@@Z PROC ; std::allocator<CDXUTElement *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@ABQAV3@@Z ENDP ; std::allocator<CDXUTElement *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAVCDXUTElement@@@std@@QAEPAPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCDXUTElement@@@std@@QAEPAPAVCDXUTElement@@I@Z PROC ; std::allocator<CDXUTElement *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAVCDXUTElement@@@std@@YAPAPAVCDXUTElement@@IPAPAV1@@Z ; std::_Allocate<CDXUTElement *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAVCDXUTElement@@@std@@QAEPAPAVCDXUTElement@@I@Z ENDP ; std::allocator<CDXUTElement *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@I@Z PROC ; std::allocator<CDXUTElement *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCDXUTElement@@@std@@QAEXPAPAVCDXUTElement@@I@Z ENDP ; std::allocator<CDXUTElement *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAVCDXUTElement@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVCDXUTElement@@@std@@QAE@XZ PROC	; std::allocator<CDXUTElement *>::allocator<CDXUTElement *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAVCDXUTElement@@@std@@QAE@XZ ENDP	; std::allocator<CDXUTElement *>::allocator<CDXUTElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -48						; size = 4
$T2 = -44						; size = 4
$T3 = -40						; size = 4
_pCurElement$ = -36					; size = 4
_pNewElement$4 = -28					; size = 4
_i$5 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iElement$ = 8						; size = 4
_pElement$ = 12						; size = 4
?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z PROC	; CDXUTControl::SetElement
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2888
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001c	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001f	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00022	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00025	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00028	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00031	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00039	33 c5		 xor	 eax, ebp
  0003b	50		 push	 eax
  0003c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00045	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2889
  00048	83 7d 0c 00	 cmp	 DWORD PTR _pElement$[ebp], 0
  0004c	75 0a		 jne	 SHORT $LN5@SetElement
; Line 2890
  0004e	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00053	e9 a7 00 00 00	 jmp	 $LN6@SetElement
$LN5@SetElement:
; Line 2893
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 20	 add	 ecx, 32			; 00000020H
  0005e	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEIXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::size
  00063	89 45 ec	 mov	 DWORD PTR _i$5[ebp], eax
  00066	eb 09		 jmp	 SHORT $LN4@SetElement
$LN3@SetElement:
  00068	8b 45 ec	 mov	 eax, DWORD PTR _i$5[ebp]
  0006b	83 c0 01	 add	 eax, 1
  0006e	89 45 ec	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@SetElement:
  00071	8b 4d ec	 mov	 ecx, DWORD PTR _i$5[ebp]
  00074	3b 4d 08	 cmp	 ecx, DWORD PTR _iElement$[ebp]
  00077	77 64		 ja	 SHORT $LN2@SetElement
; Line 2895
  00079	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0007e	6a 6c		 push	 108			; 0000006cH
  00080	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00085	83 c4 08	 add	 esp, 8
  00088	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
  0008b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00092	83 7d d4 00	 cmp	 DWORD PTR $T2[ebp], 0
  00096	74 0d		 je	 SHORT $LN8@SetElement
  00098	8b 4d d4	 mov	 ecx, DWORD PTR $T2[ebp]
  0009b	e8 00 00 00 00	 call	 ??0CDXUTElement@@QAE@XZ
  000a0	89 45 d0	 mov	 DWORD PTR tv79[ebp], eax
  000a3	eb 07		 jmp	 SHORT $LN9@SetElement
$LN8@SetElement:
  000a5	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN9@SetElement:
  000ac	8b 55 d0	 mov	 edx, DWORD PTR tv79[ebp]
  000af	89 55 d8	 mov	 DWORD PTR $T3[ebp], edx
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8b 45 d8	 mov	 eax, DWORD PTR $T3[ebp]
  000bc	89 45 e4	 mov	 DWORD PTR _pNewElement$4[ebp], eax
; Line 2896
  000bf	83 7d e4 00	 cmp	 DWORD PTR _pNewElement$4[ebp], 0
  000c3	75 07		 jne	 SHORT $LN1@SetElement
; Line 2897
  000c5	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ca	eb 33		 jmp	 SHORT $LN6@SetElement
$LN1@SetElement:
; Line 2899
  000cc	8d 4d e4	 lea	 ecx, DWORD PTR _pNewElement$4[ebp]
  000cf	51		 push	 ecx
  000d0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	83 c1 20	 add	 ecx, 32			; 00000020H
  000d6	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXABQAVCDXUTElement@@@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::push_back
; Line 2900
  000db	eb 8b		 jmp	 SHORT $LN3@SetElement
$LN2@SetElement:
; Line 2903
  000dd	8b 55 08	 mov	 edx, DWORD PTR _iElement$[ebp]
  000e0	52		 push	 edx
  000e1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	83 c1 20	 add	 ecx, 32			; 00000020H
  000e7	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  000ec	8b 00		 mov	 eax, DWORD PTR [eax]
  000ee	89 45 dc	 mov	 DWORD PTR _pCurElement$[ebp], eax
; Line 2904
  000f1	8b 4d 0c	 mov	 ecx, DWORD PTR _pElement$[ebp]
  000f4	51		 push	 ecx
  000f5	8b 4d dc	 mov	 ecx, DWORD PTR _pCurElement$[ebp]
  000f8	e8 00 00 00 00	 call	 ??4CDXUTElement@@QAEAAV0@ABV0@@Z
; Line 2906
  000fd	33 c0		 xor	 eax, eax
$LN6@SetElement:
; Line 2907
  000ff	52		 push	 edx
  00100	8b cd		 mov	 ecx, ebp
  00102	50		 push	 eax
  00103	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@SetElement
  00109	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010e	58		 pop	 eax
  0010f	5a		 pop	 edx
  00110	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00113	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011a	59		 pop	 ecx
  0011b	83 c4 30	 add	 esp, 48			; 00000030H
  0011e	3b ec		 cmp	 ebp, esp
  00120	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c2 08 00	 ret	 8
  0012b	90		 npad	 1
$LN14@SetElement:
  0012c	01 00 00 00	 DD	 1
  00130	00 00 00 00	 DD	 $LN13@SetElement
$LN13@SetElement:
  00134	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00138	04 00 00 00	 DD	 4
  0013c	00 00 00 00	 DD	 $LN11@SetElement
$LN11@SetElement:
  00140	70		 DB	 112			; 00000070H
  00141	4e		 DB	 78			; 0000004eH
  00142	65		 DB	 101			; 00000065H
  00143	77		 DB	 119			; 00000077H
  00144	45		 DB	 69			; 00000045H
  00145	6c		 DB	 108			; 0000006cH
  00146	65		 DB	 101			; 00000065H
  00147	6d		 DB	 109			; 0000006dH
  00148	65		 DB	 101			; 00000065H
  00149	6e		 DB	 110			; 0000006eH
  0014a	74		 DB	 116			; 00000074H
  0014b	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z ENDP	; CDXUTControl::SetElement
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iElement$ = 8						; size = 4
?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z PROC	; CDXUTControl::GetElement, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 547
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _iElement$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 20	 add	 ecx, 32			; 00000020H
  00018	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QBEABQAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?GetElement@CDXUTControl@@QBEPAVCDXUTElement@@I@Z ENDP	; CDXUTControl::GetElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pElement$ = -8						; size = 4
_this$ = -4						; size = 4
_Color$ = 8						; size = 4
?SetTextColor@CDXUTControl@@UAEXK@Z PROC		; CDXUTControl::SetTextColor
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2878
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2879
  00017	6a 00		 push	 0
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 20	 add	 ecx, 32			; 00000020H
  0001f	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEAAPAVCDXUTElement@@I@Z ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::operator[]
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	89 45 f8	 mov	 DWORD PTR _pElement$[ebp], eax
; Line 2881
  00029	83 7d f8 00	 cmp	 DWORD PTR _pElement$[ebp], 0
  0002d	74 12		 je	 SHORT $LN2@SetTextCol
; Line 2882
  0002f	b9 04 00 00 00	 mov	 ecx, 4
  00034	6b d1 00	 imul	 edx, ecx, 0
  00037	8b 45 f8	 mov	 eax, DWORD PTR _pElement$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _Color$[ebp]
  0003d	89 4c 10 44	 mov	 DWORD PTR [eax+edx+68], ecx
$LN2@SetTextCol:
; Line 2883
  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?SetTextColor@CDXUTControl@@UAEXK@Z ENDP		; CDXUTControl::SetTextColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHotkey@CDXUTControl@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHotkey@CDXUTControl@@QBEIXZ PROC			; CDXUTControl::GetHotkey, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 541
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetHotkey@CDXUTControl@@QBEIXZ ENDP			; CDXUTControl::GetHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetHotkey@CDXUTControl@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nHotkey$ = 8						; size = 4
?SetHotkey@CDXUTControl@@QAEXI@Z PROC			; CDXUTControl::SetHotkey, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 540
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _nHotkey$[ebp]
  00014	89 48 38	 mov	 DWORD PTR [eax+56], ecx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetHotkey@CDXUTControl@@QAEXI@Z ENDP			; CDXUTControl::SetHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetSize@CDXUTControl@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetSize@CDXUTControl@@QAEXHH@Z PROC			; CDXUTControl::SetSize, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 534
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 535
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _width$[ebp]
  00015	89 48 10	 mov	 DWORD PTR [eax+16], ecx
; Line 536
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  0001e	89 42 14	 mov	 DWORD PTR [edx+20], eax
; Line 537
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 11		 mov	 edx, DWORD PTR [ecx]
  00026	8b f4		 mov	 esi, esp
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0002e	ff d0		 call	 eax
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 538
  00037	5e		 pop	 esi
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?SetSize@CDXUTControl@@QAEXHH@Z ENDP			; CDXUTControl::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetLocation@CDXUTControl@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetLocation@CDXUTControl@@QAEXHH@Z PROC		; CDXUTControl::SetLocation, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 528
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 529
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00015	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 530
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0001e	89 42 0c	 mov	 DWORD PTR [edx+12], eax
; Line 531
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 11		 mov	 edx, DWORD PTR [ecx]
  00026	8b f4		 mov	 esi, esp
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0002e	ff d0		 call	 eax
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 532
  00037	5e		 pop	 esi
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?SetLocation@CDXUTControl@@QAEXHH@Z ENDP		; CDXUTControl::SetLocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetID@CDXUTControl@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetID@CDXUTControl@@QAEXH@Z PROC			; CDXUTControl::SetID, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 525
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ID$[ebp]
  00014	89 48 30	 mov	 DWORD PTR [eax+48], ecx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetID@CDXUTControl@@QAEXH@Z ENDP			; CDXUTControl::SetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetID@CDXUTControl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@CDXUTControl@@QBEHXZ PROC			; CDXUTControl::GetID, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 524
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetID@CDXUTControl@@QBEHXZ ENDP			; CDXUTControl::GetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetType@CDXUTControl@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@CDXUTControl@@QBEIXZ PROC			; CDXUTControl::GetType, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 522
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetType@CDXUTControl@@QBEIXZ ENDP			; CDXUTControl::GetType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetVisible@CDXUTControl@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVisible@CDXUTControl@@UBE_NXZ PROC			; CDXUTControl::GetVisible, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 520
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetVisible@CDXUTControl@@UBE_NXZ ENDP			; CDXUTControl::GetVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetVisible@CDXUTControl@@UAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bVisible$ = 8						; size = 1
?SetVisible@CDXUTControl@@UAEX_N@Z PROC			; CDXUTControl::SetVisible, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 519
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 4d 08	 mov	 cl, BYTE PTR _bVisible$[ebp]
  00014	88 48 04	 mov	 BYTE PTR [eax+4], cl
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetVisible@CDXUTControl@@UAEX_N@Z ENDP			; CDXUTControl::SetVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetEnabled@CDXUTControl@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEnabled@CDXUTControl@@UBE_NXZ PROC			; CDXUTControl::GetEnabled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 518
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 40 40	 mov	 al, BYTE PTR [eax+64]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetEnabled@CDXUTControl@@UBE_NXZ ENDP			; CDXUTControl::GetEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetEnabled@CDXUTControl@@UAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bEnabled$ = 8						; size = 1
?SetEnabled@CDXUTControl@@UAEX_N@Z PROC			; CDXUTControl::SetEnabled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 4d 08	 mov	 cl, BYTE PTR _bEnabled$[ebp]
  00014	88 48 40	 mov	 BYTE PTR [eax+64], cl
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetEnabled@CDXUTControl@@UAEX_N@Z ENDP			; CDXUTControl::SetEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z PROC	; CDXUTControl::ContainsPoint, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 515
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	8b f4		 mov	 esi, esp
  0001a	8b 45 08	 mov	 eax, DWORD PTR _pt$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	51		 push	 ecx
  00021	8b 10		 mov	 edx, DWORD PTR [eax]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c0 44	 add	 eax, 68			; 00000044H
  0002a	50		 push	 eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	85 c0		 test	 eax, eax
  0003a	74 09		 je	 SHORT $LN3@ContainsPo
  0003c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00043	eb 07		 jmp	 SHORT $LN4@ContainsPo
$LN3@ContainsPo:
  00045	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@ContainsPo:
  0004c	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?ContainsPoint@CDXUTControl@@UAE_NABUtagPOINT@@@Z ENDP	; CDXUTControl::ContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnHotkey@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnHotkey@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnHotkey, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 513
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?OnHotkey@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnHotkey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnMouseLeave@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnMouseLeave@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnMouseLeave, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 512
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 05 00	 mov	 BYTE PTR [eax+5], 0
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnMouseLeave@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnMouseLeave
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnMouseEnter@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnMouseEnter@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnMouseEnter, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 511
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 05 01	 mov	 BYTE PTR [eax+5], 1
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnMouseEnter@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnMouseEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnFocusOut@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnFocusOut@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnFocusOut, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 510
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnFocusOut@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnFocusOut
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnFocusIn@CDXUTControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnFocusIn@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::OnFocusIn, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 509
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c6 40 06 01	 mov	 BYTE PTR [eax+6], 1
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnFocusIn@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::OnFocusIn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanHaveFocus@CDXUTControl@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CanHaveFocus@CDXUTControl@@UAE_NXZ PROC		; CDXUTControl::CanHaveFocus, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 508
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	32 c0		 xor	 al, al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?CanHaveFocus@CDXUTControl@@UAE_NXZ ENDP		; CDXUTControl::CanHaveFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?HandleMouse@CDXUTControl@@UAE_NIABUtagPOINT@@IJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_pt$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?HandleMouse@CDXUTControl@@UAE_NIABUtagPOINT@@IJ@Z PROC	; CDXUTControl::HandleMouse, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 500
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 505
  0000e	32 c0		 xor	 al, al
; Line 506
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 10 00	 ret	 16			; 00000010H
?HandleMouse@CDXUTControl@@UAE_NIABUtagPOINT@@IJ@Z ENDP	; CDXUTControl::HandleMouse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?HandleKeyboard@CDXUTControl@@UAE_NIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?HandleKeyboard@CDXUTControl@@UAE_NIIJ@Z PROC		; CDXUTControl::HandleKeyboard, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 493
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 497
  0000e	32 c0		 xor	 al, al
; Line 498
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 0c 00	 ret	 12			; 0000000cH
?HandleKeyboard@CDXUTControl@@UAE_NIIJ@Z ENDP		; CDXUTControl::HandleKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MsgProc@CDXUTControl@@UAE_NIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@CDXUTControl@@UAE_NIIJ@Z PROC			; CDXUTControl::MsgProc, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 485
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 489
  0000e	32 c0		 xor	 al, al
; Line 490
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 0c 00	 ret	 12			; 0000000cH
?MsgProc@CDXUTControl@@UAE_NIIJ@Z ENDP			; CDXUTControl::MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Render@CDXUTControl@@UAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?Render@CDXUTControl@@UAEXM@Z PROC			; CDXUTControl::Render, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 481
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?Render@CDXUTControl@@UAEXM@Z ENDP			; CDXUTControl::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv128 = -60						; size = 4
tv68 = -56						; size = 4
$T2 = -52						; size = 12
$T3 = -37						; size = 1
_it$4 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Refresh@CDXUTControl@@UAEXXZ PROC			; CDXUTControl::Refresh
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2912
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Refresh@CDXUTControl@@UAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2913
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c6 40 05 00	 mov	 BYTE PTR [eax+5], 0
; Line 2914
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	c6 41 06 00	 mov	 BYTE PTR [ecx+6], 0
; Line 2916
  00048	8d 55 e0	 lea	 edx, DWORD PTR _it$4[ebp]
  0004b	52		 push	 edx
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	83 c1 20	 add	 ecx, 32			; 00000020H
  00052	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::begin
  00057	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005e	eb 08		 jmp	 SHORT $LN3@Refresh
$LN2@Refresh:
  00060	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00063	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
$LN3@Refresh:
  00068	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 20	 add	 ecx, 32			; 00000020H
  00072	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::end
  00077	89 45 c8	 mov	 DWORD PTR tv68[ebp], eax
  0007a	8b 4d c8	 mov	 ecx, DWORD PTR tv68[ebp]
  0007d	89 4d c4	 mov	 DWORD PTR tv128[ebp], ecx
  00080	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00084	8b 55 c4	 mov	 edx, DWORD PTR tv128[ebp]
  00087	52		 push	 edx
  00088	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  0008b	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator!=
  00090	88 45 db	 mov	 BYTE PTR $T3[ebp], al
  00093	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00097	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0009a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
  0009f	0f b6 45 db	 movzx	 eax, BYTE PTR $T3[ebp]
  000a3	85 c0		 test	 eax, eax
  000a5	74 11		 je	 SHORT $LN1@Refresh
; Line 2918
  000a7	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000aa	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEAAPAVCDXUTElement@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?Refresh@CDXUTElement@@QAEXXZ ; CDXUTElement::Refresh
  000b6	eb a8		 jmp	 SHORT $LN2@Refresh
$LN1@Refresh:
; Line 2919
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000c2	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
; Line 2920
  000c7	52		 push	 edx
  000c8	8b cd		 mov	 ecx, ebp
  000ca	50		 push	 eax
  000cb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@Refresh
  000d1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d6	58		 pop	 eax
  000d7	5a		 pop	 edx
  000d8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e2	59		 pop	 ecx
  000e3	5f		 pop	 edi
  000e4	83 c4 3c	 add	 esp, 60			; 0000003cH
  000e7	3b ec		 cmp	 ebp, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
  000f2	8b ff		 npad	 2
$LN11@Refresh:
  000f4	01 00 00 00	 DD	 1
  000f8	00 00 00 00	 DD	 $LN10@Refresh
$LN10@Refresh:
  000fc	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00100	0c 00 00 00	 DD	 12			; 0000000cH
  00104	00 00 00 00	 DD	 $LN8@Refresh
$LN8@Refresh:
  00108	69		 DB	 105			; 00000069H
  00109	74		 DB	 116			; 00000074H
  0010a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Refresh@CDXUTControl@@UAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Refresh@CDXUTControl@@UAEXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Refresh@CDXUTControl@@UAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Refresh@CDXUTControl@@UAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Refresh@CDXUTControl@@UAEXXZ ENDP			; CDXUTControl::Refresh
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OnInit@CDXUTControl@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInit@CDXUTControl@@UAEJXZ PROC			; CDXUTControl::OnInit, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 479
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	33 c0		 xor	 eax, eax
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?OnInit@CDXUTControl@@UAEJXZ ENDP			; CDXUTControl::OnInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv133 = -68						; size = 4
tv69 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 12
$T4 = -41						; size = 1
_pElement$5 = -40					; size = 4
_it$6 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDXUTControl@@UAE@XZ PROC				; CDXUTControl::~CDXUTControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2866
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDXUTControl@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00019	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTControl@@6B@
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 2867
  0004a	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  0004d	51		 push	 ecx
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c1 20	 add	 ecx, 32			; 00000020H
  00054	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::begin
  00059	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005d	eb 08		 jmp	 SHORT $LN3@CDXUTContr
$LN2@CDXUTContr:
  0005f	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00062	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator++
$LN3@CDXUTContr:
  00067	8d 55 c8	 lea	 edx, DWORD PTR $T3[ebp]
  0006a	52		 push	 edx
  0006b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 20	 add	 ecx, 32			; 00000020H
  00071	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@2@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::end
  00076	89 45 c0	 mov	 DWORD PTR tv69[ebp], eax
  00079	8b 45 c0	 mov	 eax, DWORD PTR tv69[ebp]
  0007c	89 45 bc	 mov	 DWORD PTR tv133[ebp], eax
  0007f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00083	8b 4d bc	 mov	 ecx, DWORD PTR tv133[ebp]
  00086	51		 push	 ecx
  00087	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  0008a	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator!=
  0008f	88 45 d7	 mov	 BYTE PTR $T4[ebp], al
  00092	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00096	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00099	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
  0009e	0f b6 55 d7	 movzx	 edx, BYTE PTR $T4[ebp]
  000a2	85 d2		 test	 edx, edx
  000a4	74 21		 je	 SHORT $LN1@CDXUTContr
; Line 2869
  000a6	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000a9	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QBEAAPAVCDXUTElement@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTElement *> > >::operator*
  000ae	8b 00		 mov	 eax, DWORD PTR [eax]
  000b0	89 45 d8	 mov	 DWORD PTR _pElement$5[ebp], eax
; Line 2870
  000b3	8b 4d d8	 mov	 ecx, DWORD PTR _pElement$5[ebp]
  000b6	89 4d c4	 mov	 DWORD PTR $T2[ebp], ecx
  000b9	8b 55 c4	 mov	 edx, DWORD PTR $T2[ebp]
  000bc	52		 push	 edx
  000bd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c2	83 c4 04	 add	 esp, 4
  000c5	eb 98		 jmp	 SHORT $LN2@CDXUTContr
$LN1@CDXUTContr:
; Line 2871
  000c7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000cb	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000ce	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
; Line 2872
  000d3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	83 c1 20	 add	 ecx, 32			; 00000020H
  000d9	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAEXXZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::clear
; Line 2873
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	83 c1 20	 add	 ecx, 32			; 00000020H
  000eb	e8 00 00 00 00	 call	 ??1?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::~vector<CDXUTElement *,std::allocator<CDXUTElement *> >
  000f0	52		 push	 edx
  000f1	8b cd		 mov	 ecx, ebp
  000f3	50		 push	 eax
  000f4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@CDXUTContr
  000fa	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ff	58		 pop	 eax
  00100	5a		 pop	 edx
  00101	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00104	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010b	59		 pop	 ecx
  0010c	5f		 pop	 edi
  0010d	83 c4 44	 add	 esp, 68			; 00000044H
  00110	3b ec		 cmp	 ebp, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c3		 ret	 0
  0011b	90		 npad	 1
$LN12@CDXUTContr:
  0011c	01 00 00 00	 DD	 1
  00120	00 00 00 00	 DD	 $LN11@CDXUTContr
$LN11@CDXUTContr:
  00124	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00128	0c 00 00 00	 DD	 12			; 0000000cH
  0012c	00 00 00 00	 DD	 $LN9@CDXUTContr
$LN9@CDXUTContr:
  00130	69		 DB	 105			; 00000069H
  00131	74		 DB	 116			; 00000074H
  00132	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDXUTControl@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 20	 add	 ecx, 32			; 00000020H
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::~vector<CDXUTElement *,std::allocator<CDXUTElement *> >
__unwindfunclet$??1CDXUTControl@@UAE@XZ$1:
  0000b	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1CDXUTControl@@UAE@XZ$2:
  00013	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTElement@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1CDXUTControl@@UAE@XZ:
  0001b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00022	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00025	33 c8		 xor	 ecx, eax
  00027	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDXUTControl@@UAE@XZ
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDXUTControl@@UAE@XZ ENDP				; CDXUTControl::~CDXUTControl
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDialog$ = 8						; size = 4
??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z PROC		; CDXUTControl::CDXUTControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2839
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDXUTControl@@6B@
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 c1 20	 add	 ecx, 32			; 00000020H
  0001d	e8 00 00 00 00	 call	 ??0?$vector@PAVCDXUTElement@@V?$allocator@PAVCDXUTElement@@@std@@@std@@QAE@XZ ; std::vector<CDXUTElement *,std::allocator<CDXUTElement *> >::vector<CDXUTElement *,std::allocator<CDXUTElement *> >
; Line 2840
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0
; Line 2841
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 45 08	 mov	 eax, DWORD PTR _pDialog$[ebp]
  00032	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 2842
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0
; Line 2843
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	c7 42 38 00 00
	00 00		 mov	 DWORD PTR [edx+56], 0
; Line 2844
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
; Line 2845
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 41 3c 00 00
	00 00		 mov	 DWORD PTR [ecx+60], 0
; Line 2847
  0005d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00060	c6 42 40 01	 mov	 BYTE PTR [edx+64], 1
; Line 2848
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
; Line 2849
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	c6 41 05 00	 mov	 BYTE PTR [ecx+5], 0
; Line 2850
  00072	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00075	c6 42 06 00	 mov	 BYTE PTR [edx+6], 0
; Line 2851
  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c6 40 07 00	 mov	 BYTE PTR [eax+7], 0
; Line 2853
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 2855
  0008a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008d	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
; Line 2856
  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 2857
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
; Line 2858
  000a8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ab	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
; Line 2860
  000b2	33 c0		 xor	 eax, eax
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	83 c1 44	 add	 ecx, 68			; 00000044H
  000ba	89 01		 mov	 DWORD PTR [ecx], eax
  000bc	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000bf	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  000c2	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 2861
  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	83 c4 04	 add	 esp, 4
  000cb	3b ec		 cmp	 ebp, esp
  000cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
??0CDXUTControl@@QAE@PAVCDXUTDialog@@@Z ENDP		; CDXUTControl::CDXUTControl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXPAPAUDXUTFontNode@@0@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEII@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEPAPAUDXUTFontNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAUDXUTFontNode@@@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEPAPAUDXUTFontNode@@PAPAU2@00@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Umove<DXUTFontNode * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXPAPAUDXUTFontNode@@0@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBE_NPBQAUDXUTFontNode@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBE_NPBQAUDXUTFontNode@@@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBE_NPBQAUDXUTFontNode@@@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXPAPAUDXUTFontNode@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXPAPAUDXUTFontNode@@0@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@YAXPAPAUDXUTFontNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTFontNode *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXPAPAUDXUTFontNode@@0@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXXZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXPAPAUDXUTFontNode@@0@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXXZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXABQAUDXUTFontNode@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXABQAUDXUTFontNode@@@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTFontNode@@@std@@YAPBQAUDXUTFontNode@@ABQAU1@@Z ; std::addressof<DXUTFontNode * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBE_NPBQAUDXUTFontNode@@@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTFontNode@@@std@@YAPBQAUDXUTFontNode@@ABQAU1@@Z ; std::addressof<DXUTFontNode * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAUDXUTFontNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IBEXPAPAUDXUTFontNode@@0@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAUDXUTFontNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::construct<DXUTFontNode *,DXUTFontNode * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXABQAUDXUTFontNode@@@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEAAPAUDXUTFontNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEAAPAUDXUTFontNode@@I@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LK@BMEBJNCM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAF?$AAo?$AAn?$AAt?$AAN?$AAo?$AAd?$AAe?$AA?5@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEAAPAUDXUTFontNode@@I@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEABQAUDXUTFontNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEABQAUDXUTFontNode@@I@Z PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1183
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1185
  00020	8b f4		 mov	 esi, esp
  00022	68 a1 04 00 00	 push	 1185			; 000004a1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 a2 04 00 00	 push	 1186			; 000004a2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 a2 04 00 00	 push	 1186			; 000004a2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LK@BMEBJNCM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAF?$AAo?$AAn?$AAt?$AAN?$AAo?$AAd?$AAe?$AA?5@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1193
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1194
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEABQAUDXUTFontNode@@I@Z ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@PAPAUDXUTFontNode@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::~vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@IAEXXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::~vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTFontNode@@@std@@QAE@XZ ; std::allocator<DXUTFontNode *>::allocator<DXUTFontNode *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::_Wrap_alloc<std::allocator<DXUTFontNode *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTFontNode *> >::_Vector_val<std::_Simple_types<DXUTFontNode *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTFontNode@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTFontNode *,std::allocator<DXUTFontNode *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTFontNode *> >::~_Vector_val<std::_Simple_types<DXUTFontNode *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTFontNode *> >::~_Vector_val<std::_Simple_types<DXUTFontNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTFontNode *> >::_Vector_val<std::_Simple_types<DXUTFontNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTFontNode *> >::_Vector_val<std::_Simple_types<DXUTFontNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTFontNode@@@2@@Z ; std::allocator_traits<std::allocator<DXUTFontNode *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ; std::allocator<DXUTFontNode *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEPAPAUDXUTFontNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEPAPAUDXUTFontNode@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAUDXUTFontNode@@@std@@QAEPAPAUDXUTFontNode@@I@Z ; std::allocator<DXUTFontNode *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEPAPAUDXUTFontNode@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::_Wrap_alloc<std::allocator<DXUTFontNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTFontNode@@@std@@QAE@XZ ; std::allocator<DXUTFontNode *>::allocator<DXUTFontNode *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTFontNode *> >::_Wrap_alloc<std::allocator<DXUTFontNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTFontNode@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTFontNode@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUTFontNode *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAUDXUTFontNode@@@std@@QBEIXZ ; std::allocator<DXUTFontNode *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAUDXUTFontNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTFontNode@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUTFontNode *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAUDXUTFontNode@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUDXUTFontNode@@@std@@QBEIXZ PROC ; std::allocator<DXUTFontNode *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAUDXUTFontNode@@@std@@QBEIXZ ENDP ; std::allocator<DXUTFontNode *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU3@@Z PROC ; std::allocator<DXUTFontNode *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@ABQAU3@@Z ENDP ; std::allocator<DXUTFontNode *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAUDXUTFontNode@@@std@@QAEPAPAUDXUTFontNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUDXUTFontNode@@@std@@QAEPAPAUDXUTFontNode@@I@Z PROC ; std::allocator<DXUTFontNode *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAUDXUTFontNode@@@std@@YAPAPAUDXUTFontNode@@IPAPAU1@@Z ; std::_Allocate<DXUTFontNode *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAUDXUTFontNode@@@std@@QAEPAPAUDXUTFontNode@@I@Z ENDP ; std::allocator<DXUTFontNode *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@I@Z PROC ; std::allocator<DXUTFontNode *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUDXUTFontNode@@@std@@QAEXPAPAUDXUTFontNode@@I@Z ENDP ; std::allocator<DXUTFontNode *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAUDXUTFontNode@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUDXUTFontNode@@@std@@QAE@XZ PROC	; std::allocator<DXUTFontNode *>::allocator<DXUTFontNode *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAUDXUTFontNode@@@std@@QAE@XZ ENDP	; std::allocator<DXUTFontNode *>::allocator<DXUTFontNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXPAPAUDXUTTextureNode@@0@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEII@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEPAPAUDXUTTextureNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAUDXUTTextureNode@@@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEPAPAUDXUTTextureNode@@PAPAU2@00@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Umove<DXUTTextureNode * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXPAPAUDXUTTextureNode@@0@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBE_NPBQAUDXUTTextureNode@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBE_NPBQAUDXUTTextureNode@@@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBE_NPBQAUDXUTTextureNode@@@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXPAPAUDXUTTextureNode@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXPAPAUDXUTTextureNode@@0@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@YAXPAPAUDXUTTextureNode@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTTextureNode *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXPAPAUDXUTTextureNode@@0@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXXZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXPAPAUDXUTTextureNode@@0@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXXZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXABQAUDXUTTextureNode@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXABQAUDXUTTextureNode@@@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTTextureNode@@@std@@YAPBQAUDXUTTextureNode@@ABQAU1@@Z ; std::addressof<DXUTTextureNode * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBE_NPBQAUDXUTTextureNode@@@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTTextureNode@@@std@@YAPBQAUDXUTTextureNode@@ABQAU1@@Z ; std::addressof<DXUTTextureNode * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAUDXUTTextureNode@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXI@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IBEXPAPAUDXUTTextureNode@@0@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAUDXUTTextureNode@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::construct<DXUTTextureNode *,DXUTTextureNode * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXABQAUDXUTTextureNode@@@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEAAPAUDXUTTextureNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEAAPAUDXUTTextureNode@@I@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1MG@LCIEHLLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAN?$AAo@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEAAPAUDXUTTextureNode@@I@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEABQAUDXUTTextureNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEABQAUDXUTTextureNode@@I@Z PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1183
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1185
  00020	8b f4		 mov	 esi, esp
  00022	68 a1 04 00 00	 push	 1185			; 000004a1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 a2 04 00 00	 push	 1186			; 000004a2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 a2 04 00 00	 push	 1186			; 000004a2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1MG@LCIEHLLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAT?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AAN?$AAo@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1193
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1194
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEABQAUDXUTTextureNode@@I@Z ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@PAPAUDXUTTextureNode@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::~vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@IAEXXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::~vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTTextureNode@@@std@@QAE@XZ ; std::allocator<DXUTTextureNode *>::allocator<DXUTTextureNode *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::_Wrap_alloc<std::allocator<DXUTTextureNode *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTTextureNode *> >::_Vector_val<std::_Simple_types<DXUTTextureNode *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTTextureNode@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTTextureNode *,std::allocator<DXUTTextureNode *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTTextureNode *> >::~_Vector_val<std::_Simple_types<DXUTTextureNode *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTTextureNode *> >::~_Vector_val<std::_Simple_types<DXUTTextureNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTTextureNode *> >::_Vector_val<std::_Simple_types<DXUTTextureNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTTextureNode *> >::_Vector_val<std::_Simple_types<DXUTTextureNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTTextureNode@@@2@@Z ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ; std::allocator<DXUTTextureNode *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEPAPAUDXUTTextureNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEPAPAUDXUTTextureNode@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEPAPAUDXUTTextureNode@@I@Z ; std::allocator<DXUTTextureNode *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEPAPAUDXUTTextureNode@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::_Wrap_alloc<std::allocator<DXUTTextureNode *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTTextureNode@@@std@@QAE@XZ ; std::allocator<DXUTTextureNode *>::allocator<DXUTTextureNode *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTTextureNode *> >::_Wrap_alloc<std::allocator<DXUTTextureNode *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTTextureNode@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTTextureNode@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAUDXUTTextureNode@@@std@@QBEIXZ ; std::allocator<DXUTTextureNode *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@SAIABV?$allocator@PAUDXUTTextureNode@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUTTextureNode *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAUDXUTTextureNode@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUDXUTTextureNode@@@std@@QBEIXZ PROC ; std::allocator<DXUTTextureNode *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAUDXUTTextureNode@@@std@@QBEIXZ ENDP ; std::allocator<DXUTTextureNode *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU3@@Z PROC ; std::allocator<DXUTTextureNode *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@ABQAU3@@Z ENDP ; std::allocator<DXUTTextureNode *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEPAPAUDXUTTextureNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEPAPAUDXUTTextureNode@@I@Z PROC ; std::allocator<DXUTTextureNode *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAUDXUTTextureNode@@@std@@YAPAPAUDXUTTextureNode@@IPAPAU1@@Z ; std::_Allocate<DXUTTextureNode *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEPAPAUDXUTTextureNode@@I@Z ENDP ; std::allocator<DXUTTextureNode *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z PROC ; std::allocator<DXUTTextureNode *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUDXUTTextureNode@@@std@@QAEXPAPAUDXUTTextureNode@@I@Z ENDP ; std::allocator<DXUTTextureNode *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAUDXUTTextureNode@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUDXUTTextureNode@@@std@@QAE@XZ PROC	; std::allocator<DXUTTextureNode *>::allocator<DXUTTextureNode *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAUDXUTTextureNode@@@std@@QAE@XZ ENDP	; std::allocator<DXUTTextureNode *>::allocator<DXUTTextureNode *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_SRVDesc$ = -96						; size = 24
_desc$ = -64						; size = 44
_pTextureNode$ = -16					; size = 4
_hr$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_iTexture$ = 8						; size = 4
?CreateTexture11@CDXUTDialogResourceManager@@IAEJI@Z PROC ; CDXUTDialogResourceManager::CreateTexture11
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2796
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 9c	 lea	 edi, DWORD PTR [ebp-100]
  0000c	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2797
  00026	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2799
  0002d	8b 45 08	 mov	 eax, DWORD PTR _iTexture$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0003a	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEAAPAUDXUTTextureNode@@I@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d f0	 mov	 DWORD PTR _pTextureNode$[ebp], ecx
; Line 2801
  00044	8b 55 f0	 mov	 edx, DWORD PTR _pTextureNode$[ebp]
  00047	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0004a	85 c0		 test	 eax, eax
  0004c	75 6c		 jne	 SHORT $LN4@CreateText
; Line 2803
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _pTextureNode$[ebp]
  00051	81 79 08 ff ff
	00 00		 cmp	 DWORD PTR [ecx+8], 65535 ; 0000ffffH
  00058	75 60		 jne	 SHORT $LN4@CreateText
  0005a	8b 55 f0	 mov	 edx, DWORD PTR _pTextureNode$[ebp]
  0005d	81 7a 04 ff ff
	00 00		 cmp	 DWORD PTR [edx+4], 65535 ; 0000ffffH
  00064	75 54		 jne	 SHORT $LN4@CreateText
; Line 2805
  00066	8b 45 f0	 mov	 eax, DWORD PTR _pTextureNode$[ebp]
  00069	05 1c 02 00 00	 add	 eax, 540		; 0000021cH
  0006e	50		 push	 eax
  0006f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ?DXUTCreateGUITextureFromInternalArray@@YGJPAUID3D11Device@@PAPAUID3D11Texture2D@@@Z ; DXUTCreateGUITextureFromInternalArray
  0007b	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2806
  0007e	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00082	7d 1f		 jge	 SHORT $LN2@CreateText
; Line 2807
  00084	6a 00		 push	 0
  00086	68 00 00 00 00	 push	 OFFSET $SG162681
  0008b	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  0008e	50		 push	 eax
  0008f	68 f7 0a 00 00	 push	 2807			; 00000af7H
  00094	68 00 00 00 00	 push	 OFFSET $SG162682
  00099	e8 00 00 00 00	 call	 _DXTraceW@20
  0009e	e9 cd 00 00 00	 jmp	 $LN5@CreateText
$LN2@CreateText:
; Line 2808
  000a3	68 00 00 00 00	 push	 OFFSET $SG162683
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _pTextureNode$[ebp]
  000ab	8b 91 1c 02 00
	00		 mov	 edx, DWORD PTR [ecx+540]
  000b1	52		 push	 edx
  000b2	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  000b7	83 c4 08	 add	 esp, 8
$LN4@CreateText:
; Line 2814
  000ba	8b f4		 mov	 esi, esp
  000bc	8d 45 c0	 lea	 eax, DWORD PTR _desc$[ebp]
  000bf	50		 push	 eax
  000c0	8b 4d f0	 mov	 ecx, DWORD PTR _pTextureNode$[ebp]
  000c3	8b 91 1c 02 00
	00		 mov	 edx, DWORD PTR [ecx+540]
  000c9	8b 45 f0	 mov	 eax, DWORD PTR _pTextureNode$[ebp]
  000cc	8b 88 1c 02 00
	00		 mov	 ecx, DWORD PTR [eax+540]
  000d2	8b 12		 mov	 edx, DWORD PTR [edx]
  000d4	51		 push	 ecx
  000d5	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000d8	ff d0		 call	 eax
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2815
  000e1	8b 4d f0	 mov	 ecx, DWORD PTR _pTextureNode$[ebp]
  000e4	8b 55 c0	 mov	 edx, DWORD PTR _desc$[ebp]
  000e7	89 91 14 02 00
	00		 mov	 DWORD PTR [ecx+532], edx
; Line 2816
  000ed	8b 45 f0	 mov	 eax, DWORD PTR _pTextureNode$[ebp]
  000f0	8b 4d c4	 mov	 ecx, DWORD PTR _desc$[ebp+4]
  000f3	89 88 18 02 00
	00		 mov	 DWORD PTR [eax+536], ecx
; Line 2820
  000f9	c7 45 a4 04 00
	00 00		 mov	 DWORD PTR _SRVDesc$[ebp+4], 4
; Line 2821
  00100	8b 55 d0	 mov	 edx, DWORD PTR _desc$[ebp+16]
  00103	89 55 a0	 mov	 DWORD PTR _SRVDesc$[ebp], edx
; Line 2822
  00106	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR _SRVDesc$[ebp+12], 1
; Line 2823
  0010d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _SRVDesc$[ebp+8], 0
; Line 2824
  00114	8b 45 f0	 mov	 eax, DWORD PTR _pTextureNode$[ebp]
  00117	05 20 02 00 00	 add	 eax, 544		; 00000220H
  0011c	8b f4		 mov	 esi, esp
  0011e	50		 push	 eax
  0011f	8d 4d a0	 lea	 ecx, DWORD PTR _SRVDesc$[ebp]
  00122	51		 push	 ecx
  00123	8b 55 f0	 mov	 edx, DWORD PTR _pTextureNode$[ebp]
  00126	8b 82 1c 02 00
	00		 mov	 eax, DWORD PTR [edx+540]
  0012c	50		 push	 eax
  0012d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00133	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00136	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00139	8b 12		 mov	 edx, DWORD PTR [edx]
  0013b	51		 push	 ecx
  0013c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0013f	ff d0		 call	 eax
  00141	3b f4		 cmp	 esi, esp
  00143	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00148	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2825
  0014b	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0014f	7d 05		 jge	 SHORT $LN1@CreateText
; Line 2826
  00151	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00154	eb 1a		 jmp	 SHORT $LN5@CreateText
$LN1@CreateText:
; Line 2828
  00156	68 00 00 00 00	 push	 OFFSET $SG162688
  0015b	8b 4d f0	 mov	 ecx, DWORD PTR _pTextureNode$[ebp]
  0015e	8b 91 20 02 00
	00		 mov	 edx, DWORD PTR [ecx+544]
  00164	52		 push	 edx
  00165	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0016a	83 c4 08	 add	 esp, 8
; Line 2830
  0016d	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
$LN5@CreateText:
; Line 2831
  00170	52		 push	 edx
  00171	8b cd		 mov	 ecx, ebp
  00173	50		 push	 eax
  00174	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@CreateText
  0017a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0017f	58		 pop	 eax
  00180	5a		 pop	 edx
  00181	5f		 pop	 edi
  00182	5e		 pop	 esi
  00183	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00186	33 cd		 xor	 ecx, ebp
  00188	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018d	83 c4 64	 add	 esp, 100		; 00000064H
  00190	3b ec		 cmp	 ebp, esp
  00192	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00197	8b e5		 mov	 esp, ebp
  00199	5d		 pop	 ebp
  0019a	c2 04 00	 ret	 4
  0019d	8d 49 00	 npad	 3
$LN10@CreateText:
  001a0	02 00 00 00	 DD	 2
  001a4	00 00 00 00	 DD	 $LN9@CreateText
$LN9@CreateText:
  001a8	c0 ff ff ff	 DD	 -64			; ffffffc0H
  001ac	2c 00 00 00	 DD	 44			; 0000002cH
  001b0	00 00 00 00	 DD	 $LN7@CreateText
  001b4	a0 ff ff ff	 DD	 -96			; ffffffa0H
  001b8	18 00 00 00	 DD	 24			; 00000018H
  001bc	00 00 00 00	 DD	 $LN8@CreateText
$LN8@CreateText:
  001c0	53		 DB	 83			; 00000053H
  001c1	52		 DB	 82			; 00000052H
  001c2	56		 DB	 86			; 00000056H
  001c3	44		 DB	 68			; 00000044H
  001c4	65		 DB	 101			; 00000065H
  001c5	73		 DB	 115			; 00000073H
  001c6	63		 DB	 99			; 00000063H
  001c7	00		 DB	 0
$LN7@CreateText:
  001c8	64		 DB	 100			; 00000064H
  001c9	65		 DB	 101			; 00000065H
  001ca	73		 DB	 115			; 00000073H
  001cb	63		 DB	 99			; 00000063H
  001cc	00		 DB	 0
?CreateTexture11@CDXUTDialogResourceManager@@IAEJI@Z ENDP ; CDXUTDialogResourceManager::CreateTexture11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXXZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXXZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXXZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXXZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEII@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEPAPAVCDXUTDialog@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAVCDXUTDialog@@@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEPAPAVCDXUTDialog@@PAPAV2@00@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Umove<CDXUTDialog * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBE_NPBQAVCDXUTDialog@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBE_NPBQAVCDXUTDialog@@@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBE_NPBQAVCDXUTDialog@@@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEII@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEII@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXPAPAVCDXUTDialog@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXPAPAVCDXUTDialog@@0@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@YAXPAPAVCDXUTDialog@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTDialog *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXPAPAVCDXUTDialog@@0@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -32						; size = 4
tv181 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1438
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1441
  0004b	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00053	3b 45 f0	 cmp	 eax, DWORD PTR _this$[ebp]
  00056	75 16		 jne	 SHORT $LN1@erase
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0005e	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00061	72 0b		 jb	 SHORT $LN1@erase
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00069	3b 45 14	 cmp	 eax, DWORD PTR __Where$[ebp+8]
  0006c	77 21		 ja	 SHORT $LN2@erase
$LN1@erase:
; Line 1442
  0006e	8b f4		 mov	 esi, esp
  00070	68 a2 05 00 00	 push	 1442			; 000005a2H
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@erase:
; Line 1443
  0008f	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  00092	51		 push	 ecx
  00093	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00099	50		 push	 eax
  0009a	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0009d	83 c1 04	 add	 ecx, 4
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ??$_Move@PAPAVCDXUTDialog@@PAPAV1@@std@@YAPAPAVCDXUTDialog@@PAPAV1@00@Z ; std::_Move<CDXUTDialog * *,CDXUTDialog * *>
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1444
  000a9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000af	50		 push	 eax
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000b6	83 ea 04	 sub	 edx, 4
  000b9	52		 push	 edx
  000ba	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Destroy
; Line 1445
  000c2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c8	51		 push	 ecx
  000c9	8b 55 14	 mov	 edx, DWORD PTR __Where$[ebp+8]
  000cc	52		 push	 edx
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Orphan_range
; Line 1446
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000db	83 e9 04	 sub	 ecx, 4
  000de	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1447
  000e4	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000e7	8b cc		 mov	 ecx, esp
  000e9	89 65 ec	 mov	 DWORD PTR $T3[ebp], esp
  000ec	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  000f5	89 45 e4	 mov	 DWORD PTR tv181[ebp], eax
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000fb	51		 push	 ecx
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Make_iter
  00104	89 45 e0	 mov	 DWORD PTR tv182[ebp], eax
  00107	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  0010a	83 ca 01	 or	 edx, 1
  0010d	89 55 e8	 mov	 DWORD PTR $T2[ebp], edx
  00110	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00117	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0011a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0011f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1448
  00122	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00125	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012c	59		 pop	 ecx
  0012d	5e		 pop	 esi
  0012e	83 c4 20	 add	 esp, 32			; 00000020H
  00131	3b ec		 cmp	 ebp, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXABQAVCDXUTDialog@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXABQAVCDXUTDialog@@@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAVCDXUTDialog@@@std@@YAPBQAVCDXUTDialog@@ABQAV1@@Z ; std::addressof<CDXUTDialog * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBE_NPBQAVCDXUTDialog@@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAVCDXUTDialog@@@std@@YAPBQAVCDXUTDialog@@ABQAV1@@Z ; std::addressof<CDXUTDialog * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTDialog@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IBEXPAPAVCDXUTDialog@@0@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTDialog@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::construct<CDXUTDialog *,CDXUTDialog * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXABQAVCDXUTDialog@@@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LC@FGIBGBJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAD?$AAi?$AAa?$AAl?$AAo?$AAg?$AA?5?$AA?$CK?$AA?0@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE_NXZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1158
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00020	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00023	75 09		 jne	 SHORT $LN3@empty
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN4@empty
$LN3@empty:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN4@empty:
  00035	8a 45 f8	 mov	 al, BYTE PTR tv75[ebp]
; Line 1159
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?empty@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?crend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?crend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1084
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1085
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?rend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rend
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1086
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?crend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?crbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?crbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1079
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1080
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?rbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rbegin
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1081
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?crbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1074
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1075
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1076
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1069
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1070
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1071
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?rend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?rend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1064
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1065
  0001d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00020	8b c4		 mov	 eax, esp
  00022	89 65 ec	 mov	 DWORD PTR $T1[ebp], esp
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
  0002e	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  00031	e8 00 00 00 00	 call	 ??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0003f	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  00042	e8 00 00 00 00	 call	 ??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ
  00047	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1066
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?rend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?rbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?rbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1054
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1055
  0001d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00020	8b c4		 mov	 eax, esp
  00022	89 65 ec	 mov	 DWORD PTR $T1[ebp], esp
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end
  0002e	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  00031	e8 00 00 00 00	 call	 ??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0003f	8d 4d f0	 lea	 ecx, DWORD PTR $T2[ebp]
  00042	e8 00 00 00 00	 call	 ??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ
  00047	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1056
  0004a	83 c4 14	 add	 esp, 20			; 00000014H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?rbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::rbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1044
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1045
  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0004b	51		 push	 ecx
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  00054	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp]
  00057	83 ca 01	 or	 edx, 1
  0005a	89 55 ec	 mov	 DWORD PTR $T2[ebp], edx
  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00067	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0006c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1046
  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	83 c4 14	 add	 esp, 20			; 00000014H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Make_iter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1040
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1030
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@PAPAVCDXUTDialog@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::~vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@IAEXXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::~vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ PROC ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAVCDXUTDialog@@@std@@QAE@XZ ; std::allocator<CDXUTDialog *>::allocator<CDXUTDialog *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::_Wrap_alloc<std::allocator<CDXUTDialog *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTDialog *> >::_Vector_val<std::_Simple_types<CDXUTDialog *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTDialog@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTDialog *,std::allocator<CDXUTDialog *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CDXUTDialog *> >::~_Vector_val<std::_Simple_types<CDXUTDialog *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CDXUTDialog *> >::~_Vector_val<std::_Simple_types<CDXUTDialog *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CDXUTDialog *> >::_Vector_val<std::_Simple_types<CDXUTDialog *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CDXUTDialog *> >::_Vector_val<std::_Simple_types<CDXUTDialog *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAIABV?$allocator@PAVCDXUTDialog@@@2@@Z ; std::allocator_traits<std::allocator<CDXUTDialog *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ; std::allocator<CDXUTDialog *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEPAPAVCDXUTDialog@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEPAPAVCDXUTDialog@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAVCDXUTDialog@@@std@@QAEPAPAVCDXUTDialog@@I@Z ; std::allocator<CDXUTDialog *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEPAPAVCDXUTDialog@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::_Wrap_alloc<std::allocator<CDXUTDialog *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAVCDXUTDialog@@@std@@QAE@XZ ; std::allocator<CDXUTDialog *>::allocator<CDXUTDialog *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<CDXUTDialog *> >::_Wrap_alloc<std::allocator<CDXUTDialog *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAIABV?$allocator@PAVCDXUTDialog@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAIABV?$allocator@PAVCDXUTDialog@@@2@@Z PROC ; std::allocator_traits<std::allocator<CDXUTDialog *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAVCDXUTDialog@@@std@@QBEIXZ ; std::allocator<CDXUTDialog *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAVCDXUTDialog@@@std@@@std@@SAIABV?$allocator@PAVCDXUTDialog@@@2@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTDialog *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAVCDXUTDialog@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVCDXUTDialog@@@std@@QBEIXZ PROC	; std::allocator<CDXUTDialog *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAVCDXUTDialog@@@std@@QBEIXZ ENDP	; std::allocator<CDXUTDialog *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV3@@Z PROC ; std::allocator<CDXUTDialog *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@ABQAV3@@Z ENDP ; std::allocator<CDXUTDialog *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAVCDXUTDialog@@@std@@QAEPAPAVCDXUTDialog@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCDXUTDialog@@@std@@QAEPAPAVCDXUTDialog@@I@Z PROC ; std::allocator<CDXUTDialog *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAVCDXUTDialog@@@std@@YAPAPAVCDXUTDialog@@IPAPAV1@@Z ; std::_Allocate<CDXUTDialog *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAVCDXUTDialog@@@std@@QAEPAPAVCDXUTDialog@@I@Z ENDP ; std::allocator<CDXUTDialog *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@I@Z PROC ; std::allocator<CDXUTDialog *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCDXUTDialog@@@std@@QAEXPAPAVCDXUTDialog@@I@Z ENDP ; std::allocator<CDXUTDialog *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAVCDXUTDialog@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVCDXUTDialog@@@std@@QAE@XZ PROC	; std::allocator<CDXUTDialog *>::allocator<CDXUTDialog *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAVCDXUTDialog@@@std@@QAE@XZ ENDP	; std::allocator<CDXUTDialog *>::allocator<CDXUTDialog *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 77		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXPAUDXUTSpriteVertex@@0@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	8b c1		 mov	 eax, ecx
  00057	99		 cdq
  00058	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0005d	f7 f9		 idiv	 ecx
  0005f	50		 push	 eax
  00060	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00063	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00066	50		 push	 eax
  00067	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0006a	51		 push	 ecx
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::deallocate
; Line 1629
  0007a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00098	5e		 pop	 esi
  00099	83 c4 08	 add	 esp, 8
  0009c	3b ec		 cmp	 ebp, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
?_Tidy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEII@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEPAUDXUTSpriteVertex@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAUDXUTSpriteVertex@@@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEPAUDXUTSpriteVertex@@PAU2@00@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Umove<DXUTSpriteVertex *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 45		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXPAUDXUTSpriteVertex@@0@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000ea	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  000ed	99		 cdq
  000ee	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  000f3	f7 f9		 idiv	 ecx
  000f5	50		 push	 eax
  000f6	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000f9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000fc	50		 push	 eax
  000fd	8d 4d e1	 lea	 ecx, DWORD PTR $T2[ebp]
  00100	51		 push	 ecx
  00101	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
  00109	8b c8		 mov	 ecx, eax
  0010b	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::deallocate
$LN1@Reallocate:
; Line 1605
  00110	8b f4		 mov	 esi, esp
  00112	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0011b	3b f4		 cmp	 esi, esp
  0011d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  00122	6b 55 08 24	 imul	 edx, DWORD PTR __Count$[ebp], 36
  00126	03 55 e8	 add	 edx, DWORD PTR __Ptr$[ebp]
  00129	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0012c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012f	6b 4d e4 24	 imul	 ecx, DWORD PTR __Size$[ebp], 36
  00133	03 4d e8	 add	 ecx, DWORD PTR __Ptr$[ebp]
  00136	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00139	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1608
  0013c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013f	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00142	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00145	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00148	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014f	59		 pop	 ecx
  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	83 c4 20	 add	 esp, 32			; 00000020H
  00156	3b ec		 cmp	 ebp, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	8b e5		 mov	 esp, ebp
  0015f	5d		 pop	 ebp
  00160	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBE_NPBUDXUTSpriteVertex@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBE_NPBUDXUTSpriteVertex@@@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBE_NPBUDXUTSpriteVertex@@@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXPAUDXUTSpriteVertex@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXPAUDXUTSpriteVertex@@0@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@YAXPAUDXUTSpriteVertex@@0AAU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXPAUDXUTSpriteVertex@@0@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXPAUDXUTSpriteVertex@@0@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@$$CBUDXUTSpriteVertex@@@std@@YAPBUDXUTSpriteVertex@@ABU1@@Z ; std::addressof<DXUTSpriteVertex const >
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBE_NPBUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	0f 84 81 00 00
	00		 je	 $LN4@push_back
; Line 1246
  0003e	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBUDXUTSpriteVertex@@@std@@YAPBUDXUTSpriteVertex@@ABU1@@Z ; std::addressof<DXUTSpriteVertex const >
  00047	83 c4 04	 add	 esp, 4
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00050	99		 cdq
  00051	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00056	f7 f9		 idiv	 ecx
  00058	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  0005b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00064	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00067	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00069	6a 01		 push	 1
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reserve
$LN3@push_back:
; Line 1249
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00080	52		 push	 edx
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Orphan_range
; Line 1251
  00089	6b 45 f8 24	 imul	 eax, DWORD PTR __Idx$3[ebp], 36
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00093	50		 push	 eax
  00094	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00097	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009a	50		 push	 eax
  0009b	8d 4d f7	 lea	 ecx, DWORD PTR $T2[ebp]
  0009e	51		 push	 ecx
  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@AAU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex &>
; Line 1252
  000ae	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000b4	83 c0 24	 add	 eax, 36			; 00000024H
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1254
  000bd	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000c8	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  000cb	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000cd	6a 01		 push	 1
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXI@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Reserve
$LN1@push_back:
; Line 1258
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000da	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000dd	50		 push	 eax
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000e4	52		 push	 edx
  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IBEXPAUDXUTSpriteVertex@@0@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Orphan_range
; Line 1260
  000ed	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000f7	52		 push	 edx
  000f8	8d 45 f6	 lea	 eax, DWORD PTR $T1[ebp]
  000fb	50		 push	 eax
  000fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ??$construct@UDXUTSpriteVertex@@ABU1@@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::construct<DXUTSpriteVertex,DXUTSpriteVertex const &>
; Line 1261
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00111	83 c2 24	 add	 edx, 36			; 00000024H
  00114	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00117	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 1263
  0011a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011d	3b ec		 cmp	 ebp, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 04 00	 ret	 4
?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEAAUDXUTSpriteVertex@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEAAUDXUTSpriteVertex@@I@Z PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1MC@PPMNDGOK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAX?$AAU?$AAT?$AAS?$AAp?$AAr?$AAi?$AAt?$AAe?$AAV?$AAe?$AAr@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	6b 45 08 24	 imul	 eax, DWORD PTR __Pos$[ebp], 36
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	03 41 04	 add	 eax, DWORD PTR [ecx+4]
; Line 1210
  000b0	5e		 pop	 esi
  000b1	83 c4 04	 add	 esp, 4
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 04 00	 ret	 4
??A?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEAAUDXUTSpriteVertex@@I@Z ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBE_NXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1158
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00020	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00023	75 09		 jne	 SHORT $LN3@empty
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN4@empty
$LN3@empty:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN4@empty:
  00035	8a 45 f8	 mov	 al, BYTE PTR tv75[ebp]
; Line 1159
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?empty@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBE_NXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	99		 cdq
  0001b	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00020	f7 f9		 idiv	 ecx
; Line 1149
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	99		 cdq
  0001b	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00020	f7 f9		 idiv	 ecx
; Line 1016
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?_Unused_capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	99		 cdq
  0001b	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00020	f7 f9		 idiv	 ecx
; Line 1011
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?capacity@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::~vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@IAEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::~vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@UDXUTSpriteVertex@@@std@@QAE@XZ ; std::allocator<DXUTSpriteVertex>::allocator<DXUTSpriteVertex>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@@std@@QAE@ABV?$allocator@UDXUTSpriteVertex@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >::~_Vector_val<std::_Simple_types<DXUTSpriteVertex> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >::~_Vector_val<std::_Simple_types<DXUTSpriteVertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >::_Vector_val<std::_Simple_types<DXUTSpriteVertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAIABV?$allocator@UDXUTSpriteVertex@@@2@@Z ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ; std::allocator<DXUTSpriteVertex>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEPAUDXUTSpriteVertex@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEPAUDXUTSpriteVertex@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEPAUDXUTSpriteVertex@@I@Z ; std::allocator<DXUTSpriteVertex>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEPAUDXUTSpriteVertex@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@UDXUTSpriteVertex@@@std@@QAE@XZ ; std::allocator<DXUTSpriteVertex>::allocator<DXUTSpriteVertex>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >::_Wrap_alloc<std::allocator<DXUTSpriteVertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAIABV?$allocator@UDXUTSpriteVertex@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAIABV?$allocator@UDXUTSpriteVertex@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@UDXUTSpriteVertex@@@std@@QBEIXZ ; std::allocator<DXUTSpriteVertex>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@SAIABV?$allocator@UDXUTSpriteVertex@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUTSpriteVertex> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@UDXUTSpriteVertex@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UDXUTSpriteVertex@@@std@@QBEIXZ PROC ; std::allocator<DXUTSpriteVertex>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 c7 71 1c 07	 mov	 eax, 119304647		; 071c71c7H
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@UDXUTSpriteVertex@@@std@@QBEIXZ ENDP ; std::allocator<DXUTSpriteVertex>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@ABU3@@Z
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@ABU3@@Z PROC ; std::allocator<DXUTSpriteVertex>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000f	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00016	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  00020	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00023	50		 push	 eax
  00024	6a 24		 push	 36			; 00000024H
  00026	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00031	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00035	74 15		 je	 SHORT $LN3@construct
  00037	b9 09 00 00 00	 mov	 ecx, 9
  0003c	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  0003f	8b 7d f8	 mov	 edi, DWORD PTR $T1[ebp]
  00042	f3 a5		 rep movsd
  00044	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00047	89 4d f4	 mov	 DWORD PTR tv69[ebp], ecx
  0004a	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0004c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?construct@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@ABU3@@Z ENDP ; std::allocator<DXUTSpriteVertex>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEPAUDXUTSpriteVertex@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEPAUDXUTSpriteVertex@@I@Z PROC ; std::allocator<DXUTSpriteVertex>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@UDXUTSpriteVertex@@@std@@YAPAUDXUTSpriteVertex@@IPAU1@@Z ; std::_Allocate<DXUTSpriteVertex>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEPAUDXUTSpriteVertex@@I@Z ENDP ; std::allocator<DXUTSpriteVertex>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z PROC ; std::allocator<DXUTSpriteVertex>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@UDXUTSpriteVertex@@@std@@QAEXPAUDXUTSpriteVertex@@I@Z ENDP ; std::allocator<DXUTSpriteVertex>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UDXUTSpriteVertex@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UDXUTSpriteVertex@@@std@@QAE@XZ PROC	; std::allocator<DXUTSpriteVertex>::allocator<DXUTSpriteVertex>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@UDXUTSpriteVertex@@@std@@QAE@XZ ENDP	; std::allocator<DXUTSpriteVertex>::allocator<DXUTSpriteVertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv95 = -60						; size = 4
tv66 = -56						; size = 4
$T2 = -52						; size = 12
$T3 = -37						; size = 1
_it$4 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ PROC ; CDXUTDialogResourceManager::EnableKeyboardInputForAllDialogs
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2661
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2663
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$4[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00044	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00050	eb 08		 jmp	 SHORT $LN3@EnableKeyb
$LN2@EnableKeyb:
  00052	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00055	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
$LN3@EnableKeyb:
  0005a	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0005d	51		 push	 ecx
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00064	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::end
  00069	89 45 c8	 mov	 DWORD PTR tv66[ebp], eax
  0006c	8b 55 c8	 mov	 edx, DWORD PTR tv66[ebp]
  0006f	89 55 c4	 mov	 DWORD PTR tv95[ebp], edx
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	8b 45 c4	 mov	 eax, DWORD PTR tv95[ebp]
  00079	50		 push	 eax
  0007a	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  0007d	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
  00082	88 45 db	 mov	 BYTE PTR $T3[ebp], al
  00085	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00089	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0008c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00091	0f b6 4d db	 movzx	 ecx, BYTE PTR $T3[ebp]
  00095	85 c9		 test	 ecx, ecx
  00097	74 13		 je	 SHORT $LN1@EnableKeyb
; Line 2664
  00099	6a 01		 push	 1
  0009b	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  0009e	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEAAPAVCDXUTDialog@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	e8 00 00 00 00	 call	 ?EnableKeyboardInput@CDXUTDialog@@QAEX_N@Z ; CDXUTDialog::EnableKeyboardInput
  000aa	eb a6		 jmp	 SHORT $LN2@EnableKeyb
$LN1@EnableKeyb:
  000ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b3	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000b6	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
; Line 2665
  000bb	52		 push	 edx
  000bc	8b cd		 mov	 ecx, ebp
  000be	50		 push	 eax
  000bf	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@EnableKeyb
  000c5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ca	58		 pop	 eax
  000cb	5a		 pop	 edx
  000cc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d6	59		 pop	 ecx
  000d7	5f		 pop	 edi
  000d8	83 c4 3c	 add	 esp, 60			; 0000003cH
  000db	3b ec		 cmp	 ebp, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
  000e6	8b ff		 npad	 2
$LN11@EnableKeyb:
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN10@EnableKeyb
$LN10@EnableKeyb:
  000f0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000f4	0c 00 00 00	 DD	 12			; 0000000cH
  000f8	00 00 00 00	 DD	 $LN8@EnableKeyb
$LN8@EnableKeyb:
  000fc	69		 DB	 105			; 00000069H
  000fd	74		 DB	 116			; 00000074H
  000fe	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ ENDP ; CDXUTDialogResourceManager::EnableKeyboardInputForAllDialogs
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv172 = -92						; size = 4
tv171 = -88						; size = 4
tv169 = -84						; size = 4
tv175 = -80						; size = 4
tv167 = -76						; size = 4
tv174 = -72						; size = 4
$T2 = -68						; size = 12
$T3 = -56						; size = 12
$T4 = -44						; size = 12
$T5 = -32						; size = 4
_r$6 = -28						; size = 4
_l$7 = -24						; size = 4
_i$8 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDialog$ = 8						; size = 4
?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z PROC ; CDXUTDialogResourceManager::UnregisterDialog
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00019	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2632
  0003a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$8[ebp], 0
  00041	eb 09		 jmp	 SHORT $LN9@Unregister
$LN8@Unregister:
  00043	8b 45 ec	 mov	 eax, DWORD PTR _i$8[ebp]
  00046	83 c0 01	 add	 eax, 1
  00049	89 45 ec	 mov	 DWORD PTR _i$8[ebp], eax
$LN9@Unregister:
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00052	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  00057	39 45 ec	 cmp	 DWORD PTR _i$8[ebp], eax
  0005a	0f 83 21 01 00
	00		 jae	 $LN10@Unregister
; Line 2634
  00060	8b 4d ec	 mov	 ecx, DWORD PTR _i$8[ebp]
  00063	51		 push	 ecx
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0006a	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	3b 55 08	 cmp	 edx, DWORD PTR _pDialog$[ebp]
  00074	0f 85 02 01 00
	00		 jne	 $LN6@Unregister
; Line 2636
  0007a	8b 45 ec	 mov	 eax, DWORD PTR _i$8[ebp]
  0007d	50		 push	 eax
  0007e	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00081	51		 push	 ecx
  00082	8d 55 d4	 lea	 edx, DWORD PTR $T4[ebp]
  00085	52		 push	 edx
  00086	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0008c	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
  00091	89 45 b8	 mov	 DWORD PTR tv174[ebp], eax
  00094	8b 45 b8	 mov	 eax, DWORD PTR tv174[ebp]
  00097	89 45 b4	 mov	 DWORD PTR tv167[ebp], eax
  0009a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a1	8b 4d b4	 mov	 ecx, DWORD PTR tv167[ebp]
  000a4	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator+
  000a9	89 45 b0	 mov	 DWORD PTR tv175[ebp], eax
  000ac	8b 4d b0	 mov	 ecx, DWORD PTR tv175[ebp]
  000af	89 4d ac	 mov	 DWORD PTR tv169[ebp], ecx
  000b2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b6	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000b9	8b cc		 mov	 ecx, esp
  000bb	89 65 e0	 mov	 DWORD PTR $T5[ebp], esp
  000be	8b 55 ac	 mov	 edx, DWORD PTR tv169[ebp]
  000c1	52		 push	 edx
  000c2	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@ABV01@@Z
  000c7	89 45 a8	 mov	 DWORD PTR tv171[ebp], eax
  000ca	8d 45 bc	 lea	 eax, DWORD PTR $T2[ebp]
  000cd	50		 push	 eax
  000ce	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	83 c1 6c	 add	 ecx, 108		; 0000006cH
  000d4	e8 00 00 00 00	 call	 ?erase@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::erase
  000d9	89 45 a4	 mov	 DWORD PTR tv172[ebp], eax
  000dc	8d 4d bc	 lea	 ecx, DWORD PTR $T2[ebp]
  000df	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000e4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000e8	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  000eb	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000f0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T4[ebp]
  000fa	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
; Line 2637
  000ff	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00105	e8 00 00 00 00	 call	 ?empty@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE_NXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::empty
  0010a	0f b6 c8	 movzx	 ecx, al
  0010d	85 c9		 test	 ecx, ecx
  0010f	75 69		 jne	 SHORT $LN5@Unregister
; Line 2641
  00111	83 7d ec 00	 cmp	 DWORD PTR _i$8[ebp], 0
  00115	75 13		 jne	 SHORT $LN4@Unregister
; Line 2642
  00117	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0011d	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  00122	83 e8 01	 sub	 eax, 1
  00125	89 45 e8	 mov	 DWORD PTR _l$7[ebp], eax
; Line 2643
  00128	eb 09		 jmp	 SHORT $LN3@Unregister
$LN4@Unregister:
; Line 2644
  0012a	8b 55 ec	 mov	 edx, DWORD PTR _i$8[ebp]
  0012d	83 ea 01	 sub	 edx, 1
  00130	89 55 e8	 mov	 DWORD PTR _l$7[ebp], edx
$LN3@Unregister:
; Line 2646
  00133	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00139	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  0013e	3b 45 ec	 cmp	 eax, DWORD PTR _i$8[ebp]
  00141	75 09		 jne	 SHORT $LN2@Unregister
; Line 2647
  00143	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _r$6[ebp], 0
; Line 2648
  0014a	eb 06		 jmp	 SHORT $LN1@Unregister
$LN2@Unregister:
; Line 2649
  0014c	8b 45 ec	 mov	 eax, DWORD PTR _i$8[ebp]
  0014f	89 45 e4	 mov	 DWORD PTR _r$6[ebp], eax
$LN1@Unregister:
; Line 2651
  00152	8b 4d e4	 mov	 ecx, DWORD PTR _r$6[ebp]
  00155	51		 push	 ecx
  00156	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00159	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0015c	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
  00161	8b 10		 mov	 edx, DWORD PTR [eax]
  00163	52		 push	 edx
  00164	8b 45 e8	 mov	 eax, DWORD PTR _l$7[ebp]
  00167	50		 push	 eax
  00168	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0016e	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
  00173	8b 08		 mov	 ecx, DWORD PTR [eax]
  00175	e8 00 00 00 00	 call	 ?SetNextDialog@CDXUTDialog@@AAEXPAV1@@Z ; CDXUTDialog::SetNextDialog
$LN5@Unregister:
; Line 2653
  0017a	eb 05		 jmp	 SHORT $LN10@Unregister
$LN6@Unregister:
; Line 2655
  0017c	e9 c2 fe ff ff	 jmp	 $LN8@Unregister
$LN10@Unregister:
; Line 2656
  00181	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00184	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0018b	59		 pop	 ecx
  0018c	5f		 pop	 edi
  0018d	83 c4 5c	 add	 esp, 92			; 0000005cH
  00190	3b ec		 cmp	 ebp, esp
  00192	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00197	8b e5		 mov	 esp, ebp
  00199	5d		 pop	 ebp
  0019a	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnregisterDialog@CDXUTDialogResourceManager@@QAEXPAVCDXUTDialog@@@Z ENDP ; CDXUTDialogResourceManager::UnregisterDialog
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv149 = -64						; size = 4
tv66 = -60						; size = 4
$T2 = -53						; size = 1
$T3 = -52						; size = 12
$T4 = -37						; size = 1
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDialog$ = 8						; size = 4
?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z PROC ; CDXUTDialogResourceManager::RegisterDialog
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2608
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2610
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$5[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00044	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cbegin
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00050	eb 08		 jmp	 SHORT $LN5@RegisterDi
$LN4@RegisterDi:
  00052	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00055	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
$LN5@RegisterDi:
  0005a	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  0005d	51		 push	 ecx
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00064	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
  00069	89 45 c4	 mov	 DWORD PTR tv66[ebp], eax
  0006c	8b 55 c4	 mov	 edx, DWORD PTR tv66[ebp]
  0006f	89 55 c0	 mov	 DWORD PTR tv149[ebp], edx
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	8b 45 c0	 mov	 eax, DWORD PTR tv149[ebp]
  00079	50		 push	 eax
  0007a	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  0007d	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
  00082	88 45 db	 mov	 BYTE PTR $T4[ebp], al
  00085	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00089	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  0008c	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00091	0f b6 4d db	 movzx	 ecx, BYTE PTR $T4[ebp]
  00095	85 c9		 test	 ecx, ecx
  00097	74 2c		 je	 SHORT $LN3@RegisterDi
; Line 2612
  00099	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  0009c	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
  000a1	8b 10		 mov	 edx, DWORD PTR [eax]
  000a3	3b 55 08	 cmp	 edx, DWORD PTR _pDialog$[ebp]
  000a6	75 1b		 jne	 SHORT $LN2@RegisterDi
; Line 2613
  000a8	c6 45 cb 01	 mov	 BYTE PTR $T2[ebp], 1
  000ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b3	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b6	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000bb	8a 45 cb	 mov	 al, BYTE PTR $T2[ebp]
  000be	e9 88 00 00 00	 jmp	 $LN6@RegisterDi
$LN2@RegisterDi:
; Line 2614
  000c3	eb 8d		 jmp	 SHORT $LN4@RegisterDi
$LN3@RegisterDi:
  000c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cc	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000cf	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
; Line 2617
  000d4	8d 45 08	 lea	 eax, DWORD PTR _pDialog$[ebp]
  000d7	50		 push	 eax
  000d8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	83 c1 6c	 add	 ecx, 108		; 0000006cH
  000de	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEXABQAVCDXUTDialog@@@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::push_back
; Line 2620
  000e3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	83 c1 6c	 add	 ecx, 108		; 0000006cH
  000e9	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  000ee	83 f8 01	 cmp	 eax, 1
  000f1	76 25		 jbe	 SHORT $LN1@RegisterDi
; Line 2621
  000f3	8b 4d 08	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  000f6	51		 push	 ecx
  000f7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	83 c1 6c	 add	 ecx, 108		; 0000006cH
  000fd	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  00102	83 e8 02	 sub	 eax, 2
  00105	50		 push	 eax
  00106	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0010c	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
  00111	8b 08		 mov	 ecx, DWORD PTR [eax]
  00113	e8 00 00 00 00	 call	 ?SetNextDialog@CDXUTDialog@@AAEXPAV1@@Z ; CDXUTDialog::SetNextDialog
$LN1@RegisterDi:
; Line 2622
  00118	6a 00		 push	 0
  0011a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00120	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
  00125	8b 10		 mov	 edx, DWORD PTR [eax]
  00127	52		 push	 edx
  00128	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0012e	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBEIXZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::size
  00133	83 e8 01	 sub	 eax, 1
  00136	50		 push	 eax
  00137	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0013d	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAEAAPAVCDXUTDialog@@I@Z ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::operator[]
  00142	8b 08		 mov	 ecx, DWORD PTR [eax]
  00144	e8 00 00 00 00	 call	 ?SetNextDialog@CDXUTDialog@@AAEXPAV1@@Z ; CDXUTDialog::SetNextDialog
; Line 2624
  00149	b0 01		 mov	 al, 1
$LN6@RegisterDi:
; Line 2625
  0014b	52		 push	 edx
  0014c	8b cd		 mov	 ecx, ebp
  0014e	50		 push	 eax
  0014f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@RegisterDi
  00155	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0015a	58		 pop	 eax
  0015b	5a		 pop	 edx
  0015c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0015f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00166	59		 pop	 ecx
  00167	5f		 pop	 edi
  00168	83 c4 40	 add	 esp, 64			; 00000040H
  0016b	3b ec		 cmp	 ebp, esp
  0016d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c2 04 00	 ret	 4
$LN13@RegisterDi:
  00178	01 00 00 00	 DD	 1
  0017c	00 00 00 00	 DD	 $LN12@RegisterDi
$LN12@RegisterDi:
  00180	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00184	0c 00 00 00	 DD	 12			; 0000000cH
  00188	00 00 00 00	 DD	 $LN10@RegisterDi
$LN10@RegisterDi:
  0018c	69		 DB	 105			; 00000069H
  0018d	74		 DB	 116			; 00000074H
  0018e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z ENDP ; CDXUTDialogResourceManager::RegisterDialog
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -36						; size = 4
_iTexture$ = -32					; size = 4
_pNewTextureNode$ = -24					; size = 4
_nLen$2 = -16						; size = 4
_pTextureNode$3 = -12					; size = 4
_i$4 = -8						; size = 4
_this$ = -4						; size = 4
_strResourceName$ = 8					; size = 4
_hResourceModule$ = 12					; size = 4
?AddTexture@CDXUTDialogResourceManager@@QAEHPB_WPAUHINSTANCE__@@@Z PROC ; CDXUTDialogResourceManager::AddTexture
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2742
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2744
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00031	eb 09		 jmp	 SHORT $LN11@AddTexture
$LN10@AddTexture:
  00033	8b 45 f8	 mov	 eax, DWORD PTR _i$4[ebp]
  00036	83 c0 01	 add	 eax, 1
  00039	89 45 f8	 mov	 DWORD PTR _i$4[ebp], eax
$LN11@AddTexture:
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00045	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  0004a	39 45 f8	 cmp	 DWORD PTR _i$4[ebp], eax
  0004d	0f 83 a2 00 00
	00		 jae	 $LN9@AddTexture
; Line 2746
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _i$4[ebp]
  00056	51		 push	 ecx
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00060	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEAAPAUDXUTTextureNode@@I@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
  00065	8b 10		 mov	 edx, DWORD PTR [eax]
  00067	89 55 f4	 mov	 DWORD PTR _pTextureNode$3[ebp], edx
; Line 2748
  0006a	8b 45 f4	 mov	 eax, DWORD PTR _pTextureNode$3[ebp]
  0006d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00070	85 c9		 test	 ecx, ecx
  00072	75 7c		 jne	 SHORT $LN8@AddTexture
  00074	8b 55 f4	 mov	 edx, DWORD PTR _pTextureNode$3[ebp]
  00077	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0007a	3b 45 0c	 cmp	 eax, DWORD PTR _hResourceModule$[ebp]
  0007d	75 71		 jne	 SHORT $LN8@AddTexture
; Line 2750
  0007f	8b 4d 08	 mov	 ecx, DWORD PTR _strResourceName$[ebp]
  00082	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00085	85 c9		 test	 ecx, ecx
  00087	75 15		 jne	 SHORT $LN7@AddTexture
; Line 2753
  00089	8b 55 f4	 mov	 edx, DWORD PTR _pTextureNode$3[ebp]
  0008c	8b 45 08	 mov	 eax, DWORD PTR _strResourceName$[ebp]
  0008f	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00092	75 08		 jne	 SHORT $LN6@AddTexture
; Line 2754
  00094	8b 45 f8	 mov	 eax, DWORD PTR _i$4[ebp]
  00097	e9 08 01 00 00	 jmp	 $LN12@AddTexture
$LN6@AddTexture:
; Line 2756
  0009c	eb 52		 jmp	 SHORT $LN8@AddTexture
$LN7@AddTexture:
; Line 2759
  0009e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _nLen$2[ebp], 0
; Line 2760
  000a5	8b f4		 mov	 esi, esp
  000a7	68 04 01 00 00	 push	 260			; 00000104H
  000ac	8b 4d 08	 mov	 ecx, DWORD PTR _strResourceName$[ebp]
  000af	51		 push	 ecx
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcsnlen
  000b6	83 c4 08	 add	 esp, 8
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	89 45 f0	 mov	 DWORD PTR _nLen$2[ebp], eax
; Line 2761
  000c3	8b f4		 mov	 esi, esp
  000c5	8b 55 f0	 mov	 edx, DWORD PTR _nLen$2[ebp]
  000c8	52		 push	 edx
  000c9	8b 45 08	 mov	 eax, DWORD PTR _strResourceName$[ebp]
  000cc	50		 push	 eax
  000cd	8b 4d f4	 mov	 ecx, DWORD PTR _pTextureNode$3[ebp]
  000d0	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000d3	51		 push	 ecx
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
  000dd	3b f4		 cmp	 esi, esp
  000df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e4	85 c0		 test	 eax, eax
  000e6	75 08		 jne	 SHORT $LN8@AddTexture
; Line 2762
  000e8	8b 45 f8	 mov	 eax, DWORD PTR _i$4[ebp]
  000eb	e9 b4 00 00 00	 jmp	 $LN12@AddTexture
$LN8@AddTexture:
; Line 2765
  000f0	e9 3e ff ff ff	 jmp	 $LN10@AddTexture
$LN9@AddTexture:
; Line 2768
  000f5	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  000fa	68 24 02 00 00	 push	 548			; 00000224H
  000ff	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00104	83 c4 08	 add	 esp, 8
  00107	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  0010a	8b 55 dc	 mov	 edx, DWORD PTR $T1[ebp]
  0010d	89 55 e8	 mov	 DWORD PTR _pNewTextureNode$[ebp], edx
; Line 2769
  00110	83 7d e8 00	 cmp	 DWORD PTR _pNewTextureNode$[ebp], 0
  00114	75 08		 jne	 SHORT $LN3@AddTexture
; Line 2770
  00116	83 c8 ff	 or	 eax, -1
  00119	e9 86 00 00 00	 jmp	 $LN12@AddTexture
$LN3@AddTexture:
; Line 2772
  0011e	68 24 02 00 00	 push	 548			; 00000224H
  00123	6a 00		 push	 0
  00125	8b 45 e8	 mov	 eax, DWORD PTR _pNewTextureNode$[ebp]
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 _memset
  0012e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2773
  00131	8b 4d e8	 mov	 ecx, DWORD PTR _pNewTextureNode$[ebp]
  00134	8b 55 0c	 mov	 edx, DWORD PTR _hResourceModule$[ebp]
  00137	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 2774
  0013a	8b 45 08	 mov	 eax, DWORD PTR _strResourceName$[ebp]
  0013d	c1 e8 10	 shr	 eax, 16			; 00000010H
  00140	85 c0		 test	 eax, eax
  00142	75 0b		 jne	 SHORT $LN2@AddTexture
; Line 2776
  00144	8b 4d e8	 mov	 ecx, DWORD PTR _pNewTextureNode$[ebp]
  00147	8b 55 08	 mov	 edx, DWORD PTR _strResourceName$[ebp]
  0014a	89 51 08	 mov	 DWORD PTR [ecx+8], edx
; Line 2778
  0014d	eb 2c		 jmp	 SHORT $LN1@AddTexture
$LN2@AddTexture:
; Line 2780
  0014f	8b 45 e8	 mov	 eax, DWORD PTR _pNewTextureNode$[ebp]
  00152	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 2781
  00159	8b f4		 mov	 esi, esp
  0015b	8b 4d 08	 mov	 ecx, DWORD PTR _strResourceName$[ebp]
  0015e	51		 push	 ecx
  0015f	68 04 01 00 00	 push	 260			; 00000104H
  00164	8b 55 e8	 mov	 edx, DWORD PTR _pNewTextureNode$[ebp]
  00167	83 c2 0c	 add	 edx, 12			; 0000000cH
  0016a	52		 push	 edx
  0016b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00171	83 c4 0c	 add	 esp, 12			; 0000000cH
  00174	3b f4		 cmp	 esi, esp
  00176	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@AddTexture:
; Line 2784
  0017b	8d 45 e8	 lea	 eax, DWORD PTR _pNewTextureNode$[ebp]
  0017e	50		 push	 eax
  0017f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00188	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXABQAUDXUTTextureNode@@@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::push_back
; Line 2786
  0018d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00190	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00196	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  0019b	83 e8 01	 sub	 eax, 1
  0019e	89 45 e0	 mov	 DWORD PTR _iTexture$[ebp], eax
; Line 2790
  001a1	8b 45 e0	 mov	 eax, DWORD PTR _iTexture$[ebp]
$LN12@AddTexture:
; Line 2791
  001a4	52		 push	 edx
  001a5	8b cd		 mov	 ecx, ebp
  001a7	50		 push	 eax
  001a8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@AddTexture
  001ae	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001b3	58		 pop	 eax
  001b4	5a		 pop	 edx
  001b5	5e		 pop	 esi
  001b6	83 c4 24	 add	 esp, 36			; 00000024H
  001b9	3b ec		 cmp	 ebp, esp
  001bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c0	8b e5		 mov	 esp, ebp
  001c2	5d		 pop	 ebp
  001c3	c2 08 00	 ret	 8
  001c6	8b ff		 npad	 2
$LN16@AddTexture:
  001c8	01 00 00 00	 DD	 1
  001cc	00 00 00 00	 DD	 $LN15@AddTexture
$LN15@AddTexture:
  001d0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  001d4	04 00 00 00	 DD	 4
  001d8	00 00 00 00	 DD	 $LN14@AddTexture
$LN14@AddTexture:
  001dc	70		 DB	 112			; 00000070H
  001dd	4e		 DB	 78			; 0000004eH
  001de	65		 DB	 101			; 00000065H
  001df	77		 DB	 119			; 00000077H
  001e0	54		 DB	 84			; 00000054H
  001e1	65		 DB	 101			; 00000065H
  001e2	78		 DB	 120			; 00000078H
  001e3	74		 DB	 116			; 00000074H
  001e4	75		 DB	 117			; 00000075H
  001e5	72		 DB	 114			; 00000072H
  001e6	65		 DB	 101			; 00000065H
  001e7	4e		 DB	 78			; 0000004eH
  001e8	6f		 DB	 111			; 0000006fH
  001e9	64		 DB	 100			; 00000064H
  001ea	65		 DB	 101			; 00000065H
  001eb	00		 DB	 0
?AddTexture@CDXUTDialogResourceManager@@QAEHPB_WPAUHINSTANCE__@@@Z ENDP ; CDXUTDialogResourceManager::AddTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -36						; size = 4
_iTexture$ = -32					; size = 4
_pNewTextureNode$ = -24					; size = 4
_nLen$2 = -16						; size = 4
_pTextureNode$3 = -12					; size = 4
_i$4 = -8						; size = 4
_this$ = -4						; size = 4
_strFilename$ = 8					; size = 4
?AddTexture@CDXUTDialogResourceManager@@QAEHPB_W@Z PROC	; CDXUTDialogResourceManager::AddTexture
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2706
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2708
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00031	eb 09		 jmp	 SHORT $LN5@AddTexture
$LN4@AddTexture:
  00033	8b 45 f8	 mov	 eax, DWORD PTR _i$4[ebp]
  00036	83 c0 01	 add	 eax, 1
  00039	89 45 f8	 mov	 DWORD PTR _i$4[ebp], eax
$LN5@AddTexture:
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00045	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  0004a	39 45 f8	 cmp	 DWORD PTR _i$4[ebp], eax
  0004d	73 78		 jae	 SHORT $LN3@AddTexture
; Line 2710
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _i$4[ebp]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0005c	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEAAPAUDXUTTextureNode@@I@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
  00061	8b 10		 mov	 edx, DWORD PTR [eax]
  00063	89 55 f4	 mov	 DWORD PTR _pTextureNode$3[ebp], edx
; Line 2711
  00066	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _nLen$2[ebp], 0
; Line 2712
  0006d	8b f4		 mov	 esi, esp
  0006f	68 04 01 00 00	 push	 260			; 00000104H
  00074	8b 45 08	 mov	 eax, DWORD PTR _strFilename$[ebp]
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcsnlen
  0007e	83 c4 08	 add	 esp, 8
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	89 45 f0	 mov	 DWORD PTR _nLen$2[ebp], eax
; Line 2714
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR _pTextureNode$3[ebp]
  0008e	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00091	85 d2		 test	 edx, edx
  00093	74 2d		 je	 SHORT $LN2@AddTexture
  00095	8b f4		 mov	 esi, esp
  00097	8b 45 f0	 mov	 eax, DWORD PTR _nLen$2[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _strFilename$[ebp]
  0009e	51		 push	 ecx
  0009f	8b 55 f4	 mov	 edx, DWORD PTR _pTextureNode$3[ebp]
  000a2	83 c2 0c	 add	 edx, 12			; 0000000cH
  000a5	52		 push	 edx
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  000ac	83 c4 0c	 add	 esp, 12			; 0000000cH
  000af	3b f4		 cmp	 esi, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	85 c0		 test	 eax, eax
  000b8	75 08		 jne	 SHORT $LN2@AddTexture
; Line 2716
  000ba	8b 45 f8	 mov	 eax, DWORD PTR _i$4[ebp]
  000bd	e9 8f 00 00 00	 jmp	 $LN6@AddTexture
$LN2@AddTexture:
; Line 2718
  000c2	e9 6c ff ff ff	 jmp	 $LN4@AddTexture
$LN3@AddTexture:
; Line 2721
  000c7	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  000cc	68 24 02 00 00	 push	 548			; 00000224H
  000d1	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  000d6	83 c4 08	 add	 esp, 8
  000d9	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  000dc	8b 45 dc	 mov	 eax, DWORD PTR $T1[ebp]
  000df	89 45 e8	 mov	 DWORD PTR _pNewTextureNode$[ebp], eax
; Line 2722
  000e2	83 7d e8 00	 cmp	 DWORD PTR _pNewTextureNode$[ebp], 0
  000e6	75 05		 jne	 SHORT $LN1@AddTexture
; Line 2723
  000e8	83 c8 ff	 or	 eax, -1
  000eb	eb 64		 jmp	 SHORT $LN6@AddTexture
$LN1@AddTexture:
; Line 2725
  000ed	68 24 02 00 00	 push	 548			; 00000224H
  000f2	6a 00		 push	 0
  000f4	8b 4d e8	 mov	 ecx, DWORD PTR _pNewTextureNode$[ebp]
  000f7	51		 push	 ecx
  000f8	e8 00 00 00 00	 call	 _memset
  000fd	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2726
  00100	8b 55 e8	 mov	 edx, DWORD PTR _pNewTextureNode$[ebp]
  00103	c6 02 01	 mov	 BYTE PTR [edx], 1
; Line 2727
  00106	8b f4		 mov	 esi, esp
  00108	8b 45 08	 mov	 eax, DWORD PTR _strFilename$[ebp]
  0010b	50		 push	 eax
  0010c	68 04 01 00 00	 push	 260			; 00000104H
  00111	8b 4d e8	 mov	 ecx, DWORD PTR _pNewTextureNode$[ebp]
  00114	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00117	51		 push	 ecx
  00118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0011e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00121	3b f4		 cmp	 esi, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2729
  00128	8d 55 e8	 lea	 edx, DWORD PTR _pNewTextureNode$[ebp]
  0012b	52		 push	 edx
  0012c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012f	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00135	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXABQAUDXUTTextureNode@@@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::push_back
; Line 2731
  0013a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00143	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  00148	83 e8 01	 sub	 eax, 1
  0014b	89 45 e0	 mov	 DWORD PTR _iTexture$[ebp], eax
; Line 2735
  0014e	8b 45 e0	 mov	 eax, DWORD PTR _iTexture$[ebp]
$LN6@AddTexture:
; Line 2736
  00151	52		 push	 edx
  00152	8b cd		 mov	 ecx, ebp
  00154	50		 push	 eax
  00155	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@AddTexture
  0015b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00160	58		 pop	 eax
  00161	5a		 pop	 edx
  00162	5e		 pop	 esi
  00163	83 c4 24	 add	 esp, 36			; 00000024H
  00166	3b ec		 cmp	 ebp, esp
  00168	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016d	8b e5		 mov	 esp, ebp
  0016f	5d		 pop	 ebp
  00170	c2 04 00	 ret	 4
  00173	90		 npad	 1
$LN10@AddTexture:
  00174	01 00 00 00	 DD	 1
  00178	00 00 00 00	 DD	 $LN9@AddTexture
$LN9@AddTexture:
  0017c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00180	04 00 00 00	 DD	 4
  00184	00 00 00 00	 DD	 $LN8@AddTexture
$LN8@AddTexture:
  00188	70		 DB	 112			; 00000070H
  00189	4e		 DB	 78			; 0000004eH
  0018a	65		 DB	 101			; 00000065H
  0018b	77		 DB	 119			; 00000077H
  0018c	54		 DB	 84			; 00000054H
  0018d	65		 DB	 101			; 00000065H
  0018e	78		 DB	 120			; 00000078H
  0018f	74		 DB	 116			; 00000074H
  00190	75		 DB	 117			; 00000075H
  00191	72		 DB	 114			; 00000072H
  00192	65		 DB	 101			; 00000065H
  00193	4e		 DB	 78			; 0000004eH
  00194	6f		 DB	 111			; 0000006fH
  00195	64		 DB	 100			; 00000064H
  00196	65		 DB	 101			; 00000065H
  00197	00		 DB	 0
?AddTexture@CDXUTDialogResourceManager@@QAEHPB_W@Z ENDP	; CDXUTDialogResourceManager::AddTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -36						; size = 4
_iFont$ = -32						; size = 4
_pNewFontNode$ = -24					; size = 4
_nLen$2 = -16						; size = 4
_pFontNode$3 = -12					; size = 4
_i$4 = -8						; size = 4
_this$ = -4						; size = 4
_strFaceName$ = 8					; size = 4
_height$ = 12						; size = 4
_weight$ = 16						; size = 4
?AddFont@CDXUTDialogResourceManager@@QAEHPB_WJJ@Z PROC	; CDXUTDialogResourceManager::AddFont
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2671
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00027	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2673
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00031	eb 09		 jmp	 SHORT $LN5@AddFont
$LN4@AddFont:
  00033	8b 45 f8	 mov	 eax, DWORD PTR _i$4[ebp]
  00036	83 c0 01	 add	 eax, 1
  00039	89 45 f8	 mov	 DWORD PTR _i$4[ebp], eax
$LN5@AddFont:
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00045	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
  0004a	39 45 f8	 cmp	 DWORD PTR _i$4[ebp], eax
  0004d	0f 83 87 00 00
	00		 jae	 $LN3@AddFont
; Line 2675
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _i$4[ebp]
  00056	51		 push	 ecx
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00060	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEAAPAUDXUTFontNode@@I@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[]
  00065	8b 10		 mov	 edx, DWORD PTR [eax]
  00067	89 55 f4	 mov	 DWORD PTR _pFontNode$3[ebp], edx
; Line 2676
  0006a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _nLen$2[ebp], 0
; Line 2677
  00071	8b f4		 mov	 esi, esp
  00073	68 04 01 00 00	 push	 260			; 00000104H
  00078	8b 45 08	 mov	 eax, DWORD PTR _strFaceName$[ebp]
  0007b	50		 push	 eax
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcsnlen
  00082	83 c4 08	 add	 esp, 8
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	89 45 f0	 mov	 DWORD PTR _nLen$2[ebp], eax
; Line 2680
  0008f	8b f4		 mov	 esi, esp
  00091	8b 4d f0	 mov	 ecx, DWORD PTR _nLen$2[ebp]
  00094	51		 push	 ecx
  00095	8b 55 08	 mov	 edx, DWORD PTR _strFaceName$[ebp]
  00098	52		 push	 edx
  00099	8b 45 f4	 mov	 eax, DWORD PTR _pFontNode$3[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wcsnicmp
  000a3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	85 c0		 test	 eax, eax
  000af	75 24		 jne	 SHORT $LN2@AddFont
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR _pFontNode$3[ebp]
  000b4	8b 91 08 02 00
	00		 mov	 edx, DWORD PTR [ecx+520]
  000ba	3b 55 0c	 cmp	 edx, DWORD PTR _height$[ebp]
  000bd	75 16		 jne	 SHORT $LN2@AddFont
  000bf	8b 45 f4	 mov	 eax, DWORD PTR _pFontNode$3[ebp]
  000c2	8b 88 0c 02 00
	00		 mov	 ecx, DWORD PTR [eax+524]
  000c8	3b 4d 10	 cmp	 ecx, DWORD PTR _weight$[ebp]
  000cb	75 08		 jne	 SHORT $LN2@AddFont
; Line 2682
  000cd	8b 45 f8	 mov	 eax, DWORD PTR _i$4[ebp]
  000d0	e9 9e 00 00 00	 jmp	 $LN6@AddFont
$LN2@AddFont:
; Line 2684
  000d5	e9 59 ff ff ff	 jmp	 $LN4@AddFont
$LN3@AddFont:
; Line 2687
  000da	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  000df	68 10 02 00 00	 push	 528			; 00000210H
  000e4	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  000e9	83 c4 08	 add	 esp, 8
  000ec	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  000ef	8b 55 dc	 mov	 edx, DWORD PTR $T1[ebp]
  000f2	89 55 e8	 mov	 DWORD PTR _pNewFontNode$[ebp], edx
; Line 2688
  000f5	83 7d e8 00	 cmp	 DWORD PTR _pNewFontNode$[ebp], 0
  000f9	75 05		 jne	 SHORT $LN1@AddFont
; Line 2689
  000fb	83 c8 ff	 or	 eax, -1
  000fe	eb 73		 jmp	 SHORT $LN6@AddFont
$LN1@AddFont:
; Line 2691
  00100	68 10 02 00 00	 push	 528			; 00000210H
  00105	6a 00		 push	 0
  00107	8b 45 e8	 mov	 eax, DWORD PTR _pNewFontNode$[ebp]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 _memset
  00110	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2692
  00113	8b f4		 mov	 esi, esp
  00115	8b 4d 08	 mov	 ecx, DWORD PTR _strFaceName$[ebp]
  00118	51		 push	 ecx
  00119	68 04 01 00 00	 push	 260			; 00000104H
  0011e	8b 55 e8	 mov	 edx, DWORD PTR _pNewFontNode$[ebp]
  00121	52		 push	 edx
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  00128	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012b	3b f4		 cmp	 esi, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2693
  00132	8b 45 e8	 mov	 eax, DWORD PTR _pNewFontNode$[ebp]
  00135	8b 4d 0c	 mov	 ecx, DWORD PTR _height$[ebp]
  00138	89 88 08 02 00
	00		 mov	 DWORD PTR [eax+520], ecx
; Line 2694
  0013e	8b 55 e8	 mov	 edx, DWORD PTR _pNewFontNode$[ebp]
  00141	8b 45 10	 mov	 eax, DWORD PTR _weight$[ebp]
  00144	89 82 0c 02 00
	00		 mov	 DWORD PTR [edx+524], eax
; Line 2695
  0014a	8d 4d e8	 lea	 ecx, DWORD PTR _pNewFontNode$[ebp]
  0014d	51		 push	 ecx
  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00157	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXABQAUDXUTFontNode@@@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::push_back
; Line 2697
  0015c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00165	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::size
  0016a	83 e8 01	 sub	 eax, 1
  0016d	89 45 e0	 mov	 DWORD PTR _iFont$[ebp], eax
; Line 2700
  00170	8b 45 e0	 mov	 eax, DWORD PTR _iFont$[ebp]
$LN6@AddFont:
; Line 2701
  00173	52		 push	 edx
  00174	8b cd		 mov	 ecx, ebp
  00176	50		 push	 eax
  00177	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@AddFont
  0017d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00182	58		 pop	 eax
  00183	5a		 pop	 edx
  00184	5e		 pop	 esi
  00185	83 c4 24	 add	 esp, 36			; 00000024H
  00188	3b ec		 cmp	 ebp, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	8b e5		 mov	 esp, ebp
  00191	5d		 pop	 ebp
  00192	c2 0c 00	 ret	 12			; 0000000cH
  00195	8d 49 00	 npad	 3
$LN10@AddFont:
  00198	01 00 00 00	 DD	 1
  0019c	00 00 00 00	 DD	 $LN9@AddFont
$LN9@AddFont:
  001a0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  001a4	04 00 00 00	 DD	 4
  001a8	00 00 00 00	 DD	 $LN8@AddFont
$LN8@AddFont:
  001ac	70		 DB	 112			; 00000070H
  001ad	4e		 DB	 78			; 0000004eH
  001ae	65		 DB	 101			; 00000065H
  001af	77		 DB	 119			; 00000077H
  001b0	46		 DB	 70			; 00000046H
  001b1	6f		 DB	 111			; 0000006fH
  001b2	6e		 DB	 110			; 0000006eH
  001b3	74		 DB	 116			; 00000074H
  001b4	4e		 DB	 78			; 0000004eH
  001b5	6f		 DB	 111			; 0000006fH
  001b6	64		 DB	 100			; 00000064H
  001b7	65		 DB	 101			; 00000065H
  001b8	00		 DB	 0
?AddFont@CDXUTDialogResourceManager@@QAEHPB_WJJ@Z ENDP	; CDXUTDialogResourceManager::AddFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTextureNode@CDXUTDialogResourceManager@@QBEPAUDXUTTextureNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?GetTextureNode@CDXUTDialogResourceManager@@QBEPAUDXUTTextureNode@@I@Z PROC ; CDXUTDialogResourceManager::GetTextureNode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 413
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0001b	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEABQAUDXUTTextureNode@@I@Z ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::operator[]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?GetTextureNode@CDXUTDialogResourceManager@@QBEPAUDXUTTextureNode@@I@Z ENDP ; CDXUTDialogResourceManager::GetTextureNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iIndex$ = 8						; size = 4
?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z PROC ; CDXUTDialogResourceManager::GetFontNode, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 412
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0001b	e8 00 00 00 00	 call	 ??A?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QBEABQAUDXUTFontNode@@I@Z ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::operator[]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ENDP ; CDXUTDialogResourceManager::GetFontNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11DeviceContext@CDXUTDialogResourceManager@@QBEPAUID3D11DeviceContext@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetD3D11DeviceContext@CDXUTDialogResourceManager@@QBEPAUID3D11DeviceContext@@XZ PROC ; CDXUTDialogResourceManager::GetD3D11DeviceContext, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 410
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 80 00 00
	00		 mov	 eax, DWORD PTR [eax+128]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetD3D11DeviceContext@CDXUTDialogResourceManager@@QBEPAUID3D11DeviceContext@@XZ ENDP ; CDXUTDialogResourceManager::GetD3D11DeviceContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetD3D11Device@CDXUTDialogResourceManager@@QBEPAUID3D11Device@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetD3D11Device@CDXUTDialogResourceManager@@QBEPAUID3D11Device@@XZ PROC ; CDXUTDialogResourceManager::GetD3D11Device, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 409
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetD3D11Device@CDXUTDialogResourceManager@@QBEPAUID3D11Device@@XZ ENDP ; CDXUTDialogResourceManager::GetD3D11Device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_Offset$ = -116						; size = 4
_Stride$ = -104						; size = 4
_MappedResource$ = -92					; size = 12
_destRegion$ = -72					; size = 24
_BufferDesc$1 = -40					; size = 24
_SpriteDataBytes$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3dImmediateContext$ = 12				; size = 4
?EndSprites11@CDXUTDialogResourceManager@@QAEXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z PROC ; CDXUTDialogResourceManager::EndSprites11
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2554
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 88	 lea	 edi, DWORD PTR [ebp-120]
  0000c	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2557
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 54	 add	 ecx, 84			; 00000054H
  0002c	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  00031	6b c0 24	 imul	 eax, eax, 36
  00034	89 45 f4	 mov	 DWORD PTR _SpriteDataBytes$[ebp], eax
; Line 2558
  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  0003d	3b 55 f4	 cmp	 edx, DWORD PTR _SpriteDataBytes$[ebp]
  00040	0f 83 b3 00 00
	00		 jae	 $LN4@EndSprites
; Line 2560
  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  0004d	74 27		 je	 SHORT $LN3@EndSprites
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00055	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0005b	8b 12		 mov	 edx, DWORD PTR [edx]
  0005d	8b f4		 mov	 esi, esp
  0005f	51		 push	 ecx
  00060	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00063	ff d0		 call	 eax
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	c7 41 4c 00 00
	00 00		 mov	 DWORD PTR [ecx+76], 0
$LN3@EndSprites:
; Line 2561
  00076	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00079	8b 45 f4	 mov	 eax, DWORD PTR _SpriteDataBytes$[ebp]
  0007c	89 42 50	 mov	 DWORD PTR [edx+80], eax
; Line 2564
  0007f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00085	89 55 d8	 mov	 DWORD PTR _BufferDesc$1[ebp], edx
; Line 2565
  00088	c7 45 dc 02 00
	00 00		 mov	 DWORD PTR _BufferDesc$1[ebp+4], 2
; Line 2566
  0008f	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _BufferDesc$1[ebp+8], 1
; Line 2567
  00096	c7 45 e4 00 00
	01 00		 mov	 DWORD PTR _BufferDesc$1[ebp+12], 65536 ; 00010000H
; Line 2568
  0009d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _BufferDesc$1[ebp+16], 0
; Line 2570
  000a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	83 c0 4c	 add	 eax, 76			; 0000004cH
  000aa	8b f4		 mov	 esi, esp
  000ac	50		 push	 eax
  000ad	6a 00		 push	 0
  000af	8d 4d d8	 lea	 ecx, DWORD PTR _BufferDesc$1[ebp]
  000b2	51		 push	 ecx
  000b3	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000b6	8b 02		 mov	 eax, DWORD PTR [edx]
  000b8	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  000bb	51		 push	 ecx
  000bc	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000bf	ff d2		 call	 edx
  000c1	3b f4		 cmp	 esi, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	85 c0		 test	 eax, eax
  000ca	7d 19		 jge	 SHORT $LN2@EndSprites
; Line 2572
  000cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [eax+76], 0
; Line 2573
  000d6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
; Line 2574
  000e0	e9 46 01 00 00	 jmp	 $LN5@EndSprites
$LN2@EndSprites:
; Line 2576
  000e5	68 00 00 00 00	 push	 OFFSET $SG162529
  000ea	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ed	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  000f6	83 c4 08	 add	 esp, 8
$LN4@EndSprites:
; Line 2581
  000f9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp], 0
; Line 2582
  00100	8b 4d f4	 mov	 ecx, DWORD PTR _SpriteDataBytes$[ebp]
  00103	89 4d c4	 mov	 DWORD PTR _destRegion$[ebp+12], ecx
; Line 2583
  00106	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+4], 0
; Line 2584
  0010d	c7 45 c8 01 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+16], 1
; Line 2585
  00114	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+8], 0
; Line 2586
  0011b	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR _destRegion$[ebp+20], 1
; Line 2588
  00122	8b f4		 mov	 esi, esp
  00124	8d 55 a4	 lea	 edx, DWORD PTR _MappedResource$[ebp]
  00127	52		 push	 edx
  00128	6a 00		 push	 0
  0012a	6a 04		 push	 4
  0012c	6a 00		 push	 0
  0012e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00131	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00134	51		 push	 ecx
  00135	8b 55 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00138	8b 02		 mov	 eax, DWORD PTR [edx]
  0013a	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0013d	51		 push	 ecx
  0013e	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00141	ff d2		 call	 edx
  00143	3b f4		 cmp	 esi, esp
  00145	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014a	85 c0		 test	 eax, eax
  0014c	75 3e		 jne	 SHORT $LN1@EndSprites
; Line 2590
  0014e	8b 45 f4	 mov	 eax, DWORD PTR _SpriteDataBytes$[ebp]
  00151	50		 push	 eax
  00152	6a 00		 push	 0
  00154	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	83 c1 54	 add	 ecx, 84			; 00000054H
  0015a	e8 00 00 00 00	 call	 ??A?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEAAUDXUTSpriteVertex@@I@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::operator[]
  0015f	50		 push	 eax
  00160	8b 4d a4	 mov	 ecx, DWORD PTR _MappedResource$[ebp]
  00163	51		 push	 ecx
  00164	e8 00 00 00 00	 call	 _memcpy
  00169	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2591
  0016c	8b f4		 mov	 esi, esp
  0016e	6a 00		 push	 0
  00170	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00173	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00176	50		 push	 eax
  00177	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0017a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017c	8b 45 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0017f	50		 push	 eax
  00180	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  00183	ff d1		 call	 ecx
  00185	3b f4		 cmp	 esi, esp
  00187	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@EndSprites:
; Line 2595
  0018c	c7 45 98 24 00
	00 00		 mov	 DWORD PTR _Stride$[ebp], 36 ; 00000024H
; Line 2596
  00193	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _Offset$[ebp], 0
; Line 2597
  0019a	8b f4		 mov	 esi, esp
  0019c	8d 55 8c	 lea	 edx, DWORD PTR _Offset$[ebp]
  0019f	52		 push	 edx
  001a0	8d 45 98	 lea	 eax, DWORD PTR _Stride$[ebp]
  001a3	50		 push	 eax
  001a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	83 c1 4c	 add	 ecx, 76			; 0000004cH
  001aa	51		 push	 ecx
  001ab	6a 01		 push	 1
  001ad	6a 00		 push	 0
  001af	8b 55 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001b2	8b 02		 mov	 eax, DWORD PTR [edx]
  001b4	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001b7	51		 push	 ecx
  001b8	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  001bb	ff d2		 call	 edx
  001bd	3b f4		 cmp	 esi, esp
  001bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2598
  001c4	8b f4		 mov	 esi, esp
  001c6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c9	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  001cc	51		 push	 ecx
  001cd	8b 55 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001d0	8b 02		 mov	 eax, DWORD PTR [edx]
  001d2	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001d5	51		 push	 ecx
  001d6	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  001d9	ff d2		 call	 edx
  001db	3b f4		 cmp	 esi, esp
  001dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2599
  001e2	8b f4		 mov	 esi, esp
  001e4	6a 04		 push	 4
  001e6	8b 45 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001eb	8b 55 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001ee	52		 push	 edx
  001ef	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  001f2	ff d0		 call	 eax
  001f4	3b f4		 cmp	 esi, esp
  001f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2600
  001fb	8b f4		 mov	 esi, esp
  001fd	6a 00		 push	 0
  001ff	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00202	83 c1 54	 add	 ecx, 84			; 00000054H
  00205	e8 00 00 00 00	 call	 ?size@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QBEIXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::size
  0020a	50		 push	 eax
  0020b	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0020e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00210	8b 45 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00213	50		 push	 eax
  00214	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  00217	ff d1		 call	 ecx
  00219	3b f4		 cmp	 esi, esp
  0021b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2602
  00220	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00223	83 c1 54	 add	 ecx, 84			; 00000054H
  00226	e8 00 00 00 00	 call	 ?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::clear
$LN5@EndSprites:
; Line 2603
  0022b	52		 push	 edx
  0022c	8b cd		 mov	 ecx, ebp
  0022e	50		 push	 eax
  0022f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@EndSprites
  00235	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0023a	58		 pop	 eax
  0023b	5a		 pop	 edx
  0023c	5f		 pop	 edi
  0023d	5e		 pop	 esi
  0023e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00241	33 cd		 xor	 ecx, ebp
  00243	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00248	83 c4 78	 add	 esp, 120		; 00000078H
  0024b	3b ec		 cmp	 ebp, esp
  0024d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00252	8b e5		 mov	 esp, ebp
  00254	5d		 pop	 ebp
  00255	c2 08 00	 ret	 8
$LN13@EndSprites:
  00258	05 00 00 00	 DD	 5
  0025c	00 00 00 00	 DD	 $LN12@EndSprites
$LN12@EndSprites:
  00260	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00264	18 00 00 00	 DD	 24			; 00000018H
  00268	00 00 00 00	 DD	 $LN7@EndSprites
  0026c	b8 ff ff ff	 DD	 -72			; ffffffb8H
  00270	18 00 00 00	 DD	 24			; 00000018H
  00274	00 00 00 00	 DD	 $LN8@EndSprites
  00278	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0027c	0c 00 00 00	 DD	 12			; 0000000cH
  00280	00 00 00 00	 DD	 $LN9@EndSprites
  00284	98 ff ff ff	 DD	 -104			; ffffff98H
  00288	04 00 00 00	 DD	 4
  0028c	00 00 00 00	 DD	 $LN10@EndSprites
  00290	8c ff ff ff	 DD	 -116			; ffffff8cH
  00294	04 00 00 00	 DD	 4
  00298	00 00 00 00	 DD	 $LN11@EndSprites
$LN11@EndSprites:
  0029c	4f		 DB	 79			; 0000004fH
  0029d	66		 DB	 102			; 00000066H
  0029e	66		 DB	 102			; 00000066H
  0029f	73		 DB	 115			; 00000073H
  002a0	65		 DB	 101			; 00000065H
  002a1	74		 DB	 116			; 00000074H
  002a2	00		 DB	 0
$LN10@EndSprites:
  002a3	53		 DB	 83			; 00000053H
  002a4	74		 DB	 116			; 00000074H
  002a5	72		 DB	 114			; 00000072H
  002a6	69		 DB	 105			; 00000069H
  002a7	64		 DB	 100			; 00000064H
  002a8	65		 DB	 101			; 00000065H
  002a9	00		 DB	 0
$LN9@EndSprites:
  002aa	4d		 DB	 77			; 0000004dH
  002ab	61		 DB	 97			; 00000061H
  002ac	70		 DB	 112			; 00000070H
  002ad	70		 DB	 112			; 00000070H
  002ae	65		 DB	 101			; 00000065H
  002af	64		 DB	 100			; 00000064H
  002b0	52		 DB	 82			; 00000052H
  002b1	65		 DB	 101			; 00000065H
  002b2	73		 DB	 115			; 00000073H
  002b3	6f		 DB	 111			; 0000006fH
  002b4	75		 DB	 117			; 00000075H
  002b5	72		 DB	 114			; 00000072H
  002b6	63		 DB	 99			; 00000063H
  002b7	65		 DB	 101			; 00000065H
  002b8	00		 DB	 0
$LN8@EndSprites:
  002b9	64		 DB	 100			; 00000064H
  002ba	65		 DB	 101			; 00000065H
  002bb	73		 DB	 115			; 00000073H
  002bc	74		 DB	 116			; 00000074H
  002bd	52		 DB	 82			; 00000052H
  002be	65		 DB	 101			; 00000065H
  002bf	67		 DB	 103			; 00000067H
  002c0	69		 DB	 105			; 00000069H
  002c1	6f		 DB	 111			; 0000006fH
  002c2	6e		 DB	 110			; 0000006eH
  002c3	00		 DB	 0
$LN7@EndSprites:
  002c4	42		 DB	 66			; 00000042H
  002c5	75		 DB	 117			; 00000075H
  002c6	66		 DB	 102			; 00000066H
  002c7	66		 DB	 102			; 00000066H
  002c8	65		 DB	 101			; 00000065H
  002c9	72		 DB	 114			; 00000072H
  002ca	44		 DB	 68			; 00000044H
  002cb	65		 DB	 101			; 00000065H
  002cc	73		 DB	 115			; 00000073H
  002cd	63		 DB	 99			; 00000063H
  002ce	00		 DB	 0
?EndSprites11@CDXUTDialogResourceManager@@QAEXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ENDP ; CDXUTDialogResourceManager::EndSprites11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BeginSprites11@CDXUTDialogResourceManager@@QAEXXZ PROC	; CDXUTDialogResourceManager::BeginSprites11
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2546
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2547
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 54	 add	 ecx, 84			; 00000054H
  00014	e8 00 00 00 00	 call	 ?clear@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXXZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::clear
; Line 2548
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?BeginSprites11@CDXUTDialogResourceManager@@QAEXXZ ENDP	; CDXUTDialogResourceManager::BeginSprites11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_BlendFactor$ = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?ApplyRenderUIUntex11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z PROC ; CDXUTDialogResourceManager::ApplyRenderUIUntex11
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2527
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002e	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2529
  00031	8b f4		 mov	 esi, esp
  00033	6a 00		 push	 0
  00035	6a 00		 push	 0
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003c	51		 push	 ecx
  0003d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00040	8b 02		 mov	 eax, DWORD PTR [edx]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00045	51		 push	 ecx
  00046	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  00049	ff d2		 call	 edx
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2530
  00052	8b f4		 mov	 esi, esp
  00054	6a 00		 push	 0
  00056	6a 00		 push	 0
  00058	6a 00		 push	 0
  0005a	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00062	52		 push	 edx
  00063	8b 81 f0 00 00
	00		 mov	 eax, DWORD PTR [ecx+240]
  00069	ff d0		 call	 eax
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2531
  00072	8b f4		 mov	 esi, esp
  00074	6a 00		 push	 0
  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00082	50		 push	 eax
  00083	8b 8a 00 01 00
	00		 mov	 ecx, DWORD PTR [edx+256]
  00089	ff d1		 call	 ecx
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2532
  00092	8b f4		 mov	 esi, esp
  00094	6a 00		 push	 0
  00096	6a 00		 push	 0
  00098	6a 00		 push	 0
  0009a	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0009d	8b 02		 mov	 eax, DWORD PTR [edx]
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a2	51		 push	 ecx
  000a3	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000a6	ff d2		 call	 edx
  000a8	3b f4		 cmp	 esi, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2533
  000af	8b f4		 mov	 esi, esp
  000b1	6a 00		 push	 0
  000b3	6a 00		 push	 0
  000b5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000bb	51		 push	 ecx
  000bc	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000bf	8b 02		 mov	 eax, DWORD PTR [edx]
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000c4	51		 push	 ecx
  000c5	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  000c8	ff d2		 call	 edx
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2536
  000d1	8b f4		 mov	 esi, esp
  000d3	6a 00		 push	 0
  000d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000db	51		 push	 ecx
  000dc	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000df	8b 02		 mov	 eax, DWORD PTR [edx]
  000e1	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000e4	51		 push	 ecx
  000e5	8b 90 90 00 00
	00		 mov	 edx, DWORD PTR [eax+144]
  000eb	ff d2		 call	 edx
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2537
  000f4	8b f4		 mov	 esi, esp
  000f6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f9	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000fc	51		 push	 ecx
  000fd	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00100	8b 02		 mov	 eax, DWORD PTR [edx]
  00102	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00105	51		 push	 ecx
  00106	8b 90 ac 00 00
	00		 mov	 edx, DWORD PTR [eax+172]
  0010c	ff d2		 call	 edx
  0010e	3b f4		 cmp	 esi, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2538
  00115	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0011d	f3 0f 11 45 e4	 movss	 DWORD PTR _BlendFactor$[ebp], xmm0
  00122	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0012a	f3 0f 11 45 e8	 movss	 DWORD PTR _BlendFactor$[ebp+4], xmm0
  0012f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00137	f3 0f 11 45 ec	 movss	 DWORD PTR _BlendFactor$[ebp+8], xmm0
  0013c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00144	f3 0f 11 45 f0	 movss	 DWORD PTR _BlendFactor$[ebp+12], xmm0
; Line 2539
  00149	8b f4		 mov	 esi, esp
  0014b	6a ff		 push	 -1
  0014d	8d 45 e4	 lea	 eax, DWORD PTR _BlendFactor$[ebp]
  00150	50		 push	 eax
  00151	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00157	52		 push	 edx
  00158	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0015b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00160	52		 push	 edx
  00161	8b 81 8c 00 00
	00		 mov	 eax, DWORD PTR [ecx+140]
  00167	ff d0		 call	 eax
  00169	3b f4		 cmp	 esi, esp
  0016b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2540
  00170	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00173	83 c1 18	 add	 ecx, 24			; 00000018H
  00176	8b f4		 mov	 esi, esp
  00178	51		 push	 ecx
  00179	6a 01		 push	 1
  0017b	6a 00		 push	 0
  0017d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00180	8b 02		 mov	 eax, DWORD PTR [edx]
  00182	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00185	51		 push	 ecx
  00186	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00189	ff d2		 call	 edx
  0018b	3b f4		 cmp	 esi, esp
  0018d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2541
  00192	52		 push	 edx
  00193	8b cd		 mov	 ecx, ebp
  00195	50		 push	 eax
  00196	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@ApplyRende
  0019c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001a1	58		 pop	 eax
  001a2	5a		 pop	 edx
  001a3	5e		 pop	 esi
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a7	33 cd		 xor	 ecx, ebp
  001a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ae	83 c4 20	 add	 esp, 32			; 00000020H
  001b1	3b ec		 cmp	 ebp, esp
  001b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c2 04 00	 ret	 4
  001be	8b ff		 npad	 2
$LN5@ApplyRende:
  001c0	01 00 00 00	 DD	 1
  001c4	00 00 00 00	 DD	 $LN4@ApplyRende
$LN4@ApplyRende:
  001c8	e4 ff ff ff	 DD	 -28			; ffffffe4H
  001cc	10 00 00 00	 DD	 16			; 00000010H
  001d0	00 00 00 00	 DD	 $LN3@ApplyRende
$LN3@ApplyRende:
  001d4	42		 DB	 66			; 00000042H
  001d5	6c		 DB	 108			; 0000006cH
  001d6	65		 DB	 101			; 00000065H
  001d7	6e		 DB	 110			; 0000006eH
  001d8	64		 DB	 100			; 00000064H
  001d9	46		 DB	 70			; 00000046H
  001da	61		 DB	 97			; 00000061H
  001db	63		 DB	 99			; 00000063H
  001dc	74		 DB	 116			; 00000074H
  001dd	6f		 DB	 111			; 0000006fH
  001de	72		 DB	 114			; 00000072H
  001df	00		 DB	 0
?ApplyRenderUIUntex11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ENDP ; CDXUTDialogResourceManager::ApplyRenderUIUntex11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_BlendFactor$ = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?ApplyRenderUI11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z PROC ; CDXUTDialogResourceManager::ApplyRenderUI11
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2508
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002e	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2510
  00031	8b f4		 mov	 esi, esp
  00033	6a 00		 push	 0
  00035	6a 00		 push	 0
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003c	51		 push	 ecx
  0003d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00040	8b 02		 mov	 eax, DWORD PTR [edx]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00045	51		 push	 ecx
  00046	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  00049	ff d2		 call	 edx
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2511
  00052	8b f4		 mov	 esi, esp
  00054	6a 00		 push	 0
  00056	6a 00		 push	 0
  00058	6a 00		 push	 0
  0005a	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00062	52		 push	 edx
  00063	8b 81 f0 00 00
	00		 mov	 eax, DWORD PTR [ecx+240]
  00069	ff d0		 call	 eax
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2512
  00072	8b f4		 mov	 esi, esp
  00074	6a 00		 push	 0
  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00082	50		 push	 eax
  00083	8b 8a 00 01 00
	00		 mov	 ecx, DWORD PTR [edx+256]
  00089	ff d1		 call	 ecx
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2513
  00092	8b f4		 mov	 esi, esp
  00094	6a 00		 push	 0
  00096	6a 00		 push	 0
  00098	6a 00		 push	 0
  0009a	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0009d	8b 02		 mov	 eax, DWORD PTR [edx]
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a2	51		 push	 ecx
  000a3	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000a6	ff d2		 call	 edx
  000a8	3b f4		 cmp	 esi, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2514
  000af	8b f4		 mov	 esi, esp
  000b1	6a 00		 push	 0
  000b3	6a 00		 push	 0
  000b5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bb	51		 push	 ecx
  000bc	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000bf	8b 02		 mov	 eax, DWORD PTR [edx]
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000c4	51		 push	 ecx
  000c5	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  000c8	ff d2		 call	 edx
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2517
  000d1	8b f4		 mov	 esi, esp
  000d3	6a 00		 push	 0
  000d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000db	51		 push	 ecx
  000dc	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000df	8b 02		 mov	 eax, DWORD PTR [edx]
  000e1	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000e4	51		 push	 ecx
  000e5	8b 90 90 00 00
	00		 mov	 edx, DWORD PTR [eax+144]
  000eb	ff d2		 call	 edx
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2518
  000f4	8b f4		 mov	 esi, esp
  000f6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f9	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000fc	51		 push	 ecx
  000fd	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00100	8b 02		 mov	 eax, DWORD PTR [edx]
  00102	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00105	51		 push	 ecx
  00106	8b 90 ac 00 00
	00		 mov	 edx, DWORD PTR [eax+172]
  0010c	ff d2		 call	 edx
  0010e	3b f4		 cmp	 esi, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2519
  00115	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0011d	f3 0f 11 45 e4	 movss	 DWORD PTR _BlendFactor$[ebp], xmm0
  00122	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0012a	f3 0f 11 45 e8	 movss	 DWORD PTR _BlendFactor$[ebp+4], xmm0
  0012f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00137	f3 0f 11 45 ec	 movss	 DWORD PTR _BlendFactor$[ebp+8], xmm0
  0013c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00144	f3 0f 11 45 f0	 movss	 DWORD PTR _BlendFactor$[ebp+12], xmm0
; Line 2520
  00149	8b f4		 mov	 esi, esp
  0014b	6a ff		 push	 -1
  0014d	8d 45 e4	 lea	 eax, DWORD PTR _BlendFactor$[ebp]
  00150	50		 push	 eax
  00151	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00157	52		 push	 edx
  00158	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0015b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00160	52		 push	 edx
  00161	8b 81 8c 00 00
	00		 mov	 eax, DWORD PTR [ecx+140]
  00167	ff d0		 call	 eax
  00169	3b f4		 cmp	 esi, esp
  0016b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2521
  00170	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00173	83 c1 18	 add	 ecx, 24			; 00000018H
  00176	8b f4		 mov	 esi, esp
  00178	51		 push	 ecx
  00179	6a 01		 push	 1
  0017b	6a 00		 push	 0
  0017d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00180	8b 02		 mov	 eax, DWORD PTR [edx]
  00182	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00185	51		 push	 ecx
  00186	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00189	ff d2		 call	 edx
  0018b	3b f4		 cmp	 esi, esp
  0018d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2522
  00192	52		 push	 edx
  00193	8b cd		 mov	 ecx, ebp
  00195	50		 push	 eax
  00196	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@ApplyRende
  0019c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001a1	58		 pop	 eax
  001a2	5a		 pop	 edx
  001a3	5e		 pop	 esi
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a7	33 cd		 xor	 ecx, ebp
  001a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ae	83 c4 20	 add	 esp, 32			; 00000020H
  001b1	3b ec		 cmp	 ebp, esp
  001b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c2 04 00	 ret	 4
  001be	8b ff		 npad	 2
$LN5@ApplyRende:
  001c0	01 00 00 00	 DD	 1
  001c4	00 00 00 00	 DD	 $LN4@ApplyRende
$LN4@ApplyRende:
  001c8	e4 ff ff ff	 DD	 -28			; ffffffe4H
  001cc	10 00 00 00	 DD	 16			; 00000010H
  001d0	00 00 00 00	 DD	 $LN3@ApplyRende
$LN3@ApplyRende:
  001d4	42		 DB	 66			; 00000042H
  001d5	6c		 DB	 108			; 0000006cH
  001d6	65		 DB	 101			; 00000065H
  001d7	6e		 DB	 110			; 0000006eH
  001d8	64		 DB	 100			; 00000064H
  001d9	46		 DB	 70			; 00000046H
  001da	61		 DB	 97			; 00000061H
  001db	63		 DB	 99			; 00000063H
  001dc	74		 DB	 116			; 00000074H
  001dd	6f		 DB	 111			; 0000006fH
  001de	72		 DB	 114			; 00000072H
  001df	00		 DB	 0
?ApplyRenderUI11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ENDP ; CDXUTDialogResourceManager::ApplyRenderUI11
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?RestoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z PROC ; CDXUTDialogResourceManager::RestoreD3D11State
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2493
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2494
  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00017	51		 push	 ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0001e	50		 push	 eax
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00027	50		 push	 eax
  00028	8b 8a 90 00 00
	00		 mov	 ecx, DWORD PTR [edx+144]
  0002e	ff d1		 call	 ecx
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2495
  00037	8b f4		 mov	 esi, esp
  00039	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0003f	50		 push	 eax
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00043	8b 11		 mov	 edx, DWORD PTR [ecx]
  00045	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00048	50		 push	 eax
  00049	8b 8a ac 00 00
	00		 mov	 ecx, DWORD PTR [edx+172]
  0004f	ff d1		 call	 ecx
  00051	3b f4		 cmp	 esi, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2496
  00058	8b f4		 mov	 esi, esp
  0005a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	50		 push	 eax
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00067	51		 push	 ecx
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0006e	50		 push	 eax
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00072	8b 11		 mov	 edx, DWORD PTR [ecx]
  00074	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00077	50		 push	 eax
  00078	8b 8a 8c 00 00
	00		 mov	 ecx, DWORD PTR [edx+140]
  0007e	ff d1		 call	 ecx
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2497
  00087	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	83 c2 40	 add	 edx, 64			; 00000040H
  0008d	8b f4		 mov	 esi, esp
  0008f	52		 push	 edx
  00090	6a 01		 push	 1
  00092	6a 00		 push	 0
  00094	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00097	8b 08		 mov	 ecx, DWORD PTR [eax]
  00099	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0009c	52		 push	 edx
  0009d	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  000a0	ff d0		 call	 eax
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2499
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  000b0	74 27		 je	 SHORT $LN4@RestoreD3D
  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000be	8b 00		 mov	 eax, DWORD PTR [eax]
  000c0	8b f4		 mov	 esi, esp
  000c2	52		 push	 edx
  000c3	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c6	ff d1		 call	 ecx
  000c8	3b f4		 cmp	 esi, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d2	c7 42 1c 00 00
	00 00		 mov	 DWORD PTR [edx+28], 0
$LN4@RestoreD3D:
; Line 2500
  000d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dc	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  000e0	74 27		 je	 SHORT $LN3@RestoreD3D
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000ee	8b 12		 mov	 edx, DWORD PTR [edx]
  000f0	8b f4		 mov	 esi, esp
  000f2	51		 push	 ecx
  000f3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f6	ff d0		 call	 eax
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
$LN3@RestoreD3D:
; Line 2501
  00109	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010c	83 7a 28 00	 cmp	 DWORD PTR [edx+40], 0
  00110	74 27		 je	 SHORT $LN2@RestoreD3D
  00112	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00115	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00118	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0011b	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0011e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00120	8b f4		 mov	 esi, esp
  00122	50		 push	 eax
  00123	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00126	ff d2		 call	 edx
  00128	3b f4		 cmp	 esi, esp
  0012a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00132	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0
$LN2@RestoreD3D:
; Line 2502
  00139	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	83 79 40 00	 cmp	 DWORD PTR [ecx+64], 0
  00140	74 27		 je	 SHORT $LN5@RestoreD3D
  00142	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00145	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  0014e	8b 00		 mov	 eax, DWORD PTR [eax]
  00150	8b f4		 mov	 esi, esp
  00152	52		 push	 edx
  00153	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00156	ff d1		 call	 ecx
  00158	3b f4		 cmp	 esi, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00162	c7 42 40 00 00
	00 00		 mov	 DWORD PTR [edx+64], 0
$LN5@RestoreD3D:
; Line 2503
  00169	5e		 pop	 esi
  0016a	83 c4 04	 add	 esp, 4
  0016d	3b ec		 cmp	 ebp, esp
  0016f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c2 04 00	 ret	 4
?RestoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ENDP ; CDXUTDialogResourceManager::RestoreD3D11State
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?StoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z PROC ; CDXUTDialogResourceManager::StoreD3D11State
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2483
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2484
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 c0 20	 add	 eax, 32			; 00000020H
  00015	8b f4		 mov	 esi, esp
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00027	51		 push	 ecx
  00028	8b 90 70 01 00
	00		 mov	 edx, DWORD PTR [eax+368]
  0002e	ff d2		 call	 edx
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2485
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 c0 24	 add	 eax, 36			; 00000024H
  0003d	8b f4		 mov	 esi, esp
  0003f	50		 push	 eax
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00043	8b 11		 mov	 edx, DWORD PTR [ecx]
  00045	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00048	50		 push	 eax
  00049	8b 8a 78 01 00
	00		 mov	 ecx, DWORD PTR [edx+376]
  0004f	ff d1		 call	 ecx
  00051	3b f4		 cmp	 esi, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2486
  00058	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005b	83 c2 3c	 add	 edx, 60			; 0000003cH
  0005e	8b f4		 mov	 esi, esp
  00060	52		 push	 edx
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	83 c0 2c	 add	 eax, 44			; 0000002cH
  00067	50		 push	 eax
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	83 c1 28	 add	 ecx, 40			; 00000028H
  0006e	51		 push	 ecx
  0006f	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00072	8b 02		 mov	 eax, DWORD PTR [edx]
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00077	51		 push	 ecx
  00078	8b 90 6c 01 00
	00		 mov	 edx, DWORD PTR [eax+364]
  0007e	ff d2		 call	 edx
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2487
  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 c0 40	 add	 eax, 64			; 00000040H
  0008d	8b f4		 mov	 esi, esp
  0008f	50		 push	 eax
  00090	6a 01		 push	 1
  00092	6a 00		 push	 0
  00094	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00097	8b 11		 mov	 edx, DWORD PTR [ecx]
  00099	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0009c	50		 push	 eax
  0009d	8b 8a 2c 01 00
	00		 mov	 ecx, DWORD PTR [edx+300]
  000a3	ff d1		 call	 ecx
  000a5	3b f4		 cmp	 esi, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2488
  000ac	5e		 pop	 esi
  000ad	83 c4 04	 add	 esp, 4
  000b0	3b ec		 cmp	 ebp, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 04 00	 ret	 4
?StoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ENDP ; CDXUTDialogResourceManager::StoreD3D11State
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv153 = -68						; size = 4
tv134 = -64						; size = 4
tv358 = -60						; size = 4
tv66 = -56						; size = 4
$T2 = -52						; size = 12
$T3 = -37						; size = 1
_it$4 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ PROC ; CDXUTDialogResourceManager::OnD3D11DestroyDevice
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2445
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  0001a	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2449
  0003b	8d 45 e0	 lea	 eax, DWORD PTR _it$4[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00048	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::begin
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00054	eb 08		 jmp	 SHORT $LN19@OnD3D11Des
$LN18@OnD3D11Des:
  00056	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00059	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++
$LN19@OnD3D11Des:
  0005e	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00061	51		 push	 ecx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0006b	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::end
  00070	89 45 c8	 mov	 DWORD PTR tv66[ebp], eax
  00073	8b 55 c8	 mov	 edx, DWORD PTR tv66[ebp]
  00076	89 55 c4	 mov	 DWORD PTR tv358[ebp], edx
  00079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007d	8b 45 c4	 mov	 eax, DWORD PTR tv358[ebp]
  00080	50		 push	 eax
  00081	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00084	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator!=
  00089	88 45 db	 mov	 BYTE PTR $T3[ebp], al
  0008c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00090	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00093	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
  00098	0f b6 4d db	 movzx	 ecx, BYTE PTR $T3[ebp]
  0009c	85 c9		 test	 ecx, ecx
  0009e	0f 84 a7 00 00
	00		 je	 $LN17@OnD3D11Des
; Line 2451
  000a4	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000a7	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  000ac	8b 10		 mov	 edx, DWORD PTR [eax]
  000ae	83 ba 20 02 00
	00 00		 cmp	 DWORD PTR [edx+544], 0
  000b5	74 3e		 je	 SHORT $LN16@OnD3D11Des
  000b7	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000ba	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  000bf	8b 00		 mov	 eax, DWORD PTR [eax]
  000c1	8b 88 20 02 00
	00		 mov	 ecx, DWORD PTR [eax+544]
  000c7	89 4d c0	 mov	 DWORD PTR tv134[ebp], ecx
  000ca	8b 55 c0	 mov	 edx, DWORD PTR tv134[ebp]
  000cd	8b 02		 mov	 eax, DWORD PTR [edx]
  000cf	8b f4		 mov	 esi, esp
  000d1	8b 4d c0	 mov	 ecx, DWORD PTR tv134[ebp]
  000d4	51		 push	 ecx
  000d5	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d8	ff d2		 call	 edx
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000e4	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  000e9	8b 00		 mov	 eax, DWORD PTR [eax]
  000eb	c7 80 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+544], 0
$LN16@OnD3D11Des:
; Line 2452
  000f5	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000f8	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  000fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ff	83 b9 1c 02 00
	00 00		 cmp	 DWORD PTR [ecx+540], 0
  00106	74 3e		 je	 SHORT $LN15@OnD3D11Des
  00108	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  0010b	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  00110	8b 10		 mov	 edx, DWORD PTR [eax]
  00112	8b 82 1c 02 00
	00		 mov	 eax, DWORD PTR [edx+540]
  00118	89 45 bc	 mov	 DWORD PTR tv153[ebp], eax
  0011b	8b 4d bc	 mov	 ecx, DWORD PTR tv153[ebp]
  0011e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00120	8b f4		 mov	 esi, esp
  00122	8b 45 bc	 mov	 eax, DWORD PTR tv153[ebp]
  00125	50		 push	 eax
  00126	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00129	ff d1		 call	 ecx
  0012b	3b f4		 cmp	 esi, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00132	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00135	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  0013a	8b 10		 mov	 edx, DWORD PTR [eax]
  0013c	c7 82 1c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+540], 0
$LN15@OnD3D11Des:
  00146	e9 0b ff ff ff	 jmp	 $LN18@OnD3D11Des
$LN17@OnD3D11Des:
; Line 2453
  0014b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00152	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00155	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
; Line 2456
  0015a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0015d	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00161	74 27		 je	 SHORT $LN14@OnD3D11Des
  00163	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00169	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0016f	8b 12		 mov	 edx, DWORD PTR [edx]
  00171	8b f4		 mov	 esi, esp
  00173	51		 push	 ecx
  00174	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00177	ff d0		 call	 eax
  00179	3b f4		 cmp	 esi, esp
  0017b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00180	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], 0
$LN14@OnD3D11Des:
; Line 2457
  0018a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0018d	83 7a 4c 00	 cmp	 DWORD PTR [edx+76], 0
  00191	74 27		 je	 SHORT $LN13@OnD3D11Des
  00193	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00199	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0019c	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0019f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  001a1	8b f4		 mov	 esi, esp
  001a3	50		 push	 eax
  001a4	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001a7	ff d2		 call	 edx
  001a9	3b f4		 cmp	 esi, esp
  001ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001b3	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [eax+76], 0
$LN13@OnD3D11Des:
; Line 2458
  001ba	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
; Line 2459
  001c4	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001c7	83 7a 44 00	 cmp	 DWORD PTR [edx+68], 0
  001cb	74 27		 je	 SHORT $LN12@OnD3D11Des
  001cd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001d0	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  001d3	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001d6	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  001d9	8b 09		 mov	 ecx, DWORD PTR [ecx]
  001db	8b f4		 mov	 esi, esp
  001dd	50		 push	 eax
  001de	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001e1	ff d2		 call	 edx
  001e3	3b f4		 cmp	 esi, esp
  001e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ea	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001ed	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
$LN12@OnD3D11Des:
; Line 2462
  001f4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001f7	83 39 00	 cmp	 DWORD PTR [ecx], 0
  001fa	74 24		 je	 SHORT $LN11@OnD3D11Des
  001fc	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001ff	8b 02		 mov	 eax, DWORD PTR [edx]
  00201	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00204	8b 11		 mov	 edx, DWORD PTR [ecx]
  00206	8b 00		 mov	 eax, DWORD PTR [eax]
  00208	8b f4		 mov	 esi, esp
  0020a	52		 push	 edx
  0020b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0020e	ff d1		 call	 ecx
  00210	3b f4		 cmp	 esi, esp
  00212	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00217	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0021a	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN11@OnD3D11Des:
; Line 2463
  00220	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00223	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00227	74 27		 je	 SHORT $LN10@OnD3D11Des
  00229	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0022c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0022f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00232	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00235	8b 12		 mov	 edx, DWORD PTR [edx]
  00237	8b f4		 mov	 esi, esp
  00239	51		 push	 ecx
  0023a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0023d	ff d0		 call	 eax
  0023f	3b f4		 cmp	 esi, esp
  00241	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00246	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00249	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
$LN10@OnD3D11Des:
; Line 2464
  00250	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00253	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00257	74 27		 je	 SHORT $LN9@OnD3D11Des
  00259	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0025c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0025f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00262	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00265	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00267	8b f4		 mov	 esi, esp
  00269	50		 push	 eax
  0026a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0026d	ff d2		 call	 edx
  0026f	3b f4		 cmp	 esi, esp
  00271	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00276	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00279	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
$LN9@OnD3D11Des:
; Line 2467
  00280	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00287	74 27		 je	 SHORT $LN8@OnD3D11Des
  00289	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0028c	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0028f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00292	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00295	8b 00		 mov	 eax, DWORD PTR [eax]
  00297	8b f4		 mov	 esi, esp
  00299	52		 push	 edx
  0029a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0029d	ff d1		 call	 ecx
  0029f	3b f4		 cmp	 esi, esp
  002a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a6	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  002a9	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
$LN8@OnD3D11Des:
; Line 2468
  002b0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002b3	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  002b7	74 27		 je	 SHORT $LN7@OnD3D11Des
  002b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002bc	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  002bf	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002c2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  002c5	8b 12		 mov	 edx, DWORD PTR [edx]
  002c7	8b f4		 mov	 esi, esp
  002c9	51		 push	 ecx
  002ca	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  002cd	ff d0		 call	 eax
  002cf	3b f4		 cmp	 esi, esp
  002d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002d9	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
$LN7@OnD3D11Des:
; Line 2469
  002e0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  002e3	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  002e7	74 27		 je	 SHORT $LN6@OnD3D11Des
  002e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002ec	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  002ef	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  002f2	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  002f5	8b 09		 mov	 ecx, DWORD PTR [ecx]
  002f7	8b f4		 mov	 esi, esp
  002f9	50		 push	 eax
  002fa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  002fd	ff d2		 call	 edx
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00309	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0
$LN6@OnD3D11Des:
; Line 2470
  00310	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00313	83 79 18 00	 cmp	 DWORD PTR [ecx+24], 0
  00317	74 27		 je	 SHORT $LN5@OnD3D11Des
  00319	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0031c	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0031f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00322	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00325	8b 00		 mov	 eax, DWORD PTR [eax]
  00327	8b f4		 mov	 esi, esp
  00329	52		 push	 edx
  0032a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0032d	ff d1		 call	 ecx
  0032f	3b f4		 cmp	 esi, esp
  00331	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00336	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00339	c7 42 18 00 00
	00 00		 mov	 DWORD PTR [edx+24], 0
$LN5@OnD3D11Des:
; Line 2472
  00340	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00343	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00347	74 27		 je	 SHORT $LN4@OnD3D11Des
  00349	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0034c	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0034f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00352	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00355	8b 12		 mov	 edx, DWORD PTR [edx]
  00357	8b f4		 mov	 esi, esp
  00359	51		 push	 ecx
  0035a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0035d	ff d0		 call	 eax
  0035f	3b f4		 cmp	 esi, esp
  00361	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00366	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00369	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
$LN4@OnD3D11Des:
; Line 2473
  00370	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00373	83 7a 24 00	 cmp	 DWORD PTR [edx+36], 0
  00377	74 27		 je	 SHORT $LN3@OnD3D11Des
  00379	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0037c	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0037f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00382	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00385	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00387	8b f4		 mov	 esi, esp
  00389	50		 push	 eax
  0038a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0038d	ff d2		 call	 edx
  0038f	3b f4		 cmp	 esi, esp
  00391	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00396	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00399	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0
$LN3@OnD3D11Des:
; Line 2474
  003a0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003a3	83 79 28 00	 cmp	 DWORD PTR [ecx+40], 0
  003a7	74 27		 je	 SHORT $LN2@OnD3D11Des
  003a9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  003ac	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  003af	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003b2	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  003b5	8b 00		 mov	 eax, DWORD PTR [eax]
  003b7	8b f4		 mov	 esi, esp
  003b9	52		 push	 edx
  003ba	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  003bd	ff d1		 call	 ecx
  003bf	3b f4		 cmp	 esi, esp
  003c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003c6	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  003c9	c7 42 28 00 00
	00 00		 mov	 DWORD PTR [edx+40], 0
$LN2@OnD3D11Des:
; Line 2475
  003d0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003d3	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  003d7	74 27		 je	 SHORT $LN1@OnD3D11Des
  003d9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003dc	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  003df	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003e2	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  003e5	8b 12		 mov	 edx, DWORD PTR [edx]
  003e7	8b f4		 mov	 esi, esp
  003e9	51		 push	 ecx
  003ea	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  003ed	ff d0		 call	 eax
  003ef	3b f4		 cmp	 esi, esp
  003f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003f9	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0
$LN1@OnD3D11Des:
; Line 2477
  00400	e8 00 00 00 00	 call	 ?EndFont11@@YAXXZ	; EndFont11
; Line 2478
  00405	52		 push	 edx
  00406	8b cd		 mov	 ecx, ebp
  00408	50		 push	 eax
  00409	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN27@OnD3D11Des
  0040f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00414	58		 pop	 eax
  00415	5a		 pop	 edx
  00416	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00419	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00420	59		 pop	 ecx
  00421	5f		 pop	 edi
  00422	5e		 pop	 esi
  00423	83 c4 44	 add	 esp, 68			; 00000044H
  00426	3b ec		 cmp	 ebp, esp
  00428	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0042d	8b e5		 mov	 esp, ebp
  0042f	5d		 pop	 ebp
  00430	c3		 ret	 0
  00431	8d 49 00	 npad	 3
$LN27@OnD3D11Des:
  00434	01 00 00 00	 DD	 1
  00438	00 00 00 00	 DD	 $LN26@OnD3D11Des
$LN26@OnD3D11Des:
  0043c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00440	0c 00 00 00	 DD	 12			; 0000000cH
  00444	00 00 00 00	 DD	 $LN24@OnD3D11Des
$LN24@OnD3D11Des:
  00448	69		 DB	 105			; 00000069H
  00449	74		 DB	 116			; 00000074H
  0044a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnD3D11DestroyDevice@CDXUTDialogResourceManager@@QAEXXZ ENDP ; CDXUTDialogResourceManager::OnD3D11DestroyDevice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnD3D11ReleasingSwapChain@CDXUTDialogResourceManager@@QAEXXZ PROC ; CDXUTDialogResourceManager::OnD3D11ReleasingSwapChain
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2440
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?OnD3D11ReleasingSwapChain@CDXUTDialogResourceManager@@QAEXXZ ENDP ; CDXUTDialogResourceManager::OnD3D11ReleasingSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pd3dDevice$ = 8					; size = 4
_pBackBufferSurfaceDesc$ = 12				; size = 4
?OnD3D11ResizedSwapChain@CDXUTDialogResourceManager@@QAEJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@@Z PROC ; CDXUTDialogResourceManager::OnD3D11ResizedSwapChain
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2425
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2428
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2430
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
  00024	8b 11		 mov	 edx, DWORD PTR [ecx]
  00026	89 50 64	 mov	 DWORD PTR [eax+100], edx
; Line 2431
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR _pBackBufferSurfaceDesc$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	89 50 68	 mov	 DWORD PTR [eax+104], edx
; Line 2433
  00035	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
; Line 2434
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
?OnD3D11ResizedSwapChain@CDXUTDialogResourceManager@@QAEJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@@Z ENDP ; CDXUTDialogResourceManager::OnD3D11ResizedSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_BufDesc$ = -612					; size = 24
_layout$ = -580						; size = 84
_i$1 = -492						; size = 4
_SSDesc$ = -484						; size = 52
_BSDesc$ = -424						; size = 264
_RSDesc$ = -152						; size = 40
_DSDesc$ = -104						; size = 52
_pPSUntexBlob$ = -44					; size = 4
_pPSBlob$ = -32						; size = 4
_pVSBlob$ = -20						; size = 4
_hr$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3d11DeviceContext$ = 12				; size = 4
?OnD3D11CreateDevice@CDXUTDialogResourceManager@@QAEJPAUID3D11Device@@PAUID3D11DeviceContext@@@Z PROC ; CDXUTDialogResourceManager::OnD3D11CreateDevice
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2296
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 68 02 00
	00		 sub	 esp, 616		; 00000268H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 98 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-616]
  00012	b9 9a 00 00 00	 mov	 ecx, 154		; 0000009aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2297
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00032	89 48 7c	 mov	 DWORD PTR [eax+124], ecx
; Line 2298
  00035	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00038	8b 45 0c	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  0003b	89 82 80 00 00
	00		 mov	 DWORD PTR [edx+128], eax
; Line 2300
  00041	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 2303
  00048	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pVSBlob$[ebp], 0
; Line 2304
  0004f	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pPSBlob$[ebp], 0
; Line 2305
  00056	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pPSUntexBlob$[ebp], 0
; Line 2307
  0005d	6a 00		 push	 0
  0005f	8d 4d ec	 lea	 ecx, DWORD PTR _pVSBlob$[ebp]
  00062	51		 push	 ecx
  00063	6a 00		 push	 0
  00065	68 00 10 00 00	 push	 4096			; 00001000H
  0006a	68 00 00 00 00	 push	 OFFSET $SG162346
  0006f	68 00 00 00 00	 push	 OFFSET $SG162347
  00074	6a 00		 push	 0
  00076	6a 00		 push	 0
  00078	68 00 00 00 00	 push	 OFFSET $SG162348
  0007d	68 63 07 00 00	 push	 1891			; 00000763H
  00082	68 00 00 00 00	 push	 OFFSET ?g_strUIEffectFile@@3PADA ; g_strUIEffectFile
  00087	e8 00 00 00 00	 call	 _D3DCompile@44
  0008c	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  0008f	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00093	7d 1f		 jge	 SHORT $LN20@OnD3D11Cre
  00095	6a 01		 push	 1
  00097	68 00 00 00 00	 push	 OFFSET $SG162352
  0009c	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  0009f	52		 push	 edx
  000a0	68 03 09 00 00	 push	 2307			; 00000903H
  000a5	68 00 00 00 00	 push	 OFFSET $SG162353
  000aa	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000af	e9 79 08 00 00	 jmp	 $LN21@OnD3D11Cre
$LN20@OnD3D11Cre:
; Line 2309
  000b4	6a 00		 push	 0
  000b6	8d 45 e0	 lea	 eax, DWORD PTR _pPSBlob$[ebp]
  000b9	50		 push	 eax
  000ba	6a 00		 push	 0
  000bc	68 00 10 00 00	 push	 4096			; 00001000H
  000c1	68 00 00 00 00	 push	 OFFSET $SG162354
  000c6	68 00 00 00 00	 push	 OFFSET $SG162355
  000cb	6a 00		 push	 0
  000cd	6a 00		 push	 0
  000cf	68 00 00 00 00	 push	 OFFSET $SG162356
  000d4	68 63 07 00 00	 push	 1891			; 00000763H
  000d9	68 00 00 00 00	 push	 OFFSET ?g_strUIEffectFile@@3PADA ; g_strUIEffectFile
  000de	e8 00 00 00 00	 call	 _D3DCompile@44
  000e3	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ea	7d 1f		 jge	 SHORT $LN19@OnD3D11Cre
  000ec	6a 01		 push	 1
  000ee	68 00 00 00 00	 push	 OFFSET $SG162360
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  000f6	51		 push	 ecx
  000f7	68 05 09 00 00	 push	 2309			; 00000905H
  000fc	68 00 00 00 00	 push	 OFFSET $SG162361
  00101	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00106	e9 22 08 00 00	 jmp	 $LN21@OnD3D11Cre
$LN19@OnD3D11Cre:
; Line 2311
  0010b	6a 00		 push	 0
  0010d	8d 55 d4	 lea	 edx, DWORD PTR _pPSUntexBlob$[ebp]
  00110	52		 push	 edx
  00111	6a 00		 push	 0
  00113	68 00 10 00 00	 push	 4096			; 00001000H
  00118	68 00 00 00 00	 push	 OFFSET $SG162362
  0011d	68 00 00 00 00	 push	 OFFSET $SG162363
  00122	6a 00		 push	 0
  00124	6a 00		 push	 0
  00126	68 00 00 00 00	 push	 OFFSET $SG162364
  0012b	68 63 07 00 00	 push	 1891			; 00000763H
  00130	68 00 00 00 00	 push	 OFFSET ?g_strUIEffectFile@@3PADA ; g_strUIEffectFile
  00135	e8 00 00 00 00	 call	 _D3DCompile@44
  0013a	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  0013d	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00141	7d 1f		 jge	 SHORT $LN18@OnD3D11Cre
  00143	6a 01		 push	 1
  00145	68 00 00 00 00	 push	 OFFSET $SG162368
  0014a	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  0014d	50		 push	 eax
  0014e	68 07 09 00 00	 push	 2311			; 00000907H
  00153	68 00 00 00 00	 push	 OFFSET $SG162369
  00158	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0015d	e9 cb 07 00 00	 jmp	 $LN21@OnD3D11Cre
$LN18@OnD3D11Cre:
; Line 2314
  00162	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	8b f4		 mov	 esi, esp
  00167	51		 push	 ecx
  00168	6a 00		 push	 0
  0016a	8b 55 ec	 mov	 edx, DWORD PTR _pVSBlob$[ebp]
  0016d	8b 02		 mov	 eax, DWORD PTR [edx]
  0016f	8b fc		 mov	 edi, esp
  00171	8b 4d ec	 mov	 ecx, DWORD PTR _pVSBlob$[ebp]
  00174	51		 push	 ecx
  00175	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00178	ff d2		 call	 edx
  0017a	3b fc		 cmp	 edi, esp
  0017c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00181	50		 push	 eax
  00182	8b 45 ec	 mov	 eax, DWORD PTR _pVSBlob$[ebp]
  00185	8b 08		 mov	 ecx, DWORD PTR [eax]
  00187	8b fc		 mov	 edi, esp
  00189	8b 55 ec	 mov	 edx, DWORD PTR _pVSBlob$[ebp]
  0018c	52		 push	 edx
  0018d	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00190	ff d0		 call	 eax
  00192	3b fc		 cmp	 edi, esp
  00194	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00199	50		 push	 eax
  0019a	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019f	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001a2	50		 push	 eax
  001a3	8b 4a 30	 mov	 ecx, DWORD PTR [edx+48]
  001a6	ff d1		 call	 ecx
  001a8	3b f4		 cmp	 esi, esp
  001aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001af	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  001b2	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b6	7d 1f		 jge	 SHORT $LN17@OnD3D11Cre
  001b8	6a 01		 push	 1
  001ba	68 00 00 00 00	 push	 OFFSET $SG162373
  001bf	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  001c2	52		 push	 edx
  001c3	68 0a 09 00 00	 push	 2314			; 0000090aH
  001c8	68 00 00 00 00	 push	 OFFSET $SG162374
  001cd	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001d2	e9 56 07 00 00	 jmp	 $LN21@OnD3D11Cre
$LN17@OnD3D11Cre:
; Line 2315
  001d7	68 00 00 00 00	 push	 OFFSET $SG162375
  001dc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	51		 push	 ecx
  001e2	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  001e7	83 c4 08	 add	 esp, 8
; Line 2317
  001ea	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001ed	83 c2 04	 add	 edx, 4
  001f0	8b f4		 mov	 esi, esp
  001f2	52		 push	 edx
  001f3	6a 00		 push	 0
  001f5	8b 45 e0	 mov	 eax, DWORD PTR _pPSBlob$[ebp]
  001f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fa	8b fc		 mov	 edi, esp
  001fc	8b 55 e0	 mov	 edx, DWORD PTR _pPSBlob$[ebp]
  001ff	52		 push	 edx
  00200	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00203	ff d0		 call	 eax
  00205	3b fc		 cmp	 edi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	50		 push	 eax
  0020d	8b 4d e0	 mov	 ecx, DWORD PTR _pPSBlob$[ebp]
  00210	8b 11		 mov	 edx, DWORD PTR [ecx]
  00212	8b fc		 mov	 edi, esp
  00214	8b 45 e0	 mov	 eax, DWORD PTR _pPSBlob$[ebp]
  00217	50		 push	 eax
  00218	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0021b	ff d1		 call	 ecx
  0021d	3b fc		 cmp	 edi, esp
  0021f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00224	50		 push	 eax
  00225	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00228	8b 02		 mov	 eax, DWORD PTR [edx]
  0022a	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0022d	51		 push	 ecx
  0022e	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00231	ff d2		 call	 edx
  00233	3b f4		 cmp	 esi, esp
  00235	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023a	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  0023d	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00241	7d 1f		 jge	 SHORT $LN16@OnD3D11Cre
  00243	6a 01		 push	 1
  00245	68 00 00 00 00	 push	 OFFSET $SG162379
  0024a	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  0024d	50		 push	 eax
  0024e	68 0d 09 00 00	 push	 2317			; 0000090dH
  00253	68 00 00 00 00	 push	 OFFSET $SG162380
  00258	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0025d	e9 cb 06 00 00	 jmp	 $LN21@OnD3D11Cre
$LN16@OnD3D11Cre:
; Line 2318
  00262	68 00 00 00 00	 push	 OFFSET $SG162381
  00267	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0026d	52		 push	 edx
  0026e	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00273	83 c4 08	 add	 esp, 8
; Line 2320
  00276	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00279	83 c0 08	 add	 eax, 8
  0027c	8b f4		 mov	 esi, esp
  0027e	50		 push	 eax
  0027f	6a 00		 push	 0
  00281	8b 4d d4	 mov	 ecx, DWORD PTR _pPSUntexBlob$[ebp]
  00284	8b 11		 mov	 edx, DWORD PTR [ecx]
  00286	8b fc		 mov	 edi, esp
  00288	8b 45 d4	 mov	 eax, DWORD PTR _pPSUntexBlob$[ebp]
  0028b	50		 push	 eax
  0028c	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0028f	ff d1		 call	 ecx
  00291	3b fc		 cmp	 edi, esp
  00293	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00298	50		 push	 eax
  00299	8b 55 d4	 mov	 edx, DWORD PTR _pPSUntexBlob$[ebp]
  0029c	8b 02		 mov	 eax, DWORD PTR [edx]
  0029e	8b fc		 mov	 edi, esp
  002a0	8b 4d d4	 mov	 ecx, DWORD PTR _pPSUntexBlob$[ebp]
  002a3	51		 push	 ecx
  002a4	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  002a7	ff d2		 call	 edx
  002a9	3b fc		 cmp	 edi, esp
  002ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b0	50		 push	 eax
  002b1	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  002b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b6	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  002b9	52		 push	 edx
  002ba	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  002bd	ff d0		 call	 eax
  002bf	3b f4		 cmp	 esi, esp
  002c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c6	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  002c9	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  002cd	7d 1f		 jge	 SHORT $LN15@OnD3D11Cre
  002cf	6a 01		 push	 1
  002d1	68 00 00 00 00	 push	 OFFSET $SG162385
  002d6	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  002d9	51		 push	 ecx
  002da	68 10 09 00 00	 push	 2320			; 00000910H
  002df	68 00 00 00 00	 push	 OFFSET $SG162386
  002e4	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  002e9	e9 3f 06 00 00	 jmp	 $LN21@OnD3D11Cre
$LN15@OnD3D11Cre:
; Line 2321
  002ee	68 00 00 00 00	 push	 OFFSET $SG162387
  002f3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002f6	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  002f9	50		 push	 eax
  002fa	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  002ff	83 c4 08	 add	 esp, 8
; Line 2325
  00302	6a 34		 push	 52			; 00000034H
  00304	6a 00		 push	 0
  00306	8d 4d 98	 lea	 ecx, DWORD PTR _DSDesc$[ebp]
  00309	51		 push	 ecx
  0030a	e8 00 00 00 00	 call	 _memset
  0030f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2326
  00312	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _DSDesc$[ebp], 0
; Line 2327
  00319	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR _DSDesc$[ebp+4], 1
; Line 2328
  00320	c7 45 a0 02 00
	00 00		 mov	 DWORD PTR _DSDesc$[ebp+8], 2
; Line 2329
  00327	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _DSDesc$[ebp+12], 0
; Line 2330
  0032e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00331	83 c2 0c	 add	 edx, 12			; 0000000cH
  00334	8b f4		 mov	 esi, esp
  00336	52		 push	 edx
  00337	8d 45 98	 lea	 eax, DWORD PTR _DSDesc$[ebp]
  0033a	50		 push	 eax
  0033b	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0033e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00340	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00343	50		 push	 eax
  00344	8b 4a 54	 mov	 ecx, DWORD PTR [edx+84]
  00347	ff d1		 call	 ecx
  00349	3b f4		 cmp	 esi, esp
  0034b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00350	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00353	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00357	7d 1f		 jge	 SHORT $LN14@OnD3D11Cre
  00359	6a 01		 push	 1
  0035b	68 00 00 00 00	 push	 OFFSET $SG162393
  00360	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  00363	52		 push	 edx
  00364	68 1a 09 00 00	 push	 2330			; 0000091aH
  00369	68 00 00 00 00	 push	 OFFSET $SG162394
  0036e	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00373	e9 b5 05 00 00	 jmp	 $LN21@OnD3D11Cre
$LN14@OnD3D11Cre:
; Line 2331
  00378	68 00 00 00 00	 push	 OFFSET $SG162395
  0037d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00380	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00383	51		 push	 ecx
  00384	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00389	83 c4 08	 add	 esp, 8
; Line 2334
  0038c	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _RSDesc$[ebp+36], 0
; Line 2335
  00393	c7 85 6c ff ff
	ff 03 00 00 00	 mov	 DWORD PTR _RSDesc$[ebp+4], 3
; Line 2336
  0039d	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _RSDesc$[ebp+12], 0
; Line 2337
  003a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  003af	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _RSDesc$[ebp+16], xmm0
; Line 2338
  003b7	c7 45 80 01 00
	00 00		 mov	 DWORD PTR _RSDesc$[ebp+24], 1
; Line 2339
  003be	c7 85 68 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR _RSDesc$[ebp], 3
; Line 2340
  003c8	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _RSDesc$[ebp+8], 0
; Line 2341
  003d2	c7 45 88 01 00
	00 00		 mov	 DWORD PTR _RSDesc$[ebp+32], 1
; Line 2342
  003d9	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _RSDesc$[ebp+28], 0
; Line 2343
  003e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  003e8	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _RSDesc$[ebp+20], xmm0
; Line 2344
  003f0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003f3	83 c2 10	 add	 edx, 16			; 00000010H
  003f6	8b f4		 mov	 esi, esp
  003f8	52		 push	 edx
  003f9	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _RSDesc$[ebp]
  003ff	50		 push	 eax
  00400	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00403	8b 11		 mov	 edx, DWORD PTR [ecx]
  00405	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00408	50		 push	 eax
  00409	8b 4a 58	 mov	 ecx, DWORD PTR [edx+88]
  0040c	ff d1		 call	 ecx
  0040e	3b f4		 cmp	 esi, esp
  00410	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00415	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00418	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0041c	7d 1f		 jge	 SHORT $LN13@OnD3D11Cre
  0041e	6a 01		 push	 1
  00420	68 00 00 00 00	 push	 OFFSET $SG162400
  00425	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  00428	52		 push	 edx
  00429	68 28 09 00 00	 push	 2344			; 00000928H
  0042e	68 00 00 00 00	 push	 OFFSET $SG162401
  00433	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00438	e9 f0 04 00 00	 jmp	 $LN21@OnD3D11Cre
$LN13@OnD3D11Cre:
; Line 2345
  0043d	68 00 00 00 00	 push	 OFFSET $SG162402
  00442	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00445	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00448	51		 push	 ecx
  00449	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0044e	83 c4 08	 add	 esp, 8
; Line 2348
  00451	68 08 01 00 00	 push	 264			; 00000108H
  00456	6a 00		 push	 0
  00458	8d 95 58 fe ff
	ff		 lea	 edx, DWORD PTR _BSDesc$[ebp]
  0045e	52		 push	 edx
  0045f	e8 00 00 00 00	 call	 _memset
  00464	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2350
  00467	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0046c	6b c8 00	 imul	 ecx, eax, 0
  0046f	c7 84 0d 60 fe
	ff ff 01 00 00
	00		 mov	 DWORD PTR _BSDesc$[ebp+ecx+8], 1
; Line 2351
  0047a	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0047f	6b c2 00	 imul	 eax, edx, 0
  00482	c7 84 05 64 fe
	ff ff 05 00 00
	00		 mov	 DWORD PTR _BSDesc$[ebp+eax+12], 5
; Line 2352
  0048d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00492	6b d1 00	 imul	 edx, ecx, 0
  00495	c7 84 15 68 fe
	ff ff 06 00 00
	00		 mov	 DWORD PTR _BSDesc$[ebp+edx+16], 6
; Line 2353
  004a0	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  004a5	6b c8 00	 imul	 ecx, eax, 0
  004a8	c7 84 0d 6c fe
	ff ff 01 00 00
	00		 mov	 DWORD PTR _BSDesc$[ebp+ecx+20], 1
; Line 2354
  004b3	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  004b8	6b c2 00	 imul	 eax, edx, 0
  004bb	c7 84 05 70 fe
	ff ff 02 00 00
	00		 mov	 DWORD PTR _BSDesc$[ebp+eax+24], 2
; Line 2355
  004c6	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  004cb	6b d1 00	 imul	 edx, ecx, 0
  004ce	c7 84 15 74 fe
	ff ff 01 00 00
	00		 mov	 DWORD PTR _BSDesc$[ebp+edx+28], 1
; Line 2356
  004d9	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  004de	6b c8 00	 imul	 ecx, eax, 0
  004e1	c7 84 0d 78 fe
	ff ff 01 00 00
	00		 mov	 DWORD PTR _BSDesc$[ebp+ecx+32], 1
; Line 2357
  004ec	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  004f1	6b c2 00	 imul	 eax, edx, 0
  004f4	c6 84 05 7c fe
	ff ff 0f	 mov	 BYTE PTR _BSDesc$[ebp+eax+36], 15 ; 0000000fH
; Line 2359
  004fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ff	83 c1 14	 add	 ecx, 20			; 00000014H
  00502	8b f4		 mov	 esi, esp
  00504	51		 push	 ecx
  00505	8d 95 58 fe ff
	ff		 lea	 edx, DWORD PTR _BSDesc$[ebp]
  0050b	52		 push	 edx
  0050c	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0050f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00511	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00514	52		 push	 edx
  00515	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00518	ff d0		 call	 eax
  0051a	3b f4		 cmp	 esi, esp
  0051c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00521	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00524	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00528	7d 1f		 jge	 SHORT $LN12@OnD3D11Cre
  0052a	6a 01		 push	 1
  0052c	68 00 00 00 00	 push	 OFFSET $SG162408
  00531	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  00534	51		 push	 ecx
  00535	68 37 09 00 00	 push	 2359			; 00000937H
  0053a	68 00 00 00 00	 push	 OFFSET $SG162409
  0053f	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00544	e9 e4 03 00 00	 jmp	 $LN21@OnD3D11Cre
$LN12@OnD3D11Cre:
; Line 2360
  00549	68 00 00 00 00	 push	 OFFSET $SG162410
  0054e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00551	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00554	50		 push	 eax
  00555	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0055a	83 c4 08	 add	 esp, 8
; Line 2363
  0055d	6a 34		 push	 52			; 00000034H
  0055f	6a 00		 push	 0
  00561	8d 8d 1c fe ff
	ff		 lea	 ecx, DWORD PTR _SSDesc$[ebp]
  00567	51		 push	 ecx
  00568	e8 00 00 00 00	 call	 _memset
  0056d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2364
  00570	c7 85 1c fe ff
	ff 55 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp], 85 ; 00000055H
; Line 2365
  0057a	c7 85 20 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp+4], 1
; Line 2366
  00584	c7 85 24 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp+8], 1
; Line 2367
  0058e	c7 85 28 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp+12], 1
; Line 2368
  00598	c7 85 34 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp+24], 1
; Line 2369
  005a2	c7 85 30 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp+20], 16 ; 00000010H
; Line 2370
  005ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  005b4	f3 0f 11 85 48
	fe ff ff	 movss	 DWORD PTR _SSDesc$[ebp+44], xmm0
; Line 2371
  005bc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  005c4	f3 0f 11 85 4c
	fe ff ff	 movss	 DWORD PTR _SSDesc$[ebp+48], xmm0
; Line 2372
  005cc	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  005cf	8b 02		 mov	 eax, DWORD PTR [edx]
  005d1	8b f4		 mov	 esi, esp
  005d3	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  005d6	51		 push	 ecx
  005d7	8b 90 94 00 00
	00		 mov	 edx, DWORD PTR [eax+148]
  005dd	ff d2		 call	 edx
  005df	3b f4		 cmp	 esi, esp
  005e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005e6	3d 00 93 00 00	 cmp	 eax, 37632		; 00009300H
  005eb	7d 14		 jge	 SHORT $LN11@OnD3D11Cre
; Line 2374
  005ed	c7 85 1c fe ff
	ff 15 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp], 21 ; 00000015H
; Line 2375
  005f7	c7 85 30 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _SSDesc$[ebp+20], 0
$LN11@OnD3D11Cre:
; Line 2377
  00601	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00604	83 c0 18	 add	 eax, 24			; 00000018H
  00607	8b f4		 mov	 esi, esp
  00609	50		 push	 eax
  0060a	8d 8d 1c fe ff
	ff		 lea	 ecx, DWORD PTR _SSDesc$[ebp]
  00610	51		 push	 ecx
  00611	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00614	8b 02		 mov	 eax, DWORD PTR [edx]
  00616	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00619	51		 push	 ecx
  0061a	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  0061d	ff d2		 call	 edx
  0061f	3b f4		 cmp	 esi, esp
  00621	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00626	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00629	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0062d	7d 1f		 jge	 SHORT $LN10@OnD3D11Cre
  0062f	6a 01		 push	 1
  00631	68 00 00 00 00	 push	 OFFSET $SG162417
  00636	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00639	50		 push	 eax
  0063a	68 49 09 00 00	 push	 2377			; 00000949H
  0063f	68 00 00 00 00	 push	 OFFSET $SG162418
  00644	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00649	e9 df 02 00 00	 jmp	 $LN21@OnD3D11Cre
$LN10@OnD3D11Cre:
; Line 2378
  0064e	68 00 00 00 00	 push	 OFFSET $SG162419
  00653	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00656	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00659	52		 push	 edx
  0065a	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0065f	83 c4 08	 add	 esp, 8
; Line 2381
  00662	c7 85 14 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1[ebp], 0
  0066c	eb 0f		 jmp	 SHORT $LN9@OnD3D11Cre
$LN8@OnD3D11Cre:
  0066e	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  00674	83 c0 01	 add	 eax, 1
  00677	89 85 14 fe ff
	ff		 mov	 DWORD PTR _i$1[ebp], eax
$LN9@OnD3D11Cre:
  0067d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00680	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00686	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QBEIXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::size
  0068b	39 85 14 fe ff
	ff		 cmp	 DWORD PTR _i$1[ebp], eax
  00691	73 22		 jae	 SHORT $LN7@OnD3D11Cre
; Line 2383
  00693	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR _i$1[ebp]
  00699	51		 push	 ecx
  0069a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069d	e8 00 00 00 00	 call	 ?CreateTexture11@CDXUTDialogResourceManager@@IAEJI@Z ; CDXUTDialogResourceManager::CreateTexture11
  006a2	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
; Line 2384
  006a5	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  006a9	7d 08		 jge	 SHORT $LN6@OnD3D11Cre
; Line 2385
  006ab	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  006ae	e9 7a 02 00 00	 jmp	 $LN21@OnD3D11Cre
$LN6@OnD3D11Cre:
; Line 2386
  006b3	eb b9		 jmp	 SHORT $LN8@OnD3D11Cre
$LN7@OnD3D11Cre:
; Line 2394
  006b5	c7 85 bc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp], OFFSET $SG162428
  006bf	c7 85 c0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+4], 0
  006c9	c7 85 c4 fd ff
	ff 06 00 00 00	 mov	 DWORD PTR _layout$[ebp+8], 6
  006d3	c7 85 c8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+12], 0
  006dd	c7 85 cc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+16], 0
  006e7	c7 85 d0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+20], 0
  006f1	c7 85 d4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+24], 0
  006fb	c7 85 d8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+28], OFFSET $SG162429
  00705	c7 85 dc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+32], 0
  0070f	c7 85 e0 fd ff
	ff 02 00 00 00	 mov	 DWORD PTR _layout$[ebp+36], 2
  00719	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+40], 0
  00723	c7 85 e8 fd ff
	ff 0c 00 00 00	 mov	 DWORD PTR _layout$[ebp+44], 12 ; 0000000cH
  0072d	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+48], 0
  00737	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+52], 0
  00741	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+56], OFFSET $SG162430
  0074b	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+60], 0
  00755	c7 85 fc fd ff
	ff 10 00 00 00	 mov	 DWORD PTR _layout$[ebp+64], 16 ; 00000010H
  0075f	c7 85 00 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+68], 0
  00769	c7 85 04 fe ff
	ff 1c 00 00 00	 mov	 DWORD PTR _layout$[ebp+72], 28 ; 0000001cH
  00773	c7 85 08 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+76], 0
  0077d	c7 85 0c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _layout$[ebp+80], 0
; Line 2396
  00787	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0078a	83 c2 44	 add	 edx, 68			; 00000044H
  0078d	8b f4		 mov	 esi, esp
  0078f	52		 push	 edx
  00790	8b 45 ec	 mov	 eax, DWORD PTR _pVSBlob$[ebp]
  00793	8b 08		 mov	 ecx, DWORD PTR [eax]
  00795	8b fc		 mov	 edi, esp
  00797	8b 55 ec	 mov	 edx, DWORD PTR _pVSBlob$[ebp]
  0079a	52		 push	 edx
  0079b	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0079e	ff d0		 call	 eax
  007a0	3b fc		 cmp	 edi, esp
  007a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007a7	50		 push	 eax
  007a8	8b 4d ec	 mov	 ecx, DWORD PTR _pVSBlob$[ebp]
  007ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  007ad	8b fc		 mov	 edi, esp
  007af	8b 45 ec	 mov	 eax, DWORD PTR _pVSBlob$[ebp]
  007b2	50		 push	 eax
  007b3	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  007b6	ff d1		 call	 ecx
  007b8	3b fc		 cmp	 edi, esp
  007ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007bf	50		 push	 eax
  007c0	6a 03		 push	 3
  007c2	8d 95 bc fd ff
	ff		 lea	 edx, DWORD PTR _layout$[ebp]
  007c8	52		 push	 edx
  007c9	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  007cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  007ce	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  007d1	52		 push	 edx
  007d2	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  007d5	ff d0		 call	 eax
  007d7	3b f4		 cmp	 esi, esp
  007d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007de	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  007e1	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  007e5	7d 1f		 jge	 SHORT $LN5@OnD3D11Cre
  007e7	6a 01		 push	 1
  007e9	68 00 00 00 00	 push	 OFFSET $SG162439
  007ee	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  007f1	51		 push	 ecx
  007f2	68 5c 09 00 00	 push	 2396			; 0000095cH
  007f7	68 00 00 00 00	 push	 OFFSET $SG162440
  007fc	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00801	e9 27 01 00 00	 jmp	 $LN21@OnD3D11Cre
$LN5@OnD3D11Cre:
; Line 2397
  00806	68 00 00 00 00	 push	 OFFSET $SG162441
  0080b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0080e	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00811	50		 push	 eax
  00812	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00817	83 c4 08	 add	 esp, 8
; Line 2400
  0081a	83 7d ec 00	 cmp	 DWORD PTR _pVSBlob$[ebp], 0
  0081e	74 1e		 je	 SHORT $LN4@OnD3D11Cre
  00820	8b 4d ec	 mov	 ecx, DWORD PTR _pVSBlob$[ebp]
  00823	8b 11		 mov	 edx, DWORD PTR [ecx]
  00825	8b f4		 mov	 esi, esp
  00827	8b 45 ec	 mov	 eax, DWORD PTR _pVSBlob$[ebp]
  0082a	50		 push	 eax
  0082b	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0082e	ff d1		 call	 ecx
  00830	3b f4		 cmp	 esi, esp
  00832	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00837	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pVSBlob$[ebp], 0
$LN4@OnD3D11Cre:
; Line 2401
  0083e	83 7d e0 00	 cmp	 DWORD PTR _pPSBlob$[ebp], 0
  00842	74 1e		 je	 SHORT $LN3@OnD3D11Cre
  00844	8b 55 e0	 mov	 edx, DWORD PTR _pPSBlob$[ebp]
  00847	8b 02		 mov	 eax, DWORD PTR [edx]
  00849	8b f4		 mov	 esi, esp
  0084b	8b 4d e0	 mov	 ecx, DWORD PTR _pPSBlob$[ebp]
  0084e	51		 push	 ecx
  0084f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00852	ff d2		 call	 edx
  00854	3b f4		 cmp	 esi, esp
  00856	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0085b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pPSBlob$[ebp], 0
$LN3@OnD3D11Cre:
; Line 2402
  00862	83 7d d4 00	 cmp	 DWORD PTR _pPSUntexBlob$[ebp], 0
  00866	74 1e		 je	 SHORT $LN2@OnD3D11Cre
  00868	8b 45 d4	 mov	 eax, DWORD PTR _pPSUntexBlob$[ebp]
  0086b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0086d	8b f4		 mov	 esi, esp
  0086f	8b 55 d4	 mov	 edx, DWORD PTR _pPSUntexBlob$[ebp]
  00872	52		 push	 edx
  00873	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00876	ff d0		 call	 eax
  00878	3b f4		 cmp	 esi, esp
  0087a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0087f	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pPSUntexBlob$[ebp], 0
$LN2@OnD3D11Cre:
; Line 2406
  00886	c7 85 9c fd ff
	ff 90 00 00 00	 mov	 DWORD PTR _BufDesc$[ebp], 144 ; 00000090H
; Line 2407
  00890	c7 85 a0 fd ff
	ff 02 00 00 00	 mov	 DWORD PTR _BufDesc$[ebp+4], 2
; Line 2408
  0089a	c7 85 a4 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _BufDesc$[ebp+8], 1
; Line 2409
  008a4	c7 85 a8 fd ff
	ff 00 00 01 00	 mov	 DWORD PTR _BufDesc$[ebp+12], 65536 ; 00010000H
; Line 2410
  008ae	c7 85 ac fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _BufDesc$[ebp+16], 0
; Line 2411
  008b8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008bb	83 c1 48	 add	 ecx, 72			; 00000048H
  008be	8b f4		 mov	 esi, esp
  008c0	51		 push	 ecx
  008c1	6a 00		 push	 0
  008c3	8d 95 9c fd ff
	ff		 lea	 edx, DWORD PTR _BufDesc$[ebp]
  008c9	52		 push	 edx
  008ca	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  008cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  008cf	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  008d2	52		 push	 edx
  008d3	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  008d6	ff d0		 call	 eax
  008d8	3b f4		 cmp	 esi, esp
  008da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008df	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  008e2	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  008e6	7d 1c		 jge	 SHORT $LN1@OnD3D11Cre
  008e8	6a 01		 push	 1
  008ea	68 00 00 00 00	 push	 OFFSET $SG162450
  008ef	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  008f2	51		 push	 ecx
  008f3	68 6b 09 00 00	 push	 2411			; 0000096bH
  008f8	68 00 00 00 00	 push	 OFFSET $SG162451
  008fd	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00902	eb 29		 jmp	 SHORT $LN21@OnD3D11Cre
$LN1@OnD3D11Cre:
; Line 2412
  00904	68 00 00 00 00	 push	 OFFSET $SG162452
  00909	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0090c	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0090f	50		 push	 eax
  00910	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00915	83 c4 08	 add	 esp, 8
; Line 2415
  00918	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0091b	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  0091e	52		 push	 edx
  0091f	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00922	50		 push	 eax
  00923	e8 00 00 00 00	 call	 ?InitFont11@@YAJPAUID3D11Device@@PAUID3D11InputLayout@@@Z ; InitFont11
  00928	83 c4 08	 add	 esp, 8
; Line 2417
  0092b	33 c0		 xor	 eax, eax
$LN21@OnD3D11Cre:
; Line 2418
  0092d	52		 push	 edx
  0092e	8b cd		 mov	 ecx, ebp
  00930	50		 push	 eax
  00931	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN33@OnD3D11Cre
  00937	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0093c	58		 pop	 eax
  0093d	5a		 pop	 edx
  0093e	5f		 pop	 edi
  0093f	5e		 pop	 esi
  00940	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00943	33 cd		 xor	 ecx, ebp
  00945	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0094a	81 c4 68 02 00
	00		 add	 esp, 616		; 00000268H
  00950	3b ec		 cmp	 ebp, esp
  00952	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00957	8b e5		 mov	 esp, ebp
  00959	5d		 pop	 ebp
  0095a	c2 08 00	 ret	 8
  0095d	8d 49 00	 npad	 3
$LN33@OnD3D11Cre:
  00960	09 00 00 00	 DD	 9
  00964	00 00 00 00	 DD	 $LN32@OnD3D11Cre
$LN32@OnD3D11Cre:
  00968	ec ff ff ff	 DD	 -20			; ffffffecH
  0096c	04 00 00 00	 DD	 4
  00970	00 00 00 00	 DD	 $LN23@OnD3D11Cre
  00974	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00978	04 00 00 00	 DD	 4
  0097c	00 00 00 00	 DD	 $LN24@OnD3D11Cre
  00980	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00984	04 00 00 00	 DD	 4
  00988	00 00 00 00	 DD	 $LN25@OnD3D11Cre
  0098c	98 ff ff ff	 DD	 -104			; ffffff98H
  00990	34 00 00 00	 DD	 52			; 00000034H
  00994	00 00 00 00	 DD	 $LN26@OnD3D11Cre
  00998	68 ff ff ff	 DD	 -152			; ffffff68H
  0099c	28 00 00 00	 DD	 40			; 00000028H
  009a0	00 00 00 00	 DD	 $LN27@OnD3D11Cre
  009a4	58 fe ff ff	 DD	 -424			; fffffe58H
  009a8	08 01 00 00	 DD	 264			; 00000108H
  009ac	00 00 00 00	 DD	 $LN28@OnD3D11Cre
  009b0	1c fe ff ff	 DD	 -484			; fffffe1cH
  009b4	34 00 00 00	 DD	 52			; 00000034H
  009b8	00 00 00 00	 DD	 $LN29@OnD3D11Cre
  009bc	bc fd ff ff	 DD	 -580			; fffffdbcH
  009c0	54 00 00 00	 DD	 84			; 00000054H
  009c4	00 00 00 00	 DD	 $LN30@OnD3D11Cre
  009c8	9c fd ff ff	 DD	 -612			; fffffd9cH
  009cc	18 00 00 00	 DD	 24			; 00000018H
  009d0	00 00 00 00	 DD	 $LN31@OnD3D11Cre
$LN31@OnD3D11Cre:
  009d4	42		 DB	 66			; 00000042H
  009d5	75		 DB	 117			; 00000075H
  009d6	66		 DB	 102			; 00000066H
  009d7	44		 DB	 68			; 00000044H
  009d8	65		 DB	 101			; 00000065H
  009d9	73		 DB	 115			; 00000073H
  009da	63		 DB	 99			; 00000063H
  009db	00		 DB	 0
$LN30@OnD3D11Cre:
  009dc	6c		 DB	 108			; 0000006cH
  009dd	61		 DB	 97			; 00000061H
  009de	79		 DB	 121			; 00000079H
  009df	6f		 DB	 111			; 0000006fH
  009e0	75		 DB	 117			; 00000075H
  009e1	74		 DB	 116			; 00000074H
  009e2	00		 DB	 0
$LN29@OnD3D11Cre:
  009e3	53		 DB	 83			; 00000053H
  009e4	53		 DB	 83			; 00000053H
  009e5	44		 DB	 68			; 00000044H
  009e6	65		 DB	 101			; 00000065H
  009e7	73		 DB	 115			; 00000073H
  009e8	63		 DB	 99			; 00000063H
  009e9	00		 DB	 0
$LN28@OnD3D11Cre:
  009ea	42		 DB	 66			; 00000042H
  009eb	53		 DB	 83			; 00000053H
  009ec	44		 DB	 68			; 00000044H
  009ed	65		 DB	 101			; 00000065H
  009ee	73		 DB	 115			; 00000073H
  009ef	63		 DB	 99			; 00000063H
  009f0	00		 DB	 0
$LN27@OnD3D11Cre:
  009f1	52		 DB	 82			; 00000052H
  009f2	53		 DB	 83			; 00000053H
  009f3	44		 DB	 68			; 00000044H
  009f4	65		 DB	 101			; 00000065H
  009f5	73		 DB	 115			; 00000073H
  009f6	63		 DB	 99			; 00000063H
  009f7	00		 DB	 0
$LN26@OnD3D11Cre:
  009f8	44		 DB	 68			; 00000044H
  009f9	53		 DB	 83			; 00000053H
  009fa	44		 DB	 68			; 00000044H
  009fb	65		 DB	 101			; 00000065H
  009fc	73		 DB	 115			; 00000073H
  009fd	63		 DB	 99			; 00000063H
  009fe	00		 DB	 0
$LN25@OnD3D11Cre:
  009ff	70		 DB	 112			; 00000070H
  00a00	50		 DB	 80			; 00000050H
  00a01	53		 DB	 83			; 00000053H
  00a02	55		 DB	 85			; 00000055H
  00a03	6e		 DB	 110			; 0000006eH
  00a04	74		 DB	 116			; 00000074H
  00a05	65		 DB	 101			; 00000065H
  00a06	78		 DB	 120			; 00000078H
  00a07	42		 DB	 66			; 00000042H
  00a08	6c		 DB	 108			; 0000006cH
  00a09	6f		 DB	 111			; 0000006fH
  00a0a	62		 DB	 98			; 00000062H
  00a0b	00		 DB	 0
$LN24@OnD3D11Cre:
  00a0c	70		 DB	 112			; 00000070H
  00a0d	50		 DB	 80			; 00000050H
  00a0e	53		 DB	 83			; 00000053H
  00a0f	42		 DB	 66			; 00000042H
  00a10	6c		 DB	 108			; 0000006cH
  00a11	6f		 DB	 111			; 0000006fH
  00a12	62		 DB	 98			; 00000062H
  00a13	00		 DB	 0
$LN23@OnD3D11Cre:
  00a14	70		 DB	 112			; 00000070H
  00a15	56		 DB	 86			; 00000056H
  00a16	53		 DB	 83			; 00000053H
  00a17	42		 DB	 66			; 00000042H
  00a18	6c		 DB	 108			; 0000006cH
  00a19	6f		 DB	 111			; 0000006fH
  00a1a	62		 DB	 98			; 00000062H
  00a1b	00		 DB	 0
?OnD3D11CreateDevice@CDXUTDialogResourceManager@@QAEJPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ENDP ; CDXUTDialogResourceManager::OnD3D11CreateDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?MsgProc@CDXUTDialogResourceManager@@QAE_NPAUHWND__@@IIJ@Z PROC ; CDXUTDialogResourceManager::MsgProc
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2285
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2290
  0000e	32 c0		 xor	 al, al
; Line 2291
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 10 00	 ret	 16			; 00000010H
?MsgProc@CDXUTDialogResourceManager@@QAE_NPAUHWND__@@IIJ@Z ENDP ; CDXUTDialogResourceManager::MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv187 = -112						; size = 4
tv141 = -108						; size = 4
tv184 = -104						; size = 4
tv74 = -100						; size = 4
$T2 = -96						; size = 4
$T3 = -92						; size = 12
$T4 = -77						; size = 1
$T5 = -76						; size = 4
$T6 = -72						; size = 12
$T7 = -57						; size = 1
_it$8 = -52						; size = 12
_it$9 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDXUTDialogResourceManager@@QAE@XZ PROC		; CDXUTDialogResourceManager::~CDXUTDialogResourceManager
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2267
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDXUTDialogResourceManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 64	 sub	 esp, 100		; 00000064H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d 90	 lea	 edi, DWORD PTR [ebp-112]
  00019	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; Line 2268
  00041	8d 45 e0	 lea	 eax, DWORD PTR _it$9[ebp]
  00044	50		 push	 eax
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0004e	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::begin
  00053	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00057	eb 08		 jmp	 SHORT $LN8@CDXUTDialo
$LN7@CDXUTDialo:
  00059	8d 4d e0	 lea	 ecx, DWORD PTR _it$9[ebp]
  0005c	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator++
$LN8@CDXUTDialo:
  00061	8d 4d b8	 lea	 ecx, DWORD PTR $T6[ebp]
  00064	51		 push	 ecx
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0006e	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@2@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::end
  00073	89 45 9c	 mov	 DWORD PTR tv74[ebp], eax
  00076	8b 55 9c	 mov	 edx, DWORD PTR tv74[ebp]
  00079	89 55 98	 mov	 DWORD PTR tv184[ebp], edx
  0007c	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00080	8b 45 98	 mov	 eax, DWORD PTR tv184[ebp]
  00083	50		 push	 eax
  00084	8d 4d e0	 lea	 ecx, DWORD PTR _it$9[ebp]
  00087	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator!=
  0008c	88 45 c7	 mov	 BYTE PTR $T7[ebp], al
  0008f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00093	8d 4d b8	 lea	 ecx, DWORD PTR $T6[ebp]
  00096	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
  0009b	0f b6 4d c7	 movzx	 ecx, BYTE PTR $T7[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	74 36		 je	 SHORT $LN6@CDXUTDialo
; Line 2270
  000a3	8d 4d e0	 lea	 ecx, DWORD PTR _it$9[ebp]
  000a6	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEAAPAUDXUTFontNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
  000ab	83 38 00	 cmp	 DWORD PTR [eax], 0
  000ae	74 27		 je	 SHORT $LN5@CDXUTDialo
  000b0	8d 4d e0	 lea	 ecx, DWORD PTR _it$9[ebp]
  000b3	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEAAPAUDXUTFontNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
  000b8	8b 10		 mov	 edx, DWORD PTR [eax]
  000ba	89 55 b4	 mov	 DWORD PTR $T5[ebp], edx
  000bd	8b 45 b4	 mov	 eax, DWORD PTR $T5[ebp]
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c6	83 c4 04	 add	 esp, 4
  000c9	8d 4d e0	 lea	 ecx, DWORD PTR _it$9[ebp]
  000cc	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QBEAAPAUDXUTFontNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTFontNode *> > >::operator*
  000d1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@CDXUTDialo:
  000d7	eb 80		 jmp	 SHORT $LN7@CDXUTDialo
$LN6@CDXUTDialo:
; Line 2271
  000d9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000dd	8d 4d e0	 lea	 ecx, DWORD PTR _it$9[ebp]
  000e0	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
; Line 2272
  000e5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  000ee	e8 00 00 00 00	 call	 ?clear@?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAEXXZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::clear
; Line 2274
  000f3	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  000f6	51		 push	 ecx
  000f7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00100	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::begin
  00105	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00109	eb 08		 jmp	 SHORT $LN4@CDXUTDialo
$LN3@CDXUTDialo:
  0010b	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  0010e	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator++
$LN4@CDXUTDialo:
  00113	8d 55 a4	 lea	 edx, DWORD PTR $T3[ebp]
  00116	52		 push	 edx
  00117	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00120	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@2@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::end
  00125	89 45 94	 mov	 DWORD PTR tv141[ebp], eax
  00128	8b 45 94	 mov	 eax, DWORD PTR tv141[ebp]
  0012b	89 45 90	 mov	 DWORD PTR tv187[ebp], eax
  0012e	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00132	8b 4d 90	 mov	 ecx, DWORD PTR tv187[ebp]
  00135	51		 push	 ecx
  00136	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  00139	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator!=
  0013e	88 45 b3	 mov	 BYTE PTR $T4[ebp], al
  00141	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00145	8d 4d a4	 lea	 ecx, DWORD PTR $T3[ebp]
  00148	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
  0014d	0f b6 55 b3	 movzx	 edx, BYTE PTR $T4[ebp]
  00151	85 d2		 test	 edx, edx
  00153	74 36		 je	 SHORT $LN2@CDXUTDialo
; Line 2276
  00155	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  00158	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  0015d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00160	74 27		 je	 SHORT $LN1@CDXUTDialo
  00162	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  00165	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  0016a	8b 00		 mov	 eax, DWORD PTR [eax]
  0016c	89 45 a0	 mov	 DWORD PTR $T2[ebp], eax
  0016f	8b 4d a0	 mov	 ecx, DWORD PTR $T2[ebp]
  00172	51		 push	 ecx
  00173	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00178	83 c4 04	 add	 esp, 4
  0017b	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  0017e	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QBEAAPAUDXUTTextureNode@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTTextureNode *> > >::operator*
  00183	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@CDXUTDialo:
  00189	eb 80		 jmp	 SHORT $LN3@CDXUTDialo
$LN2@CDXUTDialo:
; Line 2277
  0018b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0018f	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  00192	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
; Line 2278
  00197	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019a	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  001a0	e8 00 00 00 00	 call	 ?clear@?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAEXXZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::clear
; Line 2279
  001a5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001a9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  001b2	e8 00 00 00 00	 call	 ??1?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::~vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >
  001b7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001bb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001be	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  001c4	e8 00 00 00 00	 call	 ??1?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::~vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
  001c9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	83 c1 6c	 add	 ecx, 108		; 0000006cH
  001d3	e8 00 00 00 00	 call	 ??1?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::~vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
  001d8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001df	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001e2	83 c1 54	 add	 ecx, 84			; 00000054H
  001e5	e8 00 00 00 00	 call	 ??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::~vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
  001ea	52		 push	 edx
  001eb	8b cd		 mov	 ecx, ebp
  001ed	50		 push	 eax
  001ee	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@CDXUTDialo
  001f4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001f9	58		 pop	 eax
  001fa	5a		 pop	 edx
  001fb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001fe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00205	59		 pop	 ecx
  00206	5f		 pop	 edi
  00207	83 c4 70	 add	 esp, 112		; 00000070H
  0020a	3b ec		 cmp	 ebp, esp
  0020c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00211	8b e5		 mov	 esp, ebp
  00213	5d		 pop	 ebp
  00214	c3		 ret	 0
  00215	8d 49 00	 npad	 3
$LN23@CDXUTDialo:
  00218	02 00 00 00	 DD	 2
  0021c	00 00 00 00	 DD	 $LN22@CDXUTDialo
$LN22@CDXUTDialo:
  00220	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00224	0c 00 00 00	 DD	 12			; 0000000cH
  00228	00 00 00 00	 DD	 $LN19@CDXUTDialo
  0022c	cc ff ff ff	 DD	 -52			; ffffffccH
  00230	0c 00 00 00	 DD	 12			; 0000000cH
  00234	00 00 00 00	 DD	 $LN20@CDXUTDialo
$LN20@CDXUTDialo:
  00238	69		 DB	 105			; 00000069H
  00239	74		 DB	 116			; 00000074H
  0023a	00		 DB	 0
$LN19@CDXUTDialo:
  0023b	69		 DB	 105			; 00000069H
  0023c	74		 DB	 116			; 00000074H
  0023d	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 54	 add	 ecx, 84			; 00000054H
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::~vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::~vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0001f	e9 00 00 00 00	 jmp	 ??1?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::~vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0002d	e9 00 00 00 00	 jmp	 ??1?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::~vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$4:
  00032	8d 4d e0	 lea	 ecx, DWORD PTR _it$9[ebp]
  00035	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$5:
  0003a	8d 4d b8	 lea	 ecx, DWORD PTR $T6[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTFontNode@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$6:
  00042	8d 4d cc	 lea	 ecx, DWORD PTR _it$8[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1CDXUTDialogResourceManager@@QAE@XZ$7:
  0004a	8d 4d a4	 lea	 ecx, DWORD PTR $T3[ebp]
  0004d	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTTextureNode@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1CDXUTDialogResourceManager@@QAE@XZ:
  00052	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00056	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00059	8b 4a 94	 mov	 ecx, DWORD PTR [edx-108]
  0005c	33 c8		 xor	 ecx, eax
  0005e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00063	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDXUTDialogResourceManager@@QAE@XZ
  00068	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDXUTDialogResourceManager@@QAE@XZ ENDP		; CDXUTDialogResourceManager::~CDXUTDialogResourceManager
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDXUTDialogResourceManager@@QAE@XZ PROC		; CDXUTDialogResourceManager::CDXUTDialogResourceManager
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 2261
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDXUTDialogResourceManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00040	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00043	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  0004a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0005e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00061	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  00072	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  0007c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0007f	c7 42 24 00 00
	00 00		 mov	 DWORD PTR [edx+36], 0
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0
  00090	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0
  0009a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0009d	c7 42 44 00 00
	00 00		 mov	 DWORD PTR [edx+68], 0
  000a4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
  000ae	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	c7 41 4c 00 00
	00 00		 mov	 DWORD PTR [ecx+76], 0
  000b8	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000bb	c7 42 50 00 00
	00 00		 mov	 DWORD PTR [edx+80], 0
  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 c1 54	 add	 ecx, 84			; 00000054H
  000c8	e8 00 00 00 00	 call	 ??0?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
  000cd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000d4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	83 c1 6c	 add	 ecx, 108		; 0000006cH
  000da	e8 00 00 00 00	 call	 ??0?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
  000df	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000e3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  000ec	e8 00 00 00 00	 call	 ??0?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
  000f1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  000fe	e8 00 00 00 00	 call	 ??0?$vector@PAUDXUTFontNode@@V?$allocator@PAUDXUTFontNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >::vector<DXUTFontNode *,std::allocator<DXUTFontNode *> >
; Line 2262
  00103	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00110	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00117	59		 pop	 ecx
  00118	83 c4 10	 add	 esp, 16			; 00000010H
  0011b	3b ec		 cmp	 ebp, esp
  0011d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDXUTDialogResourceManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 54	 add	 ecx, 84			; 00000054H
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAE@XZ ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::~vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >
__unwindfunclet$??0CDXUTDialogResourceManager@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::~vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >
__unwindfunclet$??0CDXUTDialogResourceManager@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0001f	e9 00 00 00 00	 jmp	 ??1?$vector@PAUDXUTTextureNode@@V?$allocator@PAUDXUTTextureNode@@@std@@@std@@QAE@XZ ; std::vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >::~vector<DXUTTextureNode *,std::allocator<DXUTTextureNode *> >
__ehhandler$??0CDXUTDialogResourceManager@@QAE@XZ:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDXUTDialogResourceManager@@QAE@XZ
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDXUTDialogResourceManager@@QAE@XZ ENDP		; CDXUTDialogResourceManager::CDXUTDialogResourceManager
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTSpriteVertex@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTSpriteVertex@@QAE@XZ PROC			; DXUTSpriteVertex::DXUTSpriteVertex, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@XZ ; DirectX::XMFLOAT3::XMFLOAT3
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001c	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@XZ ; DirectX::XMFLOAT4::XMFLOAT4
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00027	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@XZ ; DirectX::XMFLOAT2::XMFLOAT2
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??0DXUTSpriteVertex@@QAE@XZ ENDP			; DXUTSpriteVertex::DXUTSpriteVertex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXXZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXXZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXXZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXPAPAUDXUTElementHolder@@0@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXXZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEII@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEPAPAUDXUTElementHolder@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAUDXUTElementHolder@@@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEPAPAUDXUTElementHolder@@PAPAU2@00@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Umove<DXUTElementHolder * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXPAPAUDXUTElementHolder@@0@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBE_NPBQAUDXUTElementHolder@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBE_NPBQAUDXUTElementHolder@@@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBE_NPBQAUDXUTElementHolder@@@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEII@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEII@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXPAPAUDXUTElementHolder@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXPAPAUDXUTElementHolder@@0@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@YAXPAPAUDXUTElementHolder@@0AAU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DXUTElementHolder *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXPAPAUDXUTElementHolder@@0@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXXZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXPAPAUDXUTElementHolder@@0@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXXZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXABQAUDXUTElementHolder@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXABQAUDXUTElementHolder@@@Z PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTElementHolder@@@std@@YAPBQAUDXUTElementHolder@@ABQAU1@@Z ; std::addressof<DXUTElementHolder * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBE_NPBQAUDXUTElementHolder@@@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAUDXUTElementHolder@@@std@@YAPBQAUDXUTElementHolder@@ABQAU1@@Z ; std::addressof<DXUTElementHolder * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAUDXUTElementHolder@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXI@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IBEXPAPAUDXUTElementHolder@@0@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAUDXUTElementHolder@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::construct<DXUTElementHolder *,DXUTElementHolder * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXABQAUDXUTElementHolder@@@Z ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cend@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cend@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1074
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1075
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1076
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cend@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cbegin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cbegin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1069
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1070
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1071
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cbegin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1040
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1030
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@PAPAUDXUTElementHolder@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::~vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@IAEXXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::~vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ PROC ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTElementHolder@@@std@@QAE@XZ ; std::allocator<DXUTElementHolder *>::allocator<DXUTElementHolder *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ENDP ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::_Wrap_alloc<std::allocator<DXUTElementHolder *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::~_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DXUTElementHolder *> >::_Vector_val<std::_Simple_types<DXUTElementHolder *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUDXUTElementHolder@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >::_Vector_alloc<0,std::_Vec_base_types<DXUTElementHolder *,std::allocator<DXUTElementHolder *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTElementHolder *> >::~_Vector_val<std::_Simple_types<DXUTElementHolder *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTElementHolder *> >::~_Vector_val<std::_Simple_types<DXUTElementHolder *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DXUTElementHolder *> >::_Vector_val<std::_Simple_types<DXUTElementHolder *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DXUTElementHolder *> >::_Vector_val<std::_Simple_types<DXUTElementHolder *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAIABV?$allocator@PAUDXUTElementHolder@@@2@@Z ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ; std::allocator<DXUTElementHolder *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEPAPAUDXUTElementHolder@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEPAPAUDXUTElementHolder@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEPAPAUDXUTElementHolder@@I@Z ; std::allocator<DXUTElementHolder *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEPAPAUDXUTElementHolder@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::_Wrap_alloc<std::allocator<DXUTElementHolder *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAUDXUTElementHolder@@@std@@QAE@XZ ; std::allocator<DXUTElementHolder *>::allocator<DXUTElementHolder *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DXUTElementHolder *> >::_Wrap_alloc<std::allocator<DXUTElementHolder *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAIABV?$allocator@PAUDXUTElementHolder@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAIABV?$allocator@PAUDXUTElementHolder@@@2@@Z PROC ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAUDXUTElementHolder@@@std@@QBEIXZ ; std::allocator<DXUTElementHolder *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@SAIABV?$allocator@PAUDXUTElementHolder@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DXUTElementHolder *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAUDXUTElementHolder@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUDXUTElementHolder@@@std@@QBEIXZ PROC ; std::allocator<DXUTElementHolder *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAUDXUTElementHolder@@@std@@QBEIXZ ENDP ; std::allocator<DXUTElementHolder *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU3@@Z PROC ; std::allocator<DXUTElementHolder *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@ABQAU3@@Z ENDP ; std::allocator<DXUTElementHolder *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEPAPAUDXUTElementHolder@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEPAPAUDXUTElementHolder@@I@Z PROC ; std::allocator<DXUTElementHolder *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAUDXUTElementHolder@@@std@@YAPAPAUDXUTElementHolder@@IPAPAU1@@Z ; std::_Allocate<DXUTElementHolder *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEPAPAUDXUTElementHolder@@I@Z ENDP ; std::allocator<DXUTElementHolder *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z PROC ; std::allocator<DXUTElementHolder *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUDXUTElementHolder@@@std@@QAEXPAPAUDXUTElementHolder@@I@Z ENDP ; std::allocator<DXUTElementHolder *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAUDXUTElementHolder@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUDXUTElementHolder@@@std@@QAE@XZ PROC	; std::allocator<DXUTElementHolder *>::allocator<DXUTElementHolder *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAUDXUTElementHolder@@@std@@QAE@XZ ENDP	; std::allocator<DXUTElementHolder *>::allocator<DXUTElementHolder *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEII@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEPAPAVCDXUTControl@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAPAVCDXUTControl@@@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEPAPAVCDXUTControl@@PAPAV2@00@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Umove<CDXUTControl * *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@I@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBE_NPBQAVCDXUTControl@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBE_NPBQAVCDXUTControl@@@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBE_NPBQAVCDXUTControl@@@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEII@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEII@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@YAXPAPAVCDXUTControl@@0AAU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CDXUTControl *> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -32						; size = 4
tv181 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1438
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1441
  0004b	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00053	3b 45 f0	 cmp	 eax, DWORD PTR _this$[ebp]
  00056	75 16		 jne	 SHORT $LN1@erase
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0005e	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00061	72 0b		 jb	 SHORT $LN1@erase
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00069	3b 45 14	 cmp	 eax, DWORD PTR __Where$[ebp+8]
  0006c	77 21		 ja	 SHORT $LN2@erase
$LN1@erase:
; Line 1442
  0006e	8b f4		 mov	 esi, esp
  00070	68 a2 05 00 00	 push	 1442			; 000005a2H
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@erase:
; Line 1443
  0008f	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  00092	51		 push	 ecx
  00093	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00099	50		 push	 eax
  0009a	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0009d	83 c1 04	 add	 ecx, 4
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ??$_Move@PAPAVCDXUTControl@@PAPAV1@@std@@YAPAPAVCDXUTControl@@PAPAV1@00@Z ; std::_Move<CDXUTControl * *,CDXUTControl * *>
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1444
  000a9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000af	50		 push	 eax
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000b6	83 ea 04	 sub	 edx, 4
  000b9	52		 push	 edx
  000ba	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Destroy
; Line 1445
  000c2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c8	51		 push	 ecx
  000c9	8b 55 14	 mov	 edx, DWORD PTR __Where$[ebp+8]
  000cc	52		 push	 edx
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Orphan_range
; Line 1446
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000db	83 e9 04	 sub	 ecx, 4
  000de	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1447
  000e4	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000e7	8b cc		 mov	 ecx, esp
  000e9	89 65 ec	 mov	 DWORD PTR $T3[ebp], esp
  000ec	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV01@@Z
  000f5	89 45 e4	 mov	 DWORD PTR tv181[ebp], eax
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000fb	51		 push	 ecx
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Make_iter
  00104	89 45 e0	 mov	 DWORD PTR tv182[ebp], eax
  00107	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  0010a	83 ca 01	 or	 edx, 1
  0010d	89 55 e8	 mov	 DWORD PTR $T2[ebp], edx
  00110	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00117	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0011a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  0011f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1448
  00122	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00125	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012c	59		 pop	 ecx
  0012d	5e		 pop	 esi
  0012e	83 c4 20	 add	 esp, 32			; 00000020H
  00131	3b ec		 cmp	 ebp, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXABQAVCDXUTControl@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXABQAVCDXUTControl@@@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@QAVCDXUTControl@@@std@@YAPBQAVCDXUTControl@@ABQAV1@@Z ; std::addressof<CDXUTControl * const>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBE_NPBQAVCDXUTControl@@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	74 7e		 je	 SHORT $LN4@push_back
; Line 1246
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ??$addressof@QAVCDXUTControl@@@std@@YAPBQAVCDXUTControl@@ABQAV1@@Z ; std::addressof<CDXUTControl * const>
  00043	83 c4 04	 add	 esp, 4
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0004c	c1 f8 02	 sar	 eax, 2
  0004f	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0005e	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00060	6a 01		 push	 1
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reserve
$LN3@push_back:
; Line 1249
  0006a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Orphan_range
; Line 1251
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00089	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	52		 push	 edx
  00094	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTControl@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * &>
; Line 1252
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ad	83 c2 04	 add	 edx, 4
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1254
  000b6	eb 5b		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000c1	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000c4	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000c6	6a 01		 push	 1
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXI@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Reserve
$LN1@push_back:
; Line 1258
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000d6	52		 push	 edx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IBEXPAPAVCDXUTControl@@0@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Orphan_range
; Line 1260
  000e6	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??$construct@PAVCDXUTControl@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::construct<CDXUTControl *,CDXUTControl * const &>
; Line 1261
  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0010a	83 c1 04	 add	 ecx, 4
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00110	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	3b ec		 cmp	 ebp, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 04 00	 ret	 4
?push_back@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXABQAVCDXUTControl@@@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LG@LOFDFDLG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAD?$AAX?$AAU?$AAT?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AA?$CK@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE_NXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1158
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00020	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00023	75 09		 jne	 SHORT $LN3@empty
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN4@empty
$LN3@empty:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN4@empty:
  00035	8a 45 f8	 mov	 al, BYTE PTR tv75[ebp]
; Line 1159
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?empty@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1074
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1075
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1076
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1069
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1070
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1071
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1044
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1045
  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  0004b	51		 push	 ecx
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
  00054	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp]
  00057	83 ca 01	 or	 edx, 1
  0005a	89 55 ec	 mov	 DWORD PTR $T2[ebp], edx
  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00067	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  0006c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1046
  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	83 c4 14	 add	 esp, 20			; 00000014H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Make_iter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1040
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1035
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1030
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1025
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@PAPAVCDXUTControl@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::~vector<CDXUTControl *,std::allocator<CDXUTControl *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@IAEXXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::~vector<CDXUTControl *,std::allocator<CDXUTControl *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ PROC ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::vector<CDXUTControl *,std::allocator<CDXUTControl *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAVCDXUTControl@@@std@@QAE@XZ ; std::allocator<CDXUTControl *>::allocator<CDXUTControl *>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::vector<CDXUTControl *,std::allocator<CDXUTControl *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::_Wrap_alloc<std::allocator<CDXUTControl *> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::~_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDXUTControl *> >::_Vector_val<std::_Simple_types<CDXUTControl *> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVCDXUTControl@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >::_Vector_alloc<0,std::_Vec_base_types<CDXUTControl *,std::allocator<CDXUTControl *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CDXUTControl *> >::~_Vector_val<std::_Simple_types<CDXUTControl *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CDXUTControl *> >::~_Vector_val<std::_Simple_types<CDXUTControl *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CDXUTControl *> >::_Vector_val<std::_Simple_types<CDXUTControl *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CDXUTControl *> >::_Vector_val<std::_Simple_types<CDXUTControl *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAIABV?$allocator@PAVCDXUTControl@@@2@@Z ; std::allocator_traits<std::allocator<CDXUTControl *> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@I@Z ; std::allocator<CDXUTControl *>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXPAPAVCDXUTControl@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEPAPAVCDXUTControl@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEPAPAVCDXUTControl@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAVCDXUTControl@@@std@@QAEPAPAVCDXUTControl@@I@Z ; std::allocator<CDXUTControl *>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEPAPAVCDXUTControl@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::_Wrap_alloc<std::allocator<CDXUTControl *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@PAVCDXUTControl@@@std@@QAE@XZ ; std::allocator<CDXUTControl *>::allocator<CDXUTControl *>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<CDXUTControl *> >::_Wrap_alloc<std::allocator<CDXUTControl *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAIABV?$allocator@PAVCDXUTControl@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAIABV?$allocator@PAVCDXUTControl@@@2@@Z PROC ; std::allocator_traits<std::allocator<CDXUTControl *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAVCDXUTControl@@@std@@QBEIXZ ; std::allocator<CDXUTControl *>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAVCDXUTControl@@@std@@@std@@SAIABV?$allocator@PAVCDXUTControl@@@2@@Z ENDP ; std::allocator_traits<std::allocator<CDXUTControl *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@PAVCDXUTControl@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVCDXUTControl@@@std@@QBEIXZ PROC ; std::allocator<CDXUTControl *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAVCDXUTControl@@@std@@QBEIXZ ENDP ; std::allocator<CDXUTControl *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@ABQAV3@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@ABQAV3@@Z PROC ; std::allocator<CDXUTControl *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 12		 je	 SHORT $LN3@construct
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00042	89 4d f4	 mov	 DWORD PTR tv68[ebp], ecx
  00045	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?construct@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@ABQAV3@@Z ENDP ; std::allocator<CDXUTControl *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@PAVCDXUTControl@@@std@@QAEPAPAVCDXUTControl@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCDXUTControl@@@std@@QAEPAPAVCDXUTControl@@I@Z PROC ; std::allocator<CDXUTControl *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@PAVCDXUTControl@@@std@@YAPAPAVCDXUTControl@@IPAPAV1@@Z ; std::_Allocate<CDXUTControl *>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@PAVCDXUTControl@@@std@@QAEPAPAVCDXUTControl@@I@Z ENDP ; std::allocator<CDXUTControl *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@I@Z PROC ; std::allocator<CDXUTControl *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCDXUTControl@@@std@@QAEXPAPAVCDXUTControl@@I@Z ENDP ; std::allocator<CDXUTControl *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAVCDXUTControl@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVCDXUTControl@@@std@@QAE@XZ PROC	; std::allocator<CDXUTControl *>::allocator<CDXUTControl *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAVCDXUTControl@@@std@@QAE@XZ ENDP	; std::allocator<CDXUTControl *>::allocator<CDXUTControl *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00058	8b f4		 mov	 esi, esp
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  00063	3b f4		 cmp	 esi, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  0006d	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00071	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  00073	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00076	83 38 00	 cmp	 DWORD PTR [eax], 0
  00079	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  0007b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00083	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00086	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00088	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00090	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00093	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  00095	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00098	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009a	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0009f	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000a2	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000a4	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000a7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000a9	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000ae	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000b8	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000bf	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	52		 push	 edx
  000db	8b cd		 mov	 ecx, ebp
  000dd	50		 push	 eax
  000de	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000e4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e9	58		 pop	 eax
  000ea	5a		 pop	 edx
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	83 c4 20	 add	 esp, 32			; 00000020H
  000fa	3b ec		 cmp	 ebp, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
  00107	90		 npad	 1
$LN13@Orphan_ran:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00110	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00114	04 00 00 00	 DD	 4
  00118	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  0011c	5f		 DB	 95			; 0000005fH
  0011d	4c		 DB	 76			; 0000004cH
  0011e	6f		 DB	 111			; 0000006fH
  0011f	63		 DB	 99			; 00000063H
  00120	6b		 DB	 107			; 0000006bH
  00121	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 02	 sar	 ecx, 2
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z ; std::_Wrap_alloc<std::allocator<int> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z PROC ; std::vector<int,std::allocator<int> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ ; std::vector<int,std::allocator<int> >::_Xlen
$LN1@Reserve:
; Line 1617
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ; std::vector<int,std::allocator<int> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z PROC ; std::vector<int,std::allocator<int> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00040	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00043	50		 push	 eax
  00044	8d 4d e3	 lea	 ecx, DWORD PTR $T4[ebp]
  00047	51		 push	 ecx
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEPAHI@Z ; std::_Wrap_alloc<std::allocator<int> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  00061	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00064	52		 push	 edx
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
  0007b	eb 2a		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z$0:
; Line 1593
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00084	52		 push	 edx
  00085	8d 45 e2	 lea	 eax, DWORD PTR $T3[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z ; std::_Wrap_alloc<std::allocator<int> >::deallocate
; Line 1594
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000a1	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000a6	c3		 ret	 0
$LN5@Reallocate:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z$1:
; Line 1597
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  000bf	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c9	74 40		 je	 SHORT $LN1@Reallocate
; Line 1600
  000cb	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	52		 push	 edx
  000d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Line 1602
  000e1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000ea	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000ed	c1 fa 02	 sar	 edx, 2
  000f0	52		 push	 edx
  000f1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	8d 55 e1	 lea	 edx, DWORD PTR $T2[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z ; std::_Wrap_alloc<std::allocator<int> >::deallocate
$LN1@Reallocate:
; Line 1605
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0011d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00120	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00123	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00126	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00129	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0012c	8b 4d e4	 mov	 ecx, DWORD PTR __Size$[ebp]
  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00132	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0013b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00141	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	83 c4 20	 add	 esp, 32			; 00000020H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z PROC ; std::vector<int,std::allocator<int> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001d	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00020	73 14		 jae	 SHORT $LN3@Inside
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  0002b	77 09		 ja	 SHORT $LN3@Inside
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ENDP ; std::vector<int,std::allocator<int> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z PROC ; std::vector<int,std::allocator<int> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z ENDP ; std::vector<int,std::allocator<int> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<int> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::vector<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Line 1510
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1511
  00043	5e		 pop	 esi
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::vector<int,std::allocator<int> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00020	8b f4		 mov	 esi, esp
  00022	68 b1 04 00 00	 push	 1201			; 000004b1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 b2 04 00 00	 push	 1202			; 000004b2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 b2 04 00 00	 push	 1202			; 000004b2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1HC@HBCEAHKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl?$AAo?$AAc@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1210
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1183
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1185
  00020	8b f4		 mov	 esi, esp
  00022	68 a1 04 00 00	 push	 1185			; 000004a1H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 a2 04 00 00	 push	 1186			; 000004a2H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 a2 04 00 00	 push	 1186			; 000004a2H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1HC@HBCEAHKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl?$AAo?$AAc@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1193
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000af	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
; Line 1194
  000b2	5e		 pop	 esi
  000b3	83 c4 04	 add	 esp, 4
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<int> >::max_size
; Line 1154
  0002a	83 c4 08	 add	 esp, 8
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1149
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1016
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Unused_capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00017	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0001a	c1 f8 02	 sar	 eax, 2
; Line 1011
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::~_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z PROC ; std::vector<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 866
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$addressof@H@std@@YAPAHAAH@Z ; std::addressof<int>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z ; std::vector<int,std::allocator<int> >::_Inside
  00033	0f b6 c8	 movzx	 ecx, al
  00036	85 c9		 test	 ecx, ecx
  00038	0f 84 87 00 00
	00		 je	 $LN4@push_back
; Line 868
  0003e	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??$addressof@H@std@@YAPAHAAH@Z ; std::addressof<int>
  00047	83 c4 04	 add	 esp, 4
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00050	c1 f8 02	 sar	 eax, 2
  00053	89 45 f8	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 869
  00056	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005f	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00062	75 0a		 jne	 SHORT $LN3@push_back
; Line 870
  00064	6a 01		 push	 1
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN3@push_back:
; Line 871
  0006e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00071	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00074	50		 push	 eax
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0007b	52		 push	 edx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
; Line 873
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008a	8b 55 f8	 mov	 edx, DWORD PTR __Idx$3[ebp]
  0008d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00096	83 c4 04	 add	 esp, 4
  00099	50		 push	 eax
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000a0	52		 push	 edx
  000a1	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??$construct@HH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAH$$QAH@Z ; std::_Wrap_alloc<std::allocator<int> >::construct<int,int>
; Line 874
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ba	83 c2 04	 add	 edx, 4
  000bd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c0	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 876
  000c3	eb 64		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 878
  000c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cb	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ce	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000d1	75 0a		 jne	 SHORT $LN1@push_back
; Line 879
  000d3	6a 01		 push	 1
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	e8 00 00 00 00	 call	 ?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z ; std::vector<int,std::allocator<int> >::_Reserve
$LN1@push_back:
; Line 880
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000e3	52		 push	 edx
  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ea	51		 push	 ecx
  000eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
; Line 882
  000f3	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  000f6	52		 push	 edx
  000f7	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  000fc	83 c4 04	 add	 esp, 4
  000ff	50		 push	 eax
  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00106	51		 push	 ecx
  00107	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  0010a	52		 push	 edx
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ??$construct@HH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAH$$QAH@Z ; std::_Wrap_alloc<std::allocator<int> >::construct<int,int>
; Line 883
  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00120	83 c1 04	 add	 ecx, 4
  00123	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00126	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 885
  00129	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012c	3b ec		 cmp	 ebp, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 04 00	 ret	 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ENDP ; std::vector<int,std::allocator<int> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@H@std@@QAE@XZ ; std::allocator<int>::allocator<int>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<int> >::_Wrap_alloc<std::allocator<int> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::~_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::~_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >::_Vector_alloc<0,std::_Vec_base_types<int,std::allocator<int> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<int> >::~_Vector_val<std::_Simple_types<int> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<int> >::~_Vector_val<std::_Simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<int> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z ; std::allocator_traits<std::allocator<int> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z PROC ; std::_Wrap_alloc<std::allocator<int> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QAEXPAHI@Z ; std::allocator<int>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z ENDP ; std::_Wrap_alloc<std::allocator<int> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEPAHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEPAHI@Z PROC ; std::_Wrap_alloc<std::allocator<int> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@H@std@@QAEPAHI@Z ; std::allocator<int>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEPAHI@Z ENDP ; std::_Wrap_alloc<std::allocator<int> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<int> >::_Wrap_alloc<std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@H@std@@QAE@XZ ; std::allocator<int>::allocator<int>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<int> >::_Wrap_alloc<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z PROC ; std::allocator_traits<std::allocator<int> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@H@std@@QBEIXZ ; std::allocator<int>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z ENDP ; std::allocator_traits<std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@H@std@@QBEIXZ PROC		; std::allocator<int>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@H@std@@QBEIXZ ENDP		; std::allocator<int>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@H@std@@YAPAHIPAH@Z ; std::_Allocate<int>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv356 = -320						; size = 4
tv391 = -316						; size = 4
tv398 = -312						; size = 4
tv389 = -308						; size = 4
tv397 = -304						; size = 4
tv387 = -300						; size = 4
tv259 = -296						; size = 4
tv385 = -292						; size = 4
tv382 = -288						; size = 4
tv379 = -284						; size = 4
tv396 = -280						; size = 4
tv377 = -276						; size = 4
tv395 = -272						; size = 4
tv196 = -268						; size = 4
tv374 = -264						; size = 4
tv371 = -260						; size = 4
tv187 = -256						; size = 4
tv368 = -252						; size = 4
tv135 = -248						; size = 4
tv365 = -244						; size = 4
tv70 = -240						; size = 4
$T2 = -235						; size = 1
$T3 = -234						; size = 1
$T4 = -233						; size = 1
$T5 = -232						; size = 12
$T6 = -220						; size = 12
$T7 = -205						; size = 1
$T8 = -204						; size = 12
$T9 = -192						; size = 4
$T10 = -188						; size = 4
$T11 = -184						; size = 12
$T12 = -172						; size = 12
$T13 = -157						; size = 1
$T14 = -156						; size = 4
$T15 = -152						; size = 4
$T16 = -148						; size = 12
$T17 = -133						; size = 1
$T18 = -132						; size = 12
$T19 = -117						; size = 1
_nDialogIndex$20 = -116					; size = 4
_fit$21 = -108						; size = 12
_nLastDialogIndex$22 = -92				; size = 4
_i$23 = -88						; size = 4
_it$24 = -80						; size = 12
_it$25 = -60						; size = 12
_pLastDialog$ = -40					; size = 4
_pDialog$ = -28						; size = 4
_pControl$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bForward$ = 8						; size = 1
?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z PROC		; CDXUTDialog::OnCycleFocus
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1814
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 34 01 00
	00		 sub	 esp, 308		; 00000134H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	8d bd c0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-320]
  00020	b9 4d 00 00 00	 mov	 ecx, 77			; 0000004dH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	59		 pop	 ecx
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1815
  00041	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pControl$[ebp], 0
; Line 1816
  00048	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pDialog$[ebp], 0
; Line 1819
  0004f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00056	0f 85 02 02 00
	00		 jne	 $LN31@OnCycleFoc
; Line 1825
  0005c	0f b6 45 08	 movzx	 eax, BYTE PTR _bForward$[ebp]
  00060	85 c0		 test	 eax, eax
  00062	0f 84 ee 00 00
	00		 je	 $LN30@OnCycleFoc
; Line 1829
  00068	8d 4d c4	 lea	 ecx, DWORD PTR _it$25[ebp]
  0006b	51		 push	 ecx
  0006c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  00075	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00078	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cbegin
  0007d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00084	eb 08		 jmp	 SHORT $LN29@OnCycleFoc
$LN28@OnCycleFoc:
  00086	8d 4d c4	 lea	 ecx, DWORD PTR _it$25[ebp]
  00089	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator++
$LN29@OnCycleFoc:
  0008e	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR $T18[ebp]
  00094	50		 push	 eax
  00095	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 89 3c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+572]
  0009e	83 c1 6c	 add	 ecx, 108		; 0000006cH
  000a1	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
  000a6	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
  000ac	8b 95 10 ff ff
	ff		 mov	 edx, DWORD PTR tv70[ebp]
  000b2	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv365[ebp], edx
  000b8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000bc	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv365[ebp]
  000c2	50		 push	 eax
  000c3	8d 4d c4	 lea	 ecx, DWORD PTR _it$25[ebp]
  000c6	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
  000cb	88 45 8b	 mov	 BYTE PTR $T19[ebp], al
  000ce	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000d2	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  000d8	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  000dd	0f b6 4d 8b	 movzx	 ecx, BYTE PTR $T19[ebp]
  000e1	85 c9		 test	 ecx, ecx
  000e3	74 4a		 je	 SHORT $LN27@OnCycleFoc
; Line 1831
  000e5	8d 4d c4	 lea	 ecx, DWORD PTR _it$25[ebp]
  000e8	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEABQAVCDXUTDialog@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator*
  000ed	8b 10		 mov	 edx, DWORD PTR [eax]
  000ef	89 55 d8	 mov	 DWORD PTR _pLastDialog$[ebp], edx
  000f2	8b 45 d8	 mov	 eax, DWORD PTR _pLastDialog$[ebp]
  000f5	89 45 e4	 mov	 DWORD PTR _pDialog$[ebp], eax
; Line 1832
  000f8	83 7d e4 00	 cmp	 DWORD PTR _pDialog$[ebp], 0
  000fc	74 2c		 je	 SHORT $LN26@OnCycleFoc
  000fe	8b 4d e4	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00101	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00107	e8 00 00 00 00	 call	 ?empty@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE_NXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::empty
  0010c	0f b6 c8	 movzx	 ecx, al
  0010f	85 c9		 test	 ecx, ecx
  00111	75 17		 jne	 SHORT $LN26@OnCycleFoc
; Line 1834
  00113	6a 00		 push	 0
  00115	8b 4d e4	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00118	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0011e	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::operator[]
  00123	8b 10		 mov	 edx, DWORD PTR [eax]
  00125	89 55 ec	 mov	 DWORD PTR _pControl$[ebp], edx
; Line 1835
  00128	eb 05		 jmp	 SHORT $LN27@OnCycleFoc
$LN26@OnCycleFoc:
; Line 1836
  0012a	e9 57 ff ff ff	 jmp	 $LN28@OnCycleFoc
$LN27@OnCycleFoc:
; Line 1837
  0012f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00136	8d 4d c4	 lea	 ecx, DWORD PTR _it$25[ebp]
  00139	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
; Line 1839
  0013e	83 7d e4 00	 cmp	 DWORD PTR _pDialog$[ebp], 0
  00142	74 06		 je	 SHORT $LN24@OnCycleFoc
  00144	83 7d ec 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  00148	75 07		 jne	 SHORT $LN25@OnCycleFoc
$LN24@OnCycleFoc:
; Line 1843
  0014a	b0 01		 mov	 al, 1
  0014c	e9 dd 05 00 00	 jmp	 $LN32@OnCycleFoc
$LN25@OnCycleFoc:
; Line 1846
  00151	e9 03 01 00 00	 jmp	 $LN23@OnCycleFoc
$LN30@OnCycleFoc:
; Line 1850
  00156	8d 45 b0	 lea	 eax, DWORD PTR _it$24[ebp]
  00159	50		 push	 eax
  0015a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	8b 89 3c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+572]
  00163	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00166	e8 00 00 00 00	 call	 ?crbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crbegin
  0016b	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00172	eb 08		 jmp	 SHORT $LN22@OnCycleFoc
$LN21@OnCycleFoc:
  00174	8d 4d b0	 lea	 ecx, DWORD PTR _it$24[ebp]
  00177	e8 00 00 00 00	 call	 ??E?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >::operator++
$LN22@OnCycleFoc:
  0017c	8d 95 6c ff ff
	ff		 lea	 edx, DWORD PTR $T16[ebp]
  00182	52		 push	 edx
  00183	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00186	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0018c	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0018f	e8 00 00 00 00	 call	 ?crend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::crend
  00194	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv135[ebp], eax
  0019a	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR tv135[ebp]
  001a0	89 8d 04 ff ff
	ff		 mov	 DWORD PTR tv368[ebp], ecx
  001a6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  001aa	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR tv368[ebp]
  001b0	52		 push	 edx
  001b1	8d 45 b0	 lea	 eax, DWORD PTR _it$24[ebp]
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ??$?9V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > > >
  001ba	83 c4 08	 add	 esp, 8
  001bd	88 85 7b ff ff
	ff		 mov	 BYTE PTR $T17[ebp], al
  001c3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001c7	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  001cd	e8 00 00 00 00	 call	 ??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ
  001d2	0f b6 8d 7b ff
	ff ff		 movzx	 ecx, BYTE PTR $T17[ebp]
  001d9	85 c9		 test	 ecx, ecx
  001db	74 5a		 je	 SHORT $LN20@OnCycleFoc
; Line 1852
  001dd	8d 4d b0	 lea	 ecx, DWORD PTR _it$24[ebp]
  001e0	e8 00 00 00 00	 call	 ??D?$_Revranit@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@PAVCDXUTDialog@@HPBQAV3@ABQAV3@@2@@std@@QBEABQAVCDXUTDialog@@XZ ; std::_Revranit<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,std::iterator<std::random_access_iterator_tag,CDXUTDialog *,int,CDXUTDialog * const *,CDXUTDialog * const &> >::operator*
  001e5	8b 10		 mov	 edx, DWORD PTR [eax]
  001e7	89 55 d8	 mov	 DWORD PTR _pLastDialog$[ebp], edx
  001ea	8b 45 d8	 mov	 eax, DWORD PTR _pLastDialog$[ebp]
  001ed	89 45 e4	 mov	 DWORD PTR _pDialog$[ebp], eax
; Line 1853
  001f0	83 7d e4 00	 cmp	 DWORD PTR _pDialog$[ebp], 0
  001f4	74 3c		 je	 SHORT $LN19@OnCycleFoc
  001f6	8b 4d e4	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  001f9	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  001ff	e8 00 00 00 00	 call	 ?empty@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE_NXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::empty
  00204	0f b6 c8	 movzx	 ecx, al
  00207	85 c9		 test	 ecx, ecx
  00209	75 27		 jne	 SHORT $LN19@OnCycleFoc
; Line 1855
  0020b	8b 4d e4	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0020e	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00214	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  00219	83 e8 01	 sub	 eax, 1
  0021c	50		 push	 eax
  0021d	8b 4d e4	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00220	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00226	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::operator[]
  0022b	8b 10		 mov	 edx, DWORD PTR [eax]
  0022d	89 55 ec	 mov	 DWORD PTR _pControl$[ebp], edx
; Line 1856
  00230	eb 05		 jmp	 SHORT $LN20@OnCycleFoc
$LN19@OnCycleFoc:
; Line 1857
  00232	e9 3d ff ff ff	 jmp	 $LN21@OnCycleFoc
$LN20@OnCycleFoc:
; Line 1858
  00237	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0023e	8d 4d b0	 lea	 ecx, DWORD PTR _it$24[ebp]
  00241	e8 00 00 00 00	 call	 ??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ
; Line 1860
  00246	83 7d e4 00	 cmp	 DWORD PTR _pDialog$[ebp], 0
  0024a	74 06		 je	 SHORT $LN17@OnCycleFoc
  0024c	83 7d ec 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  00250	75 07		 jne	 SHORT $LN23@OnCycleFoc
$LN17@OnCycleFoc:
; Line 1864
  00252	b0 01		 mov	 al, 1
  00254	e9 d5 04 00 00	 jmp	 $LN32@OnCycleFoc
$LN23@OnCycleFoc:
; Line 1866
  00259	e9 87 00 00 00	 jmp	 $LN16@OnCycleFoc
$LN31@OnCycleFoc:
; Line 1868
  0025e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00263	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00266	3b 4d f0	 cmp	 ecx, DWORD PTR _this$[ebp]
  00269	74 09		 je	 SHORT $LN15@OnCycleFoc
; Line 1873
  0026b	32 c0		 xor	 al, al
  0026d	e9 bc 04 00 00	 jmp	 $LN32@OnCycleFoc
; Line 1875
  00272	eb 71		 jmp	 SHORT $LN16@OnCycleFoc
$LN15@OnCycleFoc:
; Line 1879
  00274	83 7d ec 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  00278	75 21		 jne	 SHORT $LN34@OnCycleFoc
  0027a	8b f4		 mov	 esi, esp
  0027c	68 57 07 00 00	 push	 1879			; 00000757H
  00281	68 00 00 00 00	 push	 OFFSET $SG161846
  00286	68 00 00 00 00	 push	 OFFSET $SG161847
  0028b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00291	83 c4 0c	 add	 esp, 12			; 0000000cH
  00294	3b f4		 cmp	 esi, esp
  00296	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN34@OnCycleFoc:
; Line 1881
  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  002a0	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  002a3	89 4d d8	 mov	 DWORD PTR _pLastDialog$[ebp], ecx
; Line 1882
  002a6	0f b6 55 08	 movzx	 edx, BYTE PTR _bForward$[ebp]
  002aa	85 d2		 test	 edx, edx
  002ac	74 13		 je	 SHORT $LN35@OnCycleFoc
  002ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  002b3	50		 push	 eax
  002b4	e8 00 00 00 00	 call	 ?GetNextControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ; CDXUTDialog::GetNextControl
  002b9	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv187[ebp], eax
  002bf	eb 12		 jmp	 SHORT $LN36@OnCycleFoc
$LN35@OnCycleFoc:
  002c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  002c7	51		 push	 ecx
  002c8	e8 00 00 00 00	 call	 ?GetPrevControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ; CDXUTDialog::GetPrevControl
  002cd	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv187[ebp], eax
$LN36@OnCycleFoc:
  002d3	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR tv187[ebp]
  002d9	89 55 ec	 mov	 DWORD PTR _pControl$[ebp], edx
; Line 1883
  002dc	8b 45 ec	 mov	 eax, DWORD PTR _pControl$[ebp]
  002df	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  002e2	89 4d e4	 mov	 DWORD PTR _pDialog$[ebp], ecx
$LN16@OnCycleFoc:
; Line 1886
  002e5	83 7d ec 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  002e9	75 21		 jne	 SHORT $LN37@OnCycleFoc
  002eb	8b f4		 mov	 esi, esp
  002ed	68 5e 07 00 00	 push	 1886			; 0000075eH
  002f2	68 00 00 00 00	 push	 OFFSET $SG161849
  002f7	68 00 00 00 00	 push	 OFFSET $SG161850
  002fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00302	83 c4 0c	 add	 esp, 12			; 0000000cH
  00305	3b f4		 cmp	 esi, esp
  00307	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN37@OnCycleFoc:
; Line 1889
  0030c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _i$23[ebp], 0
  00313	eb 09		 jmp	 SHORT $LN13@OnCycleFoc
$LN12@OnCycleFoc:
  00315	8b 45 a8	 mov	 eax, DWORD PTR _i$23[ebp]
  00318	83 c0 01	 add	 eax, 1
  0031b	89 45 a8	 mov	 DWORD PTR _i$23[ebp], eax
$LN13@OnCycleFoc:
  0031e	81 7d a8 ff ff
	00 00		 cmp	 DWORD PTR _i$23[ebp], 65535 ; 0000ffffH
  00325	0f 8d e6 03 00
	00		 jge	 $LN11@OnCycleFoc
; Line 1894
  0032b	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR _nLastDialogIndex$22[ebp], -1
; Line 1895
  00332	8d 4d d8	 lea	 ecx, DWORD PTR _pLastDialog$[ebp]
  00335	51		 push	 ecx
  00336	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00339	8b d4		 mov	 edx, esp
  0033b	89 a5 68 ff ff
	ff		 mov	 DWORD PTR $T15[ebp], esp
  00341	52		 push	 edx
  00342	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00345	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0034b	83 c1 6c	 add	 ecx, 108		; 0000006cH
  0034e	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
  00353	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv371[ebp], eax
  00359	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0035c	8b cc		 mov	 ecx, esp
  0035e	89 a5 64 ff ff
	ff		 mov	 DWORD PTR $T14[ebp], esp
  00364	51		 push	 ecx
  00365	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00368	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  0036e	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00371	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cbegin
  00376	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv374[ebp], eax
  0037c	8d 45 94	 lea	 eax, DWORD PTR _fit$21[ebp]
  0037f	50		 push	 eax
  00380	e8 00 00 00 00	 call	 ??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z ; std::find<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,CDXUTDialog *>
  00385	83 c4 20	 add	 esp, 32			; 00000020H
  00388	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv196[ebp], eax
  0038e	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; Line 1896
  00395	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  0039b	51		 push	 ecx
  0039c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0039f	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  003a5	83 c1 6c	 add	 ecx, 108		; 0000006cH
  003a8	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
  003ad	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv395[ebp], eax
  003b3	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv395[ebp]
  003b9	89 85 ec fe ff
	ff		 mov	 DWORD PTR tv377[ebp], eax
  003bf	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  003c3	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv377[ebp]
  003c9	51		 push	 ecx
  003ca	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  003cd	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
  003d2	88 85 63 ff ff
	ff		 mov	 BYTE PTR $T13[ebp], al
  003d8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  003dc	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  003e2	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  003e7	0f b6 95 63 ff
	ff ff		 movzx	 edx, BYTE PTR $T13[ebp]
  003ee	85 d2		 test	 edx, edx
  003f0	74 4f		 je	 SHORT $LN10@OnCycleFoc
; Line 1898
  003f2	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  003f8	50		 push	 eax
  003f9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003fc	8b 89 3c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+572]
  00402	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00405	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
  0040a	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv396[ebp], eax
  00410	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv396[ebp]
  00416	89 95 e4 fe ff
	ff		 mov	 DWORD PTR tv379[ebp], edx
  0041c	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00420	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv379[ebp]
  00426	50		 push	 eax
  00427	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  0042a	e8 00 00 00 00	 call	 ??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator-
  0042f	89 45 a4	 mov	 DWORD PTR _nLastDialogIndex$22[ebp], eax
  00432	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00436	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  0043c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
$LN10@OnCycleFoc:
; Line 1901
  00441	c7 45 8c ff ff
	ff ff		 mov	 DWORD PTR _nDialogIndex$20[ebp], -1
; Line 1902
  00448	8d 4d e4	 lea	 ecx, DWORD PTR _pDialog$[ebp]
  0044b	51		 push	 ecx
  0044c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0044f	8b d4		 mov	 edx, esp
  00451	89 a5 44 ff ff
	ff		 mov	 DWORD PTR $T10[ebp], esp
  00457	52		 push	 edx
  00458	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0045b	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  00461	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00464	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
  00469	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv382[ebp], eax
  0046f	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00472	8b cc		 mov	 ecx, esp
  00474	89 a5 40 ff ff
	ff		 mov	 DWORD PTR $T9[ebp], esp
  0047a	51		 push	 ecx
  0047b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0047e	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  00484	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00487	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cbegin
  0048c	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv385[ebp], eax
  00492	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  00498	50		 push	 eax
  00499	e8 00 00 00 00	 call	 ??$find@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@PAVCDXUTDialog@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@0@V10@0ABQAVCDXUTDialog@@@Z ; std::find<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >,CDXUTDialog *>
  0049e	83 c4 20	 add	 esp, 32			; 00000020H
  004a1	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv259[ebp], eax
  004a7	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv259[ebp]
  004ad	89 8d d4 fe ff
	ff		 mov	 DWORD PTR tv387[ebp], ecx
  004b3	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  004b7	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR tv387[ebp]
  004bd	52		 push	 edx
  004be	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  004c1	e8 00 00 00 00	 call	 ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
  004c6	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  004ca	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  004d0	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
; Line 1903
  004d5	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  004db	50		 push	 eax
  004dc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004df	8b 89 3c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+572]
  004e5	83 c1 6c	 add	 ecx, 108		; 0000006cH
  004e8	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::cend
  004ed	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv397[ebp], eax
  004f3	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR tv397[ebp]
  004f9	89 95 cc fe ff
	ff		 mov	 DWORD PTR tv389[ebp], edx
  004ff	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00503	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv389[ebp]
  00509	50		 push	 eax
  0050a	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  0050d	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator!=
  00512	88 85 33 ff ff
	ff		 mov	 BYTE PTR $T7[ebp], al
  00518	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0051c	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00522	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00527	0f b6 8d 33 ff
	ff ff		 movzx	 ecx, BYTE PTR $T7[ebp]
  0052e	85 c9		 test	 ecx, ecx
  00530	74 4f		 je	 SHORT $LN9@OnCycleFoc
; Line 1905
  00532	8d 95 18 ff ff
	ff		 lea	 edx, DWORD PTR $T5[ebp]
  00538	52		 push	 edx
  00539	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0053c	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  00542	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00545	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTDialog@@V?$allocator@PAVCDXUTDialog@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@2@XZ ; std::vector<CDXUTDialog *,std::allocator<CDXUTDialog *> >::begin
  0054a	89 85 c8 fe ff
	ff		 mov	 DWORD PTR tv398[ebp], eax
  00550	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR tv398[ebp]
  00556	89 8d c4 fe ff
	ff		 mov	 DWORD PTR tv391[ebp], ecx
  0055c	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00560	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR tv391[ebp]
  00566	52		 push	 edx
  00567	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  0056a	e8 00 00 00 00	 call	 ??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTDialog *> > >::operator-
  0056f	89 45 8c	 mov	 DWORD PTR _nDialogIndex$20[ebp], eax
  00572	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00576	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0057c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
$LN9@OnCycleFoc:
; Line 1909
  00581	0f b6 45 08	 movzx	 eax, BYTE PTR _bForward$[ebp]
  00585	85 c0		 test	 eax, eax
  00587	75 08		 jne	 SHORT $LN6@OnCycleFoc
  00589	8b 4d a4	 mov	 ecx, DWORD PTR _nLastDialogIndex$22[ebp]
  0058c	3b 4d 8c	 cmp	 ecx, DWORD PTR _nDialogIndex$20[ebp]
  0058f	7c 10		 jl	 SHORT $LN7@OnCycleFoc
$LN6@OnCycleFoc:
  00591	0f b6 55 08	 movzx	 edx, BYTE PTR _bForward$[ebp]
  00595	85 d2		 test	 edx, edx
  00597	74 58		 je	 SHORT $LN8@OnCycleFoc
  00599	8b 45 8c	 mov	 eax, DWORD PTR _nDialogIndex$20[ebp]
  0059c	3b 45 a4	 cmp	 eax, DWORD PTR _nLastDialogIndex$22[ebp]
  0059f	7d 50		 jge	 SHORT $LN8@OnCycleFoc
$LN7@OnCycleFoc:
; Line 1911
  005a1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  005a8	74 1c		 je	 SHORT $LN5@OnCycleFoc
; Line 1912
  005aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  005b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  005b2	8b f4		 mov	 esi, esp
  005b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  005ba	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  005bd	ff d0		 call	 eax
  005bf	3b f4		 cmp	 esi, esp
  005c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@OnCycleFoc:
; Line 1913
  005c6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
; Line 1914
  005d0	c6 85 17 ff ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  005d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005de	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  005e1	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  005e6	8a 85 17 ff ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  005ec	e9 3d 01 00 00	 jmp	 $LN32@OnCycleFoc
$LN8@OnCycleFoc:
; Line 1918
  005f1	8b 4d ec	 mov	 ecx, DWORD PTR _pControl$[ebp]
  005f4	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  005fa	75 21		 jne	 SHORT $LN4@OnCycleFoc
; Line 1919
  005fc	c6 85 16 ff ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  00603	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0060a	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  0060d	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  00612	8a 85 16 ff ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  00618	e9 11 01 00 00	 jmp	 $LN32@OnCycleFoc
$LN4@OnCycleFoc:
; Line 1923
  0061d	8b 55 ec	 mov	 edx, DWORD PTR _pControl$[ebp]
  00620	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00623	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00627	85 c9		 test	 ecx, ecx
  00629	0f 84 8e 00 00
	00		 je	 $LN3@OnCycleFoc
  0062f	8b 55 ec	 mov	 edx, DWORD PTR _pControl$[ebp]
  00632	8b 02		 mov	 eax, DWORD PTR [edx]
  00634	8b f4		 mov	 esi, esp
  00636	8b 4d ec	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00639	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0063c	ff d2		 call	 edx
  0063e	3b f4		 cmp	 esi, esp
  00640	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00645	0f b6 c0	 movzx	 eax, al
  00648	85 c0		 test	 eax, eax
  0064a	74 71		 je	 SHORT $LN3@OnCycleFoc
; Line 1925
  0064c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00653	74 1c		 je	 SHORT $LN2@OnCycleFoc
; Line 1926
  00655	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  0065b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0065d	8b f4		 mov	 esi, esp
  0065f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00665	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00668	ff d0		 call	 eax
  0066a	3b f4		 cmp	 esi, esp
  0066c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@OnCycleFoc:
; Line 1927
  00671	8b 4d ec	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00674	89 0d 00 00 00
	00		 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, ecx ; CDXUTDialog::s_pControlFocus
; Line 1928
  0067a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00681	74 1c		 je	 SHORT $LN1@OnCycleFoc
; Line 1929
  00683	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00689	8b 02		 mov	 eax, DWORD PTR [edx]
  0068b	8b f4		 mov	 esi, esp
  0068d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00693	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00696	ff d2		 call	 edx
  00698	3b f4		 cmp	 esi, esp
  0069a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@OnCycleFoc:
; Line 1930
  0069f	c6 85 15 ff ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  006a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006ad	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  006b0	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  006b5	8a 85 15 ff ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
  006bb	eb 71		 jmp	 SHORT $LN32@OnCycleFoc
$LN3@OnCycleFoc:
; Line 1933
  006bd	8b 45 e4	 mov	 eax, DWORD PTR _pDialog$[ebp]
  006c0	89 45 d8	 mov	 DWORD PTR _pLastDialog$[ebp], eax
; Line 1934
  006c3	0f b6 4d 08	 movzx	 ecx, BYTE PTR _bForward$[ebp]
  006c7	85 c9		 test	 ecx, ecx
  006c9	74 11		 je	 SHORT $LN38@OnCycleFoc
  006cb	8b 55 ec	 mov	 edx, DWORD PTR _pControl$[ebp]
  006ce	52		 push	 edx
  006cf	e8 00 00 00 00	 call	 ?GetNextControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ; CDXUTDialog::GetNextControl
  006d4	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv356[ebp], eax
  006da	eb 0f		 jmp	 SHORT $LN39@OnCycleFoc
$LN38@OnCycleFoc:
  006dc	8b 45 ec	 mov	 eax, DWORD PTR _pControl$[ebp]
  006df	50		 push	 eax
  006e0	e8 00 00 00 00	 call	 ?GetPrevControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ; CDXUTDialog::GetPrevControl
  006e5	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv356[ebp], eax
$LN39@OnCycleFoc:
  006eb	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR tv356[ebp]
  006f1	89 4d ec	 mov	 DWORD PTR _pControl$[ebp], ecx
; Line 1935
  006f4	8b 55 ec	 mov	 edx, DWORD PTR _pControl$[ebp]
  006f7	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  006fa	89 45 e4	 mov	 DWORD PTR _pDialog$[ebp], eax
; Line 1936
  006fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00704	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  00707	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
  0070c	e9 04 fc ff ff	 jmp	 $LN12@OnCycleFoc
$LN11@OnCycleFoc:
; Line 1939
  00711	6a 00		 push	 0
  00713	68 00 00 00 00	 push	 OFFSET $SG161945
  00718	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0071d	68 93 07 00 00	 push	 1939			; 00000793H
  00722	68 00 00 00 00	 push	 OFFSET $SG161946
  00727	e8 00 00 00 00	 call	 _DXTraceW@20
; Line 1940
  0072c	32 c0		 xor	 al, al
$LN32@OnCycleFoc:
; Line 1941
  0072e	52		 push	 edx
  0072f	8b cd		 mov	 ecx, ebp
  00731	50		 push	 eax
  00732	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN61@OnCycleFoc
  00738	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0073d	58		 pop	 eax
  0073e	5a		 pop	 edx
  0073f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00742	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00749	59		 pop	 ecx
  0074a	5f		 pop	 edi
  0074b	5e		 pop	 esi
  0074c	81 c4 40 01 00
	00		 add	 esp, 320		; 00000140H
  00752	3b ec		 cmp	 ebp, esp
  00754	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00759	8b e5		 mov	 esp, ebp
  0075b	5d		 pop	 ebp
  0075c	c2 04 00	 ret	 4
  0075f	90		 npad	 1
$LN61@OnCycleFoc:
  00760	05 00 00 00	 DD	 5
  00764	00 00 00 00	 DD	 $LN60@OnCycleFoc
$LN60@OnCycleFoc:
  00768	e4 ff ff ff	 DD	 -28			; ffffffe4H
  0076c	04 00 00 00	 DD	 4
  00770	00 00 00 00	 DD	 $LN54@OnCycleFoc
  00774	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00778	04 00 00 00	 DD	 4
  0077c	00 00 00 00	 DD	 $LN55@OnCycleFoc
  00780	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00784	0c 00 00 00	 DD	 12			; 0000000cH
  00788	00 00 00 00	 DD	 $LN56@OnCycleFoc
  0078c	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00790	0c 00 00 00	 DD	 12			; 0000000cH
  00794	00 00 00 00	 DD	 $LN57@OnCycleFoc
  00798	94 ff ff ff	 DD	 -108			; ffffff94H
  0079c	0c 00 00 00	 DD	 12			; 0000000cH
  007a0	00 00 00 00	 DD	 $LN58@OnCycleFoc
$LN58@OnCycleFoc:
  007a4	66		 DB	 102			; 00000066H
  007a5	69		 DB	 105			; 00000069H
  007a6	74		 DB	 116			; 00000074H
  007a7	00		 DB	 0
$LN57@OnCycleFoc:
  007a8	69		 DB	 105			; 00000069H
  007a9	74		 DB	 116			; 00000074H
  007aa	00		 DB	 0
$LN56@OnCycleFoc:
  007ab	69		 DB	 105			; 00000069H
  007ac	74		 DB	 116			; 00000074H
  007ad	00		 DB	 0
$LN55@OnCycleFoc:
  007ae	70		 DB	 112			; 00000070H
  007af	4c		 DB	 76			; 0000004cH
  007b0	61		 DB	 97			; 00000061H
  007b1	73		 DB	 115			; 00000073H
  007b2	74		 DB	 116			; 00000074H
  007b3	44		 DB	 68			; 00000044H
  007b4	69		 DB	 105			; 00000069H
  007b5	61		 DB	 97			; 00000061H
  007b6	6c		 DB	 108			; 0000006cH
  007b7	6f		 DB	 111			; 0000006fH
  007b8	67		 DB	 103			; 00000067H
  007b9	00		 DB	 0
$LN54@OnCycleFoc:
  007ba	70		 DB	 112			; 00000070H
  007bb	44		 DB	 68			; 00000044H
  007bc	69		 DB	 105			; 00000069H
  007bd	61		 DB	 97			; 00000061H
  007be	6c		 DB	 108			; 0000006cH
  007bf	6f		 DB	 111			; 0000006fH
  007c0	67		 DB	 103			; 00000067H
  007c1	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$0:
  00000	8d 4d c4	 lea	 ecx, DWORD PTR _it$25[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$1:
  00008	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$2:
  00013	8d 4d b0	 lea	 ecx, DWORD PTR _it$24[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$3:
  0001b	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  00021	e9 00 00 00 00	 jmp	 ??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$6:
  00026	8d 4d 94	 lea	 ecx, DWORD PTR _fit$21[ebp]
  00029	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$7:
  0002e	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00034	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$8:
  00039	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  0003f	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$11:
  00044	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  0004a	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$12:
  0004f	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00055	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z$13:
  0005a	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00060	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTDialog@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z:
  00065	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00069	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0006c	8b 8a c0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-320]
  00072	33 c8		 xor	 ecx, eax
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z
  0007e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z ENDP		; CDXUTDialog::OnCycleFocus
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pNextDialog$ = 8					; size = 4
?SetNextDialog@CDXUTDialog@@AAEXPAV1@@Z PROC		; CDXUTDialog::SetNextDialog
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1769
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1770
  0000e	83 7d 08 00	 cmp	 DWORD PTR _pNextDialog$[ebp], 0
  00012	75 06		 jne	 SHORT $LN2@SetNextDia
; Line 1771
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	89 45 08	 mov	 DWORD PTR _pNextDialog$[ebp], eax
$LN2@SetNextDia:
; Line 1773
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR _pNextDialog$[ebp]
  00020	89 91 f4 02 00
	00		 mov	 DWORD PTR [ecx+756], edx
; Line 1774
  00026	83 7d 08 00	 cmp	 DWORD PTR _pNextDialog$[ebp], 0
  0002a	74 12		 je	 SHORT $LN3@SetNextDia
; Line 1775
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 88 f4 02 00
	00		 mov	 ecx, DWORD PTR [eax+756]
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	89 91 f8 02 00
	00		 mov	 DWORD PTR [ecx+760], edx
$LN3@SetNextDia:
; Line 1776
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?SetNextDialog@CDXUTDialog@@AAEXPAV1@@Z ENDP		; CDXUTDialog::SetNextDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?OnMouseUp@CDXUTDialog@@AAEXABUtagPOINT@@@Z PROC	; CDXUTDialog::OnMouseUp
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1116
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1118
  0000e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlPressed
; Line 1119
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
; Line 1120
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?OnMouseUp@CDXUTDialog@@AAEXABUtagPOINT@@@Z ENDP	; CDXUTDialog::OnMouseUp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pControl$ = -8						; size = 4
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
?OnMouseMove@CDXUTDialog@@AAEXABUtagPOINT@@@Z PROC	; CDXUTDialog::OnMouseMove
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1125
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1127
  00018	8b 45 08	 mov	 eax, DWORD PTR _pt$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z ; CDXUTDialog::GetControlAtPoint
  00024	89 45 f8	 mov	 DWORD PTR _pControl$[ebp], eax
; Line 1130
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 55 f8	 mov	 edx, DWORD PTR _pControl$[ebp]
  0002d	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  00030	75 02		 jne	 SHORT $LN3@OnMouseMov
; Line 1131
  00032	eb 50		 jmp	 SHORT $LN4@OnMouseMov
$LN3@OnMouseMov:
; Line 1134
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003b	74 1c		 je	 SHORT $LN2@OnMouseMov
; Line 1135
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 12		 mov	 edx, DWORD PTR [edx]
  00048	8b f4		 mov	 esi, esp
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@OnMouseMov:
; Line 1138
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _pControl$[ebp]
  0005f	89 51 10	 mov	 DWORD PTR [ecx+16], edx
; Line 1139
  00062	83 7d f8 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  00066	74 1c		 je	 SHORT $LN4@OnMouseMov
; Line 1140
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0006e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00071	8b 01		 mov	 eax, DWORD PTR [ecx]
  00073	8b f4		 mov	 esi, esp
  00075	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00078	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  0007b	ff d2		 call	 edx
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@OnMouseMov:
; Line 1141
  00084	5e		 pop	 esi
  00085	83 c4 08	 add	 esp, 8
  00088	3b ec		 cmp	 ebp, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?OnMouseMove@CDXUTDialog@@AAEXABUtagPOINT@@@Z ENDP	; CDXUTDialog::OnMouseMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_nScrollBarStartY$ = -156				; size = 4
_nScrollBarStartX$ = -152				; size = 4
_rcTexture$ = -144					; size = 16
_Element$ = -120					; size = 108
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?InitDefaultElements@CDXUTDialog@@AAEXXZ PROC		; CDXUTDialog::InitDefaultElements
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1946
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 64 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-156]
  00012	b9 27 00 00 00	 mov	 ecx, 39			; 00000027H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1947
  0002c	68 90 01 00 00	 push	 400			; 00000190H
  00031	6a 0e		 push	 14			; 0000000eH
  00033	68 00 00 00 00	 push	 OFFSET $SG161968
  00038	6a 00		 push	 0
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?SetFont@CDXUTDialog@@QAEJIPB_WJJ@Z ; CDXUTDialog::SetFont
; Line 1949
  00042	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00045	e8 00 00 00 00	 call	 ??0CDXUTElement@@QAE@XZ
; Line 1955
  0004a	6a 05		 push	 5
  0004c	6a ff		 push	 -1
  0004e	6a 00		 push	 0
  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 88 02 00
	00		 add	 ecx, 648		; 00000288H
  00059	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 1956
  0005e	8b f4		 mov	 esi, esp
  00060	68 1f 01 00 00	 push	 287			; 0000011fH
  00065	68 f1 00 00 00	 push	 241			; 000000f1H
  0006a	68 0d 01 00 00	 push	 269			; 0000010dH
  0006f	6a 11		 push	 17			; 00000011H
  00071	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1957
  00085	6a ff		 push	 -1
  00087	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  0008d	51		 push	 ecx
  0008e	6a 00		 push	 0
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	81 c1 88 02 00
	00		 add	 ecx, 648		; 00000288H
  00099	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 1958
  0009e	ba 04 00 00 00	 mov	 edx, 4
  000a3	6b c2 00	 imul	 eax, edx, 0
  000a6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	c7 84 01 a4 02
	00 00 ff ff ff
	ff		 mov	 DWORD PTR [ecx+eax+676], -1
; Line 1959
  000b4	ba 04 00 00 00	 mov	 edx, 4
  000b9	6b c2 00	 imul	 eax, edx, 0
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	c7 84 01 cc 02
	00 00 ff ff ff
	ff		 mov	 DWORD PTR [ecx+eax+716], -1
; Line 1960
  000ca	6a 04		 push	 4
  000cc	6a ff		 push	 -1
  000ce	6a 00		 push	 0
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 88 02 00
	00		 add	 ecx, 648		; 00000288H
  000d9	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 1962
  000de	51		 push	 ecx
  000df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  000e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ec	51		 push	 ecx
  000ed	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  000f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fa	6a 00		 push	 0
  000fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	81 c1 a4 02 00
	00		 add	 ecx, 676		; 000002a4H
  00105	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 1963
  0010a	51		 push	 ecx
  0010b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  00113	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00118	51		 push	 ecx
  00119	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00121	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00126	6a 00		 push	 0
  00128	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	81 c1 cc 02 00
	00		 add	 ecx, 716		; 000002ccH
  00131	e8 00 00 00 00	 call	 ?Blend@DXUTBlendColor@@QAEXIMM@Z ; DXUTBlendColor::Blend
; Line 1968
  00136	6a 05		 push	 5
  00138	6a ff		 push	 -1
  0013a	6a 00		 push	 0
  0013c	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0013f	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 1969
  00144	ba 04 00 00 00	 mov	 edx, 4
  00149	c1 e2 00	 shl	 edx, 0
  0014c	c7 44 15 cc c8
	c8 c8 c8	 mov	 DWORD PTR _Element$[ebp+edx+68], -926365496 ; c8c8c8c8H
; Line 1972
  00154	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00157	50		 push	 eax
  00158	6a 00		 push	 0
  0015a	6a 01		 push	 1
  0015c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 1978
  00164	8b f4		 mov	 esi, esp
  00166	6a 36		 push	 54			; 00000036H
  00168	68 88 00 00 00	 push	 136			; 00000088H
  0016d	6a 00		 push	 0
  0016f	6a 00		 push	 0
  00171	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00177	51		 push	 ecx
  00178	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0017e	3b f4		 cmp	 esi, esp
  00180	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1979
  00185	6a ff		 push	 -1
  00187	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  0018d	52		 push	 edx
  0018e	6a 00		 push	 0
  00190	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00193	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 1980
  00198	6a 05		 push	 5
  0019a	6a ff		 push	 -1
  0019c	6a 00		 push	 0
  0019e	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  001a1	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 1981
  001a6	b8 04 00 00 00	 mov	 eax, 4
  001ab	6b c8 00	 imul	 ecx, eax, 0
  001ae	c7 44 0d a4 ff
	ff ff 96	 mov	 DWORD PTR _Element$[ebp+ecx+28], -1761607681 ; 96ffffffH
; Line 1982
  001b6	ba 04 00 00 00	 mov	 edx, 4
  001bb	6b c2 05	 imul	 eax, edx, 5
  001be	c7 44 05 a4 ff
	ff ff c8	 mov	 DWORD PTR _Element$[ebp+eax+28], -922746881 ; c8ffffffH
; Line 1983
  001c6	b9 04 00 00 00	 mov	 ecx, 4
  001cb	c1 e1 02	 shl	 ecx, 2
  001ce	c7 44 0d cc 00
	00 00 ff	 mov	 DWORD PTR _Element$[ebp+ecx+68], -16777216 ; ff000000H
; Line 1986
  001d6	8d 55 88	 lea	 edx, DWORD PTR _Element$[ebp]
  001d9	52		 push	 edx
  001da	6a 00		 push	 0
  001dc	6a 00		 push	 0
  001de	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e1	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 1992
  001e6	8b f4		 mov	 esi, esp
  001e8	6a 36		 push	 54			; 00000036H
  001ea	68 fc 00 00 00	 push	 252			; 000000fcH
  001ef	6a 00		 push	 0
  001f1	68 88 00 00 00	 push	 136			; 00000088H
  001f6	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  001fc	50		 push	 eax
  001fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00203	3b f4		 cmp	 esi, esp
  00205	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1993
  0020a	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  0020f	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00215	51		 push	 ecx
  00216	6a 00		 push	 0
  00218	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0021b	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 1994
  00220	ba 04 00 00 00	 mov	 edx, 4
  00225	c1 e2 02	 shl	 edx, 2
  00228	c7 44 15 a4 ff
	ff ff a0	 mov	 DWORD PTR _Element$[ebp+edx+28], -1593835521 ; a0ffffffH
; Line 1995
  00230	b8 04 00 00 00	 mov	 eax, 4
  00235	6b c8 05	 imul	 ecx, eax, 5
  00238	c7 44 0d a4 00
	00 00 3c	 mov	 DWORD PTR _Element$[ebp+ecx+28], 1006632960 ; 3c000000H
; Line 1996
  00240	ba 04 00 00 00	 mov	 edx, 4
  00245	6b c2 03	 imul	 eax, edx, 3
  00248	c7 44 05 a4 ff
	ff ff 1e	 mov	 DWORD PTR _Element$[ebp+eax+28], 520093695 ; 1effffffH
; Line 2000
  00250	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00253	51		 push	 ecx
  00254	6a 01		 push	 1
  00256	6a 00		 push	 0
  00258	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0025b	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2006
  00260	8b f4		 mov	 esi, esp
  00262	6a 51		 push	 81			; 00000051H
  00264	6a 1b		 push	 27			; 0000001bH
  00266	6a 36		 push	 54			; 00000036H
  00268	6a 00		 push	 0
  0026a	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00270	52		 push	 edx
  00271	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00277	3b f4		 cmp	 esi, esp
  00279	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2007
  0027e	6a ff		 push	 -1
  00280	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00286	50		 push	 eax
  00287	6a 00		 push	 0
  00289	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0028c	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2008
  00291	6a 04		 push	 4
  00293	6a ff		 push	 -1
  00295	6a 00		 push	 0
  00297	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0029a	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2009
  0029f	b9 04 00 00 00	 mov	 ecx, 4
  002a4	c1 e1 00	 shl	 ecx, 0
  002a7	c7 44 0d cc c8
	c8 c8 c8	 mov	 DWORD PTR _Element$[ebp+ecx+68], -926365496 ; c8c8c8c8H
; Line 2010
  002af	ba 04 00 00 00	 mov	 edx, 4
  002b4	6b c2 00	 imul	 eax, edx, 0
  002b7	c7 44 05 a4 ff
	ff ff 96	 mov	 DWORD PTR _Element$[ebp+eax+28], -1761607681 ; 96ffffffH
; Line 2011
  002bf	b9 04 00 00 00	 mov	 ecx, 4
  002c4	6b d1 03	 imul	 edx, ecx, 3
  002c7	c7 44 15 a4 ff
	ff ff c8	 mov	 DWORD PTR _Element$[ebp+edx+28], -922746881 ; c8ffffffH
; Line 2012
  002cf	b8 04 00 00 00	 mov	 eax, 4
  002d4	6b c8 05	 imul	 ecx, eax, 5
  002d7	c7 44 0d a4 ff
	ff ff ff	 mov	 DWORD PTR _Element$[ebp+ecx+28], -1
; Line 2015
  002df	8d 55 88	 lea	 edx, DWORD PTR _Element$[ebp]
  002e2	52		 push	 edx
  002e3	6a 00		 push	 0
  002e5	6a 02		 push	 2
  002e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002ea	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2021
  002ef	8b f4		 mov	 esi, esp
  002f1	6a 51		 push	 81			; 00000051H
  002f3	6a 36		 push	 54			; 00000036H
  002f5	6a 36		 push	 54			; 00000036H
  002f7	6a 1b		 push	 27			; 0000001bH
  002f9	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  002ff	50		 push	 eax
  00300	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00306	3b f4		 cmp	 esi, esp
  00308	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2022
  0030d	6a ff		 push	 -1
  0030f	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00315	51		 push	 ecx
  00316	6a 00		 push	 0
  00318	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0031b	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2025
  00320	8d 55 88	 lea	 edx, DWORD PTR _Element$[ebp]
  00323	52		 push	 edx
  00324	6a 01		 push	 1
  00326	6a 02		 push	 2
  00328	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0032b	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2031
  00330	8b f4		 mov	 esi, esp
  00332	6a 51		 push	 81			; 00000051H
  00334	6a 51		 push	 81			; 00000051H
  00336	6a 36		 push	 54			; 00000036H
  00338	6a 36		 push	 54			; 00000036H
  0033a	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00340	50		 push	 eax
  00341	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00347	3b f4		 cmp	 esi, esp
  00349	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2032
  0034e	6a ff		 push	 -1
  00350	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00356	51		 push	 ecx
  00357	6a 00		 push	 0
  00359	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0035c	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2033
  00361	6a 04		 push	 4
  00363	6a ff		 push	 -1
  00365	6a 00		 push	 0
  00367	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0036a	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2034
  0036f	ba 04 00 00 00	 mov	 edx, 4
  00374	c1 e2 00	 shl	 edx, 0
  00377	c7 44 15 cc c8
	c8 c8 c8	 mov	 DWORD PTR _Element$[ebp+edx+68], -926365496 ; c8c8c8c8H
; Line 2035
  0037f	b8 04 00 00 00	 mov	 eax, 4
  00384	6b c8 00	 imul	 ecx, eax, 0
  00387	c7 44 0d a4 ff
	ff ff 96	 mov	 DWORD PTR _Element$[ebp+ecx+28], -1761607681 ; 96ffffffH
; Line 2036
  0038f	ba 04 00 00 00	 mov	 edx, 4
  00394	6b c2 03	 imul	 eax, edx, 3
  00397	c7 44 05 a4 ff
	ff ff c8	 mov	 DWORD PTR _Element$[ebp+eax+28], -922746881 ; c8ffffffH
; Line 2037
  0039f	b9 04 00 00 00	 mov	 ecx, 4
  003a4	6b d1 05	 imul	 edx, ecx, 5
  003a7	c7 44 15 a4 ff
	ff ff ff	 mov	 DWORD PTR _Element$[ebp+edx+28], -1
; Line 2040
  003af	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  003b2	50		 push	 eax
  003b3	6a 00		 push	 0
  003b5	6a 03		 push	 3
  003b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ba	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2046
  003bf	8b f4		 mov	 esi, esp
  003c1	6a 51		 push	 81			; 00000051H
  003c3	6a 6c		 push	 108			; 0000006cH
  003c5	6a 36		 push	 54			; 00000036H
  003c7	6a 51		 push	 81			; 00000051H
  003c9	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  003cf	51		 push	 ecx
  003d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  003d6	3b f4		 cmp	 esi, esp
  003d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2047
  003dd	6a ff		 push	 -1
  003df	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  003e5	52		 push	 edx
  003e6	6a 00		 push	 0
  003e8	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  003eb	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2050
  003f0	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  003f3	50		 push	 eax
  003f4	6a 01		 push	 1
  003f6	6a 03		 push	 3
  003f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003fb	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2056
  00400	8b f4		 mov	 esi, esp
  00402	6a 7b		 push	 123			; 0000007bH
  00404	68 f7 00 00 00	 push	 247			; 000000f7H
  00409	6a 51		 push	 81			; 00000051H
  0040b	6a 07		 push	 7
  0040d	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00413	51		 push	 ecx
  00414	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0041a	3b f4		 cmp	 esi, esp
  0041c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2057
  00421	6a ff		 push	 -1
  00423	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00429	52		 push	 edx
  0042a	6a 00		 push	 0
  0042c	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0042f	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2058
  00434	6a 05		 push	 5
  00436	6a ff		 push	 -1
  00438	6a 00		 push	 0
  0043a	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0043d	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2059
  00442	b8 04 00 00 00	 mov	 eax, 4
  00447	6b c8 00	 imul	 ecx, eax, 0
  0044a	c7 44 0d a4 c8
	c8 c8 96	 mov	 DWORD PTR _Element$[ebp+ecx+28], -1765226296 ; 96c8c8c8H
; Line 2060
  00452	ba 04 00 00 00	 mov	 edx, 4
  00457	6b c2 03	 imul	 eax, edx, 3
  0045a	c7 44 05 a4 e6
	e6 e6 aa	 mov	 DWORD PTR _Element$[ebp+eax+28], -1427708186 ; aae6e6e6H
; Line 2061
  00462	b9 04 00 00 00	 mov	 ecx, 4
  00467	c1 e1 00	 shl	 ecx, 0
  0046a	c7 44 0d a4 c8
	c8 c8 46	 mov	 DWORD PTR _Element$[ebp+ecx+28], 1187563720 ; 46c8c8c8H
; Line 2062
  00472	ba 04 00 00 00	 mov	 edx, 4
  00477	c1 e2 02	 shl	 edx, 2
  0047a	c7 44 15 cc 00
	00 00 ff	 mov	 DWORD PTR _Element$[ebp+edx+68], -16777216 ; ff000000H
; Line 2063
  00482	b8 04 00 00 00	 mov	 eax, 4
  00487	6b c8 05	 imul	 ecx, eax, 5
  0048a	c7 44 0d cc 00
	00 00 ff	 mov	 DWORD PTR _Element$[ebp+ecx+68], -16777216 ; ff000000H
; Line 2064
  00492	ba 04 00 00 00	 mov	 edx, 4
  00497	c1 e2 00	 shl	 edx, 0
  0049a	c7 44 15 cc c8
	c8 c8 c8	 mov	 DWORD PTR _Element$[ebp+edx+68], -926365496 ; c8c8c8c8H
; Line 2068
  004a2	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  004a5	50		 push	 eax
  004a6	6a 00		 push	 0
  004a8	6a 04		 push	 4
  004aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ad	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2074
  004b2	8b f4		 mov	 esi, esp
  004b4	68 ee 00 00 00	 push	 238			; 000000eeH
  004b9	68 97 00 00 00	 push	 151			; 00000097H
  004be	68 bd 00 00 00	 push	 189			; 000000bdH
  004c3	6a 62		 push	 98			; 00000062H
  004c5	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  004cb	51		 push	 ecx
  004cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  004d2	3b f4		 cmp	 esi, esp
  004d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2075
  004d9	6a ff		 push	 -1
  004db	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  004e1	52		 push	 edx
  004e2	6a 00		 push	 0
  004e4	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  004e7	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2076
  004ec	b8 04 00 00 00	 mov	 eax, 4
  004f1	6b c8 00	 imul	 ecx, eax, 0
  004f4	c7 44 0d a4 ff
	ff ff 96	 mov	 DWORD PTR _Element$[ebp+ecx+28], -1761607681 ; 96ffffffH
; Line 2077
  004fc	ba 04 00 00 00	 mov	 edx, 4
  00501	6b c2 05	 imul	 eax, edx, 5
  00504	c7 44 05 a4 96
	96 96 ff	 mov	 DWORD PTR _Element$[ebp+eax+28], -6908266 ; ff969696H
; Line 2078
  0050c	b9 04 00 00 00	 mov	 ecx, 4
  00511	6b d1 03	 imul	 edx, ecx, 3
  00514	c7 44 15 a4 ff
	ff ff c8	 mov	 DWORD PTR _Element$[ebp+edx+28], -922746881 ; c8ffffffH
; Line 2079
  0051c	b8 04 00 00 00	 mov	 eax, 4
  00521	c1 e0 00	 shl	 eax, 0
  00524	c7 44 05 a4 ff
	ff ff 46	 mov	 DWORD PTR _Element$[ebp+eax+28], 1191182335 ; 46ffffffH
; Line 2082
  0052c	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0052f	51		 push	 ecx
  00530	6a 01		 push	 1
  00532	6a 04		 push	 4
  00534	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00537	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2088
  0053c	8b f4		 mov	 esi, esp
  0053e	68 a0 00 00 00	 push	 160			; 000000a0H
  00543	68 f1 00 00 00	 push	 241			; 000000f1H
  00548	6a 7b		 push	 123			; 0000007bH
  0054a	6a 0d		 push	 13			; 0000000dH
  0054c	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00552	52		 push	 edx
  00553	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00559	3b f4		 cmp	 esi, esp
  0055b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2089
  00560	6a ff		 push	 -1
  00562	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00568	50		 push	 eax
  00569	6a 00		 push	 0
  0056b	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0056e	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2090
  00573	6a 00		 push	 0
  00575	68 00 00 00 ff	 push	 -16777216		; ff000000H
  0057a	6a 00		 push	 0
  0057c	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0057f	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2093
  00584	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00587	51		 push	 ecx
  00588	6a 02		 push	 2
  0058a	6a 04		 push	 4
  0058c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0058f	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2099
  00594	8b f4		 mov	 esi, esp
  00596	68 b7 00 00 00	 push	 183			; 000000b7H
  0059b	68 ef 00 00 00	 push	 239			; 000000efH
  005a0	68 a3 00 00 00	 push	 163			; 000000a3H
  005a5	6a 0c		 push	 12			; 0000000cH
  005a7	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  005ad	52		 push	 edx
  005ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  005b4	3b f4		 cmp	 esi, esp
  005b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2100
  005bb	6a ff		 push	 -1
  005bd	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  005c3	50		 push	 eax
  005c4	6a 00		 push	 0
  005c6	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  005c9	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2101
  005ce	6a 00		 push	 0
  005d0	6a ff		 push	 -1
  005d2	6a 00		 push	 0
  005d4	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  005d7	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2104
  005dc	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  005df	51		 push	 ecx
  005e0	6a 03		 push	 3
  005e2	6a 04		 push	 4
  005e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005e7	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2110
  005ec	8b f4		 mov	 esi, esp
  005ee	68 e4 00 00 00	 push	 228			; 000000e4H
  005f3	6a 5d		 push	 93			; 0000005dH
  005f5	68 bb 00 00 00	 push	 187			; 000000bbH
  005fa	6a 01		 push	 1
  005fc	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00602	52		 push	 edx
  00603	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00609	3b f4		 cmp	 esi, esp
  0060b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2111
  00610	6a ff		 push	 -1
  00612	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00618	50		 push	 eax
  00619	6a 00		 push	 0
  0061b	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0061e	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2112
  00623	b9 04 00 00 00	 mov	 ecx, 4
  00628	6b d1 00	 imul	 edx, ecx, 0
  0062b	c7 44 15 a4 ff
	ff ff 96	 mov	 DWORD PTR _Element$[ebp+edx+28], -1761607681 ; 96ffffffH
; Line 2113
  00633	b8 04 00 00 00	 mov	 eax, 4
  00638	6b c8 03	 imul	 ecx, eax, 3
  0063b	c7 44 0d a4 ff
	ff ff c8	 mov	 DWORD PTR _Element$[ebp+ecx+28], -922746881 ; c8ffffffH
; Line 2114
  00643	ba 04 00 00 00	 mov	 edx, 4
  00648	c1 e2 00	 shl	 edx, 0
  0064b	c7 44 15 a4 ff
	ff ff 46	 mov	 DWORD PTR _Element$[ebp+edx+28], 1191182335 ; 46ffffffH
; Line 2117
  00653	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00656	50		 push	 eax
  00657	6a 00		 push	 0
  00659	6a 05		 push	 5
  0065b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0065e	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2122
  00663	8b f4		 mov	 esi, esp
  00665	68 ea 00 00 00	 push	 234			; 000000eaH
  0066a	68 c0 00 00 00	 push	 192			; 000000c0H
  0066f	68 c1 00 00 00	 push	 193			; 000000c1H
  00674	68 97 00 00 00	 push	 151			; 00000097H
  00679	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  0067f	51		 push	 ecx
  00680	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00686	3b f4		 cmp	 esi, esp
  00688	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2123
  0068d	6a ff		 push	 -1
  0068f	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00695	52		 push	 edx
  00696	6a 00		 push	 0
  00698	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0069b	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2126
  006a0	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  006a3	50		 push	 eax
  006a4	6a 01		 push	 1
  006a6	6a 05		 push	 5
  006a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006ab	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2131
  006b0	c7 85 68 ff ff
	ff c4 00 00 00	 mov	 DWORD PTR _nScrollBarStartX$[ebp], 196 ; 000000c4H
; Line 2132
  006ba	c7 85 64 ff ff
	ff bf 00 00 00	 mov	 DWORD PTR _nScrollBarStartY$[ebp], 191 ; 000000bfH
; Line 2133
  006c4	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _nScrollBarStartY$[ebp]
  006ca	83 c1 20	 add	 ecx, 32			; 00000020H
  006cd	8b f4		 mov	 esi, esp
  006cf	51		 push	 ecx
  006d0	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _nScrollBarStartX$[ebp]
  006d6	83 c2 16	 add	 edx, 22			; 00000016H
  006d9	52		 push	 edx
  006da	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _nScrollBarStartY$[ebp]
  006e0	83 c0 15	 add	 eax, 21			; 00000015H
  006e3	50		 push	 eax
  006e4	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _nScrollBarStartX$[ebp]
  006ea	51		 push	 ecx
  006eb	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  006f1	52		 push	 edx
  006f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  006f8	3b f4		 cmp	 esi, esp
  006fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2134
  006ff	6a ff		 push	 -1
  00701	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  00707	50		 push	 eax
  00708	6a 00		 push	 0
  0070a	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0070d	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2135
  00712	b9 04 00 00 00	 mov	 ecx, 4
  00717	c1 e1 00	 shl	 ecx, 0
  0071a	c7 44 0d a4 c8
	c8 c8 ff	 mov	 DWORD PTR _Element$[ebp+ecx+28], -3618616 ; ffc8c8c8H
; Line 2138
  00722	8d 55 88	 lea	 edx, DWORD PTR _Element$[ebp]
  00725	52		 push	 edx
  00726	6a 00		 push	 0
  00728	6a 09		 push	 9
  0072a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0072d	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2143
  00732	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _nScrollBarStartY$[ebp]
  00738	83 c0 15	 add	 eax, 21			; 00000015H
  0073b	8b f4		 mov	 esi, esp
  0073d	50		 push	 eax
  0073e	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _nScrollBarStartX$[ebp]
  00744	83 c1 16	 add	 ecx, 22			; 00000016H
  00747	51		 push	 ecx
  00748	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR _nScrollBarStartY$[ebp]
  0074e	83 c2 01	 add	 edx, 1
  00751	52		 push	 edx
  00752	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _nScrollBarStartX$[ebp]
  00758	50		 push	 eax
  00759	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  0075f	51		 push	 ecx
  00760	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00766	3b f4		 cmp	 esi, esp
  00768	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2144
  0076d	6a ff		 push	 -1
  0076f	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00775	52		 push	 edx
  00776	6a 00		 push	 0
  00778	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0077b	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2145
  00780	b8 04 00 00 00	 mov	 eax, 4
  00785	c1 e0 00	 shl	 eax, 0
  00788	c7 44 05 a4 c8
	c8 c8 ff	 mov	 DWORD PTR _Element$[ebp+eax+28], -3618616 ; ffc8c8c8H
; Line 2149
  00790	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00793	51		 push	 ecx
  00794	6a 01		 push	 1
  00796	6a 09		 push	 9
  00798	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0079b	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2154
  007a0	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR _nScrollBarStartY$[ebp]
  007a6	83 c2 35	 add	 edx, 53			; 00000035H
  007a9	8b f4		 mov	 esi, esp
  007ab	52		 push	 edx
  007ac	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _nScrollBarStartX$[ebp]
  007b2	83 c0 16	 add	 eax, 22			; 00000016H
  007b5	50		 push	 eax
  007b6	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _nScrollBarStartY$[ebp]
  007bc	83 c1 20	 add	 ecx, 32			; 00000020H
  007bf	51		 push	 ecx
  007c0	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _nScrollBarStartX$[ebp]
  007c6	52		 push	 edx
  007c7	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _rcTexture$[ebp]
  007cd	50		 push	 eax
  007ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  007d4	3b f4		 cmp	 esi, esp
  007d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2155
  007db	6a ff		 push	 -1
  007dd	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  007e3	51		 push	 ecx
  007e4	6a 00		 push	 0
  007e6	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  007e9	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2156
  007ee	ba 04 00 00 00	 mov	 edx, 4
  007f3	c1 e2 00	 shl	 edx, 0
  007f6	c7 44 15 a4 c8
	c8 c8 ff	 mov	 DWORD PTR _Element$[ebp+edx+28], -3618616 ; ffc8c8c8H
; Line 2160
  007fe	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00801	50		 push	 eax
  00802	6a 02		 push	 2
  00804	6a 09		 push	 9
  00806	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00809	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2165
  0080e	8b f4		 mov	 esi, esp
  00810	68 ea 00 00 00	 push	 234			; 000000eaH
  00815	68 ee 00 00 00	 push	 238			; 000000eeH
  0081a	68 c0 00 00 00	 push	 192			; 000000c0H
  0081f	68 dc 00 00 00	 push	 220			; 000000dcH
  00824	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  0082a	51		 push	 ecx
  0082b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00831	3b f4		 cmp	 esi, esp
  00833	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2166
  00838	6a ff		 push	 -1
  0083a	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00840	52		 push	 edx
  00841	6a 00		 push	 0
  00843	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00846	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2169
  0084b	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  0084e	50		 push	 eax
  0084f	6a 03		 push	 3
  00851	6a 09		 push	 9
  00853	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00856	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2186
  0085b	6a 00		 push	 0
  0085d	68 00 00 00 ff	 push	 -16777216		; ff000000H
  00862	6a 00		 push	 0
  00864	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00867	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2189
  0086c	8b f4		 mov	 esi, esp
  0086e	6a 71		 push	 113			; 00000071H
  00870	68 f1 00 00 00	 push	 241			; 000000f1H
  00875	6a 5a		 push	 90			; 0000005aH
  00877	6a 0e		 push	 14			; 0000000eH
  00879	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  0087f	51		 push	 ecx
  00880	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00886	3b f4		 cmp	 esi, esp
  00888	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2190
  0088d	6a ff		 push	 -1
  0088f	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00895	52		 push	 edx
  00896	6a 00		 push	 0
  00898	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  0089b	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2191
  008a0	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  008a3	50		 push	 eax
  008a4	6a 00		 push	 0
  008a6	6a 06		 push	 6
  008a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008ab	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2192
  008b0	8b f4		 mov	 esi, esp
  008b2	6a 5a		 push	 90			; 0000005aH
  008b4	6a 0e		 push	 14			; 0000000eH
  008b6	6a 52		 push	 82			; 00000052H
  008b8	6a 08		 push	 8
  008ba	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  008c0	51		 push	 ecx
  008c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  008c7	3b f4		 cmp	 esi, esp
  008c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2193
  008ce	6a ff		 push	 -1
  008d0	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  008d6	52		 push	 edx
  008d7	6a 00		 push	 0
  008d9	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  008dc	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2194
  008e1	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  008e4	50		 push	 eax
  008e5	6a 01		 push	 1
  008e7	6a 06		 push	 6
  008e9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008ec	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2195
  008f1	8b f4		 mov	 esi, esp
  008f3	6a 5a		 push	 90			; 0000005aH
  008f5	68 f1 00 00 00	 push	 241			; 000000f1H
  008fa	6a 52		 push	 82			; 00000052H
  008fc	6a 0e		 push	 14			; 0000000eH
  008fe	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00904	51		 push	 ecx
  00905	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  0090b	3b f4		 cmp	 esi, esp
  0090d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2196
  00912	6a ff		 push	 -1
  00914	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  0091a	52		 push	 edx
  0091b	6a 00		 push	 0
  0091d	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00920	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2197
  00925	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00928	50		 push	 eax
  00929	6a 02		 push	 2
  0092b	6a 06		 push	 6
  0092d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00930	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2198
  00935	8b f4		 mov	 esi, esp
  00937	6a 5a		 push	 90			; 0000005aH
  00939	68 f6 00 00 00	 push	 246			; 000000f6H
  0093e	6a 52		 push	 82			; 00000052H
  00940	68 f1 00 00 00	 push	 241			; 000000f1H
  00945	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  0094b	51		 push	 ecx
  0094c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00952	3b f4		 cmp	 esi, esp
  00954	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2199
  00959	6a ff		 push	 -1
  0095b	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00961	52		 push	 edx
  00962	6a 00		 push	 0
  00964	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00967	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2200
  0096c	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  0096f	50		 push	 eax
  00970	6a 03		 push	 3
  00972	6a 06		 push	 6
  00974	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00977	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2201
  0097c	8b f4		 mov	 esi, esp
  0097e	6a 71		 push	 113			; 00000071H
  00980	6a 0e		 push	 14			; 0000000eH
  00982	6a 5a		 push	 90			; 0000005aH
  00984	6a 08		 push	 8
  00986	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  0098c	51		 push	 ecx
  0098d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00993	3b f4		 cmp	 esi, esp
  00995	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2202
  0099a	6a ff		 push	 -1
  0099c	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  009a2	52		 push	 edx
  009a3	6a 00		 push	 0
  009a5	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  009a8	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2203
  009ad	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  009b0	50		 push	 eax
  009b1	6a 04		 push	 4
  009b3	6a 06		 push	 6
  009b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009b8	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2204
  009bd	8b f4		 mov	 esi, esp
  009bf	6a 71		 push	 113			; 00000071H
  009c1	68 f6 00 00 00	 push	 246			; 000000f6H
  009c6	6a 5a		 push	 90			; 0000005aH
  009c8	68 f1 00 00 00	 push	 241			; 000000f1H
  009cd	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  009d3	51		 push	 ecx
  009d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  009da	3b f4		 cmp	 esi, esp
  009dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2205
  009e1	6a ff		 push	 -1
  009e3	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  009e9	52		 push	 edx
  009ea	6a 00		 push	 0
  009ec	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  009ef	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2206
  009f4	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  009f7	50		 push	 eax
  009f8	6a 05		 push	 5
  009fa	6a 06		 push	 6
  009fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009ff	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2207
  00a04	8b f4		 mov	 esi, esp
  00a06	6a 79		 push	 121			; 00000079H
  00a08	6a 0e		 push	 14			; 0000000eH
  00a0a	6a 71		 push	 113			; 00000071H
  00a0c	6a 08		 push	 8
  00a0e	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00a14	51		 push	 ecx
  00a15	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00a1b	3b f4		 cmp	 esi, esp
  00a1d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2208
  00a22	6a ff		 push	 -1
  00a24	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00a2a	52		 push	 edx
  00a2b	6a 00		 push	 0
  00a2d	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00a30	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2209
  00a35	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00a38	50		 push	 eax
  00a39	6a 06		 push	 6
  00a3b	6a 06		 push	 6
  00a3d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a40	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2210
  00a45	8b f4		 mov	 esi, esp
  00a47	6a 79		 push	 121			; 00000079H
  00a49	68 f1 00 00 00	 push	 241			; 000000f1H
  00a4e	6a 71		 push	 113			; 00000071H
  00a50	6a 0e		 push	 14			; 0000000eH
  00a52	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00a58	51		 push	 ecx
  00a59	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00a5f	3b f4		 cmp	 esi, esp
  00a61	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2211
  00a66	6a ff		 push	 -1
  00a68	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00a6e	52		 push	 edx
  00a6f	6a 00		 push	 0
  00a71	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00a74	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2212
  00a79	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00a7c	50		 push	 eax
  00a7d	6a 07		 push	 7
  00a7f	6a 06		 push	 6
  00a81	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a84	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2213
  00a89	8b f4		 mov	 esi, esp
  00a8b	6a 79		 push	 121			; 00000079H
  00a8d	68 f6 00 00 00	 push	 246			; 000000f6H
  00a92	6a 71		 push	 113			; 00000071H
  00a94	68 f1 00 00 00	 push	 241			; 000000f1H
  00a99	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00a9f	51		 push	 ecx
  00aa0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00aa6	3b f4		 cmp	 esi, esp
  00aa8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2214
  00aad	6a ff		 push	 -1
  00aaf	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00ab5	52		 push	 edx
  00ab6	6a 00		 push	 0
  00ab8	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00abb	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2215
  00ac0	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00ac3	50		 push	 eax
  00ac4	6a 08		 push	 8
  00ac6	6a 06		 push	 6
  00ac8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00acb	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2220
  00ad0	8b f4		 mov	 esi, esp
  00ad2	68 a0 00 00 00	 push	 160			; 000000a0H
  00ad7	68 f1 00 00 00	 push	 241			; 000000f1H
  00adc	6a 7b		 push	 123			; 0000007bH
  00ade	6a 0d		 push	 13			; 0000000dH
  00ae0	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00ae6	51		 push	 ecx
  00ae7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00aed	3b f4		 cmp	 esi, esp
  00aef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2221
  00af4	6a ff		 push	 -1
  00af6	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00afc	52		 push	 edx
  00afd	6a 00		 push	 0
  00aff	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00b02	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2222
  00b07	6a 00		 push	 0
  00b09	68 00 00 00 ff	 push	 -16777216		; ff000000H
  00b0e	6a 00		 push	 0
  00b10	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00b13	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2225
  00b18	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00b1b	50		 push	 eax
  00b1c	6a 00		 push	 0
  00b1e	6a 08		 push	 8
  00b20	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b23	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2231
  00b28	8b f4		 mov	 esi, esp
  00b2a	68 b7 00 00 00	 push	 183			; 000000b7H
  00b2f	68 f0 00 00 00	 push	 240			; 000000f0H
  00b34	68 a6 00 00 00	 push	 166			; 000000a6H
  00b39	6a 10		 push	 16			; 00000010H
  00b3b	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _rcTexture$[ebp]
  00b41	51		 push	 ecx
  00b42	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRect@20
  00b48	3b f4		 cmp	 esi, esp
  00b4a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2232
  00b4f	6a ff		 push	 -1
  00b51	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _rcTexture$[ebp]
  00b57	52		 push	 edx
  00b58	6a 00		 push	 0
  00b5a	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00b5d	e8 00 00 00 00	 call	 ?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ; CDXUTElement::SetTexture
; Line 2233
  00b62	6a 00		 push	 0
  00b64	6a ff		 push	 -1
  00b66	6a 00		 push	 0
  00b68	8d 4d 88	 lea	 ecx, DWORD PTR _Element$[ebp]
  00b6b	e8 00 00 00 00	 call	 ?SetFont@CDXUTElement@@QAEXIKK@Z ; CDXUTElement::SetFont
; Line 2236
  00b70	8d 45 88	 lea	 eax, DWORD PTR _Element$[ebp]
  00b73	50		 push	 eax
  00b74	6a 01		 push	 1
  00b76	6a 08		 push	 8
  00b78	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7b	e8 00 00 00 00	 call	 ?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ; CDXUTDialog::SetDefaultElement
; Line 2237
  00b80	52		 push	 edx
  00b81	8b cd		 mov	 ecx, ebp
  00b83	50		 push	 eax
  00b84	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@InitDefaul
  00b8a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00b8f	58		 pop	 eax
  00b90	5a		 pop	 edx
  00b91	5f		 pop	 edi
  00b92	5e		 pop	 esi
  00b93	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b96	33 cd		 xor	 ecx, ebp
  00b98	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b9d	81 c4 9c 00 00
	00		 add	 esp, 156		; 0000009cH
  00ba3	3b ec		 cmp	 ebp, esp
  00ba5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00baa	8b e5		 mov	 esp, ebp
  00bac	5d		 pop	 ebp
  00bad	c3		 ret	 0
  00bae	8b ff		 npad	 2
$LN6@InitDefaul:
  00bb0	02 00 00 00	 DD	 2
  00bb4	00 00 00 00	 DD	 $LN5@InitDefaul
$LN5@InitDefaul:
  00bb8	88 ff ff ff	 DD	 -120			; ffffff88H
  00bbc	6c 00 00 00	 DD	 108			; 0000006cH
  00bc0	00 00 00 00	 DD	 $LN3@InitDefaul
  00bc4	70 ff ff ff	 DD	 -144			; ffffff70H
  00bc8	10 00 00 00	 DD	 16			; 00000010H
  00bcc	00 00 00 00	 DD	 $LN4@InitDefaul
$LN4@InitDefaul:
  00bd0	72		 DB	 114			; 00000072H
  00bd1	63		 DB	 99			; 00000063H
  00bd2	54		 DB	 84			; 00000054H
  00bd3	65		 DB	 101			; 00000065H
  00bd4	78		 DB	 120			; 00000078H
  00bd5	74		 DB	 116			; 00000074H
  00bd6	75		 DB	 117			; 00000075H
  00bd7	72		 DB	 114			; 00000072H
  00bd8	65		 DB	 101			; 00000065H
  00bd9	00		 DB	 0
$LN3@InitDefaul:
  00bda	45		 DB	 69			; 00000045H
  00bdb	6c		 DB	 108			; 0000006cH
  00bdc	65		 DB	 101			; 00000065H
  00bdd	6d		 DB	 109			; 0000006dH
  00bde	65		 DB	 101			; 00000065H
  00bdf	6e		 DB	 110			; 0000006eH
  00be0	74		 DB	 116			; 00000074H
  00be1	00		 DB	 0
?InitDefaultElements@CDXUTDialog@@AAEXXZ ENDP		; CDXUTDialog::InitDefaultElements
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv93 = -60						; size = 4
tv66 = -56						; size = 4
$T2 = -52						; size = 12
$T3 = -37						; size = 1
_it$4 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?FocusDefaultControl@CDXUTDialog@@QAEXXZ PROC		; CDXUTDialog::FocusDefaultControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1794
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?FocusDefaultControl@CDXUTDialog@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0001a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1796
  0003b	8d 45 e0	 lea	 eax, DWORD PTR _it$4[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00048	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00054	eb 08		 jmp	 SHORT $LN4@FocusDefau
$LN3@FocusDefau:
  00056	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00059	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN4@FocusDefau:
  0005e	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00061	51		 push	 ecx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0006b	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
  00070	89 45 c8	 mov	 DWORD PTR tv66[ebp], eax
  00073	8b 55 c8	 mov	 edx, DWORD PTR tv66[ebp]
  00076	89 55 c4	 mov	 DWORD PTR tv93[ebp], edx
  00079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007d	8b 45 c4	 mov	 eax, DWORD PTR tv93[ebp]
  00080	50		 push	 eax
  00081	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00084	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00089	88 45 db	 mov	 BYTE PTR $T3[ebp], al
  0008c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00090	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00093	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00098	0f b6 4d db	 movzx	 ecx, BYTE PTR $T3[ebp]
  0009c	85 c9		 test	 ecx, ecx
  0009e	74 59		 je	 SHORT $LN2@FocusDefau
; Line 1798
  000a0	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000a3	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000a8	8b 10		 mov	 edx, DWORD PTR [eax]
  000aa	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  000ae	85 c0		 test	 eax, eax
  000b0	74 42		 je	 SHORT $LN1@FocusDefau
; Line 1801
  000b2	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
; Line 1804
  000b7	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000ba	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, ecx ; CDXUTDialog::s_pControlFocus
; Line 1805
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  000cd	8b 02		 mov	 eax, DWORD PTR [edx]
  000cf	8b f4		 mov	 esi, esp
  000d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  000d7	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000da	ff d2		 call	 edx
  000dc	3b f4		 cmp	 esi, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1806
  000e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ea	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000ed	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  000f2	eb 14		 jmp	 SHORT $LN5@FocusDefau
$LN1@FocusDefau:
; Line 1807
  000f4	e9 5d ff ff ff	 jmp	 $LN3@FocusDefau
$LN2@FocusDefau:
; Line 1808
  000f9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00100	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00103	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
$LN5@FocusDefau:
; Line 1809
  00108	52		 push	 edx
  00109	8b cd		 mov	 ecx, ebp
  0010b	50		 push	 eax
  0010c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@FocusDefau
  00112	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00117	58		 pop	 eax
  00118	5a		 pop	 edx
  00119	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00123	59		 pop	 ecx
  00124	5f		 pop	 edi
  00125	5e		 pop	 esi
  00126	83 c4 3c	 add	 esp, 60			; 0000003cH
  00129	3b ec		 cmp	 ebp, esp
  0012b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
$LN12@FocusDefau:
  00134	01 00 00 00	 DD	 1
  00138	00 00 00 00	 DD	 $LN11@FocusDefau
$LN11@FocusDefau:
  0013c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00140	0c 00 00 00	 DD	 12			; 0000000cH
  00144	00 00 00 00	 DD	 $LN9@FocusDefau
$LN9@FocusDefau:
  00148	69		 DB	 105			; 00000069H
  00149	74		 DB	 116			; 00000074H
  0014a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FocusDefaultControl@CDXUTDialog@@QAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?FocusDefaultControl@CDXUTDialog@@QAEXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?FocusDefaultControl@CDXUTDialog@@QAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?FocusDefaultControl@CDXUTDialog@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?FocusDefaultControl@CDXUTDialog@@QAEXXZ ENDP		; CDXUTDialog::FocusDefaultControl
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?ClearFocus@CDXUTDialog@@SGXXZ PROC			; CDXUTDialog::ClearFocus
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1781
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1782
  00004	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  0000b	74 25		 je	 SHORT $LN1@ClearFocus
; Line 1784
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	8b f4		 mov	 esi, esp
  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  0001c	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0001f	ff d0		 call	 eax
  00021	3b f4		 cmp	 esi, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1785
  00028	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
$LN1@ClearFocus:
; Line 1788
  00032	8b f4		 mov	 esi, esp
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1789
  00041	5e		 pop	 esi
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?ClearFocus@CDXUTDialog@@SGXXZ ENDP			; CDXUTDialog::ClearFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ PROC ; CDXUTDialog::GetManager, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 290
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 3c 02 00
	00		 mov	 eax, DWORD PTR [eax+572]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetManager@CDXUTDialog@@QBEPAVCDXUTDialogResourceManager@@XZ ENDP ; CDXUTDialog::GetManager
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?GetTexture@CDXUTDialog@@QBEPAUDXUTTextureNode@@I@Z PROC ; CDXUTDialog::GetTexture
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 797
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 798
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 b8 3c 02 00
	00 00		 cmp	 DWORD PTR [eax+572], 0
  00018	75 04		 jne	 SHORT $LN1@GetTexture
; Line 799
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 23		 jmp	 SHORT $LN2@GetTexture
$LN1@GetTexture:
; Line 800
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  00021	51		 push	 ecx
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  0002b	e8 00 00 00 00	 call	 ??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z ; std::vector<int,std::allocator<int> >::operator[]
  00030	8b 10		 mov	 edx, DWORD PTR [eax]
  00032	52		 push	 edx
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0003c	e8 00 00 00 00	 call	 ?GetTextureNode@CDXUTDialogResourceManager@@QBEPAUDXUTTextureNode@@I@Z ; CDXUTDialogResourceManager::GetTextureNode
$LN2@GetTexture:
; Line 801
  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?GetTexture@CDXUTDialog@@QBEPAUDXUTTextureNode@@I@Z ENDP ; CDXUTDialog::GetTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -16						; size = 4
_iTexture$ = -12					; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_strResourceName$ = 12					; size = 4
_hResourceModule$ = 16					; size = 4
?SetTexture@CDXUTDialog@@QAEJIPB_WPAUHINSTANCE__@@@Z PROC ; CDXUTDialog::SetTexture
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 774
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 779
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 b8 3c 02 00
	00 00		 cmp	 DWORD PTR [eax+572], 0
  00025	74 09		 je	 SHORT $LN6@SetTexture
  00027	b9 00 00 00 00	 mov	 ecx, OFFSET $SG160868
  0002c	85 c9		 test	 ecx, ecx
  0002e	75 21		 jne	 SHORT $LN7@SetTexture
$LN6@SetTexture:
  00030	8b f4		 mov	 esi, esp
  00032	68 0b 03 00 00	 push	 779			; 0000030bH
  00037	68 00 00 00 00	 push	 OFFSET $SG160869
  0003c	68 00 00 00 00	 push	 OFFSET $SG160870
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@SetTexture:
; Line 783
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  0005a	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  0005f	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
  00062	eb 09		 jmp	 SHORT $LN3@SetTexture
$LN2@SetTexture:
  00064	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00067	83 c0 01	 add	 eax, 1
  0006a	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN3@SetTexture:
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00070	3b 4d 08	 cmp	 ecx, DWORD PTR _index$[ebp]
  00073	77 1b		 ja	 SHORT $LN1@SetTexture
; Line 785
  00075	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR $T1[ebp], -1
  0007c	8d 55 f0	 lea	 edx, DWORD PTR $T1[ebp]
  0007f	52		 push	 edx
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  00089	e8 00 00 00 00	 call	 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::push_back
; Line 786
  0008e	eb d4		 jmp	 SHORT $LN2@SetTexture
$LN1@SetTexture:
; Line 788
  00090	8b 45 10	 mov	 eax, DWORD PTR _hResourceModule$[ebp]
  00093	50		 push	 eax
  00094	8b 4d 0c	 mov	 ecx, DWORD PTR _strResourceName$[ebp]
  00097	51		 push	 ecx
  00098	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  000a1	e8 00 00 00 00	 call	 ?AddTexture@CDXUTDialogResourceManager@@QAEHPB_WPAUHINSTANCE__@@@Z ; CDXUTDialogResourceManager::AddTexture
  000a6	89 45 f4	 mov	 DWORD PTR _iTexture$[ebp], eax
; Line 790
  000a9	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  000b6	e8 00 00 00 00	 call	 ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _iTexture$[ebp]
  000be	89 08		 mov	 DWORD PTR [eax], ecx
; Line 791
  000c0	33 c0		 xor	 eax, eax
; Line 792
  000c2	5e		 pop	 esi
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	3b ec		 cmp	 ebp, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 0c 00	 ret	 12			; 0000000cH
?SetTexture@CDXUTDialog@@QAEJIPB_WPAUHINSTANCE__@@@Z ENDP ; CDXUTDialog::SetTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -16						; size = 4
_iTexture$ = -12					; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_strFilename$ = 12					; size = 4
?SetTexture@CDXUTDialog@@QAEJIPB_W@Z PROC		; CDXUTDialog::SetTexture
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 750
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 755
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 b8 3c 02 00
	00 00		 cmp	 DWORD PTR [eax+572], 0
  00025	74 09		 je	 SHORT $LN6@SetTexture
  00027	b9 00 00 00 00	 mov	 ecx, OFFSET $SG160851
  0002c	85 c9		 test	 ecx, ecx
  0002e	75 21		 jne	 SHORT $LN7@SetTexture
$LN6@SetTexture:
  00030	8b f4		 mov	 esi, esp
  00032	68 f3 02 00 00	 push	 755			; 000002f3H
  00037	68 00 00 00 00	 push	 OFFSET $SG160852
  0003c	68 00 00 00 00	 push	 OFFSET $SG160853
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@SetTexture:
; Line 759
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  0005a	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  0005f	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
  00062	eb 09		 jmp	 SHORT $LN3@SetTexture
$LN2@SetTexture:
  00064	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00067	83 c0 01	 add	 eax, 1
  0006a	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN3@SetTexture:
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00070	3b 4d 08	 cmp	 ecx, DWORD PTR _index$[ebp]
  00073	77 1b		 ja	 SHORT $LN1@SetTexture
; Line 761
  00075	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR $T1[ebp], -1
  0007c	8d 55 f0	 lea	 edx, DWORD PTR $T1[ebp]
  0007f	52		 push	 edx
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  00089	e8 00 00 00 00	 call	 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::push_back
; Line 762
  0008e	eb d4		 jmp	 SHORT $LN2@SetTexture
$LN1@SetTexture:
; Line 764
  00090	8b 45 0c	 mov	 eax, DWORD PTR _strFilename$[ebp]
  00093	50		 push	 eax
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	8b 89 3c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+572]
  0009d	e8 00 00 00 00	 call	 ?AddTexture@CDXUTDialogResourceManager@@QAEHPB_W@Z ; CDXUTDialogResourceManager::AddTexture
  000a2	89 45 f4	 mov	 DWORD PTR _iTexture$[ebp], eax
; Line 766
  000a5	8b 55 08	 mov	 edx, DWORD PTR _index$[ebp]
  000a8	52		 push	 edx
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  000b2	e8 00 00 00 00	 call	 ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
  000b7	8b 4d f4	 mov	 ecx, DWORD PTR _iTexture$[ebp]
  000ba	89 08		 mov	 DWORD PTR [eax], ecx
; Line 767
  000bc	33 c0		 xor	 eax, eax
; Line 768
  000be	5e		 pop	 esi
  000bf	83 c4 10	 add	 esp, 16			; 00000010H
  000c2	3b ec		 cmp	 ebp, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c2 08 00	 ret	 8
?SetTexture@CDXUTDialog@@QAEJIPB_W@Z ENDP		; CDXUTDialog::SetTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z PROC	; CDXUTDialog::GetFont
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 740
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 741
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 b8 3c 02 00
	00 00		 cmp	 DWORD PTR [eax+572], 0
  00018	75 04		 jne	 SHORT $LN1@GetFont
; Line 742
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 23		 jmp	 SHORT $LN2@GetFont
$LN1@GetFont:
; Line 743
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  00021	51		 push	 ecx
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  0002b	e8 00 00 00 00	 call	 ??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z ; std::vector<int,std::allocator<int> >::operator[]
  00030	8b 10		 mov	 edx, DWORD PTR [eax]
  00032	52		 push	 edx
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0003c	e8 00 00 00 00	 call	 ?GetFontNode@CDXUTDialogResourceManager@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialogResourceManager::GetFontNode
$LN2@GetFont:
; Line 744
  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z ENDP	; CDXUTDialog::GetFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -16						; size = 4
_iFont$ = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_strFaceName$ = 12					; size = 4
_height$ = 16						; size = 4
_weight$ = 20						; size = 4
?SetFont@CDXUTDialog@@QAEJIPB_WJJ@Z PROC		; CDXUTDialog::SetFont
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 717
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 722
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 b8 3c 02 00
	00 00		 cmp	 DWORD PTR [eax+572], 0
  00025	74 09		 je	 SHORT $LN6@SetFont
  00027	b9 00 00 00 00	 mov	 ecx, OFFSET $SG160830
  0002c	85 c9		 test	 ecx, ecx
  0002e	75 21		 jne	 SHORT $LN7@SetFont
$LN6@SetFont:
  00030	8b f4		 mov	 esi, esp
  00032	68 d2 02 00 00	 push	 722			; 000002d2H
  00037	68 00 00 00 00	 push	 OFFSET $SG160831
  0003c	68 00 00 00 00	 push	 OFFSET $SG160832
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@SetFont:
; Line 726
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  0005a	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
  0005f	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
  00062	eb 09		 jmp	 SHORT $LN3@SetFont
$LN2@SetFont:
  00064	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00067	83 c0 01	 add	 eax, 1
  0006a	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN3@SetFont:
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00070	3b 4d 08	 cmp	 ecx, DWORD PTR _index$[ebp]
  00073	77 1b		 ja	 SHORT $LN1@SetFont
; Line 728
  00075	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR $T1[ebp], -1
  0007c	8d 55 f0	 lea	 edx, DWORD PTR $T1[ebp]
  0007f	52		 push	 edx
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  00089	e8 00 00 00 00	 call	 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::push_back
; Line 729
  0008e	eb d4		 jmp	 SHORT $LN2@SetFont
$LN1@SetFont:
; Line 731
  00090	8b 45 14	 mov	 eax, DWORD PTR _weight$[ebp]
  00093	50		 push	 eax
  00094	8b 4d 10	 mov	 ecx, DWORD PTR _height$[ebp]
  00097	51		 push	 ecx
  00098	8b 55 0c	 mov	 edx, DWORD PTR _strFaceName$[ebp]
  0009b	52		 push	 edx
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  000a5	e8 00 00 00 00	 call	 ?AddFont@CDXUTDialogResourceManager@@QAEHPB_WJJ@Z ; CDXUTDialogResourceManager::AddFont
  000aa	89 45 f4	 mov	 DWORD PTR _iFont$[ebp], eax
; Line 732
  000ad	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  000b0	51		 push	 ecx
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  000ba	e8 00 00 00 00	 call	 ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
  000bf	8b 55 f4	 mov	 edx, DWORD PTR _iFont$[ebp]
  000c2	89 10		 mov	 DWORD PTR [eax], edx
; Line 734
  000c4	33 c0		 xor	 eax, eax
; Line 735
  000c6	5e		 pop	 esi
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	3b ec		 cmp	 ebp, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c2 10 00	 ret	 16			; 00000010H
?SetFont@CDXUTDialog@@QAEJIPB_WJJ@Z ENDP		; CDXUTDialog::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv383 = -888						; size = 4
tv408 = -884						; size = 4
tv361 = -880						; size = 4
tv531 = -876						; size = 8
tv527 = -868						; size = 4
tv518 = -864						; size = 8
tv514 = -856						; size = 4
tv507 = -852						; size = 8
tv503 = -844						; size = 4
tv495 = -840						; size = 8
tv491 = -832						; size = 4
$T2 = -828						; size = 12
$T3 = -813						; size = 1
_it$4 = -808						; size = 12
_wszOutput$5 = -788					; size = 512
_rc$6 = -268						; size = 16
_pTextureNode$ = -248					; size = 4
_offset$7 = -240					; size = 4
_stride$8 = -228					; size = 4
_MappedData$9 = -216					; size = 12
_vertices$10 = -196					; size = 144
_Bottom$11 = -48					; size = 4
_Top$12 = -44						; size = 4
_Right$13 = -40						; size = 4
_Left$14 = -36						; size = 4
_bBackgroundIsVisible$ = -32				; size = 4
_pd3dDeviceContext$ = -28				; size = 4
_pd3dDevice$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fElapsedTime$ = 8					; size = 4
?OnRender@CDXUTDialog@@QAEJM@Z PROC			; CDXUTDialog::OnRender
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 580
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnRender@CDXUTDialog@@QAEJM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 6c 03 00
	00		 sub	 esp, 876		; 0000036cH
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	8d bd 88 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-888]
  00020	b9 db 00 00 00	 mov	 ecx, 219		; 000000dbH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	59		 pop	 ecx
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 584
  00044	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0004d	e8 00 00 00 00	 call	 ?GetD3D11Device@CDXUTDialogResourceManager@@QBEPAUID3D11Device@@XZ ; CDXUTDialogResourceManager::GetD3D11Device
  00052	85 c0		 test	 eax, eax
  00054	74 09		 je	 SHORT $LN17@OnRender
  00056	b9 00 00 00 00	 mov	 ecx, OFFSET $SG160766
  0005b	85 c9		 test	 ecx, ecx
  0005d	75 21		 jne	 SHORT $LN18@OnRender
$LN17@OnRender:
  0005f	8b f4		 mov	 esi, esp
  00061	68 48 02 00 00	 push	 584			; 00000248H
  00066	68 00 00 00 00	 push	 OFFSET $SG160767
  0006b	68 00 00 00 00	 push	 OFFSET $SG160768
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
  00079	3b f4		 cmp	 esi, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN18@OnRender:
; Line 587
  00080	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00083	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?s_fTimeRefresh@CDXUTDialog@@0NA
  0008b	66 0f 2f 40 08	 comisd	 xmm0, QWORD PTR [eax+8]
  00090	76 13		 jbe	 SHORT $LN14@OnRender
; Line 589
  00092	e8 00 00 00 00	 call	 ?DXUTGetTime@@YGNXZ	; DXUTGetTime
  00097	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	dd 59 08	 fstp	 QWORD PTR [ecx+8]
; Line 590
  0009d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	e8 00 00 00 00	 call	 ?Refresh@CDXUTDialog@@QAEXXZ ; CDXUTDialog::Refresh
$LN14@OnRender:
; Line 595
  000a5	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000a8	0f b6 42 14	 movzx	 eax, BYTE PTR [edx+20]
  000ac	85 c0		 test	 eax, eax
  000ae	74 16		 je	 SHORT $LN12@OnRender
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	0f b6 51 16	 movzx	 edx, BYTE PTR [ecx+22]
  000b7	85 d2		 test	 edx, edx
  000b9	74 12		 je	 SHORT $LN13@OnRender
  000bb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000be	0f b6 48 15	 movzx	 ecx, BYTE PTR [eax+21]
  000c2	85 c9		 test	 ecx, ecx
  000c4	75 07		 jne	 SHORT $LN13@OnRender
$LN12@OnRender:
; Line 596
  000c6	33 c0		 xor	 eax, eax
  000c8	e9 6b 07 00 00	 jmp	 $LN15@OnRender
$LN13@OnRender:
; Line 598
  000cd	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000d0	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  000d6	e8 00 00 00 00	 call	 ?GetD3D11Device@CDXUTDialogResourceManager@@QBEPAUID3D11Device@@XZ ; CDXUTDialogResourceManager::GetD3D11Device
  000db	89 45 e8	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 599
  000de	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  000e7	e8 00 00 00 00	 call	 ?GetD3D11DeviceContext@CDXUTDialogResourceManager@@QBEPAUID3D11DeviceContext@@XZ ; CDXUTDialogResourceManager::GetD3D11DeviceContext
  000ec	89 45 e4	 mov	 DWORD PTR _pd3dDeviceContext$[ebp], eax
; Line 602
  000ef	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dDeviceContext$[ebp]
  000f2	51		 push	 ecx
  000f3	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000f6	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  000fc	e8 00 00 00 00	 call	 ?StoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::StoreD3D11State
; Line 604
  00101	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	8b 90 2c 02 00
	00		 mov	 edx, DWORD PTR [eax+556]
  0010d	0b 91 30 02 00
	00		 or	 edx, DWORD PTR [ecx+560]
  00113	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00116	0b 90 38 02 00
	00		 or	 edx, DWORD PTR [eax+568]
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	0b 91 34 02 00
	00		 or	 edx, DWORD PTR [ecx+564]
  00125	81 e2 00 00 00
	ff		 and	 edx, -16777216		; ff000000H
  0012b	89 55 e0	 mov	 DWORD PTR _bBackgroundIsVisible$[ebp], edx
; Line 605
  0012e	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00131	0f b6 42 16	 movzx	 eax, BYTE PTR [edx+22]
  00135	85 c0		 test	 eax, eax
  00137	0f 85 2f 04 00
	00		 jne	 $LN11@OnRender
  0013d	83 7d e0 00	 cmp	 DWORD PTR _bBackgroundIsVisible$[ebp], 0
  00141	0f 84 25 04 00
	00		 je	 $LN11@OnRender
; Line 609
  00147	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	f3 0f 2a 81 18
	02 00 00	 cvtsi2ss xmm0, DWORD PTR [ecx+536]
  00152	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  0015a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0015d	8b 82 3c 02 00
	00		 mov	 eax, DWORD PTR [edx+572]
  00163	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00166	89 8d c0 fc ff
	ff		 mov	 DWORD PTR tv491[ebp], ecx
  0016c	f2 0f 2a 8d c0
	fc ff ff	 cvtsi2sd xmm1, DWORD PTR tv491[ebp]
  00174	8b 95 c0 fc ff
	ff		 mov	 edx, DWORD PTR tv491[ebp]
  0017a	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  0017d	f2 0f 58 0c d5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  00186	f2 0f 11 8d b8
	fc ff ff	 movsd	 QWORD PTR tv495[ebp], xmm1
  0018e	f2 0f 5a 8d b8
	fc ff ff	 cvtsd2ss xmm1, QWORD PTR tv495[ebp]
  00196	f3 0f 5e c1	 divss	 xmm0, xmm1
  0019a	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  001a2	f3 0f 11 45 dc	 movss	 DWORD PTR _Left$14[ebp], xmm0
; Line 610
  001a7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001aa	8b 88 18 02 00
	00		 mov	 ecx, DWORD PTR [eax+536]
  001b0	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  001b3	03 8a 20 02 00
	00		 add	 ecx, DWORD PTR [edx+544]
  001b9	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001bd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  001c5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  001ce	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  001d1	89 95 b4 fc ff
	ff		 mov	 DWORD PTR tv503[ebp], edx
  001d7	f2 0f 2a 8d b4
	fc ff ff	 cvtsi2sd xmm1, DWORD PTR tv503[ebp]
  001df	8b 85 b4 fc ff
	ff		 mov	 eax, DWORD PTR tv503[ebp]
  001e5	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001e8	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  001f1	f2 0f 11 8d ac
	fc ff ff	 movsd	 QWORD PTR tv507[ebp], xmm1
  001f9	f2 0f 5a 8d ac
	fc ff ff	 cvtsd2ss xmm1, QWORD PTR tv507[ebp]
  00201	f3 0f 5e c1	 divss	 xmm0, xmm1
  00205	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0020d	f3 0f 11 45 d8	 movss	 DWORD PTR _Right$13[ebp], xmm0
; Line 611
  00212	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00215	f3 0f 2a 81 1c
	02 00 00	 cvtsi2ss xmm0, DWORD PTR [ecx+540]
  0021d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00225	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00228	8b 82 3c 02 00
	00		 mov	 eax, DWORD PTR [edx+572]
  0022e	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00231	89 8d a8 fc ff
	ff		 mov	 DWORD PTR tv514[ebp], ecx
  00237	f2 0f 2a 8d a8
	fc ff ff	 cvtsi2sd xmm1, DWORD PTR tv514[ebp]
  0023f	8b 95 a8 fc ff
	ff		 mov	 edx, DWORD PTR tv514[ebp]
  00245	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00248	f2 0f 58 0c d5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  00251	f2 0f 11 8d a0
	fc ff ff	 movsd	 QWORD PTR tv518[ebp], xmm1
  00259	f2 0f 5a 8d a0
	fc ff ff	 cvtsd2ss xmm1, QWORD PTR tv518[ebp]
  00261	f3 0f 5e c1	 divss	 xmm0, xmm1
  00265	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0026d	f3 0f 5c c8	 subss	 xmm1, xmm0
  00271	f3 0f 11 4d d4	 movss	 DWORD PTR _Top$12[ebp], xmm1
; Line 612
  00276	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00279	8b 88 1c 02 00
	00		 mov	 ecx, DWORD PTR [eax+540]
  0027f	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00282	03 8a 24 02 00
	00		 add	 ecx, DWORD PTR [edx+548]
  00288	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0028c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00294	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00297	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0029d	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  002a0	89 95 9c fc ff
	ff		 mov	 DWORD PTR tv527[ebp], edx
  002a6	f2 0f 2a 8d 9c
	fc ff ff	 cvtsi2sd xmm1, DWORD PTR tv527[ebp]
  002ae	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR tv527[ebp]
  002b4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002b7	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  002c0	f2 0f 11 8d 94
	fc ff ff	 movsd	 QWORD PTR tv531[ebp], xmm1
  002c8	f2 0f 5a 8d 94
	fc ff ff	 cvtsd2ss xmm1, QWORD PTR tv531[ebp]
  002d0	f3 0f 5e c1	 divss	 xmm0, xmm1
  002d4	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  002dc	f3 0f 5c c8	 subss	 xmm1, xmm0
  002e0	f3 0f 11 4d d0	 movss	 DWORD PTR _Bottom$11[ebp], xmm1
; Line 620
  002e5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _Left$14[ebp]
  002ea	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp], xmm0
  002f2	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _Top$12[ebp]
  002f7	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+4], xmm0
  002ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00307	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+8], xmm0
  0030f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00312	8b 91 2c 02 00
	00		 mov	 edx, DWORD PTR [ecx+556]
  00318	52		 push	 edx
  00319	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _vertices$10[ebp+12]
  0031f	50		 push	 eax
  00320	e8 00 00 00 00	 call	 ?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ; D3DCOLOR_TO_D3DCOLORVALUE
  00325	83 c4 08	 add	 esp, 8
  00328	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00330	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+28], xmm0
  00338	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00340	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+32], xmm0
  00348	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _Right$13[ebp]
  0034d	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+36], xmm0
  00355	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _Top$12[ebp]
  0035a	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+40], xmm0
  00362	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0036a	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+44], xmm0
  00372	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00375	8b 91 30 02 00
	00		 mov	 edx, DWORD PTR [ecx+560]
  0037b	52		 push	 edx
  0037c	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _vertices$10[ebp+48]
  00382	50		 push	 eax
  00383	e8 00 00 00 00	 call	 ?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ; D3DCOLOR_TO_D3DCOLORVALUE
  00388	83 c4 08	 add	 esp, 8
  0038b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00393	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _vertices$10[ebp+64], xmm0
  0039b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  003a3	f3 0f 11 45 80	 movss	 DWORD PTR _vertices$10[ebp+68], xmm0
  003a8	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _Left$14[ebp]
  003ad	f3 0f 11 45 84	 movss	 DWORD PTR _vertices$10[ebp+72], xmm0
  003b2	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _Bottom$11[ebp]
  003b7	f3 0f 11 45 88	 movss	 DWORD PTR _vertices$10[ebp+76], xmm0
  003bc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  003c4	f3 0f 11 45 8c	 movss	 DWORD PTR _vertices$10[ebp+80], xmm0
  003c9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003cc	8b 91 34 02 00
	00		 mov	 edx, DWORD PTR [ecx+564]
  003d2	52		 push	 edx
  003d3	8d 45 90	 lea	 eax, DWORD PTR _vertices$10[ebp+84]
  003d6	50		 push	 eax
  003d7	e8 00 00 00 00	 call	 ?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ; D3DCOLOR_TO_D3DCOLORVALUE
  003dc	83 c4 08	 add	 esp, 8
  003df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  003e7	f3 0f 11 45 a0	 movss	 DWORD PTR _vertices$10[ebp+100], xmm0
  003ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003f4	f3 0f 11 45 a4	 movss	 DWORD PTR _vertices$10[ebp+104], xmm0
  003f9	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _Right$13[ebp]
  003fe	f3 0f 11 45 a8	 movss	 DWORD PTR _vertices$10[ebp+108], xmm0
  00403	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _Bottom$11[ebp]
  00408	f3 0f 11 45 ac	 movss	 DWORD PTR _vertices$10[ebp+112], xmm0
  0040d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00415	f3 0f 11 45 b0	 movss	 DWORD PTR _vertices$10[ebp+116], xmm0
  0041a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0041d	8b 91 38 02 00
	00		 mov	 edx, DWORD PTR [ecx+568]
  00423	52		 push	 edx
  00424	8d 45 b4	 lea	 eax, DWORD PTR _vertices$10[ebp+120]
  00427	50		 push	 eax
  00428	e8 00 00 00 00	 call	 ?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ; D3DCOLOR_TO_D3DCOLORVALUE
  0042d	83 c4 08	 add	 esp, 8
  00430	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00438	f3 0f 11 45 c4	 movss	 DWORD PTR _vertices$10[ebp+136], xmm0
  0043d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00445	f3 0f 11 45 c8	 movss	 DWORD PTR _vertices$10[ebp+140], xmm0
; Line 625
  0044a	8b f4		 mov	 esi, esp
  0044c	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _MappedData$9[ebp]
  00452	51		 push	 ecx
  00453	6a 00		 push	 0
  00455	6a 04		 push	 4
  00457	6a 00		 push	 0
  00459	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0045c	8b 82 3c 02 00
	00		 mov	 eax, DWORD PTR [edx+572]
  00462	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00465	51		 push	 ecx
  00466	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  00469	8b 02		 mov	 eax, DWORD PTR [edx]
  0046b	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dDeviceContext$[ebp]
  0046e	51		 push	 ecx
  0046f	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00472	ff d2		 call	 edx
  00474	3b f4		 cmp	 esi, esp
  00476	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0047b	85 c0		 test	 eax, eax
  0047d	7c 39		 jl	 SHORT $LN10@OnRender
; Line 627
  0047f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00484	8d b5 3c ff ff
	ff		 lea	 esi, DWORD PTR _vertices$10[ebp]
  0048a	8b bd 28 ff ff
	ff		 mov	 edi, DWORD PTR _MappedData$9[ebp]
  00490	f3 a5		 rep movsd
; Line 628
  00492	8b f4		 mov	 esi, esp
  00494	6a 00		 push	 0
  00496	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00499	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0049f	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  004a2	52		 push	 edx
  004a3	8b 45 e4	 mov	 eax, DWORD PTR _pd3dDeviceContext$[ebp]
  004a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  004a8	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  004ab	52		 push	 edx
  004ac	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  004af	ff d0		 call	 eax
  004b1	3b f4		 cmp	 esi, esp
  004b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN10@OnRender:
; Line 632
  004b8	c7 85 1c ff ff
	ff 24 00 00 00	 mov	 DWORD PTR _stride$8[ebp], 36 ; 00000024H
; Line 633
  004c2	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _offset$7[ebp], 0
; Line 634
  004cc	8b f4		 mov	 esi, esp
  004ce	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _offset$7[ebp]
  004d4	51		 push	 ecx
  004d5	8d 95 1c ff ff
	ff		 lea	 edx, DWORD PTR _stride$8[ebp]
  004db	52		 push	 edx
  004dc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  004df	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  004e5	83 c1 48	 add	 ecx, 72			; 00000048H
  004e8	51		 push	 ecx
  004e9	6a 01		 push	 1
  004eb	6a 00		 push	 0
  004ed	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  004f0	8b 02		 mov	 eax, DWORD PTR [edx]
  004f2	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dDeviceContext$[ebp]
  004f5	51		 push	 ecx
  004f6	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  004f9	ff d2		 call	 edx
  004fb	3b f4		 cmp	 esi, esp
  004fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 635
  00502	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00505	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0050b	8b f4		 mov	 esi, esp
  0050d	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00510	52		 push	 edx
  00511	8b 45 e4	 mov	 eax, DWORD PTR _pd3dDeviceContext$[ebp]
  00514	8b 08		 mov	 ecx, DWORD PTR [eax]
  00516	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  00519	52		 push	 edx
  0051a	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  0051d	ff d0		 call	 eax
  0051f	3b f4		 cmp	 esi, esp
  00521	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 636
  00526	8b f4		 mov	 esi, esp
  00528	6a 05		 push	 5
  0052a	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dDeviceContext$[ebp]
  0052d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0052f	8b 45 e4	 mov	 eax, DWORD PTR _pd3dDeviceContext$[ebp]
  00532	50		 push	 eax
  00533	8b 4a 60	 mov	 ecx, DWORD PTR [edx+96]
  00536	ff d1		 call	 ecx
  00538	3b f4		 cmp	 esi, esp
  0053a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 639
  0053f	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  00542	52		 push	 edx
  00543	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00546	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0054c	e8 00 00 00 00	 call	 ?ApplyRenderUIUntex11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::ApplyRenderUIUntex11
; Line 640
  00551	8b f4		 mov	 esi, esp
  00553	6a 00		 push	 0
  00555	6a 04		 push	 4
  00557	8b 4d e4	 mov	 ecx, DWORD PTR _pd3dDeviceContext$[ebp]
  0055a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0055c	8b 45 e4	 mov	 eax, DWORD PTR _pd3dDeviceContext$[ebp]
  0055f	50		 push	 eax
  00560	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  00563	ff d1		 call	 ecx
  00565	3b f4		 cmp	 esi, esp
  00567	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@OnRender:
; Line 643
  0056c	6a 00		 push	 0
  0056e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00571	e8 00 00 00 00	 call	 ?GetTexture@CDXUTDialog@@QBEPAUDXUTTextureNode@@I@Z ; CDXUTDialog::GetTexture
  00576	89 85 08 ff ff
	ff		 mov	 DWORD PTR _pTextureNode$[ebp], eax
; Line 644
  0057c	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR _pTextureNode$[ebp]
  00582	81 c2 20 02 00
	00		 add	 edx, 544		; 00000220H
  00588	8b f4		 mov	 esi, esp
  0058a	52		 push	 edx
  0058b	6a 01		 push	 1
  0058d	6a 00		 push	 0
  0058f	8b 45 e4	 mov	 eax, DWORD PTR _pd3dDeviceContext$[ebp]
  00592	8b 08		 mov	 ecx, DWORD PTR [eax]
  00594	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  00597	52		 push	 edx
  00598	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  0059b	ff d0		 call	 eax
  0059d	3b f4		 cmp	 esi, esp
  0059f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 647
  005a4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005a7	8b 89 3c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+572]
  005ad	e8 00 00 00 00	 call	 ?BeginSprites11@CDXUTDialogResourceManager@@QAEXXZ ; CDXUTDialogResourceManager::BeginSprites11
; Line 648
  005b2	e8 00 00 00 00	 call	 ?BeginText11@@YAXXZ	; BeginText11
; Line 650
  005b7	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  005ba	52		 push	 edx
  005bb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005be	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  005c4	e8 00 00 00 00	 call	 ?ApplyRenderUI11@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::ApplyRenderUI11
; Line 653
  005c9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005cc	0f b6 51 15	 movzx	 edx, BYTE PTR [ecx+21]
  005d0	85 d2		 test	 edx, edx
  005d2	0f 84 e1 00 00
	00		 je	 $LN9@OnRender
; Line 658
  005d8	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _rc$6[ebp], 0
  005e2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005e5	8b 88 28 02 00
	00		 mov	 ecx, DWORD PTR [eax+552]
  005eb	f7 d9		 neg	 ecx
  005ed	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _rc$6[ebp+4], ecx
  005f3	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  005f6	8b 82 20 02 00
	00		 mov	 eax, DWORD PTR [edx+544]
  005fc	89 85 fc fe ff
	ff		 mov	 DWORD PTR _rc$6[ebp+8], eax
  00602	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _rc$6[ebp+12], 0
; Line 659
  0060c	51		 push	 ecx
  0060d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7d70a4
  00615	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061a	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _rc$6[ebp]
  00620	51		 push	 ecx
  00621	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00624	81 c2 88 02 00
	00		 add	 edx, 648		; 00000288H
  0062a	52		 push	 edx
  0062b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0062e	e8 00 00 00 00	 call	 ?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ; CDXUTDialog::DrawSprite
; Line 660
  00633	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _rc$6[ebp]
  00639	83 c0 05	 add	 eax, 5
  0063c	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _rc$6[ebp], eax
; Line 662
  00642	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00645	83 c1 18	 add	 ecx, 24			; 00000018H
  00648	8b f4		 mov	 esi, esp
  0064a	51		 push	 ecx
  0064b	68 00 01 00 00	 push	 256			; 00000100H
  00650	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _wszOutput$5[ebp]
  00656	52		 push	 edx
  00657	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0065d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00660	3b f4		 cmp	 esi, esp
  00662	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 663
  00667	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0066a	0f b6 48 16	 movzx	 ecx, BYTE PTR [eax+22]
  0066e	85 c9		 test	 ecx, ecx
  00670	74 23		 je	 SHORT $LN8@OnRender
; Line 664
  00672	8b f4		 mov	 esi, esp
  00674	68 00 00 00 00	 push	 OFFSET $SG160800
  00679	68 00 01 00 00	 push	 256			; 00000100H
  0067e	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _wszOutput$5[ebp]
  00684	52		 push	 edx
  00685	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscat_s
  0068b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0068e	3b f4		 cmp	 esi, esp
  00690	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN8@OnRender:
; Line 665
  00695	6a 00		 push	 0
  00697	6a 01		 push	 1
  00699	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _rc$6[ebp]
  0069f	50		 push	 eax
  006a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006a3	81 c1 88 02 00
	00		 add	 ecx, 648		; 00000288H
  006a9	51		 push	 ecx
  006aa	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR _wszOutput$5[ebp]
  006b0	52		 push	 edx
  006b1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006b4	e8 00 00 00 00	 call	 ?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ; CDXUTDialog::DrawTextW
$LN9@OnRender:
; Line 670
  006b9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006bc	0f b6 48 16	 movzx	 ecx, BYTE PTR [eax+22]
  006c0	85 c9		 test	 ecx, ecx
  006c2	0f 85 2b 01 00
	00		 jne	 $LN2@OnRender
; Line 672
  006c8	8d 95 d8 fc ff
	ff		 lea	 edx, DWORD PTR _it$4[ebp]
  006ce	52		 push	 edx
  006cf	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006d2	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  006d8	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
  006dd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  006e4	eb 0b		 jmp	 SHORT $LN6@OnRender
$LN5@OnRender:
  006e6	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _it$4[ebp]
  006ec	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN6@OnRender:
  006f1	8d 85 c4 fc ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  006f7	50		 push	 eax
  006f8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006fb	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00701	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
  00706	89 85 90 fc ff
	ff		 mov	 DWORD PTR tv361[ebp], eax
  0070c	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR tv361[ebp]
  00712	89 8d 8c fc ff
	ff		 mov	 DWORD PTR tv408[ebp], ecx
  00718	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0071c	8b 95 8c fc ff
	ff		 mov	 edx, DWORD PTR tv408[ebp]
  00722	52		 push	 edx
  00723	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _it$4[ebp]
  00729	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  0072e	88 85 d3 fc ff
	ff		 mov	 BYTE PTR $T3[ebp], al
  00734	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00738	8d 8d c4 fc ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0073e	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00743	0f b6 85 d3 fc
	ff ff		 movzx	 eax, BYTE PTR $T3[ebp]
  0074a	85 c0		 test	 eax, eax
  0074c	74 56		 je	 SHORT $LN4@OnRender
; Line 675
  0074e	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _it$4[ebp]
  00754	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  00759	8b 08		 mov	 ecx, DWORD PTR [eax]
  0075b	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00761	75 02		 jne	 SHORT $LN3@OnRender
; Line 676
  00763	eb 81		 jmp	 SHORT $LN5@OnRender
$LN3@OnRender:
; Line 678
  00765	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _it$4[ebp]
  0076b	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  00770	8b 10		 mov	 edx, DWORD PTR [eax]
  00772	89 95 88 fc ff
	ff		 mov	 DWORD PTR tv383[ebp], edx
  00778	8b f4		 mov	 esi, esp
  0077a	51		 push	 ecx
  0077b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00780	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00785	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR tv383[ebp]
  0078b	8b 10		 mov	 edx, DWORD PTR [eax]
  0078d	8b 8d 88 fc ff
	ff		 mov	 ecx, DWORD PTR tv383[ebp]
  00793	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00796	ff d0		 call	 eax
  00798	3b f4		 cmp	 esi, esp
  0079a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079f	e9 42 ff ff ff	 jmp	 $LN5@OnRender
$LN4@OnRender:
; Line 679
  007a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007ab	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _it$4[ebp]
  007b1	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 681
  007b6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  007bd	74 34		 je	 SHORT $LN2@OnRender
  007bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  007c5	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  007c8	3b 55 ec	 cmp	 edx, DWORD PTR _this$[ebp]
  007cb	75 26		 jne	 SHORT $LN2@OnRender
; Line 682
  007cd	8b f4		 mov	 esi, esp
  007cf	51		 push	 ecx
  007d0	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  007d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  007df	8b 10		 mov	 edx, DWORD PTR [eax]
  007e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  007e7	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  007ea	ff d0		 call	 eax
  007ec	3b f4		 cmp	 esi, esp
  007ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@OnRender:
; Line 686
  007f3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  007f6	0f b6 51 15	 movzx	 edx, BYTE PTR [ecx+21]
  007fa	85 d2		 test	 edx, edx
  007fc	74 26		 je	 SHORT $LN1@OnRender
; Line 688
  007fe	8b 45 e4	 mov	 eax, DWORD PTR _pd3dDeviceContext$[ebp]
  00801	50		 push	 eax
  00802	8b 4d e8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00805	51		 push	 ecx
  00806	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00809	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  0080f	e8 00 00 00 00	 call	 ?EndSprites11@CDXUTDialogResourceManager@@QAEXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::EndSprites11
; Line 689
  00814	8b 45 e4	 mov	 eax, DWORD PTR _pd3dDeviceContext$[ebp]
  00817	50		 push	 eax
  00818	8b 4d e8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0081b	51		 push	 ecx
  0081c	e8 00 00 00 00	 call	 ?EndText11@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ; EndText11
  00821	83 c4 08	 add	 esp, 8
$LN1@OnRender:
; Line 691
  00824	8b 55 e4	 mov	 edx, DWORD PTR _pd3dDeviceContext$[ebp]
  00827	52		 push	 edx
  00828	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0082b	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  00831	e8 00 00 00 00	 call	 ?RestoreD3D11State@CDXUTDialogResourceManager@@QAEXPAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::RestoreD3D11State
; Line 693
  00836	33 c0		 xor	 eax, eax
$LN15@OnRender:
; Line 694
  00838	52		 push	 edx
  00839	8b cd		 mov	 ecx, ebp
  0083b	50		 push	 eax
  0083c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN30@OnRender
  00842	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00847	58		 pop	 eax
  00848	5a		 pop	 edx
  00849	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0084c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00853	59		 pop	 ecx
  00854	5f		 pop	 edi
  00855	5e		 pop	 esi
  00856	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00859	33 cd		 xor	 ecx, ebp
  0085b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00860	81 c4 78 03 00
	00		 add	 esp, 888		; 00000378H
  00866	3b ec		 cmp	 ebp, esp
  00868	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0086d	8b e5		 mov	 esp, ebp
  0086f	5d		 pop	 ebp
  00870	c2 04 00	 ret	 4
  00873	90		 npad	 1
$LN30@OnRender:
  00874	07 00 00 00	 DD	 7
  00878	00 00 00 00	 DD	 $LN29@OnRender
$LN29@OnRender:
  0087c	3c ff ff ff	 DD	 -196			; ffffff3cH
  00880	90 00 00 00	 DD	 144			; 00000090H
  00884	00 00 00 00	 DD	 $LN21@OnRender
  00888	28 ff ff ff	 DD	 -216			; ffffff28H
  0088c	0c 00 00 00	 DD	 12			; 0000000cH
  00890	00 00 00 00	 DD	 $LN22@OnRender
  00894	1c ff ff ff	 DD	 -228			; ffffff1cH
  00898	04 00 00 00	 DD	 4
  0089c	00 00 00 00	 DD	 $LN23@OnRender
  008a0	10 ff ff ff	 DD	 -240			; ffffff10H
  008a4	04 00 00 00	 DD	 4
  008a8	00 00 00 00	 DD	 $LN24@OnRender
  008ac	f4 fe ff ff	 DD	 -268			; fffffef4H
  008b0	10 00 00 00	 DD	 16			; 00000010H
  008b4	00 00 00 00	 DD	 $LN25@OnRender
  008b8	ec fc ff ff	 DD	 -788			; fffffcecH
  008bc	00 02 00 00	 DD	 512			; 00000200H
  008c0	00 00 00 00	 DD	 $LN26@OnRender
  008c4	d8 fc ff ff	 DD	 -808			; fffffcd8H
  008c8	0c 00 00 00	 DD	 12			; 0000000cH
  008cc	00 00 00 00	 DD	 $LN27@OnRender
$LN27@OnRender:
  008d0	69		 DB	 105			; 00000069H
  008d1	74		 DB	 116			; 00000074H
  008d2	00		 DB	 0
$LN26@OnRender:
  008d3	77		 DB	 119			; 00000077H
  008d4	73		 DB	 115			; 00000073H
  008d5	7a		 DB	 122			; 0000007aH
  008d6	4f		 DB	 79			; 0000004fH
  008d7	75		 DB	 117			; 00000075H
  008d8	74		 DB	 116			; 00000074H
  008d9	70		 DB	 112			; 00000070H
  008da	75		 DB	 117			; 00000075H
  008db	74		 DB	 116			; 00000074H
  008dc	00		 DB	 0
$LN25@OnRender:
  008dd	72		 DB	 114			; 00000072H
  008de	63		 DB	 99			; 00000063H
  008df	00		 DB	 0
$LN24@OnRender:
  008e0	6f		 DB	 111			; 0000006fH
  008e1	66		 DB	 102			; 00000066H
  008e2	66		 DB	 102			; 00000066H
  008e3	73		 DB	 115			; 00000073H
  008e4	65		 DB	 101			; 00000065H
  008e5	74		 DB	 116			; 00000074H
  008e6	00		 DB	 0
$LN23@OnRender:
  008e7	73		 DB	 115			; 00000073H
  008e8	74		 DB	 116			; 00000074H
  008e9	72		 DB	 114			; 00000072H
  008ea	69		 DB	 105			; 00000069H
  008eb	64		 DB	 100			; 00000064H
  008ec	65		 DB	 101			; 00000065H
  008ed	00		 DB	 0
$LN22@OnRender:
  008ee	4d		 DB	 77			; 0000004dH
  008ef	61		 DB	 97			; 00000061H
  008f0	70		 DB	 112			; 00000070H
  008f1	70		 DB	 112			; 00000070H
  008f2	65		 DB	 101			; 00000065H
  008f3	64		 DB	 100			; 00000064H
  008f4	44		 DB	 68			; 00000044H
  008f5	61		 DB	 97			; 00000061H
  008f6	74		 DB	 116			; 00000074H
  008f7	61		 DB	 97			; 00000061H
  008f8	00		 DB	 0
$LN21@OnRender:
  008f9	76		 DB	 118			; 00000076H
  008fa	65		 DB	 101			; 00000065H
  008fb	72		 DB	 114			; 00000072H
  008fc	74		 DB	 116			; 00000074H
  008fd	69		 DB	 105			; 00000069H
  008fe	63		 DB	 99			; 00000063H
  008ff	65		 DB	 101			; 00000065H
  00900	73		 DB	 115			; 00000073H
  00901	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnRender@CDXUTDialog@@QAEJM@Z$0:
  00000	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _it$4[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?OnRender@CDXUTDialog@@QAEJM@Z$1:
  0000b	8d 8d c4 fc ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?OnRender@CDXUTDialog@@QAEJM@Z:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 8a 88 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-888]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnRender@CDXUTDialog@@QAEJM@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnRender@CDXUTDialog@@QAEJM@Z ENDP			; CDXUTDialog::OnRender
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv139 = -64						; size = 4
tv148 = -60						; size = 4
tv80 = -56						; size = 4
$T2 = -52						; size = 12
$T3 = -37						; size = 1
_it$4 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Refresh@CDXUTDialog@@QAEXXZ PROC			; CDXUTDialog::Refresh
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 557
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Refresh@CDXUTDialog@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  0001a	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 558
  0003b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00042	74 1b		 je	 SHORT $LN6@Refresh
; Line 559
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00049	8b 10		 mov	 edx, DWORD PTR [eax]
  0004b	8b f4		 mov	 esi, esp
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00053	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00056	ff d0		 call	 eax
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@Refresh:
; Line 561
  0005f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	83 79 10 00	 cmp	 DWORD PTR [ecx+16], 0
  00066	74 1c		 je	 SHORT $LN5@Refresh
; Line 562
  00068	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 10		 mov	 edx, DWORD PTR [eax]
  00073	8b f4		 mov	 esi, esp
  00075	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00078	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0007b	ff d0		 call	 eax
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@Refresh:
; Line 564
  00084	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
; Line 565
  0008e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlPressed
; Line 566
  00098	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
; Line 568
  000a2	8d 55 e0	 lea	 edx, DWORD PTR _it$4[ebp]
  000a5	52		 push	 edx
  000a6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  000af	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
  000b4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000bb	eb 08		 jmp	 SHORT $LN4@Refresh
$LN3@Refresh:
  000bd	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000c0	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN4@Refresh:
  000c5	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  000d2	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
  000d7	89 45 c8	 mov	 DWORD PTR tv80[ebp], eax
  000da	8b 4d c8	 mov	 ecx, DWORD PTR tv80[ebp]
  000dd	89 4d c4	 mov	 DWORD PTR tv148[ebp], ecx
  000e0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000e4	8b 55 c4	 mov	 edx, DWORD PTR tv148[ebp]
  000e7	52		 push	 edx
  000e8	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  000eb	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  000f0	88 45 db	 mov	 BYTE PTR $T3[ebp], al
  000f3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000f7	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  000fa	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  000ff	0f b6 45 db	 movzx	 eax, BYTE PTR $T3[ebp]
  00103	85 c0		 test	 eax, eax
  00105	74 25		 je	 SHORT $LN2@Refresh
; Line 570
  00107	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  0010a	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  0010f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00111	89 4d c0	 mov	 DWORD PTR tv139[ebp], ecx
  00114	8b 55 c0	 mov	 edx, DWORD PTR tv139[ebp]
  00117	8b 02		 mov	 eax, DWORD PTR [edx]
  00119	8b f4		 mov	 esi, esp
  0011b	8b 4d c0	 mov	 ecx, DWORD PTR tv139[ebp]
  0011e	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00121	ff d2		 call	 edx
  00123	3b f4		 cmp	 esi, esp
  00125	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012a	eb 91		 jmp	 SHORT $LN3@Refresh
$LN2@Refresh:
; Line 571
  0012c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00133	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00136	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 573
  0013b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0013e	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00142	85 c9		 test	 ecx, ecx
  00144	74 08		 je	 SHORT $LN7@Refresh
; Line 574
  00146	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?FocusDefaultControl@CDXUTDialog@@QAEXXZ ; CDXUTDialog::FocusDefaultControl
$LN7@Refresh:
; Line 575
  0014e	52		 push	 edx
  0014f	8b cd		 mov	 ecx, ebp
  00151	50		 push	 eax
  00152	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@Refresh
  00158	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0015d	58		 pop	 eax
  0015e	5a		 pop	 edx
  0015f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00162	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00169	59		 pop	 ecx
  0016a	5f		 pop	 edi
  0016b	5e		 pop	 esi
  0016c	83 c4 40	 add	 esp, 64			; 00000040H
  0016f	3b ec		 cmp	 ebp, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c3		 ret	 0
  0017a	8b ff		 npad	 2
$LN14@Refresh:
  0017c	01 00 00 00	 DD	 1
  00180	00 00 00 00	 DD	 $LN13@Refresh
$LN13@Refresh:
  00184	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00188	0c 00 00 00	 DD	 12			; 0000000cH
  0018c	00 00 00 00	 DD	 $LN11@Refresh
$LN11@Refresh:
  00190	69		 DB	 105			; 00000069H
  00191	74		 DB	 116			; 00000074H
  00192	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Refresh@CDXUTDialog@@QAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Refresh@CDXUTDialog@@QAEXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Refresh@CDXUTDialog@@QAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Refresh@CDXUTDialog@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Refresh@CDXUTDialog@@QAEXXZ ENDP			; CDXUTDialog::Refresh
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ PROC	; CDXUTDialog::IsKeyboardInputEnabled, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 275
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 40 01	 mov	 al, BYTE PTR [eax+1]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?IsKeyboardInputEnabled@CDXUTDialog@@QBE_NXZ ENDP	; CDXUTDialog::IsKeyboardInputEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?EnableKeyboardInput@CDXUTDialog@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bEnable$ = 8						; size = 1
?EnableKeyboardInput@CDXUTDialog@@QAEX_N@Z PROC		; CDXUTDialog::EnableKeyboardInput, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 273
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 4d 08	 mov	 cl, BYTE PTR _bEnable$[ebp]
  00014	88 48 01	 mov	 BYTE PTR [eax+1], cl
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?EnableKeyboardInput@CDXUTDialog@@QAEX_N@Z ENDP		; CDXUTDialog::EnableKeyboardInput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCallback$ = 8						; size = 4
_pUserContext$ = 12					; size = 4
?SetCallback@CDXUTDialog@@QAEXP6GXIHPAVCDXUTControl@@PAX@Z1@Z PROC ; CDXUTDialog::SetCallback
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 498
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 503
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 b8 3c 02 00
	00 00		 cmp	 DWORD PTR [eax+572], 0
  00019	74 09		 je	 SHORT $LN3@SetCallbac
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET $SG160557
  00020	85 c9		 test	 ecx, ecx
  00022	75 21		 jne	 SHORT $LN4@SetCallbac
$LN3@SetCallbac:
  00024	8b f4		 mov	 esi, esp
  00026	68 f7 01 00 00	 push	 503			; 000001f7H
  0002b	68 00 00 00 00	 push	 OFFSET $SG160558
  00030	68 00 00 00 00	 push	 OFFSET $SG160559
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@SetCallbac:
; Line 505
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _pCallback$[ebp]
  0004b	89 88 40 02 00
	00		 mov	 DWORD PTR [eax+576], ecx
; Line 506
  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	8b 45 0c	 mov	 eax, DWORD PTR _pUserContext$[ebp]
  00057	89 82 44 02 00
	00		 mov	 DWORD PTR [edx+580], eax
; Line 507
  0005d	5e		 pop	 esi
  0005e	83 c4 04	 add	 esp, 4
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
?SetCallback@CDXUTDialog@@QAEXP6GXIHPAVCDXUTControl@@PAX@Z1@Z ENDP ; CDXUTDialog::SetCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv139 = -72						; size = 4
tv146 = -68						; size = 4
tv73 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 4
$T4 = -52						; size = 12
$T5 = -37						; size = 1
_it$6 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RemoveAllControls@CDXUTDialog@@QAEXXZ PROC		; CDXUTDialog::RemoveAllControls
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 539
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveAllControls@CDXUTDialog@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d b8	 lea	 edi, DWORD PTR [ebp-72]
  0001a	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 540
  0003b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00042	74 17		 je	 SHORT $LN6@RemoveAllC
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00049	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0004c	3b 4d f0	 cmp	 ecx, DWORD PTR _this$[ebp]
  0004f	75 0a		 jne	 SHORT $LN6@RemoveAllC
; Line 541
  00051	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
$LN6@RemoveAllC:
; Line 542
  0005b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlPressed
  00062	74 18		 je	 SHORT $LN5@RemoveAllC
  00064	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlPressed
  0006a	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0006d	3b 45 f0	 cmp	 eax, DWORD PTR _this$[ebp]
  00070	75 0a		 jne	 SHORT $LN5@RemoveAllC
; Line 543
  00072	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlPressed
$LN5@RemoveAllC:
; Line 544
  0007c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
; Line 546
  00086	8d 55 e0	 lea	 edx, DWORD PTR _it$6[ebp]
  00089	52		 push	 edx
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00093	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
  00098	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0009f	eb 08		 jmp	 SHORT $LN4@RemoveAllC
$LN3@RemoveAllC:
  000a1	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000a4	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN4@RemoveAllC:
  000a9	8d 45 cc	 lea	 eax, DWORD PTR $T4[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  000b6	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
  000bb	89 45 c0	 mov	 DWORD PTR tv73[ebp], eax
  000be	8b 4d c0	 mov	 ecx, DWORD PTR tv73[ebp]
  000c1	89 4d bc	 mov	 DWORD PTR tv146[ebp], ecx
  000c4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000c8	8b 55 bc	 mov	 edx, DWORD PTR tv146[ebp]
  000cb	52		 push	 edx
  000cc	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000cf	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  000d4	88 45 db	 mov	 BYTE PTR $T5[ebp], al
  000d7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000db	8d 4d cc	 lea	 ecx, DWORD PTR $T4[ebp]
  000de	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  000e3	0f b6 45 db	 movzx	 eax, BYTE PTR $T5[ebp]
  000e7	85 c0		 test	 eax, eax
  000e9	74 5c		 je	 SHORT $LN2@RemoveAllC
; Line 548
  000eb	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000ee	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000f3	83 38 00	 cmp	 DWORD PTR [eax], 0
  000f6	74 4a		 je	 SHORT $LN1@RemoveAllC
  000f8	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  000fb	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  00100	8b 08		 mov	 ecx, DWORD PTR [eax]
  00102	89 4d c4	 mov	 DWORD PTR $T2[ebp], ecx
  00105	8b 55 c4	 mov	 edx, DWORD PTR $T2[ebp]
  00108	89 55 c8	 mov	 DWORD PTR $T3[ebp], edx
  0010b	83 7d c8 00	 cmp	 DWORD PTR $T3[ebp], 0
  0010f	74 1c		 je	 SHORT $LN9@RemoveAllC
  00111	8b f4		 mov	 esi, esp
  00113	6a 01		 push	 1
  00115	8b 45 c8	 mov	 eax, DWORD PTR $T3[ebp]
  00118	8b 10		 mov	 edx, DWORD PTR [eax]
  0011a	8b 4d c8	 mov	 ecx, DWORD PTR $T3[ebp]
  0011d	8b 02		 mov	 eax, DWORD PTR [edx]
  0011f	ff d0		 call	 eax
  00121	3b f4		 cmp	 esi, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	89 45 b8	 mov	 DWORD PTR tv139[ebp], eax
  0012b	eb 07		 jmp	 SHORT $LN10@RemoveAllC
$LN9@RemoveAllC:
  0012d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN10@RemoveAllC:
  00134	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00137	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  0013c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@RemoveAllC:
  00142	e9 5a ff ff ff	 jmp	 $LN3@RemoveAllC
$LN2@RemoveAllC:
; Line 549
  00147	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014e	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00151	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 551
  00156	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00159	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0015f	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::clear
; Line 552
  00164	52		 push	 edx
  00165	8b cd		 mov	 ecx, ebp
  00167	50		 push	 eax
  00168	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@RemoveAllC
  0016e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00173	58		 pop	 eax
  00174	5a		 pop	 edx
  00175	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00178	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017f	59		 pop	 ecx
  00180	5f		 pop	 edi
  00181	5e		 pop	 esi
  00182	83 c4 48	 add	 esp, 72			; 00000048H
  00185	3b ec		 cmp	 ebp, esp
  00187	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c3		 ret	 0
$LN16@RemoveAllC:
  00190	01 00 00 00	 DD	 1
  00194	00 00 00 00	 DD	 $LN15@RemoveAllC
$LN15@RemoveAllC:
  00198	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0019c	0c 00 00 00	 DD	 12			; 0000000cH
  001a0	00 00 00 00	 DD	 $LN13@RemoveAllC
$LN13@RemoveAllC:
  001a4	69		 DB	 105			; 00000069H
  001a5	74		 DB	 116			; 00000074H
  001a6	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveAllControls@CDXUTDialog@@QAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveAllControls@CDXUTDialog@@QAEXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveAllControls@CDXUTDialog@@QAEXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveAllControls@CDXUTDialog@@QAEXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveAllControls@CDXUTDialog@@QAEXXZ ENDP		; CDXUTDialog::RemoveAllControls
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv179 = -96						; size = 4
tv178 = -92						; size = 4
tv148 = -88						; size = 4
tv176 = -84						; size = 4
tv66 = -80						; size = 4
$T2 = -76						; size = 12
$T3 = -64						; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 4
$T6 = -52						; size = 12
$T7 = -37						; size = 1
_it$8 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
?RemoveControl@CDXUTDialog@@QAEXH@Z PROC		; CDXUTDialog::RemoveControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 512
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveControl@CDXUTDialog@@QAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d a0	 lea	 edi, DWORD PTR [ebp-96]
  0001a	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 513
  0003b	8d 45 e0	 lea	 eax, DWORD PTR _it$8[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00048	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00054	eb 08		 jmp	 SHORT $LN8@RemoveCont
$LN7@RemoveCont:
  00056	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  00059	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN8@RemoveCont:
  0005e	8d 4d cc	 lea	 ecx, DWORD PTR $T6[ebp]
  00061	51		 push	 ecx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0006b	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
  00070	89 45 b0	 mov	 DWORD PTR tv66[ebp], eax
  00073	8b 55 b0	 mov	 edx, DWORD PTR tv66[ebp]
  00076	89 55 ac	 mov	 DWORD PTR tv176[ebp], edx
  00079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007d	8b 45 ac	 mov	 eax, DWORD PTR tv176[ebp]
  00080	50		 push	 eax
  00081	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  00084	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00089	88 45 db	 mov	 BYTE PTR $T7[ebp], al
  0008c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00090	8d 4d cc	 lea	 ecx, DWORD PTR $T6[ebp]
  00093	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00098	0f b6 4d db	 movzx	 ecx, BYTE PTR $T7[ebp]
  0009c	85 c9		 test	 ecx, ecx
  0009e	0f 84 0f 01 00
	00		 je	 $LN6@RemoveCont
; Line 515
  000a4	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  000a7	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ae	e8 00 00 00 00	 call	 ?GetID@CDXUTControl@@QBEHXZ ; CDXUTControl::GetID
  000b3	3b 45 08	 cmp	 eax, DWORD PTR _ID$[ebp]
  000b6	0f 85 f2 00 00
	00		 jne	 $LN5@RemoveCont
; Line 518
  000bc	e8 00 00 00 00	 call	 ?ClearFocus@CDXUTDialog@@SGXXZ ; CDXUTDialog::ClearFocus
; Line 521
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  000c4	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  000cf	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d1	75 0a		 jne	 SHORT $LN4@RemoveCont
; Line 522
  000d3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
$LN4@RemoveCont:
; Line 523
  000dd	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  000e0	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlPressed
  000eb	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000ed	75 0a		 jne	 SHORT $LN3@RemoveCont
; Line 524
  000ef	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlPressed@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlPressed
$LN3@RemoveCont:
; Line 525
  000f9	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  000fc	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  00101	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00107	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00109	75 0a		 jne	 SHORT $LN2@RemoveCont
; Line 526
  0010b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0010e	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0
$LN2@RemoveCont:
; Line 528
  00115	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  00118	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  0011d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00120	74 4a		 je	 SHORT $LN1@RemoveCont
  00122	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  00125	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  0012a	8b 00		 mov	 eax, DWORD PTR [eax]
  0012c	89 45 c4	 mov	 DWORD PTR $T4[ebp], eax
  0012f	8b 4d c4	 mov	 ecx, DWORD PTR $T4[ebp]
  00132	89 4d c8	 mov	 DWORD PTR $T5[ebp], ecx
  00135	83 7d c8 00	 cmp	 DWORD PTR $T5[ebp], 0
  00139	74 1c		 je	 SHORT $LN11@RemoveCont
  0013b	8b f4		 mov	 esi, esp
  0013d	6a 01		 push	 1
  0013f	8b 55 c8	 mov	 edx, DWORD PTR $T5[ebp]
  00142	8b 02		 mov	 eax, DWORD PTR [edx]
  00144	8b 4d c8	 mov	 ecx, DWORD PTR $T5[ebp]
  00147	8b 10		 mov	 edx, DWORD PTR [eax]
  00149	ff d2		 call	 edx
  0014b	3b f4		 cmp	 esi, esp
  0014d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00152	89 45 a8	 mov	 DWORD PTR tv148[ebp], eax
  00155	eb 07		 jmp	 SHORT $LN12@RemoveCont
$LN11@RemoveCont:
  00157	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN12@RemoveCont:
  0015e	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  00161	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  00166	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@RemoveCont:
; Line 529
  0016c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0016f	8b cc		 mov	 ecx, esp
  00171	89 65 c0	 mov	 DWORD PTR $T3[ebp], esp
  00174	8d 45 e0	 lea	 eax, DWORD PTR _it$8[ebp]
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@ABV01@@Z
  0017d	89 45 a4	 mov	 DWORD PTR tv178[ebp], eax
  00180	8d 4d b4	 lea	 ecx, DWORD PTR $T2[ebp]
  00183	51		 push	 ecx
  00184	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0018d	e8 00 00 00 00	 call	 ?erase@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::erase
  00192	89 45 a0	 mov	 DWORD PTR tv179[ebp], eax
  00195	8d 4d b4	 lea	 ecx, DWORD PTR $T2[ebp]
  00198	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 531
  0019d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a4	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  001a7	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  001ac	eb 14		 jmp	 SHORT $LN9@RemoveCont
$LN5@RemoveCont:
; Line 532
  001ae	e9 a3 fe ff ff	 jmp	 $LN7@RemoveCont
$LN6@RemoveCont:
; Line 533
  001b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001ba	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  001bd	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
$LN9@RemoveCont:
; Line 534
  001c2	52		 push	 edx
  001c3	8b cd		 mov	 ecx, ebp
  001c5	50		 push	 eax
  001c6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN20@RemoveCont
  001cc	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001d1	58		 pop	 eax
  001d2	5a		 pop	 edx
  001d3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001d6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001dd	59		 pop	 ecx
  001de	5f		 pop	 edi
  001df	5e		 pop	 esi
  001e0	83 c4 60	 add	 esp, 96			; 00000060H
  001e3	3b ec		 cmp	 ebp, esp
  001e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ea	8b e5		 mov	 esp, ebp
  001ec	5d		 pop	 ebp
  001ed	c2 04 00	 ret	 4
$LN20@RemoveCont:
  001f0	01 00 00 00	 DD	 1
  001f4	00 00 00 00	 DD	 $LN19@RemoveCont
$LN19@RemoveCont:
  001f8	e0 ff ff ff	 DD	 -32			; ffffffe0H
  001fc	0c 00 00 00	 DD	 12			; 0000000cH
  00200	00 00 00 00	 DD	 $LN17@RemoveCont
$LN17@RemoveCont:
  00204	69		 DB	 105			; 00000069H
  00205	74		 DB	 116			; 00000074H
  00206	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveControl@CDXUTDialog@@QAEXH@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$8[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveControl@CDXUTDialog@@QAEXH@Z$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveControl@CDXUTDialog@@QAEXH@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveControl@CDXUTDialog@@QAEXH@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveControl@CDXUTDialog@@QAEXH@Z ENDP		; CDXUTDialog::RemoveControl
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDialog$ = -8						; size = 4
_index$ = -4						; size = 4
_pControl$ = 8						; size = 4
?GetPrevControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z PROC ; CDXUTDialog::GetPrevControl
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1535
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1536
  00014	8b 45 08	 mov	 eax, DWORD PTR _pControl$[ebp]
  00017	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001a	83 e9 01	 sub	 ecx, 1
  0001d	89 4d fc	 mov	 DWORD PTR _index$[ebp], ecx
; Line 1538
  00020	8b 55 08	 mov	 edx, DWORD PTR _pControl$[ebp]
  00023	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00026	89 45 f8	 mov	 DWORD PTR _pDialog$[ebp], eax
$LN3@GetPrevCon:
; Line 1543
  00029	83 7d fc 00	 cmp	 DWORD PTR _index$[ebp], 0
  0002d	7d 31		 jge	 SHORT $LN2@GetPrevCon
; Line 1545
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00032	8b 91 f8 02 00
	00		 mov	 edx, DWORD PTR [ecx+760]
  00038	89 55 f8	 mov	 DWORD PTR _pDialog$[ebp], edx
; Line 1546
  0003b	83 7d f8 00	 cmp	 DWORD PTR _pDialog$[ebp], 0
  0003f	75 09		 jne	 SHORT $LN1@GetPrevCon
; Line 1547
  00041	8b 45 08	 mov	 eax, DWORD PTR _pControl$[ebp]
  00044	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00047	89 4d f8	 mov	 DWORD PTR _pDialog$[ebp], ecx
$LN1@GetPrevCon:
; Line 1549
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0004d	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00053	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  00058	83 e8 01	 sub	 eax, 1
  0005b	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax
; Line 1550
  0005e	eb c9		 jmp	 SHORT $LN3@GetPrevCon
$LN2@GetPrevCon:
; Line 1552
  00060	8b 55 fc	 mov	 edx, DWORD PTR _index$[ebp]
  00063	52		 push	 edx
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00067	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0006d	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::operator[]
  00072	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1553
  00074	83 c4 08	 add	 esp, 8
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?GetPrevControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ENDP ; CDXUTDialog::GetPrevControl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDialog$ = -8						; size = 4
_index$ = -4						; size = 4
_pControl$ = 8						; size = 4
?GetNextControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z PROC ; CDXUTDialog::GetNextControl
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1515
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1516
  00014	8b 45 08	 mov	 eax, DWORD PTR _pControl$[ebp]
  00017	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001a	83 c1 01	 add	 ecx, 1
  0001d	89 4d fc	 mov	 DWORD PTR _index$[ebp], ecx
; Line 1518
  00020	8b 55 08	 mov	 edx, DWORD PTR _pControl$[ebp]
  00023	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00026	89 45 f8	 mov	 DWORD PTR _pDialog$[ebp], eax
$LN2@GetNextCon:
; Line 1523
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0002c	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00032	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  00037	39 45 fc	 cmp	 DWORD PTR _index$[ebp], eax
  0003a	7c 15		 jl	 SHORT $LN1@GetNextCon
; Line 1525
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  0003f	8b 91 f4 02 00
	00		 mov	 edx, DWORD PTR [ecx+756]
  00045	89 55 f8	 mov	 DWORD PTR _pDialog$[ebp], edx
; Line 1526
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
; Line 1527
  0004f	eb d8		 jmp	 SHORT $LN2@GetNextCon
$LN1@GetNextCon:
; Line 1529
  00051	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _pDialog$[ebp]
  00058	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0005e	e8 00 00 00 00	 call	 ??A?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEAAPAVCDXUTControl@@I@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::operator[]
  00063	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1530
  00065	83 c4 08	 add	 esp, 8
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
?GetNextControl@CDXUTDialog@@SGPAVCDXUTControl@@PAV2@@Z ENDP ; CDXUTDialog::GetNextControl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_colorTopLeft$ = 8					; size = 4
_colorTopRight$ = 12					; size = 4
_colorBottomLeft$ = 16					; size = 4
_colorBottomRight$ = 20					; size = 4
?SetBackgroundColors@CDXUTDialog@@QAEXKKKK@Z PROC	; CDXUTDialog::SetBackgroundColors
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1759
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1760
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _colorTopLeft$[ebp]
  00014	89 88 2c 02 00
	00		 mov	 DWORD PTR [eax+556], ecx
; Line 1761
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	8b 45 0c	 mov	 eax, DWORD PTR _colorTopRight$[ebp]
  00020	89 82 30 02 00
	00		 mov	 DWORD PTR [edx+560], eax
; Line 1762
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 55 10	 mov	 edx, DWORD PTR _colorBottomLeft$[ebp]
  0002c	89 91 34 02 00
	00		 mov	 DWORD PTR [ecx+564], edx
; Line 1763
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 4d 14	 mov	 ecx, DWORD PTR _colorBottomRight$[ebp]
  00038	89 88 38 02 00
	00		 mov	 DWORD PTR [eax+568], ecx
; Line 1764
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 10 00	 ret	 16			; 00000010H
?SetBackgroundColors@CDXUTDialog@@QAEXKKKK@Z ENDP	; CDXUTDialog::SetBackgroundColors
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv211 = -144						; size = 8
tv207 = -136						; size = 4
tv201 = -132						; size = 8
tv197 = -124						; size = 4
_vFontColor$ = -116					; size = 16
_vShadowColor$1 = -92					; size = 16
_rcShadow$2 = -68					; size = 16
_pd3d11DeviceContext$ = -48				; size = 4
_pd3dDevice$ = -44					; size = 4
_fBBHeight$ = -40					; size = 4
_fBBWidth$ = -36					; size = 4
_rcScreen$ = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_strText$ = 8						; size = 4
_pElement$ = 12						; size = 4
_prcDest$ = 16						; size = 4
_bShadow$ = 20						; size = 1
_bCenter$ = 24						; size = 1
?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z PROC ; CDXUTDialog::DrawTextW
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1716
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 70 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-144]
  00012	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1718
  0002c	8b 45 0c	 mov	 eax, DWORD PTR _pElement$[ebp]
  0002f	f3 0f 10 40 68	 movss	 xmm0, DWORD PTR [eax+104]
  00034	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0003b	9f		 lahf
  0003c	f6 c4 44	 test	 ah, 68			; 00000044H
  0003f	7a 07		 jp	 SHORT $LN3@DrawTextW
; Line 1719
  00041	33 c0		 xor	 eax, eax
  00043	e9 61 02 00 00	 jmp	 $LN4@DrawTextW
$LN3@DrawTextW:
; Line 1721
  00048	8b 4d 10	 mov	 ecx, DWORD PTR _prcDest$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	89 55 e4	 mov	 DWORD PTR _rcScreen$[ebp], edx
  00050	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00053	89 45 e8	 mov	 DWORD PTR _rcScreen$[ebp+4], eax
  00056	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00059	89 55 ec	 mov	 DWORD PTR _rcScreen$[ebp+8], edx
  0005c	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0005f	89 45 f0	 mov	 DWORD PTR _rcScreen$[ebp+12], eax
; Line 1722
  00062	8b f4		 mov	 esi, esp
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 91 1c 02 00
	00		 mov	 edx, DWORD PTR [ecx+540]
  0006d	52		 push	 edx
  0006e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b 88 18 02 00
	00		 mov	 ecx, DWORD PTR [eax+536]
  00077	51		 push	 ecx
  00078	8d 55 e4	 lea	 edx, DWORD PTR _rcScreen$[ebp]
  0007b	52		 push	 edx
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1725
  00089	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	0f b6 48 15	 movzx	 ecx, BYTE PTR [eax+21]
  00090	85 c9		 test	 ecx, ecx
  00092	74 1f		 je	 SHORT $LN2@DrawTextW
; Line 1726
  00094	8b f4		 mov	 esi, esp
  00096	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00099	8b 82 28 02 00
	00		 mov	 eax, DWORD PTR [edx+552]
  0009f	50		 push	 eax
  000a0	6a 00		 push	 0
  000a2	8d 4d e4	 lea	 ecx, DWORD PTR _rcScreen$[ebp]
  000a5	51		 push	 ecx
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  000ac	3b f4		 cmp	 esi, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DrawTextW:
; Line 1728
  000b3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b6	8b 82 3c 02 00
	00		 mov	 eax, DWORD PTR [edx+572]
  000bc	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  000bf	89 4d 84	 mov	 DWORD PTR tv197[ebp], ecx
  000c2	f2 0f 2a 45 84	 cvtsi2sd xmm0, DWORD PTR tv197[ebp]
  000c7	8b 55 84	 mov	 edx, DWORD PTR tv197[ebp]
  000ca	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  000cd	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  000d6	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv201[ebp], xmm0
  000de	f2 0f 5a 85 7c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv201[ebp]
  000e6	f3 0f 11 45 dc	 movss	 DWORD PTR _fBBWidth$[ebp], xmm0
; Line 1729
  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  000f4	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  000f7	89 95 78 ff ff
	ff		 mov	 DWORD PTR tv207[ebp], edx
  000fd	f2 0f 2a 85 78
	ff ff ff	 cvtsi2sd xmm0, DWORD PTR tv207[ebp]
  00105	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv207[ebp]
  0010b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0010e	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00117	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv211[ebp], xmm0
  0011f	f2 0f 5a 85 70
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv211[ebp]
  00127	f3 0f 11 45 d8	 movss	 DWORD PTR _fBBHeight$[ebp], xmm0
; Line 1731
  0012c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012f	8b 89 3c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+572]
  00135	e8 00 00 00 00	 call	 ?GetD3D11Device@CDXUTDialogResourceManager@@QBEPAUID3D11Device@@XZ ; CDXUTDialogResourceManager::GetD3D11Device
  0013a	89 45 d4	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 1732
  0013d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00140	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  00146	e8 00 00 00 00	 call	 ?GetD3D11DeviceContext@CDXUTDialogResourceManager@@QBEPAUID3D11DeviceContext@@XZ ; CDXUTDialogResourceManager::GetD3D11DeviceContext
  0014b	89 45 d0	 mov	 DWORD PTR _pd3d11DeviceContext$[ebp], eax
; Line 1734
  0014e	0f b6 45 14	 movzx	 eax, BYTE PTR _bShadow$[ebp]
  00152	85 c0		 test	 eax, eax
  00154	0f 84 be 00 00
	00		 je	 $LN1@DrawTextW
; Line 1736
  0015a	8b 4d e4	 mov	 ecx, DWORD PTR _rcScreen$[ebp]
  0015d	89 4d bc	 mov	 DWORD PTR _rcShadow$2[ebp], ecx
  00160	8b 55 e8	 mov	 edx, DWORD PTR _rcScreen$[ebp+4]
  00163	89 55 c0	 mov	 DWORD PTR _rcShadow$2[ebp+4], edx
  00166	8b 45 ec	 mov	 eax, DWORD PTR _rcScreen$[ebp+8]
  00169	89 45 c4	 mov	 DWORD PTR _rcShadow$2[ebp+8], eax
  0016c	8b 4d f0	 mov	 ecx, DWORD PTR _rcScreen$[ebp+12]
  0016f	89 4d c8	 mov	 DWORD PTR _rcShadow$2[ebp+12], ecx
; Line 1737
  00172	8b f4		 mov	 esi, esp
  00174	6a 01		 push	 1
  00176	6a 01		 push	 1
  00178	8d 55 bc	 lea	 edx, DWORD PTR _rcShadow$2[ebp]
  0017b	52		 push	 edx
  0017c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00182	3b f4		 cmp	 esi, esp
  00184	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1739
  00189	51		 push	 ecx
  0018a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00192	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00197	51		 push	 ecx
  00198	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  001a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a5	51		 push	 ecx
  001a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  001ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b3	51		 push	 ecx
  001b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  001bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c1	8d 4d a4	 lea	 ecx, DWORD PTR _vShadowColor$1[ebp]
  001c4	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@MMMM@Z ; DirectX::XMFLOAT4::XMFLOAT4
; Line 1742
  001c9	0f b6 45 18	 movzx	 eax, BYTE PTR _bCenter$[ebp]
  001cd	50		 push	 eax
  001ce	51		 push	 ecx
  001cf	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _fBBHeight$[ebp]
  001d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d9	51		 push	 ecx
  001da	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _fBBWidth$[ebp]
  001df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e4	83 ec 10	 sub	 esp, 16			; 00000010H
  001e7	8b cc		 mov	 ecx, esp
  001e9	8b 55 a4	 mov	 edx, DWORD PTR _vShadowColor$1[ebp]
  001ec	89 11		 mov	 DWORD PTR [ecx], edx
  001ee	8b 45 a8	 mov	 eax, DWORD PTR _vShadowColor$1[ebp+4]
  001f1	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  001f4	8b 55 ac	 mov	 edx, DWORD PTR _vShadowColor$1[ebp+8]
  001f7	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  001fa	8b 45 b0	 mov	 eax, DWORD PTR _vShadowColor$1[ebp+12]
  001fd	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00200	8d 4d bc	 lea	 ecx, DWORD PTR _rcShadow$2[ebp]
  00203	51		 push	 ecx
  00204	8b 55 08	 mov	 edx, DWORD PTR _strText$[ebp]
  00207	52		 push	 edx
  00208	8b 45 d0	 mov	 eax, DWORD PTR _pd3d11DeviceContext$[ebp]
  0020b	50		 push	 eax
  0020c	8b 4d d4	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0020f	51		 push	 ecx
  00210	e8 00 00 00 00	 call	 ?DrawText11DXUT@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WABUtagRECT@@UXMFLOAT4@DirectX@@MM_N@Z ; DrawText11DXUT
  00215	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN1@DrawTextW:
; Line 1746
  00218	51		 push	 ecx
  00219	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00221	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00226	8b 55 0c	 mov	 edx, DWORD PTR _pElement$[ebp]
  00229	51		 push	 ecx
  0022a	f3 0f 10 42 64	 movss	 xmm0, DWORD PTR [edx+100]
  0022f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00234	8b 45 0c	 mov	 eax, DWORD PTR _pElement$[ebp]
  00237	51		 push	 ecx
  00238	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  0023d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00242	8b 4d 0c	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00245	51		 push	 ecx
  00246	f3 0f 10 41 5c	 movss	 xmm0, DWORD PTR [ecx+92]
  0024b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00250	8d 4d 8c	 lea	 ecx, DWORD PTR _vFontColor$[ebp]
  00253	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@MMMM@Z ; DirectX::XMFLOAT4::XMFLOAT4
; Line 1749
  00258	0f b6 55 18	 movzx	 edx, BYTE PTR _bCenter$[ebp]
  0025c	52		 push	 edx
  0025d	51		 push	 ecx
  0025e	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _fBBHeight$[ebp]
  00263	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00268	51		 push	 ecx
  00269	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _fBBWidth$[ebp]
  0026e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00273	83 ec 10	 sub	 esp, 16			; 00000010H
  00276	8b c4		 mov	 eax, esp
  00278	8b 4d 8c	 mov	 ecx, DWORD PTR _vFontColor$[ebp]
  0027b	89 08		 mov	 DWORD PTR [eax], ecx
  0027d	8b 55 90	 mov	 edx, DWORD PTR _vFontColor$[ebp+4]
  00280	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00283	8b 4d 94	 mov	 ecx, DWORD PTR _vFontColor$[ebp+8]
  00286	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00289	8b 55 98	 mov	 edx, DWORD PTR _vFontColor$[ebp+12]
  0028c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0028f	8d 45 e4	 lea	 eax, DWORD PTR _rcScreen$[ebp]
  00292	50		 push	 eax
  00293	8b 4d 08	 mov	 ecx, DWORD PTR _strText$[ebp]
  00296	51		 push	 ecx
  00297	8b 55 d0	 mov	 edx, DWORD PTR _pd3d11DeviceContext$[ebp]
  0029a	52		 push	 edx
  0029b	8b 45 d4	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 ?DrawText11DXUT@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WABUtagRECT@@UXMFLOAT4@DirectX@@MM_N@Z ; DrawText11DXUT
  002a4	83 c4 2c	 add	 esp, 44			; 0000002cH
; Line 1751
  002a7	33 c0		 xor	 eax, eax
$LN4@DrawTextW:
; Line 1752
  002a9	52		 push	 edx
  002aa	8b cd		 mov	 ecx, ebp
  002ac	50		 push	 eax
  002ad	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@DrawTextW
  002b3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002b8	58		 pop	 eax
  002b9	5a		 pop	 edx
  002ba	5f		 pop	 edi
  002bb	5e		 pop	 esi
  002bc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bf	33 cd		 xor	 ecx, ebp
  002c1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c6	81 c4 90 00 00
	00		 add	 esp, 144		; 00000090H
  002cc	3b ec		 cmp	 ebp, esp
  002ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d3	8b e5		 mov	 esp, ebp
  002d5	5d		 pop	 ebp
  002d6	c2 14 00	 ret	 20			; 00000014H
  002d9	8d 49 00	 npad	 3
$LN11@DrawTextW:
  002dc	04 00 00 00	 DD	 4
  002e0	00 00 00 00	 DD	 $LN10@DrawTextW
$LN10@DrawTextW:
  002e4	e4 ff ff ff	 DD	 -28			; ffffffe4H
  002e8	10 00 00 00	 DD	 16			; 00000010H
  002ec	00 00 00 00	 DD	 $LN6@DrawTextW
  002f0	bc ff ff ff	 DD	 -68			; ffffffbcH
  002f4	10 00 00 00	 DD	 16			; 00000010H
  002f8	00 00 00 00	 DD	 $LN7@DrawTextW
  002fc	a4 ff ff ff	 DD	 -92			; ffffffa4H
  00300	10 00 00 00	 DD	 16			; 00000010H
  00304	00 00 00 00	 DD	 $LN8@DrawTextW
  00308	8c ff ff ff	 DD	 -116			; ffffff8cH
  0030c	10 00 00 00	 DD	 16			; 00000010H
  00310	00 00 00 00	 DD	 $LN9@DrawTextW
$LN9@DrawTextW:
  00314	76		 DB	 118			; 00000076H
  00315	46		 DB	 70			; 00000046H
  00316	6f		 DB	 111			; 0000006fH
  00317	6e		 DB	 110			; 0000006eH
  00318	74		 DB	 116			; 00000074H
  00319	43		 DB	 67			; 00000043H
  0031a	6f		 DB	 111			; 0000006fH
  0031b	6c		 DB	 108			; 0000006cH
  0031c	6f		 DB	 111			; 0000006fH
  0031d	72		 DB	 114			; 00000072H
  0031e	00		 DB	 0
$LN8@DrawTextW:
  0031f	76		 DB	 118			; 00000076H
  00320	53		 DB	 83			; 00000053H
  00321	68		 DB	 104			; 00000068H
  00322	61		 DB	 97			; 00000061H
  00323	64		 DB	 100			; 00000064H
  00324	6f		 DB	 111			; 0000006fH
  00325	77		 DB	 119			; 00000077H
  00326	43		 DB	 67			; 00000043H
  00327	6f		 DB	 111			; 0000006fH
  00328	6c		 DB	 108			; 0000006cH
  00329	6f		 DB	 111			; 0000006fH
  0032a	72		 DB	 114			; 00000072H
  0032b	00		 DB	 0
$LN7@DrawTextW:
  0032c	72		 DB	 114			; 00000072H
  0032d	63		 DB	 99			; 00000063H
  0032e	53		 DB	 83			; 00000053H
  0032f	68		 DB	 104			; 00000068H
  00330	61		 DB	 97			; 00000061H
  00331	64		 DB	 100			; 00000064H
  00332	6f		 DB	 111			; 0000006fH
  00333	77		 DB	 119			; 00000077H
  00334	00		 DB	 0
$LN6@DrawTextW:
  00335	72		 DB	 114			; 00000072H
  00336	63		 DB	 99			; 00000063H
  00337	53		 DB	 83			; 00000053H
  00338	63		 DB	 99			; 00000063H
  00339	72		 DB	 114			; 00000072H
  0033a	65		 DB	 101			; 00000065H
  0033b	65		 DB	 101			; 00000065H
  0033c	6e		 DB	 110			; 0000006eH
  0033d	00		 DB	 0
?DrawTextW@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@_N3@Z ENDP ; CDXUTDialog::DrawTextW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pFontNode$ = -8					; size = 4
_this$ = -4						; size = 4
_strText$ = 8						; size = 4
_pElement$ = 12						; size = 4
_prcDest$ = 16						; size = 4
_nCount$ = 20						; size = 4
?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z PROC ; CDXUTDialog::CalcTextRect
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1699
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1700
  00017	8b 45 0c	 mov	 eax, DWORD PTR _pElement$[ebp]
  0001a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001d	51		 push	 ecx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?GetFont@CDXUTDialog@@QBEPAUDXUTFontNode@@I@Z ; CDXUTDialog::GetFont
  00026	89 45 f8	 mov	 DWORD PTR _pFontNode$[ebp], eax
; Line 1701
  00029	83 7d f8 00	 cmp	 DWORD PTR _pFontNode$[ebp], 0
  0002d	75 07		 jne	 SHORT $LN1@CalcTextRe
; Line 1702
  0002f	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00034	eb 02		 jmp	 SHORT $LN2@CalcTextRe
$LN1@CalcTextRe:
; Line 1709
  00036	33 c0		 xor	 eax, eax
$LN2@CalcTextRe:
; Line 1710
  00038	83 c4 08	 add	 esp, 8
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 10 00	 ret	 16			; 00000010H
?CalcTextRect@CDXUTDialog@@QAEJPB_WPAVCDXUTElement@@PBUtagRECT@@H@Z ENDP ; CDXUTDialog::CalcTextRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv408 = -320						; size = 8
tv404 = -312						; size = 4
tv398 = -308						; size = 8
tv394 = -300						; size = 4
tv388 = -296						; size = 8
tv384 = -288						; size = 4
tv378 = -284						; size = 8
tv374 = -276						; size = 4
$T1 = -272						; size = 8
$T2 = -264						; size = 12
$T3 = -252						; size = 8
$T4 = -244						; size = 12
$T5 = -232						; size = 8
$T6 = -224						; size = 12
$T7 = -212						; size = 8
$T8 = -204						; size = 12
$T9 = -192						; size = 8
$T10 = -184						; size = 12
$T11 = -172						; size = 8
$T12 = -164						; size = 12
_SpriteVertex$ = -148					; size = 36
_fTexBottom$ = -108					; size = 4
_fTexRight$ = -104					; size = 4
_fTexTop$ = -100					; size = 4
_fTexLeft$ = -96					; size = 4
_fRectBottom$ = -92					; size = 4
_fRectRight$ = -88					; size = 4
_fRectTop$ = -84					; size = 4
_fRectLeft$ = -80					; size = 4
_fTexHeight$ = -76					; size = 4
_fTexWidth$ = -72					; size = 4
_fBBHeight$ = -68					; size = 4
_fBBWidth$ = -64					; size = 4
_pTextureNode$ = -60					; size = 4
_rcScreen$ = -52					; size = 16
_rcTexture$ = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pElement$ = 8						; size = 4
_prcDest$ = 12						; size = 4
_fDepth$ = 16						; size = 4
?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z PROC ; CDXUTDialog::DrawSprite
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1615
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 40 01 00
	00		 sub	 esp, 320		; 00000140H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd c0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-320]
  00012	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1617
  0002c	8b 45 08	 mov	 eax, DWORD PTR _pElement$[ebp]
  0002f	f3 0f 10 40 40	 movss	 xmm0, DWORD PTR [eax+64]
  00034	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0003b	9f		 lahf
  0003c	f6 c4 44	 test	 ah, 68			; 00000044H
  0003f	7a 07		 jp	 SHORT $LN3@DrawSprite
; Line 1618
  00041	33 c0		 xor	 eax, eax
  00043	e9 0e 06 00 00	 jmp	 $LN4@DrawSprite
$LN3@DrawSprite:
; Line 1620
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0004b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0004e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00050	89 55 e4	 mov	 DWORD PTR _rcTexture$[ebp], edx
  00053	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00056	89 45 e8	 mov	 DWORD PTR _rcTexture$[ebp+4], eax
  00059	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0005c	89 55 ec	 mov	 DWORD PTR _rcTexture$[ebp+8], edx
  0005f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00062	89 45 f0	 mov	 DWORD PTR _rcTexture$[ebp+12], eax
; Line 1622
  00065	8b 4d 0c	 mov	 ecx, DWORD PTR _prcDest$[ebp]
  00068	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006a	89 55 cc	 mov	 DWORD PTR _rcScreen$[ebp], edx
  0006d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00070	89 45 d0	 mov	 DWORD PTR _rcScreen$[ebp+4], eax
  00073	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00076	89 55 d4	 mov	 DWORD PTR _rcScreen$[ebp+8], edx
  00079	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0007c	89 45 d8	 mov	 DWORD PTR _rcScreen$[ebp+12], eax
; Line 1623
  0007f	8b f4		 mov	 esi, esp
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 91 1c 02 00
	00		 mov	 edx, DWORD PTR [ecx+540]
  0008a	52		 push	 edx
  0008b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	8b 88 18 02 00
	00		 mov	 ecx, DWORD PTR [eax+536]
  00094	51		 push	 ecx
  00095	8d 55 cc	 lea	 edx, DWORD PTR _rcScreen$[ebp]
  00098	52		 push	 edx
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  000a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	0f b6 48 15	 movzx	 ecx, BYTE PTR [eax+21]
  000ad	85 c9		 test	 ecx, ecx
  000af	74 1f		 je	 SHORT $LN2@DrawSprite
; Line 1627
  000b1	8b f4		 mov	 esi, esp
  000b3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b6	8b 82 28 02 00
	00		 mov	 eax, DWORD PTR [edx+552]
  000bc	50		 push	 eax
  000bd	6a 00		 push	 0
  000bf	8d 4d cc	 lea	 ecx, DWORD PTR _rcScreen$[ebp]
  000c2	51		 push	 ecx
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DrawSprite:
; Line 1629
  000d0	8b 55 08	 mov	 edx, DWORD PTR _pElement$[ebp]
  000d3	8b 02		 mov	 eax, DWORD PTR [edx]
  000d5	50		 push	 eax
  000d6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	e8 00 00 00 00	 call	 ?GetTexture@CDXUTDialog@@QBEPAUDXUTTextureNode@@I@Z ; CDXUTDialog::GetTexture
  000de	89 45 c4	 mov	 DWORD PTR _pTextureNode$[ebp], eax
; Line 1630
  000e1	83 7d c4 00	 cmp	 DWORD PTR _pTextureNode$[ebp], 0
  000e5	75 0a		 jne	 SHORT $LN1@DrawSprite
; Line 1631
  000e7	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  000ec	e9 65 05 00 00	 jmp	 $LN4@DrawSprite
$LN1@DrawSprite:
; Line 1633
  000f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	8b 91 3c 02 00
	00		 mov	 edx, DWORD PTR [ecx+572]
  000fa	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  000fd	89 85 ec fe ff
	ff		 mov	 DWORD PTR tv374[ebp], eax
  00103	f2 0f 2a 85 ec
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv374[ebp]
  0010b	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  00111	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00114	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  0011d	f2 0f 11 85 e4
	fe ff ff	 movsd	 QWORD PTR tv378[ebp], xmm0
  00125	f2 0f 5a 85 e4
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv378[ebp]
  0012d	f3 0f 11 45 c0	 movss	 DWORD PTR _fBBWidth$[ebp], xmm0
; Line 1634
  00132	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00135	8b 82 3c 02 00
	00		 mov	 eax, DWORD PTR [edx+572]
  0013b	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  0013e	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv384[ebp], ecx
  00144	f2 0f 2a 85 e0
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv384[ebp]
  0014c	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR tv384[ebp]
  00152	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00155	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  0015e	f2 0f 11 85 d8
	fe ff ff	 movsd	 QWORD PTR tv388[ebp], xmm0
  00166	f2 0f 5a 85 d8
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv388[ebp]
  0016e	f3 0f 11 45 bc	 movss	 DWORD PTR _fBBHeight$[ebp], xmm0
; Line 1635
  00173	8b 45 c4	 mov	 eax, DWORD PTR _pTextureNode$[ebp]
  00176	8b 88 14 02 00
	00		 mov	 ecx, DWORD PTR [eax+532]
  0017c	89 8d d4 fe ff
	ff		 mov	 DWORD PTR tv394[ebp], ecx
  00182	f2 0f 2a 85 d4
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv394[ebp]
  0018a	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR tv394[ebp]
  00190	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00193	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  0019c	f2 0f 11 85 cc
	fe ff ff	 movsd	 QWORD PTR tv398[ebp], xmm0
  001a4	f2 0f 5a 85 cc
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv398[ebp]
  001ac	f3 0f 11 45 b8	 movss	 DWORD PTR _fTexWidth$[ebp], xmm0
; Line 1636
  001b1	8b 45 c4	 mov	 eax, DWORD PTR _pTextureNode$[ebp]
  001b4	8b 88 18 02 00
	00		 mov	 ecx, DWORD PTR [eax+536]
  001ba	89 8d c8 fe ff
	ff		 mov	 DWORD PTR tv404[ebp], ecx
  001c0	f2 0f 2a 85 c8
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv404[ebp]
  001c8	8b 95 c8 fe ff
	ff		 mov	 edx, DWORD PTR tv404[ebp]
  001ce	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  001d1	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  001da	f2 0f 11 85 c0
	fe ff ff	 movsd	 QWORD PTR tv408[ebp], xmm0
  001e2	f2 0f 5a 85 c0
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv408[ebp]
  001ea	f3 0f 11 45 b4	 movss	 DWORD PTR _fTexHeight$[ebp], xmm0
; Line 1638
  001ef	f3 0f 2a 45 cc	 cvtsi2ss xmm0, DWORD PTR _rcScreen$[ebp]
  001f4	f3 0f 5e 45 c0	 divss	 xmm0, DWORD PTR _fBBWidth$[ebp]
  001f9	f3 0f 11 45 b0	 movss	 DWORD PTR _fRectLeft$[ebp], xmm0
; Line 1639
  001fe	f3 0f 2a 45 d0	 cvtsi2ss xmm0, DWORD PTR _rcScreen$[ebp+4]
  00203	f3 0f 5e 45 bc	 divss	 xmm0, DWORD PTR _fBBHeight$[ebp]
  00208	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00210	f3 0f 5c c8	 subss	 xmm1, xmm0
  00214	f3 0f 11 4d ac	 movss	 DWORD PTR _fRectTop$[ebp], xmm1
; Line 1640
  00219	f3 0f 2a 45 d4	 cvtsi2ss xmm0, DWORD PTR _rcScreen$[ebp+8]
  0021e	f3 0f 5e 45 c0	 divss	 xmm0, DWORD PTR _fBBWidth$[ebp]
  00223	f3 0f 11 45 a8	 movss	 DWORD PTR _fRectRight$[ebp], xmm0
; Line 1641
  00228	f3 0f 2a 45 d8	 cvtsi2ss xmm0, DWORD PTR _rcScreen$[ebp+12]
  0022d	f3 0f 5e 45 bc	 divss	 xmm0, DWORD PTR _fBBHeight$[ebp]
  00232	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0023a	f3 0f 5c c8	 subss	 xmm1, xmm0
  0023e	f3 0f 11 4d a4	 movss	 DWORD PTR _fRectBottom$[ebp], xmm1
; Line 1643
  00243	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  00248	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00250	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00258	f3 0f 11 45 b0	 movss	 DWORD PTR _fRectLeft$[ebp], xmm0
; Line 1644
  0025d	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  00262	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  0026a	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00272	f3 0f 11 45 ac	 movss	 DWORD PTR _fRectTop$[ebp], xmm0
; Line 1645
  00277	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _fRectRight$[ebp]
  0027c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00284	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0028c	f3 0f 11 45 a8	 movss	 DWORD PTR _fRectRight$[ebp], xmm0
; Line 1646
  00291	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _fRectBottom$[ebp]
  00296	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  0029e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  002a6	f3 0f 11 45 a4	 movss	 DWORD PTR _fRectBottom$[ebp], xmm0
; Line 1648
  002ab	f3 0f 2a 45 e4	 cvtsi2ss xmm0, DWORD PTR _rcTexture$[ebp]
  002b0	f3 0f 5e 45 b8	 divss	 xmm0, DWORD PTR _fTexWidth$[ebp]
  002b5	f3 0f 11 45 a0	 movss	 DWORD PTR _fTexLeft$[ebp], xmm0
; Line 1649
  002ba	f3 0f 2a 45 e8	 cvtsi2ss xmm0, DWORD PTR _rcTexture$[ebp+4]
  002bf	f3 0f 5e 45 b4	 divss	 xmm0, DWORD PTR _fTexHeight$[ebp]
  002c4	f3 0f 11 45 9c	 movss	 DWORD PTR _fTexTop$[ebp], xmm0
; Line 1650
  002c9	f3 0f 2a 45 ec	 cvtsi2ss xmm0, DWORD PTR _rcTexture$[ebp+8]
  002ce	f3 0f 5e 45 b8	 divss	 xmm0, DWORD PTR _fTexWidth$[ebp]
  002d3	f3 0f 11 45 98	 movss	 DWORD PTR _fTexRight$[ebp], xmm0
; Line 1651
  002d8	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _rcTexture$[ebp+12]
  002dd	f3 0f 5e 45 b4	 divss	 xmm0, DWORD PTR _fTexHeight$[ebp]
  002e2	f3 0f 11 45 94	 movss	 DWORD PTR _fTexBottom$[ebp], xmm0
; Line 1654
  002e7	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  002ed	e8 00 00 00 00	 call	 ??0DXUTSpriteVertex@@QAE@XZ
; Line 1657
  002f2	51		 push	 ecx
  002f3	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  002f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fd	51		 push	 ecx
  002fe	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  00303	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00308	51		 push	 ecx
  00309	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  0030e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00313	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00319	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  0031e	50		 push	 eax
  0031f	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  00325	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 1658
  0032a	51		 push	 ecx
  0032b	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _fTexTop$[ebp]
  00330	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00335	51		 push	 ecx
  00336	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fTexLeft$[ebp]
  0033b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00340	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00346	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  0034b	50		 push	 eax
  0034c	8d 4d 88	 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+28]
  0034f	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 1659
  00354	8b 45 08	 mov	 eax, DWORD PTR _pElement$[ebp]
  00357	83 c0 34	 add	 eax, 52			; 00000034H
  0035a	50		 push	 eax
  0035b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+12]
  00361	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 1660
  00366	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  0036c	51		 push	 ecx
  0036d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00370	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  00376	83 c1 54	 add	 ecx, 84			; 00000054H
  00379	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 1662
  0037e	51		 push	 ecx
  0037f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  00384	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00389	51		 push	 ecx
  0038a	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  0038f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00394	51		 push	 ecx
  00395	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _fRectRight$[ebp]
  0039a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039f	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  003a5	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  003aa	50		 push	 eax
  003ab	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  003b1	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 1663
  003b6	51		 push	 ecx
  003b7	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _fTexTop$[ebp]
  003bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c1	51		 push	 ecx
  003c2	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fTexRight$[ebp]
  003c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cc	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  003d2	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  003d7	50		 push	 eax
  003d8	8d 4d 88	 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+28]
  003db	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 1664
  003e0	8b 45 08	 mov	 eax, DWORD PTR _pElement$[ebp]
  003e3	83 c0 34	 add	 eax, 52			; 00000034H
  003e6	50		 push	 eax
  003e7	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+12]
  003ed	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 1665
  003f2	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  003f8	51		 push	 ecx
  003f9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003fc	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  00402	83 c1 54	 add	 ecx, 84			; 00000054H
  00405	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 1667
  0040a	51		 push	 ecx
  0040b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  00410	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00415	51		 push	 ecx
  00416	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _fRectBottom$[ebp]
  0041b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00420	51		 push	 ecx
  00421	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  00426	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042b	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00431	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00436	50		 push	 eax
  00437	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  0043d	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 1668
  00442	51		 push	 ecx
  00443	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fTexBottom$[ebp]
  00448	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044d	51		 push	 ecx
  0044e	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fTexLeft$[ebp]
  00453	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00458	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0045e	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  00463	50		 push	 eax
  00464	8d 4d 88	 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+28]
  00467	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 1669
  0046c	8b 45 08	 mov	 eax, DWORD PTR _pElement$[ebp]
  0046f	83 c0 34	 add	 eax, 52			; 00000034H
  00472	50		 push	 eax
  00473	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+12]
  00479	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 1670
  0047e	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  00484	51		 push	 ecx
  00485	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00488	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  0048e	83 c1 54	 add	 ecx, 84			; 00000054H
  00491	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 1673
  00496	51		 push	 ecx
  00497	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  0049c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a1	51		 push	 ecx
  004a2	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _fRectTop$[ebp]
  004a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ac	51		 push	 ecx
  004ad	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _fRectRight$[ebp]
  004b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b7	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  004bd	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  004c2	50		 push	 eax
  004c3	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  004c9	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 1674
  004ce	51		 push	 ecx
  004cf	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _fTexTop$[ebp]
  004d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d9	51		 push	 ecx
  004da	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fTexRight$[ebp]
  004df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e4	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  004ea	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  004ef	50		 push	 eax
  004f0	8d 4d 88	 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+28]
  004f3	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 1675
  004f8	8b 45 08	 mov	 eax, DWORD PTR _pElement$[ebp]
  004fb	83 c0 34	 add	 eax, 52			; 00000034H
  004fe	50		 push	 eax
  004ff	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+12]
  00505	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 1676
  0050a	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  00510	51		 push	 ecx
  00511	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00514	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  0051a	83 c1 54	 add	 ecx, 84			; 00000054H
  0051d	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 1678
  00522	51		 push	 ecx
  00523	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  00528	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052d	51		 push	 ecx
  0052e	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _fRectBottom$[ebp]
  00533	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00538	51		 push	 ecx
  00539	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _fRectRight$[ebp]
  0053e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00543	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00549	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  0054e	50		 push	 eax
  0054f	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  00555	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 1679
  0055a	51		 push	 ecx
  0055b	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fTexBottom$[ebp]
  00560	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00565	51		 push	 ecx
  00566	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fTexRight$[ebp]
  0056b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00570	8d 8d 04 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00576	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  0057b	50		 push	 eax
  0057c	8d 4d 88	 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+28]
  0057f	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 1680
  00584	8b 45 08	 mov	 eax, DWORD PTR _pElement$[ebp]
  00587	83 c0 34	 add	 eax, 52			; 00000034H
  0058a	50		 push	 eax
  0058b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+12]
  00591	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 1681
  00596	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  0059c	51		 push	 ecx
  0059d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005a0	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  005a6	83 c1 54	 add	 ecx, 84			; 00000054H
  005a9	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 1683
  005ae	51		 push	 ecx
  005af	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  005b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b9	51		 push	 ecx
  005ba	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _fRectBottom$[ebp]
  005bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c4	51		 push	 ecx
  005c5	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _fRectLeft$[ebp]
  005ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005cf	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  005d5	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  005da	50		 push	 eax
  005db	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  005e1	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3::operator=
; Line 1684
  005e6	51		 push	 ecx
  005e7	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fTexBottom$[ebp]
  005ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f1	51		 push	 ecx
  005f2	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fTexLeft$[ebp]
  005f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fc	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00602	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  00607	50		 push	 eax
  00608	8d 4d 88	 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+28]
  0060b	e8 00 00 00 00	 call	 ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2::operator=
; Line 1685
  00610	8b 45 08	 mov	 eax, DWORD PTR _pElement$[ebp]
  00613	83 c0 34	 add	 eax, 52			; 00000034H
  00616	50		 push	 eax
  00617	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp+12]
  0061d	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 1686
  00622	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SpriteVertex$[ebp]
  00628	51		 push	 ecx
  00629	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0062c	8b 8a 3c 02 00
	00		 mov	 ecx, DWORD PTR [edx+572]
  00632	83 c1 54	 add	 ecx, 84			; 00000054H
  00635	e8 00 00 00 00	 call	 ?push_back@?$vector@UDXUTSpriteVertex@@V?$allocator@UDXUTSpriteVertex@@@std@@@std@@QAEXABUDXUTSpriteVertex@@@Z ; std::vector<DXUTSpriteVertex,std::allocator<DXUTSpriteVertex> >::push_back
; Line 1690
  0063a	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  0063f	50		 push	 eax
  00640	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00645	50		 push	 eax
  00646	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00649	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  0064f	e8 00 00 00 00	 call	 ?EndSprites11@CDXUTDialogResourceManager@@QAEXPAUID3D11Device@@PAUID3D11DeviceContext@@@Z ; CDXUTDialogResourceManager::EndSprites11
; Line 1692
  00654	33 c0		 xor	 eax, eax
$LN4@DrawSprite:
; Line 1693
  00656	52		 push	 edx
  00657	8b cd		 mov	 ecx, ebp
  00659	50		 push	 eax
  0065a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@DrawSprite
  00660	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00665	58		 pop	 eax
  00666	5a		 pop	 edx
  00667	5f		 pop	 edi
  00668	5e		 pop	 esi
  00669	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0066c	33 cd		 xor	 ecx, ebp
  0066e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00673	81 c4 40 01 00
	00		 add	 esp, 320		; 00000140H
  00679	3b ec		 cmp	 ebp, esp
  0067b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00680	8b e5		 mov	 esp, ebp
  00682	5d		 pop	 ebp
  00683	c2 0c 00	 ret	 12			; 0000000cH
  00686	8b ff		 npad	 2
$LN10@DrawSprite:
  00688	03 00 00 00	 DD	 3
  0068c	00 00 00 00	 DD	 $LN9@DrawSprite
$LN9@DrawSprite:
  00690	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00694	10 00 00 00	 DD	 16			; 00000010H
  00698	00 00 00 00	 DD	 $LN6@DrawSprite
  0069c	cc ff ff ff	 DD	 -52			; ffffffccH
  006a0	10 00 00 00	 DD	 16			; 00000010H
  006a4	00 00 00 00	 DD	 $LN7@DrawSprite
  006a8	6c ff ff ff	 DD	 -148			; ffffff6cH
  006ac	24 00 00 00	 DD	 36			; 00000024H
  006b0	00 00 00 00	 DD	 $LN8@DrawSprite
$LN8@DrawSprite:
  006b4	53		 DB	 83			; 00000053H
  006b5	70		 DB	 112			; 00000070H
  006b6	72		 DB	 114			; 00000072H
  006b7	69		 DB	 105			; 00000069H
  006b8	74		 DB	 116			; 00000074H
  006b9	65		 DB	 101			; 00000065H
  006ba	56		 DB	 86			; 00000056H
  006bb	65		 DB	 101			; 00000065H
  006bc	72		 DB	 114			; 00000072H
  006bd	74		 DB	 116			; 00000074H
  006be	65		 DB	 101			; 00000065H
  006bf	78		 DB	 120			; 00000078H
  006c0	00		 DB	 0
$LN7@DrawSprite:
  006c1	72		 DB	 114			; 00000072H
  006c2	63		 DB	 99			; 00000063H
  006c3	53		 DB	 83			; 00000053H
  006c4	63		 DB	 99			; 00000063H
  006c5	72		 DB	 114			; 00000072H
  006c6	65		 DB	 101			; 00000065H
  006c7	65		 DB	 101			; 00000065H
  006c8	6e		 DB	 110			; 0000006eH
  006c9	00		 DB	 0
$LN6@DrawSprite:
  006ca	72		 DB	 114			; 00000072H
  006cb	63		 DB	 99			; 00000063H
  006cc	54		 DB	 84			; 00000054H
  006cd	65		 DB	 101			; 00000065H
  006ce	78		 DB	 120			; 00000078H
  006cf	74		 DB	 116			; 00000074H
  006d0	75		 DB	 117			; 00000075H
  006d1	72		 DB	 114			; 00000072H
  006d2	65		 DB	 101			; 00000065H
  006d3	00		 DB	 0
?DrawSprite@CDXUTDialog@@QAEJPAVCDXUTElement@@PBUtagRECT@@M@Z ENDP ; CDXUTDialog::DrawSprite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pRect$ = 8						; size = 4
_color$ = 12						; size = 4
?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z PROC		; CDXUTDialog::DrawRect
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1604
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1608
  0000e	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
; Line 1609
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?DrawRect@CDXUTDialog@@QAEJPBUtagRECT@@K@Z ENDP		; CDXUTDialog::DrawRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pControl$ = 8						; size = 4
?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z PROC	; CDXUTDialog::RequestFocus
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1586
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1587
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00014	3b 45 08	 cmp	 eax, DWORD PTR _pControl$[ebp]
  00017	75 02		 jne	 SHORT $LN3@RequestFoc
; Line 1588
  00019	eb 63		 jmp	 SHORT $LN4@RequestFoc
$LN3@RequestFoc:
; Line 1590
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  0001e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00020	8b f4		 mov	 esi, esp
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00025	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00028	ff d0		 call	 eax
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	0f b6 c8	 movzx	 ecx, al
  00034	85 c9		 test	 ecx, ecx
  00036	75 02		 jne	 SHORT $LN2@RequestFoc
; Line 1591
  00038	eb 44		 jmp	 SHORT $LN4@RequestFoc
$LN2@RequestFoc:
; Line 1593
  0003a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00041	74 1c		 je	 SHORT $LN1@RequestFoc
; Line 1594
  00043	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00049	8b 02		 mov	 eax, DWORD PTR [edx]
  0004b	8b f4		 mov	 esi, esp
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00053	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00056	ff d2		 call	 edx
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@RequestFoc:
; Line 1596
  0005f	8b 45 08	 mov	 eax, DWORD PTR _pControl$[ebp]
  00062	8b 10		 mov	 edx, DWORD PTR [eax]
  00064	8b f4		 mov	 esi, esp
  00066	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00069	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0006c	ff d0		 call	 eax
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1597
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00078	89 0d 00 00 00
	00		 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, ecx ; CDXUTDialog::s_pControlFocus
$LN4@RequestFoc:
; Line 1598
  0007e	5e		 pop	 esi
  0007f	83 c4 04	 add	 esp, 4
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 04 00	 ret	 4
?RequestFocus@CDXUTDialog@@QAEXPAVCDXUTControl@@@Z ENDP	; CDXUTDialog::RequestFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nEvent$ = 8						; size = 4
_bTriggeredByUser$ = 12					; size = 1
_pControl$ = 16						; size = 4
?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z PROC	; CDXUTDialog::SendEvent
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 700
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 702
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 b8 40 02 00
	00 00		 cmp	 DWORD PTR [eax+576], 0
  00019	75 02		 jne	 SHORT $LN2@SendEvent
; Line 703
  0001b	eb 43		 jmp	 SHORT $LN3@SendEvent
$LN2@SendEvent:
; Line 707
  0001d	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _bTriggeredByUser$[ebp]
  00021	85 c9		 test	 ecx, ecx
  00023	75 0c		 jne	 SHORT $LN1@SendEvent
  00025	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00028	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0002b	85 c0		 test	 eax, eax
  0002d	75 02		 jne	 SHORT $LN1@SendEvent
; Line 708
  0002f	eb 2f		 jmp	 SHORT $LN3@SendEvent
$LN1@SendEvent:
; Line 710
  00031	8b f4		 mov	 esi, esp
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 91 44 02 00
	00		 mov	 edx, DWORD PTR [ecx+580]
  0003c	52		 push	 edx
  0003d	8b 45 10	 mov	 eax, DWORD PTR _pControl$[ebp]
  00040	50		 push	 eax
  00041	8b 4d 10	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00044	e8 00 00 00 00	 call	 ?GetID@CDXUTControl@@QBEHXZ ; CDXUTControl::GetID
  00049	50		 push	 eax
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _nEvent$[ebp]
  0004d	51		 push	 ecx
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8b 82 40 02 00
	00		 mov	 eax, DWORD PTR [edx+576]
  00057	ff d0		 call	 eax
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@SendEvent:
; Line 711
  00060	5e		 pop	 esi
  00061	83 c4 04	 add	 esp, 4
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 0c 00	 ret	 12			; 0000000cH
?SendEvent@CDXUTDialog@@QAEXI_NPAVCDXUTControl@@@Z ENDP	; CDXUTDialog::SendEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv94 = -64						; size = 4
tv66 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 12
$T4 = -37						; size = 1
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nControlType$ = 8					; size = 4
_iElement$ = 12						; size = 4
?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z PROC ; CDXUTDialog::GetDefaultElement
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1178
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1179
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$5[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00047	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cbegin
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	eb 08		 jmp	 SHORT $LN4@GetDefault
$LN3@GetDefault:
  00055	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00058	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
$LN4@GetDefault:
  0005d	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  0006a	e8 00 00 00 00	 call	 ?cend@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::cend
  0006f	89 45 c4	 mov	 DWORD PTR tv66[ebp], eax
  00072	8b 55 c4	 mov	 edx, DWORD PTR tv66[ebp]
  00075	89 55 c0	 mov	 DWORD PTR tv94[ebp], edx
  00078	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007c	8b 45 c0	 mov	 eax, DWORD PTR tv94[ebp]
  0007f	50		 push	 eax
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00083	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator!=
  00088	88 45 db	 mov	 BYTE PTR $T4[ebp], al
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008f	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00092	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
  00097	0f b6 4d db	 movzx	 ecx, BYTE PTR $T4[ebp]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 4c		 je	 SHORT $LN2@GetDefault
; Line 1182
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000a2	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000a7	8b 10		 mov	 edx, DWORD PTR [eax]
  000a9	8b 02		 mov	 eax, DWORD PTR [edx]
  000ab	3b 45 08	 cmp	 eax, DWORD PTR _nControlType$[ebp]
  000ae	75 36		 jne	 SHORT $LN1@GetDefault
  000b0	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b3	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000bd	3b 55 0c	 cmp	 edx, DWORD PTR _iElement$[ebp]
  000c0	75 24		 jne	 SHORT $LN1@GetDefault
; Line 1184
  000c2	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000c5	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEABQAUDXUTElementHolder@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000ca	8b 00		 mov	 eax, DWORD PTR [eax]
  000cc	83 c0 08	 add	 eax, 8
  000cf	89 45 c8	 mov	 DWORD PTR $T2[ebp], eax
  000d2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d9	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000dc	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
  000e1	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  000e4	eb 16		 jmp	 SHORT $LN5@GetDefault
$LN1@GetDefault:
; Line 1185
  000e6	e9 6a ff ff ff	 jmp	 $LN3@GetDefault
$LN2@GetDefault:
; Line 1186
  000eb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f2	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000f5	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
; Line 1188
  000fa	33 c0		 xor	 eax, eax
$LN5@GetDefault:
; Line 1189
  000fc	52		 push	 edx
  000fd	8b cd		 mov	 ecx, ebp
  000ff	50		 push	 eax
  00100	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@GetDefault
  00106	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010b	58		 pop	 eax
  0010c	5a		 pop	 edx
  0010d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00110	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00117	59		 pop	 ecx
  00118	5f		 pop	 edi
  00119	83 c4 40	 add	 esp, 64			; 00000040H
  0011c	3b ec		 cmp	 ebp, esp
  0011e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c2 08 00	 ret	 8
  00129	8d 49 00	 npad	 3
$LN12@GetDefault:
  0012c	01 00 00 00	 DD	 1
  00130	00 00 00 00	 DD	 $LN11@GetDefault
$LN11@GetDefault:
  00134	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00138	0c 00 00 00	 DD	 12			; 0000000cH
  0013c	00 00 00 00	 DD	 $LN9@GetDefault
$LN9@GetDefault:
  00140	69		 DB	 105			; 00000069H
  00141	74		 DB	 116			; 00000074H
  00142	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetDefaultElement@CDXUTDialog@@QBEPAVCDXUTElement@@II@Z ENDP ; CDXUTDialog::GetDefaultElement
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv143 = -88						; size = 4
tv154 = -84						; size = 4
tv66 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 4
$T4 = -68						; size = 4
$T5 = -64						; size = 12
$T6 = -49						; size = 1
_pNewHolder$ = -44					; size = 4
_it$7 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nControlType$ = 8					; size = 4
_iElement$ = 12						; size = 4
_pElement$ = 16						; size = 4
?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z PROC ; CDXUTDialog::SetDefaultElement
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a8	 lea	 edi, DWORD PTR [ebp-88]
  00019	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1149
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$7[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00047	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	eb 08		 jmp	 SHORT $LN5@SetDefault
$LN4@SetDefault:
  00055	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  00058	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
$LN5@SetDefault:
  0005d	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  0006a	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
  0006f	89 45 b0	 mov	 DWORD PTR tv66[ebp], eax
  00072	8b 55 b0	 mov	 edx, DWORD PTR tv66[ebp]
  00075	89 55 ac	 mov	 DWORD PTR tv154[ebp], edx
  00078	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007c	8b 45 ac	 mov	 eax, DWORD PTR tv154[ebp]
  0007f	50		 push	 eax
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  00083	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator!=
  00088	88 45 cf	 mov	 BYTE PTR $T6[ebp], al
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008f	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  00092	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
  00097	0f b6 4d cf	 movzx	 ecx, BYTE PTR $T6[ebp]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 5c		 je	 SHORT $LN3@SetDefault
; Line 1152
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  000a2	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000a7	8b 10		 mov	 edx, DWORD PTR [eax]
  000a9	8b 02		 mov	 eax, DWORD PTR [edx]
  000ab	3b 45 08	 cmp	 eax, DWORD PTR _nControlType$[ebp]
  000ae	75 46		 jne	 SHORT $LN2@SetDefault
  000b0	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  000b3	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000bd	3b 55 0c	 cmp	 edx, DWORD PTR _iElement$[ebp]
  000c0	75 34		 jne	 SHORT $LN2@SetDefault
; Line 1154
  000c2	8b 45 10	 mov	 eax, DWORD PTR _pElement$[ebp]
  000c5	50		 push	 eax
  000c6	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  000c9	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d0	83 c1 08	 add	 ecx, 8
  000d3	e8 00 00 00 00	 call	 ??4CDXUTElement@@QAEAAV0@ABV0@@Z
; Line 1155
  000d8	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
  000df	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e6	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  000e9	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
  000ee	8b 45 bc	 mov	 eax, DWORD PTR $T4[ebp]
  000f1	e9 9b 00 00 00	 jmp	 $LN6@SetDefault
$LN2@SetDefault:
; Line 1156
  000f6	e9 5a ff ff ff	 jmp	 $LN4@SetDefault
$LN3@SetDefault:
; Line 1157
  000fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00102	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  00105	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
; Line 1161
  0010a	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0010f	6a 74		 push	 116			; 00000074H
  00111	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00116	83 c4 08	 add	 esp, 8
  00119	89 45 b4	 mov	 DWORD PTR $T2[ebp], eax
  0011c	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00123	83 7d b4 00	 cmp	 DWORD PTR $T2[ebp], 0
  00127	74 0d		 je	 SHORT $LN8@SetDefault
  00129	8b 4d b4	 mov	 ecx, DWORD PTR $T2[ebp]
  0012c	e8 00 00 00 00	 call	 ??0DXUTElementHolder@@QAE@XZ
  00131	89 45 a8	 mov	 DWORD PTR tv143[ebp], eax
  00134	eb 07		 jmp	 SHORT $LN9@SetDefault
$LN8@SetDefault:
  00136	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN9@SetDefault:
  0013d	8b 4d a8	 mov	 ecx, DWORD PTR tv143[ebp]
  00140	89 4d b8	 mov	 DWORD PTR $T3[ebp], ecx
  00143	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014a	8b 55 b8	 mov	 edx, DWORD PTR $T3[ebp]
  0014d	89 55 d4	 mov	 DWORD PTR _pNewHolder$[ebp], edx
; Line 1162
  00150	83 7d d4 00	 cmp	 DWORD PTR _pNewHolder$[ebp], 0
  00154	75 07		 jne	 SHORT $LN1@SetDefault
; Line 1163
  00156	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  0015b	eb 34		 jmp	 SHORT $LN6@SetDefault
$LN1@SetDefault:
; Line 1165
  0015d	8b 45 d4	 mov	 eax, DWORD PTR _pNewHolder$[ebp]
  00160	8b 4d 08	 mov	 ecx, DWORD PTR _nControlType$[ebp]
  00163	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1166
  00165	8b 55 d4	 mov	 edx, DWORD PTR _pNewHolder$[ebp]
  00168	8b 45 0c	 mov	 eax, DWORD PTR _iElement$[ebp]
  0016b	89 42 04	 mov	 DWORD PTR [edx+4], eax
; Line 1167
  0016e	8b 4d 10	 mov	 ecx, DWORD PTR _pElement$[ebp]
  00171	51		 push	 ecx
  00172	8b 4d d4	 mov	 ecx, DWORD PTR _pNewHolder$[ebp]
  00175	83 c1 08	 add	 ecx, 8
  00178	e8 00 00 00 00	 call	 ??4CDXUTElement@@QAEAAV0@ABV0@@Z
; Line 1169
  0017d	8d 55 d4	 lea	 edx, DWORD PTR _pNewHolder$[ebp]
  00180	52		 push	 edx
  00181	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00184	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  0018a	e8 00 00 00 00	 call	 ?push_back@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXABQAUDXUTElementHolder@@@Z ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::push_back
; Line 1171
  0018f	33 c0		 xor	 eax, eax
$LN6@SetDefault:
; Line 1172
  00191	52		 push	 edx
  00192	8b cd		 mov	 ecx, ebp
  00194	50		 push	 eax
  00195	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@SetDefault
  0019b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001a0	58		 pop	 eax
  001a1	5a		 pop	 edx
  001a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ac	59		 pop	 ecx
  001ad	5f		 pop	 edi
  001ae	83 c4 58	 add	 esp, 88			; 00000058H
  001b1	3b ec		 cmp	 ebp, esp
  001b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c2 0c 00	 ret	 12			; 0000000cH
  001be	8b ff		 npad	 2
$LN17@SetDefault:
  001c0	02 00 00 00	 DD	 2
  001c4	00 00 00 00	 DD	 $LN16@SetDefault
$LN16@SetDefault:
  001c8	e0 ff ff ff	 DD	 -32			; ffffffe0H
  001cc	0c 00 00 00	 DD	 12			; 0000000cH
  001d0	00 00 00 00	 DD	 $LN13@SetDefault
  001d4	d4 ff ff ff	 DD	 -44			; ffffffd4H
  001d8	04 00 00 00	 DD	 4
  001dc	00 00 00 00	 DD	 $LN14@SetDefault
$LN14@SetDefault:
  001e0	70		 DB	 112			; 00000070H
  001e1	4e		 DB	 78			; 0000004eH
  001e2	65		 DB	 101			; 00000065H
  001e3	77		 DB	 119			; 00000077H
  001e4	48		 DB	 72			; 00000048H
  001e5	6f		 DB	 111			; 0000006fH
  001e6	6c		 DB	 108			; 0000006cH
  001e7	64		 DB	 100			; 00000064H
  001e8	65		 DB	 101			; 00000065H
  001e9	72		 DB	 114			; 00000072H
  001ea	00		 DB	 0
$LN13@SetDefault:
  001eb	69		 DB	 105			; 00000069H
  001ec	74		 DB	 116			; 00000074H
  001ed	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z$2:
  00010	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00015	8b 45 b4	 mov	 eax, DWORD PTR $T2[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0001e	83 c4 08	 add	 esp, 8
  00021	c3		 ret	 0
__ehhandler$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z:
  00022	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00026	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00029	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0002c	33 c8		 xor	 ecx, eax
  0002e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00033	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetDefaultElement@CDXUTDialog@@QAEJIIPAVCDXUTElement@@@Z ENDP ; CDXUTDialog::SetDefaultElement
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pComboBox$ = -8					; size = 4
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?ClearComboBox@CDXUTDialog@@QAEXH@Z PROC		; CDXUTDialog::ClearComboBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1575
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1576
  00017	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetComboBox@CDXUTDialog@@QBEPAVCDXUTComboBox@@H@Z ; CDXUTDialog::GetComboBox
  00023	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax
; Line 1577
  00026	83 7d f8 00	 cmp	 DWORD PTR _pComboBox$[ebp], 0
  0002a	75 02		 jne	 SHORT $LN1@ClearCombo
; Line 1578
  0002c	eb 08		 jmp	 SHORT $LN2@ClearCombo
$LN1@ClearCombo:
; Line 1580
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00031	e8 00 00 00 00	 call	 ?RemoveAllItems@CDXUTComboBox@@QAEXXZ ; CDXUTComboBox::RemoveAllItems
$LN2@ClearCombo:
; Line 1581
  00036	83 c4 08	 add	 esp, 8
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?ClearComboBox@CDXUTDialog@@QAEXH@Z ENDP		; CDXUTDialog::ClearComboBox
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv132 = -64						; size = 4
tv66 = -60						; size = 4
$T2 = -56						; size = 12
$T3 = -41						; size = 1
_pRadioButton$4 = -40					; size = 4
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nButtonGroup$ = 8					; size = 4
?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z PROC	; CDXUTDialog::ClearRadioButtonGroup
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1558
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1560
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$5[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00047	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	eb 08		 jmp	 SHORT $LN5@ClearRadio
$LN4@ClearRadio:
  00055	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00058	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN5@ClearRadio:
  0005d	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0006a	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
  0006f	89 45 c4	 mov	 DWORD PTR tv66[ebp], eax
  00072	8b 55 c4	 mov	 edx, DWORD PTR tv66[ebp]
  00075	89 55 c0	 mov	 DWORD PTR tv132[ebp], edx
  00078	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007c	8b 45 c0	 mov	 eax, DWORD PTR tv132[ebp]
  0007f	50		 push	 eax
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00083	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00088	88 45 d7	 mov	 BYTE PTR $T3[ebp], al
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008f	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  00092	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00097	0f b6 4d d7	 movzx	 ecx, BYTE PTR $T3[ebp]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 3f		 je	 SHORT $LN3@ClearRadio
; Line 1562
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000a2	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?GetType@CDXUTControl@@QBEIXZ ; CDXUTControl::GetType
  000ae	83 f8 03	 cmp	 eax, 3
  000b1	75 26		 jne	 SHORT $LN2@ClearRadio
; Line 1564
  000b3	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b6	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 55 d8	 mov	 DWORD PTR _pRadioButton$4[ebp], edx
; Line 1566
  000c0	8b 4d d8	 mov	 ecx, DWORD PTR _pRadioButton$4[ebp]
  000c3	e8 00 00 00 00	 call	 ?GetButtonGroup@CDXUTRadioButton@@QBEIXZ ; CDXUTRadioButton::GetButtonGroup
  000c8	3b 45 08	 cmp	 eax, DWORD PTR _nButtonGroup$[ebp]
  000cb	75 0c		 jne	 SHORT $LN2@ClearRadio
; Line 1567
  000cd	6a 00		 push	 0
  000cf	6a 00		 push	 0
  000d1	8b 4d d8	 mov	 ecx, DWORD PTR _pRadioButton$4[ebp]
  000d4	e8 00 00 00 00	 call	 ?SetChecked@CDXUTRadioButton@@QAEX_N0@Z ; CDXUTRadioButton::SetChecked
$LN2@ClearRadio:
; Line 1568
  000d9	e9 77 ff ff ff	 jmp	 $LN4@ClearRadio
$LN3@ClearRadio:
; Line 1569
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e5	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000e8	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 1570
  000ed	52		 push	 edx
  000ee	8b cd		 mov	 ecx, ebp
  000f0	50		 push	 eax
  000f1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@ClearRadio
  000f7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000fc	58		 pop	 eax
  000fd	5a		 pop	 edx
  000fe	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00101	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00108	59		 pop	 ecx
  00109	5f		 pop	 edi
  0010a	83 c4 40	 add	 esp, 64			; 00000040H
  0010d	3b ec		 cmp	 ebp, esp
  0010f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 04 00	 ret	 4
  0011a	8b ff		 npad	 2
$LN13@ClearRadio:
  0011c	01 00 00 00	 DD	 1
  00120	00 00 00 00	 DD	 $LN12@ClearRadio
$LN12@ClearRadio:
  00124	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00128	0c 00 00 00	 DD	 12			; 0000000cH
  0012c	00 00 00 00	 DD	 $LN10@ClearRadio
$LN10@ClearRadio:
  00130	69		 DB	 105			; 00000069H
  00131	74		 DB	 116			; 00000074H
  00132	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ClearRadioButtonGroup@CDXUTDialog@@QAEXI@Z ENDP	; CDXUTDialog::ClearRadioButtonGroup
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pControl$ = -8						; size = 4
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_bEnabled$ = 12						; size = 1
?SetControlEnabled@CDXUTDialog@@QAEXH_N@Z PROC		; CDXUTDialog::SetControlEnabled
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1105
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1106
  00018	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z ; CDXUTDialog::GetControl
  00024	89 45 f8	 mov	 DWORD PTR _pControl$[ebp], eax
; Line 1107
  00027	83 7d f8 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  0002b	75 02		 jne	 SHORT $LN1@SetControl
; Line 1108
  0002d	eb 1b		 jmp	 SHORT $LN2@SetControl
$LN1@SetControl:
; Line 1110
  0002f	8b f4		 mov	 esi, esp
  00031	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _bEnabled$[ebp]
  00035	51		 push	 ecx
  00036	8b 55 f8	 mov	 edx, DWORD PTR _pControl$[ebp]
  00039	8b 02		 mov	 eax, DWORD PTR [edx]
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _pControl$[ebp]
  0003e	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00041	ff d2		 call	 edx
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@SetControl:
; Line 1111
  0004a	5e		 pop	 esi
  0004b	83 c4 08	 add	 esp, 8
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
?SetControlEnabled@CDXUTDialog@@QAEXH_N@Z ENDP		; CDXUTDialog::SetControlEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pControl$ = -8						; size = 4
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?GetControlEnabled@CDXUTDialog@@QBE_NH@Z PROC		; CDXUTDialog::GetControlEnabled
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1093
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1094
  00018	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z ; CDXUTDialog::GetControl
  00024	89 45 f8	 mov	 DWORD PTR _pControl$[ebp], eax
; Line 1095
  00027	83 7d f8 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  0002b	75 04		 jne	 SHORT $LN1@GetControl
; Line 1096
  0002d	32 c0		 xor	 al, al
  0002f	eb 16		 jmp	 SHORT $LN2@GetControl
$LN1@GetControl:
; Line 1098
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00034	8b 11		 mov	 edx, DWORD PTR [ecx]
  00036	8b f4		 mov	 esi, esp
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pControl$[ebp]
  0003b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0003e	ff d0		 call	 eax
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@GetControl:
; Line 1099
  00047	5e		 pop	 esi
  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?GetControlEnabled@CDXUTDialog@@QBE_NH@Z ENDP		; CDXUTDialog::GetControlEnabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv141 = -76						; size = 4
tv131 = -72						; size = 4
tv88 = -68						; size = 4
tv151 = -64						; size = 4
tv66 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 12
$T4 = -37						; size = 1
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pt$ = 8						; size = 4
?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z PROC ; CDXUTDialog::GetControlAtPoint
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1068
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0001a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1071
  0003b	8d 45 e0	 lea	 eax, DWORD PTR _it$5[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00048	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00054	eb 08		 jmp	 SHORT $LN5@GetControl
$LN4@GetControl:
  00056	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00059	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN5@GetControl:
  0005e	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00061	51		 push	 ecx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0006b	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
  00070	89 45 c4	 mov	 DWORD PTR tv66[ebp], eax
  00073	8b 55 c4	 mov	 edx, DWORD PTR tv66[ebp]
  00076	89 55 c0	 mov	 DWORD PTR tv151[ebp], edx
  00079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007d	8b 45 c0	 mov	 eax, DWORD PTR tv151[ebp]
  00080	50		 push	 eax
  00081	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00084	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00089	88 45 db	 mov	 BYTE PTR $T4[ebp], al
  0008c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00090	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00093	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00098	0f b6 4d db	 movzx	 ecx, BYTE PTR $T4[ebp]
  0009c	85 c9		 test	 ecx, ecx
  0009e	0f 84 b7 00 00
	00		 je	 $LN3@GetControl
; Line 1073
  000a4	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000a7	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000ac	83 38 00	 cmp	 DWORD PTR [eax], 0
  000af	75 02		 jne	 SHORT $LN2@GetControl
; Line 1075
  000b1	eb a3		 jmp	 SHORT $LN4@GetControl
$LN2@GetControl:
; Line 1081
  000b3	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b6	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 55 bc	 mov	 DWORD PTR tv88[ebp], edx
  000c0	8b f4		 mov	 esi, esp
  000c2	8b 45 08	 mov	 eax, DWORD PTR _pt$[ebp]
  000c5	50		 push	 eax
  000c6	8b 4d bc	 mov	 ecx, DWORD PTR tv88[ebp]
  000c9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cb	8b 4d bc	 mov	 ecx, DWORD PTR tv88[ebp]
  000ce	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000d1	ff d0		 call	 eax
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	0f b6 c8	 movzx	 ecx, al
  000dd	85 c9		 test	 ecx, ecx
  000df	74 75		 je	 SHORT $LN1@GetControl
  000e1	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000e4	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000e9	8b 10		 mov	 edx, DWORD PTR [eax]
  000eb	89 55 b8	 mov	 DWORD PTR tv131[ebp], edx
  000ee	8b 45 b8	 mov	 eax, DWORD PTR tv131[ebp]
  000f1	8b 10		 mov	 edx, DWORD PTR [eax]
  000f3	8b f4		 mov	 esi, esp
  000f5	8b 4d b8	 mov	 ecx, DWORD PTR tv131[ebp]
  000f8	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000fb	ff d0		 call	 eax
  000fd	3b f4		 cmp	 esi, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	0f b6 c8	 movzx	 ecx, al
  00107	85 c9		 test	 ecx, ecx
  00109	74 4b		 je	 SHORT $LN1@GetControl
  0010b	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  0010e	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  00113	8b 10		 mov	 edx, DWORD PTR [eax]
  00115	89 55 b4	 mov	 DWORD PTR tv141[ebp], edx
  00118	8b 45 b4	 mov	 eax, DWORD PTR tv141[ebp]
  0011b	8b 10		 mov	 edx, DWORD PTR [eax]
  0011d	8b f4		 mov	 esi, esp
  0011f	8b 4d b4	 mov	 ecx, DWORD PTR tv141[ebp]
  00122	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00125	ff d0		 call	 eax
  00127	3b f4		 cmp	 esi, esp
  00129	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012e	0f b6 c8	 movzx	 ecx, al
  00131	85 c9		 test	 ecx, ecx
  00133	74 21		 je	 SHORT $LN1@GetControl
; Line 1083
  00135	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00138	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  0013d	8b 10		 mov	 edx, DWORD PTR [eax]
  0013f	89 55 c8	 mov	 DWORD PTR $T2[ebp], edx
  00142	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00149	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  0014c	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00151	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  00154	eb 16		 jmp	 SHORT $LN6@GetControl
$LN1@GetControl:
; Line 1084
  00156	e9 fb fe ff ff	 jmp	 $LN4@GetControl
$LN3@GetControl:
; Line 1085
  0015b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00162	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00165	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 1087
  0016a	33 c0		 xor	 eax, eax
$LN6@GetControl:
; Line 1088
  0016c	52		 push	 edx
  0016d	8b cd		 mov	 ecx, ebp
  0016f	50		 push	 eax
  00170	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@GetControl
  00176	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0017b	58		 pop	 eax
  0017c	5a		 pop	 edx
  0017d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00180	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00187	59		 pop	 ecx
  00188	5f		 pop	 edi
  00189	5e		 pop	 esi
  0018a	83 c4 4c	 add	 esp, 76			; 0000004cH
  0018d	3b ec		 cmp	 ebp, esp
  0018f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00194	8b e5		 mov	 esp, ebp
  00196	5d		 pop	 ebp
  00197	c2 04 00	 ret	 4
  0019a	8b ff		 npad	 2
$LN13@GetControl:
  0019c	01 00 00 00	 DD	 1
  001a0	00 00 00 00	 DD	 $LN12@GetControl
$LN12@GetControl:
  001a4	e0 ff ff ff	 DD	 -32			; ffffffe0H
  001a8	0c 00 00 00	 DD	 12			; 0000000cH
  001ac	00 00 00 00	 DD	 $LN10@GetControl
$LN10@GetControl:
  001b0	69		 DB	 105			; 00000069H
  001b1	74		 DB	 116			; 00000074H
  001b2	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z ENDP ; CDXUTDialog::GetControlAtPoint
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv95 = -64						; size = 4
tv66 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 12
$T4 = -37						; size = 1
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_nControlType$ = 12					; size = 4
?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z PROC	; CDXUTDialog::GetControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1498
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1500
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$5[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00047	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	eb 08		 jmp	 SHORT $LN4@GetControl
$LN3@GetControl:
  00055	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00058	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN4@GetControl:
  0005d	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0006a	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
  0006f	89 45 c4	 mov	 DWORD PTR tv66[ebp], eax
  00072	8b 55 c4	 mov	 edx, DWORD PTR tv66[ebp]
  00075	89 55 c0	 mov	 DWORD PTR tv95[ebp], edx
  00078	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007c	8b 45 c0	 mov	 eax, DWORD PTR tv95[ebp]
  0007f	50		 push	 eax
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00083	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00088	88 45 db	 mov	 BYTE PTR $T4[ebp], al
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008f	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00092	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00097	0f b6 4d db	 movzx	 ecx, BYTE PTR $T4[ebp]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 4e		 je	 SHORT $LN2@GetControl
; Line 1502
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000a2	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?GetID@CDXUTControl@@QBEHXZ ; CDXUTControl::GetID
  000ae	3b 45 08	 cmp	 eax, DWORD PTR _ID$[ebp]
  000b1	75 35		 jne	 SHORT $LN1@GetControl
  000b3	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b6	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	e8 00 00 00 00	 call	 ?GetType@CDXUTControl@@QBEIXZ ; CDXUTControl::GetType
  000c2	3b 45 0c	 cmp	 eax, DWORD PTR _nControlType$[ebp]
  000c5	75 21		 jne	 SHORT $LN1@GetControl
; Line 1504
  000c7	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000ca	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000cf	8b 10		 mov	 edx, DWORD PTR [eax]
  000d1	89 55 c8	 mov	 DWORD PTR $T2[ebp], edx
  000d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000db	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000de	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  000e3	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  000e6	eb 16		 jmp	 SHORT $LN5@GetControl
$LN1@GetControl:
; Line 1505
  000e8	e9 68 ff ff ff	 jmp	 $LN3@GetControl
$LN2@GetControl:
; Line 1506
  000ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f4	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000f7	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 1509
  000fc	33 c0		 xor	 eax, eax
$LN5@GetControl:
; Line 1510
  000fe	52		 push	 edx
  000ff	8b cd		 mov	 ecx, ebp
  00101	50		 push	 eax
  00102	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@GetControl
  00108	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010d	58		 pop	 eax
  0010e	5a		 pop	 edx
  0010f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00112	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00119	59		 pop	 ecx
  0011a	5f		 pop	 edi
  0011b	83 c4 40	 add	 esp, 64			; 00000040H
  0011e	3b ec		 cmp	 ebp, esp
  00120	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c2 08 00	 ret	 8
  0012b	90		 npad	 1
$LN12@GetControl:
  0012c	01 00 00 00	 DD	 1
  00130	00 00 00 00	 DD	 $LN11@GetControl
$LN11@GetControl:
  00134	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00138	0c 00 00 00	 DD	 12			; 0000000cH
  0013c	00 00 00 00	 DD	 $LN9@GetControl
$LN9@GetControl:
  00140	69		 DB	 105			; 00000069H
  00141	74		 DB	 116			; 00000074H
  00142	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z ENDP	; CDXUTDialog::GetControl
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv90 = -64						; size = 4
tv66 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 12
$T4 = -37						; size = 1
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z PROC	; CDXUTDialog::GetControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1481
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1483
  0003a	8d 45 e0	 lea	 eax, DWORD PTR _it$5[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00047	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	eb 08		 jmp	 SHORT $LN4@GetControl
$LN3@GetControl:
  00055	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00058	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN4@GetControl:
  0005d	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0006a	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
  0006f	89 45 c4	 mov	 DWORD PTR tv66[ebp], eax
  00072	8b 55 c4	 mov	 edx, DWORD PTR tv66[ebp]
  00075	89 55 c0	 mov	 DWORD PTR tv90[ebp], edx
  00078	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007c	8b 45 c0	 mov	 eax, DWORD PTR tv90[ebp]
  0007f	50		 push	 eax
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00083	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00088	88 45 db	 mov	 BYTE PTR $T4[ebp], al
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008f	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00092	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00097	0f b6 4d db	 movzx	 ecx, BYTE PTR $T4[ebp]
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 3a		 je	 SHORT $LN2@GetControl
; Line 1485
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000a2	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?GetID@CDXUTControl@@QBEHXZ ; CDXUTControl::GetID
  000ae	3b 45 08	 cmp	 eax, DWORD PTR _ID$[ebp]
  000b1	75 21		 jne	 SHORT $LN1@GetControl
; Line 1487
  000b3	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000b6	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEABQAVCDXUTControl@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	89 55 c8	 mov	 DWORD PTR $T2[ebp], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000ca	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  000cf	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  000d2	eb 16		 jmp	 SHORT $LN5@GetControl
$LN1@GetControl:
; Line 1488
  000d4	e9 7c ff ff ff	 jmp	 $LN3@GetControl
$LN2@GetControl:
; Line 1489
  000d9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e0	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000e3	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
; Line 1492
  000e8	33 c0		 xor	 eax, eax
$LN5@GetControl:
; Line 1493
  000ea	52		 push	 edx
  000eb	8b cd		 mov	 ecx, ebp
  000ed	50		 push	 eax
  000ee	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@GetControl
  000f4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f9	58		 pop	 eax
  000fa	5a		 pop	 edx
  000fb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00105	59		 pop	 ecx
  00106	5f		 pop	 edi
  00107	83 c4 40	 add	 esp, 64			; 00000040H
  0010a	3b ec		 cmp	 ebp, esp
  0010c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 04 00	 ret	 4
  00117	90		 npad	 1
$LN12@GetControl:
  00118	01 00 00 00	 DD	 1
  0011c	00 00 00 00	 DD	 $LN11@GetControl
$LN11@GetControl:
  00120	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00124	0c 00 00 00	 DD	 12			; 0000000cH
  00128	00 00 00 00	 DD	 $LN9@GetControl
$LN9@GetControl:
  0012c	69		 DB	 105			; 00000069H
  0012d	74		 DB	 116			; 00000074H
  0012e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@H@Z ENDP	; CDXUTDialog::GetControl
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetComboBox@CDXUTDialog@@QBEPAVCDXUTComboBox@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?GetComboBox@CDXUTDialog@@QBEPAVCDXUTComboBox@@H@Z PROC	; CDXUTDialog::GetComboBox, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.h
; Line 191
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 192
  0000e	6a 04		 push	 4
  00010	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetControl@CDXUTDialog@@QBEPAVCDXUTControl@@HI@Z ; CDXUTDialog::GetControl
; Line 193
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?GetComboBox@CDXUTDialog@@QBEPAVCDXUTComboBox@@H@Z ENDP	; CDXUTDialog::GetComboBox
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv154 = -64						; size = 4
tv71 = -60						; size = 4
$T2 = -56						; size = 12
$T3 = -41						; size = 1
_it$4 = -36						; size = 12
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pControl$ = 8						; size = 4
?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z PROC	; CDXUTDialog::InitControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1442
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  0001a	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1445
  0003b	83 7d 08 00	 cmp	 DWORD PTR _pControl$[ebp], 0
  0003f	75 0a		 jne	 SHORT $LN6@InitContro
; Line 1446
  00041	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00046	e9 04 01 00 00	 jmp	 $LN7@InitContro
$LN6@InitContro:
; Line 1448
  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00054	e8 00 00 00 00	 call	 ?size@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBEIXZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::size
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  0005c	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 1451
  0005f	8d 55 dc	 lea	 edx, DWORD PTR _it$4[ebp]
  00062	52		 push	 edx
  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  0006c	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00078	eb 08		 jmp	 SHORT $LN5@InitContro
$LN4@InitContro:
  0007a	8d 4d dc	 lea	 ecx, DWORD PTR _it$4[ebp]
  0007d	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
$LN5@InitContro:
  00082	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  00085	50		 push	 eax
  00086	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  0008f	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
  00094	89 45 c4	 mov	 DWORD PTR tv71[ebp], eax
  00097	8b 4d c4	 mov	 ecx, DWORD PTR tv71[ebp]
  0009a	89 4d c0	 mov	 DWORD PTR tv154[ebp], ecx
  0009d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a1	8b 55 c0	 mov	 edx, DWORD PTR tv154[ebp]
  000a4	52		 push	 edx
  000a5	8d 4d dc	 lea	 ecx, DWORD PTR _it$4[ebp]
  000a8	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator!=
  000ad	88 45 d7	 mov	 BYTE PTR $T3[ebp], al
  000b0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000b4	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  000b7	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
  000bc	0f b6 45 d7	 movzx	 eax, BYTE PTR $T3[ebp]
  000c0	85 c0		 test	 eax, eax
  000c2	74 3f		 je	 SHORT $LN3@InitContro
; Line 1453
  000c4	8d 4d dc	 lea	 ecx, DWORD PTR _it$4[ebp]
  000c7	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000cc	8b 30		 mov	 esi, DWORD PTR [eax]
  000ce	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  000d1	e8 00 00 00 00	 call	 ?GetType@CDXUTControl@@QBEIXZ ; CDXUTControl::GetType
  000d6	39 06		 cmp	 DWORD PTR [esi], eax
  000d8	75 24		 jne	 SHORT $LN2@InitContro
; Line 1454
  000da	8d 4d dc	 lea	 ecx, DWORD PTR _it$4[ebp]
  000dd	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	83 c1 08	 add	 ecx, 8
  000e7	51		 push	 ecx
  000e8	8d 4d dc	 lea	 ecx, DWORD PTR _it$4[ebp]
  000eb	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000f0	8b 10		 mov	 edx, DWORD PTR [eax]
  000f2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000f5	50		 push	 eax
  000f6	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  000f9	e8 00 00 00 00	 call	 ?SetElement@CDXUTControl@@QAEJIPAVCDXUTElement@@@Z ; CDXUTControl::SetElement
$LN2@InitContro:
; Line 1455
  000fe	e9 77 ff ff ff	 jmp	 $LN4@InitContro
$LN3@InitContro:
  00103	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010a	8d 4d dc	 lea	 ecx, DWORD PTR _it$4[ebp]
  0010d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
; Line 1457
  00112	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  00115	8b 11		 mov	 edx, DWORD PTR [ecx]
  00117	8b f4		 mov	 esi, esp
  00119	8b 4d 08	 mov	 ecx, DWORD PTR _pControl$[ebp]
  0011c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0011f	ff d0		 call	 eax
  00121	3b f4		 cmp	 esi, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0012b	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0012f	7d 1c		 jge	 SHORT $LN1@InitContro
  00131	6a 01		 push	 1
  00133	68 00 00 00 00	 push	 OFFSET $SG161316
  00138	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  0013b	51		 push	 ecx
  0013c	68 b1 05 00 00	 push	 1457			; 000005b1H
  00141	68 00 00 00 00	 push	 OFFSET $SG161317
  00146	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0014b	eb 02		 jmp	 SHORT $LN7@InitContro
$LN1@InitContro:
; Line 1459
  0014d	33 c0		 xor	 eax, eax
$LN7@InitContro:
; Line 1460
  0014f	52		 push	 edx
  00150	8b cd		 mov	 ecx, ebp
  00152	50		 push	 eax
  00153	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@InitContro
  00159	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0015e	58		 pop	 eax
  0015f	5a		 pop	 edx
  00160	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00163	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016a	59		 pop	 ecx
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	83 c4 40	 add	 esp, 64			; 00000040H
  00170	3b ec		 cmp	 ebp, esp
  00172	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00177	8b e5		 mov	 esp, ebp
  00179	5d		 pop	 ebp
  0017a	c2 04 00	 ret	 4
  0017d	8d 49 00	 npad	 3
$LN14@InitContro:
  00180	01 00 00 00	 DD	 1
  00184	00 00 00 00	 DD	 $LN13@InitContro
$LN13@InitContro:
  00188	dc ff ff ff	 DD	 -36			; ffffffdcH
  0018c	0c 00 00 00	 DD	 12			; 0000000cH
  00190	00 00 00 00	 DD	 $LN11@InitContro
$LN11@InitContro:
  00194	69		 DB	 105			; 00000069H
  00195	74		 DB	 116			; 00000074H
  00196	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _it$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ENDP	; CDXUTDialog::InitControl
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pControl$ = 8						; size = 4
?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z PROC	; CDXUTDialog::AddControl
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1465
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1466
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1468
  0001e	8b 45 08	 mov	 eax, DWORD PTR _pControl$[ebp]
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?InitControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::InitControl
  0002a	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1469
  0002d	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00031	7d 1c		 jge	 SHORT $LN1@AddControl
; Line 1470
  00033	6a 00		 push	 0
  00035	68 00 00 00 00	 push	 OFFSET $SG161328
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _hr$[ebp]
  0003d	51		 push	 ecx
  0003e	68 be 05 00 00	 push	 1470			; 000005beH
  00043	68 00 00 00 00	 push	 OFFSET $SG161329
  00048	e8 00 00 00 00	 call	 _DXTraceW@20
  0004d	eb 14		 jmp	 SHORT $LN2@AddControl
$LN1@AddControl:
; Line 1473
  0004f	8d 55 08	 lea	 edx, DWORD PTR _pControl$[ebp]
  00052	52		 push	 edx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0005c	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAEXABQAVCDXUTControl@@@Z ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::push_back
; Line 1475
  00061	33 c0		 xor	 eax, eax
$LN2@AddControl:
; Line 1476
  00063	83 c4 08	 add	 esp, 8
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ENDP	; CDXUTDialog::AddControl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pListBox$ = -24					; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
_dwStyle$ = 28						; size = 4
_ppCreated$ = 32					; size = 4
?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z PROC ; CDXUTDialog::AddListBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1416
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1417
  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1418
  00046	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004b	68 68 01 00 00	 push	 360			; 00000168H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00066	74 11		 je	 SHORT $LN6@AddListBox
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CDXUTListBox@@QAE@PAVCDXUTDialog@@@Z ; CDXUTListBox::CDXUTListBox
  00074	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00077	eb 07		 jmp	 SHORT $LN7@AddListBox
$LN6@AddListBox:
  00079	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@AddListBox:
  00080	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00083	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00090	89 55 e8	 mov	 DWORD PTR _pListBox$[ebp], edx
; Line 1420
  00093	83 7d 20 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00097	74 08		 je	 SHORT $LN3@AddListBox
; Line 1421
  00099	8b 45 20	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _pListBox$[ebp]
  0009f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@AddListBox:
; Line 1423
  000a1	83 7d e8 00	 cmp	 DWORD PTR _pListBox$[ebp], 0
  000a5	75 07		 jne	 SHORT $LN2@AddListBox
; Line 1424
  000a7	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ac	eb 54		 jmp	 SHORT $LN4@AddListBox
$LN2@AddListBox:
; Line 1426
  000ae	8b 55 e8	 mov	 edx, DWORD PTR _pListBox$[ebp]
  000b1	52		 push	 edx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000ba	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1427
  000bd	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7d 05		 jge	 SHORT $LN1@AddListBox
; Line 1428
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000c6	eb 3a		 jmp	 SHORT $LN4@AddListBox
$LN1@AddListBox:
; Line 1431
  000c8	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d e8	 mov	 ecx, DWORD PTR _pListBox$[ebp]
  000cf	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1432
  000d4	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  000d7	51		 push	 ecx
  000d8	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  000db	52		 push	 edx
  000dc	8b 4d e8	 mov	 ecx, DWORD PTR _pListBox$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1433
  000e4	8b 45 18	 mov	 eax, DWORD PTR _height$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d 14	 mov	 ecx, DWORD PTR _width$[ebp]
  000eb	51		 push	 ecx
  000ec	8b 4d e8	 mov	 ecx, DWORD PTR _pListBox$[ebp]
  000ef	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1434
  000f4	8b 55 1c	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  000f7	52		 push	 edx
  000f8	8b 4d e8	 mov	 ecx, DWORD PTR _pListBox$[ebp]
  000fb	e8 00 00 00 00	 call	 ?SetStyle@CDXUTListBox@@QAEXK@Z ; CDXUTListBox::SetStyle
; Line 1436
  00100	33 c0		 xor	 eax, eax
$LN4@AddListBox:
; Line 1437
  00102	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00105	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010c	59		 pop	 ecx
  0010d	83 c4 24	 add	 esp, 36			; 00000024H
  00110	3b ec		 cmp	 ebp, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddListBox@CDXUTDialog@@QAEJHHHHHKPAPAVCDXUTListBox@@@Z ENDP ; CDXUTDialog::AddListBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pEditBox$ = -24					; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_strText$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_width$ = 24						; size = 4
_height$ = 28						; size = 4
_bIsDefault$ = 32					; size = 1
_ppCreated$ = 36					; size = 4
?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z PROC ; CDXUTDialog::AddEditBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1385
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1386
  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1388
  00046	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004b	68 48 01 00 00	 push	 328			; 00000148H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00066	74 11		 je	 SHORT $LN7@AddEditBox
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CDXUTEditBox@@QAE@PAVCDXUTDialog@@@Z ; CDXUTEditBox::CDXUTEditBox
  00074	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00077	eb 07		 jmp	 SHORT $LN8@AddEditBox
$LN7@AddEditBox:
  00079	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN8@AddEditBox:
  00080	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00083	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00090	89 55 e8	 mov	 DWORD PTR _pEditBox$[ebp], edx
; Line 1390
  00093	83 7d 24 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00097	74 08		 je	 SHORT $LN4@AddEditBox
; Line 1391
  00099	8b 45 24	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  0009f	89 08		 mov	 DWORD PTR [eax], ecx
$LN4@AddEditBox:
; Line 1393
  000a1	83 7d e8 00	 cmp	 DWORD PTR _pEditBox$[ebp], 0
  000a5	75 07		 jne	 SHORT $LN3@AddEditBox
; Line 1394
  000a7	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ac	eb 65		 jmp	 SHORT $LN5@AddEditBox
$LN3@AddEditBox:
; Line 1396
  000ae	8b 55 e8	 mov	 edx, DWORD PTR _pEditBox$[ebp]
  000b1	52		 push	 edx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000ba	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1397
  000bd	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7d 05		 jge	 SHORT $LN2@AddEditBox
; Line 1398
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000c6	eb 4b		 jmp	 SHORT $LN5@AddEditBox
$LN2@AddEditBox:
; Line 1401
  000c8	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d e8	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000cf	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1402
  000d4	8b 4d 14	 mov	 ecx, DWORD PTR _y$[ebp]
  000d7	51		 push	 ecx
  000d8	8b 55 10	 mov	 edx, DWORD PTR _x$[ebp]
  000db	52		 push	 edx
  000dc	8b 4d e8	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1403
  000e4	8b 45 1c	 mov	 eax, DWORD PTR _height$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d 18	 mov	 ecx, DWORD PTR _width$[ebp]
  000eb	51		 push	 ecx
  000ec	8b 4d e8	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  000ef	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1404
  000f4	8b 55 e8	 mov	 edx, DWORD PTR _pEditBox$[ebp]
  000f7	8a 45 20	 mov	 al, BYTE PTR _bIsDefault$[ebp]
  000fa	88 42 07	 mov	 BYTE PTR [edx+7], al
; Line 1406
  000fd	83 7d 0c 00	 cmp	 DWORD PTR _strText$[ebp], 0
  00101	74 0e		 je	 SHORT $LN1@AddEditBox
; Line 1407
  00103	6a 00		 push	 0
  00105	8b 4d 0c	 mov	 ecx, DWORD PTR _strText$[ebp]
  00108	51		 push	 ecx
  00109	8b 4d e8	 mov	 ecx, DWORD PTR _pEditBox$[ebp]
  0010c	e8 00 00 00 00	 call	 ?SetText@CDXUTEditBox@@QAEXPB_W_N@Z ; CDXUTEditBox::SetText
$LN1@AddEditBox:
; Line 1409
  00111	33 c0		 xor	 eax, eax
$LN5@AddEditBox:
; Line 1410
  00113	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00116	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011d	59		 pop	 ecx
  0011e	83 c4 24	 add	 esp, 36			; 00000024H
  00121	3b ec		 cmp	 ebp, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddEditBox@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTEditBox@@@Z ENDP ; CDXUTDialog::AddEditBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pSlider$ = -24						; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
_min$ = 28						; size = 4
_max$ = 32						; size = 4
_value$ = 36						; size = 4
_bIsDefault$ = 40					; size = 1
_ppCreated$ = 44					; size = 4
?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z PROC ; CDXUTDialog::AddSlider
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00020	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00023	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00026	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00029	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1354
  00040	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1356
  00047	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004c	68 80 00 00 00	 push	 128			; 00000080H
  00051	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00056	83 c4 08	 add	 esp, 8
  00059	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00067	74 11		 je	 SHORT $LN6@AddSlider
  00069	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  00070	e8 00 00 00 00	 call	 ??0CDXUTSlider@@QAE@PAVCDXUTDialog@@@Z ; CDXUTSlider::CDXUTSlider
  00075	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00078	eb 07		 jmp	 SHORT $LN7@AddSlider
$LN6@AddSlider:
  0007a	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@AddSlider:
  00081	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00084	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008e	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00091	89 55 e8	 mov	 DWORD PTR _pSlider$[ebp], edx
; Line 1358
  00094	83 7d 2c 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00098	74 08		 je	 SHORT $LN3@AddSlider
; Line 1359
  0009a	8b 45 2c	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009d	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@AddSlider:
; Line 1361
  000a2	83 7d e8 00	 cmp	 DWORD PTR _pSlider$[ebp], 0
  000a6	75 0a		 jne	 SHORT $LN2@AddSlider
; Line 1362
  000a8	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ad	e9 83 00 00 00	 jmp	 $LN4@AddSlider
$LN2@AddSlider:
; Line 1364
  000b2	8b 55 e8	 mov	 edx, DWORD PTR _pSlider$[ebp]
  000b5	52		 push	 edx
  000b6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000be	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1365
  000c1	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c5	7d 05		 jge	 SHORT $LN1@AddSlider
; Line 1366
  000c7	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000ca	eb 69		 jmp	 SHORT $LN4@AddSlider
$LN1@AddSlider:
; Line 1369
  000cc	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  000d3	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1370
  000d8	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  000db	51		 push	 ecx
  000dc	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  000df	52		 push	 edx
  000e0	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  000e3	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1371
  000e8	8b 45 18	 mov	 eax, DWORD PTR _height$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d 14	 mov	 ecx, DWORD PTR _width$[ebp]
  000ef	51		 push	 ecx
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  000f3	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1372
  000f8	8b 55 e8	 mov	 edx, DWORD PTR _pSlider$[ebp]
  000fb	8a 45 28	 mov	 al, BYTE PTR _bIsDefault$[ebp]
  000fe	88 42 07	 mov	 BYTE PTR [edx+7], al
; Line 1373
  00101	8b 4d 20	 mov	 ecx, DWORD PTR _max$[ebp]
  00104	51		 push	 ecx
  00105	8b 55 1c	 mov	 edx, DWORD PTR _min$[ebp]
  00108	52		 push	 edx
  00109	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  0010c	e8 00 00 00 00	 call	 ?SetRange@CDXUTSlider@@QAEXHH@Z ; CDXUTSlider::SetRange
; Line 1374
  00111	8b 45 24	 mov	 eax, DWORD PTR _value$[ebp]
  00114	50		 push	 eax
  00115	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  00118	e8 00 00 00 00	 call	 ?SetValue@CDXUTSlider@@QAEXH@Z ; CDXUTSlider::SetValue
; Line 1375
  0011d	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  00120	8b 11		 mov	 edx, DWORD PTR [ecx]
  00122	8b f4		 mov	 esi, esp
  00124	8b 4d e8	 mov	 ecx, DWORD PTR _pSlider$[ebp]
  00127	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0012a	ff d0		 call	 eax
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1377
  00133	33 c0		 xor	 eax, eax
$LN4@AddSlider:
; Line 1378
  00135	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00138	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013f	59		 pop	 ecx
  00140	5e		 pop	 esi
  00141	83 c4 24	 add	 esp, 36			; 00000024H
  00144	3b ec		 cmp	 ebp, esp
  00146	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014b	8b e5		 mov	 esp, ebp
  0014d	5d		 pop	 ebp
  0014e	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddSlider@CDXUTDialog@@QAEJHHHHHHHH_NPAPAVCDXUTSlider@@@Z ENDP ; CDXUTDialog::AddSlider
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pComboBox$ = -24					; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
_nHotkey$ = 28						; size = 4
_bIsDefault$ = 32					; size = 1
_ppCreated$ = 36					; size = 4
?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z PROC ; CDXUTDialog::AddComboBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1324
  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1326
  00046	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004b	68 88 03 00 00	 push	 904			; 00000388H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00066	74 11		 je	 SHORT $LN6@AddComboBo
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CDXUTComboBox@@QAE@PAVCDXUTDialog@@@Z ; CDXUTComboBox::CDXUTComboBox
  00074	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00077	eb 07		 jmp	 SHORT $LN7@AddComboBo
$LN6@AddComboBo:
  00079	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@AddComboBo:
  00080	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00083	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00090	89 55 e8	 mov	 DWORD PTR _pComboBox$[ebp], edx
; Line 1328
  00093	83 7d 24 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00097	74 08		 je	 SHORT $LN3@AddComboBo
; Line 1329
  00099	8b 45 24	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0009f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@AddComboBo:
; Line 1331
  000a1	83 7d e8 00	 cmp	 DWORD PTR _pComboBox$[ebp], 0
  000a5	75 07		 jne	 SHORT $LN2@AddComboBo
; Line 1332
  000a7	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ac	eb 5d		 jmp	 SHORT $LN4@AddComboBo
$LN2@AddComboBo:
; Line 1334
  000ae	8b 55 e8	 mov	 edx, DWORD PTR _pComboBox$[ebp]
  000b1	52		 push	 edx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000ba	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1335
  000bd	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7d 05		 jge	 SHORT $LN1@AddComboBo
; Line 1336
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000c6	eb 43		 jmp	 SHORT $LN4@AddComboBo
$LN1@AddComboBo:
; Line 1339
  000c8	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d e8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000cf	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1340
  000d4	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  000d7	51		 push	 ecx
  000d8	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  000db	52		 push	 edx
  000dc	8b 4d e8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1341
  000e4	8b 45 18	 mov	 eax, DWORD PTR _height$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d 14	 mov	 ecx, DWORD PTR _width$[ebp]
  000eb	51		 push	 ecx
  000ec	8b 4d e8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000ef	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1342
  000f4	8b 55 1c	 mov	 edx, DWORD PTR _nHotkey$[ebp]
  000f7	52		 push	 edx
  000f8	8b 4d e8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000fb	e8 00 00 00 00	 call	 ?SetHotkey@CDXUTControl@@QAEXI@Z ; CDXUTControl::SetHotkey
; Line 1343
  00100	8b 45 e8	 mov	 eax, DWORD PTR _pComboBox$[ebp]
  00103	8a 4d 20	 mov	 cl, BYTE PTR _bIsDefault$[ebp]
  00106	88 48 07	 mov	 BYTE PTR [eax+7], cl
; Line 1345
  00109	33 c0		 xor	 eax, eax
$LN4@AddComboBo:
; Line 1346
  0010b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00115	59		 pop	 ecx
  00116	83 c4 24	 add	 esp, 36			; 00000024H
  00119	3b ec		 cmp	 ebp, esp
  0011b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddComboBox@CDXUTDialog@@QAEJHHHHHI_NPAPAVCDXUTComboBox@@@Z ENDP ; CDXUTDialog::AddComboBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pRadioButton$ = -24					; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_nButtonGroup$ = 12					; size = 4
_strText$ = 16						; size = 4
_x$ = 20						; size = 4
_y$ = 24						; size = 4
_width$ = 28						; size = 4
_height$ = 32						; size = 4
_bChecked$ = 36						; size = 1
_nHotkey$ = 40						; size = 4
_bIsDefault$ = 44					; size = 1
_ppCreated$ = 48					; size = 4
?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z PROC ; CDXUTDialog::AddRadioButton
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1289
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1290
  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1292
  00046	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004b	68 88 02 00 00	 push	 648			; 00000288H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00066	74 11		 je	 SHORT $LN6@AddRadioBu
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CDXUTRadioButton@@QAE@PAVCDXUTDialog@@@Z ; CDXUTRadioButton::CDXUTRadioButton
  00074	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00077	eb 07		 jmp	 SHORT $LN7@AddRadioBu
$LN6@AddRadioBu:
  00079	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@AddRadioBu:
  00080	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00083	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00090	89 55 e8	 mov	 DWORD PTR _pRadioButton$[ebp], edx
; Line 1294
  00093	83 7d 30 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00097	74 08		 je	 SHORT $LN3@AddRadioBu
; Line 1295
  00099	8b 45 30	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  0009f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@AddRadioBu:
; Line 1297
  000a1	83 7d e8 00	 cmp	 DWORD PTR _pRadioButton$[ebp], 0
  000a5	75 0a		 jne	 SHORT $LN2@AddRadioBu
; Line 1298
  000a7	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ac	e9 93 00 00 00	 jmp	 $LN4@AddRadioBu
$LN2@AddRadioBu:
; Line 1300
  000b1	8b 55 e8	 mov	 edx, DWORD PTR _pRadioButton$[ebp]
  000b4	52		 push	 edx
  000b5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000bd	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1301
  000c0	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c4	7d 05		 jge	 SHORT $LN1@AddRadioBu
; Line 1302
  000c6	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000c9	eb 79		 jmp	 SHORT $LN4@AddRadioBu
$LN1@AddRadioBu:
; Line 1305
  000cb	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000ce	50		 push	 eax
  000cf	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  000d2	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1306
  000d7	8b 4d 10	 mov	 ecx, DWORD PTR _strText$[ebp]
  000da	51		 push	 ecx
  000db	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  000de	e8 00 00 00 00	 call	 ?SetText@CDXUTStatic@@QAEJPB_W@Z ; CDXUTStatic::SetText
; Line 1307
  000e3	8b 55 0c	 mov	 edx, DWORD PTR _nButtonGroup$[ebp]
  000e6	52		 push	 edx
  000e7	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  000ea	e8 00 00 00 00	 call	 ?SetButtonGroup@CDXUTRadioButton@@QAEXI@Z ; CDXUTRadioButton::SetButtonGroup
; Line 1308
  000ef	8b 45 18	 mov	 eax, DWORD PTR _y$[ebp]
  000f2	50		 push	 eax
  000f3	8b 4d 14	 mov	 ecx, DWORD PTR _x$[ebp]
  000f6	51		 push	 ecx
  000f7	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  000fa	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1309
  000ff	8b 55 20	 mov	 edx, DWORD PTR _height$[ebp]
  00102	52		 push	 edx
  00103	8b 45 1c	 mov	 eax, DWORD PTR _width$[ebp]
  00106	50		 push	 eax
  00107	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  0010a	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1310
  0010f	8b 4d 28	 mov	 ecx, DWORD PTR _nHotkey$[ebp]
  00112	51		 push	 ecx
  00113	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  00116	e8 00 00 00 00	 call	 ?SetHotkey@CDXUTControl@@QAEXI@Z ; CDXUTControl::SetHotkey
; Line 1311
  0011b	6a 01		 push	 1
  0011d	0f b6 55 24	 movzx	 edx, BYTE PTR _bChecked$[ebp]
  00121	52		 push	 edx
  00122	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  00125	e8 00 00 00 00	 call	 ?SetChecked@CDXUTRadioButton@@QAEX_N0@Z ; CDXUTRadioButton::SetChecked
; Line 1312
  0012a	8b 45 e8	 mov	 eax, DWORD PTR _pRadioButton$[ebp]
  0012d	8a 4d 2c	 mov	 cl, BYTE PTR _bIsDefault$[ebp]
  00130	88 48 07	 mov	 BYTE PTR [eax+7], cl
; Line 1313
  00133	6a 01		 push	 1
  00135	0f b6 55 24	 movzx	 edx, BYTE PTR _bChecked$[ebp]
  00139	52		 push	 edx
  0013a	8b 4d e8	 mov	 ecx, DWORD PTR _pRadioButton$[ebp]
  0013d	e8 00 00 00 00	 call	 ?SetChecked@CDXUTRadioButton@@QAEX_N0@Z ; CDXUTRadioButton::SetChecked
; Line 1315
  00142	33 c0		 xor	 eax, eax
$LN4@AddRadioBu:
; Line 1316
  00144	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00147	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014e	59		 pop	 ecx
  0014f	83 c4 24	 add	 esp, 36			; 00000024H
  00152	3b ec		 cmp	 ebp, esp
  00154	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddRadioButton@CDXUTDialog@@QAEJHIPB_WHHHH_NI1PAPAVCDXUTRadioButton@@@Z ENDP ; CDXUTDialog::AddRadioButton
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pCheckBox$ = -24					; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_strText$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_width$ = 24						; size = 4
_height$ = 28						; size = 4
_bChecked$ = 32						; size = 1
_nHotkey$ = 36						; size = 4
_bIsDefault$ = 40					; size = 1
_ppCreated$ = 44					; size = 4
?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z PROC ; CDXUTDialog::AddCheckBox
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1257
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1258
  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1260
  00046	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004b	68 84 02 00 00	 push	 644			; 00000284H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00066	74 11		 je	 SHORT $LN6@AddCheckBo
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CDXUTCheckBox@@QAE@PAVCDXUTDialog@@@Z ; CDXUTCheckBox::CDXUTCheckBox
  00074	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00077	eb 07		 jmp	 SHORT $LN7@AddCheckBo
$LN6@AddCheckBo:
  00079	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@AddCheckBo:
  00080	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00083	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00090	89 55 e8	 mov	 DWORD PTR _pCheckBox$[ebp], edx
; Line 1262
  00093	83 7d 2c 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00097	74 08		 je	 SHORT $LN3@AddCheckBo
; Line 1263
  00099	8b 45 2c	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  0009f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@AddCheckBo:
; Line 1265
  000a1	83 7d e8 00	 cmp	 DWORD PTR _pCheckBox$[ebp], 0
  000a5	75 07		 jne	 SHORT $LN2@AddCheckBo
; Line 1266
  000a7	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ac	eb 76		 jmp	 SHORT $LN4@AddCheckBo
$LN2@AddCheckBo:
; Line 1268
  000ae	8b 55 e8	 mov	 edx, DWORD PTR _pCheckBox$[ebp]
  000b1	52		 push	 edx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000ba	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1269
  000bd	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7d 05		 jge	 SHORT $LN1@AddCheckBo
; Line 1270
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000c6	eb 5c		 jmp	 SHORT $LN4@AddCheckBo
$LN1@AddCheckBo:
; Line 1273
  000c8	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  000cf	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1274
  000d4	8b 4d 0c	 mov	 ecx, DWORD PTR _strText$[ebp]
  000d7	51		 push	 ecx
  000d8	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  000db	e8 00 00 00 00	 call	 ?SetText@CDXUTStatic@@QAEJPB_W@Z ; CDXUTStatic::SetText
; Line 1275
  000e0	8b 55 14	 mov	 edx, DWORD PTR _y$[ebp]
  000e3	52		 push	 edx
  000e4	8b 45 10	 mov	 eax, DWORD PTR _x$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  000eb	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1276
  000f0	8b 4d 1c	 mov	 ecx, DWORD PTR _height$[ebp]
  000f3	51		 push	 ecx
  000f4	8b 55 18	 mov	 edx, DWORD PTR _width$[ebp]
  000f7	52		 push	 edx
  000f8	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  000fb	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1277
  00100	8b 45 24	 mov	 eax, DWORD PTR _nHotkey$[ebp]
  00103	50		 push	 eax
  00104	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  00107	e8 00 00 00 00	 call	 ?SetHotkey@CDXUTControl@@QAEXI@Z ; CDXUTControl::SetHotkey
; Line 1278
  0010c	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  0010f	8a 55 28	 mov	 dl, BYTE PTR _bIsDefault$[ebp]
  00112	88 51 07	 mov	 BYTE PTR [ecx+7], dl
; Line 1279
  00115	0f b6 45 20	 movzx	 eax, BYTE PTR _bChecked$[ebp]
  00119	50		 push	 eax
  0011a	8b 4d e8	 mov	 ecx, DWORD PTR _pCheckBox$[ebp]
  0011d	e8 00 00 00 00	 call	 ?SetChecked@CDXUTCheckBox@@QAEX_N@Z ; CDXUTCheckBox::SetChecked
; Line 1281
  00122	33 c0		 xor	 eax, eax
$LN4@AddCheckBo:
; Line 1282
  00124	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00127	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012e	59		 pop	 ecx
  0012f	83 c4 24	 add	 esp, 36			; 00000024H
  00132	3b ec		 cmp	 ebp, esp
  00134	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddCheckBox@CDXUTDialog@@QAEJHPB_WHHHH_NI1PAPAVCDXUTCheckBox@@@Z ENDP ; CDXUTDialog::AddCheckBox
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pButton$ = -24						; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_strText$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_width$ = 24						; size = 4
_height$ = 28						; size = 4
_nHotkey$ = 32						; size = 4
_bIsDefault$ = 36					; size = 1
_ppCreated$ = 40					; size = 4
?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z PROC ; CDXUTDialog::AddButton
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1226
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1227
  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1229
  00046	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004b	68 60 02 00 00	 push	 608			; 00000260H
  00050	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00066	74 11		 je	 SHORT $LN6@AddButton
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CDXUTButton@@QAE@PAVCDXUTDialog@@@Z ; CDXUTButton::CDXUTButton
  00074	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00077	eb 07		 jmp	 SHORT $LN7@AddButton
$LN6@AddButton:
  00079	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@AddButton:
  00080	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00083	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00090	89 55 e8	 mov	 DWORD PTR _pButton$[ebp], edx
; Line 1231
  00093	83 7d 28 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00097	74 08		 je	 SHORT $LN3@AddButton
; Line 1232
  00099	8b 45 28	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _pButton$[ebp]
  0009f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@AddButton:
; Line 1234
  000a1	83 7d e8 00	 cmp	 DWORD PTR _pButton$[ebp], 0
  000a5	75 07		 jne	 SHORT $LN2@AddButton
; Line 1235
  000a7	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ac	eb 69		 jmp	 SHORT $LN4@AddButton
$LN2@AddButton:
; Line 1237
  000ae	8b 55 e8	 mov	 edx, DWORD PTR _pButton$[ebp]
  000b1	52		 push	 edx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000ba	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1238
  000bd	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7d 05		 jge	 SHORT $LN1@AddButton
; Line 1239
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000c6	eb 4f		 jmp	 SHORT $LN4@AddButton
$LN1@AddButton:
; Line 1242
  000c8	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d e8	 mov	 ecx, DWORD PTR _pButton$[ebp]
  000cf	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1243
  000d4	8b 4d 0c	 mov	 ecx, DWORD PTR _strText$[ebp]
  000d7	51		 push	 ecx
  000d8	8b 4d e8	 mov	 ecx, DWORD PTR _pButton$[ebp]
  000db	e8 00 00 00 00	 call	 ?SetText@CDXUTStatic@@QAEJPB_W@Z ; CDXUTStatic::SetText
; Line 1244
  000e0	8b 55 14	 mov	 edx, DWORD PTR _y$[ebp]
  000e3	52		 push	 edx
  000e4	8b 45 10	 mov	 eax, DWORD PTR _x$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d e8	 mov	 ecx, DWORD PTR _pButton$[ebp]
  000eb	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1245
  000f0	8b 4d 1c	 mov	 ecx, DWORD PTR _height$[ebp]
  000f3	51		 push	 ecx
  000f4	8b 55 18	 mov	 edx, DWORD PTR _width$[ebp]
  000f7	52		 push	 edx
  000f8	8b 4d e8	 mov	 ecx, DWORD PTR _pButton$[ebp]
  000fb	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1246
  00100	8b 45 20	 mov	 eax, DWORD PTR _nHotkey$[ebp]
  00103	50		 push	 eax
  00104	8b 4d e8	 mov	 ecx, DWORD PTR _pButton$[ebp]
  00107	e8 00 00 00 00	 call	 ?SetHotkey@CDXUTControl@@QAEXI@Z ; CDXUTControl::SetHotkey
; Line 1247
  0010c	8b 4d e8	 mov	 ecx, DWORD PTR _pButton$[ebp]
  0010f	8a 55 24	 mov	 dl, BYTE PTR _bIsDefault$[ebp]
  00112	88 51 07	 mov	 BYTE PTR [ecx+7], dl
; Line 1249
  00115	33 c0		 xor	 eax, eax
$LN4@AddButton:
; Line 1250
  00117	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00121	59		 pop	 ecx
  00122	83 c4 24	 add	 esp, 36			; 00000024H
  00125	3b ec		 cmp	 ebp, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddButton@CDXUTDialog@@QAEJHPB_WHHHHI_NPAPAVCDXUTButton@@@Z ENDP ; CDXUTDialog::AddButton
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
_pStatic$ = -24						; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_strText$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_width$ = 24						; size = 4
_height$ = 28						; size = 4
_bIsDefault$ = 32					; size = 1
_ppCreated$ = 36					; size = 4
?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z PROC ; CDXUTDialog::AddStatic
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 1196
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1197
  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 1199
  00046	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0004b	68 5c 02 00 00	 push	 604			; 0000025cH
  00050	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	83 7d e0 00	 cmp	 DWORD PTR $T2[ebp], 0
  00066	74 11		 je	 SHORT $LN6@AddStatic
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR $T2[ebp]
  0006f	e8 00 00 00 00	 call	 ??0CDXUTStatic@@QAE@PAVCDXUTDialog@@@Z ; CDXUTStatic::CDXUTStatic
  00074	89 45 dc	 mov	 DWORD PTR tv74[ebp], eax
  00077	eb 07		 jmp	 SHORT $LN7@AddStatic
$LN6@AddStatic:
  00079	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@AddStatic:
  00080	8b 4d dc	 mov	 ecx, DWORD PTR tv74[ebp]
  00083	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
  00090	89 55 e8	 mov	 DWORD PTR _pStatic$[ebp], edx
; Line 1201
  00093	83 7d 24 00	 cmp	 DWORD PTR _ppCreated$[ebp], 0
  00097	74 08		 je	 SHORT $LN3@AddStatic
; Line 1202
  00099	8b 45 24	 mov	 eax, DWORD PTR _ppCreated$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0009f	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@AddStatic:
; Line 1204
  000a1	83 7d e8 00	 cmp	 DWORD PTR _pStatic$[ebp], 0
  000a5	75 07		 jne	 SHORT $LN2@AddStatic
; Line 1205
  000a7	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  000ac	eb 5d		 jmp	 SHORT $LN4@AddStatic
$LN2@AddStatic:
; Line 1207
  000ae	8b 55 e8	 mov	 edx, DWORD PTR _pStatic$[ebp]
  000b1	52		 push	 edx
  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?AddControl@CDXUTDialog@@QAEJPAVCDXUTControl@@@Z ; CDXUTDialog::AddControl
  000ba	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
; Line 1208
  000bd	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7d 05		 jge	 SHORT $LN1@AddStatic
; Line 1209
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  000c6	eb 43		 jmp	 SHORT $LN4@AddStatic
$LN1@AddStatic:
; Line 1212
  000c8	8b 45 08	 mov	 eax, DWORD PTR _ID$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d e8	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  000cf	e8 00 00 00 00	 call	 ?SetID@CDXUTControl@@QAEXH@Z ; CDXUTControl::SetID
; Line 1213
  000d4	8b 4d 0c	 mov	 ecx, DWORD PTR _strText$[ebp]
  000d7	51		 push	 ecx
  000d8	8b 4d e8	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  000db	e8 00 00 00 00	 call	 ?SetText@CDXUTStatic@@QAEJPB_W@Z ; CDXUTStatic::SetText
; Line 1214
  000e0	8b 55 14	 mov	 edx, DWORD PTR _y$[ebp]
  000e3	52		 push	 edx
  000e4	8b 45 10	 mov	 eax, DWORD PTR _x$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d e8	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  000eb	e8 00 00 00 00	 call	 ?SetLocation@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetLocation
; Line 1215
  000f0	8b 4d 1c	 mov	 ecx, DWORD PTR _height$[ebp]
  000f3	51		 push	 ecx
  000f4	8b 55 18	 mov	 edx, DWORD PTR _width$[ebp]
  000f7	52		 push	 edx
  000f8	8b 4d e8	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  000fb	e8 00 00 00 00	 call	 ?SetSize@CDXUTControl@@QAEXHH@Z ; CDXUTControl::SetSize
; Line 1216
  00100	8b 45 e8	 mov	 eax, DWORD PTR _pStatic$[ebp]
  00103	8a 4d 20	 mov	 cl, BYTE PTR _bIsDefault$[ebp]
  00106	88 48 07	 mov	 BYTE PTR [eax+7], cl
; Line 1218
  00109	33 c0		 xor	 eax, eax
$LN4@AddStatic:
; Line 1219
  0010b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00115	59		 pop	 ecx
  00116	83 c4 24	 add	 esp, 36			; 00000024H
  00119	3b ec		 cmp	 ebp, esp
  0011b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  00005	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXABUnothrow_t@std@@@Z ; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddStatic@CDXUTDialog@@QAEJHPB_WHHHH_NPAPAVCDXUTStatic@@@Z ENDP ; CDXUTDialog::AddStatic
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv409 = -212						; size = 4
tv308 = -205						; size = 1
tv302 = -204						; size = 4
tv288 = -200						; size = 4
tv281 = -196						; size = 4
tv431 = -192						; size = 4
tv249 = -188						; size = 4
tv427 = -184						; size = 4
tv215 = -180						; size = 4
tv185 = -176						; size = 4
tv162 = -172						; size = 4
$T2 = -165						; size = 1
$T3 = -164						; size = 12
$T4 = -150						; size = 1
$T5 = -149						; size = 1
$T6 = -148						; size = 12
$T7 = -133						; size = 1
_pControl$8 = -132					; size = 4
_mousePoint$9 = -124					; size = 8
_bShiftDown$10 = -109					; size = 1
_it$11 = -104						; size = 12
_it$12 = -84						; size = 12
_pt$13 = -64						; size = 8
_mousePoint$14 = -48					; size = 8
_mousePoint$15 = -32					; size = 8
_bHandled$ = -17					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z PROC	; CDXUTDialog::MsgProc
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 807
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00020	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	59		 pop	 ecx
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 808
  00041	c6 45 ef 00	 mov	 BYTE PTR _bHandled$[ebp], 0
; Line 811
  00045	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00048	0f b6 48 14	 movzx	 ecx, BYTE PTR [eax+20]
  0004c	85 c9		 test	 ecx, ecx
  0004e	75 07		 jne	 SHORT $LN55@MsgProc
; Line 812
  00050	32 c0		 xor	 al, al
  00052	e9 a1 08 00 00	 jmp	 $LN56@MsgProc
$LN55@MsgProc:
; Line 817
  00057	e8 00 00 00 00	 call	 ?DXUTGetAutomation@@YG_NXZ ; DXUTGetAutomation
  0005c	0f b6 d0	 movzx	 edx, al
  0005f	85 d2		 test	 edx, edx
  00061	74 29		 je	 SHORT $LN54@MsgProc
  00063	81 7d 0c 01 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 513 ; 00000201H
  0006a	74 12		 je	 SHORT $LN53@MsgProc
  0006c	81 7d 0c 03 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 515 ; 00000203H
  00073	74 09		 je	 SHORT $LN53@MsgProc
  00075	81 7d 0c 00 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 256 ; 00000100H
  0007c	75 0e		 jne	 SHORT $LN54@MsgProc
$LN53@MsgProc:
; Line 819
  0007e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 88 3c 02 00
	00		 mov	 ecx, DWORD PTR [eax+572]
  00087	e8 00 00 00 00	 call	 ?EnableKeyboardInputForAllDialogs@CDXUTDialogResourceManager@@QAEXXZ ; CDXUTDialogResourceManager::EnableKeyboardInputForAllDialogs
$LN54@MsgProc:
; Line 823
  0008c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	0f b6 51 15	 movzx	 edx, BYTE PTR [ecx+21]
  00093	85 d2		 test	 edx, edx
  00095	0f 84 7d 01 00
	00		 je	 $LN52@MsgProc
; Line 825
  0009b	81 7d 0c 01 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 513 ; 00000201H
  000a2	74 0d		 je	 SHORT $LN50@MsgProc
  000a4	81 7d 0c 03 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 515 ; 00000203H
  000ab	0f 85 92 00 00
	00		 jne	 $LN51@MsgProc
$LN50@MsgProc:
; Line 830
  000b1	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  000b4	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000b9	0f bf c8	 movsx	 ecx, ax
  000bc	89 4d e0	 mov	 DWORD PTR _mousePoint$15[ebp], ecx
  000bf	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  000c2	c1 ea 10	 shr	 edx, 16			; 00000010H
  000c5	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  000cb	0f bf c2	 movsx	 eax, dx
  000ce	89 45 e4	 mov	 DWORD PTR _mousePoint$15[ebp+4], eax
; Line 833
  000d1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 55 e0	 mov	 edx, DWORD PTR _mousePoint$15[ebp]
  000d7	3b 91 18 02 00
	00		 cmp	 edx, DWORD PTR [ecx+536]
  000dd	7c 5f		 jl	 SHORT $LN49@MsgProc
  000df	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8b 88 18 02 00
	00		 mov	 ecx, DWORD PTR [eax+536]
  000e8	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000eb	03 8a 20 02 00
	00		 add	 ecx, DWORD PTR [edx+544]
  000f1	39 4d e0	 cmp	 DWORD PTR _mousePoint$15[ebp], ecx
  000f4	7d 48		 jge	 SHORT $LN49@MsgProc
  000f6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000f9	8b 4d e4	 mov	 ecx, DWORD PTR _mousePoint$15[ebp+4]
  000fc	3b 88 1c 02 00
	00		 cmp	 ecx, DWORD PTR [eax+540]
  00102	7c 3a		 jl	 SHORT $LN49@MsgProc
  00104	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00107	8b 82 1c 02 00
	00		 mov	 eax, DWORD PTR [edx+540]
  0010d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	03 81 28 02 00
	00		 add	 eax, DWORD PTR [ecx+552]
  00116	39 45 e4	 cmp	 DWORD PTR _mousePoint$15[ebp+4], eax
  00119	7d 23		 jge	 SHORT $LN49@MsgProc
; Line 835
  0011b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0011e	c6 42 17 01	 mov	 BYTE PTR [edx+23], 1
; Line 836
  00122	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00127	8b f4		 mov	 esi, esp
  00129	50		 push	 eax
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4
  00130	3b f4		 cmp	 esi, esp
  00132	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 837
  00137	b0 01		 mov	 al, 1
  00139	e9 ba 07 00 00	 jmp	 $LN56@MsgProc
$LN49@MsgProc:
; Line 839
  0013e	e9 d5 00 00 00	 jmp	 $LN52@MsgProc
$LN51@MsgProc:
; Line 840
  00143	81 7d 0c 02 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 514 ; 00000202H
  0014a	0f 85 c8 00 00
	00		 jne	 $LN52@MsgProc
  00150	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00153	0f b6 48 17	 movzx	 ecx, BYTE PTR [eax+23]
  00157	85 c9		 test	 ecx, ecx
  00159	0f 84 b9 00 00
	00		 je	 $LN52@MsgProc
; Line 845
  0015f	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00162	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00168	0f bf c2	 movsx	 eax, dx
  0016b	89 45 d0	 mov	 DWORD PTR _mousePoint$14[ebp], eax
  0016e	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00171	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00174	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0017a	0f bf d1	 movsx	 edx, cx
  0017d	89 55 d4	 mov	 DWORD PTR _mousePoint$14[ebp+4], edx
; Line 848
  00180	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00183	8b 4d d0	 mov	 ecx, DWORD PTR _mousePoint$14[ebp]
  00186	3b 88 18 02 00
	00		 cmp	 ecx, DWORD PTR [eax+536]
  0018c	0f 8c 86 00 00
	00		 jl	 $LN52@MsgProc
  00192	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00195	8b 82 18 02 00
	00		 mov	 eax, DWORD PTR [edx+536]
  0019b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019e	03 81 20 02 00
	00		 add	 eax, DWORD PTR [ecx+544]
  001a4	39 45 d0	 cmp	 DWORD PTR _mousePoint$14[ebp], eax
  001a7	7d 6f		 jge	 SHORT $LN52@MsgProc
  001a9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001ac	8b 45 d4	 mov	 eax, DWORD PTR _mousePoint$14[ebp+4]
  001af	3b 82 1c 02 00
	00		 cmp	 eax, DWORD PTR [edx+540]
  001b5	7c 61		 jl	 SHORT $LN52@MsgProc
  001b7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	8b 91 1c 02 00
	00		 mov	 edx, DWORD PTR [ecx+540]
  001c0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001c3	03 90 28 02 00
	00		 add	 edx, DWORD PTR [eax+552]
  001c9	39 55 d4	 cmp	 DWORD PTR _mousePoint$14[ebp+4], edx
  001cc	7d 4a		 jge	 SHORT $LN52@MsgProc
; Line 850
  001ce	8b f4		 mov	 esi, esp
  001d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0
  001d6	3b f4		 cmp	 esi, esp
  001d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 851
  001dd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001e0	c6 41 17 00	 mov	 BYTE PTR [ecx+23], 0
; Line 852
  001e4	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001e7	0f b6 42 16	 movzx	 eax, BYTE PTR [edx+22]
  001eb	85 c0		 test	 eax, eax
  001ed	75 0c		 jne	 SHORT $LN58@MsgProc
  001ef	c7 85 54 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv162[ebp], 1
  001f9	eb 0a		 jmp	 SHORT $LN59@MsgProc
$LN58@MsgProc:
  001fb	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
$LN59@MsgProc:
  00205	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00208	8a 95 54 ff ff
	ff		 mov	 dl, BYTE PTR tv162[ebp]
  0020e	88 51 16	 mov	 BYTE PTR [ecx+22], dl
; Line 853
  00211	b0 01		 mov	 al, 1
  00213	e9 e0 06 00 00	 jmp	 $LN56@MsgProc
$LN52@MsgProc:
; Line 859
  00218	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0021b	0f b6 48 16	 movzx	 ecx, BYTE PTR [eax+22]
  0021f	85 c9		 test	 ecx, ecx
  00221	74 07		 je	 SHORT $LN45@MsgProc
; Line 860
  00223	32 c0		 xor	 al, al
  00225	e9 ce 06 00 00	 jmp	 $LN56@MsgProc
$LN45@MsgProc:
; Line 866
  0022a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00231	74 67		 je	 SHORT $LN44@MsgProc
  00233	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00239	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0023c	3b 45 f0	 cmp	 eax, DWORD PTR _this$[ebp]
  0023f	75 59		 jne	 SHORT $LN44@MsgProc
  00241	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00247	8b 11		 mov	 edx, DWORD PTR [ecx]
  00249	8b f4		 mov	 esi, esp
  0024b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00251	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00254	ff d0		 call	 eax
  00256	3b f4		 cmp	 esi, esp
  00258	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025d	0f b6 c8	 movzx	 ecx, al
  00260	85 c9		 test	 ecx, ecx
  00262	74 36		 je	 SHORT $LN44@MsgProc
; Line 869
  00264	8b f4		 mov	 esi, esp
  00266	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00269	52		 push	 edx
  0026a	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0026d	50		 push	 eax
  0026e	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00271	51		 push	 ecx
  00272	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00278	8b 02		 mov	 eax, DWORD PTR [edx]
  0027a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00280	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00283	ff d2		 call	 edx
  00285	3b f4		 cmp	 esi, esp
  00287	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0028c	0f b6 c0	 movzx	 eax, al
  0028f	85 c0		 test	 eax, eax
  00291	74 07		 je	 SHORT $LN44@MsgProc
; Line 870
  00293	b0 01		 mov	 al, 1
  00295	e9 5e 06 00 00	 jmp	 $LN56@MsgProc
$LN44@MsgProc:
; Line 873
  0029a	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0029d	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv185[ebp], ecx
  002a3	81 bd 50 ff ff
	ff 01 01 00 00	 cmp	 DWORD PTR tv185[ebp], 257 ; 00000101H
  002ad	77 30		 ja	 SHORT $LN64@MsgProc
  002af	81 bd 50 ff ff
	ff 00 01 00 00	 cmp	 DWORD PTR tv185[ebp], 256 ; 00000100H
  002b9	0f 83 13 01 00
	00		 jae	 $LN35@MsgProc
  002bf	83 bd 50 ff ff
	ff 03		 cmp	 DWORD PTR tv185[ebp], 3
  002c6	74 6d		 je	 SHORT $LN40@MsgProc
  002c8	83 bd 50 ff ff
	ff 05		 cmp	 DWORD PTR tv185[ebp], 5
  002cf	74 64		 je	 SHORT $LN40@MsgProc
  002d1	83 bd 50 ff ff
	ff 1c		 cmp	 DWORD PTR tv185[ebp], 28 ; 0000001cH
  002d8	74 7a		 je	 SHORT $LN39@MsgProc
  002da	e9 17 06 00 00	 jmp	 $LN41@MsgProc
$LN64@MsgProc:
  002df	81 bd 50 ff ff
	ff 0d 02 00 00	 cmp	 DWORD PTR tv185[ebp], 525 ; 0000020dH
  002e9	77 35		 ja	 SHORT $LN65@MsgProc
  002eb	81 bd 50 ff ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv185[ebp], 512 ; 00000200H
  002f5	0f 83 23 04 00
	00		 jae	 $LN14@MsgProc
  002fb	81 bd 50 ff ff
	ff 04 01 00 00	 cmp	 DWORD PTR tv185[ebp], 260 ; 00000104H
  00305	0f 82 eb 05 00
	00		 jb	 $LN41@MsgProc
  0030b	81 bd 50 ff ff
	ff 05 01 00 00	 cmp	 DWORD PTR tv185[ebp], 261 ; 00000105H
  00315	0f 86 b7 00 00
	00		 jbe	 $LN35@MsgProc
  0031b	e9 d6 05 00 00	 jmp	 $LN41@MsgProc
$LN65@MsgProc:
  00320	81 bd 50 ff ff
	ff 15 02 00 00	 cmp	 DWORD PTR tv185[ebp], 533 ; 00000215H
  0032a	0f 84 b7 05 00
	00		 je	 $LN2@MsgProc
  00330	e9 c1 05 00 00	 jmp	 $LN41@MsgProc
$LN40@MsgProc:
; Line 884
  00335	c7 45 c0 ff ff
	ff ff		 mov	 DWORD PTR _pt$13[ebp], -1
  0033c	c7 45 c4 ff ff
	ff ff		 mov	 DWORD PTR _pt$13[ebp+4], -1
; Line 885
  00343	8d 55 c0	 lea	 edx, DWORD PTR _pt$13[ebp]
  00346	52		 push	 edx
  00347	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0034a	e8 00 00 00 00	 call	 ?OnMouseMove@CDXUTDialog@@AAEXABUtagPOINT@@@Z ; CDXUTDialog::OnMouseMove
; Line 886
  0034f	e9 a2 05 00 00	 jmp	 $LN41@MsgProc
$LN39@MsgProc:
; Line 895
  00354	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  0035b	74 70		 je	 SHORT $LN38@MsgProc
  0035d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00362	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00365	3b 4d f0	 cmp	 ecx, DWORD PTR _this$[ebp]
  00368	75 63		 jne	 SHORT $LN38@MsgProc
  0036a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00370	8b 02		 mov	 eax, DWORD PTR [edx]
  00372	8b f4		 mov	 esi, esp
  00374	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  0037a	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0037d	ff d2		 call	 edx
  0037f	3b f4		 cmp	 esi, esp
  00381	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00386	0f b6 c0	 movzx	 eax, al
  00389	85 c0		 test	 eax, eax
  0038b	74 40		 je	 SHORT $LN38@MsgProc
; Line 897
  0038d	83 7d 10 00	 cmp	 DWORD PTR _wParam$[ebp], 0
  00391	74 1e		 je	 SHORT $LN37@MsgProc
; Line 898
  00393	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00399	8b 11		 mov	 edx, DWORD PTR [ecx]
  0039b	8b f4		 mov	 esi, esp
  0039d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  003a3	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  003a6	ff d0		 call	 eax
  003a8	3b f4		 cmp	 esi, esp
  003aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 899
  003af	eb 1c		 jmp	 SHORT $LN38@MsgProc
$LN37@MsgProc:
; Line 900
  003b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  003b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  003b9	8b f4		 mov	 esi, esp
  003bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  003c1	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  003c4	ff d0		 call	 eax
  003c6	3b f4		 cmp	 esi, esp
  003c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN38@MsgProc:
; Line 902
  003cd	e9 24 05 00 00	 jmp	 $LN41@MsgProc
$LN35@MsgProc:
; Line 914
  003d2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  003d9	0f 84 19 01 00
	00		 je	 $LN34@MsgProc
  003df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  003e5	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  003e8	3b 55 f0	 cmp	 edx, DWORD PTR _this$[ebp]
  003eb	0f 85 07 01 00
	00		 jne	 $LN34@MsgProc
  003f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  003f6	8b 10		 mov	 edx, DWORD PTR [eax]
  003f8	8b f4		 mov	 esi, esp
  003fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00400	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00403	ff d0		 call	 eax
  00405	3b f4		 cmp	 esi, esp
  00407	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0040c	0f b6 c8	 movzx	 ecx, al
  0040f	85 c9		 test	 ecx, ecx
  00411	0f 84 e1 00 00
	00		 je	 $LN34@MsgProc
; Line 915
  00417	8d 55 ac	 lea	 edx, DWORD PTR _it$12[ebp]
  0041a	52		 push	 edx
  0041b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0041e	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00424	e8 00 00 00 00	 call	 ?cbegin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cbegin
  00429	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00430	eb 08		 jmp	 SHORT $LN33@MsgProc
$LN32@MsgProc:
  00432	8d 4d ac	 lea	 ecx, DWORD PTR _it$12[ebp]
  00435	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN33@MsgProc:
  0043a	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  00440	50		 push	 eax
  00441	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00444	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0044a	e8 00 00 00 00	 call	 ?cend@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::cend
  0044f	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv215[ebp], eax
  00455	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv215[ebp]
  0045b	89 8d 48 ff ff
	ff		 mov	 DWORD PTR tv427[ebp], ecx
  00461	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00465	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv427[ebp]
  0046b	52		 push	 edx
  0046c	8d 4d ac	 lea	 ecx, DWORD PTR _it$12[ebp]
  0046f	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00474	88 85 7b ff ff
	ff		 mov	 BYTE PTR $T7[ebp], al
  0047a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0047e	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00484	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00489	0f b6 85 7b ff
	ff ff		 movzx	 eax, BYTE PTR $T7[ebp]
  00490	85 c0		 test	 eax, eax
  00492	74 55		 je	 SHORT $LN31@MsgProc
; Line 917
  00494	8b f4		 mov	 esi, esp
  00496	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00499	51		 push	 ecx
  0049a	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  0049d	52		 push	 edx
  0049e	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  004a1	50		 push	 eax
  004a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  004a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  004aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  004b0	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  004b3	ff d0		 call	 eax
  004b5	3b f4		 cmp	 esi, esp
  004b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004bc	0f b6 c8	 movzx	 ecx, al
  004bf	85 c9		 test	 ecx, ecx
  004c1	74 21		 je	 SHORT $LN30@MsgProc
; Line 918
  004c3	c6 85 6b ff ff
	ff 01		 mov	 BYTE PTR $T5[ebp], 1
  004ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004d1	8d 4d ac	 lea	 ecx, DWORD PTR _it$12[ebp]
  004d4	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  004d9	8a 85 6b ff ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  004df	e9 14 04 00 00	 jmp	 $LN56@MsgProc
$LN30@MsgProc:
; Line 919
  004e4	e9 49 ff ff ff	 jmp	 $LN32@MsgProc
$LN31@MsgProc:
  004e9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004f0	8d 4d ac	 lea	 ecx, DWORD PTR _it$12[ebp]
  004f3	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
$LN34@MsgProc:
; Line 926
  004f8	81 7d 0c 00 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 256 ; 00000100H
  004ff	0f 85 23 01 00
	00		 jne	 $LN29@MsgProc
  00505	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  0050c	74 28		 je	 SHORT $LN28@MsgProc
  0050e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00514	e8 00 00 00 00	 call	 ?GetType@CDXUTControl@@QBEIXZ ; CDXUTControl::GetType
  00519	83 f8 06	 cmp	 eax, 6
  0051c	0f 84 06 01 00
	00		 je	 $LN29@MsgProc
  00522	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00528	e8 00 00 00 00	 call	 ?GetType@CDXUTControl@@QBEIXZ ; CDXUTControl::GetType
  0052d	83 f8 07	 cmp	 eax, 7
  00530	0f 84 f2 00 00
	00		 je	 $LN29@MsgProc
$LN28@MsgProc:
; Line 928
  00536	8d 55 98	 lea	 edx, DWORD PTR _it$11[ebp]
  00539	52		 push	 edx
  0053a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0053d	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00543	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::begin
  00548	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0054f	eb 08		 jmp	 SHORT $LN27@MsgProc
$LN26@MsgProc:
  00551	8d 4d 98	 lea	 ecx, DWORD PTR _it$11[ebp]
  00554	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator++
$LN27@MsgProc:
  00559	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  0055f	50		 push	 eax
  00560	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00563	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00569	e8 00 00 00 00	 call	 ?end@?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@2@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::end
  0056e	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv249[ebp], eax
  00574	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR tv249[ebp]
  0057a	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv431[ebp], ecx
  00580	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00584	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR tv431[ebp]
  0058a	52		 push	 edx
  0058b	8d 4d 98	 lea	 ecx, DWORD PTR _it$11[ebp]
  0058e	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator!=
  00593	88 85 6a ff ff
	ff		 mov	 BYTE PTR $T4[ebp], al
  00599	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0059d	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  005a3	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  005a8	0f b6 85 6a ff
	ff ff		 movzx	 eax, BYTE PTR $T4[ebp]
  005af	85 c0		 test	 eax, eax
  005b1	74 66		 je	 SHORT $LN25@MsgProc
; Line 930
  005b3	8d 4d 98	 lea	 ecx, DWORD PTR _it$11[ebp]
  005b6	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  005bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  005bd	e8 00 00 00 00	 call	 ?GetHotkey@CDXUTControl@@QBEIXZ ; CDXUTControl::GetHotkey
  005c2	3b 45 10	 cmp	 eax, DWORD PTR _wParam$[ebp]
  005c5	75 4d		 jne	 SHORT $LN24@MsgProc
; Line 932
  005c7	8d 4d 98	 lea	 ecx, DWORD PTR _it$11[ebp]
  005ca	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QBEAAPAVCDXUTControl@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDXUTControl *> > >::operator*
  005cf	8b 08		 mov	 ecx, DWORD PTR [eax]
  005d1	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv281[ebp], ecx
  005d7	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv281[ebp]
  005dd	8b 02		 mov	 eax, DWORD PTR [edx]
  005df	8b f4		 mov	 esi, esp
  005e1	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv281[ebp]
  005e7	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  005ea	ff d2		 call	 edx
  005ec	3b f4		 cmp	 esi, esp
  005ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 933
  005f3	c6 85 5b ff ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  005fa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00601	8d 4d 98	 lea	 ecx, DWORD PTR _it$11[ebp]
  00604	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
  00609	8a 85 5b ff ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
  0060f	e9 e4 02 00 00	 jmp	 $LN56@MsgProc
$LN24@MsgProc:
; Line 934
  00614	e9 38 ff ff ff	 jmp	 $LN26@MsgProc
$LN25@MsgProc:
; Line 935
  00619	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00620	8d 4d 98	 lea	 ecx, DWORD PTR _it$11[ebp]
  00623	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
$LN29@MsgProc:
; Line 939
  00628	81 7d 0c 00 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 256 ; 00000100H
  0062f	0f 85 e4 00 00
	00		 jne	 $LN23@MsgProc
; Line 942
  00635	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00638	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0063c	85 c9		 test	 ecx, ecx
  0063e	75 07		 jne	 SHORT $LN22@MsgProc
; Line 943
  00640	32 c0		 xor	 al, al
  00642	e9 b1 02 00 00	 jmp	 $LN56@MsgProc
$LN22@MsgProc:
; Line 945
  00647	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  0064a	89 95 38 ff ff
	ff		 mov	 DWORD PTR tv288[ebp], edx
  00650	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv288[ebp]
  00656	83 e8 09	 sub	 eax, 9
  00659	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv288[ebp], eax
  0065f	83 bd 38 ff ff
	ff 1f		 cmp	 DWORD PTR tv288[ebp], 31 ; 0000001fH
  00666	0f 87 ad 00 00
	00		 ja	 $LN23@MsgProc
  0066c	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv288[ebp]
  00672	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN70@MsgProc[ecx]
  00679	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN80@MsgProc[edx*4]
$LN19@MsgProc:
; Line 949
  00680	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00687	74 0f		 je	 SHORT $LN18@MsgProc
; Line 951
  00689	6a 01		 push	 1
  0068b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0068e	e8 00 00 00 00	 call	 ?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z ; CDXUTDialog::OnCycleFocus
  00693	e9 60 02 00 00	 jmp	 $LN56@MsgProc
$LN18@MsgProc:
; Line 953
  00698	eb 7f		 jmp	 SHORT $LN23@MsgProc
$LN17@MsgProc:
; Line 957
  0069a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  006a1	74 0f		 je	 SHORT $LN16@MsgProc
; Line 959
  006a3	6a 00		 push	 0
  006a5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  006a8	e8 00 00 00 00	 call	 ?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z ; CDXUTDialog::OnCycleFocus
  006ad	e9 46 02 00 00	 jmp	 $LN56@MsgProc
$LN16@MsgProc:
; Line 961
  006b2	eb 65		 jmp	 SHORT $LN23@MsgProc
$LN15@MsgProc:
; Line 965
  006b4	8b f4		 mov	 esi, esp
  006b6	6a 10		 push	 16			; 00000010H
  006b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  006be	3b f4		 cmp	 esi, esp
  006c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006c5	98		 cwde
  006c6	25 00 80 00 00	 and	 eax, 32768		; 00008000H
  006cb	74 0c		 je	 SHORT $LN60@MsgProc
  006cd	c7 85 34 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv302[ebp], 1
  006d7	eb 0a		 jmp	 SHORT $LN61@MsgProc
$LN60@MsgProc:
  006d9	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv302[ebp], 0
$LN61@MsgProc:
  006e3	8a 8d 34 ff ff
	ff		 mov	 cl, BYTE PTR tv302[ebp]
  006e9	88 4d 93	 mov	 BYTE PTR _bShiftDown$10[ebp], cl
; Line 966
  006ec	0f b6 55 93	 movzx	 edx, BYTE PTR _bShiftDown$10[ebp]
  006f0	85 d2		 test	 edx, edx
  006f2	75 09		 jne	 SHORT $LN62@MsgProc
  006f4	c6 85 33 ff ff
	ff 01		 mov	 BYTE PTR tv308[ebp], 1
  006fb	eb 07		 jmp	 SHORT $LN63@MsgProc
$LN62@MsgProc:
  006fd	c6 85 33 ff ff
	ff 00		 mov	 BYTE PTR tv308[ebp], 0
$LN63@MsgProc:
  00704	0f b6 85 33 ff
	ff ff		 movzx	 eax, BYTE PTR tv308[ebp]
  0070b	50		 push	 eax
  0070c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0070f	e8 00 00 00 00	 call	 ?OnCycleFocus@CDXUTDialog@@AAE_N_N@Z ; CDXUTDialog::OnCycleFocus
  00714	e9 df 01 00 00	 jmp	 $LN56@MsgProc
$LN23@MsgProc:
; Line 971
  00719	e9 d8 01 00 00	 jmp	 $LN41@MsgProc
$LN14@MsgProc:
; Line 993
  0071e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00721	0f b6 51 02	 movzx	 edx, BYTE PTR [ecx+2]
  00725	85 d2		 test	 edx, edx
  00727	75 07		 jne	 SHORT $LN13@MsgProc
; Line 994
  00729	32 c0		 xor	 al, al
  0072b	e9 c8 01 00 00	 jmp	 $LN56@MsgProc
$LN13@MsgProc:
; Line 999
  00730	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00733	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00738	0f bf c8	 movsx	 ecx, ax
  0073b	89 4d 84	 mov	 DWORD PTR _mousePoint$9[ebp], ecx
  0073e	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  00741	c1 ea 10	 shr	 edx, 16			; 00000010H
  00744	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0074a	0f bf c2	 movsx	 eax, dx
  0074d	89 45 88	 mov	 DWORD PTR _mousePoint$9[ebp+4], eax
; Line 1000
  00750	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00753	8b 55 84	 mov	 edx, DWORD PTR _mousePoint$9[ebp]
  00756	2b 91 18 02 00
	00		 sub	 edx, DWORD PTR [ecx+536]
  0075c	89 55 84	 mov	 DWORD PTR _mousePoint$9[ebp], edx
; Line 1001
  0075f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00762	8b 4d 88	 mov	 ecx, DWORD PTR _mousePoint$9[ebp+4]
  00765	2b 88 1c 02 00
	00		 sub	 ecx, DWORD PTR [eax+540]
  0076b	89 4d 88	 mov	 DWORD PTR _mousePoint$9[ebp+4], ecx
; Line 1004
  0076e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00771	0f b6 42 15	 movzx	 eax, BYTE PTR [edx+21]
  00775	85 c0		 test	 eax, eax
  00777	74 0f		 je	 SHORT $LN12@MsgProc
; Line 1005
  00779	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0077c	8b 55 88	 mov	 edx, DWORD PTR _mousePoint$9[ebp+4]
  0077f	2b 91 28 02 00
	00		 sub	 edx, DWORD PTR [ecx+552]
  00785	89 55 88	 mov	 DWORD PTR _mousePoint$9[ebp+4], edx
$LN12@MsgProc:
; Line 1011
  00788	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  0078f	74 6a		 je	 SHORT $LN11@MsgProc
  00791	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00796	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00799	3b 4d f0	 cmp	 ecx, DWORD PTR _this$[ebp]
  0079c	75 5d		 jne	 SHORT $LN11@MsgProc
  0079e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  007a4	8b 02		 mov	 eax, DWORD PTR [edx]
  007a6	8b f4		 mov	 esi, esp
  007a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  007ae	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  007b1	ff d2		 call	 edx
  007b3	3b f4		 cmp	 esi, esp
  007b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007ba	0f b6 c0	 movzx	 eax, al
  007bd	85 c0		 test	 eax, eax
  007bf	74 3a		 je	 SHORT $LN11@MsgProc
; Line 1013
  007c1	8b f4		 mov	 esi, esp
  007c3	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  007c6	51		 push	 ecx
  007c7	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  007ca	52		 push	 edx
  007cb	8d 45 84	 lea	 eax, DWORD PTR _mousePoint$9[ebp]
  007ce	50		 push	 eax
  007cf	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  007d2	51		 push	 ecx
  007d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  007d9	8b 02		 mov	 eax, DWORD PTR [edx]
  007db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  007e1	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  007e4	ff d2		 call	 edx
  007e6	3b f4		 cmp	 esi, esp
  007e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007ed	0f b6 c0	 movzx	 eax, al
  007f0	85 c0		 test	 eax, eax
  007f2	74 07		 je	 SHORT $LN11@MsgProc
; Line 1014
  007f4	b0 01		 mov	 al, 1
  007f6	e9 fd 00 00 00	 jmp	 $LN56@MsgProc
$LN11@MsgProc:
; Line 1018
  007fb	8d 4d 84	 lea	 ecx, DWORD PTR _mousePoint$9[ebp]
  007fe	51		 push	 ecx
  007ff	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00802	e8 00 00 00 00	 call	 ?GetControlAtPoint@CDXUTDialog@@QBEPAVCDXUTControl@@ABUtagPOINT@@@Z ; CDXUTDialog::GetControlAtPoint
  00807	89 85 7c ff ff
	ff		 mov	 DWORD PTR _pControl$8[ebp], eax
; Line 1019
  0080d	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR _pControl$8[ebp], 0
  00814	74 63		 je	 SHORT $LN9@MsgProc
  00816	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _pControl$8[ebp]
  0081c	8b 02		 mov	 eax, DWORD PTR [edx]
  0081e	8b f4		 mov	 esi, esp
  00820	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _pControl$8[ebp]
  00826	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00829	ff d2		 call	 edx
  0082b	3b f4		 cmp	 esi, esp
  0082d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00832	0f b6 c0	 movzx	 eax, al
  00835	85 c0		 test	 eax, eax
  00837	74 40		 je	 SHORT $LN9@MsgProc
; Line 1021
  00839	8b f4		 mov	 esi, esp
  0083b	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0083e	51		 push	 ecx
  0083f	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00842	52		 push	 edx
  00843	8d 45 84	 lea	 eax, DWORD PTR _mousePoint$9[ebp]
  00846	50		 push	 eax
  00847	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0084a	51		 push	 ecx
  0084b	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _pControl$8[ebp]
  00851	8b 02		 mov	 eax, DWORD PTR [edx]
  00853	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _pControl$8[ebp]
  00859	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0085c	ff d2		 call	 edx
  0085e	3b f4		 cmp	 esi, esp
  00860	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00865	88 45 ef	 mov	 BYTE PTR _bHandled$[ebp], al
; Line 1022
  00868	0f b6 45 ef	 movzx	 eax, BYTE PTR _bHandled$[ebp]
  0086c	85 c0		 test	 eax, eax
  0086e	74 07		 je	 SHORT $LN8@MsgProc
; Line 1023
  00870	b0 01		 mov	 al, 1
  00872	e9 81 00 00 00	 jmp	 $LN56@MsgProc
$LN8@MsgProc:
; Line 1025
  00877	eb 45		 jmp	 SHORT $LN7@MsgProc
$LN9@MsgProc:
; Line 1031
  00879	81 7d 0c 01 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 513 ; 00000201H
  00880	75 3c		 jne	 SHORT $LN7@MsgProc
  00882	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
  00889	74 33		 je	 SHORT $LN7@MsgProc
  0088b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  00891	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00894	3b 55 f0	 cmp	 edx, DWORD PTR _this$[ebp]
  00897	75 25		 jne	 SHORT $LN7@MsgProc
; Line 1033
  00899	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  0089e	8b 10		 mov	 edx, DWORD PTR [eax]
  008a0	8b f4		 mov	 esi, esp
  008a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A ; CDXUTDialog::s_pControlFocus
  008a8	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  008ab	ff d0		 call	 eax
  008ad	3b f4		 cmp	 esi, esp
  008af	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1034
  008b4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pControlFocus@CDXUTDialog@@0PAVCDXUTControl@@A, 0 ; CDXUTDialog::s_pControlFocus
$LN7@MsgProc:
; Line 1040
  008be	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  008c1	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv409[ebp], ecx
  008c7	81 bd 2c ff ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv409[ebp], 512 ; 00000200H
  008d1	74 02		 je	 SHORT $LN3@MsgProc
  008d3	eb 10		 jmp	 SHORT $LN4@MsgProc
$LN3@MsgProc:
; Line 1043
  008d5	8d 55 84	 lea	 edx, DWORD PTR _mousePoint$9[ebp]
  008d8	52		 push	 edx
  008d9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008dc	e8 00 00 00 00	 call	 ?OnMouseMove@CDXUTDialog@@AAEXABUtagPOINT@@@Z ; CDXUTDialog::OnMouseMove
; Line 1044
  008e1	32 c0		 xor	 al, al
  008e3	eb 13		 jmp	 SHORT $LN56@MsgProc
$LN4@MsgProc:
; Line 1047
  008e5	eb 0f		 jmp	 SHORT $LN41@MsgProc
$LN2@MsgProc:
; Line 1057
  008e7	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  008ea	3b 45 08	 cmp	 eax, DWORD PTR _hWnd$[ebp]
  008ed	74 07		 je	 SHORT $LN41@MsgProc
; Line 1058
  008ef	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008f2	c6 41 17 00	 mov	 BYTE PTR [ecx+23], 0
$LN41@MsgProc:
; Line 1062
  008f6	32 c0		 xor	 al, al
$LN56@MsgProc:
; Line 1063
  008f8	52		 push	 edx
  008f9	8b cd		 mov	 ecx, ebp
  008fb	50		 push	 eax
  008fc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN79@MsgProc
  00902	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00907	58		 pop	 eax
  00908	5a		 pop	 edx
  00909	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0090c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00913	59		 pop	 ecx
  00914	5f		 pop	 edi
  00915	5e		 pop	 esi
  00916	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  0091c	3b ec		 cmp	 ebp, esp
  0091e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00923	8b e5		 mov	 esp, ebp
  00925	5d		 pop	 ebp
  00926	c2 10 00	 ret	 16			; 00000010H
  00929	8d 49 00	 npad	 3
$LN79@MsgProc:
  0092c	06 00 00 00	 DD	 6
  00930	00 00 00 00	 DD	 $LN78@MsgProc
$LN78@MsgProc:
  00934	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00938	08 00 00 00	 DD	 8
  0093c	00 00 00 00	 DD	 $LN71@MsgProc
  00940	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00944	08 00 00 00	 DD	 8
  00948	00 00 00 00	 DD	 $LN72@MsgProc
  0094c	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00950	08 00 00 00	 DD	 8
  00954	00 00 00 00	 DD	 $LN73@MsgProc
  00958	ac ff ff ff	 DD	 -84			; ffffffacH
  0095c	0c 00 00 00	 DD	 12			; 0000000cH
  00960	00 00 00 00	 DD	 $LN74@MsgProc
  00964	98 ff ff ff	 DD	 -104			; ffffff98H
  00968	0c 00 00 00	 DD	 12			; 0000000cH
  0096c	00 00 00 00	 DD	 $LN75@MsgProc
  00970	84 ff ff ff	 DD	 -124			; ffffff84H
  00974	08 00 00 00	 DD	 8
  00978	00 00 00 00	 DD	 $LN76@MsgProc
$LN76@MsgProc:
  0097c	6d		 DB	 109			; 0000006dH
  0097d	6f		 DB	 111			; 0000006fH
  0097e	75		 DB	 117			; 00000075H
  0097f	73		 DB	 115			; 00000073H
  00980	65		 DB	 101			; 00000065H
  00981	50		 DB	 80			; 00000050H
  00982	6f		 DB	 111			; 0000006fH
  00983	69		 DB	 105			; 00000069H
  00984	6e		 DB	 110			; 0000006eH
  00985	74		 DB	 116			; 00000074H
  00986	00		 DB	 0
$LN75@MsgProc:
  00987	69		 DB	 105			; 00000069H
  00988	74		 DB	 116			; 00000074H
  00989	00		 DB	 0
$LN74@MsgProc:
  0098a	69		 DB	 105			; 00000069H
  0098b	74		 DB	 116			; 00000074H
  0098c	00		 DB	 0
$LN73@MsgProc:
  0098d	70		 DB	 112			; 00000070H
  0098e	74		 DB	 116			; 00000074H
  0098f	00		 DB	 0
$LN72@MsgProc:
  00990	6d		 DB	 109			; 0000006dH
  00991	6f		 DB	 111			; 0000006fH
  00992	75		 DB	 117			; 00000075H
  00993	73		 DB	 115			; 00000073H
  00994	65		 DB	 101			; 00000065H
  00995	50		 DB	 80			; 00000050H
  00996	6f		 DB	 111			; 0000006fH
  00997	69		 DB	 105			; 00000069H
  00998	6e		 DB	 110			; 0000006eH
  00999	74		 DB	 116			; 00000074H
  0099a	00		 DB	 0
$LN71@MsgProc:
  0099b	6d		 DB	 109			; 0000006dH
  0099c	6f		 DB	 111			; 0000006fH
  0099d	75		 DB	 117			; 00000075H
  0099e	73		 DB	 115			; 00000073H
  0099f	65		 DB	 101			; 00000065H
  009a0	50		 DB	 80			; 00000050H
  009a1	6f		 DB	 111			; 0000006fH
  009a2	69		 DB	 105			; 00000069H
  009a3	6e		 DB	 110			; 0000006eH
  009a4	74		 DB	 116			; 00000074H
  009a5	00		 DB	 0
  009a6	8b ff		 npad	 2
$LN80@MsgProc:
  009a8	00 00 00 00	 DD	 $LN15@MsgProc
  009ac	00 00 00 00	 DD	 $LN17@MsgProc
  009b0	00 00 00 00	 DD	 $LN19@MsgProc
  009b4	00 00 00 00	 DD	 $LN23@MsgProc
$LN70@MsgProc:
  009b8	00		 DB	 0
  009b9	03		 DB	 3
  009ba	03		 DB	 3
  009bb	03		 DB	 3
  009bc	03		 DB	 3
  009bd	03		 DB	 3
  009be	03		 DB	 3
  009bf	03		 DB	 3
  009c0	03		 DB	 3
  009c1	03		 DB	 3
  009c2	03		 DB	 3
  009c3	03		 DB	 3
  009c4	03		 DB	 3
  009c5	03		 DB	 3
  009c6	03		 DB	 3
  009c7	03		 DB	 3
  009c8	03		 DB	 3
  009c9	03		 DB	 3
  009ca	03		 DB	 3
  009cb	03		 DB	 3
  009cc	03		 DB	 3
  009cd	03		 DB	 3
  009ce	03		 DB	 3
  009cf	03		 DB	 3
  009d0	03		 DB	 3
  009d1	03		 DB	 3
  009d2	03		 DB	 3
  009d3	03		 DB	 3
  009d4	01		 DB	 1
  009d5	01		 DB	 1
  009d6	02		 DB	 2
  009d7	02		 DB	 2
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$0:
  00000	8d 4d ac	 lea	 ecx, DWORD PTR _it$12[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$1:
  00008	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$2:
  00013	8d 4d 98	 lea	 ecx, DWORD PTR _it$11[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z$3:
  0001b	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00021	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDXUTControl@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 8a 2c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-212]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?MsgProc@CDXUTDialog@@QAE_NPAUHWND__@@IIJ@Z ENDP	; CDXUTDialog::MsgProc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pManager$ = 8						; size = 4
_bRegisterDialog$ = 12					; size = 1
_szControlTextureResourceName$ = 16			; size = 4
_hControlTextureResourceModule$ = 20			; size = 4
?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_NPB_WPAUHINSTANCE__@@@Z PROC ; CDXUTDialog::Init
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 485
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 486
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pManager$[ebp]
  00014	89 88 3c 02 00
	00		 mov	 DWORD PTR [eax+572], ecx
; Line 487
  0001a	0f b6 55 0c	 movzx	 edx, BYTE PTR _bRegisterDialog$[ebp]
  0001e	85 d2		 test	 edx, edx
  00020	74 0c		 je	 SHORT $LN1@Init
; Line 488
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pManager$[ebp]
  00029	e8 00 00 00 00	 call	 ?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z ; CDXUTDialogResourceManager::RegisterDialog
$LN1@Init:
; Line 490
  0002e	8b 4d 14	 mov	 ecx, DWORD PTR _hControlTextureResourceModule$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 10	 mov	 edx, DWORD PTR _szControlTextureResourceName$[ebp]
  00035	52		 push	 edx
  00036	6a 00		 push	 0
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?SetTexture@CDXUTDialog@@QAEJIPB_WPAUHINSTANCE__@@@Z ; CDXUTDialog::SetTexture
; Line 491
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?InitDefaultElements@CDXUTDialog@@AAEXXZ ; CDXUTDialog::InitDefaultElements
; Line 492
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 10 00	 ret	 16			; 00000010H
?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_NPB_WPAUHINSTANCE__@@@Z ENDP ; CDXUTDialog::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pManager$ = 8						; size = 4
_bRegisterDialog$ = 12					; size = 1
_pszControlTextureFilename$ = 16			; size = 4
?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_NPB_W@Z PROC ; CDXUTDialog::Init
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 472
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 473
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pManager$[ebp]
  00014	89 88 3c 02 00
	00		 mov	 DWORD PTR [eax+572], ecx
; Line 474
  0001a	0f b6 55 0c	 movzx	 edx, BYTE PTR _bRegisterDialog$[ebp]
  0001e	85 d2		 test	 edx, edx
  00020	74 0c		 je	 SHORT $LN1@Init
; Line 475
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pManager$[ebp]
  00029	e8 00 00 00 00	 call	 ?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z ; CDXUTDialogResourceManager::RegisterDialog
$LN1@Init:
; Line 476
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR _pszControlTextureFilename$[ebp]
  00031	51		 push	 ecx
  00032	6a 00		 push	 0
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?SetTexture@CDXUTDialog@@QAEJIPB_W@Z ; CDXUTDialog::SetTexture
; Line 477
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?InitDefaultElements@CDXUTDialog@@AAEXXZ ; CDXUTDialog::InitDefaultElements
; Line 478
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_NPB_W@Z ENDP ; CDXUTDialog::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pManager$ = 8						; size = 4
_bRegisterDialog$ = 12					; size = 1
?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_N@Z PROC ; CDXUTDialog::Init
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 459
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 460
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pManager$[ebp]
  00014	89 88 3c 02 00
	00		 mov	 DWORD PTR [eax+572], ecx
; Line 461
  0001a	0f b6 55 0c	 movzx	 edx, BYTE PTR _bRegisterDialog$[ebp]
  0001e	85 d2		 test	 edx, edx
  00020	74 0c		 je	 SHORT $LN1@Init
; Line 462
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pManager$[ebp]
  00029	e8 00 00 00 00	 call	 ?RegisterDialog@CDXUTDialogResourceManager@@QAE_NPAVCDXUTDialog@@@Z ; CDXUTDialogResourceManager::RegisterDialog
$LN1@Init:
; Line 464
  0002e	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00033	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00038	6a 00		 push	 0
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?SetTexture@CDXUTDialog@@QAEJIPB_WPAUHINSTANCE__@@@Z ; CDXUTDialog::SetTexture
; Line 465
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?InitDefaultElements@CDXUTDialog@@AAEXXZ ; CDXUTDialog::InitDefaultElements
; Line 466
  0004a	83 c4 04	 add	 esp, 4
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Init@CDXUTDialog@@QAEXPAVCDXUTDialogResourceManager@@_N@Z ENDP ; CDXUTDialog::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv154 = -64						; size = 4
tv79 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 12
$T4 = -37						; size = 1
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDXUTDialog@@QAE@XZ PROC				; CDXUTDialog::~CDXUTDialog
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 441
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDXUTDialog@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; Line 442
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?RemoveAllControls@CDXUTDialog@@QAEXXZ ; CDXUTDialog::RemoveAllControls
; Line 444
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  00052	e8 00 00 00 00	 call	 ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
; Line 445
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  00060	e8 00 00 00 00	 call	 ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
; Line 447
  00065	8d 45 e0	 lea	 eax, DWORD PTR _it$5[ebp]
  00068	50		 push	 eax
  00069	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00072	e8 00 00 00 00	 call	 ?begin@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::begin
  00077	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0007b	eb 08		 jmp	 SHORT $LN4@CDXUTDialo
$LN3@CDXUTDialo:
  0007d	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00080	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator++
$LN4@CDXUTDialo:
  00085	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00088	51		 push	 ecx
  00089	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00092	e8 00 00 00 00	 call	 ?end@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@2@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::end
  00097	89 45 c4	 mov	 DWORD PTR tv79[ebp], eax
  0009a	8b 55 c4	 mov	 edx, DWORD PTR tv79[ebp]
  0009d	89 55 c0	 mov	 DWORD PTR tv154[ebp], edx
  000a0	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000a4	8b 45 c0	 mov	 eax, DWORD PTR tv154[ebp]
  000a7	50		 push	 eax
  000a8	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000ab	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator!=
  000b0	88 45 db	 mov	 BYTE PTR $T4[ebp], al
  000b3	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000b7	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  000ba	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
  000bf	0f b6 4d db	 movzx	 ecx, BYTE PTR $T4[ebp]
  000c3	85 c9		 test	 ecx, ecx
  000c5	74 36		 je	 SHORT $LN2@CDXUTDialo
; Line 449
  000c7	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000ca	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000cf	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d2	74 27		 je	 SHORT $LN1@CDXUTDialo
  000d4	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000d7	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000dc	8b 10		 mov	 edx, DWORD PTR [eax]
  000de	89 55 c8	 mov	 DWORD PTR $T2[ebp], edx
  000e1	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ea	83 c4 04	 add	 esp, 4
  000ed	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  000f0	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QBEAAPAUDXUTElementHolder@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DXUTElementHolder *> > >::operator*
  000f5	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@CDXUTDialo:
  000fb	eb 80		 jmp	 SHORT $LN3@CDXUTDialo
$LN2@CDXUTDialo:
; Line 450
  000fd	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00101	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  00104	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
; Line 452
  00109	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00112	e8 00 00 00 00	 call	 ?clear@?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAEXXZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::clear
; Line 453
  00117	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0011b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00124	e8 00 00 00 00	 call	 ??1?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::~vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
  00129	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0012d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00136	e8 00 00 00 00	 call	 ??1?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::~vector<CDXUTControl *,std::allocator<CDXUTControl *> >
  0013b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0013f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  00148	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  0014d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00154	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  0015d	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  00162	52		 push	 edx
  00163	8b cd		 mov	 ecx, ebp
  00165	50		 push	 eax
  00166	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@CDXUTDialo
  0016c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00171	58		 pop	 eax
  00172	5a		 pop	 edx
  00173	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00176	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017d	59		 pop	 ecx
  0017e	5f		 pop	 edi
  0017f	83 c4 40	 add	 esp, 64			; 00000040H
  00182	3b ec		 cmp	 ebp, esp
  00184	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00189	8b e5		 mov	 esp, ebp
  0018b	5d		 pop	 ebp
  0018c	c3		 ret	 0
  0018d	8d 49 00	 npad	 3
$LN16@CDXUTDialo:
  00190	01 00 00 00	 DD	 1
  00194	00 00 00 00	 DD	 $LN15@CDXUTDialo
$LN15@CDXUTDialo:
  00198	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0019c	0c 00 00 00	 DD	 12			; 0000000cH
  001a0	00 00 00 00	 DD	 $LN13@CDXUTDialo
$LN13@CDXUTDialo:
  001a4	69		 DB	 105			; 00000069H
  001a5	74		 DB	 116			; 00000074H
  001a6	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDXUTDialog@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  00009	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??1CDXUTDialog@@QAE@XZ$1:
  0000e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  00017	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??1CDXUTDialog@@QAE@XZ$2:
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00025	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::~vector<CDXUTControl *,std::allocator<CDXUTControl *> >
__unwindfunclet$??1CDXUTDialog@@QAE@XZ$3:
  0002a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00033	e9 00 00 00 00	 jmp	 ??1?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::~vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
__unwindfunclet$??1CDXUTDialog@@QAE@XZ$4:
  00038	8d 4d e0	 lea	 ecx, DWORD PTR _it$5[ebp]
  0003b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??1CDXUTDialog@@QAE@XZ$5:
  00040	8d 4d cc	 lea	 ecx, DWORD PTR $T3[ebp]
  00043	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUDXUTElementHolder@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1CDXUTDialog@@QAE@XZ:
  00048	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00052	33 c8		 xor	 ecx, eax
  00054	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00059	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDXUTDialog@@QAE@XZ
  0005e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDXUTDialog@@QAE@XZ ENDP				; CDXUTDialog::~CDXUTDialog
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDXUTDialog@@QAE@XZ PROC				; CDXUTDialog::CDXUTDialog
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 431
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDXUTDialog@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c6 00 00	 mov	 BYTE PTR [eax], 0
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	c6 41 01 00	 mov	 BYTE PTR [ecx+1], 0
  0003a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	c6 42 02 01	 mov	 BYTE PTR [edx+2], 1
  00041	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00044	c7 40 04 ff ff
	00 00		 mov	 DWORD PTR [eax+4], 65535 ; 0000ffffH
  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  00056	f2 0f 11 41 08	 movsd	 QWORD PTR [ecx+8], xmm0
  0005b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0
  00065	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	c6 41 15 00	 mov	 BYTE PTR [ecx+21], 0
  00073	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c6 42 16 00	 mov	 BYTE PTR [edx+22], 0
  0007a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	c6 40 17 00	 mov	 BYTE PTR [eax+23], 0
  00081	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	c7 81 18 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+536], 0
  0008e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00091	c7 82 1c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+540], 0
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	c7 80 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+544], 0
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	c7 81 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+548], 0
  000b5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	c7 82 28 02 00
	00 12 00 00 00	 mov	 DWORD PTR [edx+552], 18	; 00000012H
  000c2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	c7 80 2c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+556], 0
  000cf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	c7 81 30 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+560], 0
  000dc	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000df	c7 82 34 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+564], 0
  000e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	c7 80 38 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+568], 0
  000f6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	c7 81 3c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+572], 0
  00103	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00106	c7 82 40 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+576], 0
  00110	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00113	c7 80 44 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+580], 0
  0011d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  00126	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
  0012b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  0013b	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
  00140	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00144	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  0014d	e8 00 00 00 00	 call	 ??0?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::vector<CDXUTControl *,std::allocator<CDXUTControl *> >
  00152	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00156	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00159	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  0015f	e8 00 00 00 00	 call	 ??0?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
  00164	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00168	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	81 c1 88 02 00
	00		 add	 ecx, 648		; 00000288H
  00171	e8 00 00 00 00	 call	 ??0CDXUTElement@@QAE@XZ
; Line 432
  00176	b9 02 00 00 00	 mov	 ecx, 2
  0017b	6b d1 00	 imul	 edx, ecx, 0
  0017e	33 c0		 xor	 eax, eax
  00180	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	66 89 44 11 18	 mov	 WORD PTR [ecx+edx+24], ax
; Line 434
  00188	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0018b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0018e	89 82 f4 02 00
	00		 mov	 DWORD PTR [edx+756], eax
; Line 435
  00194	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0019a	89 91 f8 02 00
	00		 mov	 DWORD PTR [ecx+760], edx
; Line 436
  001a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001b4	59		 pop	 ecx
  001b5	83 c4 10	 add	 esp, 16			; 00000010H
  001b8	3b ec		 cmp	 ebp, esp
  001ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001bf	8b e5		 mov	 esp, ebp
  001c1	5d		 pop	 ebp
  001c2	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDXUTDialog@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 48 02 00
	00		 add	 ecx, 584		; 00000248H
  00009	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??0CDXUTDialog@@QAE@XZ$1:
  0000e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 58 02 00
	00		 add	 ecx, 600		; 00000258H
  00017	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??0CDXUTDialog@@QAE@XZ$2:
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	81 c1 68 02 00
	00		 add	 ecx, 616		; 00000268H
  00025	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDXUTControl@@V?$allocator@PAVCDXUTControl@@@std@@@std@@QAE@XZ ; std::vector<CDXUTControl *,std::allocator<CDXUTControl *> >::~vector<CDXUTControl *,std::allocator<CDXUTControl *> >
__unwindfunclet$??0CDXUTDialog@@QAE@XZ$3:
  0002a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	81 c1 78 02 00
	00		 add	 ecx, 632		; 00000278H
  00033	e9 00 00 00 00	 jmp	 ??1?$vector@PAUDXUTElementHolder@@V?$allocator@PAUDXUTElementHolder@@@std@@@std@@QAE@XZ ; std::vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >::~vector<DXUTElementHolder *,std::allocator<DXUTElementHolder *> >
__ehhandler$??0CDXUTDialog@@QAE@XZ:
  00038	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00042	33 c8		 xor	 ecx, eax
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDXUTDialog@@QAE@XZ
  0004e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDXUTDialog@@QAE@XZ ENDP				; CDXUTDialog::CDXUTDialog
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4CDXUTElement@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CDXUTElement@@QAEAAV0@ABV0@@Z PROC			; CDXUTElement::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00033	83 c0 0c	 add	 eax, 12			; 0000000cH
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	89 11		 mov	 DWORD PTR [ecx], edx
  00040	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00043	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00046	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00049	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0004c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0004f	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00055	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00058	51		 push	 ecx
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0005f	e8 00 00 00 00	 call	 ??4DXUTBlendColor@@QAEAAU0@ABU0@@Z
  00064	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00067	83 c2 44	 add	 edx, 68			; 00000044H
  0006a	52		 push	 edx
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 44	 add	 ecx, 68			; 00000044H
  00071	e8 00 00 00 00	 call	 ??4DXUTBlendColor@@QAEAAU0@ABU0@@Z
  00076	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00079	83 c4 04	 add	 esp, 4
  0007c	3b ec		 cmp	 ebp, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
??4CDXUTElement@@QAEAAV0@ABV0@@Z ENDP			; CDXUTElement::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CDXUTElement@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDXUTElement@@QAE@XZ PROC				; CDXUTElement::CDXUTElement, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00014	e8 00 00 00 00	 call	 ??0DXUTBlendColor@@QAE@XZ
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 44	 add	 ecx, 68			; 00000044H
  0001f	e8 00 00 00 00	 call	 ??0DXUTBlendColor@@QAE@XZ
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??0CDXUTElement@@QAE@XZ ENDP				; CDXUTElement::CDXUTElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Refresh@CDXUTElement@@QAEXXZ PROC			; CDXUTElement::Refresh
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6673
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6674
  0000e	b8 04 00 00 00	 mov	 eax, 4
  00013	d1 e0		 shl	 eax, 1
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 54 01 1c	 mov	 edx, DWORD PTR [ecx+eax+28]
  0001c	52		 push	 edx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00023	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 6675
  00028	b8 04 00 00 00	 mov	 eax, 4
  0002d	d1 e0		 shl	 eax, 1
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 54 01 44	 mov	 edx, DWORD PTR [ecx+eax+68]
  00036	52		 push	 edx
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 44	 add	 ecx, 68			; 00000044H
  0003d	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 6676
  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?Refresh@CDXUTElement@@QAEXXZ ENDP			; CDXUTElement::Refresh
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iFont$ = 8						; size = 4
_defaultFontColor$ = 12					; size = 4
_dwTextFormat$ = 16					; size = 4
?SetFont@CDXUTElement@@QAEXIKK@Z PROC			; CDXUTElement::SetFont
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6663
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6664
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _iFont$[ebp]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 6665
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 45 10	 mov	 eax, DWORD PTR _dwTextFormat$[ebp]
  0001d	89 42 08	 mov	 DWORD PTR [edx+8], eax
; Line 6667
  00020	6a 00		 push	 0
  00022	68 80 80 80 c8	 push	 -931102592		; c8808080H
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR _defaultFontColor$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 c1 44	 add	 ecx, 68			; 00000044H
  00031	e8 00 00 00 00	 call	 ?Init@DXUTBlendColor@@QAEXKKK@Z ; DXUTBlendColor::Init
; Line 6668
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 0c 00	 ret	 12			; 0000000cH
?SetFont@CDXUTElement@@QAEXIKK@Z ENDP			; CDXUTElement::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iTexture$ = 8						; size = 4
_prcTexture$ = 12					; size = 4
_defaultTextureColor$ = 16				; size = 4
?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z PROC	; CDXUTElement::SetTexture
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6648
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6649
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _iTexture$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx
; Line 6651
  00017	83 7d 0c 00	 cmp	 DWORD PTR _prcTexture$[ebp], 0
  0001b	74 21		 je	 SHORT $LN2@SetTexture
; Line 6652
  0001d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00020	83 c2 0c	 add	 edx, 12			; 0000000cH
  00023	8b 45 0c	 mov	 eax, DWORD PTR _prcTexture$[ebp]
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	89 0a		 mov	 DWORD PTR [edx], ecx
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00030	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00033	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00036	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00039	89 42 0c	 mov	 DWORD PTR [edx+12], eax
; Line 6653
  0003c	eb 16		 jmp	 SHORT $LN1@SetTexture
$LN2@SetTexture:
; Line 6654
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00044	8b f4		 mov	 esi, esp
  00046	51		 push	 ecx
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRectEmpty@4
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@SetTexture:
; Line 6656
  00054	6a 00		 push	 0
  00056	68 80 80 80 c8	 push	 -931102592		; c8808080H
  0005b	8b 55 10	 mov	 edx, DWORD PTR _defaultTextureColor$[ebp]
  0005e	52		 push	 edx
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00065	e8 00 00 00 00	 call	 ?Init@DXUTBlendColor@@QAEXKKK@Z ; DXUTBlendColor::Init
; Line 6657
  0006a	5e		 pop	 esi
  0006b	83 c4 04	 add	 esp, 4
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 0c 00	 ret	 12			; 0000000cH
?SetTexture@CDXUTElement@@QAEXIPAUtagRECT@@K@Z ENDP	; CDXUTElement::SetTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4DXUTBlendColor@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_$S1$1 = -8						; size = 4
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4DXUTBlendColor@@QAEAAU0@ABU0@@Z PROC			; DXUTBlendColor::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _$S1$1[ebp], 0
  0001f	eb 09		 jmp	 SHORT $LN3@operator
$LN2@operator:
  00021	8b 45 f8	 mov	 eax, DWORD PTR _$S1$1[ebp]
  00024	83 c0 01	 add	 eax, 1
  00027	89 45 f8	 mov	 DWORD PTR _$S1$1[ebp], eax
$LN3@operator:
  0002a	83 7d f8 06	 cmp	 DWORD PTR _$S1$1[ebp], 6
  0002e	73 14		 jae	 SHORT $LN1@operator
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _$S1$1[ebp]
  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 45 f8	 mov	 eax, DWORD PTR _$S1$1[ebp]
  00039	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0003c	8b 04 86	 mov	 eax, DWORD PTR [esi+eax*4]
  0003f	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
  00042	eb dd		 jmp	 SHORT $LN2@operator
$LN1@operator:
  00044	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00047	83 c1 18	 add	 ecx, 24			; 00000018H
  0004a	51		 push	 ecx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	83 c1 18	 add	 ecx, 24			; 00000018H
  00051	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	5e		 pop	 esi
  0005a	83 c4 08	 add	 esp, 8
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
??4DXUTBlendColor@@QAEAAU0@ABU0@@Z ENDP			; DXUTBlendColor::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DXUTBlendColor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DXUTBlendColor@@QAE@XZ PROC				; DXUTBlendColor::DXUTBlendColor, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 18	 add	 ecx, 24			; 00000018H
  00014	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@XZ ; DirectX::XMFLOAT4::XMFLOAT4
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0DXUTBlendColor@@QAE@XZ ENDP				; DXUTBlendColor::DXUTBlendColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -20						; size = 16
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetCurrent@DXUTBlendColor@@QAEXK@Z PROC		; DXUTBlendColor::SetCurrent
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6636
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6637
  0001d	8b 45 08	 mov	 eax, DWORD PTR _color$[ebp]
  00020	50		 push	 eax
  00021	8d 4d ec	 lea	 ecx, DWORD PTR $T1[ebp]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ; D3DCOLOR_TO_D3DCOLORVALUE
  0002a	83 c4 08	 add	 esp, 8
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT4::operator=
; Line 6638
  00039	83 c4 14	 add	 esp, 20			; 00000014H
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?SetCurrent@DXUTBlendColor@@QAEXK@Z ENDP		; DXUTBlendColor::SetCurrent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv134 = -116						; size = 4
$T1 = -112						; size = 16
$T2 = -96						; size = 16
_clr$ = -80						; size = 16
$T3 = -64						; size = 16
_clr1$ = -48						; size = 16
_destColor$ = -24					; size = 16
_this$ = -4						; size = 4
_iState$ = 8						; size = 4
_fElapsedTime$ = 12					; size = 4
_fRate$ = 16						; size = 4
?Blend@DXUTBlendColor@@QAEXIMM@Z PROC			; DXUTBlendColor::Blend
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6625
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  0001c	57		 push	 edi
  0001d	51		 push	 ecx
  0001e	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6626
  00031	8b 43 08	 mov	 eax, DWORD PTR _iState$[ebx]
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0003a	52		 push	 edx
  0003b	8d 45 e8	 lea	 eax, DWORD PTR _destColor$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?D3DCOLOR_TO_D3DCOLORVALUE@@YA?AUXMFLOAT4@DirectX@@K@Z ; D3DCOLOR_TO_D3DCOLORVALUE
  00044	83 c4 08	 add	 esp, 8
; Line 6627
  00047	8d 4d e8	 lea	 ecx, DWORD PTR _destColor$[ebp]
  0004a	e8 00 00 00 00	 call	 ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
  0004f	0f 29 45 c0	 movaps	 XMMWORD PTR $T3[ebp], xmm0
  00053	0f 28 45 c0	 movaps	 xmm0, XMMWORD PTR $T3[ebp]
  00057	0f 29 45 d0	 movaps	 XMMWORD PTR _clr1$[ebp], xmm0
; Line 6628
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 18	 add	 ecx, 24			; 00000018H
  00061	e8 00 00 00 00	 call	 ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
  00066	0f 29 45 a0	 movaps	 XMMWORD PTR $T2[ebp], xmm0
  0006a	0f 28 45 a0	 movaps	 xmm0, XMMWORD PTR $T2[ebp]
  0006e	0f 29 45 b0	 movaps	 XMMWORD PTR _clr$[ebp], xmm0
; Line 6629
  00072	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  0007a	f3 0f 59 43 0c	 mulss	 xmm0, DWORD PTR _fElapsedTime$[ebx]
  0007f	51		 push	 ecx
  00080	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00085	51		 push	 ecx
  00086	f3 0f 10 43 10	 movss	 xmm0, DWORD PTR _fRate$[ebx]
  0008b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00090	e8 00 00 00 00	 call	 _powf
  00095	83 c4 08	 add	 esp, 8
  00098	d9 5d 8c	 fstp	 DWORD PTR tv134[ebp]
  0009b	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  000a3	f3 0f 5c 55 8c	 subss	 xmm2, DWORD PTR tv134[ebp]
  000a8	0f 28 4d d0	 movaps	 xmm1, XMMWORD PTR _clr1$[ebp]
  000ac	0f 28 45 b0	 movaps	 xmm0, XMMWORD PTR _clr$[ebp]
  000b0	e8 00 00 00 00	 call	 ?XMVectorLerp@DirectX@@YQ?AT__m128@@T2@0M@Z ; DirectX::XMVectorLerp
  000b5	0f 29 45 90	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  000b9	0f 28 45 90	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
  000bd	0f 29 45 b0	 movaps	 XMMWORD PTR _clr$[ebp], xmm0
; Line 6630
  000c1	0f 28 45 b0	 movaps	 xmm0, XMMWORD PTR _clr$[ebp]
  000c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	83 c1 18	 add	 ecx, 24			; 00000018H
  000cb	e8 00 00 00 00	 call	 ?XMStoreFloat4@DirectX@@YQXPAUXMFLOAT4@1@T__m128@@@Z ; DirectX::XMStoreFloat4
; Line 6631
  000d0	52		 push	 edx
  000d1	8b cd		 mov	 ecx, ebp
  000d3	50		 push	 eax
  000d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Blend
  000da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000df	58		 pop	 eax
  000e0	5a		 pop	 edx
  000e1	5f		 pop	 edi
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	8b e3		 mov	 esp, ebx
  000e7	5b		 pop	 ebx
  000e8	c2 0c 00	 ret	 12			; 0000000cH
  000eb	90		 npad	 1
$LN5@Blend:
  000ec	01 00 00 00	 DD	 1
  000f0	00 00 00 00	 DD	 $LN4@Blend
$LN4@Blend:
  000f4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000f8	10 00 00 00	 DD	 16			; 00000010H
  000fc	00 00 00 00	 DD	 $LN3@Blend
$LN3@Blend:
  00100	64		 DB	 100			; 00000064H
  00101	65		 DB	 101			; 00000065H
  00102	73		 DB	 115			; 00000073H
  00103	74		 DB	 116			; 00000074H
  00104	43		 DB	 67			; 00000043H
  00105	6f		 DB	 111			; 0000006fH
  00106	6c		 DB	 108			; 0000006cH
  00107	6f		 DB	 111			; 0000006fH
  00108	72		 DB	 114			; 00000072H
  00109	00		 DB	 0
?Blend@DXUTBlendColor@@QAEXIMM@Z ENDP			; DXUTBlendColor::Blend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
_defaultColor$ = 8					; size = 4
_disabledColor$ = 12					; size = 4
_hiddenColor$ = 16					; size = 4
?Init@DXUTBlendColor@@QAEXKKK@Z PROC			; DXUTBlendColor::Init
; _this$ = ecx
; File d:\engine class\assignment 1\new scratch\dxut\optional\dxutgui.cpp
; Line 6610
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 6611
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001e	eb 09		 jmp	 SHORT $LN3@Init
$LN2@Init:
  00020	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00023	83 c0 01	 add	 eax, 1
  00026	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN3@Init:
  00029	83 7d f8 06	 cmp	 DWORD PTR _i$1[ebp], 6
  0002d	7d 0e		 jge	 SHORT $LN1@Init
; Line 6613
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	8b 45 08	 mov	 eax, DWORD PTR _defaultColor$[ebp]
  00038	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
; Line 6614
  0003b	eb e3		 jmp	 SHORT $LN2@Init
$LN1@Init:
; Line 6616
  0003d	b9 04 00 00 00	 mov	 ecx, 4
  00042	c1 e1 00	 shl	 ecx, 0
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 45 0c	 mov	 eax, DWORD PTR _disabledColor$[ebp]
  0004b	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax
; Line 6617
  0004e	b9 04 00 00 00	 mov	 ecx, 4
  00053	d1 e1		 shl	 ecx, 1
  00055	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00058	8b 45 10	 mov	 eax, DWORD PTR _hiddenColor$[ebp]
  0005b	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax
; Line 6618
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _hiddenColor$[ebp]
  00061	51		 push	 ecx
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?SetCurrent@DXUTBlendColor@@QAEXK@Z ; DXUTBlendColor::SetCurrent
; Line 6619
  0006a	83 c4 08	 add	 esp, 8
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 0c 00	 ret	 12			; 0000000cH
?Init@DXUTBlendColor@@QAEXKKK@Z ENDP			; DXUTBlendColor::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 08		 push	 8
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 21		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 10		 mov	 edx, DWORD PTR [eax]
  00065	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00068	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006b	89 11		 mov	 DWORD PTR [ecx], edx
  0006d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00070	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00073	89 55 e4	 mov	 DWORD PTR tv74[ebp], edx
  00076	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00078	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  0007f	8b 45 e4	 mov	 eax, DWORD PTR tv74[ebp]
  00082	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
  00085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  0008c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00096	59		 pop	 ecx
  00097	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 03	 shl	 eax, 3
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
tv82 = -9						; size = 1
tv79 = -8						; size = 4
tv76 = -4						; size = 4
_pObj$ = 8						; size = 4
_pstrName$ = 12						; size = 4
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z PROC	; DXUT_SetDebugName, COMDAT
; File d:\engine class\assignment 1\new scratch\dxut\core\dxutmisc.h
; Line 197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 198
  00018	83 7d 08 00	 cmp	 DWORD PTR _pObj$[ebp], 0
  0001c	74 4e		 je	 SHORT $LN2@DXUT_SetDe
; Line 199
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _pstrName$[ebp]
  00021	89 45 fc	 mov	 DWORD PTR tv76[ebp], eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR tv76[ebp]
  00027	83 c1 01	 add	 ecx, 1
  0002a	89 4d f8	 mov	 DWORD PTR tv79[ebp], ecx
$LL4@DXUT_SetDe:
  0002d	8b 55 fc	 mov	 edx, DWORD PTR tv76[ebp]
  00030	8a 02		 mov	 al, BYTE PTR [edx]
  00032	88 45 f7	 mov	 BYTE PTR tv82[ebp], al
  00035	83 45 fc 01	 add	 DWORD PTR tv76[ebp], 1
  00039	80 7d f7 00	 cmp	 BYTE PTR tv82[ebp], 0
  0003d	75 ee		 jne	 SHORT $LL4@DXUT_SetDe
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR tv76[ebp]
  00042	2b 4d f8	 sub	 ecx, DWORD PTR tv79[ebp]
  00045	89 4d f0	 mov	 DWORD PTR tv72[ebp], ecx
  00048	8b f4		 mov	 esi, esp
  0004a	8b 55 0c	 mov	 edx, DWORD PTR _pstrName$[ebp]
  0004d	52		 push	 edx
  0004e	8b 45 f0	 mov	 eax, DWORD PTR tv72[ebp]
  00051	50		 push	 eax
  00052	68 00 00 00 00	 push	 OFFSET _WKPDID_D3DDebugObjectName
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pObj$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 45 08	 mov	 eax, DWORD PTR _pObj$[ebp]
  0005f	50		 push	 eax
  00060	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  00063	ff d1		 call	 ecx
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUT_SetDe:
; Line 200
  0006c	5e		 pop	 esi
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ENDP	; DXUT_SetDebugName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001e	74 67		 je	 SHORT $LN5@Orphan_me
; Line 196
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	83 c2 04	 add	 edx, 4
  00028	89 55 f8	 mov	 DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
  0002b	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0002e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00031	74 17		 je	 SHORT $LN2@Orphan_me
  00033	8b 4d f8	 mov	 ecx, DWORD PTR __Pnext$1[ebp]
  00036	8b 11		 mov	 edx, DWORD PTR [ecx]
  00038	3b 55 fc	 cmp	 edx, DWORD PTR _this$[ebp]
  0003b	74 0d		 je	 SHORT $LN2@Orphan_me
; Line 198
  0003d	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	83 c1 04	 add	 ecx, 4
  00045	89 4d f8	 mov	 DWORD PTR __Pnext$1[ebp], ecx
  00048	eb e1		 jmp	 SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
  0004a	8b 55 f8	 mov	 edx, DWORD PTR __Pnext$1[ebp]
  0004d	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00050	75 21		 jne	 SHORT $LN1@Orphan_me
; Line 201
  00052	8b f4		 mov	 esi, esp
  00054	68 c9 00 00 00	 push	 201			; 000000c9H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Orphan_me:
; Line 202
  00073	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007c	89 10		 mov	 DWORD PTR [eax], edx
; Line 203
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
  00087	5e		 pop	 esi
  00088	83 c4 08	 add	 esp, 8
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4
; Line 189
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 183
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	75 09		 jne	 SHORT $LN3@Getcont
  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
  00026	eb 0a		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	8b 02		 mov	 eax, DWORD PTR [edx]
  0002f	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
$LN4@Getcont:
  00032	8b 45 f8	 mov	 eax, DWORD PTR tv68[ebp]
; Line 184
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 178
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 179
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -40						; size = 4
__Parent_proxy$3 = -32					; size = 4
__Lock$4 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001d	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00020	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00023	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00026	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00029	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c5		 xor	 eax, ebp
  00039	50		 push	 eax
  0003a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00043	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 149
  00046	83 7d 08 00	 cmp	 DWORD PTR __Parent$[ebp], 0
  0004a	75 3e		 jne	 SHORT $LN3@Adopt
; Line 152
  0004c	8b f4		 mov	 esi, esp
  0004e	6a 03		 push	 3
  00050	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
  0006f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00076	8b f4		 mov	 esi, esp
  00078	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 156
  00088	eb 6b		 jmp	 SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
  0008a	8b 45 08	 mov	 eax, DWORD PTR __Parent$[ebp]
  0008d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008f	89 4d e0	 mov	 DWORD PTR __Parent_proxy$3[ebp], ecx
; Line 161
  00092	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00095	8b 02		 mov	 eax, DWORD PTR [edx]
  00097	3b 45 e0	 cmp	 eax, DWORD PTR __Parent_proxy$3[ebp]
  0009a	74 59		 je	 SHORT $LN4@Adopt
; Line 163
  0009c	8b f4		 mov	 esi, esp
  0009e	6a 03		 push	 3
  000a0	8d 4d d8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
  000bf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	8b 55 e0	 mov	 edx, DWORD PTR __Parent_proxy$3[ebp]
  000c5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c8	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 166
  000cb	8b 4d e0	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  000ce	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000d1	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 167
  000d4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 4d e0	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  000da	89 08		 mov	 DWORD PTR [eax], ecx
; Line 168
  000dc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e3	8b f4		 mov	 esi, esp
  000e5	8d 4d d8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  000e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ee	3b f4		 cmp	 esi, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@Adopt:
; Line 174
  000f5	52		 push	 edx
  000f6	8b cd		 mov	 ecx, ebp
  000f8	50		 push	 eax
  000f9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@Adopt
  000ff	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00104	58		 pop	 eax
  00105	5a		 pop	 edx
  00106	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00109	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00110	59		 pop	 ecx
  00111	5e		 pop	 esi
  00112	83 c4 2c	 add	 esp, 44			; 0000002cH
  00115	3b ec		 cmp	 ebp, esp
  00117	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c2 04 00	 ret	 4
  00122	8b ff		 npad	 2
$LN12@Adopt:
  00124	02 00 00 00	 DD	 2
  00128	00 00 00 00	 DD	 $LN11@Adopt
$LN11@Adopt:
  0012c	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00130	04 00 00 00	 DD	 4
  00134	00 00 00 00	 DD	 $LN8@Adopt
  00138	d8 ff ff ff	 DD	 -40			; ffffffd8H
  0013c	04 00 00 00	 DD	 4
  00140	00 00 00 00	 DD	 $LN9@Adopt
$LN9@Adopt:
  00144	5f		 DB	 95			; 0000005fH
  00145	4c		 DB	 76			; 0000004cH
  00146	6f		 DB	 111			; 0000006fH
  00147	63		 DB	 99			; 00000063H
  00148	6b		 DB	 107			; 0000006bH
  00149	00		 DB	 0
$LN8@Adopt:
  0014a	5f		 DB	 95			; 0000005fH
  0014b	4c		 DB	 76			; 0000004cH
  0014c	6f		 DB	 111			; 0000006fH
  0014d	63		 DB	 99			; 00000063H
  0014e	6b		 DB	 107			; 0000006bH
  0014f	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d d8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 142
  0001b	8b f4		 mov	 esi, esp
  0001d	6a 03		 push	 3
  0001f	8d 4d f4	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 143
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
  00037	8b f4		 mov	 esi, esp
  00039	8d 4d f4	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	52		 push	 edx
  0004a	8b cd		 mov	 ecx, ebp
  0004c	50		 push	 eax
  0004d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iterator_b
  00053	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00058	58		 pop	 eax
  00059	5a		 pop	 edx
  0005a	5e		 pop	 esi
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
  00069	8d 49 00	 npad	 3
$LN5@Iterator_b:
  0006c	01 00 00 00	 DD	 1
  00070	00 00 00 00	 DD	 $LN4@Iterator_b
$LN4@Iterator_b:
  00074	f4 ff ff ff	 DD	 -12			; fffffff4H
  00078	04 00 00 00	 DD	 4
  0007c	00 00 00 00	 DD	 $LN3@Iterator_b
$LN3@Iterator_b:
  00080	5f		 DB	 95			; 0000005fH
  00081	4c		 DB	 76			; 0000004cH
  00082	6f		 DB	 111			; 0000006fH
  00083	63		 DB	 99			; 00000063H
  00084	6b		 DB	 107			; 0000006bH
  00085	00		 DB	 0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 124
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001d	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00020	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00023	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 125
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00044	75 02		 jne	 SHORT $LN4@operator
  00046	eb 56		 jmp	 SHORT $LN3@operator
$LN4@operator:
; Line 127
  00048	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0004b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0004e	74 12		 je	 SHORT $LN2@operator
; Line 128
  00050	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	8b 02		 mov	 eax, DWORD PTR [edx]
  00057	50		 push	 eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 129
  00060	eb 3c		 jmp	 SHORT $LN3@operator
$LN2@operator:
; Line 132
  00062	8b f4		 mov	 esi, esp
  00064	6a 03		 push	 3
  00066	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0006f	3b f4		 cmp	 esi, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 133
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 135
  00085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008c	8b f4		 mov	 esi, esp
  0008e	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00097	3b f4		 cmp	 esi, esp
  00099	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@operator:
; Line 136
  0009e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
; Line 137
  000a1	52		 push	 edx
  000a2	8b cd		 mov	 ecx, ebp
  000a4	50		 push	 eax
  000a5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@operator
  000ab	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b0	58		 pop	 eax
  000b1	5a		 pop	 edx
  000b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bc	59		 pop	 ecx
  000bd	5e		 pop	 esi
  000be	83 c4 1c	 add	 esp, 28			; 0000001cH
  000c1	3b ec		 cmp	 ebp, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
  000ce	8b ff		 npad	 2
$LN11@operator:
  000d0	01 00 00 00	 DD	 1
  000d4	00 00 00 00	 DD	 $LN10@operator
$LN10@operator:
  000d8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000dc	04 00 00 00	 DD	 4
  000e0	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000e4	5f		 DB	 95			; 0000005fH
  000e5	4c		 DB	 76			; 0000004cH
  000e6	6f		 DB	 111			; 0000006fH
  000e7	63		 DB	 99			; 00000063H
  000e8	6b		 DB	 107			; 0000006bH
  000e9	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 119
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 120
  00021	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00024	52		 push	 edx
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 121
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 115
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 69
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMVectorLerp@DirectX@@YQ?AT__m128@@T2@0M@Z
_TEXT	SEGMENT
$T1 = -160						; size = 16
$T2 = -144						; size = 16
_Result$ = -128						; size = 16
$T3 = -112						; size = 16
_S$ = -96						; size = 16
$T4 = -80						; size = 16
_L$ = -64						; size = 16
_t$ = -36						; size = 4
_V1$ = -32						; size = 16
_V0$ = -16						; size = 16
?XMVectorLerp@DirectX@@YQ?AT__m128@@T2@0M@Z PROC	; DirectX::XMVectorLerp, COMDAT
; _V0$ = xmm0
; _V1$ = xmm1
; _t$ = xmm2s
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
; Line 5800
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  0001c	57		 push	 edi
  0001d	51		 push	 ecx
  0001e	8d bd 60 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-160]
  00024	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	59		 pop	 ecx
  00031	f3 0f 11 55 dc	 movss	 DWORD PTR _t$[ebp], xmm2
  00036	0f 29 4d e0	 movaps	 XMMWORD PTR _V1$[ebp], xmm1
  0003a	0f 29 45 f0	 movaps	 XMMWORD PTR _V0$[ebp], xmm0
; Line 5813
  0003e	0f 28 45 e0	 movaps	 xmm0, XMMWORD PTR _V1$[ebp]
  00042	0f 5c 45 f0	 subps	 xmm0, XMMWORD PTR _V0$[ebp]
  00046	0f 29 45 b0	 movaps	 XMMWORD PTR $T4[ebp], xmm0
  0004a	0f 28 45 b0	 movaps	 xmm0, XMMWORD PTR $T4[ebp]
  0004e	0f 29 45 c0	 movaps	 XMMWORD PTR _L$[ebp], xmm0
; Line 5814
  00052	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _t$[ebp]
  00057	0f c6 c0 00	 shufps	 xmm0, xmm0, 0
  0005b	0f 29 45 90	 movaps	 XMMWORD PTR $T3[ebp], xmm0
  0005f	0f 28 45 90	 movaps	 xmm0, XMMWORD PTR $T3[ebp]
  00063	0f 29 45 a0	 movaps	 XMMWORD PTR _S$[ebp], xmm0
; Line 5815
  00067	0f 28 45 c0	 movaps	 xmm0, XMMWORD PTR _L$[ebp]
  0006b	0f 59 45 a0	 mulps	 xmm0, XMMWORD PTR _S$[ebp]
  0006f	0f 29 85 70 ff
	ff ff		 movaps	 XMMWORD PTR $T2[ebp], xmm0
  00076	0f 28 85 70 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T2[ebp]
  0007d	0f 29 45 80	 movaps	 XMMWORD PTR _Result$[ebp], xmm0
; Line 5816
  00081	0f 28 45 80	 movaps	 xmm0, XMMWORD PTR _Result$[ebp]
  00085	0f 58 45 f0	 addps	 xmm0, XMMWORD PTR _V0$[ebp]
  00089	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00090	0f 28 85 60 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 5819
  00097	5f		 pop	 edi
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	8b e3		 mov	 esp, ebx
  0009d	5b		 pop	 ebx
  0009e	c3		 ret	 0
?XMVectorLerp@DirectX@@YQ?AT__m128@@T2@0M@Z ENDP	; DirectX::XMVectorLerp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMStoreFloat4@DirectX@@YQXPAUXMFLOAT4@1@T__m128@@@Z
_TEXT	SEGMENT
_V$ = -32						; size = 16
_pDestination$ = -4					; size = 4
?XMStoreFloat4@DirectX@@YQXPAUXMFLOAT4@1@T__m128@@@Z PROC ; DirectX::XMStoreFloat4, COMDAT
; _pDestination$ = ecx
; _V$ = xmm0
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
; Line 1585
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0001f	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	0f 29 45 e0	 movaps	 XMMWORD PTR _V$[ebp], xmm0
  00030	89 4d fc	 mov	 DWORD PTR _pDestination$[ebp], ecx
; Line 1586
  00033	83 7d fc 00	 cmp	 DWORD PTR _pDestination$[ebp], 0
  00037	75 21		 jne	 SHORT $LN3@XMStoreFlo
  00039	8b f4		 mov	 esi, esp
  0003b	68 32 06 00 00	 push	 1586			; 00000632H
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@XMStoreFlo:
; Line 1595
  0005a	0f 10 45 e0	 movups	 xmm0, XMMWORD PTR _V$[ebp]
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _pDestination$[ebp]
  00061	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; Line 1598
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	8b e3		 mov	 esp, ebx
  0006b	5b		 pop	 ebx
  0006c	c3		 ret	 0
?XMStoreFloat4@DirectX@@YQXPAUXMFLOAT4@1@T__m128@@@Z ENDP ; DirectX::XMStoreFloat4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
_pSource$ = -4						; size = 4
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z PROC ; DirectX::XMLoadFloat4, COMDAT
; _pSource$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
; Line 701
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0001f	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	89 4d fc	 mov	 DWORD PTR _pSource$[ebp], ecx
; Line 702
  0002f	83 7d fc 00	 cmp	 DWORD PTR _pSource$[ebp], 0
  00033	75 21		 jne	 SHORT $LN3@XMLoadFloa
  00035	8b f4		 mov	 esi, esp
  00037	68 be 02 00 00	 push	 702			; 000002beH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@XMLoadFloa:
; Line 713
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _pSource$[ebp]
  00059	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  0005c	0f 29 45 e0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00060	0f 28 45 e0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 716
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	8b e3		 mov	 esp, ebx
  0006b	5b		 pop	 ebx
  0006c	c3		 ret	 0
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ENDP ; DirectX::XMLoadFloat4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Float4$ = 8						; size = 4
??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z PROC		; DirectX::XMFLOAT4::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _Float4$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _Float4$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _Float4$[ebp]
  0002a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _Float4$[ebp]
  00036	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00039	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??4XMFLOAT4@DirectX@@QAEAAU01@ABU01@@Z ENDP		; DirectX::XMFLOAT4::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4@DirectX@@QAE@MMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0XMFLOAT4@DirectX@@QAE@MMMM@Z PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00016	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00022	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR __z$[ebp]
  0002f	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR __w$[ebp]
  0003c	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 10 00	 ret	 16			; 00000010H
??0XMFLOAT4@DirectX@@QAE@MMMM@Z ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 578
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT4@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Float3$ = 8						; size = 4
??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z PROC		; DirectX::XMFLOAT3::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 527
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _Float3$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _Float3$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _Float3$[ebp]
  0002a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??4XMFLOAT3@DirectX@@QAEAAU01@ABU01@@Z ENDP		; DirectX::XMFLOAT3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3@DirectX@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0XMFLOAT3@DirectX@@QAE@MMM@Z PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 524
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00016	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00022	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR __z$[ebp]
  0002f	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
??0XMFLOAT3@DirectX@@QAE@MMM@Z ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT3@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 523
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT3@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Float2$ = 8						; size = 4
??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z PROC		; DirectX::XMFLOAT2::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 475
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _Float2$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _Float2$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4XMFLOAT2@DirectX@@QAEAAU01@ABU01@@Z ENDP		; DirectX::XMFLOAT2::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2@DirectX@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0XMFLOAT2@DirectX@@QAE@MM@Z PROC			; DirectX::XMFLOAT2::XMFLOAT2, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 472
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00016	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00022	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
??0XMFLOAT2@DirectX@@QAE@MM@Z ENDP			; DirectX::XMFLOAT2::XMFLOAT2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT2@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT2::XMFLOAT2, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 471
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT2@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT2::XMFLOAT2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _powf
_TEXT	SEGMENT
tv72 = -4						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_powf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 759
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 760
  0000b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]
  00010	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR __Y$[ebp]
  00015	e8 00 00 00 00	 call	 ___libm_sse2_powf
  0001a	f3 0f 11 45 fc	 movss	 DWORD PTR tv72[ebp], xmm0
  0001f	d9 45 fc	 fld	 DWORD PTR tv72[ebp]
; Line 761
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_powf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
; Line 105
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new.h
; Line 103
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
